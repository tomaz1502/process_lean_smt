open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x10 : Int}
variable {x6 : Int}
variable {x14 : Int}
variable {x2 : Int}
variable {x9 : Int}
variable {x4 : Int}
variable {x5 : Int}
variable {x5 : Int}
variable {x12 : Int}
variable {x9 : Int}
variable {x1 : Int}
variable {x2 : Int}
variable {x13 : Int}
variable {x14 : Int}
variable {x0 : Int}
variable {x11 : Int}
variable {x12 : Int}
variable {x8 : Int}
variable {x11 : Int}
variable {x13 : Int}
variable {x0 : Int}
variable {x6 : Int}
variable {x8 : Int}
variable {x10 : Int}
variable {x1 : Int}
variable {x4 : Int}
variable {x7 : Int}
variable {x7 : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 2)
  let let6 := (Neg.neg let5)
  let let7 := (binrel% HMul.hMul let6 x12)
  let let8 := (Int.ofNat 1)
  let let9 := (Neg.neg let8)
  let let10 := (binrel% HMul.hMul let9 x10)
  let let11 := (binrel% HMul.hMul let5 x7)
  let let12 := (binrel% HMul.hMul let9 x4)
  let let13 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let10 let7)))))
  let let14 := (binrel% GE.ge let13 let1)
  let let15 := (Not let14)
  let let16 := (binrel% LT.lt let13 let1)
  let let17 := (Rat.ofInt 2)
  let let18 := (binrel% GT.gt let17 let1)
  let let19 := (binrel% HMul.hMul let9 x13)
  let let20 := (binrel% HMul.hMul let9 x11)
  let let21 := (binrel% HMul.hMul let9 x8)
  let let22 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x12 let19)))))
  let let23 := (binrel% GE.ge let22 let1)
  let let24 := (Not let23)
  let let25 := (binrel% LT.lt let22 let1)
  let let26 := (Rat.ofInt 6)
  let let27 := (binrel% GT.gt let26 let1)
  let let28 := (Int.ofNat 4)
  let let29 := (Neg.neg let28)
  let let30 := (binrel% HMul.hMul let29 x6)
  let let31 := (binrel% HMul.hMul x6 let29)
  let let32 := (binrel% HDiv.hDiv let8 let5)
  let let33 := (Neg.neg let32)
  let let34 := (Rat.ofInt 0)
  let let35 := (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd let34 let32))
  let let36 := (binrel% HMul.hMul let5 x0)
  let let37 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let21 x14)))))
  let let38 := (binrel% GE.ge let37 let8)
  let let39 := (Not let38)
  let let40 := (Not let39)
  let let41 := (Eq let38 let40)
  let let42 := (Eq let40 let38)
  let let43 := (binrel% HMul.hMul let6 x7)
  let let44 := (binrel% HMul.hMul x7 let6)
  let let45 := (Neg.neg x1)
  let let46 := (binrel% HMul.hMul x4 let6)
  let let47 := (Neg.neg x8)
  let let48 := (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let46 let45))))
  let let49 := (binrel% HAdd.hAdd x9 x11)
  let let50 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let49 let47) let46) let45)
  let let51 := (Rat.ofInt 5)
  let let52 := (binrel% GT.gt let51 let1)
  let let53 := (binrel% HMul.hMul let6 x4)
  let let54 := (binrel% HAdd.hAdd x13 x14)
  let let55 := (binrel% HMul.hMul let6 x10)
  let let56 := (binrel% HMul.hMul let9 x9)
  let let57 := (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let55 let54)))
  let let58 := (binrel% GE.ge let57 let5)
  let let59 := (Not let58)
  let let60 := (binrel% LT.lt let57 let5)
  let let61 := (binrel% HMul.hMul let9 x1)
  let let62 := (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let21 let49)))
  let let63 := (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let53 let61))))
  let let64 := (binrel% LE.le let22 let9)
  let let65 := (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let10 x11)))))
  let let66 := (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x4 let61)))))
  let let67 := (binrel% LE.le let34 let33)
  let let68 := (binrel% HMul.hMul let9 x12)
  let let69 := (binrel% HMul.hMul let9 x0)
  let let70 := (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 let68)))))
  let let71 := (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x10 let68)))))
  let let72 := (Neg.neg x4)
  let let73 := (binrel% HMul.hMul let5 x12)
  let let74 := (Int.ofNat 3)
  let let75 := (Neg.neg let74)
  let let76 := (binrel% HMul.hMul let5 x9)
  let let77 := (binrel% HMul.hMul let5 x6)
  let let78 := (binrel% HMul.hMul let9 x2)
  let let79 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x10) (binrel% HAdd.hAdd let73 (binrel% HMul.hMul let5 x14)))))))))
  let let80 := (binrel% GE.ge let79 let9)
  let let81 := (Not let80)
  let let82 := (Not let81)
  let let83 := (binrel% HMul.hMul let26 let1)
  let let84 := (Neg.neg x12)
  let let85 := (Neg.neg x0)
  let let86 := (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x10 let84)))))
  let let87 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x5) x9) let85) x10) let84)
  let let88 := (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let21 x4)))))
  let let89 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let21 x12)))))
  let let90 := (Neg.neg x2)
  let let91 := (binrel% LE.le let37 let1)
  let let92 := (binrel% HMul.hMul let6 x11)
  let let93 := (binrel% HMul.hMul let6 x9)
  let let94 := (binrel% HMul.hMul let6 x5)
  let let95 := (Rat.ofInt (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let92 let73))))))
  let let96 := (binrel% HMul.hMul let9 x5)
  let let97 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let20 x12)))))
  let let98 := (binrel% HMul.hMul let17 let97)
  let let99 := (binrel% HMul.hMul let29 x0)
  let let100 := (binrel% HMul.hMul x0 let29)
  let let101 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd x7 let10)))
  let let102 := (binrel% GE.ge let101 let1)
  let let103 := (binrel% HMul.hMul let9 x7)
  let let104 := (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let103 x10)))
  let let105 := (binrel% LE.le let104 let1)
  let let106 := (Int.ofNat 6)
  let let107 := (binrel% HMul.hMul let106 x10)
  let let108 := (binrel% HMul.hMul x10 let106)
  let let109 := (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd x8 let55))))
  let let110 := (Neg.neg x10)
  let let111 := (Neg.neg let106)
  let let112 := (binrel% HMul.hMul let111 x14)
  let let113 := (Int.ofNat 12)
  let let114 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x9) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x12) let112)))))))
  let let115 := (Int.ofNat 5)
  let let116 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let115) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 10)) x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x13) (binrel% HMul.hMul let115 x14))))))
  let let117 := (binrel% HMul.hMul let5 x11)
  let let118 := (binrel% HMul.hMul let6 x8)
  let let119 := (binrel% HMul.hMul let6 x1)
  let let120 := (Rat.ofInt (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd (binrel% HMul.hMul let29 x4) (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let76 let117)))))
  let let121 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x9) let112)))
  let let122 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x8) (binrel% HMul.hMul let106 x14)))))))
  let let123 := (binrel% HMul.hMul let5 x2)
  let let124 := (Rat.ofInt (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let73 (binrel% HMul.hMul let6 x13)))))))
  let let125 := (binrel% HMul.hMul let74 x12)
  let let126 := (binrel% HMul.hMul let75 x0)
  let let127 := (Rat.ofInt (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x8) (binrel% HAdd.hAdd let125 (binrel% HMul.hMul let74 x14)))))
  let let128 := (Rat.ofInt (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x7) (binrel% HAdd.hAdd let125 (binrel% HMul.hMul let75 x13)))))))))
  let let129 := (binrel% HMul.hMul let5 x4)
  let let130 := (Rat.ofInt (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x8) (binrel% HAdd.hAdd let55 let117))))))
  let let131 := (Rat.ofInt let13)
  let let132 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x6) (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x10) (binrel% HAdd.hAdd let7 (binrel% HMul.hMul let6 x14))))))))))
  let let133 := (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let116 let114)))))))))))
  let let134 := (binrel% LE.le let57 let8)
  let let135 := (Neg.neg x11)
  let let136 := (Neg.neg x13)
  let let137 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let47 x12)))))
  let let138 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) let136) let135) let47) x12)
  let let139 := (binrel% HMul.hMul x9 let6)
  let let140 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) let139)
  let let141 := (binrel% LE.le let1 let140)
  let let142 := (binrel% LE.le let138 let9)
  let let143 := (binrel% HMul.hMul x10 let6)
  let let144 := (Neg.neg x9)
  let let145 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let54 let144) x8) let143)
  let let146 := (binrel% LE.le let145 let8)
  let let147 := (Neg.neg x7)
  let let148 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let90 x5) let147)
  let let149 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let148 x13) x0) x4) let45) let84)
  let let150 := (binrel% LE.le let1 let149)
  let let151 := (binrel% HMul.hMul x12 let6)
  let let152 := (binrel% HMul.hMul x7 let5)
  let let153 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let152 x9) let110) let72) x1) let151)
  let let154 := (binrel% LE.le let153 let9)
  let let155 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let85 x14) x8) x12)
  let let156 := (binrel% LE.le let155 let1)
  let let157 := (binrel% HAdd.hAdd let148 x10)
  let let158 := (binrel% LE.le let157 let1)
  let let159 := (binrel% HMul.hMul x0 let5)
  let let160 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x5) x6) let159) let47) x4)
  let let161 := (binrel% LE.le let160 let1)
  let let162 := (binrel% LE.le let8 let87)
  let let163 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) let110) x4) let45)
  let let164 := (binrel% LE.le let163 let9)
  let let165 := (binrel% LE.le let50 let1)
  let let166 := (binrel% HMul.hMul x12 let29)
  let let167 := (binrel% HMul.hMul x14 let29)
  let let168 := (binrel% HMul.hMul x9 let29)
  let let169 := (binrel% HMul.hMul x5 let6)
  let let170 := (binrel% HMul.hMul x2 let5)
  let let171 := (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let108 let166))))))))
  let let172 := (binrel% GE.ge let171 let28)
  let let173 := (Not let172)
  let let174 := (And let173 (And let165 (And let164 (And let162 (And let161 (And let158 (And let156 (And let154 (And let150 (And let146 (And let142 let141)))))))))))
  let let175 := (And let173 (And (And (And (And (And (And (And (And (And (And let165 let164) let162) let161) let158) let156) let154) let150) let146) let142) let141))
  let let176 := (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let47 x4)))))
  let let177 := (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 let139))
  let let178 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let68 x13)))))))
  let let179 := (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd let61 let68)))))))
  let let180 := (binrel% HMul.hMul let26 let37)
  let let181 := (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x1 let7)))))
  let let182 := (binrel% LT.lt let79 let9)
  let let183 := (binrel% HMul.hMul let9 x14)
  let let184 := (binrel% HMul.hMul let33 x7)
  let let185 := (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x6) (binrel% HAdd.hAdd let184 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv let74 let5) x10) (binrel% HAdd.hAdd let68 let183))))))))
  let let186 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x5) (binrel% HAdd.hAdd let184 (binrel% HMul.hMul let32 x10))))
  let let187 := (binrel% HAdd.hAdd x12 x14)
  let let188 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let55 let187)))))
  let let189 := (Rat.ofInt let188)
  let let190 := (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd let186 let185))
  let let191 := (binrel% HMul.hMul let29 x14)
  let let192 := (binrel% HMul.hMul let29 x12)
  let let193 := (binrel% HMul.hMul let29 x9)
  let let194 := (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let192 let191))))))))
  let let195 := (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let107 let192))))))))
  let let196 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let68 let183)))
  let let197 := (Neg.neg (Rat.ofInt 3))
  let let198 := (binrel% HMul.hMul let197 let196)
  let let199 := (Not let15)
  let let200 := (Eq let199 let14)
  let let201 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let93 x14))
  let let202 := (Neg.neg let26)
  let let203 := (binrel% HMul.hMul let202 let201)
  let let204 := (binrel% GE.ge let194 let28)
  let let205 := (binrel% GE.ge let178 let1)
  let let206 := (binrel% LE.le let1 let178)
  let let207 := (binrel% GE.ge let188 let1)
  let let208 := (Not let207)
  let let209 := (binrel% LT.lt let188 let1)
  let let210 := (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1 let151)))))
  let let211 := (Eq let38 let38)
  let let212 := (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd x8 let143))))
  let let213 := (binrel% GE.ge let196 let1)
  let let214 := (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x8 let187))
  let let215 := (binrel% LE.le let214 let1)
  let let216 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd let45 let84)))))))
  let let217 := (binrel% LE.le let13 let9)
  let let218 := (binrel% HMul.hMul let2 let1)
  let let219 := (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd x4 let45)))))
  let let220 := (Eq let14 let14)
  let let221 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let147 x10)))
  let let222 := (Eq let207 let207)
  let let223 := (Neg.neg let17)
  let let224 := (binrel% HMul.hMul let223 let1)
  let let225 := (binrel% LT.lt let33 let1)
  let let226 := (binrel% LE.le let188 let9)
  let let227 := (binrel% GE.ge let97 let1)
  let let228 := (Eq let227 let227)
  let let229 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let56 let20))))
  let let230 := (binrel% GE.ge let229 let1)
  let let231 := (binrel% LE.le let62 let1)
  let let232 := (binrel% HMul.hMul let33 let9)
  let let233 := (Eq let58 let58)
  let let234 := (binrel% HMul.hMul let33 let1)
  let let235 := (Not let59)
  let let236 := (Eq let235 let58)
  let let237 := (binrel% HMul.hMul let33 let79)
  let let238 := (Not let208)
  let let239 := (Eq let238 let207)
  let let240 := (binrel% HMul.hMul let17 let9)
  let let241 := (binrel% HMul.hMul let33 let101)
  let let242 := (Eq let207 let238)
  let let243 := (binrel% HMul.hMul let197 let1)
  let let244 := (binrel% HMul.hMul let2 let188)
  let let245 := (Not let227)
  let let246 := (binrel% LE.le let8 let70)
  let let247 := (binrel% HMul.hMul let223 let8)
  let let248 := (binrel% GT.gt let2 let1)
  let let249 := (binrel% LT.lt let197 let1)
  let let250 := (Not let226)
  let let251 := (binrel% GT.gt let188 let9)
  let let252 := (Eq let251 let250)
  let let253 := (Not let245)
  let let254 := (Eq let253 let227)
  let let255 := (Eq let227 let253)
  let let256 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd x10 let20)))))
  let let257 := (binrel% GE.ge let256 let8)
  let let258 := (binrel% LE.le let65 let9)
  let let259 := (Eq let14 let199)
  let let260 := (Eq let23 let23)
  let let261 := (binrel% LT.lt let97 let1)
  let let262 := (Not let24)
  let let263 := (Eq let262 let23)
  let let264 := (Eq let23 let262)
  let let265 := (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x8 x12))
  let let266 := (binrel% HAdd.hAdd let85 let265)
  let let267 := (Not True)
  let let268 := (binrel% HMul.hMul let2 let9)
  let let269 := (Eq let58 let235)
  let let270 := (binrel% GE.ge let34 let34)
  let let271 := (binrel% HMul.hMul let3 let79)
  let let272 := (binrel% HMul.hMul let51 let8)
  let let273 := (binrel% HMul.hMul let202 let1)
  let let274 := (binrel% LT.lt let223 let1)
  let let275 := (binrel% HMul.hMul let3 let9)
  let let276 := (binrel% HMul.hMul let202 let188)
  let let277 := (binrel% HAdd.hAdd let69 let265)
  let let278 := (binrel% HMul.hMul let51 let57)
  let let279 := (binrel% GE.ge let201 let1)
  let let280 := (binrel% LE.le let1 let201)
  let let281 := (binrel% HMul.hMul let223 let229)
  let let282 := (binrel% HMul.hMul let17 let22)
  let let283 := (binrel% HMul.hMul let197 let178)
  let let284 := (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 let93))
  let let285 := (binrel% HMul.hMul let223 let256)
  let let286 := (binrel% HMul.hMul let2 let13)
  let let287 := (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let51 let34)))))))))))
  let let288 := (binrel% HAdd.hAdd let275 (binrel% HAdd.hAdd let240 (binrel% HAdd.hAdd let218 (binrel% HAdd.hAdd let247 (binrel% HAdd.hAdd let243 (binrel% HAdd.hAdd let243 (binrel% HAdd.hAdd let240 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let273 (binrel% HAdd.hAdd let224 (binrel% HAdd.hAdd let272 let273)))))))))))
  let let289 := (binrel% HAdd.hAdd let271 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let286 (binrel% HAdd.hAdd let285 (binrel% HAdd.hAdd let283 (binrel% HAdd.hAdd let198 (binrel% HAdd.hAdd let282 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let281 (binrel% HAdd.hAdd let278 let276)))))))))))
  let let290 := (binrel% GE.ge let289 let288)
  let let291 := (Not let290)
  let let292 := (binrel% LT.lt let289 let288)
  let let293 := (binrel% LT.lt let202 let1)
  let let294 := (binrel% LT.lt let37 let8)
  let let295 := (And let80 (And let230 (And let257 (And let245 (And let39 (And let102 (And let213 (And let15 (And let205 (And let59 (And let24 let279)))))))))))
  let let296 := (Eq let171 let194)
  let let297 := (Not let102)
  let let298 := (Or let81 (Or let297 let207))
  let let299 := (Or let81 (Or let297 let238))
  let let300 := (Eq Or Or)
  let let301 := (binrel% HAdd.hAdd let268 (binrel% HAdd.hAdd let234 let232))
  let let302 := (binrel% HAdd.hAdd let244 (binrel% HAdd.hAdd let241 let237))
  let let303 := (binrel% LE.le let302 let301)
  let let304 := (binrel% LE.le let237 let232)
  let let305 := (And let225 let80)
  let let306 := (binrel% LE.le let241 let234)
  let let307 := (And let225 let102)
  let let308 := (binrel% LE.le let244 let268)
  let let309 := (And let248 let226)
  let let310 := (Not let279)
  let let311 := (Not let205)
  let let312 := (Not let213)
  let let313 := (Not let257)
  let let314 := (Not let230)
  let let315 := (Or let208 (Or let58 (Or let314 (Or let310 (Or let38 (Or let23 (Or let312 (Or let311 (Or let313 (Or let14 (Or let227 let81)))))))))))
  let let316 := (Or let208 (Or let235 (Or let314 (Or let310 (Or let40 (Or let262 (Or let312 (Or let311 (Or let313 (Or let199 (Or let253 let81)))))))))))
  let let317 := (Or let81 False)
  let let318 := (binrel% LE.le let276 let273)
  let let319 := (And let293 let207)
  let let320 := (binrel% LE.le let278 let272)
  let let321 := (And let52 let134)
  let let322 := (binrel% LE.le let281 let224)
  let let323 := (And let274 let230)
  let let324 := (binrel% LE.le let203 let273)
  let let325 := (And let293 let279)
  let let326 := (binrel% LE.le let180 let83)
  let let327 := (And let27 let91)
  let let328 := (binrel% LE.le let282 let240)
  let let329 := (And let18 let64)
  let let330 := (binrel% LE.le let198 let243)
  let let331 := (And let249 let213)
  let let332 := (binrel% LE.le let283 let243)
  let let333 := (And let249 let205)
  let let334 := (binrel% LE.le let285 let247)
  let let335 := (And let274 let257)
  let let336 := (binrel% LT.lt let286 let218)
  let let337 := (And let248 let16)
  let let338 := (binrel% LE.le let98 let240)
  let let339 := (binrel% LE.le let97 let9)
  let let340 := (And let18 let339)
  let let341 := (binrel% LE.le let271 let275)
  let let342 := (And let4 let80)
(Eq let4 True) → (Eq let16 let15) → (Eq let18 True) → (Eq let25 let24) → (Eq let27 True) → (Eq let31 let30) → (Eq let35 let33) → (Eq let42 let41) → (Eq let44 let43) → (Eq let50 let48) → (Eq let52 True) → (Eq let46 let53) → (Eq let60 let59) → (Eq let63 let62) → (Eq let64 let24) → (Eq let66 let65) → (Eq let67 False) → (Eq let71 let70) → (Eq let72 let12) → (Eq let82 let80) → (Eq let83 let34) → (Eq let87 let86) → (Eq let88 let37) → (Eq let89 let22) → (Eq let90 let78) → (Eq let91 let39) → (Eq let98 let95) → (Eq let100 let99) → (Eq let105 let102) → (Eq let108 let107) → (Eq let85 let69) → (Eq let109 let57) → (Eq let110 let10) → (Eq let133 let34) → (Eq let134 let59) → (Eq let138 let137) → (Eq let135 let20) → (Eq let45 let61) → (Eq let175 let174) → (Eq let160 let176) → (Eq let140 let177) → (Eq let179 let178) → (Eq let180 let122) → (Eq let159 let36) → (Eq let181 let13) → (Eq let182 let81) → (Eq let190 let34) → (Eq let195 let194) → (Eq let198 let127) → let200 → (Eq let203 let121) → (Eq let204 let81) → (Eq let206 let205) → (Eq let209 let208) → (Eq let166 let192) → (Eq let84 let68) → (Eq let171 let171) → (Eq let144 let56) → (Eq let147 let103) → (Eq let153 let210) → (Eq let167 let191) → (Eq let211 True) → (Eq let145 let212) → (Eq let168 let193) → let42 → (Eq let215 let213) → (Eq let149 let216) → (Eq let47 let21) → (Eq let217 let15) → (Eq let151 let7) → (Eq let218 let34) → (Eq let163 let219) → (Eq let220 True) → (Eq let143 let55) → (Eq let152 let11) → (Eq let157 let221) → (Eq let169 let94) → (Eq let170 let123) → (Eq let222 True) → (Eq let224 let34) → (Eq let225 True) → (Eq let226 let208) → (Eq let228 True) → (Eq let231 let230) → (Eq let232 let32) → (Eq let233 True) → (Eq let234 let34) → let236 → (Eq let237 let185) → let239 → (Eq let240 let223) → (Eq let241 let186) → (Eq let239 let242) → (Eq let243 let34) → (Eq let244 let189) → (Eq let246 let245) → (Eq let247 let223) → (Eq let248 True) → (Eq let249 True) → let252 → let254 → (Eq let254 let255) → (Eq let258 let257) → (Eq let200 let259) → (Eq let260 True) → (Eq let261 let245) → let263 → (Eq let263 let264) → (Eq let155 let266) → (Eq let267 False) → (Eq let268 let3) → (Eq let236 let269) → (Eq let270 True) → (Eq let139 let93) → (Eq let271 let132) → (Eq let272 let51) → (Eq let273 let34) → (Eq let274 True) → (Eq let275 let2) → (Eq let276 let114) → (Eq let277 let214) → (Eq let278 let116) → (Eq let280 let279) → (Eq let281 let120) → (Eq let282 let124) → (Eq let283 let128) → (Eq let284 let201) → (Eq let285 let130) → (Eq let286 let131) → (Eq let287 let34) → (Eq let292 let291) → (Eq let293 True) → (Eq let136 let19) → (Eq let294 let39) → let175 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 2)
  let let6 := (Neg.neg let5)
  let let7 := (binrel% HMul.hMul let6 x12)
  let let8 := (Int.ofNat 1)
  let let9 := (Neg.neg let8)
  let let10 := (binrel% HMul.hMul let9 x10)
  let let11 := (binrel% HMul.hMul let5 x7)
  let let12 := (binrel% HMul.hMul let9 x4)
  let let13 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let10 let7)))))
  let let14 := (binrel% GE.ge let13 let1)
  let let15 := (Not let14)
  let let16 := (binrel% LT.lt let13 let1)
  let let17 := (Rat.ofInt 2)
  let let18 := (binrel% GT.gt let17 let1)
  let let19 := (binrel% HMul.hMul let9 x13)
  let let20 := (binrel% HMul.hMul let9 x11)
  let let21 := (binrel% HMul.hMul let9 x8)
  let let22 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x12 let19)))))
  let let23 := (binrel% GE.ge let22 let1)
  let let24 := (Not let23)
  let let25 := (binrel% LT.lt let22 let1)
  let let26 := (Rat.ofInt 6)
  let let27 := (binrel% GT.gt let26 let1)
  let let28 := (Int.ofNat 4)
  let let29 := (Neg.neg let28)
  let let30 := (binrel% HMul.hMul let29 x6)
  let let31 := (binrel% HMul.hMul x6 let29)
  let let32 := (binrel% HDiv.hDiv let8 let5)
  let let33 := (Neg.neg let32)
  let let34 := (Rat.ofInt 0)
  let let35 := (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd let34 let32))
  let let36 := (binrel% HMul.hMul let5 x0)
  let let37 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let21 x14)))))
  let let38 := (binrel% GE.ge let37 let8)
  let let39 := (Not let38)
  let let40 := (Not let39)
  let let41 := (Eq let38 let40)
  let let42 := (Eq let40 let38)
  let let43 := (binrel% HMul.hMul let6 x7)
  let let44 := (binrel% HMul.hMul x7 let6)
  let let45 := (Neg.neg x1)
  let let46 := (binrel% HMul.hMul x4 let6)
  let let47 := (Neg.neg x8)
  let let48 := (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let46 let45))))
  let let49 := (binrel% HAdd.hAdd x9 x11)
  let let50 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let49 let47) let46) let45)
  let let51 := (Rat.ofInt 5)
  let let52 := (binrel% GT.gt let51 let1)
  let let53 := (binrel% HMul.hMul let6 x4)
  let let54 := (binrel% HAdd.hAdd x13 x14)
  let let55 := (binrel% HMul.hMul let6 x10)
  let let56 := (binrel% HMul.hMul let9 x9)
  let let57 := (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let55 let54)))
  let let58 := (binrel% GE.ge let57 let5)
  let let59 := (Not let58)
  let let60 := (binrel% LT.lt let57 let5)
  let let61 := (binrel% HMul.hMul let9 x1)
  let let62 := (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let21 let49)))
  let let63 := (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let53 let61))))
  let let64 := (binrel% LE.le let22 let9)
  let let65 := (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let10 x11)))))
  let let66 := (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x4 let61)))))
  let let67 := (binrel% LE.le let34 let33)
  let let68 := (binrel% HMul.hMul let9 x12)
  let let69 := (binrel% HMul.hMul let9 x0)
  let let70 := (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 let68)))))
  let let71 := (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x10 let68)))))
  let let72 := (Neg.neg x4)
  let let73 := (binrel% HMul.hMul let5 x12)
  let let74 := (Int.ofNat 3)
  let let75 := (Neg.neg let74)
  let let76 := (binrel% HMul.hMul let5 x9)
  let let77 := (binrel% HMul.hMul let5 x6)
  let let78 := (binrel% HMul.hMul let9 x2)
  let let79 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x10) (binrel% HAdd.hAdd let73 (binrel% HMul.hMul let5 x14)))))))))
  let let80 := (binrel% GE.ge let79 let9)
  let let81 := (Not let80)
  let let82 := (Not let81)
  let let83 := (binrel% HMul.hMul let26 let1)
  let let84 := (Neg.neg x12)
  let let85 := (Neg.neg x0)
  let let86 := (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x10 let84)))))
  let let87 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x5) x9) let85) x10) let84)
  let let88 := (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let21 x4)))))
  let let89 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let21 x12)))))
  let let90 := (Neg.neg x2)
  let let91 := (binrel% LE.le let37 let1)
  let let92 := (binrel% HMul.hMul let6 x11)
  let let93 := (binrel% HMul.hMul let6 x9)
  let let94 := (binrel% HMul.hMul let6 x5)
  let let95 := (Rat.ofInt (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let92 let73))))))
  let let96 := (binrel% HMul.hMul let9 x5)
  let let97 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let20 x12)))))
  let let98 := (binrel% HMul.hMul let17 let97)
  let let99 := (binrel% HMul.hMul let29 x0)
  let let100 := (binrel% HMul.hMul x0 let29)
  let let101 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd x7 let10)))
  let let102 := (binrel% GE.ge let101 let1)
  let let103 := (binrel% HMul.hMul let9 x7)
  let let104 := (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let103 x10)))
  let let105 := (binrel% LE.le let104 let1)
  let let106 := (Int.ofNat 6)
  let let107 := (binrel% HMul.hMul let106 x10)
  let let108 := (binrel% HMul.hMul x10 let106)
  let let109 := (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd x8 let55))))
  let let110 := (Neg.neg x10)
  let let111 := (Neg.neg let106)
  let let112 := (binrel% HMul.hMul let111 x14)
  let let113 := (Int.ofNat 12)
  let let114 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x9) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x12) let112)))))))
  let let115 := (Int.ofNat 5)
  let let116 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let115) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 10)) x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x13) (binrel% HMul.hMul let115 x14))))))
  let let117 := (binrel% HMul.hMul let5 x11)
  let let118 := (binrel% HMul.hMul let6 x8)
  let let119 := (binrel% HMul.hMul let6 x1)
  let let120 := (Rat.ofInt (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd (binrel% HMul.hMul let29 x4) (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let76 let117)))))
  let let121 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x9) let112)))
  let let122 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x8) (binrel% HMul.hMul let106 x14)))))))
  let let123 := (binrel% HMul.hMul let5 x2)
  let let124 := (Rat.ofInt (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let73 (binrel% HMul.hMul let6 x13)))))))
  let let125 := (binrel% HMul.hMul let74 x12)
  let let126 := (binrel% HMul.hMul let75 x0)
  let let127 := (Rat.ofInt (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x8) (binrel% HAdd.hAdd let125 (binrel% HMul.hMul let74 x14)))))
  let let128 := (Rat.ofInt (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x7) (binrel% HAdd.hAdd let125 (binrel% HMul.hMul let75 x13)))))))))
  let let129 := (binrel% HMul.hMul let5 x4)
  let let130 := (Rat.ofInt (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x8) (binrel% HAdd.hAdd let55 let117))))))
  let let131 := (Rat.ofInt let13)
  let let132 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x6) (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x10) (binrel% HAdd.hAdd let7 (binrel% HMul.hMul let6 x14))))))))))
  let let133 := (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let116 let114)))))))))))
  let let134 := (binrel% LE.le let57 let8)
  let let135 := (Neg.neg x11)
  let let136 := (Neg.neg x13)
  let let137 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let47 x12)))))
  let let138 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) let136) let135) let47) x12)
  let let139 := (binrel% HMul.hMul x9 let6)
  let let140 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) let139)
  let let141 := (binrel% LE.le let1 let140)
  let let142 := (binrel% LE.le let138 let9)
  let let143 := (binrel% HMul.hMul x10 let6)
  let let144 := (Neg.neg x9)
  let let145 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let54 let144) x8) let143)
  let let146 := (binrel% LE.le let145 let8)
  let let147 := (Neg.neg x7)
  let let148 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let90 x5) let147)
  let let149 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let148 x13) x0) x4) let45) let84)
  let let150 := (binrel% LE.le let1 let149)
  let let151 := (binrel% HMul.hMul x12 let6)
  let let152 := (binrel% HMul.hMul x7 let5)
  let let153 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let152 x9) let110) let72) x1) let151)
  let let154 := (binrel% LE.le let153 let9)
  let let155 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let85 x14) x8) x12)
  let let156 := (binrel% LE.le let155 let1)
  let let157 := (binrel% HAdd.hAdd let148 x10)
  let let158 := (binrel% LE.le let157 let1)
  let let159 := (binrel% HMul.hMul x0 let5)
  let let160 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x5) x6) let159) let47) x4)
  let let161 := (binrel% LE.le let160 let1)
  let let162 := (binrel% LE.le let8 let87)
  let let163 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) let110) x4) let45)
  let let164 := (binrel% LE.le let163 let9)
  let let165 := (binrel% LE.le let50 let1)
  let let166 := (binrel% HMul.hMul x12 let29)
  let let167 := (binrel% HMul.hMul x14 let29)
  let let168 := (binrel% HMul.hMul x9 let29)
  let let169 := (binrel% HMul.hMul x5 let6)
  let let170 := (binrel% HMul.hMul x2 let5)
  let let171 := (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let108 let166))))))))
  let let172 := (binrel% GE.ge let171 let28)
  let let173 := (Not let172)
  let let174 := (And let173 (And let165 (And let164 (And let162 (And let161 (And let158 (And let156 (And let154 (And let150 (And let146 (And let142 let141)))))))))))
  let let175 := (And let173 (And (And (And (And (And (And (And (And (And (And let165 let164) let162) let161) let158) let156) let154) let150) let146) let142) let141))
  let let176 := (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let47 x4)))))
  let let177 := (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 let139))
  let let178 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let68 x13)))))))
  let let179 := (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd let61 let68)))))))
  let let180 := (binrel% HMul.hMul let26 let37)
  let let181 := (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x1 let7)))))
  let let182 := (binrel% LT.lt let79 let9)
  let let183 := (binrel% HMul.hMul let9 x14)
  let let184 := (binrel% HMul.hMul let33 x7)
  let let185 := (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x6) (binrel% HAdd.hAdd let184 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv let74 let5) x10) (binrel% HAdd.hAdd let68 let183))))))))
  let let186 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x5) (binrel% HAdd.hAdd let184 (binrel% HMul.hMul let32 x10))))
  let let187 := (binrel% HAdd.hAdd x12 x14)
  let let188 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let55 let187)))))
  let let189 := (Rat.ofInt let188)
  let let190 := (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd let186 let185))
  let let191 := (binrel% HMul.hMul let29 x14)
  let let192 := (binrel% HMul.hMul let29 x12)
  let let193 := (binrel% HMul.hMul let29 x9)
  let let194 := (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let192 let191))))))))
  let let195 := (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let107 let192))))))))
  let let196 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let68 let183)))
  let let197 := (Neg.neg (Rat.ofInt 3))
  let let198 := (binrel% HMul.hMul let197 let196)
  let let199 := (Not let15)
  let let200 := (Eq let199 let14)
  let let201 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let93 x14))
  let let202 := (Neg.neg let26)
  let let203 := (binrel% HMul.hMul let202 let201)
  let let204 := (binrel% GE.ge let194 let28)
  let let205 := (binrel% GE.ge let178 let1)
  let let206 := (binrel% LE.le let1 let178)
  let let207 := (binrel% GE.ge let188 let1)
  let let208 := (Not let207)
  let let209 := (binrel% LT.lt let188 let1)
  let let210 := (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1 let151)))))
  let let211 := (Eq let38 let38)
  let let212 := (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd x8 let143))))
  let let213 := (binrel% GE.ge let196 let1)
  let let214 := (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x8 let187))
  let let215 := (binrel% LE.le let214 let1)
  let let216 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd let45 let84)))))))
  let let217 := (binrel% LE.le let13 let9)
  let let218 := (binrel% HMul.hMul let2 let1)
  let let219 := (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd x4 let45)))))
  let let220 := (Eq let14 let14)
  let let221 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let147 x10)))
  let let222 := (Eq let207 let207)
  let let223 := (Neg.neg let17)
  let let224 := (binrel% HMul.hMul let223 let1)
  let let225 := (binrel% LT.lt let33 let1)
  let let226 := (binrel% LE.le let188 let9)
  let let227 := (binrel% GE.ge let97 let1)
  let let228 := (Eq let227 let227)
  let let229 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let56 let20))))
  let let230 := (binrel% GE.ge let229 let1)
  let let231 := (binrel% LE.le let62 let1)
  let let232 := (binrel% HMul.hMul let33 let9)
  let let233 := (Eq let58 let58)
  let let234 := (binrel% HMul.hMul let33 let1)
  let let235 := (Not let59)
  let let236 := (Eq let235 let58)
  let let237 := (binrel% HMul.hMul let33 let79)
  let let238 := (Not let208)
  let let239 := (Eq let238 let207)
  let let240 := (binrel% HMul.hMul let17 let9)
  let let241 := (binrel% HMul.hMul let33 let101)
  let let242 := (Eq let207 let238)
  let let243 := (binrel% HMul.hMul let197 let1)
  let let244 := (binrel% HMul.hMul let2 let188)
  let let245 := (Not let227)
  let let246 := (binrel% LE.le let8 let70)
  let let247 := (binrel% HMul.hMul let223 let8)
  let let248 := (binrel% GT.gt let2 let1)
  let let249 := (binrel% LT.lt let197 let1)
  let let250 := (Not let226)
  let let251 := (binrel% GT.gt let188 let9)
  let let252 := (Eq let251 let250)
  let let253 := (Not let245)
  let let254 := (Eq let253 let227)
  let let255 := (Eq let227 let253)
  let let256 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd x10 let20)))))
  let let257 := (binrel% GE.ge let256 let8)
  let let258 := (binrel% LE.le let65 let9)
  let let259 := (Eq let14 let199)
  let let260 := (Eq let23 let23)
  let let261 := (binrel% LT.lt let97 let1)
  let let262 := (Not let24)
  let let263 := (Eq let262 let23)
  let let264 := (Eq let23 let262)
  let let265 := (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x8 x12))
  let let266 := (binrel% HAdd.hAdd let85 let265)
  let let267 := (Not True)
  let let268 := (binrel% HMul.hMul let2 let9)
  let let269 := (Eq let58 let235)
  let let270 := (binrel% GE.ge let34 let34)
  let let271 := (binrel% HMul.hMul let3 let79)
  let let272 := (binrel% HMul.hMul let51 let8)
  let let273 := (binrel% HMul.hMul let202 let1)
  let let274 := (binrel% LT.lt let223 let1)
  let let275 := (binrel% HMul.hMul let3 let9)
  let let276 := (binrel% HMul.hMul let202 let188)
  let let277 := (binrel% HAdd.hAdd let69 let265)
  let let278 := (binrel% HMul.hMul let51 let57)
  let let279 := (binrel% GE.ge let201 let1)
  let let280 := (binrel% LE.le let1 let201)
  let let281 := (binrel% HMul.hMul let223 let229)
  let let282 := (binrel% HMul.hMul let17 let22)
  let let283 := (binrel% HMul.hMul let197 let178)
  let let284 := (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 let93))
  let let285 := (binrel% HMul.hMul let223 let256)
  let let286 := (binrel% HMul.hMul let2 let13)
  let let287 := (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let51 let34)))))))))))
  let let288 := (binrel% HAdd.hAdd let275 (binrel% HAdd.hAdd let240 (binrel% HAdd.hAdd let218 (binrel% HAdd.hAdd let247 (binrel% HAdd.hAdd let243 (binrel% HAdd.hAdd let243 (binrel% HAdd.hAdd let240 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let273 (binrel% HAdd.hAdd let224 (binrel% HAdd.hAdd let272 let273)))))))))))
  let let289 := (binrel% HAdd.hAdd let271 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let286 (binrel% HAdd.hAdd let285 (binrel% HAdd.hAdd let283 (binrel% HAdd.hAdd let198 (binrel% HAdd.hAdd let282 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let281 (binrel% HAdd.hAdd let278 let276)))))))))))
  let let290 := (binrel% GE.ge let289 let288)
  let let291 := (Not let290)
  let let292 := (binrel% LT.lt let289 let288)
  let let293 := (binrel% LT.lt let202 let1)
  let let294 := (binrel% LT.lt let37 let8)
  let let295 := (And let80 (And let230 (And let257 (And let245 (And let39 (And let102 (And let213 (And let15 (And let205 (And let59 (And let24 let279)))))))))))
  let let296 := (Eq let171 let194)
  let let297 := (Not let102)
  let let298 := (Or let81 (Or let297 let207))
  let let299 := (Or let81 (Or let297 let238))
  let let300 := (Eq Or Or)
  let let301 := (binrel% HAdd.hAdd let268 (binrel% HAdd.hAdd let234 let232))
  let let302 := (binrel% HAdd.hAdd let244 (binrel% HAdd.hAdd let241 let237))
  let let303 := (binrel% LE.le let302 let301)
  let let304 := (binrel% LE.le let237 let232)
  let let305 := (And let225 let80)
  let let306 := (binrel% LE.le let241 let234)
  let let307 := (And let225 let102)
  let let308 := (binrel% LE.le let244 let268)
  let let309 := (And let248 let226)
  let let310 := (Not let279)
  let let311 := (Not let205)
  let let312 := (Not let213)
  let let313 := (Not let257)
  let let314 := (Not let230)
  let let315 := (Or let208 (Or let58 (Or let314 (Or let310 (Or let38 (Or let23 (Or let312 (Or let311 (Or let313 (Or let14 (Or let227 let81)))))))))))
  let let316 := (Or let208 (Or let235 (Or let314 (Or let310 (Or let40 (Or let262 (Or let312 (Or let311 (Or let313 (Or let199 (Or let253 let81)))))))))))
  let let317 := (Or let81 False)
  let let318 := (binrel% LE.le let276 let273)
  let let319 := (And let293 let207)
  let let320 := (binrel% LE.le let278 let272)
  let let321 := (And let52 let134)
  let let322 := (binrel% LE.le let281 let224)
  let let323 := (And let274 let230)
  let let324 := (binrel% LE.le let203 let273)
  let let325 := (And let293 let279)
  let let326 := (binrel% LE.le let180 let83)
  let let327 := (And let27 let91)
  let let328 := (binrel% LE.le let282 let240)
  let let329 := (And let18 let64)
  let let330 := (binrel% LE.le let198 let243)
  let let331 := (And let249 let213)
  let let332 := (binrel% LE.le let283 let243)
  let let333 := (And let249 let205)
  let let334 := (binrel% LE.le let285 let247)
  let let335 := (And let274 let257)
  let let336 := (binrel% LT.lt let286 let218)
  let let337 := (And let248 let16)
  let let338 := (binrel% LE.le let98 let240)
  let let339 := (binrel% LE.le let97 let9)
  let let340 := (And let18 let339)
  let let341 := (binrel% LE.le let271 let275)
  let let342 := (And let4 let80)
fun lean_r0 : (Eq let4 True) => -- EVALUATE
fun lean_r1 : (Eq let16 let15) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let18 True) => -- EVALUATE
fun lean_r3 : (Eq let25 let24) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let27 True) => -- EVALUATE
fun lean_r5 : (Eq let31 let30) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let35 let33) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let42 let41) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let44 let43) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let50 let48) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let52 True) => -- EVALUATE
fun lean_r11 : (Eq let46 let53) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let60 let59) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let63 let62) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let64 let24) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let66 let65) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let67 False) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let71 let70) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let72 let12) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let82 let80) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let83 let34) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let87 let86) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let88 let37) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let89 let22) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let90 let78) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let91 let39) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let98 let95) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let100 let99) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let105 let102) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let108 let107) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let85 let69) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let109 let57) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let110 let10) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let133 let34) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let134 let59) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let138 let137) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let135 let20) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let45 let61) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let175 let174) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq let160 let176) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let140 let177) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let179 let178) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let180 let122) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let159 let36) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let181 let13) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let182 let81) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let190 let34) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let195 let194) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let198 let127) => -- THEORY_REWRITE_ARITH
fun lean_r49 : let200 => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq let203 let121) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let204 let81) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let206 let205) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let209 let208) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let166 let192) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let84 let68) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let171 let171) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let144 let56) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let147 let103) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let153 let210) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let167 let191) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let211 True) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq let145 let212) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let168 let193) => -- THEORY_REWRITE_ARITH
fun lean_r64 : let42 => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq let215 let213) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let149 let216) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let47 let21) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let217 let15) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let151 let7) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let218 let34) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let163 let219) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let220 True) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let143 let55) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let152 let11) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let157 let221) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let169 let94) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let170 let123) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let222 True) => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq let224 let34) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let225 True) => -- EVALUATE
fun lean_r81 : (Eq let226 let208) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let228 True) => -- THEORY_REWRITE_BOOL
fun lean_r83 : (Eq let231 let230) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let232 let32) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let233 True) => -- THEORY_REWRITE_BOOL
fun lean_r86 : (Eq let234 let34) => -- THEORY_REWRITE_ARITH
fun lean_r87 : let236 => -- THEORY_REWRITE_BOOL
fun lean_r88 : (Eq let237 let185) => -- THEORY_REWRITE_ARITH
fun lean_r89 : let239 => -- THEORY_REWRITE_BOOL
fun lean_r90 : (Eq let240 let223) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let241 let186) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let239 let242) => -- THEORY_REWRITE_BOOL
fun lean_r93 : (Eq let243 let34) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let244 let189) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let246 let245) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let247 let223) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let248 True) => -- EVALUATE
fun lean_r98 : (Eq let249 True) => -- EVALUATE
fun lean_r99 : let252 => -- THEORY_REWRITE_ARITH
fun lean_r100 : let254 => -- THEORY_REWRITE_BOOL
fun lean_r101 : (Eq let254 let255) => -- THEORY_REWRITE_BOOL
fun lean_r102 : (Eq let258 let257) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let200 let259) => -- THEORY_REWRITE_BOOL
fun lean_r104 : (Eq let260 True) => -- THEORY_REWRITE_BOOL
fun lean_r105 : (Eq let261 let245) => -- THEORY_REWRITE_ARITH
fun lean_r106 : let263 => -- THEORY_REWRITE_BOOL
fun lean_r107 : (Eq let263 let264) => -- THEORY_REWRITE_BOOL
fun lean_r108 : (Eq let155 let266) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let267 False) => -- THEORY_REWRITE_BOOL
fun lean_r110 : (Eq let268 let3) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let236 let269) => -- THEORY_REWRITE_BOOL
fun lean_r112 : (Eq let270 True) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let139 let93) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let271 let132) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let272 let51) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let273 let34) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let274 True) => -- EVALUATE
fun lean_r118 : (Eq let275 let2) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let276 let114) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let277 let214) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let278 let116) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let280 let279) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let281 let120) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let282 let124) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let283 let128) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let284 let201) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let285 let130) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let286 let131) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let287 let34) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq let292 let291) => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq let293 True) => -- EVALUATE
fun lean_r132 : (Eq let136 let19) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let294 let39) => -- THEORY_REWRITE_ARITH
fun lean_a134 : let175 => by
have lean_s0 : (Or let208 (Or let235 (Or let314 (Or let310 (Or let40 (Or let262 (Or let312 (Or let311 (Or let313 (Or let199 (Or let253 let317))))))))))) :=
  (scope (fun lean_a135 : let207 =>
    (scope (fun lean_a136 : let59 =>
      (scope (fun lean_a137 : let230 =>
        (scope (fun lean_a138 : let279 =>
          (scope (fun lean_a139 : let39 =>
            (scope (fun lean_a140 : let24 =>
              (scope (fun lean_a141 : let213 =>
                (scope (fun lean_a142 : let205 =>
                  (scope (fun lean_a143 : let257 =>
                    (scope (fun lean_a144 : let15 =>
                      (scope (fun lean_a145 : let245 =>
                        (scope (fun lean_a146 : let80 =>
                          have lean_s0 : let317 :=
                            (scope (fun lean_a147 : let80 =>
                              have lean_s0 : let4 := by timed trueElim lean_r0
                              have lean_s1 : let342 := by timed And.intro lean_s0 lean_a147
                              have lean_s2 : (Implies let342 let341) := by arithMulNeg [let79, let9, let3], 3
                              have lean_s3 : let341 := by timed modusPonens lean_s1 lean_s2
                              have lean_s4 : let18 := by timed trueElim lean_r2
                              have lean_s5 : (Eq let245 let261) := by timed Eq.symm lean_r105
                              have lean_s6 : let261 := by timed eqResolve lean_a145 lean_s5
                              have lean_s7 : let339 := by intTightUb lean_s6
                              have lean_s8 : let340 := by timed And.intro lean_s4 lean_s7
                              have lean_s9 : (Implies let340 let338) := by arithMulPos [let97, let9, let17], 1
                              have lean_s10 : let338 := by timed modusPonens lean_s8 lean_s9
                              have lean_s11 : let248 := by timed trueElim lean_r97
                              have lean_s12 : (Eq let15 let16) := by timed Eq.symm lean_r1
                              have lean_s13 : let16 := by timed eqResolve lean_a144 lean_s12
                              have lean_s14 : let337 := by timed And.intro lean_s11 lean_s13
                              have lean_s15 : (Implies let337 let336) := by arithMulPos [let13, let1, let2], 0
                              have lean_s16 : let336 := by timed modusPonens lean_s14 lean_s15
                              have lean_s17 : let274 := by timed trueElim lean_r117
                              have lean_s18 : let335 := by timed And.intro lean_s17 lean_a143
                              have lean_s19 : (Implies let335 let334) := by arithMulNeg [let256, let8, let223], 3
                              have lean_s20 : let334 := by timed modusPonens lean_s18 lean_s19
                              have lean_s21 : let249 := by timed trueElim lean_r98
                              have lean_s22 : let333 := by timed And.intro lean_s21 lean_a142
                              have lean_s23 : (Implies let333 let332) := by arithMulNeg [let178, let1, let197], 3
                              have lean_s24 : let332 := by timed modusPonens lean_s22 lean_s23
                              have lean_s25 : let331 := by timed And.intro lean_s21 lean_a141
                              have lean_s26 : (Implies let331 let330) := by arithMulNeg [let196, let1, let197], 3
                              have lean_s27 : let330 := by timed modusPonens lean_s25 lean_s26
                              have lean_s28 : (Eq let24 let25) := by timed Eq.symm lean_r3
                              have lean_s29 : let25 := by timed eqResolve lean_a140 lean_s28
                              have lean_s30 : let64 := by intTightUb lean_s29
                              have lean_s31 : let329 := by timed And.intro lean_s4 lean_s30
                              have lean_s32 : (Implies let329 let328) := by arithMulPos [let22, let9, let17], 1
                              have lean_s33 : let328 := by timed modusPonens lean_s31 lean_s32
                              have lean_s34 : let27 := by timed trueElim lean_r4
                              have lean_s35 : (Eq let39 let294) := by timed Eq.symm lean_r133
                              have lean_s36 : let294 := by timed eqResolve lean_a139 lean_s35
                              have lean_s37 : let91 := by intTightUb lean_s36
                              have lean_s38 : let327 := by timed And.intro lean_s34 lean_s37
                              have lean_s39 : (Implies let327 let326) := by arithMulPos [let37, let1, let26], 1
                              have lean_s40 : let326 := by timed modusPonens lean_s38 lean_s39
                              have lean_s41 : let293 := by timed trueElim lean_r131
                              have lean_s42 : let325 := by timed And.intro lean_s41 lean_a138
                              have lean_s43 : (Implies let325 let324) := by arithMulNeg [let201, let1, let202], 3
                              have lean_s44 : let324 := by timed modusPonens lean_s42 lean_s43
                              have lean_s45 : let323 := by timed And.intro lean_s17 lean_a137
                              have lean_s46 : (Implies let323 let322) := by arithMulNeg [let229, let1, let223], 3
                              have lean_s47 : let322 := by timed modusPonens lean_s45 lean_s46
                              have lean_s48 : let52 := by timed trueElim lean_r10
                              have lean_s49 : (Eq let59 let60) := by timed Eq.symm lean_r12
                              have lean_s50 : let60 := by timed eqResolve lean_a136 lean_s49
                              have lean_s51 : let134 := by intTightUb lean_s50
                              have lean_s52 : let321 := by timed And.intro lean_s48 lean_s51
                              have lean_s53 : (Implies let321 let320) := by arithMulPos [let57, let8, let51], 1
                              have lean_s54 : let320 := by timed modusPonens lean_s52 lean_s53
                              have lean_s55 : let319 := by timed And.intro lean_s41 lean_a135
                              have lean_s56 : (Implies let319 let318) := by arithMulNeg [let188, let1, let202], 3
                              have lean_s57 : let318 := by timed modusPonens lean_s55 lean_s56
                              have lean_s58 : let292 := by sumBounds [lean_s3, lean_s10, lean_s16, lean_s20, lean_s24, lean_s27, lean_s33, lean_s40, lean_s44, lean_s47, lean_s54, lean_s57]
                              let lean_s59 := by timed congrHAdd lean_r121 lean_r119
                              let lean_s60 := by timed congrHAdd lean_r123 lean_s59
                              let lean_s61 := by timed congrHAdd lean_r50 lean_s60
                              let lean_s62 := by timed congrHAdd lean_r42 lean_s61
                              let lean_s63 := by timed congrHAdd lean_r124 lean_s62
                              let lean_s64 := by timed congrHAdd lean_r48 lean_s63
                              let lean_s65 := by timed congrHAdd lean_r125 lean_s64
                              let lean_s66 := by timed congrHAdd lean_r127 lean_s65
                              let lean_s67 := by timed congrHAdd lean_r128 lean_s66
                              let lean_s68 := by timed congrHAdd lean_r26 lean_s67
                              have lean_s69 : (Eq let289 let133) := by timed congrHAdd lean_r114 lean_s68
                              have lean_s70 : (Eq let289 let34) := by timed Eq.trans lean_s69 lean_r33
                              let lean_s71 := by timed flipCongrArg lean_s70 [GE.ge]
                              let lean_s72 := by timed congrHAdd lean_r115 lean_r116
                              let lean_s73 := by timed congrHAdd lean_r79 lean_s72
                              let lean_s74 := by timed congrHAdd lean_r116 lean_s73
                              let lean_s75 := by timed congrHAdd lean_r20 lean_s74
                              let lean_s76 := by timed congrHAdd lean_r90 lean_s75
                              let lean_s77 := by timed congrHAdd lean_r93 lean_s76
                              let lean_s78 := by timed congrHAdd lean_r93 lean_s77
                              let lean_s79 := by timed congrHAdd lean_r96 lean_s78
                              let lean_s80 := by timed congrHAdd lean_r70 lean_s79
                              let lean_s81 := by timed congrHAdd lean_r90 lean_s80
                              have lean_s82 : (Eq let288 let287) := by timed congrHAdd lean_r118 lean_s81
                              have lean_s83 : (Eq let288 let34) := by timed Eq.trans lean_s82 lean_r129
                              have lean_s84 : (Eq let290 let270) := by timed congr lean_s71 lean_s83
                              have lean_s85 : (Eq let290 True) := by timed Eq.trans lean_s84 lean_r112
                              have lean_s86 : (Eq let291 let267) := by timed flipCongrArg lean_s85 [Not]
                              have lean_s87 : (Eq let291 False) := by timed Eq.trans lean_s86 lean_r109
                              have lean_s88 : (Eq let292 False) := by timed Eq.trans lean_r130 lean_s87
                              show False from by timed eqResolve lean_s58 lean_s88
                            ))
                          have lean_s1 : let81 := by liftOrNToNeg lean_s0
                          have lean_s2 : (Eq let81 let182) := by timed Eq.symm lean_r45
                          have lean_s3 : let182 := by timed eqResolve lean_s1 lean_s2
                          have lean_s4 : let81 := by timed eqResolve lean_s3 lean_r45
                          show False from by timed contradiction lean_a146 lean_s4
  ))))))))))))))))))))))))
have lean_s1 : (Not (And let207 (And let59 (And let230 (And let279 (And let39 (And let24 (And let213 (And let205 (And let257 (And let15 (And let245 let80)))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let316 := by timed flipNotAnd lean_s1 [let207, let59, let230, let279, let39, let24, let213, let205, let257, let15, let245, let80]
have lean_s3 : let300 := by timed rfl
have lean_s4 : (Eq let208 let208) := by timed rfl
let lean_s5 := by timed congr lean_s3 lean_s4
have lean_s6 : let233 := by timed rfl
let lean_s7 := by timed flipCongrArg lean_s6 [Eq]
have lean_s8 : (Eq let269 let233) := by timed congr lean_s7 lean_r87
have lean_s9 : (Eq let269 True) := by timed Eq.trans lean_s8 lean_r85
have lean_s10 : (Eq let236 True) := by timed Eq.trans lean_r111 lean_s9
have lean_s11 : let236 := by timed trueElim lean_s10
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq let314 let314) := by timed rfl
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : (Eq let310 let310) := by timed rfl
let lean_s16 := by timed congr lean_s3 lean_s15
have lean_s17 : let211 := by timed rfl
let lean_s18 := by timed flipCongrArg lean_s17 [Eq]
have lean_s19 : (Eq let41 let211) := by timed congr lean_s18 lean_r64
have lean_s20 : (Eq let41 True) := by timed Eq.trans lean_s19 lean_r61
have lean_s21 : (Eq let42 True) := by timed Eq.trans lean_r7 lean_s20
have lean_s22 : let42 := by timed trueElim lean_s21
let lean_s23 := by timed congr lean_s3 lean_s22
have lean_s24 : let260 := by timed rfl
let lean_s25 := by timed flipCongrArg lean_s24 [Eq]
have lean_s26 : (Eq let264 let260) := by timed congr lean_s25 lean_r106
have lean_s27 : (Eq let264 True) := by timed Eq.trans lean_s26 lean_r104
have lean_s28 : (Eq let263 True) := by timed Eq.trans lean_r107 lean_s27
have lean_s29 : let263 := by timed trueElim lean_s28
let lean_s30 := by timed congr lean_s3 lean_s29
have lean_s31 : (Eq let312 let312) := by timed rfl
let lean_s32 := by timed congr lean_s3 lean_s31
have lean_s33 : (Eq let311 let311) := by timed rfl
let lean_s34 := by timed congr lean_s3 lean_s33
have lean_s35 : (Eq let313 let313) := by timed rfl
let lean_s36 := by timed congr lean_s3 lean_s35
have lean_s37 : let220 := by timed rfl
let lean_s38 := by timed flipCongrArg lean_s37 [Eq]
have lean_s39 : (Eq let259 let220) := by timed congr lean_s38 lean_r49
have lean_s40 : (Eq let259 True) := by timed Eq.trans lean_s39 lean_r72
have lean_s41 : (Eq let200 True) := by timed Eq.trans lean_r103 lean_s40
have lean_s42 : let200 := by timed trueElim lean_s41
let lean_s43 := by timed congr lean_s3 lean_s42
have lean_s44 : let228 := by timed rfl
let lean_s45 := by timed flipCongrArg lean_s44 [Eq]
have lean_s46 : (Eq let255 let228) := by timed congr lean_s45 lean_r100
have lean_s47 : (Eq let255 True) := by timed Eq.trans lean_s46 lean_r82
have lean_s48 : (Eq let254 True) := by timed Eq.trans lean_r101 lean_s47
have lean_s49 : let254 := by timed trueElim lean_s48
let lean_s50 := by timed congr lean_s3 lean_s49
have lean_s51 : (Eq let81 let81) := by timed rfl
let lean_s52 := by timed congr lean_s50 lean_s51
let lean_s53 := by timed congr lean_s43 lean_s52
let lean_s54 := by timed congr lean_s36 lean_s53
let lean_s55 := by timed congr lean_s34 lean_s54
let lean_s56 := by timed congr lean_s32 lean_s55
let lean_s57 := by timed congr lean_s30 lean_s56
let lean_s58 := by timed congr lean_s23 lean_s57
let lean_s59 := by timed congr lean_s16 lean_s58
let lean_s60 := by timed congr lean_s14 lean_s59
let lean_s61 := by timed congr lean_s12 lean_s60
have lean_s62 : (Eq let316 let315) := by timed congr lean_s5 lean_s61
have lean_s63 : let315 := by timed eqResolve lean_s2 lean_s62
have lean_s64 : (Or let81 (Or let227 (Or let38 (Or let14 (Or let58 (Or let23 (Or let314 (Or let313 (Or let312 (Or let311 (Or let310 let208))))))))))) := by permutateOr lean_s63, [11, 10, 4, 9, 1, 5, 2, 8, 6, 7, 3, 0], (- 1)
have lean_s65 : (Or let81 (Or let297 (Or let238 False))) :=
  (scope (fun lean_a147 : let80 =>
    (scope (fun lean_a148 : let102 =>
      (scope (fun lean_a149 : let208 =>
        have lean_s65 : (Eq let208 let209) := by timed Eq.symm lean_r53
        have lean_s66 : let209 := by timed eqResolve lean_a149 lean_s65
        have lean_s67 : let226 := by intTightUb lean_s66
        have lean_s68 : (Or let250 False) :=
          (scope (fun lean_a149 : let226 =>
            have lean_s68 : let248 := by timed trueElim lean_r97
            have lean_s69 : let309 := by timed And.intro lean_s68 lean_a149
            have lean_s70 : (Implies let309 let308) := by arithMulPos [let188, let9, let2], 1
            have lean_s71 : let308 := by timed modusPonens lean_s69 lean_s70
            have lean_s72 : let225 := by timed trueElim lean_r80
            have lean_s73 : let307 := by timed And.intro lean_s72 lean_a148
            have lean_s74 : (Implies let307 let306) := by arithMulNeg [let101, let1, let33], 3
            have lean_s75 : let306 := by timed modusPonens lean_s73 lean_s74
            have lean_s76 : let305 := by timed And.intro lean_s72 lean_a147
            have lean_s77 : (Implies let305 let304) := by arithMulNeg [let79, let9, let33], 3
            have lean_s78 : let304 := by timed modusPonens lean_s76 lean_s77
            have lean_s79 : let303 := by sumBounds [lean_s71, lean_s75, lean_s78]
            let lean_s80 := by timed congrHAdd lean_r91 lean_r88
            have lean_s81 : (Eq let302 let190) := by timed congrHAdd lean_r94 lean_s80
            have lean_s82 : (Eq let302 let34) := by timed Eq.trans lean_s81 lean_r46
            let lean_s83 := by timed flipCongrArg lean_s82 [LE.le]
            let lean_s84 := by timed congrHAdd lean_r86 lean_r84
            have lean_s85 : (Eq let301 let35) := by timed congrHAdd lean_r110 lean_s84
            have lean_s86 : (Eq let301 let33) := by timed Eq.trans lean_s85 lean_r6
            have lean_s87 : (Eq let303 let67) := by timed congr lean_s83 lean_s86
            have lean_s88 : (Eq let303 False) := by timed Eq.trans lean_s87 lean_r16
            show False from by timed eqResolve lean_s79 lean_s88
          ))
        have lean_s69 : let250 := by liftOrNToNeg lean_s68
        have lean_s70 : (Eq let250 let238) := by timed flipCongrArg lean_r81 [Not]
        have lean_s71 : (Eq let250 let207) := by timed Eq.trans lean_s70 lean_r89
        have lean_s72 : (Eq let251 let207) := by timed Eq.trans lean_r99 lean_s71
        have lean_s73 : (Eq let207 let251) := by timed Eq.symm lean_s72
        have lean_s74 : (Eq let250 let251) := by timed Eq.trans lean_s71 lean_s73
        have lean_s75 : let251 := by timed eqResolve lean_s69 lean_s74
        have lean_s76 : (Eq let207 let250) := by timed Eq.symm lean_s71
        have lean_s77 : let252 := by timed Eq.trans lean_s72 lean_s76
        have lean_s78 : let250 := by timed eqResolve lean_s75 lean_s77
        show False from by timed contradiction lean_s67 lean_s78
  ))))))
have lean_s66 : (Not (And let80 (And let102 let208))) := by liftOrNToNeg lean_s65
have lean_s67 : let299 := by timed flipNotAnd lean_s66 [let80, let102, let208]
have lean_s68 : let300 := by timed rfl
let lean_s69 := by timed congr lean_s68 lean_s51
have lean_s70 : (Eq let297 let297) := by timed rfl
let lean_s71 := by timed congr lean_s68 lean_s70
have lean_s72 : let222 := by timed rfl
let lean_s73 := by timed flipCongrArg lean_s72 [Eq]
have lean_s74 : (Eq let242 let222) := by timed congr lean_s73 lean_r89
have lean_s75 : (Eq let242 True) := by timed Eq.trans lean_s74 lean_r78
have lean_s76 : (Eq let239 True) := by timed Eq.trans lean_r92 lean_s75
have lean_s77 : let239 := by timed trueElim lean_s76
let lean_s78 := by timed congr lean_s71 lean_s77
have lean_s79 : (Eq let299 let298) := by timed congr lean_s69 lean_s78
have lean_s80 : let298 := by timed eqResolve lean_s67 lean_s79
have lean_s81 : (Eq And And) := by timed rfl
let lean_s82 := by timed congrHAdd lean_r29 lean_r54
let lean_s83 := by timed congrHAdd lean_r27 lean_s82
let lean_s84 := by timed congrHAdd lean_r8 lean_s83
let lean_s85 := by timed congrHAdd lean_r60 lean_s84
let lean_s86 := by timed congrHAdd lean_r63 lean_s85
let lean_s87 := by timed congrHAdd lean_r5 lean_s86
let lean_s88 := by timed congrHAdd lean_r76 lean_s87
have lean_s89 : (Eq let171 let195) := by timed congrHAdd lean_r77 lean_s88
have lean_s90 : let296 := by timed Eq.trans lean_s89 lean_r47
have lean_s91 : let296 := by timed Eq.trans lean_r56 lean_s90
let lean_s92 := by timed flipCongrArg lean_s91 [GE.ge]
have lean_s93 : (Eq let28 let28) := by timed rfl
have lean_s94 : (Eq let172 let204) := by timed congr lean_s92 lean_s93
have lean_s95 : (Eq let172 let81) := by timed Eq.trans lean_s94 lean_r51
have lean_s96 : (Eq let173 let82) := by timed flipCongrArg lean_s95 [Not]
have lean_s97 : (Eq let173 let80) := by timed Eq.trans lean_s96 lean_r19
let lean_s98 := by timed congr lean_s81 lean_s97
have lean_s99 : (Eq x9 x9) := by timed rfl
have lean_s100 : (Eq x11 x11) := by timed rfl
let lean_s101 := by timed congrHAdd lean_r11 lean_r37
let lean_s102 := by timed congrHAdd lean_r67 lean_s101
let lean_s103 := by timed congrHAdd lean_s100 lean_s102
have lean_s104 : (Eq let48 let63) := by timed congrHAdd lean_s99 lean_s103
have lean_s105 : (Eq let48 let62) := by timed Eq.trans lean_s104 lean_r13
have lean_s106 : (Eq let50 let62) := by timed Eq.trans lean_r9 lean_s105
let lean_s107 := by timed flipCongrArg lean_s106 [LE.le]
have lean_s108 : (Eq let1 let1) := by timed rfl
have lean_s109 : (Eq let165 let231) := by timed congr lean_s107 lean_s108
have lean_s110 : (Eq let165 let230) := by timed Eq.trans lean_s109 lean_r83
let lean_s111 := by timed congr lean_s81 lean_s110
have lean_s112 : (Eq x7 x7) := by timed rfl
have lean_s113 : (Eq x8 x8) := by timed rfl
have lean_s114 : (Eq x4 x4) := by timed rfl
let lean_s115 := by timed congrHAdd lean_s114 lean_r37
let lean_s116 := by timed congrHAdd lean_r32 lean_s115
let lean_s117 := by timed congrHAdd lean_s113 lean_s116
let lean_s118 := by timed congrHAdd lean_s112 lean_s117
have lean_s119 : (Eq let219 let66) := by timed congrHAdd lean_s100 lean_s118
have lean_s120 : (Eq let219 let65) := by timed Eq.trans lean_s119 lean_r15
have lean_s121 : (Eq let163 let65) := by timed Eq.trans lean_r71 lean_s120
let lean_s122 := by timed flipCongrArg lean_s121 [LE.le]
have lean_s123 : (Eq let9 let9) := by timed rfl
have lean_s124 : (Eq let164 let258) := by timed congr lean_s122 lean_s123
have lean_s125 : (Eq let164 let257) := by timed Eq.trans lean_s124 lean_r102
let lean_s126 := by timed congr lean_s81 lean_s125
have lean_s127 : (Eq let8 let8) := by timed rfl
let lean_s128 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s129 : (Eq x5 x5) := by timed rfl
have lean_s130 : (Eq x10 x10) := by timed rfl
let lean_s131 := by timed congrHAdd lean_s130 lean_r55
let lean_s132 := by timed congrHAdd lean_r30 lean_s131
let lean_s133 := by timed congrHAdd lean_s99 lean_s132
let lean_s134 := by timed congrHAdd lean_s129 lean_s133
have lean_s135 : (Eq let86 let71) := by timed congrHAdd lean_s100 lean_s134
have lean_s136 : (Eq let86 let70) := by timed Eq.trans lean_s135 lean_r17
have lean_s137 : (Eq let87 let70) := by timed Eq.trans lean_r21 lean_s136
have lean_s138 : (Eq let162 let246) := by timed congr lean_s128 lean_s137
have lean_s139 : (Eq let162 let245) := by timed Eq.trans lean_s138 lean_r95
let lean_s140 := by timed congr lean_s81 lean_s139
have lean_s141 : (Eq x14 x14) := by timed rfl
have lean_s142 : (Eq x6 x6) := by timed rfl
let lean_s143 := by timed congrHAdd lean_r67 lean_s114
let lean_s144 := by timed congrHAdd lean_r43 lean_s143
let lean_s145 := by timed congrHAdd lean_s142 lean_s144
let lean_s146 := by timed congrHAdd lean_s129 lean_s145
have lean_s147 : (Eq let176 let88) := by timed congrHAdd lean_s141 lean_s146
have lean_s148 : (Eq let176 let37) := by timed Eq.trans lean_s147 lean_r22
have lean_s149 : (Eq let160 let37) := by timed Eq.trans lean_r39 lean_s148
let lean_s150 := by timed flipCongrArg lean_s149 [LE.le]
have lean_s151 : (Eq let161 let91) := by timed congr lean_s150 lean_s108
have lean_s152 : (Eq let161 let39) := by timed Eq.trans lean_s151 lean_r25
let lean_s153 := by timed congr lean_s81 lean_s152
let lean_s154 := by timed congrHAdd lean_r58 lean_s130
let lean_s155 := by timed congrHAdd lean_s129 lean_s154
have lean_s156 : (Eq let221 let104) := by timed congrHAdd lean_r24 lean_s155
have lean_s157 : (Eq let157 let104) := by timed Eq.trans lean_r75 lean_s156
let lean_s158 := by timed flipCongrArg lean_s157 [LE.le]
have lean_s159 : (Eq let158 let105) := by timed congr lean_s158 lean_s108
have lean_s160 : (Eq let158 let102) := by timed Eq.trans lean_s159 lean_r28
let lean_s161 := by timed congr lean_s81 lean_s160
have lean_s162 : (Eq x12 x12) := by timed rfl
let lean_s163 := by timed congrHAdd lean_s113 lean_s162
let lean_s164 := by timed congrHAdd lean_s141 lean_s163
have lean_s165 : (Eq let266 let277) := by timed congrHAdd lean_r30 lean_s164
have lean_s166 : (Eq let266 let214) := by timed Eq.trans lean_s165 lean_r120
have lean_s167 : (Eq let155 let214) := by timed Eq.trans lean_r108 lean_s166
let lean_s168 := by timed flipCongrArg lean_s167 [LE.le]
have lean_s169 : (Eq let156 let215) := by timed congr lean_s168 lean_s108
have lean_s170 : (Eq let156 let213) := by timed Eq.trans lean_s169 lean_r65
let lean_s171 := by timed congr lean_s81 lean_s170
have lean_s172 : (Eq x1 x1) := by timed rfl
let lean_s173 := by timed congrHAdd lean_s172 lean_r69
let lean_s174 := by timed congrHAdd lean_r18 lean_s173
let lean_s175 := by timed congrHAdd lean_r32 lean_s174
let lean_s176 := by timed congrHAdd lean_s99 lean_s175
have lean_s177 : (Eq let210 let181) := by timed congrHAdd lean_r74 lean_s176
have lean_s178 : (Eq let210 let13) := by timed Eq.trans lean_s177 lean_r44
have lean_s179 : (Eq let153 let13) := by timed Eq.trans lean_r59 lean_s178
let lean_s180 := by timed flipCongrArg lean_s179 [LE.le]
have lean_s181 : (Eq let154 let217) := by timed congr lean_s180 lean_s123
have lean_s182 : (Eq let154 let15) := by timed Eq.trans lean_s181 lean_r68
let lean_s183 := by timed congr lean_s81 lean_s182
let lean_s184 := by timed flipCongrArg lean_s108 [LE.le]
have lean_s185 : (Eq x13 x13) := by timed rfl
have lean_s186 : (Eq x0 x0) := by timed rfl
let lean_s187 := by timed congrHAdd lean_r37 lean_r55
let lean_s188 := by timed congrHAdd lean_s114 lean_s187
let lean_s189 := by timed congrHAdd lean_s186 lean_s188
let lean_s190 := by timed congrHAdd lean_s185 lean_s189
let lean_s191 := by timed congrHAdd lean_r58 lean_s190
let lean_s192 := by timed congrHAdd lean_s129 lean_s191
have lean_s193 : (Eq let216 let179) := by timed congrHAdd lean_r24 lean_s192
have lean_s194 : (Eq let216 let178) := by timed Eq.trans lean_s193 lean_r41
have lean_s195 : (Eq let149 let178) := by timed Eq.trans lean_r66 lean_s194
have lean_s196 : (Eq let150 let206) := by timed congr lean_s184 lean_s195
have lean_s197 : (Eq let150 let205) := by timed Eq.trans lean_s196 lean_r52
let lean_s198 := by timed congr lean_s81 lean_s197
let lean_s199 := by timed congrHAdd lean_s113 lean_r73
let lean_s200 := by timed congrHAdd lean_r57 lean_s199
let lean_s201 := by timed congrHAdd lean_s141 lean_s200
have lean_s202 : (Eq let212 let109) := by timed congrHAdd lean_s185 lean_s201
have lean_s203 : (Eq let212 let57) := by timed Eq.trans lean_s202 lean_r31
have lean_s204 : (Eq let145 let57) := by timed Eq.trans lean_r62 lean_s203
let lean_s205 := by timed flipCongrArg lean_s204 [LE.le]
have lean_s206 : (Eq let146 let134) := by timed congr lean_s205 lean_s127
have lean_s207 : (Eq let146 let59) := by timed Eq.trans lean_s206 lean_r34
let lean_s208 := by timed congr lean_s81 lean_s207
have lean_s209 : (Eq x2 x2) := by timed rfl
let lean_s210 := by timed congrHAdd lean_r67 lean_s162
let lean_s211 := by timed congrHAdd lean_r36 lean_s210
let lean_s212 := by timed congrHAdd lean_r132 lean_s211
let lean_s213 := by timed congrHAdd lean_s209 lean_s212
have lean_s214 : (Eq let137 let89) := by timed congrHAdd lean_s142 lean_s213
have lean_s215 : (Eq let137 let22) := by timed Eq.trans lean_s214 lean_r23
have lean_s216 : (Eq let138 let22) := by timed Eq.trans lean_r35 lean_s215
let lean_s217 := by timed flipCongrArg lean_s216 [LE.le]
have lean_s218 : (Eq let142 let64) := by timed congr lean_s217 lean_s123
have lean_s219 : (Eq let142 let24) := by timed Eq.trans lean_s218 lean_r14
let lean_s220 := by timed congr lean_s81 lean_s219
let lean_s221 := by timed flipCongrArg lean_s108 [LE.le]
let lean_s222 := by timed congrHAdd lean_s209 lean_r113
have lean_s223 : (Eq let177 let284) := by timed congrHAdd lean_s141 lean_s222
have lean_s224 : (Eq let177 let201) := by timed Eq.trans lean_s223 lean_r126
have lean_s225 : (Eq let140 let201) := by timed Eq.trans lean_r40 lean_s224
have lean_s226 : (Eq let141 let280) := by timed congr lean_s221 lean_s225
have lean_s227 : (Eq let141 let279) := by timed Eq.trans lean_s226 lean_r122
let lean_s228 := by timed congr lean_s220 lean_s227
let lean_s229 := by timed congr lean_s208 lean_s228
let lean_s230 := by timed congr lean_s198 lean_s229
let lean_s231 := by timed congr lean_s183 lean_s230
let lean_s232 := by timed congr lean_s171 lean_s231
let lean_s233 := by timed congr lean_s161 lean_s232
let lean_s234 := by timed congr lean_s153 lean_s233
let lean_s235 := by timed congr lean_s140 lean_s234
let lean_s236 := by timed congr lean_s126 lean_s235
let lean_s237 := by timed congr lean_s111 lean_s236
have lean_s238 : (Eq let174 let295) := by timed congr lean_s98 lean_s237
have lean_s239 : (Eq let175 let295) := by timed Eq.trans lean_r38 lean_s238
have lean_s240 : let295 := by timed eqResolve lean_a134 lean_s239
have lean_s241 : let80 := by andElim lean_s240, 0
let lean_s242 := by R2 lean_s80, lean_s241, let80, [(- 1), 0]
have lean_s243 : let102 := by andElim lean_s240, 5
have lean_s244 : let207 := by R2 lean_s242, lean_s243, let102, [(- 1), 0]
let lean_s245 := by R2 lean_s64, lean_s244, let207, [(- 1), 0]
have lean_s246 : let279 := by andElim lean_s240, 11
let lean_s247 := by R2 lean_s245, lean_s246, let279, [(- 1), 0]
have lean_s248 : let24 := by andElim lean_s240, 10
let lean_s249 := by R1 lean_s247, lean_s248, let23, [(- 1), 0]
have lean_s250 : let59 := by andElim lean_s240, 9
let lean_s251 := by R1 lean_s249, lean_s250, let58, [(- 1), 0]
have lean_s252 : let205 := by andElim lean_s240, 8
let lean_s253 := by R2 lean_s251, lean_s252, let205, [(- 1), 0]
have lean_s254 : let15 := by andElim lean_s240, 7
let lean_s255 := by R1 lean_s253, lean_s254, let14, [(- 1), 0]
have lean_s256 : let213 := by andElim lean_s240, 6
let lean_s257 := by R2 lean_s255, lean_s256, let213, [(- 1), 0]
have lean_s258 : let39 := by andElim lean_s240, 4
let lean_s259 := by R1 lean_s257, lean_s258, let38, [(- 1), 0]
have lean_s260 : let245 := by andElim lean_s240, 3
let lean_s261 := by R1 lean_s259, lean_s260, let227, [(- 1), 0]
have lean_s262 : let257 := by andElim lean_s240, 2
let lean_s263 := by R2 lean_s261, lean_s262, let257, [(- 1), 0]
have lean_s264 : let230 := by andElim lean_s240, 1
let lean_s265 := by R2 lean_s263, lean_s264, let230, [(- 1), 0]
exact (show False from by R2 lean_s265, lean_s241, let80, [0, 0])


