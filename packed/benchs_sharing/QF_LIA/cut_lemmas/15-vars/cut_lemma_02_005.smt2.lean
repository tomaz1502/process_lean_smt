open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x12 : Int}
variable {x1 : Int}
variable {x0 : Int}
variable {x13 : Int}
variable {x7 : Int}
variable {x6 : Int}
variable {x3 : Int}
variable {x5 : Int}
variable {x4 : Int}
variable {x3 : Int}
variable {x10 : Int}
variable {x6 : Int}
variable {x7 : Int}
variable {x14 : Int}
variable {x14 : Int}
variable {x0 : Int}
variable {x4 : Int}
variable {x8 : Int}
variable {x10 : Int}
variable {x8 : Int}
variable {x11 : Int}
variable {x5 : Int}
variable {x11 : Int}
variable {x13 : Int}
variable {x2 : Int}
variable {x1 : Int}
variable {x12 : Int}
variable {x2 : Int}

theorem th0 :
  let let1 := (Int.ofNat 1)
  let let2 := (binrel% GE.ge x11 let1)
  let let3 := (Not let2)
  let let4 := (binrel% LT.lt x11 let1)
  let let5 := (Int.ofNat 0)
  let let6 := (Rat.ofInt 1)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% LT.lt let7 let5)
  let let9 := (Int.ofNat 2)
  let let10 := (Int.ofNat 3)
  let let11 := (binrel% HDiv.hDiv let10 let9)
  let let12 := (Neg.neg let11)
  let let13 := (binrel% LT.lt let12 let5)
  let let14 := (binrel% HDiv.hDiv let1 let9)
  let let15 := (binrel% GT.gt let14 let5)
  let let16 := (Neg.neg (Int.ofNat 10))
  let let17 := (Neg.neg let1)
  let let18 := (binrel% HMul.hMul let17 x14)
  let let19 := (binrel% HMul.hMul let17 x12)
  let let20 := (binrel% HMul.hMul let17 x11)
  let let21 := (binrel% HMul.hMul let9 x7)
  let let22 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let19 let18)))
  let let23 := (binrel% GE.ge let22 let16)
  let let24 := (Not let23)
  let let25 := (binrel% LT.lt let22 let16)
  let let26 := (Neg.neg let9)
  let let27 := (binrel% HMul.hMul let26 x14)
  let let28 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x8 let27))
  let let29 := (binrel% GE.ge let28 let9)
  let let30 := (Not let29)
  let let31 := (binrel% LT.lt let28 let9)
  let let32 := (binrel% GT.gt let6 let5)
  let let33 := (Int.ofNat 4)
  let let34 := (binrel% GE.ge x8 let33)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt x8 let33)
  let let37 := (Rat.ofInt x11)
  let let38 := (binrel% HMul.hMul let6 x11)
  let let39 := (binrel% HMul.hMul let17 x13)
  let let40 := (binrel% HMul.hMul let26 x12)
  let let41 := (binrel% HMul.hMul let17 x10)
  let let42 := (binrel% HMul.hMul let17 x3)
  let let43 := (Rat.ofInt (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let40 let39)))))
  let let44 := (binrel% HMul.hMul let9 x12)
  let let45 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd let44 x13))))
  let let46 := (binrel% HMul.hMul let7 let45)
  let let47 := (binrel% HMul.hMul let9 x3)
  let let48 := (binrel% HMul.hMul x3 let9)
  let let49 := (binrel% HMul.hMul let17 x8)
  let let50 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x12 (binrel% HAdd.hAdd let39 x14))))))
  let let51 := (binrel% GE.ge let50 let10)
  let let52 := (Not let51)
  let let53 := (binrel% HMul.hMul let17 x2)
  let let54 := (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x13 let18))))))
  let let55 := (binrel% LE.le let26 let54)
  let let56 := (binrel% HMul.hMul let7 let17)
  let let57 := (binrel% HMul.hMul x13 let1)
  let let58 := (binrel% HMul.hMul x12 let9)
  let let59 := (binrel% HMul.hMul x1 let17)
  let let60 := (binrel% HMul.hMul x11 let9)
  let let61 := (binrel% HMul.hMul x10 let1)
  let let62 := (binrel% HMul.hMul x4 let9)
  let let63 := (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let60 let59)))
  let let64 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let62 let61) let60) let59)
  let let65 := (binrel% HMul.hMul let17 x5)
  let let66 := (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd x8 x10)))
  let let67 := (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let47)))
  let let68 := (binrel% GE.ge let66 let1)
  let let69 := (binrel% LE.le let1 let66)
  let let70 := (binrel% HMul.hMul let17 x1)
  let let71 := (Not let52)
  let let72 := (binrel% HMul.hMul let9 x4)
  let let73 := (binrel% GE.ge x13 let26)
  let let74 := (Not let73)
  let let75 := (binrel% LT.lt x13 let26)
  let let76 := (binrel% HMul.hMul x11 let1)
  let let77 := (binrel% HMul.hMul x3 let1)
  let let78 := (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let57 let58))))
  let let79 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let77 let61) let76) let57) let58)
  let let80 := (binrel% HMul.hMul let9 x11)
  let let81 := (Int.ofNat 6)
  let let82 := (binrel% GE.ge x0 let81)
  let let83 := (Not let82)
  let let84 := (Not let83)
  let let85 := (Eq let84 let82)
  let let86 := (binrel% HMul.hMul let17 x4)
  let let87 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 let41)))))
  let let88 := (binrel% GE.ge let87 let9)
  let let89 := (Eq let88 let88)
  let let90 := (binrel% HMul.hMul let26 x11)
  let let91 := (binrel% HMul.hMul let26 x4)
  let let92 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let41 let90)))
  let let93 := (binrel% GE.ge let92 let1)
  let let94 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x10 let80)))
  let let95 := (binrel% LE.le let94 let17)
  let let96 := (Neg.neg let14)
  let let97 := (binrel% LT.lt let96 let5)
  let let98 := (Not let35)
  let let99 := (Eq let34 let98)
  let let100 := (Eq let98 let34)
  let let101 := (Rat.ofInt let92)
  let let102 := (binrel% HMul.hMul let6 let92)
  let let103 := (binrel% GE.ge let45 let17)
  let let104 := (Not let103)
  let let105 := (binrel% LE.le let45 let26)
  let let106 := (Rat.ofInt let28)
  let let107 := (binrel% HMul.hMul let6 let28)
  let let108 := (Not let104)
  let let109 := (binrel% HMul.hMul x3 let17)
  let let110 := (binrel% HMul.hMul x8 let17)
  let let111 := (Neg.neg let10)
  let let112 := (binrel% HMul.hMul let111 x0)
  let let113 := (binrel% HMul.hMul x0 let111)
  let let114 := (Not let88)
  let let115 := (binrel% LT.lt let87 let9)
  let let116 := (binrel% HMul.hMul x2 let1)
  let let117 := (binrel% HMul.hMul x12 let17)
  let let118 := (binrel% HMul.hMul x8 let1)
  let let119 := (binrel% HMul.hMul x2 let17)
  let let120 := (binrel% HMul.hMul x14 let17)
  let let121 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let57 let117))))))
  let let122 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let109 let120) let119) let61) let118) let57) let117)
  let let123 := (binrel% HMul.hMul let81 x11)
  let let124 := (binrel% HMul.hMul x11 let81)
  let let125 := (binrel% HMul.hMul x10 let17)
  let let126 := (Rat.ofInt let39)
  let let127 := (binrel% HMul.hMul let7 x13)
  let let128 := (binrel% GE.ge x3 let5)
  let let129 := (Not let128)
  let let130 := (binrel% LE.le x3 let17)
  let let131 := (binrel% HMul.hMul let96 x14)
  let let132 := (binrel% HMul.hMul let96 x12)
  let let133 := (binrel% HAdd.hAdd (binrel% HMul.hMul let96 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let96 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x10) (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x13) let131))))))
  let let134 := (binrel% HMul.hMul let96 let50)
  let let135 := (binrel% HMul.hMul let9 x6)
  let let136 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let41 let20))))))
  let let137 := (binrel% GE.ge let136 let17)
  let let138 := (Eq let137 let137)
  let let139 := (binrel% HMul.hMul x11 let17)
  let let140 := (binrel% HMul.hMul x7 let9)
  let let141 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let139 let117)))
  let let142 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let140 let120) let139) let117)
  let let143 := (Eq let82 let84)
  let let144 := (Neg.neg x4)
  let let145 := (Neg.neg x10)
  let let146 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 x1)))))
  let let147 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x7) x0) let145) let144) x1)
  let let148 := (Eq let82 let82)
  let let149 := (binrel% HMul.hMul let9 x14)
  let let150 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let49 let149))
  let let151 := (binrel% LE.le let150 let26)
  let let152 := (binrel% HMul.hMul let111 x8)
  let let153 := (binrel% HMul.hMul x8 let111)
  let let154 := (Not let24)
  let let155 := (Eq let23 let154)
  let let156 := (Eq let154 let23)
  let let157 := (binrel% HMul.hMul x5 let17)
  let let158 := (binrel% HMul.hMul let81 x10)
  let let159 := (binrel% HMul.hMul x10 let81)
  let let160 := (Eq let23 let23)
  let let161 := (Not let137)
  let let162 := (binrel% LT.lt let136 let17)
  let let163 := (binrel% LE.le let81 x0)
  let let164 := (binrel% HMul.hMul x14 let9)
  let let165 := (Rat.ofInt x8)
  let let166 := (binrel% HMul.hMul let6 x8)
  let let167 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let86 x1)))))
  let let168 := (Neg.neg x5)
  let let169 := (Not let114)
  let let170 := (Eq let169 let88)
  let let171 := (binrel% HMul.hMul let81 x4)
  let let172 := (binrel% HMul.hMul x4 let81)
  let let173 := (binrel% HMul.hMul let81 x14)
  let let174 := (binrel% HMul.hMul x14 let81)
  let let175 := (binrel% HMul.hMul let111 x7)
  let let176 := (binrel% HMul.hMul x7 let111)
  let let177 := (binrel% HMul.hMul let10 x3)
  let let178 := (binrel% HMul.hMul x3 let10)
  let let179 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x13 let19))))))
  let let180 := (Not True)
  let let181 := (binrel% HMul.hMul let111 x6)
  let let182 := (binrel% HMul.hMul x6 let111)
  let let183 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x13 let44))))
  let let184 := (Not let93)
  let let185 := (Not let184)
  let let186 := (Eq let93 let185)
  let let187 := (Eq let185 let93)
  let let188 := (binrel% HMul.hMul let6 let10)
  let let189 := (binrel% HMul.hMul let6 let1)
  let let190 := (Int.ofNat 11)
  let let191 := (Neg.neg let190)
  let let192 := (binrel% HMul.hMul let14 let191)
  let let193 := (Int.ofNat 5)
  let let194 := (binrel% HMul.hMul let6 let193)
  let let195 := (binrel% HMul.hMul let12 let10)
  let let196 := (binrel% HMul.hMul let6 let5)
  let let197 := (binrel% HMul.hMul let14 let1)
  let let198 := (binrel% HMul.hMul let14 let17)
  let let199 := (binrel% HMul.hMul let96 let1)
  let let200 := (binrel% HMul.hMul let96 let10)
  let let201 := (binrel% HMul.hMul let7 let26)
  let let202 := (binrel% HAdd.hAdd let201 (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let200 (binrel% HAdd.hAdd let199 (binrel% HAdd.hAdd let198 (binrel% HAdd.hAdd let197 (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd let195 (binrel% HAdd.hAdd let194 (binrel% HAdd.hAdd let192 (binrel% HAdd.hAdd let189 let188))))))))))))
  let let203 := (binrel% HMul.hMul let14 let22)
  let let204 := (binrel% HMul.hMul let6 x0)
  let let205 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul let26 x10) (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let39 let27)))))))))))
  let let206 := (binrel% HMul.hMul let12 let205)
  let let207 := (binrel% HMul.hMul let14 let87)
  let let208 := (binrel% HMul.hMul let14 let136)
  let let209 := (binrel% HMul.hMul let96 let66)
  let let210 := (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let209 (binrel% HAdd.hAdd let208 (binrel% HAdd.hAdd let207 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let206 (binrel% HAdd.hAdd let204 (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let107 let166))))))))))))
  let let211 := (binrel% GE.ge let210 let202)
  let let212 := (Not let211)
  let let213 := (binrel% LT.lt let210 let202)
  let let214 := (binrel% HMul.hMul let10 x13)
  let let215 := (binrel% HMul.hMul let81 x12)
  let let216 := (binrel% HMul.hMul let111 x1)
  let let217 := (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let216 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let175 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let215 (binrel% HAdd.hAdd let214 let173)))))))))))
  let let218 := (binrel% HAdd.hAdd let215 (binrel% HAdd.hAdd let216 (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let175 (binrel% HAdd.hAdd let181 let177)))))))))))
  let let219 := (binrel% LE.le let87 let1)
  let let220 := (Not let161)
  let let221 := (Eq let137 let220)
  let let222 := (Eq let220 let137)
  let let223 := (binrel% HMul.hMul x13 let10)
  let let224 := (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let42 let49))
  let let225 := (binrel% HMul.hMul x4 let17)
  let let226 := (binrel% GE.ge let205 let10)
  let let227 := (Not let226)
  let let228 := (Not let227)
  let let229 := (binrel% HMul.hMul x12 let81)
  let let230 := (binrel% HMul.hMul x6 let9)
  let let231 := (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let225 (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let110 let139))))))
  let let232 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let230 let116) let225) let125) let157) let110) let139)
  let let233 := (binrel% HMul.hMul x1 let111)
  let let234 := (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let233 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let176 (binrel% HAdd.hAdd let182 let178)))))))))))
  let let235 := (binrel% LE.le let16 let22)
  let let236 := (Neg.neg let81)
  let let237 := (binrel% GE.ge let217 let236)
  let let238 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let20 let19)))
  let let239 := (Not let129)
  let let240 := (binrel% LE.le let17 let136)
  let let241 := (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let109 let110))
  let let242 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let164 let109) let110)
  let let243 := (Eq let34 let34)
  let let244 := (Rat.ofInt x0)
  let let245 := (binrel% LE.le x13 let111)
  let let246 := (binrel% LE.le let1 x11)
  let let247 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let80 let70)))
  let let248 := (binrel% LE.le let33 x8)
  let let249 := (Eq let2 let2)
  let let250 := (binrel% GE.ge let234 let236)
  let let251 := (Not let250)
  let let252 := (binrel% LE.le let16 let142)
  let let253 := (Not let252)
  let let254 := (binrel% LE.le let147 let1)
  let let255 := (binrel% LE.le let242 let26)
  let let256 := (Not let255)
  let let257 := (binrel% LE.le let64 let17)
  let let258 := (Not let257)
  let let259 := (binrel% LE.le let79 let26)
  let let260 := (Not let259)
  let let261 := (binrel% LE.le let26 let122)
  let let262 := (Not let261)
  let let263 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let168 x8) x10) let48)
  let let264 := (binrel% LE.le let1 let263)
  let let265 := (binrel% LE.le let17 let232)
  let let266 := (Not let265)
  let let267 := (Not let163)
  let let268 := (Not let245)
  let let269 := (Not let246)
  let let270 := (Not let130)
  let let271 := (Not let248)
  let let272 := (And let271 (And let270 (And let269 (And let268 (And let267 (And let266 (And let264 (And let262 (And let260 (And let258 (And let256 (And let254 (And let253 let251)))))))))))))
  let let273 := (And (And (And (And (And (And (And (And (And (And (And (And (And let271 let270) let269) let268) let267) let266) let264) let262) let260) let258) let256) let254) let253) let251)
  let let274 := (Not let3)
  let let275 := (Eq let274 let2)
  let let276 := (Eq let2 let274)
  let let277 := (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let48)))
  let let278 := (Eq let88 let169)
  let let279 := (Eq let93 let93)
  let let280 := (Eq let29 let29)
  let let281 := (Rat.ofInt 2)
  let let282 := (Not let30)
  let let283 := (Eq let282 let29)
  let let284 := (Eq let29 let282)
  let let285 := (Not let74)
  let let286 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x11) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x12) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x13) (binrel% HMul.hMul let10 x14))))))))))))
  let let287 := (binrel% HMul.hMul let96 x10)
  let let288 := (binrel% HMul.hMul let96 x4)
  let let289 := (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x1) (binrel% HAdd.hAdd let288 (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x7) let287)))))
  let let290 := (Rat.ofInt 0)
  let let291 := (Rat.ofInt 3)
  let let292 := (Neg.neg (binrel% HDiv.hDiv let190 let9))
  let let293 := (Rat.ofInt 5)
  let let294 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 9) let9))
  let let295 := (binrel% HAdd.hAdd let281 (binrel% HAdd.hAdd let290 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let290 (binrel% HAdd.hAdd let294 (binrel% HAdd.hAdd let293 (binrel% HAdd.hAdd let292 (binrel% HAdd.hAdd let6 let291))))))))))))
  let let296 := (binrel% LT.lt x0 let81)
  let let297 := (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let49 let20))))))
  let let298 := (binrel% LT.lt let92 let1)
  let let299 := (binrel% HMul.hMul let96 x11)
  let let300 := (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let299 (binrel% HAdd.hAdd let132 let131)))
  let let301 := (binrel% HMul.hMul let96 x8)
  let let302 := (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x2) (binrel% HAdd.hAdd let288 (binrel% HAdd.hAdd (binrel% HMul.hMul let96 x5) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let301 (binrel% HAdd.hAdd let287 let299))))))
  let let303 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x5) (binrel% HAdd.hAdd let301 let287)))
  let let304 := (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let303 (binrel% HAdd.hAdd let302 (binrel% HAdd.hAdd let289 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let286 (binrel% HAdd.hAdd let244 (binrel% HAdd.hAdd let300 (binrel% HAdd.hAdd let106 let165))))))))))))
  let let305 := (binrel% GE.ge let290 let290)
  let let306 := (And let35 (And let128 (And let3 (And let73 (And let83 (And let161 (And let68 (And let51 (And let103 (And let184 (And let30 (And let114 (And let24 let226)))))))))))))
  let let307 := (Eq let234 let217)
  let let308 := (Not let68)
  let let309 := (Or let34 (Or let29 (Or let23 (Or let82 (Or let227 (Or let93 (Or let88 (Or let137 (Or let308 (Or let52 (Or let104 (Or let2 let74))))))))))))
  let let310 := (Or let98 (Or let282 (Or let154 (Or let84 (Or let227 (Or let185 (Or let169 (Or let220 (Or let308 (Or let52 (Or let104 (Or let274 let74))))))))))))
  let let311 := (Or let74 False)
  let let312 := (binrel% LE.le let166 let188)
  let let313 := (binrel% LE.le x8 let10)
  let let314 := (And let32 let313)
  let let315 := (binrel% LE.le let107 let189)
  let let316 := (binrel% LE.le let28 let1)
  let let317 := (And let32 let316)
  let let318 := (binrel% LE.le let203 let192)
  let let319 := (binrel% LE.le let22 let191)
  let let320 := (And let15 let319)
  let let321 := (binrel% LE.le let204 let194)
  let let322 := (binrel% LE.le x0 let193)
  let let323 := (And let32 let322)
  let let324 := (binrel% LE.le let206 let195)
  let let325 := (And let13 let226)
  let let326 := (binrel% LE.le let102 let196)
  let let327 := (binrel% LE.le let92 let5)
  let let328 := (And let32 let327)
  let let329 := (binrel% LE.le let207 let197)
  let let330 := (And let15 let219)
  let let331 := (binrel% LT.lt let208 let198)
  let let332 := (And let15 let162)
  let let333 := (binrel% LE.le let209 let199)
  let let334 := (And let97 let68)
  let let335 := (binrel% LE.le let134 let200)
  let let336 := (And let97 let51)
  let let337 := (binrel% LE.le let46 let56)
  let let338 := (And let8 let103)
  let let339 := (binrel% LE.le let38 let196)
  let let340 := (binrel% LE.le x11 let5)
  let let341 := (And let32 let340)
  let let342 := (binrel% LE.le let127 let201)
  let let343 := (And let8 let73)
(Eq let4 let3) → (Eq let8 True) → (Eq let13 True) → (Eq let15 True) → (Eq let25 let24) → (Eq let31 let30) → (Eq let32 True) → (Eq let36 let35) → (Eq let38 let37) → (Eq let46 let43) → (Eq let48 let47) → (Eq let55 let52) → (Eq let56 let6) → (Eq let57 x13) → (Eq let58 let44) → (Eq let64 let63) → (Eq let67 let66) → (Eq let69 let68) → (Eq let59 let70) → (Eq let71 let51) → (Eq let62 let72) → (Eq let75 let74) → (Eq let61 x10) → (Eq let79 let78) → (Eq let60 let80) → (Eq let77 x3) → let85 → (Eq let89 True) → (Eq let95 let93) → (Eq let97 True) → (Eq let100 let99) → (Eq let102 let101) → (Eq let105 let104) → (Eq let107 let106) → (Eq let108 let103) → (Eq let109 let42) → (Eq let110 let49) → (Eq let113 let112) → (Eq let115 let114) → (Eq let116 x2) → (Eq let122 let121) → (Eq let117 let19) → (Eq let124 let123) → (Eq let125 let41) → (Eq let127 let126) → (Eq let118 x8) → (Eq let130 let129) → (Eq let134 let133) → (Eq let138 True) → (Eq let142 let141) → (Eq let76 x11) → (Eq let85 let143) → (Eq let147 let146) → (Eq let145 let41) → (Eq let148 True) → (Eq let151 let29) → (Eq let153 let152) → (Eq let156 let155) → (Eq let157 let65) → let156 → (Eq let140 let21) → (Eq let159 let158) → (Eq let160 True) → (Eq let120 let18) → (Eq let162 let161) → (Eq let163 let82) → (Eq let164 let149) → (Eq let166 let165) → (Eq let167 let87) → (Eq let168 let65) → let170 → (Eq let172 let171) → (Eq let139 let20) → (Eq let174 let173) → (Eq let176 let175) → (Eq let178 let177) → (Eq let179 let54) → (Eq let180 False) → (Eq let182 let181) → (Eq let183 let45) → (Eq let144 let86) → (Eq let187 let186) → (Eq let213 let212) → (Eq let119 let53) → (Eq let218 let217) → (Eq let219 let114) → (Eq let222 let221) → (Eq let223 let214) → (Eq let224 let150) → (Eq let225 let86) → (Eq let228 let226) → (Eq let229 let215) → (Eq let232 let231) → (Eq let233 let216) → (Eq let230 let135) → (Eq let234 let234) → (Eq let235 let23) → (Eq let237 let227) → (Eq let238 let22) → (Eq let239 let128) → (Eq let240 let137) → (Eq let189 let6) → (Eq let242 let241) → (Eq let243 True) → (Eq let204 let244) → (Eq let245 let74) → (Eq let246 let2) → (Eq let247 let94) → (Eq let248 let34) → (Eq let249 True) → (Eq let273 let272) → let275 → (Eq let275 let276) → let222 → (Eq let263 let277) → (Eq let170 let278) → (Eq let279 True) → let187 → (Eq let280 True) → (Eq let201 let281) → let283 → (Eq let283 let284) → (Eq let285 let73) → let100 → (Eq let206 let286) → (Eq let207 let289) → (Eq let295 let290) → (Eq let188 let291) → (Eq let296 let83) → (Eq let192 let292) → (Eq let297 let136) → (Eq let194 let293) → (Eq let195 let294) → (Eq let196 let290) → (Eq let197 let14) → (Eq let198 let96) → (Eq let199 let96) → (Eq let298 let184) → (Eq let200 let12) → (Eq let304 let290) → (Eq let203 let300) → (Eq let305 True) → (Eq let208 let302) → (Eq let209 let303) → let273 → False :=
  let let1 := (Int.ofNat 1)
  let let2 := (binrel% GE.ge x11 let1)
  let let3 := (Not let2)
  let let4 := (binrel% LT.lt x11 let1)
  let let5 := (Int.ofNat 0)
  let let6 := (Rat.ofInt 1)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% LT.lt let7 let5)
  let let9 := (Int.ofNat 2)
  let let10 := (Int.ofNat 3)
  let let11 := (binrel% HDiv.hDiv let10 let9)
  let let12 := (Neg.neg let11)
  let let13 := (binrel% LT.lt let12 let5)
  let let14 := (binrel% HDiv.hDiv let1 let9)
  let let15 := (binrel% GT.gt let14 let5)
  let let16 := (Neg.neg (Int.ofNat 10))
  let let17 := (Neg.neg let1)
  let let18 := (binrel% HMul.hMul let17 x14)
  let let19 := (binrel% HMul.hMul let17 x12)
  let let20 := (binrel% HMul.hMul let17 x11)
  let let21 := (binrel% HMul.hMul let9 x7)
  let let22 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let19 let18)))
  let let23 := (binrel% GE.ge let22 let16)
  let let24 := (Not let23)
  let let25 := (binrel% LT.lt let22 let16)
  let let26 := (Neg.neg let9)
  let let27 := (binrel% HMul.hMul let26 x14)
  let let28 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x8 let27))
  let let29 := (binrel% GE.ge let28 let9)
  let let30 := (Not let29)
  let let31 := (binrel% LT.lt let28 let9)
  let let32 := (binrel% GT.gt let6 let5)
  let let33 := (Int.ofNat 4)
  let let34 := (binrel% GE.ge x8 let33)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt x8 let33)
  let let37 := (Rat.ofInt x11)
  let let38 := (binrel% HMul.hMul let6 x11)
  let let39 := (binrel% HMul.hMul let17 x13)
  let let40 := (binrel% HMul.hMul let26 x12)
  let let41 := (binrel% HMul.hMul let17 x10)
  let let42 := (binrel% HMul.hMul let17 x3)
  let let43 := (Rat.ofInt (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let40 let39)))))
  let let44 := (binrel% HMul.hMul let9 x12)
  let let45 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd let44 x13))))
  let let46 := (binrel% HMul.hMul let7 let45)
  let let47 := (binrel% HMul.hMul let9 x3)
  let let48 := (binrel% HMul.hMul x3 let9)
  let let49 := (binrel% HMul.hMul let17 x8)
  let let50 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x12 (binrel% HAdd.hAdd let39 x14))))))
  let let51 := (binrel% GE.ge let50 let10)
  let let52 := (Not let51)
  let let53 := (binrel% HMul.hMul let17 x2)
  let let54 := (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x13 let18))))))
  let let55 := (binrel% LE.le let26 let54)
  let let56 := (binrel% HMul.hMul let7 let17)
  let let57 := (binrel% HMul.hMul x13 let1)
  let let58 := (binrel% HMul.hMul x12 let9)
  let let59 := (binrel% HMul.hMul x1 let17)
  let let60 := (binrel% HMul.hMul x11 let9)
  let let61 := (binrel% HMul.hMul x10 let1)
  let let62 := (binrel% HMul.hMul x4 let9)
  let let63 := (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let60 let59)))
  let let64 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let62 let61) let60) let59)
  let let65 := (binrel% HMul.hMul let17 x5)
  let let66 := (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd x8 x10)))
  let let67 := (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let47)))
  let let68 := (binrel% GE.ge let66 let1)
  let let69 := (binrel% LE.le let1 let66)
  let let70 := (binrel% HMul.hMul let17 x1)
  let let71 := (Not let52)
  let let72 := (binrel% HMul.hMul let9 x4)
  let let73 := (binrel% GE.ge x13 let26)
  let let74 := (Not let73)
  let let75 := (binrel% LT.lt x13 let26)
  let let76 := (binrel% HMul.hMul x11 let1)
  let let77 := (binrel% HMul.hMul x3 let1)
  let let78 := (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let57 let58))))
  let let79 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let77 let61) let76) let57) let58)
  let let80 := (binrel% HMul.hMul let9 x11)
  let let81 := (Int.ofNat 6)
  let let82 := (binrel% GE.ge x0 let81)
  let let83 := (Not let82)
  let let84 := (Not let83)
  let let85 := (Eq let84 let82)
  let let86 := (binrel% HMul.hMul let17 x4)
  let let87 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 let41)))))
  let let88 := (binrel% GE.ge let87 let9)
  let let89 := (Eq let88 let88)
  let let90 := (binrel% HMul.hMul let26 x11)
  let let91 := (binrel% HMul.hMul let26 x4)
  let let92 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let41 let90)))
  let let93 := (binrel% GE.ge let92 let1)
  let let94 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x10 let80)))
  let let95 := (binrel% LE.le let94 let17)
  let let96 := (Neg.neg let14)
  let let97 := (binrel% LT.lt let96 let5)
  let let98 := (Not let35)
  let let99 := (Eq let34 let98)
  let let100 := (Eq let98 let34)
  let let101 := (Rat.ofInt let92)
  let let102 := (binrel% HMul.hMul let6 let92)
  let let103 := (binrel% GE.ge let45 let17)
  let let104 := (Not let103)
  let let105 := (binrel% LE.le let45 let26)
  let let106 := (Rat.ofInt let28)
  let let107 := (binrel% HMul.hMul let6 let28)
  let let108 := (Not let104)
  let let109 := (binrel% HMul.hMul x3 let17)
  let let110 := (binrel% HMul.hMul x8 let17)
  let let111 := (Neg.neg let10)
  let let112 := (binrel% HMul.hMul let111 x0)
  let let113 := (binrel% HMul.hMul x0 let111)
  let let114 := (Not let88)
  let let115 := (binrel% LT.lt let87 let9)
  let let116 := (binrel% HMul.hMul x2 let1)
  let let117 := (binrel% HMul.hMul x12 let17)
  let let118 := (binrel% HMul.hMul x8 let1)
  let let119 := (binrel% HMul.hMul x2 let17)
  let let120 := (binrel% HMul.hMul x14 let17)
  let let121 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let57 let117))))))
  let let122 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let109 let120) let119) let61) let118) let57) let117)
  let let123 := (binrel% HMul.hMul let81 x11)
  let let124 := (binrel% HMul.hMul x11 let81)
  let let125 := (binrel% HMul.hMul x10 let17)
  let let126 := (Rat.ofInt let39)
  let let127 := (binrel% HMul.hMul let7 x13)
  let let128 := (binrel% GE.ge x3 let5)
  let let129 := (Not let128)
  let let130 := (binrel% LE.le x3 let17)
  let let131 := (binrel% HMul.hMul let96 x14)
  let let132 := (binrel% HMul.hMul let96 x12)
  let let133 := (binrel% HAdd.hAdd (binrel% HMul.hMul let96 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let96 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x10) (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x13) let131))))))
  let let134 := (binrel% HMul.hMul let96 let50)
  let let135 := (binrel% HMul.hMul let9 x6)
  let let136 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let41 let20))))))
  let let137 := (binrel% GE.ge let136 let17)
  let let138 := (Eq let137 let137)
  let let139 := (binrel% HMul.hMul x11 let17)
  let let140 := (binrel% HMul.hMul x7 let9)
  let let141 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let139 let117)))
  let let142 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let140 let120) let139) let117)
  let let143 := (Eq let82 let84)
  let let144 := (Neg.neg x4)
  let let145 := (Neg.neg x10)
  let let146 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 x1)))))
  let let147 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x7) x0) let145) let144) x1)
  let let148 := (Eq let82 let82)
  let let149 := (binrel% HMul.hMul let9 x14)
  let let150 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let49 let149))
  let let151 := (binrel% LE.le let150 let26)
  let let152 := (binrel% HMul.hMul let111 x8)
  let let153 := (binrel% HMul.hMul x8 let111)
  let let154 := (Not let24)
  let let155 := (Eq let23 let154)
  let let156 := (Eq let154 let23)
  let let157 := (binrel% HMul.hMul x5 let17)
  let let158 := (binrel% HMul.hMul let81 x10)
  let let159 := (binrel% HMul.hMul x10 let81)
  let let160 := (Eq let23 let23)
  let let161 := (Not let137)
  let let162 := (binrel% LT.lt let136 let17)
  let let163 := (binrel% LE.le let81 x0)
  let let164 := (binrel% HMul.hMul x14 let9)
  let let165 := (Rat.ofInt x8)
  let let166 := (binrel% HMul.hMul let6 x8)
  let let167 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let86 x1)))))
  let let168 := (Neg.neg x5)
  let let169 := (Not let114)
  let let170 := (Eq let169 let88)
  let let171 := (binrel% HMul.hMul let81 x4)
  let let172 := (binrel% HMul.hMul x4 let81)
  let let173 := (binrel% HMul.hMul let81 x14)
  let let174 := (binrel% HMul.hMul x14 let81)
  let let175 := (binrel% HMul.hMul let111 x7)
  let let176 := (binrel% HMul.hMul x7 let111)
  let let177 := (binrel% HMul.hMul let10 x3)
  let let178 := (binrel% HMul.hMul x3 let10)
  let let179 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x13 let19))))))
  let let180 := (Not True)
  let let181 := (binrel% HMul.hMul let111 x6)
  let let182 := (binrel% HMul.hMul x6 let111)
  let let183 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x13 let44))))
  let let184 := (Not let93)
  let let185 := (Not let184)
  let let186 := (Eq let93 let185)
  let let187 := (Eq let185 let93)
  let let188 := (binrel% HMul.hMul let6 let10)
  let let189 := (binrel% HMul.hMul let6 let1)
  let let190 := (Int.ofNat 11)
  let let191 := (Neg.neg let190)
  let let192 := (binrel% HMul.hMul let14 let191)
  let let193 := (Int.ofNat 5)
  let let194 := (binrel% HMul.hMul let6 let193)
  let let195 := (binrel% HMul.hMul let12 let10)
  let let196 := (binrel% HMul.hMul let6 let5)
  let let197 := (binrel% HMul.hMul let14 let1)
  let let198 := (binrel% HMul.hMul let14 let17)
  let let199 := (binrel% HMul.hMul let96 let1)
  let let200 := (binrel% HMul.hMul let96 let10)
  let let201 := (binrel% HMul.hMul let7 let26)
  let let202 := (binrel% HAdd.hAdd let201 (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let200 (binrel% HAdd.hAdd let199 (binrel% HAdd.hAdd let198 (binrel% HAdd.hAdd let197 (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd let195 (binrel% HAdd.hAdd let194 (binrel% HAdd.hAdd let192 (binrel% HAdd.hAdd let189 let188))))))))))))
  let let203 := (binrel% HMul.hMul let14 let22)
  let let204 := (binrel% HMul.hMul let6 x0)
  let let205 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul let26 x10) (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let39 let27)))))))))))
  let let206 := (binrel% HMul.hMul let12 let205)
  let let207 := (binrel% HMul.hMul let14 let87)
  let let208 := (binrel% HMul.hMul let14 let136)
  let let209 := (binrel% HMul.hMul let96 let66)
  let let210 := (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let209 (binrel% HAdd.hAdd let208 (binrel% HAdd.hAdd let207 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let206 (binrel% HAdd.hAdd let204 (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let107 let166))))))))))))
  let let211 := (binrel% GE.ge let210 let202)
  let let212 := (Not let211)
  let let213 := (binrel% LT.lt let210 let202)
  let let214 := (binrel% HMul.hMul let10 x13)
  let let215 := (binrel% HMul.hMul let81 x12)
  let let216 := (binrel% HMul.hMul let111 x1)
  let let217 := (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let216 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let175 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let215 (binrel% HAdd.hAdd let214 let173)))))))))))
  let let218 := (binrel% HAdd.hAdd let215 (binrel% HAdd.hAdd let216 (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let175 (binrel% HAdd.hAdd let181 let177)))))))))))
  let let219 := (binrel% LE.le let87 let1)
  let let220 := (Not let161)
  let let221 := (Eq let137 let220)
  let let222 := (Eq let220 let137)
  let let223 := (binrel% HMul.hMul x13 let10)
  let let224 := (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let42 let49))
  let let225 := (binrel% HMul.hMul x4 let17)
  let let226 := (binrel% GE.ge let205 let10)
  let let227 := (Not let226)
  let let228 := (Not let227)
  let let229 := (binrel% HMul.hMul x12 let81)
  let let230 := (binrel% HMul.hMul x6 let9)
  let let231 := (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let225 (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let110 let139))))))
  let let232 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let230 let116) let225) let125) let157) let110) let139)
  let let233 := (binrel% HMul.hMul x1 let111)
  let let234 := (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let233 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let176 (binrel% HAdd.hAdd let182 let178)))))))))))
  let let235 := (binrel% LE.le let16 let22)
  let let236 := (Neg.neg let81)
  let let237 := (binrel% GE.ge let217 let236)
  let let238 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let20 let19)))
  let let239 := (Not let129)
  let let240 := (binrel% LE.le let17 let136)
  let let241 := (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let109 let110))
  let let242 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let164 let109) let110)
  let let243 := (Eq let34 let34)
  let let244 := (Rat.ofInt x0)
  let let245 := (binrel% LE.le x13 let111)
  let let246 := (binrel% LE.le let1 x11)
  let let247 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let80 let70)))
  let let248 := (binrel% LE.le let33 x8)
  let let249 := (Eq let2 let2)
  let let250 := (binrel% GE.ge let234 let236)
  let let251 := (Not let250)
  let let252 := (binrel% LE.le let16 let142)
  let let253 := (Not let252)
  let let254 := (binrel% LE.le let147 let1)
  let let255 := (binrel% LE.le let242 let26)
  let let256 := (Not let255)
  let let257 := (binrel% LE.le let64 let17)
  let let258 := (Not let257)
  let let259 := (binrel% LE.le let79 let26)
  let let260 := (Not let259)
  let let261 := (binrel% LE.le let26 let122)
  let let262 := (Not let261)
  let let263 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let168 x8) x10) let48)
  let let264 := (binrel% LE.le let1 let263)
  let let265 := (binrel% LE.le let17 let232)
  let let266 := (Not let265)
  let let267 := (Not let163)
  let let268 := (Not let245)
  let let269 := (Not let246)
  let let270 := (Not let130)
  let let271 := (Not let248)
  let let272 := (And let271 (And let270 (And let269 (And let268 (And let267 (And let266 (And let264 (And let262 (And let260 (And let258 (And let256 (And let254 (And let253 let251)))))))))))))
  let let273 := (And (And (And (And (And (And (And (And (And (And (And (And (And let271 let270) let269) let268) let267) let266) let264) let262) let260) let258) let256) let254) let253) let251)
  let let274 := (Not let3)
  let let275 := (Eq let274 let2)
  let let276 := (Eq let2 let274)
  let let277 := (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let48)))
  let let278 := (Eq let88 let169)
  let let279 := (Eq let93 let93)
  let let280 := (Eq let29 let29)
  let let281 := (Rat.ofInt 2)
  let let282 := (Not let30)
  let let283 := (Eq let282 let29)
  let let284 := (Eq let29 let282)
  let let285 := (Not let74)
  let let286 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x11) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x12) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x13) (binrel% HMul.hMul let10 x14))))))))))))
  let let287 := (binrel% HMul.hMul let96 x10)
  let let288 := (binrel% HMul.hMul let96 x4)
  let let289 := (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x1) (binrel% HAdd.hAdd let288 (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x7) let287)))))
  let let290 := (Rat.ofInt 0)
  let let291 := (Rat.ofInt 3)
  let let292 := (Neg.neg (binrel% HDiv.hDiv let190 let9))
  let let293 := (Rat.ofInt 5)
  let let294 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 9) let9))
  let let295 := (binrel% HAdd.hAdd let281 (binrel% HAdd.hAdd let290 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let290 (binrel% HAdd.hAdd let294 (binrel% HAdd.hAdd let293 (binrel% HAdd.hAdd let292 (binrel% HAdd.hAdd let6 let291))))))))))))
  let let296 := (binrel% LT.lt x0 let81)
  let let297 := (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let49 let20))))))
  let let298 := (binrel% LT.lt let92 let1)
  let let299 := (binrel% HMul.hMul let96 x11)
  let let300 := (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let299 (binrel% HAdd.hAdd let132 let131)))
  let let301 := (binrel% HMul.hMul let96 x8)
  let let302 := (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x2) (binrel% HAdd.hAdd let288 (binrel% HAdd.hAdd (binrel% HMul.hMul let96 x5) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let301 (binrel% HAdd.hAdd let287 let299))))))
  let let303 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x5) (binrel% HAdd.hAdd let301 let287)))
  let let304 := (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let303 (binrel% HAdd.hAdd let302 (binrel% HAdd.hAdd let289 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let286 (binrel% HAdd.hAdd let244 (binrel% HAdd.hAdd let300 (binrel% HAdd.hAdd let106 let165))))))))))))
  let let305 := (binrel% GE.ge let290 let290)
  let let306 := (And let35 (And let128 (And let3 (And let73 (And let83 (And let161 (And let68 (And let51 (And let103 (And let184 (And let30 (And let114 (And let24 let226)))))))))))))
  let let307 := (Eq let234 let217)
  let let308 := (Not let68)
  let let309 := (Or let34 (Or let29 (Or let23 (Or let82 (Or let227 (Or let93 (Or let88 (Or let137 (Or let308 (Or let52 (Or let104 (Or let2 let74))))))))))))
  let let310 := (Or let98 (Or let282 (Or let154 (Or let84 (Or let227 (Or let185 (Or let169 (Or let220 (Or let308 (Or let52 (Or let104 (Or let274 let74))))))))))))
  let let311 := (Or let74 False)
  let let312 := (binrel% LE.le let166 let188)
  let let313 := (binrel% LE.le x8 let10)
  let let314 := (And let32 let313)
  let let315 := (binrel% LE.le let107 let189)
  let let316 := (binrel% LE.le let28 let1)
  let let317 := (And let32 let316)
  let let318 := (binrel% LE.le let203 let192)
  let let319 := (binrel% LE.le let22 let191)
  let let320 := (And let15 let319)
  let let321 := (binrel% LE.le let204 let194)
  let let322 := (binrel% LE.le x0 let193)
  let let323 := (And let32 let322)
  let let324 := (binrel% LE.le let206 let195)
  let let325 := (And let13 let226)
  let let326 := (binrel% LE.le let102 let196)
  let let327 := (binrel% LE.le let92 let5)
  let let328 := (And let32 let327)
  let let329 := (binrel% LE.le let207 let197)
  let let330 := (And let15 let219)
  let let331 := (binrel% LT.lt let208 let198)
  let let332 := (And let15 let162)
  let let333 := (binrel% LE.le let209 let199)
  let let334 := (And let97 let68)
  let let335 := (binrel% LE.le let134 let200)
  let let336 := (And let97 let51)
  let let337 := (binrel% LE.le let46 let56)
  let let338 := (And let8 let103)
  let let339 := (binrel% LE.le let38 let196)
  let let340 := (binrel% LE.le x11 let5)
  let let341 := (And let32 let340)
  let let342 := (binrel% LE.le let127 let201)
  let let343 := (And let8 let73)
fun lean_r0 : (Eq let4 let3) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let8 True) => -- EVALUATE
fun lean_r2 : (Eq let13 True) => -- EVALUATE
fun lean_r3 : (Eq let15 True) => -- EVALUATE
fun lean_r4 : (Eq let25 let24) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let31 let30) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let32 True) => -- EVALUATE
fun lean_r7 : (Eq let36 let35) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let38 let37) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let46 let43) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let48 let47) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let55 let52) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let56 let6) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let57 x13) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let58 let44) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let64 let63) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let67 let66) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let69 let68) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let59 let70) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let71 let51) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let62 let72) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let75 let74) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let61 x10) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let79 let78) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let60 let80) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let77 x3) => -- THEORY_REWRITE_ARITH
fun lean_r26 : let85 => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let89 True) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let95 let93) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let97 True) => -- EVALUATE
fun lean_r30 : (Eq let100 let99) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let102 let101) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let105 let104) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let107 let106) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let108 let103) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let109 let42) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let110 let49) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let113 let112) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let115 let114) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let116 x2) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let122 let121) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let117 let19) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let124 let123) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let125 let41) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let127 let126) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let118 x8) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let130 let129) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let134 let133) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let138 True) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let142 let141) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let76 x11) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let85 let143) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let147 let146) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let145 let41) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let148 True) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq let151 let29) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let153 let152) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let156 let155) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq let157 let65) => -- THEORY_REWRITE_ARITH
fun lean_r59 : let156 => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let140 let21) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let159 let158) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let160 True) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let120 let18) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let162 let161) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let163 let82) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let164 let149) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let166 let165) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let167 let87) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let168 let65) => -- THEORY_REWRITE_ARITH
fun lean_r70 : let170 => -- THEORY_REWRITE_BOOL
fun lean_r71 : (Eq let172 let171) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let139 let20) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let174 let173) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let176 let175) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let178 let177) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let179 let54) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let180 False) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq let182 let181) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let183 let45) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let144 let86) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let187 let186) => -- THEORY_REWRITE_BOOL
fun lean_r82 : (Eq let213 let212) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let119 let53) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let218 let217) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let219 let114) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let222 let221) => -- THEORY_REWRITE_BOOL
fun lean_r87 : (Eq let223 let214) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let224 let150) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let225 let86) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let228 let226) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq let229 let215) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let232 let231) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let233 let216) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let230 let135) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let234 let234) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let235 let23) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let237 let227) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let238 let22) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let239 let128) => -- THEORY_REWRITE_BOOL
fun lean_r100 : (Eq let240 let137) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let189 let6) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let242 let241) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let243 True) => -- THEORY_REWRITE_BOOL
fun lean_r104 : (Eq let204 let244) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let245 let74) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let246 let2) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let247 let94) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let248 let34) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let249 True) => -- THEORY_REWRITE_BOOL
fun lean_r110 : (Eq let273 let272) => -- THEORY_REWRITE_BOOL
fun lean_r111 : let275 => -- THEORY_REWRITE_BOOL
fun lean_r112 : (Eq let275 let276) => -- THEORY_REWRITE_BOOL
fun lean_r113 : let222 => -- THEORY_REWRITE_BOOL
fun lean_r114 : (Eq let263 let277) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let170 let278) => -- THEORY_REWRITE_BOOL
fun lean_r116 : (Eq let279 True) => -- THEORY_REWRITE_BOOL
fun lean_r117 : let187 => -- THEORY_REWRITE_BOOL
fun lean_r118 : (Eq let280 True) => -- THEORY_REWRITE_BOOL
fun lean_r119 : (Eq let201 let281) => -- THEORY_REWRITE_ARITH
fun lean_r120 : let283 => -- THEORY_REWRITE_BOOL
fun lean_r121 : (Eq let283 let284) => -- THEORY_REWRITE_BOOL
fun lean_r122 : (Eq let285 let73) => -- THEORY_REWRITE_BOOL
fun lean_r123 : let100 => -- THEORY_REWRITE_BOOL
fun lean_r124 : (Eq let206 let286) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let207 let289) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let295 let290) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let188 let291) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let296 let83) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let192 let292) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq let297 let136) => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq let194 let293) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let195 let294) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let196 let290) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let197 let14) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let198 let96) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let199 let96) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let298 let184) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let200 let12) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let304 let290) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let203 let300) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let305 True) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq let208 let302) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let209 let303) => -- THEORY_REWRITE_ARITH
fun lean_a144 : let273 => by
have lean_s0 : (Or let98 (Or let282 (Or let154 (Or let84 (Or let227 (Or let185 (Or let169 (Or let220 (Or let308 (Or let52 (Or let104 (Or let274 let311)))))))))))) :=
  (scope (fun lean_a145 : let35 =>
    (scope (fun lean_a146 : let30 =>
      (scope (fun lean_a147 : let24 =>
        (scope (fun lean_a148 : let83 =>
          (scope (fun lean_a149 : let226 =>
            (scope (fun lean_a150 : let184 =>
              (scope (fun lean_a151 : let114 =>
                (scope (fun lean_a152 : let161 =>
                  (scope (fun lean_a153 : let68 =>
                    (scope (fun lean_a154 : let51 =>
                      (scope (fun lean_a155 : let103 =>
                        (scope (fun lean_a156 : let3 =>
                          (scope (fun lean_a157 : let73 =>
                            have lean_s0 : let311 :=
                              (scope (fun lean_a158 : let73 =>
                                have lean_s0 : let8 := by timed trueElim lean_r1
                                have lean_s1 : let343 := by timed And.intro lean_s0 lean_a158
                                have lean_s2 : (Implies let343 let342) := by arithMulNeg [x13, let26, let7], 3
                                have lean_s3 : let342 := by timed modusPonens lean_s1 lean_s2
                                have lean_s4 : let32 := by timed trueElim lean_r6
                                have lean_s5 : (Eq let3 let4) := by timed Eq.symm lean_r0
                                have lean_s6 : let4 := by timed eqResolve lean_a156 lean_s5
                                have lean_s7 : let340 := by intTightUb lean_s6
                                have lean_s8 : let341 := by timed And.intro lean_s4 lean_s7
                                have lean_s9 : (Implies let341 let339) := by arithMulPos [x11, let5, let6], 1
                                have lean_s10 : let339 := by timed modusPonens lean_s8 lean_s9
                                have lean_s11 : let338 := by timed And.intro lean_s0 lean_a155
                                have lean_s12 : (Implies let338 let337) := by arithMulNeg [let45, let17, let7], 3
                                have lean_s13 : let337 := by timed modusPonens lean_s11 lean_s12
                                have lean_s14 : let97 := by timed trueElim lean_r29
                                have lean_s15 : let336 := by timed And.intro lean_s14 lean_a154
                                have lean_s16 : (Implies let336 let335) := by arithMulNeg [let50, let10, let96], 3
                                have lean_s17 : let335 := by timed modusPonens lean_s15 lean_s16
                                have lean_s18 : let334 := by timed And.intro lean_s14 lean_a153
                                have lean_s19 : (Implies let334 let333) := by arithMulNeg [let66, let1, let96], 3
                                have lean_s20 : let333 := by timed modusPonens lean_s18 lean_s19
                                have lean_s21 : let15 := by timed trueElim lean_r3
                                have lean_s22 : (Eq let161 let162) := by timed Eq.symm lean_r64
                                have lean_s23 : let162 := by timed eqResolve lean_a152 lean_s22
                                have lean_s24 : let332 := by timed And.intro lean_s21 lean_s23
                                have lean_s25 : (Implies let332 let331) := by arithMulPos [let136, let17, let14], 0
                                have lean_s26 : let331 := by timed modusPonens lean_s24 lean_s25
                                have lean_s27 : (Eq let114 let115) := by timed Eq.symm lean_r38
                                have lean_s28 : let115 := by timed eqResolve lean_a151 lean_s27
                                have lean_s29 : let219 := by intTightUb lean_s28
                                have lean_s30 : let330 := by timed And.intro lean_s21 lean_s29
                                have lean_s31 : (Implies let330 let329) := by arithMulPos [let87, let1, let14], 1
                                have lean_s32 : let329 := by timed modusPonens lean_s30 lean_s31
                                have lean_s33 : (Eq let184 let298) := by timed Eq.symm lean_r137
                                have lean_s34 : let298 := by timed eqResolve lean_a150 lean_s33
                                have lean_s35 : let327 := by intTightUb lean_s34
                                have lean_s36 : let328 := by timed And.intro lean_s4 lean_s35
                                have lean_s37 : (Implies let328 let326) := by arithMulPos [let92, let5, let6], 1
                                have lean_s38 : let326 := by timed modusPonens lean_s36 lean_s37
                                have lean_s39 : let13 := by timed trueElim lean_r2
                                have lean_s40 : let325 := by timed And.intro lean_s39 lean_a149
                                have lean_s41 : (Implies let325 let324) := by arithMulNeg [let205, let10, let12], 3
                                have lean_s42 : let324 := by timed modusPonens lean_s40 lean_s41
                                have lean_s43 : (Eq let83 let296) := by timed Eq.symm lean_r128
                                have lean_s44 : let296 := by timed eqResolve lean_a148 lean_s43
                                have lean_s45 : let322 := by intTightUb lean_s44
                                have lean_s46 : let323 := by timed And.intro lean_s4 lean_s45
                                have lean_s47 : (Implies let323 let321) := by arithMulPos [x0, let193, let6], 1
                                have lean_s48 : let321 := by timed modusPonens lean_s46 lean_s47
                                have lean_s49 : (Eq let24 let25) := by timed Eq.symm lean_r4
                                have lean_s50 : let25 := by timed eqResolve lean_a147 lean_s49
                                have lean_s51 : let319 := by intTightUb lean_s50
                                have lean_s52 : let320 := by timed And.intro lean_s21 lean_s51
                                have lean_s53 : (Implies let320 let318) := by arithMulPos [let22, let191, let14], 1
                                have lean_s54 : let318 := by timed modusPonens lean_s52 lean_s53
                                have lean_s55 : (Eq let30 let31) := by timed Eq.symm lean_r5
                                have lean_s56 : let31 := by timed eqResolve lean_a146 lean_s55
                                have lean_s57 : let316 := by intTightUb lean_s56
                                have lean_s58 : let317 := by timed And.intro lean_s4 lean_s57
                                have lean_s59 : (Implies let317 let315) := by arithMulPos [let28, let1, let6], 1
                                have lean_s60 : let315 := by timed modusPonens lean_s58 lean_s59
                                have lean_s61 : (Eq let35 let36) := by timed Eq.symm lean_r7
                                have lean_s62 : let36 := by timed eqResolve lean_a145 lean_s61
                                have lean_s63 : let313 := by intTightUb lean_s62
                                have lean_s64 : let314 := by timed And.intro lean_s4 lean_s63
                                have lean_s65 : (Implies let314 let312) := by arithMulPos [x8, let10, let6], 1
                                have lean_s66 : let312 := by timed modusPonens lean_s64 lean_s65
                                have lean_s67 : let213 := by sumBounds [lean_s3, lean_s10, lean_s13, lean_s17, lean_s20, lean_s26, lean_s32, lean_s38, lean_s42, lean_s48, lean_s54, lean_s60, lean_s66]
                                let lean_s68 := by timed congrHAdd lean_r33 lean_r67
                                let lean_s69 := by timed congrHAdd lean_r140 lean_s68
                                let lean_s70 := by timed congrHAdd lean_r104 lean_s69
                                let lean_s71 := by timed congrHAdd lean_r124 lean_s70
                                let lean_s72 := by timed congrHAdd lean_r31 lean_s71
                                let lean_s73 := by timed congrHAdd lean_r125 lean_s72
                                let lean_s74 := by timed congrHAdd lean_r142 lean_s73
                                let lean_s75 := by timed congrHAdd lean_r143 lean_s74
                                let lean_s76 := by timed congrHAdd lean_r47 lean_s75
                                let lean_s77 := by timed congrHAdd lean_r9 lean_s76
                                let lean_s78 := by timed congrHAdd lean_r8 lean_s77
                                have lean_s79 : (Eq let210 let304) := by timed congrHAdd lean_r44 lean_s78
                                have lean_s80 : (Eq let210 let290) := by timed Eq.trans lean_s79 lean_r139
                                let lean_s81 := by timed flipCongrArg lean_s80 [GE.ge]
                                let lean_s82 := by timed congrHAdd lean_r101 lean_r127
                                let lean_s83 := by timed congrHAdd lean_r129 lean_s82
                                let lean_s84 := by timed congrHAdd lean_r131 lean_s83
                                let lean_s85 := by timed congrHAdd lean_r132 lean_s84
                                let lean_s86 := by timed congrHAdd lean_r133 lean_s85
                                let lean_s87 := by timed congrHAdd lean_r134 lean_s86
                                let lean_s88 := by timed congrHAdd lean_r135 lean_s87
                                let lean_s89 := by timed congrHAdd lean_r136 lean_s88
                                let lean_s90 := by timed congrHAdd lean_r138 lean_s89
                                let lean_s91 := by timed congrHAdd lean_r12 lean_s90
                                let lean_s92 := by timed congrHAdd lean_r133 lean_s91
                                have lean_s93 : (Eq let202 let295) := by timed congrHAdd lean_r119 lean_s92
                                have lean_s94 : (Eq let202 let290) := by timed Eq.trans lean_s93 lean_r126
                                have lean_s95 : (Eq let211 let305) := by timed congr lean_s81 lean_s94
                                have lean_s96 : (Eq let211 True) := by timed Eq.trans lean_s95 lean_r141
                                have lean_s97 : (Eq let212 let180) := by timed flipCongrArg lean_s96 [Not]
                                have lean_s98 : (Eq let212 False) := by timed Eq.trans lean_s97 lean_r77
                                have lean_s99 : (Eq let213 False) := by timed Eq.trans lean_r82 lean_s98
                                show False from by timed eqResolve lean_s67 lean_s99
                              ))
                            have lean_s1 : let74 := by liftOrNToNeg lean_s0
                            have lean_s2 : (Eq let74 let75) := by timed Eq.symm lean_r21
                            have lean_s3 : let75 := by timed eqResolve lean_s1 lean_s2
                            have lean_s4 : let74 := by timed eqResolve lean_s3 lean_r21
                            show False from by timed contradiction lean_a157 lean_s4
  ))))))))))))))))))))))))))
have lean_s1 : (Not (And let35 (And let30 (And let24 (And let83 (And let226 (And let184 (And let114 (And let161 (And let68 (And let51 (And let103 (And let3 let73))))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let310 := by timed flipNotAnd lean_s1 [let35, let30, let24, let83, let226, let184, let114, let161, let68, let51, let103, let3, let73]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let243 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let99 let243) := by timed congr lean_s5 lean_r123
have lean_s7 : (Eq let99 True) := by timed Eq.trans lean_s6 lean_r103
have lean_s8 : (Eq let100 True) := by timed Eq.trans lean_r30 lean_s7
have lean_s9 : let100 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let280 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let284 let280) := by timed congr lean_s12 lean_r120
have lean_s14 : (Eq let284 True) := by timed Eq.trans lean_s13 lean_r118
have lean_s15 : (Eq let283 True) := by timed Eq.trans lean_r121 lean_s14
have lean_s16 : let283 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : let160 := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq let155 let160) := by timed congr lean_s19 lean_r59
have lean_s21 : (Eq let155 True) := by timed Eq.trans lean_s20 lean_r62
have lean_s22 : (Eq let156 True) := by timed Eq.trans lean_r57 lean_s21
have lean_s23 : let156 := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : let148 := by timed rfl
let lean_s26 := by timed flipCongrArg lean_s25 [Eq]
have lean_s27 : (Eq let143 let148) := by timed congr lean_s26 lean_r26
have lean_s28 : (Eq let143 True) := by timed Eq.trans lean_s27 lean_r54
have lean_s29 : (Eq let85 True) := by timed Eq.trans lean_r51 lean_s28
have lean_s30 : let85 := by timed trueElim lean_s29
let lean_s31 := by timed congr lean_s3 lean_s30
have lean_s32 : (Eq let227 let227) := by timed rfl
let lean_s33 := by timed congr lean_s3 lean_s32
have lean_s34 : let279 := by timed rfl
let lean_s35 := by timed flipCongrArg lean_s34 [Eq]
have lean_s36 : (Eq let186 let279) := by timed congr lean_s35 lean_r117
have lean_s37 : (Eq let186 True) := by timed Eq.trans lean_s36 lean_r116
have lean_s38 : (Eq let187 True) := by timed Eq.trans lean_r81 lean_s37
have lean_s39 : let187 := by timed trueElim lean_s38
let lean_s40 := by timed congr lean_s3 lean_s39
have lean_s41 : let89 := by timed rfl
let lean_s42 := by timed flipCongrArg lean_s41 [Eq]
have lean_s43 : (Eq let278 let89) := by timed congr lean_s42 lean_r70
have lean_s44 : (Eq let278 True) := by timed Eq.trans lean_s43 lean_r27
have lean_s45 : (Eq let170 True) := by timed Eq.trans lean_r115 lean_s44
have lean_s46 : let170 := by timed trueElim lean_s45
let lean_s47 := by timed congr lean_s3 lean_s46
have lean_s48 : let138 := by timed rfl
let lean_s49 := by timed flipCongrArg lean_s48 [Eq]
have lean_s50 : (Eq let221 let138) := by timed congr lean_s49 lean_r113
have lean_s51 : (Eq let221 True) := by timed Eq.trans lean_s50 lean_r48
have lean_s52 : (Eq let222 True) := by timed Eq.trans lean_r86 lean_s51
have lean_s53 : let222 := by timed trueElim lean_s52
let lean_s54 := by timed congr lean_s3 lean_s53
have lean_s55 : (Eq let308 let308) := by timed rfl
let lean_s56 := by timed congr lean_s3 lean_s55
have lean_s57 : (Eq let52 let52) := by timed rfl
let lean_s58 := by timed congr lean_s3 lean_s57
have lean_s59 : (Eq let104 let104) := by timed rfl
let lean_s60 := by timed congr lean_s3 lean_s59
have lean_s61 : let249 := by timed rfl
let lean_s62 := by timed flipCongrArg lean_s61 [Eq]
have lean_s63 : (Eq let276 let249) := by timed congr lean_s62 lean_r111
have lean_s64 : (Eq let276 True) := by timed Eq.trans lean_s63 lean_r109
have lean_s65 : (Eq let275 True) := by timed Eq.trans lean_r112 lean_s64
have lean_s66 : let275 := by timed trueElim lean_s65
let lean_s67 := by timed congr lean_s3 lean_s66
have lean_s68 : (Eq let74 let74) := by timed rfl
let lean_s69 := by timed congr lean_s67 lean_s68
let lean_s70 := by timed congr lean_s60 lean_s69
let lean_s71 := by timed congr lean_s58 lean_s70
let lean_s72 := by timed congr lean_s56 lean_s71
let lean_s73 := by timed congr lean_s54 lean_s72
let lean_s74 := by timed congr lean_s47 lean_s73
let lean_s75 := by timed congr lean_s40 lean_s74
let lean_s76 := by timed congr lean_s33 lean_s75
let lean_s77 := by timed congr lean_s31 lean_s76
let lean_s78 := by timed congr lean_s24 lean_s77
let lean_s79 := by timed congr lean_s17 lean_s78
have lean_s80 : (Eq let310 let309) := by timed congr lean_s10 lean_s79
have lean_s81 : let309 := by timed eqResolve lean_s2 lean_s80
have lean_s82 : (Or let34 (Or let2 (Or let74 (Or let82 (Or let137 (Or let52 (Or let104 (Or let93 (Or let29 (Or let88 (Or let23 (Or let227 let308)))))))))))) := by permutateOr lean_s81, [0, 11, 12, 3, 7, 9, 10, 5, 1, 6, 2, 4, 8], (- 1)
have lean_s83 : (Eq And And) := by timed rfl
have lean_s84 : (Eq let271 let35) := by timed flipCongrArg lean_r108 [Not]
let lean_s85 := by timed congr lean_s83 lean_s84
have lean_s86 : (Eq let270 let239) := by timed flipCongrArg lean_r46 [Not]
have lean_s87 : (Eq let270 let128) := by timed Eq.trans lean_s86 lean_r99
let lean_s88 := by timed congr lean_s83 lean_s87
have lean_s89 : (Eq let269 let3) := by timed flipCongrArg lean_r106 [Not]
let lean_s90 := by timed congr lean_s83 lean_s89
have lean_s91 : (Eq let268 let285) := by timed flipCongrArg lean_r105 [Not]
have lean_s92 : (Eq let268 let73) := by timed Eq.trans lean_s91 lean_r122
let lean_s93 := by timed congr lean_s83 lean_s92
have lean_s94 : (Eq let267 let83) := by timed flipCongrArg lean_r65 [Not]
let lean_s95 := by timed congr lean_s83 lean_s94
have lean_s96 : (Eq let17 let17) := by timed rfl
let lean_s97 := by timed flipCongrArg lean_s96 [LE.le]
let lean_s98 := by timed congrHAdd lean_r36 lean_r72
let lean_s99 := by timed congrHAdd lean_r58 lean_s98
let lean_s100 := by timed congrHAdd lean_r43 lean_s99
let lean_s101 := by timed congrHAdd lean_r89 lean_s100
let lean_s102 := by timed congrHAdd lean_r39 lean_s101
have lean_s103 : (Eq let231 let297) := by timed congrHAdd lean_r94 lean_s102
have lean_s104 : (Eq let231 let136) := by timed Eq.trans lean_s103 lean_r130
have lean_s105 : (Eq let232 let136) := by timed Eq.trans lean_r92 lean_s104
have lean_s106 : (Eq let265 let240) := by timed congr lean_s97 lean_s105
have lean_s107 : (Eq let265 let137) := by timed Eq.trans lean_s106 lean_r100
have lean_s108 : (Eq let266 let161) := by timed flipCongrArg lean_s107 [Not]
let lean_s109 := by timed congr lean_s83 lean_s108
have lean_s110 : (Eq let1 let1) := by timed rfl
let lean_s111 := by timed flipCongrArg lean_s110 [LE.le]
have lean_s112 : (Eq x8 x8) := by timed rfl
have lean_s113 : (Eq x10 x10) := by timed rfl
let lean_s114 := by timed congrHAdd lean_s113 lean_r10
let lean_s115 := by timed congrHAdd lean_s112 lean_s114
have lean_s116 : (Eq let277 let67) := by timed congrHAdd lean_r69 lean_s115
have lean_s117 : (Eq let277 let66) := by timed Eq.trans lean_s116 lean_r16
have lean_s118 : (Eq let263 let66) := by timed Eq.trans lean_r114 lean_s117
have lean_s119 : (Eq let264 let69) := by timed congr lean_s111 lean_s118
have lean_s120 : (Eq let264 let68) := by timed Eq.trans lean_s119 lean_r17
let lean_s121 := by timed congr lean_s83 lean_s120
have lean_s122 : (Eq let26 let26) := by timed rfl
let lean_s123 := by timed flipCongrArg lean_s122 [LE.le]
let lean_s124 := by timed congrHAdd lean_r13 lean_r41
let lean_s125 := by timed congrHAdd lean_r45 lean_s124
let lean_s126 := by timed congrHAdd lean_r22 lean_s125
let lean_s127 := by timed congrHAdd lean_r83 lean_s126
let lean_s128 := by timed congrHAdd lean_r63 lean_s127
have lean_s129 : (Eq let121 let179) := by timed congrHAdd lean_r35 lean_s128
have lean_s130 : (Eq let121 let54) := by timed Eq.trans lean_s129 lean_r76
have lean_s131 : (Eq let122 let54) := by timed Eq.trans lean_r40 lean_s130
have lean_s132 : (Eq let261 let55) := by timed congr lean_s123 lean_s131
have lean_s133 : (Eq let261 let52) := by timed Eq.trans lean_s132 lean_r11
have lean_s134 : (Eq let262 let71) := by timed flipCongrArg lean_s133 [Not]
have lean_s135 : (Eq let262 let51) := by timed Eq.trans lean_s134 lean_r19
let lean_s136 := by timed congr lean_s83 lean_s135
let lean_s137 := by timed congrHAdd lean_r13 lean_r14
let lean_s138 := by timed congrHAdd lean_r50 lean_s137
let lean_s139 := by timed congrHAdd lean_r22 lean_s138
have lean_s140 : (Eq let78 let183) := by timed congrHAdd lean_r25 lean_s139
have lean_s141 : (Eq let78 let45) := by timed Eq.trans lean_s140 lean_r79
have lean_s142 : (Eq let79 let45) := by timed Eq.trans lean_r23 lean_s141
let lean_s143 := by timed flipCongrArg lean_s142 [LE.le]
have lean_s144 : (Eq let259 let105) := by timed congr lean_s143 lean_s122
have lean_s145 : (Eq let259 let104) := by timed Eq.trans lean_s144 lean_r32
have lean_s146 : (Eq let260 let108) := by timed flipCongrArg lean_s145 [Not]
have lean_s147 : (Eq let260 let103) := by timed Eq.trans lean_s146 lean_r34
let lean_s148 := by timed congr lean_s83 lean_s147
let lean_s149 := by timed congrHAdd lean_r24 lean_r18
let lean_s150 := by timed congrHAdd lean_r22 lean_s149
have lean_s151 : (Eq let63 let247) := by timed congrHAdd lean_r20 lean_s150
have lean_s152 : (Eq let63 let94) := by timed Eq.trans lean_s151 lean_r107
have lean_s153 : (Eq let64 let94) := by timed Eq.trans lean_r15 lean_s152
let lean_s154 := by timed flipCongrArg lean_s153 [LE.le]
have lean_s155 : (Eq let257 let95) := by timed congr lean_s154 lean_s96
have lean_s156 : (Eq let257 let93) := by timed Eq.trans lean_s155 lean_r28
have lean_s157 : (Eq let258 let184) := by timed flipCongrArg lean_s156 [Not]
let lean_s158 := by timed congr lean_s83 lean_s157
let lean_s159 := by timed congrHAdd lean_r35 lean_r36
have lean_s160 : (Eq let241 let224) := by timed congrHAdd lean_r66 lean_s159
have lean_s161 : (Eq let241 let150) := by timed Eq.trans lean_s160 lean_r88
have lean_s162 : (Eq let242 let150) := by timed Eq.trans lean_r102 lean_s161
let lean_s163 := by timed flipCongrArg lean_s162 [LE.le]
have lean_s164 : (Eq let255 let151) := by timed congr lean_s163 lean_s122
have lean_s165 : (Eq let255 let29) := by timed Eq.trans lean_s164 lean_r55
have lean_s166 : (Eq let256 let30) := by timed flipCongrArg lean_s165 [Not]
let lean_s167 := by timed congr lean_s83 lean_s166
have lean_s168 : (Eq x6 x6) := by timed rfl
have lean_s169 : (Eq x7 x7) := by timed rfl
have lean_s170 : (Eq x0 x0) := by timed rfl
have lean_s171 : (Eq x1 x1) := by timed rfl
let lean_s172 := by timed congrHAdd lean_r80 lean_s171
let lean_s173 := by timed congrHAdd lean_r53 lean_s172
let lean_s174 := by timed congrHAdd lean_s170 lean_s173
let lean_s175 := by timed congrHAdd lean_s169 lean_s174
have lean_s176 : (Eq let146 let167) := by timed congrHAdd lean_s168 lean_s175
have lean_s177 : (Eq let146 let87) := by timed Eq.trans lean_s176 lean_r68
have lean_s178 : (Eq let147 let87) := by timed Eq.trans lean_r52 lean_s177
let lean_s179 := by timed flipCongrArg lean_s178 [LE.le]
have lean_s180 : (Eq let254 let219) := by timed congr lean_s179 lean_s110
have lean_s181 : (Eq let254 let114) := by timed Eq.trans lean_s180 lean_r85
let lean_s182 := by timed congr lean_s83 lean_s181
have lean_s183 : (Eq let16 let16) := by timed rfl
let lean_s184 := by timed flipCongrArg lean_s183 [LE.le]
let lean_s185 := by timed congrHAdd lean_r72 lean_r41
let lean_s186 := by timed congrHAdd lean_r63 lean_s185
have lean_s187 : (Eq let141 let238) := by timed congrHAdd lean_r60 lean_s186
have lean_s188 : (Eq let141 let22) := by timed Eq.trans lean_s187 lean_r98
have lean_s189 : (Eq let142 let22) := by timed Eq.trans lean_r49 lean_s188
have lean_s190 : (Eq let252 let235) := by timed congr lean_s184 lean_s189
have lean_s191 : (Eq let252 let23) := by timed Eq.trans lean_s190 lean_r96
have lean_s192 : (Eq let253 let24) := by timed flipCongrArg lean_s191 [Not]
let lean_s193 := by timed congr lean_s83 lean_s192
let lean_s194 := by timed congrHAdd lean_r78 lean_r75
let lean_s195 := by timed congrHAdd lean_r74 lean_s194
let lean_s196 := by timed congrHAdd lean_r73 lean_s195
let lean_s197 := by timed congrHAdd lean_r71 lean_s196
let lean_s198 := by timed congrHAdd lean_r61 lean_s197
let lean_s199 := by timed congrHAdd lean_r56 lean_s198
let lean_s200 := by timed congrHAdd lean_r42 lean_s199
let lean_s201 := by timed congrHAdd lean_r87 lean_s200
let lean_s202 := by timed congrHAdd lean_r37 lean_s201
let lean_s203 := by timed congrHAdd lean_r93 lean_s202
have lean_s204 : (Eq let234 let218) := by timed congrHAdd lean_r91 lean_s203
have lean_s205 : let307 := by timed Eq.trans lean_s204 lean_r84
have lean_s206 : let307 := by timed Eq.trans lean_r95 lean_s205
let lean_s207 := by timed flipCongrArg lean_s206 [GE.ge]
have lean_s208 : (Eq let236 let236) := by timed rfl
have lean_s209 : (Eq let250 let237) := by timed congr lean_s207 lean_s208
have lean_s210 : (Eq let250 let227) := by timed Eq.trans lean_s209 lean_r97
have lean_s211 : (Eq let251 let228) := by timed flipCongrArg lean_s210 [Not]
have lean_s212 : (Eq let251 let226) := by timed Eq.trans lean_s211 lean_r90
let lean_s213 := by timed congr lean_s193 lean_s212
let lean_s214 := by timed congr lean_s182 lean_s213
let lean_s215 := by timed congr lean_s167 lean_s214
let lean_s216 := by timed congr lean_s158 lean_s215
let lean_s217 := by timed congr lean_s148 lean_s216
let lean_s218 := by timed congr lean_s136 lean_s217
let lean_s219 := by timed congr lean_s121 lean_s218
let lean_s220 := by timed congr lean_s109 lean_s219
let lean_s221 := by timed congr lean_s95 lean_s220
let lean_s222 := by timed congr lean_s93 lean_s221
let lean_s223 := by timed congr lean_s90 lean_s222
let lean_s224 := by timed congr lean_s88 lean_s223
have lean_s225 : (Eq let272 let306) := by timed congr lean_s85 lean_s224
have lean_s226 : (Eq let273 let306) := by timed Eq.trans lean_r110 lean_s225
have lean_s227 : let306 := by timed eqResolve lean_a144 lean_s226
have lean_s228 : let226 := by andElim lean_s227, 13
let lean_s229 := by R2 lean_s82, lean_s228, let226, [(- 1), 0]
have lean_s230 : let24 := by andElim lean_s227, 12
let lean_s231 := by R1 lean_s229, lean_s230, let23, [(- 1), 0]
have lean_s232 : let114 := by andElim lean_s227, 11
let lean_s233 := by R1 lean_s231, lean_s232, let88, [(- 1), 0]
have lean_s234 : let30 := by andElim lean_s227, 10
let lean_s235 := by R1 lean_s233, lean_s234, let29, [(- 1), 0]
have lean_s236 : let184 := by andElim lean_s227, 9
let lean_s237 := by R1 lean_s235, lean_s236, let93, [(- 1), 0]
have lean_s238 : let103 := by andElim lean_s227, 8
let lean_s239 := by R2 lean_s237, lean_s238, let103, [(- 1), 0]
have lean_s240 : let51 := by andElim lean_s227, 7
let lean_s241 := by R2 lean_s239, lean_s240, let51, [(- 1), 0]
have lean_s242 : let68 := by andElim lean_s227, 6
let lean_s243 := by R2 lean_s241, lean_s242, let68, [(- 1), 0]
have lean_s244 : let161 := by andElim lean_s227, 5
let lean_s245 := by R1 lean_s243, lean_s244, let137, [(- 1), 0]
have lean_s246 : let83 := by andElim lean_s227, 4
let lean_s247 := by R1 lean_s245, lean_s246, let82, [(- 1), 0]
have lean_s248 : let73 := by andElim lean_s227, 3
let lean_s249 := by R2 lean_s247, lean_s248, let73, [(- 1), 0]
have lean_s250 : let3 := by andElim lean_s227, 2
let lean_s251 := by R1 lean_s249, lean_s250, let2, [(- 1), 0]
have lean_s252 : let35 := by andElim lean_s227, 0
exact (show False from by R1 lean_s251, lean_s252, let34, [0, 0])


