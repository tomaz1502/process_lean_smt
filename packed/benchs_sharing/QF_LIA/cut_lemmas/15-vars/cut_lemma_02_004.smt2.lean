open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x5 : Int}
variable {x2 : Int}
variable {x3 : Int}
variable {x8 : Int}
variable {x7 : Int}
variable {x10 : Int}
variable {x5 : Int}
variable {x14 : Int}
variable {x12 : Int}
variable {x11 : Int}
variable {x14 : Int}
variable {x0 : Int}
variable {x0 : Int}
variable {x7 : Int}
variable {x1 : Int}
variable {x12 : Int}
variable {x4 : Int}
variable {x11 : Int}
variable {x10 : Int}
variable {x13 : Int}
variable {x6 : Int}
variable {x6 : Int}
variable {x8 : Int}
variable {x4 : Int}
variable {x3 : Int}
variable {x13 : Int}
variable {x1 : Int}
variable {x2 : Int}

theorem th0 :
  let let1 := (Int.ofNat 1)
  let let2 := (binrel% GE.ge x11 let1)
  let let3 := (Not let2)
  let let4 := (binrel% LT.lt x11 let1)
  let let5 := (Int.ofNat 0)
  let let6 := (Int.ofNat 2)
  let let7 := (binrel% HDiv.hDiv let1 let6)
  let let8 := (Neg.neg let7)
  let let9 := (binrel% LT.lt let8 let5)
  let let10 := (Int.ofNat 3)
  let let11 := (binrel% HDiv.hDiv let10 let6)
  let let12 := (Neg.neg let11)
  let let13 := (binrel% LT.lt let12 let5)
  let let14 := (Neg.neg let1)
  let let15 := (binrel% HMul.hMul let14 x11)
  let let16 := (binrel% HMul.hMul let14 x10)
  let let17 := (binrel% HMul.hMul let14 x8)
  let let18 := (binrel% HMul.hMul let6 x6)
  let let19 := (binrel% HMul.hMul let14 x5)
  let let20 := (binrel% HMul.hMul let14 x4)
  let let21 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 let15))))))
  let let22 := (binrel% GE.ge let21 let14)
  let let23 := (Not let22)
  let let24 := (binrel% LT.lt let21 let14)
  let let25 := (binrel% GT.gt let7 let5)
  let let26 := (Neg.neg (Int.ofNat 10))
  let let27 := (binrel% HMul.hMul let14 x14)
  let let28 := (binrel% HMul.hMul let14 x12)
  let let29 := (binrel% HMul.hMul let6 x7)
  let let30 := (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let28 let27)))
  let let31 := (binrel% GE.ge let30 let26)
  let let32 := (Not let31)
  let let33 := (binrel% LT.lt let30 let26)
  let let34 := (Rat.ofInt 1)
  let let35 := (binrel% HMul.hMul let34 let10)
  let let36 := (binrel% HMul.hMul let34 let1)
  let let37 := (Int.ofNat 11)
  let let38 := (Neg.neg let37)
  let let39 := (binrel% HMul.hMul let7 let38)
  let let40 := (Int.ofNat 5)
  let let41 := (binrel% HMul.hMul let34 let40)
  let let42 := (Neg.neg let6)
  let let43 := (binrel% HMul.hMul let7 let42)
  let let44 := (binrel% HMul.hMul let34 let5)
  let let45 := (binrel% HMul.hMul let12 let10)
  let let46 := (binrel% HMul.hMul let8 let1)
  let let47 := (binrel% HMul.hMul let7 let6)
  let let48 := (binrel% HMul.hMul let8 let10)
  let let49 := (Neg.neg let34)
  let let50 := (binrel% HMul.hMul let49 let14)
  let let51 := (binrel% HMul.hMul let49 let42)
  let let52 := (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let36 let35))))))))))))
  let let53 := (binrel% HMul.hMul let34 x8)
  let let54 := (binrel% HMul.hMul let42 x14)
  let let55 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x8 let54))
  let let56 := (binrel% HMul.hMul let34 let55)
  let let57 := (binrel% HMul.hMul let7 let30)
  let let58 := (binrel% HMul.hMul let34 x0)
  let let59 := (binrel% HMul.hMul let7 let21)
  let let60 := (binrel% HMul.hMul let42 x11)
  let let61 := (binrel% HMul.hMul let42 x4)
  let let62 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let16 let60)))
  let let63 := (binrel% HMul.hMul let34 let62)
  let let64 := (binrel% HMul.hMul let14 x13)
  let let65 := (binrel% HMul.hMul let42 x12)
  let let66 := (binrel% HMul.hMul let14 x3)
  let let67 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x10) (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let64 let54)))))))))))
  let let68 := (binrel% HMul.hMul let12 let67)
  let let69 := (binrel% HMul.hMul let6 x3)
  let let70 := (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8 x10)))
  let let71 := (binrel% HMul.hMul let8 let70)
  let let72 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 let16)))))
  let let73 := (binrel% HMul.hMul let7 let72)
  let let74 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x12 (binrel% HAdd.hAdd let64 x14))))))
  let let75 := (binrel% HMul.hMul let8 let74)
  let let76 := (binrel% HMul.hMul let6 x12)
  let let77 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd let76 x13))))
  let let78 := (binrel% HMul.hMul let49 let77)
  let let79 := (binrel% HMul.hMul let34 x11)
  let let80 := (binrel% HMul.hMul let49 x13)
  let let81 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let56 let53))))))))))))
  let let82 := (binrel% GE.ge let81 let52)
  let let83 := (Not let82)
  let let84 := (binrel% LT.lt let81 let52)
  let let85 := (Rat.ofInt let64)
  let let86 := (Rat.ofInt x11)
  let let87 := (Rat.ofInt (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let65 let64)))))
  let let88 := (binrel% HMul.hMul let8 x14)
  let let89 := (binrel% HMul.hMul let8 x12)
  let let90 := (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x10) (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x13) let88))))))
  let let91 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x11) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x12) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x13) (binrel% HMul.hMul let10 x14))))))))))))
  let let92 := (Rat.ofInt let62)
  let let93 := (binrel% HMul.hMul x4 let14)
  let let94 := (binrel% HMul.hMul x10 let14)
  let let95 := (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let17 let15))))))
  let let96 := (binrel% GE.ge let62 let1)
  let let97 := (binrel% HMul.hMul let6 x11)
  let let98 := (binrel% HMul.hMul let6 x4)
  let let99 := (binrel% HMul.hMul let14 x1)
  let let100 := (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10 let97)))
  let let101 := (binrel% LE.le let100 let14)
  let let102 := (Int.ofNat 6)
  let let103 := (binrel% GE.ge x0 let102)
  let let104 := (Eq let103 let103)
  let let105 := (binrel% HMul.hMul x11 let14)
  let let106 := (binrel% HMul.hMul x8 let14)
  let let107 := (binrel% HMul.hMul x5 let14)
  let let108 := (binrel% HMul.hMul x2 let1)
  let let109 := (binrel% HMul.hMul x6 let6)
  let let110 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let106 let105))))))
  let let111 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let109 let108) let93) let94) let107) let106) let105)
  let let112 := (binrel% HMul.hMul x4 let6)
  let let113 := (binrel% HMul.hMul x13 let42)
  let let114 := (Neg.neg x10)
  let let115 := (binrel% HMul.hMul x5 let42)
  let let116 := (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let112 x2)))))))
  let let117 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let115 x7) x6) x0) let114) let113) let112) x2)
  let let118 := (Not let96)
  let let119 := (Not let118)
  let let120 := (Eq let119 let96)
  let let121 := (binrel% HMul.hMul x14 let14)
  let let122 := (binrel% GE.ge let55 let6)
  let let123 := (Not let122)
  let let124 := (Not let123)
  let let125 := (Eq let122 let124)
  let let126 := (Eq let124 let122)
  let let127 := (Neg.neg let10)
  let let128 := (binrel% HMul.hMul let127 x6)
  let let129 := (binrel% HMul.hMul x6 let127)
  let let130 := (binrel% HMul.hMul let42 x5)
  let let131 := (binrel% LT.lt let55 let6)
  let let132 := (Eq let96 let96)
  let let133 := (binrel% HMul.hMul let127 x7)
  let let134 := (binrel% HMul.hMul x7 let127)
  let let135 := (binrel% HMul.hMul x7 let6)
  let let136 := (binrel% HMul.hMul let10 x3)
  let let137 := (binrel% HMul.hMul x3 let10)
  let let138 := (Rat.ofInt 2)
  let let139 := (binrel% HMul.hMul let42 x13)
  let let140 := (binrel% GE.ge x3 let5)
  let let141 := (Not let140)
  let let142 := (Not let141)
  let let143 := (binrel% HMul.hMul let127 x1)
  let let144 := (binrel% HMul.hMul x1 let127)
  let let145 := (binrel% HMul.hMul x3 let6)
  let let146 := (Int.ofNat 4)
  let let147 := (binrel% GE.ge x8 let146)
  let let148 := (Not let147)
  let let149 := (Not let148)
  let let150 := (Eq let149 let147)
  let let151 := (binrel% HMul.hMul let8 x11)
  let let152 := (binrel% HMul.hMul let8 x10)
  let let153 := (binrel% HMul.hMul let8 x8)
  let let154 := (binrel% HMul.hMul let8 x4)
  let let155 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x2) (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x5) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let152 let151))))))
  let let156 := (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let69)))
  let let157 := (binrel% LE.le let102 x0)
  let let158 := (binrel% HMul.hMul x1 let14)
  let let159 := (binrel% HMul.hMul x11 let6)
  let let160 := (binrel% HMul.hMul x10 let1)
  let let161 := (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let159 let158)))
  let let162 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let112 let160) let159) let158)
  let let163 := (binrel% HMul.hMul x12 let14)
  let let164 := (binrel% HMul.hMul x13 let1)
  let let165 := (binrel% HMul.hMul x8 let1)
  let let166 := (binrel% HMul.hMul x2 let14)
  let let167 := (binrel% HMul.hMul x3 let14)
  let let168 := (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let164 let163))))))
  let let169 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let167 let121) let166) let160) let165) let164) let163)
  let let170 := (binrel% HMul.hMul let14 x2)
  let let171 := (binrel% LT.lt x8 let146)
  let let172 := (binrel% HMul.hMul x11 let1)
  let let173 := (binrel% HMul.hMul let6 x14)
  let let174 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let17 let173))
  let let175 := (binrel% LE.le let174 let42)
  let let176 := (binrel% GE.ge let72 let6)
  let let177 := (Not let176)
  let let178 := (Not let177)
  let let179 := (Eq let176 let178)
  let let180 := (Eq let178 let176)
  let let181 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let16 let139)))))))
  let let182 := (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let98 x2)))))))
  let let183 := (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let105 let163)))
  let let184 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let135 let121) let105) let163)
  let let185 := (binrel% HMul.hMul let102 x14)
  let let186 := (binrel% HMul.hMul x14 let102)
  let let187 := (binrel% HMul.hMul x12 let6)
  let let188 := (binrel% HMul.hMul x3 let1)
  let let189 := (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let164 let187))))
  let let190 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let188 let160) let172) let164) let187)
  let let191 := (Neg.neg x4)
  let let192 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let191 x1)))))
  let let193 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x7) x0) let114) let191) x1)
  let let194 := (Eq let122 let122)
  let let195 := (binrel% LE.le let26 let30)
  let let196 := (Neg.neg x5)
  let let197 := (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let145)))
  let let198 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let196 x8) x10) let145)
  let let199 := (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let15 let28)))
  let let200 := (binrel% GE.ge x13 let42)
  let let201 := (Not let200)
  let let202 := (Not let201)
  let let203 := (binrel% GE.ge let77 let14)
  let let204 := (Not let203)
  let let205 := (Not let204)
  let let206 := (binrel% GE.ge let74 let10)
  let let207 := (Not let206)
  let let208 := (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x13 let27))))))
  let let209 := (binrel% LE.le let42 let208)
  let let210 := (binrel% LT.lt let49 let5)
  let let211 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let20 x1)))))
  let let212 := (binrel% HMul.hMul x14 let6)
  let let213 := (Eq let22 let22)
  let let214 := (Not let3)
  let let215 := (Eq let2 let214)
  let let216 := (Eq let214 let2)
  let let217 := (binrel% HAdd.hAdd let212 (binrel% HAdd.hAdd let167 let106))
  let let218 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let212 let167) let106)
  let let219 := (Not let23)
  let let220 := (Eq let219 let22)
  let let221 := (binrel% LE.le let77 let42)
  let let222 := (binrel% LE.le let14 let21)
  let let223 := (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let97 let99)))
  let let224 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 9) let6))
  let let225 := (binrel% GT.gt let34 let5)
  let let226 := (binrel% GE.ge let70 let1)
  let let227 := (binrel% LE.le let1 let70)
  let let228 := (Not let207)
  let let229 := (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let66 let17))
  let let230 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x13 let76))))
  let let231 := (binrel% GE.ge let181 let5)
  let let232 := (binrel% LE.le let5 let181)
  let let233 := (binrel% HMul.hMul let102 x12)
  let let234 := (binrel% HMul.hMul x12 let102)
  let let235 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x1) (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x7) let152)))))
  let let236 := (binrel% LE.le x13 let127)
  let let237 := (Eq let147 let149)
  let let238 := (binrel% LE.le let1 x11)
  let let239 := (binrel% HMul.hMul let10 x13)
  let let240 := (binrel% HMul.hMul x13 let10)
  let let241 := (binrel% LE.le x3 let14)
  let let242 := (binrel% LE.le let146 x8)
  let let243 := (binrel% GE.ge let67 let10)
  let let244 := (Not let243)
  let let245 := (Not let244)
  let let246 := (Neg.neg let102)
  let let247 := (binrel% HMul.hMul let102 x11)
  let let248 := (binrel% HMul.hMul let102 x10)
  let let249 := (binrel% HMul.hMul let127 x8)
  let let250 := (binrel% HMul.hMul let102 x4)
  let let251 := (binrel% HMul.hMul let127 x0)
  let let252 := (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let250 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let248 (binrel% HAdd.hAdd let247 (binrel% HAdd.hAdd let233 (binrel% HAdd.hAdd let239 let185)))))))))))
  let let253 := (binrel% GE.ge let252 let246)
  let let254 := (binrel% HAdd.hAdd let233 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let239 (binrel% HAdd.hAdd let247 (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let248 (binrel% HAdd.hAdd let250 (binrel% HAdd.hAdd let185 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let128 let136)))))))))))
  let let255 := (binrel% HMul.hMul x4 let102)
  let let256 := (binrel% LE.le let72 let1)
  let let257 := (binrel% HMul.hMul x10 let102)
  let let258 := (Not True)
  let let259 := (binrel% LT.lt let72 let6)
  let let260 := (binrel% HMul.hMul x8 let127)
  let let261 := (binrel% HMul.hMul x11 let102)
  let let262 := (binrel% HMul.hMul x0 let127)
  let let263 := (binrel% HAdd.hAdd let234 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let262 (binrel% HAdd.hAdd let240 (binrel% HAdd.hAdd let261 (binrel% HAdd.hAdd let260 (binrel% HAdd.hAdd let257 (binrel% HAdd.hAdd let255 (binrel% HAdd.hAdd let186 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let129 let137)))))))))))
  let let264 := (Eq let2 let2)
  let let265 := (binrel% LE.le let26 let184)
  let let266 := (Not let265)
  let let267 := (binrel% LE.le let193 let1)
  let let268 := (binrel% LE.le let218 let42)
  let let269 := (Not let268)
  let let270 := (binrel% LE.le let162 let14)
  let let271 := (Not let270)
  let let272 := (binrel% LE.le let190 let42)
  let let273 := (Not let272)
  let let274 := (binrel% LE.le let42 let169)
  let let275 := (Not let274)
  let let276 := (binrel% LE.le let1 let198)
  let let277 := (binrel% LE.le let5 let117)
  let let278 := (binrel% LE.le let14 let111)
  let let279 := (Not let278)
  let let280 := (Not let157)
  let let281 := (Not let236)
  let let282 := (Not let238)
  let let283 := (Not let241)
  let let284 := (Not let242)
  let let285 := (binrel% GE.ge let263 let246)
  let let286 := (Not let285)
  let let287 := (And let286 (And let284 (And let283 (And let282 (And let281 (And let280 (And let279 (And let277 (And let276 (And let275 (And let273 (And let271 (And let269 (And let267 let266))))))))))))))
  let let288 := (And let286 (And (And (And (And (And (And (And (And (And (And (And (And (And let284 let283) let282) let281) let280) let279) let277) let276) let275) let273) let271) let269) let267) let266))
  let let289 := (binrel% LT.lt x13 let42)
  let let290 := (Eq let176 let176)
  let let291 := (Rat.ofInt 0)
  let let292 := (Rat.ofInt 3)
  let let293 := (Neg.neg (binrel% HDiv.hDiv let37 let6))
  let let294 := (Rat.ofInt 5)
  let let295 := (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let291 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let224 (binrel% HAdd.hAdd let291 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let294 (binrel% HAdd.hAdd let293 (binrel% HAdd.hAdd let34 let292))))))))))))
  let let296 := (Eq let96 let119)
  let let297 := (Eq let22 let219)
  let let298 := (Not let103)
  let let299 := (Not let298)
  let let300 := (Eq let299 let103)
  let let301 := (Eq let103 let299)
  let let302 := (Eq let31 let31)
  let let303 := (Not let32)
  let let304 := (Eq let303 let31)
  let let305 := (binrel% LT.lt let62 let1)
  let let306 := (Eq let31 let303)
  let let307 := (Eq let147 let147)
  let let308 := (Rat.ofInt x0)
  let let309 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x5) (binrel% HAdd.hAdd let153 let152)))
  let let310 := (binrel% GE.ge let291 let291)
  let let311 := (binrel% LT.lt x0 let102)
  let let312 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x13 let28))))))
  let let313 := (Rat.ofInt x8)
  let let314 := (Rat.ofInt let55)
  let let315 := (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let89 let88)))
  let let316 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let235 (binrel% HAdd.hAdd let309 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let308 (binrel% HAdd.hAdd let315 (binrel% HAdd.hAdd let314 let313))))))))))))
  let let317 := (And let243 (And let148 (And let140 (And let3 (And let200 (And let298 (And let23 (And let231 (And let226 (And let206 (And let203 (And let118 (And let123 (And let177 let32))))))))))))))
  let let318 := (Eq let263 let252)
  let let319 := (Not let226)
  let let320 := (Or let147 (Or let122 (Or let31 (Or let103 (Or let22 (Or let96 (Or let244 (Or let319 (Or let176 (Or let207 (Or let204 (Or let2 let201))))))))))))
  let let321 := (Or let149 (Or let124 (Or let303 (Or let299 (Or let219 (Or let119 (Or let244 (Or let319 (Or let178 (Or let207 (Or let204 (Or let214 let201))))))))))))
  let let322 := (Or let201 False)
  let let323 := (binrel% LE.le let53 let35)
  let let324 := (binrel% LE.le x8 let10)
  let let325 := (And let225 let324)
  let let326 := (binrel% LE.le let56 let36)
  let let327 := (binrel% LE.le let55 let1)
  let let328 := (And let225 let327)
  let let329 := (binrel% LE.le let57 let39)
  let let330 := (binrel% LE.le let30 let38)
  let let331 := (And let25 let330)
  let let332 := (binrel% LE.le let58 let41)
  let let333 := (binrel% LE.le x0 let40)
  let let334 := (And let225 let333)
  let let335 := (binrel% LE.le let59 let43)
  let let336 := (binrel% LE.le let21 let42)
  let let337 := (And let25 let336)
  let let338 := (binrel% LE.le let63 let44)
  let let339 := (binrel% LE.le let62 let5)
  let let340 := (And let225 let339)
  let let341 := (binrel% LE.le let68 let45)
  let let342 := (And let13 let243)
  let let343 := (binrel% LE.le let71 let46)
  let let344 := (And let9 let226)
  let let345 := (binrel% LT.lt let73 let47)
  let let346 := (And let25 let259)
  let let347 := (binrel% LE.le let75 let48)
  let let348 := (And let9 let206)
  let let349 := (binrel% LE.le let78 let50)
  let let350 := (And let210 let203)
  let let351 := (binrel% LE.le let79 let44)
  let let352 := (binrel% LE.le x11 let5)
  let let353 := (And let225 let352)
  let let354 := (binrel% LE.le let80 let51)
  let let355 := (And let210 let200)
(Eq let4 let3) → (Eq let9 True) → (Eq let13 True) → (Eq let24 let23) → (Eq let25 True) → (Eq let33 let32) → (Eq let84 let83) → (Eq let80 let85) → (Eq let79 let86) → (Eq let78 let87) → (Eq let75 let90) → (Eq let68 let91) → (Eq let63 let92) → (Eq let93 let20) → (Eq let50 let34) → (Eq let94 let16) → (Eq let48 let12) → (Eq let95 let21) → (Eq let101 let96) → (Eq let104 True) → (Eq let111 let110) → (Eq let117 let116) → let120 → (Eq let109 let18) → (Eq let121 let27) → (Eq let126 let125) → (Eq let129 let128) → (Eq let115 let130) → (Eq let131 let123) → (Eq let132 True) → (Eq let108 x2) → (Eq let134 let133) → (Eq let135 let29) → (Eq let105 let15) → let126 → (Eq let137 let136) → (Eq let51 let138) → (Eq let113 let139) → (Eq let142 let140) → (Eq let144 let143) → (Eq let145 let69) → let150 → (Eq let59 let155) → (Eq let156 let70) → (Eq let157 let103) → (Eq let162 let161) → (Eq let169 let168) → (Eq let166 let170) → (Eq let171 let148) → (Eq let172 x11) → (Eq let164 x13) → (Eq let165 x8) → (Eq let175 let122) → (Eq let180 let179) → (Eq let182 let181) → (Eq let184 let183) → (Eq let186 let185) → (Eq let190 let189) → (Eq let159 let97) → (Eq let193 let192) → (Eq let107 let19) → (Eq let194 True) → (Eq let163 let28) → (Eq let195 let31) → (Eq let198 let197) → (Eq let191 let20) → (Eq let47 let34) → (Eq let199 let30) → (Eq let43 let49) → (Eq let106 let17) → (Eq let167 let66) → (Eq let202 let200) → (Eq let205 let203) → (Eq let209 let207) → (Eq let210 True) → (Eq let211 let72) → (Eq let212 let173) → (Eq let213 True) → (Eq let187 let76) → (Eq let216 let215) → (Eq let218 let217) → let220 → (Eq let221 let204) → (Eq let222 let22) → (Eq let196 let19) → (Eq let160 x10) → (Eq let223 let100) → (Eq let45 let224) → (Eq let225 True) → (Eq let188 x3) → (Eq let158 let99) → (Eq let227 let226) → (Eq let228 let206) → (Eq let229 let174) → (Eq let112 let98) → (Eq let230 let77) → (Eq let232 let231) → (Eq let234 let233) → (Eq let73 let235) → (Eq let236 let201) → (Eq let150 let237) → (Eq let238 let2) → (Eq let240 let239) → (Eq let241 let141) → (Eq let242 let147) → (Eq let245 let243) → (Eq let253 let244) → (Eq let254 let252) → (Eq let255 let250) → (Eq let256 let177) → (Eq let257 let248) → (Eq let258 False) → (Eq let259 let177) → (Eq let260 let249) → (Eq let261 let247) → (Eq let262 let251) → (Eq let263 let263) → (Eq let264 True) → (Eq let288 let287) → let216 → (Eq let114 let16) → (Eq let289 let201) → let180 → (Eq let290 True) → (Eq let295 let291) → (Eq let120 let296) → (Eq let35 let292) → (Eq let220 let297) → let300 → (Eq let300 let301) → (Eq let302 True) → let304 → (Eq let305 let118) → (Eq let304 let306) → (Eq let307 True) → (Eq let58 let308) → (Eq let71 let309) → (Eq let310 True) → (Eq let36 let34) → (Eq let311 let298) → (Eq let39 let293) → (Eq let312 let208) → (Eq let41 let294) → (Eq let44 let291) → (Eq let46 let8) → (Eq let316 let291) → (Eq let53 let313) → (Eq let56 let314) → (Eq let57 let315) → let288 → False :=
  let let1 := (Int.ofNat 1)
  let let2 := (binrel% GE.ge x11 let1)
  let let3 := (Not let2)
  let let4 := (binrel% LT.lt x11 let1)
  let let5 := (Int.ofNat 0)
  let let6 := (Int.ofNat 2)
  let let7 := (binrel% HDiv.hDiv let1 let6)
  let let8 := (Neg.neg let7)
  let let9 := (binrel% LT.lt let8 let5)
  let let10 := (Int.ofNat 3)
  let let11 := (binrel% HDiv.hDiv let10 let6)
  let let12 := (Neg.neg let11)
  let let13 := (binrel% LT.lt let12 let5)
  let let14 := (Neg.neg let1)
  let let15 := (binrel% HMul.hMul let14 x11)
  let let16 := (binrel% HMul.hMul let14 x10)
  let let17 := (binrel% HMul.hMul let14 x8)
  let let18 := (binrel% HMul.hMul let6 x6)
  let let19 := (binrel% HMul.hMul let14 x5)
  let let20 := (binrel% HMul.hMul let14 x4)
  let let21 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 let15))))))
  let let22 := (binrel% GE.ge let21 let14)
  let let23 := (Not let22)
  let let24 := (binrel% LT.lt let21 let14)
  let let25 := (binrel% GT.gt let7 let5)
  let let26 := (Neg.neg (Int.ofNat 10))
  let let27 := (binrel% HMul.hMul let14 x14)
  let let28 := (binrel% HMul.hMul let14 x12)
  let let29 := (binrel% HMul.hMul let6 x7)
  let let30 := (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let28 let27)))
  let let31 := (binrel% GE.ge let30 let26)
  let let32 := (Not let31)
  let let33 := (binrel% LT.lt let30 let26)
  let let34 := (Rat.ofInt 1)
  let let35 := (binrel% HMul.hMul let34 let10)
  let let36 := (binrel% HMul.hMul let34 let1)
  let let37 := (Int.ofNat 11)
  let let38 := (Neg.neg let37)
  let let39 := (binrel% HMul.hMul let7 let38)
  let let40 := (Int.ofNat 5)
  let let41 := (binrel% HMul.hMul let34 let40)
  let let42 := (Neg.neg let6)
  let let43 := (binrel% HMul.hMul let7 let42)
  let let44 := (binrel% HMul.hMul let34 let5)
  let let45 := (binrel% HMul.hMul let12 let10)
  let let46 := (binrel% HMul.hMul let8 let1)
  let let47 := (binrel% HMul.hMul let7 let6)
  let let48 := (binrel% HMul.hMul let8 let10)
  let let49 := (Neg.neg let34)
  let let50 := (binrel% HMul.hMul let49 let14)
  let let51 := (binrel% HMul.hMul let49 let42)
  let let52 := (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let36 let35))))))))))))
  let let53 := (binrel% HMul.hMul let34 x8)
  let let54 := (binrel% HMul.hMul let42 x14)
  let let55 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x8 let54))
  let let56 := (binrel% HMul.hMul let34 let55)
  let let57 := (binrel% HMul.hMul let7 let30)
  let let58 := (binrel% HMul.hMul let34 x0)
  let let59 := (binrel% HMul.hMul let7 let21)
  let let60 := (binrel% HMul.hMul let42 x11)
  let let61 := (binrel% HMul.hMul let42 x4)
  let let62 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let16 let60)))
  let let63 := (binrel% HMul.hMul let34 let62)
  let let64 := (binrel% HMul.hMul let14 x13)
  let let65 := (binrel% HMul.hMul let42 x12)
  let let66 := (binrel% HMul.hMul let14 x3)
  let let67 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x10) (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let64 let54)))))))))))
  let let68 := (binrel% HMul.hMul let12 let67)
  let let69 := (binrel% HMul.hMul let6 x3)
  let let70 := (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8 x10)))
  let let71 := (binrel% HMul.hMul let8 let70)
  let let72 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 let16)))))
  let let73 := (binrel% HMul.hMul let7 let72)
  let let74 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x12 (binrel% HAdd.hAdd let64 x14))))))
  let let75 := (binrel% HMul.hMul let8 let74)
  let let76 := (binrel% HMul.hMul let6 x12)
  let let77 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd let76 x13))))
  let let78 := (binrel% HMul.hMul let49 let77)
  let let79 := (binrel% HMul.hMul let34 x11)
  let let80 := (binrel% HMul.hMul let49 x13)
  let let81 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let56 let53))))))))))))
  let let82 := (binrel% GE.ge let81 let52)
  let let83 := (Not let82)
  let let84 := (binrel% LT.lt let81 let52)
  let let85 := (Rat.ofInt let64)
  let let86 := (Rat.ofInt x11)
  let let87 := (Rat.ofInt (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let65 let64)))))
  let let88 := (binrel% HMul.hMul let8 x14)
  let let89 := (binrel% HMul.hMul let8 x12)
  let let90 := (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x10) (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x13) let88))))))
  let let91 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x11) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x12) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x13) (binrel% HMul.hMul let10 x14))))))))))))
  let let92 := (Rat.ofInt let62)
  let let93 := (binrel% HMul.hMul x4 let14)
  let let94 := (binrel% HMul.hMul x10 let14)
  let let95 := (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let17 let15))))))
  let let96 := (binrel% GE.ge let62 let1)
  let let97 := (binrel% HMul.hMul let6 x11)
  let let98 := (binrel% HMul.hMul let6 x4)
  let let99 := (binrel% HMul.hMul let14 x1)
  let let100 := (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10 let97)))
  let let101 := (binrel% LE.le let100 let14)
  let let102 := (Int.ofNat 6)
  let let103 := (binrel% GE.ge x0 let102)
  let let104 := (Eq let103 let103)
  let let105 := (binrel% HMul.hMul x11 let14)
  let let106 := (binrel% HMul.hMul x8 let14)
  let let107 := (binrel% HMul.hMul x5 let14)
  let let108 := (binrel% HMul.hMul x2 let1)
  let let109 := (binrel% HMul.hMul x6 let6)
  let let110 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let106 let105))))))
  let let111 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let109 let108) let93) let94) let107) let106) let105)
  let let112 := (binrel% HMul.hMul x4 let6)
  let let113 := (binrel% HMul.hMul x13 let42)
  let let114 := (Neg.neg x10)
  let let115 := (binrel% HMul.hMul x5 let42)
  let let116 := (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let112 x2)))))))
  let let117 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let115 x7) x6) x0) let114) let113) let112) x2)
  let let118 := (Not let96)
  let let119 := (Not let118)
  let let120 := (Eq let119 let96)
  let let121 := (binrel% HMul.hMul x14 let14)
  let let122 := (binrel% GE.ge let55 let6)
  let let123 := (Not let122)
  let let124 := (Not let123)
  let let125 := (Eq let122 let124)
  let let126 := (Eq let124 let122)
  let let127 := (Neg.neg let10)
  let let128 := (binrel% HMul.hMul let127 x6)
  let let129 := (binrel% HMul.hMul x6 let127)
  let let130 := (binrel% HMul.hMul let42 x5)
  let let131 := (binrel% LT.lt let55 let6)
  let let132 := (Eq let96 let96)
  let let133 := (binrel% HMul.hMul let127 x7)
  let let134 := (binrel% HMul.hMul x7 let127)
  let let135 := (binrel% HMul.hMul x7 let6)
  let let136 := (binrel% HMul.hMul let10 x3)
  let let137 := (binrel% HMul.hMul x3 let10)
  let let138 := (Rat.ofInt 2)
  let let139 := (binrel% HMul.hMul let42 x13)
  let let140 := (binrel% GE.ge x3 let5)
  let let141 := (Not let140)
  let let142 := (Not let141)
  let let143 := (binrel% HMul.hMul let127 x1)
  let let144 := (binrel% HMul.hMul x1 let127)
  let let145 := (binrel% HMul.hMul x3 let6)
  let let146 := (Int.ofNat 4)
  let let147 := (binrel% GE.ge x8 let146)
  let let148 := (Not let147)
  let let149 := (Not let148)
  let let150 := (Eq let149 let147)
  let let151 := (binrel% HMul.hMul let8 x11)
  let let152 := (binrel% HMul.hMul let8 x10)
  let let153 := (binrel% HMul.hMul let8 x8)
  let let154 := (binrel% HMul.hMul let8 x4)
  let let155 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x2) (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x5) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let152 let151))))))
  let let156 := (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let69)))
  let let157 := (binrel% LE.le let102 x0)
  let let158 := (binrel% HMul.hMul x1 let14)
  let let159 := (binrel% HMul.hMul x11 let6)
  let let160 := (binrel% HMul.hMul x10 let1)
  let let161 := (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let159 let158)))
  let let162 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let112 let160) let159) let158)
  let let163 := (binrel% HMul.hMul x12 let14)
  let let164 := (binrel% HMul.hMul x13 let1)
  let let165 := (binrel% HMul.hMul x8 let1)
  let let166 := (binrel% HMul.hMul x2 let14)
  let let167 := (binrel% HMul.hMul x3 let14)
  let let168 := (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let164 let163))))))
  let let169 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let167 let121) let166) let160) let165) let164) let163)
  let let170 := (binrel% HMul.hMul let14 x2)
  let let171 := (binrel% LT.lt x8 let146)
  let let172 := (binrel% HMul.hMul x11 let1)
  let let173 := (binrel% HMul.hMul let6 x14)
  let let174 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let17 let173))
  let let175 := (binrel% LE.le let174 let42)
  let let176 := (binrel% GE.ge let72 let6)
  let let177 := (Not let176)
  let let178 := (Not let177)
  let let179 := (Eq let176 let178)
  let let180 := (Eq let178 let176)
  let let181 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let16 let139)))))))
  let let182 := (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let98 x2)))))))
  let let183 := (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let105 let163)))
  let let184 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let135 let121) let105) let163)
  let let185 := (binrel% HMul.hMul let102 x14)
  let let186 := (binrel% HMul.hMul x14 let102)
  let let187 := (binrel% HMul.hMul x12 let6)
  let let188 := (binrel% HMul.hMul x3 let1)
  let let189 := (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let164 let187))))
  let let190 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let188 let160) let172) let164) let187)
  let let191 := (Neg.neg x4)
  let let192 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let191 x1)))))
  let let193 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x7) x0) let114) let191) x1)
  let let194 := (Eq let122 let122)
  let let195 := (binrel% LE.le let26 let30)
  let let196 := (Neg.neg x5)
  let let197 := (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let145)))
  let let198 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let196 x8) x10) let145)
  let let199 := (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let15 let28)))
  let let200 := (binrel% GE.ge x13 let42)
  let let201 := (Not let200)
  let let202 := (Not let201)
  let let203 := (binrel% GE.ge let77 let14)
  let let204 := (Not let203)
  let let205 := (Not let204)
  let let206 := (binrel% GE.ge let74 let10)
  let let207 := (Not let206)
  let let208 := (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x13 let27))))))
  let let209 := (binrel% LE.le let42 let208)
  let let210 := (binrel% LT.lt let49 let5)
  let let211 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let20 x1)))))
  let let212 := (binrel% HMul.hMul x14 let6)
  let let213 := (Eq let22 let22)
  let let214 := (Not let3)
  let let215 := (Eq let2 let214)
  let let216 := (Eq let214 let2)
  let let217 := (binrel% HAdd.hAdd let212 (binrel% HAdd.hAdd let167 let106))
  let let218 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let212 let167) let106)
  let let219 := (Not let23)
  let let220 := (Eq let219 let22)
  let let221 := (binrel% LE.le let77 let42)
  let let222 := (binrel% LE.le let14 let21)
  let let223 := (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let97 let99)))
  let let224 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 9) let6))
  let let225 := (binrel% GT.gt let34 let5)
  let let226 := (binrel% GE.ge let70 let1)
  let let227 := (binrel% LE.le let1 let70)
  let let228 := (Not let207)
  let let229 := (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let66 let17))
  let let230 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x13 let76))))
  let let231 := (binrel% GE.ge let181 let5)
  let let232 := (binrel% LE.le let5 let181)
  let let233 := (binrel% HMul.hMul let102 x12)
  let let234 := (binrel% HMul.hMul x12 let102)
  let let235 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x1) (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x7) let152)))))
  let let236 := (binrel% LE.le x13 let127)
  let let237 := (Eq let147 let149)
  let let238 := (binrel% LE.le let1 x11)
  let let239 := (binrel% HMul.hMul let10 x13)
  let let240 := (binrel% HMul.hMul x13 let10)
  let let241 := (binrel% LE.le x3 let14)
  let let242 := (binrel% LE.le let146 x8)
  let let243 := (binrel% GE.ge let67 let10)
  let let244 := (Not let243)
  let let245 := (Not let244)
  let let246 := (Neg.neg let102)
  let let247 := (binrel% HMul.hMul let102 x11)
  let let248 := (binrel% HMul.hMul let102 x10)
  let let249 := (binrel% HMul.hMul let127 x8)
  let let250 := (binrel% HMul.hMul let102 x4)
  let let251 := (binrel% HMul.hMul let127 x0)
  let let252 := (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let250 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let248 (binrel% HAdd.hAdd let247 (binrel% HAdd.hAdd let233 (binrel% HAdd.hAdd let239 let185)))))))))))
  let let253 := (binrel% GE.ge let252 let246)
  let let254 := (binrel% HAdd.hAdd let233 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let239 (binrel% HAdd.hAdd let247 (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let248 (binrel% HAdd.hAdd let250 (binrel% HAdd.hAdd let185 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let128 let136)))))))))))
  let let255 := (binrel% HMul.hMul x4 let102)
  let let256 := (binrel% LE.le let72 let1)
  let let257 := (binrel% HMul.hMul x10 let102)
  let let258 := (Not True)
  let let259 := (binrel% LT.lt let72 let6)
  let let260 := (binrel% HMul.hMul x8 let127)
  let let261 := (binrel% HMul.hMul x11 let102)
  let let262 := (binrel% HMul.hMul x0 let127)
  let let263 := (binrel% HAdd.hAdd let234 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let262 (binrel% HAdd.hAdd let240 (binrel% HAdd.hAdd let261 (binrel% HAdd.hAdd let260 (binrel% HAdd.hAdd let257 (binrel% HAdd.hAdd let255 (binrel% HAdd.hAdd let186 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let129 let137)))))))))))
  let let264 := (Eq let2 let2)
  let let265 := (binrel% LE.le let26 let184)
  let let266 := (Not let265)
  let let267 := (binrel% LE.le let193 let1)
  let let268 := (binrel% LE.le let218 let42)
  let let269 := (Not let268)
  let let270 := (binrel% LE.le let162 let14)
  let let271 := (Not let270)
  let let272 := (binrel% LE.le let190 let42)
  let let273 := (Not let272)
  let let274 := (binrel% LE.le let42 let169)
  let let275 := (Not let274)
  let let276 := (binrel% LE.le let1 let198)
  let let277 := (binrel% LE.le let5 let117)
  let let278 := (binrel% LE.le let14 let111)
  let let279 := (Not let278)
  let let280 := (Not let157)
  let let281 := (Not let236)
  let let282 := (Not let238)
  let let283 := (Not let241)
  let let284 := (Not let242)
  let let285 := (binrel% GE.ge let263 let246)
  let let286 := (Not let285)
  let let287 := (And let286 (And let284 (And let283 (And let282 (And let281 (And let280 (And let279 (And let277 (And let276 (And let275 (And let273 (And let271 (And let269 (And let267 let266))))))))))))))
  let let288 := (And let286 (And (And (And (And (And (And (And (And (And (And (And (And (And let284 let283) let282) let281) let280) let279) let277) let276) let275) let273) let271) let269) let267) let266))
  let let289 := (binrel% LT.lt x13 let42)
  let let290 := (Eq let176 let176)
  let let291 := (Rat.ofInt 0)
  let let292 := (Rat.ofInt 3)
  let let293 := (Neg.neg (binrel% HDiv.hDiv let37 let6))
  let let294 := (Rat.ofInt 5)
  let let295 := (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let291 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let224 (binrel% HAdd.hAdd let291 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let294 (binrel% HAdd.hAdd let293 (binrel% HAdd.hAdd let34 let292))))))))))))
  let let296 := (Eq let96 let119)
  let let297 := (Eq let22 let219)
  let let298 := (Not let103)
  let let299 := (Not let298)
  let let300 := (Eq let299 let103)
  let let301 := (Eq let103 let299)
  let let302 := (Eq let31 let31)
  let let303 := (Not let32)
  let let304 := (Eq let303 let31)
  let let305 := (binrel% LT.lt let62 let1)
  let let306 := (Eq let31 let303)
  let let307 := (Eq let147 let147)
  let let308 := (Rat.ofInt x0)
  let let309 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x5) (binrel% HAdd.hAdd let153 let152)))
  let let310 := (binrel% GE.ge let291 let291)
  let let311 := (binrel% LT.lt x0 let102)
  let let312 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x13 let28))))))
  let let313 := (Rat.ofInt x8)
  let let314 := (Rat.ofInt let55)
  let let315 := (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let89 let88)))
  let let316 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let235 (binrel% HAdd.hAdd let309 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let308 (binrel% HAdd.hAdd let315 (binrel% HAdd.hAdd let314 let313))))))))))))
  let let317 := (And let243 (And let148 (And let140 (And let3 (And let200 (And let298 (And let23 (And let231 (And let226 (And let206 (And let203 (And let118 (And let123 (And let177 let32))))))))))))))
  let let318 := (Eq let263 let252)
  let let319 := (Not let226)
  let let320 := (Or let147 (Or let122 (Or let31 (Or let103 (Or let22 (Or let96 (Or let244 (Or let319 (Or let176 (Or let207 (Or let204 (Or let2 let201))))))))))))
  let let321 := (Or let149 (Or let124 (Or let303 (Or let299 (Or let219 (Or let119 (Or let244 (Or let319 (Or let178 (Or let207 (Or let204 (Or let214 let201))))))))))))
  let let322 := (Or let201 False)
  let let323 := (binrel% LE.le let53 let35)
  let let324 := (binrel% LE.le x8 let10)
  let let325 := (And let225 let324)
  let let326 := (binrel% LE.le let56 let36)
  let let327 := (binrel% LE.le let55 let1)
  let let328 := (And let225 let327)
  let let329 := (binrel% LE.le let57 let39)
  let let330 := (binrel% LE.le let30 let38)
  let let331 := (And let25 let330)
  let let332 := (binrel% LE.le let58 let41)
  let let333 := (binrel% LE.le x0 let40)
  let let334 := (And let225 let333)
  let let335 := (binrel% LE.le let59 let43)
  let let336 := (binrel% LE.le let21 let42)
  let let337 := (And let25 let336)
  let let338 := (binrel% LE.le let63 let44)
  let let339 := (binrel% LE.le let62 let5)
  let let340 := (And let225 let339)
  let let341 := (binrel% LE.le let68 let45)
  let let342 := (And let13 let243)
  let let343 := (binrel% LE.le let71 let46)
  let let344 := (And let9 let226)
  let let345 := (binrel% LT.lt let73 let47)
  let let346 := (And let25 let259)
  let let347 := (binrel% LE.le let75 let48)
  let let348 := (And let9 let206)
  let let349 := (binrel% LE.le let78 let50)
  let let350 := (And let210 let203)
  let let351 := (binrel% LE.le let79 let44)
  let let352 := (binrel% LE.le x11 let5)
  let let353 := (And let225 let352)
  let let354 := (binrel% LE.le let80 let51)
  let let355 := (And let210 let200)
fun lean_r0 : (Eq let4 let3) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let9 True) => -- EVALUATE
fun lean_r2 : (Eq let13 True) => -- EVALUATE
fun lean_r3 : (Eq let24 let23) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let25 True) => -- EVALUATE
fun lean_r5 : (Eq let33 let32) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let84 let83) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let80 let85) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let79 let86) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let78 let87) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let75 let90) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let68 let91) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let63 let92) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let93 let20) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let50 let34) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let94 let16) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let48 let12) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let95 let21) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let101 let96) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let104 True) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let111 let110) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let117 let116) => -- THEORY_REWRITE_ARITH
fun lean_r22 : let120 => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let109 let18) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let121 let27) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let126 let125) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq let129 let128) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let115 let130) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let131 let123) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let132 True) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq let108 x2) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let134 let133) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let135 let29) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let105 let15) => -- THEORY_REWRITE_ARITH
fun lean_r34 : let126 => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let137 let136) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let51 let138) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let113 let139) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let142 let140) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq let144 let143) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let145 let69) => -- THEORY_REWRITE_ARITH
fun lean_r41 : let150 => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq let59 let155) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let156 let70) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let157 let103) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let162 let161) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let169 let168) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let166 let170) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let171 let148) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let172 x11) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let164 x13) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let165 x8) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let175 let122) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let180 let179) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let182 let181) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let184 let183) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let186 let185) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let190 let189) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let159 let97) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let193 let192) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let107 let19) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let194 True) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq let163 let28) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let195 let31) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let198 let197) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let191 let20) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let47 let34) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let199 let30) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let43 let49) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let106 let17) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let167 let66) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let202 let200) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let205 let203) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let209 let207) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let210 True) => -- EVALUATE
fun lean_r75 : (Eq let211 let72) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let212 let173) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let213 True) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq let187 let76) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let216 let215) => -- THEORY_REWRITE_BOOL
fun lean_r80 : (Eq let218 let217) => -- THEORY_REWRITE_ARITH
fun lean_r81 : let220 => -- THEORY_REWRITE_BOOL
fun lean_r82 : (Eq let221 let204) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let222 let22) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let196 let19) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let160 x10) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let223 let100) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let45 let224) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let225 True) => -- EVALUATE
fun lean_r89 : (Eq let188 x3) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let158 let99) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let227 let226) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let228 let206) => -- THEORY_REWRITE_BOOL
fun lean_r93 : (Eq let229 let174) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let112 let98) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let230 let77) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let232 let231) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let234 let233) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let73 let235) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let236 let201) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let150 let237) => -- THEORY_REWRITE_BOOL
fun lean_r101 : (Eq let238 let2) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let240 let239) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let241 let141) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let242 let147) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let245 let243) => -- THEORY_REWRITE_BOOL
fun lean_r106 : (Eq let253 let244) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let254 let252) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let255 let250) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let256 let177) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let257 let248) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let258 False) => -- THEORY_REWRITE_BOOL
fun lean_r112 : (Eq let259 let177) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let260 let249) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let261 let247) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let262 let251) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let263 let263) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let264 True) => -- THEORY_REWRITE_BOOL
fun lean_r118 : (Eq let288 let287) => -- THEORY_REWRITE_BOOL
fun lean_r119 : let216 => -- THEORY_REWRITE_BOOL
fun lean_r120 : (Eq let114 let16) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let289 let201) => -- THEORY_REWRITE_ARITH
fun lean_r122 : let180 => -- THEORY_REWRITE_BOOL
fun lean_r123 : (Eq let290 True) => -- THEORY_REWRITE_BOOL
fun lean_r124 : (Eq let295 let291) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let120 let296) => -- THEORY_REWRITE_BOOL
fun lean_r126 : (Eq let35 let292) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let220 let297) => -- THEORY_REWRITE_BOOL
fun lean_r128 : let300 => -- THEORY_REWRITE_BOOL
fun lean_r129 : (Eq let300 let301) => -- THEORY_REWRITE_BOOL
fun lean_r130 : (Eq let302 True) => -- THEORY_REWRITE_BOOL
fun lean_r131 : let304 => -- THEORY_REWRITE_BOOL
fun lean_r132 : (Eq let305 let118) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let304 let306) => -- THEORY_REWRITE_BOOL
fun lean_r134 : (Eq let307 True) => -- THEORY_REWRITE_BOOL
fun lean_r135 : (Eq let58 let308) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let71 let309) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let310 True) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let36 let34) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let311 let298) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let39 let293) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let312 let208) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq let41 let294) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let44 let291) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let46 let8) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq let316 let291) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq let53 let313) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq let56 let314) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq let57 let315) => -- THEORY_REWRITE_ARITH
fun lean_a149 : let288 => by
have lean_s0 : (Or let149 (Or let124 (Or let303 (Or let299 (Or let219 (Or let119 (Or let244 (Or let319 (Or let178 (Or let207 (Or let204 (Or let214 let322)))))))))))) :=
  (scope (fun lean_a150 : let148 =>
    (scope (fun lean_a151 : let123 =>
      (scope (fun lean_a152 : let32 =>
        (scope (fun lean_a153 : let298 =>
          (scope (fun lean_a154 : let23 =>
            (scope (fun lean_a155 : let118 =>
              (scope (fun lean_a156 : let243 =>
                (scope (fun lean_a157 : let226 =>
                  (scope (fun lean_a158 : let177 =>
                    (scope (fun lean_a159 : let206 =>
                      (scope (fun lean_a160 : let203 =>
                        (scope (fun lean_a161 : let3 =>
                          (scope (fun lean_a162 : let200 =>
                            have lean_s0 : let322 :=
                              (scope (fun lean_a163 : let200 =>
                                have lean_s0 : let210 := by timed trueElim lean_r74
                                have lean_s1 : let355 := by timed And.intro lean_s0 lean_a163
                                have lean_s2 : (Implies let355 let354) := by arithMulNeg [x13, let42, let49], 3
                                have lean_s3 : let354 := by timed modusPonens lean_s1 lean_s2
                                have lean_s4 : let225 := by timed trueElim lean_r88
                                have lean_s5 : (Eq let3 let4) := by timed Eq.symm lean_r0
                                have lean_s6 : let4 := by timed eqResolve lean_a161 lean_s5
                                have lean_s7 : let352 := by intTightUb lean_s6
                                have lean_s8 : let353 := by timed And.intro lean_s4 lean_s7
                                have lean_s9 : (Implies let353 let351) := by arithMulPos [x11, let5, let34], 1
                                have lean_s10 : let351 := by timed modusPonens lean_s8 lean_s9
                                have lean_s11 : let350 := by timed And.intro lean_s0 lean_a160
                                have lean_s12 : (Implies let350 let349) := by arithMulNeg [let77, let14, let49], 3
                                have lean_s13 : let349 := by timed modusPonens lean_s11 lean_s12
                                have lean_s14 : let9 := by timed trueElim lean_r1
                                have lean_s15 : let348 := by timed And.intro lean_s14 lean_a159
                                have lean_s16 : (Implies let348 let347) := by arithMulNeg [let74, let10, let8], 3
                                have lean_s17 : let347 := by timed modusPonens lean_s15 lean_s16
                                have lean_s18 : let25 := by timed trueElim lean_r4
                                have lean_s19 : (Eq let177 let259) := by timed Eq.symm lean_r112
                                have lean_s20 : let259 := by timed eqResolve lean_a158 lean_s19
                                have lean_s21 : let346 := by timed And.intro lean_s18 lean_s20
                                have lean_s22 : (Implies let346 let345) := by arithMulPos [let72, let6, let7], 0
                                have lean_s23 : let345 := by timed modusPonens lean_s21 lean_s22
                                have lean_s24 : let344 := by timed And.intro lean_s14 lean_a157
                                have lean_s25 : (Implies let344 let343) := by arithMulNeg [let70, let1, let8], 3
                                have lean_s26 : let343 := by timed modusPonens lean_s24 lean_s25
                                have lean_s27 : let13 := by timed trueElim lean_r2
                                have lean_s28 : let342 := by timed And.intro lean_s27 lean_a156
                                have lean_s29 : (Implies let342 let341) := by arithMulNeg [let67, let10, let12], 3
                                have lean_s30 : let341 := by timed modusPonens lean_s28 lean_s29
                                have lean_s31 : (Eq let118 let305) := by timed Eq.symm lean_r132
                                have lean_s32 : let305 := by timed eqResolve lean_a155 lean_s31
                                have lean_s33 : let339 := by intTightUb lean_s32
                                have lean_s34 : let340 := by timed And.intro lean_s4 lean_s33
                                have lean_s35 : (Implies let340 let338) := by arithMulPos [let62, let5, let34], 1
                                have lean_s36 : let338 := by timed modusPonens lean_s34 lean_s35
                                have lean_s37 : (Eq let23 let24) := by timed Eq.symm lean_r3
                                have lean_s38 : let24 := by timed eqResolve lean_a154 lean_s37
                                have lean_s39 : let336 := by intTightUb lean_s38
                                have lean_s40 : let337 := by timed And.intro lean_s18 lean_s39
                                have lean_s41 : (Implies let337 let335) := by arithMulPos [let21, let42, let7], 1
                                have lean_s42 : let335 := by timed modusPonens lean_s40 lean_s41
                                have lean_s43 : (Eq let298 let311) := by timed Eq.symm lean_r139
                                have lean_s44 : let311 := by timed eqResolve lean_a153 lean_s43
                                have lean_s45 : let333 := by intTightUb lean_s44
                                have lean_s46 : let334 := by timed And.intro lean_s4 lean_s45
                                have lean_s47 : (Implies let334 let332) := by arithMulPos [x0, let40, let34], 1
                                have lean_s48 : let332 := by timed modusPonens lean_s46 lean_s47
                                have lean_s49 : (Eq let32 let33) := by timed Eq.symm lean_r5
                                have lean_s50 : let33 := by timed eqResolve lean_a152 lean_s49
                                have lean_s51 : let330 := by intTightUb lean_s50
                                have lean_s52 : let331 := by timed And.intro lean_s18 lean_s51
                                have lean_s53 : (Implies let331 let329) := by arithMulPos [let30, let38, let7], 1
                                have lean_s54 : let329 := by timed modusPonens lean_s52 lean_s53
                                have lean_s55 : (Eq let123 let131) := by timed Eq.symm lean_r28
                                have lean_s56 : let131 := by timed eqResolve lean_a151 lean_s55
                                have lean_s57 : let327 := by intTightUb lean_s56
                                have lean_s58 : let328 := by timed And.intro lean_s4 lean_s57
                                have lean_s59 : (Implies let328 let326) := by arithMulPos [let55, let1, let34], 1
                                have lean_s60 : let326 := by timed modusPonens lean_s58 lean_s59
                                have lean_s61 : (Eq let148 let171) := by timed Eq.symm lean_r48
                                have lean_s62 : let171 := by timed eqResolve lean_a150 lean_s61
                                have lean_s63 : let324 := by intTightUb lean_s62
                                have lean_s64 : let325 := by timed And.intro lean_s4 lean_s63
                                have lean_s65 : (Implies let325 let323) := by arithMulPos [x8, let10, let34], 1
                                have lean_s66 : let323 := by timed modusPonens lean_s64 lean_s65
                                have lean_s67 : let84 := by sumBounds [lean_s3, lean_s10, lean_s13, lean_s17, lean_s23, lean_s26, lean_s30, lean_s36, lean_s42, lean_s48, lean_s54, lean_s60, lean_s66]
                                let lean_s68 := by timed congrHAdd lean_r147 lean_r146
                                let lean_s69 := by timed congrHAdd lean_r148 lean_s68
                                let lean_s70 := by timed congrHAdd lean_r135 lean_s69
                                let lean_s71 := by timed congrHAdd lean_r42 lean_s70
                                let lean_s72 := by timed congrHAdd lean_r12 lean_s71
                                let lean_s73 := by timed congrHAdd lean_r11 lean_s72
                                let lean_s74 := by timed congrHAdd lean_r136 lean_s73
                                let lean_s75 := by timed congrHAdd lean_r98 lean_s74
                                let lean_s76 := by timed congrHAdd lean_r10 lean_s75
                                let lean_s77 := by timed congrHAdd lean_r9 lean_s76
                                let lean_s78 := by timed congrHAdd lean_r8 lean_s77
                                have lean_s79 : (Eq let81 let316) := by timed congrHAdd lean_r7 lean_s78
                                have lean_s80 : (Eq let81 let291) := by timed Eq.trans lean_s79 lean_r145
                                let lean_s81 := by timed flipCongrArg lean_s80 [GE.ge]
                                let lean_s82 := by timed congrHAdd lean_r138 lean_r126
                                let lean_s83 := by timed congrHAdd lean_r140 lean_s82
                                let lean_s84 := by timed congrHAdd lean_r142 lean_s83
                                let lean_s85 := by timed congrHAdd lean_r68 lean_s84
                                let lean_s86 := by timed congrHAdd lean_r143 lean_s85
                                let lean_s87 := by timed congrHAdd lean_r87 lean_s86
                                let lean_s88 := by timed congrHAdd lean_r144 lean_s87
                                let lean_s89 := by timed congrHAdd lean_r66 lean_s88
                                let lean_s90 := by timed congrHAdd lean_r16 lean_s89
                                let lean_s91 := by timed congrHAdd lean_r14 lean_s90
                                let lean_s92 := by timed congrHAdd lean_r143 lean_s91
                                have lean_s93 : (Eq let52 let295) := by timed congrHAdd lean_r36 lean_s92
                                have lean_s94 : (Eq let52 let291) := by timed Eq.trans lean_s93 lean_r124
                                have lean_s95 : (Eq let82 let310) := by timed congr lean_s81 lean_s94
                                have lean_s96 : (Eq let82 True) := by timed Eq.trans lean_s95 lean_r137
                                have lean_s97 : (Eq let83 let258) := by timed flipCongrArg lean_s96 [Not]
                                have lean_s98 : (Eq let83 False) := by timed Eq.trans lean_s97 lean_r111
                                have lean_s99 : (Eq let84 False) := by timed Eq.trans lean_r6 lean_s98
                                show False from by timed eqResolve lean_s67 lean_s99
                              ))
                            have lean_s1 : let201 := by liftOrNToNeg lean_s0
                            have lean_s2 : (Eq let201 let289) := by timed Eq.symm lean_r121
                            have lean_s3 : let289 := by timed eqResolve lean_s1 lean_s2
                            have lean_s4 : let201 := by timed eqResolve lean_s3 lean_r121
                            show False from by timed contradiction lean_a162 lean_s4
  ))))))))))))))))))))))))))
have lean_s1 : (Not (And let148 (And let123 (And let32 (And let298 (And let23 (And let118 (And let243 (And let226 (And let177 (And let206 (And let203 (And let3 let200))))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let321 := by timed flipNotAnd lean_s1 [let148, let123, let32, let298, let23, let118, let243, let226, let177, let206, let203, let3, let200]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let307 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let237 let307) := by timed congr lean_s5 lean_r41
have lean_s7 : (Eq let237 True) := by timed Eq.trans lean_s6 lean_r134
have lean_s8 : (Eq let150 True) := by timed Eq.trans lean_r100 lean_s7
have lean_s9 : let150 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let194 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let125 let194) := by timed congr lean_s12 lean_r34
have lean_s14 : (Eq let125 True) := by timed Eq.trans lean_s13 lean_r61
have lean_s15 : (Eq let126 True) := by timed Eq.trans lean_r25 lean_s14
have lean_s16 : let126 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : let302 := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq let306 let302) := by timed congr lean_s19 lean_r131
have lean_s21 : (Eq let306 True) := by timed Eq.trans lean_s20 lean_r130
have lean_s22 : (Eq let304 True) := by timed Eq.trans lean_r133 lean_s21
have lean_s23 : let304 := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : let104 := by timed rfl
let lean_s26 := by timed flipCongrArg lean_s25 [Eq]
have lean_s27 : (Eq let301 let104) := by timed congr lean_s26 lean_r128
have lean_s28 : (Eq let301 True) := by timed Eq.trans lean_s27 lean_r19
have lean_s29 : (Eq let300 True) := by timed Eq.trans lean_r129 lean_s28
have lean_s30 : let300 := by timed trueElim lean_s29
let lean_s31 := by timed congr lean_s3 lean_s30
have lean_s32 : let213 := by timed rfl
let lean_s33 := by timed flipCongrArg lean_s32 [Eq]
have lean_s34 : (Eq let297 let213) := by timed congr lean_s33 lean_r81
have lean_s35 : (Eq let297 True) := by timed Eq.trans lean_s34 lean_r77
have lean_s36 : (Eq let220 True) := by timed Eq.trans lean_r127 lean_s35
have lean_s37 : let220 := by timed trueElim lean_s36
let lean_s38 := by timed congr lean_s3 lean_s37
have lean_s39 : let132 := by timed rfl
let lean_s40 := by timed flipCongrArg lean_s39 [Eq]
have lean_s41 : (Eq let296 let132) := by timed congr lean_s40 lean_r22
have lean_s42 : (Eq let296 True) := by timed Eq.trans lean_s41 lean_r29
have lean_s43 : (Eq let120 True) := by timed Eq.trans lean_r125 lean_s42
have lean_s44 : let120 := by timed trueElim lean_s43
let lean_s45 := by timed congr lean_s3 lean_s44
have lean_s46 : (Eq let244 let244) := by timed rfl
let lean_s47 := by timed congr lean_s3 lean_s46
have lean_s48 : (Eq let319 let319) := by timed rfl
let lean_s49 := by timed congr lean_s3 lean_s48
have lean_s50 : let290 := by timed rfl
let lean_s51 := by timed flipCongrArg lean_s50 [Eq]
have lean_s52 : (Eq let179 let290) := by timed congr lean_s51 lean_r122
have lean_s53 : (Eq let179 True) := by timed Eq.trans lean_s52 lean_r123
have lean_s54 : (Eq let180 True) := by timed Eq.trans lean_r53 lean_s53
have lean_s55 : let180 := by timed trueElim lean_s54
let lean_s56 := by timed congr lean_s3 lean_s55
have lean_s57 : (Eq let207 let207) := by timed rfl
let lean_s58 := by timed congr lean_s3 lean_s57
have lean_s59 : (Eq let204 let204) := by timed rfl
let lean_s60 := by timed congr lean_s3 lean_s59
have lean_s61 : let264 := by timed rfl
let lean_s62 := by timed flipCongrArg lean_s61 [Eq]
have lean_s63 : (Eq let215 let264) := by timed congr lean_s62 lean_r119
have lean_s64 : (Eq let215 True) := by timed Eq.trans lean_s63 lean_r117
have lean_s65 : (Eq let216 True) := by timed Eq.trans lean_r79 lean_s64
have lean_s66 : let216 := by timed trueElim lean_s65
let lean_s67 := by timed congr lean_s3 lean_s66
have lean_s68 : (Eq let201 let201) := by timed rfl
let lean_s69 := by timed congr lean_s67 lean_s68
let lean_s70 := by timed congr lean_s60 lean_s69
let lean_s71 := by timed congr lean_s58 lean_s70
let lean_s72 := by timed congr lean_s56 lean_s71
let lean_s73 := by timed congr lean_s49 lean_s72
let lean_s74 := by timed congr lean_s47 lean_s73
let lean_s75 := by timed congr lean_s45 lean_s74
let lean_s76 := by timed congr lean_s38 lean_s75
let lean_s77 := by timed congr lean_s31 lean_s76
let lean_s78 := by timed congr lean_s24 lean_s77
let lean_s79 := by timed congr lean_s17 lean_s78
have lean_s80 : (Eq let321 let320) := by timed congr lean_s10 lean_s79
have lean_s81 : let320 := by timed eqResolve lean_s2 lean_s80
have lean_s82 : (Or let244 (Or let147 (Or let2 (Or let201 (Or let103 (Or let22 (Or let207 (Or let204 (Or let96 (Or let122 (Or let176 (Or let31 let319)))))))))))) := by permutateOr lean_s81, [6, 0, 11, 12, 3, 4, 9, 10, 5, 1, 8, 2, 7], (- 1)
have lean_s83 : (Eq And And) := by timed rfl
let lean_s84 := by timed congrHAdd lean_r26 lean_r35
let lean_s85 := by timed congrHAdd lean_r31 lean_s84
let lean_s86 := by timed congrHAdd lean_r56 lean_s85
let lean_s87 := by timed congrHAdd lean_r108 lean_s86
let lean_s88 := by timed congrHAdd lean_r110 lean_s87
let lean_s89 := by timed congrHAdd lean_r113 lean_s88
let lean_s90 := by timed congrHAdd lean_r114 lean_s89
let lean_s91 := by timed congrHAdd lean_r102 lean_s90
let lean_s92 := by timed congrHAdd lean_r115 lean_s91
let lean_s93 := by timed congrHAdd lean_r39 lean_s92
have lean_s94 : (Eq let263 let254) := by timed congrHAdd lean_r97 lean_s93
have lean_s95 : let318 := by timed Eq.trans lean_s94 lean_r107
have lean_s96 : let318 := by timed Eq.trans lean_r116 lean_s95
let lean_s97 := by timed flipCongrArg lean_s96 [GE.ge]
have lean_s98 : (Eq let246 let246) := by timed rfl
have lean_s99 : (Eq let285 let253) := by timed congr lean_s97 lean_s98
have lean_s100 : (Eq let285 let244) := by timed Eq.trans lean_s99 lean_r106
have lean_s101 : (Eq let286 let245) := by timed flipCongrArg lean_s100 [Not]
have lean_s102 : (Eq let286 let243) := by timed Eq.trans lean_s101 lean_r105
let lean_s103 := by timed congr lean_s83 lean_s102
have lean_s104 : (Eq let284 let148) := by timed flipCongrArg lean_r104 [Not]
let lean_s105 := by timed congr lean_s83 lean_s104
have lean_s106 : (Eq let283 let142) := by timed flipCongrArg lean_r103 [Not]
have lean_s107 : (Eq let283 let140) := by timed Eq.trans lean_s106 lean_r38
let lean_s108 := by timed congr lean_s83 lean_s107
have lean_s109 : (Eq let282 let3) := by timed flipCongrArg lean_r101 [Not]
let lean_s110 := by timed congr lean_s83 lean_s109
have lean_s111 : (Eq let281 let202) := by timed flipCongrArg lean_r99 [Not]
have lean_s112 : (Eq let281 let200) := by timed Eq.trans lean_s111 lean_r71
let lean_s113 := by timed congr lean_s83 lean_s112
have lean_s114 : (Eq let280 let298) := by timed flipCongrArg lean_r44 [Not]
let lean_s115 := by timed congr lean_s83 lean_s114
have lean_s116 : (Eq let14 let14) := by timed rfl
let lean_s117 := by timed flipCongrArg lean_s116 [LE.le]
let lean_s118 := by timed congrHAdd lean_r69 lean_r33
let lean_s119 := by timed congrHAdd lean_r60 lean_s118
let lean_s120 := by timed congrHAdd lean_r15 lean_s119
let lean_s121 := by timed congrHAdd lean_r13 lean_s120
let lean_s122 := by timed congrHAdd lean_r30 lean_s121
have lean_s123 : (Eq let110 let95) := by timed congrHAdd lean_r23 lean_s122
have lean_s124 : (Eq let110 let21) := by timed Eq.trans lean_s123 lean_r17
have lean_s125 : (Eq let111 let21) := by timed Eq.trans lean_r20 lean_s124
have lean_s126 : (Eq let278 let222) := by timed congr lean_s117 lean_s125
have lean_s127 : (Eq let278 let22) := by timed Eq.trans lean_s126 lean_r83
have lean_s128 : (Eq let279 let23) := by timed flipCongrArg lean_s127 [Not]
let lean_s129 := by timed congr lean_s83 lean_s128
have lean_s130 : (Eq let5 let5) := by timed rfl
let lean_s131 := by timed flipCongrArg lean_s130 [LE.le]
have lean_s132 : (Eq x7 x7) := by timed rfl
have lean_s133 : (Eq x6 x6) := by timed rfl
have lean_s134 : (Eq x0 x0) := by timed rfl
have lean_s135 : (Eq x2 x2) := by timed rfl
let lean_s136 := by timed congrHAdd lean_r94 lean_s135
let lean_s137 := by timed congrHAdd lean_r37 lean_s136
let lean_s138 := by timed congrHAdd lean_r120 lean_s137
let lean_s139 := by timed congrHAdd lean_s134 lean_s138
let lean_s140 := by timed congrHAdd lean_s133 lean_s139
let lean_s141 := by timed congrHAdd lean_s132 lean_s140
have lean_s142 : (Eq let116 let182) := by timed congrHAdd lean_r27 lean_s141
have lean_s143 : (Eq let116 let181) := by timed Eq.trans lean_s142 lean_r54
have lean_s144 : (Eq let117 let181) := by timed Eq.trans lean_r21 lean_s143
have lean_s145 : (Eq let277 let232) := by timed congr lean_s131 lean_s144
have lean_s146 : (Eq let277 let231) := by timed Eq.trans lean_s145 lean_r96
let lean_s147 := by timed congr lean_s83 lean_s146
have lean_s148 : (Eq let1 let1) := by timed rfl
let lean_s149 := by timed flipCongrArg lean_s148 [LE.le]
have lean_s150 : (Eq x8 x8) := by timed rfl
have lean_s151 : (Eq x10 x10) := by timed rfl
let lean_s152 := by timed congrHAdd lean_s151 lean_r40
let lean_s153 := by timed congrHAdd lean_s150 lean_s152
have lean_s154 : (Eq let197 let156) := by timed congrHAdd lean_r84 lean_s153
have lean_s155 : (Eq let197 let70) := by timed Eq.trans lean_s154 lean_r43
have lean_s156 : (Eq let198 let70) := by timed Eq.trans lean_r64 lean_s155
have lean_s157 : (Eq let276 let227) := by timed congr lean_s149 lean_s156
have lean_s158 : (Eq let276 let226) := by timed Eq.trans lean_s157 lean_r91
let lean_s159 := by timed congr lean_s83 lean_s158
have lean_s160 : (Eq let42 let42) := by timed rfl
let lean_s161 := by timed flipCongrArg lean_s160 [LE.le]
let lean_s162 := by timed congrHAdd lean_r50 lean_r62
let lean_s163 := by timed congrHAdd lean_r51 lean_s162
let lean_s164 := by timed congrHAdd lean_r85 lean_s163
let lean_s165 := by timed congrHAdd lean_r47 lean_s164
let lean_s166 := by timed congrHAdd lean_r24 lean_s165
have lean_s167 : (Eq let168 let312) := by timed congrHAdd lean_r70 lean_s166
have lean_s168 : (Eq let168 let208) := by timed Eq.trans lean_s167 lean_r141
have lean_s169 : (Eq let169 let208) := by timed Eq.trans lean_r46 lean_s168
have lean_s170 : (Eq let274 let209) := by timed congr lean_s161 lean_s169
have lean_s171 : (Eq let274 let207) := by timed Eq.trans lean_s170 lean_r73
have lean_s172 : (Eq let275 let228) := by timed flipCongrArg lean_s171 [Not]
have lean_s173 : (Eq let275 let206) := by timed Eq.trans lean_s172 lean_r92
let lean_s174 := by timed congr lean_s83 lean_s173
let lean_s175 := by timed congrHAdd lean_r50 lean_r78
let lean_s176 := by timed congrHAdd lean_r49 lean_s175
let lean_s177 := by timed congrHAdd lean_r85 lean_s176
have lean_s178 : (Eq let189 let230) := by timed congrHAdd lean_r89 lean_s177
have lean_s179 : (Eq let189 let77) := by timed Eq.trans lean_s178 lean_r95
have lean_s180 : (Eq let190 let77) := by timed Eq.trans lean_r57 lean_s179
let lean_s181 := by timed flipCongrArg lean_s180 [LE.le]
have lean_s182 : (Eq let272 let221) := by timed congr lean_s181 lean_s160
have lean_s183 : (Eq let272 let204) := by timed Eq.trans lean_s182 lean_r82
have lean_s184 : (Eq let273 let205) := by timed flipCongrArg lean_s183 [Not]
have lean_s185 : (Eq let273 let203) := by timed Eq.trans lean_s184 lean_r72
let lean_s186 := by timed congr lean_s83 lean_s185
let lean_s187 := by timed congrHAdd lean_r58 lean_r90
let lean_s188 := by timed congrHAdd lean_r85 lean_s187
have lean_s189 : (Eq let161 let223) := by timed congrHAdd lean_r94 lean_s188
have lean_s190 : (Eq let161 let100) := by timed Eq.trans lean_s189 lean_r86
have lean_s191 : (Eq let162 let100) := by timed Eq.trans lean_r45 lean_s190
let lean_s192 := by timed flipCongrArg lean_s191 [LE.le]
have lean_s193 : (Eq let270 let101) := by timed congr lean_s192 lean_s116
have lean_s194 : (Eq let270 let96) := by timed Eq.trans lean_s193 lean_r18
have lean_s195 : (Eq let271 let118) := by timed flipCongrArg lean_s194 [Not]
let lean_s196 := by timed congr lean_s83 lean_s195
let lean_s197 := by timed congrHAdd lean_r70 lean_r69
have lean_s198 : (Eq let217 let229) := by timed congrHAdd lean_r76 lean_s197
have lean_s199 : (Eq let217 let174) := by timed Eq.trans lean_s198 lean_r93
have lean_s200 : (Eq let218 let174) := by timed Eq.trans lean_r80 lean_s199
let lean_s201 := by timed flipCongrArg lean_s200 [LE.le]
have lean_s202 : (Eq let268 let175) := by timed congr lean_s201 lean_s160
have lean_s203 : (Eq let268 let122) := by timed Eq.trans lean_s202 lean_r52
have lean_s204 : (Eq let269 let123) := by timed flipCongrArg lean_s203 [Not]
let lean_s205 := by timed congr lean_s83 lean_s204
have lean_s206 : (Eq x1 x1) := by timed rfl
let lean_s207 := by timed congrHAdd lean_r65 lean_s206
let lean_s208 := by timed congrHAdd lean_r120 lean_s207
let lean_s209 := by timed congrHAdd lean_s134 lean_s208
let lean_s210 := by timed congrHAdd lean_s132 lean_s209
have lean_s211 : (Eq let192 let211) := by timed congrHAdd lean_s133 lean_s210
have lean_s212 : (Eq let192 let72) := by timed Eq.trans lean_s211 lean_r75
have lean_s213 : (Eq let193 let72) := by timed Eq.trans lean_r59 lean_s212
let lean_s214 := by timed flipCongrArg lean_s213 [LE.le]
have lean_s215 : (Eq let267 let256) := by timed congr lean_s214 lean_s148
have lean_s216 : (Eq let267 let177) := by timed Eq.trans lean_s215 lean_r109
let lean_s217 := by timed congr lean_s83 lean_s216
have lean_s218 : (Eq let26 let26) := by timed rfl
let lean_s219 := by timed flipCongrArg lean_s218 [LE.le]
let lean_s220 := by timed congrHAdd lean_r33 lean_r62
let lean_s221 := by timed congrHAdd lean_r24 lean_s220
have lean_s222 : (Eq let183 let199) := by timed congrHAdd lean_r32 lean_s221
have lean_s223 : (Eq let183 let30) := by timed Eq.trans lean_s222 lean_r67
have lean_s224 : (Eq let184 let30) := by timed Eq.trans lean_r55 lean_s223
have lean_s225 : (Eq let265 let195) := by timed congr lean_s219 lean_s224
have lean_s226 : (Eq let265 let31) := by timed Eq.trans lean_s225 lean_r63
have lean_s227 : (Eq let266 let32) := by timed flipCongrArg lean_s226 [Not]
let lean_s228 := by timed congr lean_s217 lean_s227
let lean_s229 := by timed congr lean_s205 lean_s228
let lean_s230 := by timed congr lean_s196 lean_s229
let lean_s231 := by timed congr lean_s186 lean_s230
let lean_s232 := by timed congr lean_s174 lean_s231
let lean_s233 := by timed congr lean_s159 lean_s232
let lean_s234 := by timed congr lean_s147 lean_s233
let lean_s235 := by timed congr lean_s129 lean_s234
let lean_s236 := by timed congr lean_s115 lean_s235
let lean_s237 := by timed congr lean_s113 lean_s236
let lean_s238 := by timed congr lean_s110 lean_s237
let lean_s239 := by timed congr lean_s108 lean_s238
let lean_s240 := by timed congr lean_s105 lean_s239
have lean_s241 : (Eq let287 let317) := by timed congr lean_s103 lean_s240
have lean_s242 : (Eq let288 let317) := by timed Eq.trans lean_r118 lean_s241
have lean_s243 : let317 := by timed eqResolve lean_a149 lean_s242
have lean_s244 : let32 := by andElim lean_s243, 14
let lean_s245 := by R1 lean_s82, lean_s244, let31, [(- 1), 0]
have lean_s246 : let177 := by andElim lean_s243, 13
let lean_s247 := by R1 lean_s245, lean_s246, let176, [(- 1), 0]
have lean_s248 : let123 := by andElim lean_s243, 12
let lean_s249 := by R1 lean_s247, lean_s248, let122, [(- 1), 0]
have lean_s250 : let118 := by andElim lean_s243, 11
let lean_s251 := by R1 lean_s249, lean_s250, let96, [(- 1), 0]
have lean_s252 : let203 := by andElim lean_s243, 10
let lean_s253 := by R2 lean_s251, lean_s252, let203, [(- 1), 0]
have lean_s254 : let206 := by andElim lean_s243, 9
let lean_s255 := by R2 lean_s253, lean_s254, let206, [(- 1), 0]
have lean_s256 : let226 := by andElim lean_s243, 8
let lean_s257 := by R2 lean_s255, lean_s256, let226, [(- 1), 0]
have lean_s258 : let23 := by andElim lean_s243, 6
let lean_s259 := by R1 lean_s257, lean_s258, let22, [(- 1), 0]
have lean_s260 : let298 := by andElim lean_s243, 5
let lean_s261 := by R1 lean_s259, lean_s260, let103, [(- 1), 0]
have lean_s262 : let200 := by andElim lean_s243, 4
let lean_s263 := by R2 lean_s261, lean_s262, let200, [(- 1), 0]
have lean_s264 : let3 := by andElim lean_s243, 3
let lean_s265 := by R1 lean_s263, lean_s264, let2, [(- 1), 0]
have lean_s266 : let148 := by andElim lean_s243, 1
let lean_s267 := by R1 lean_s265, lean_s266, let147, [(- 1), 0]
have lean_s268 : let243 := by andElim lean_s243, 0
exact (show False from by R2 lean_s267, lean_s268, let243, [0, 0])


