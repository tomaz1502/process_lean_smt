open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x0 : Int}
variable {x5 : Int}
variable {x10 : Int}
variable {x4 : Int}
variable {x12 : Int}
variable {x2 : Int}
variable {x1 : Int}
variable {x14 : Int}
variable {x0 : Int}
variable {x3 : Int}
variable {x3 : Int}
variable {x7 : Int}
variable {x6 : Int}
variable {x14 : Int}
variable {x2 : Int}
variable {x4 : Int}
variable {x10 : Int}
variable {x8 : Int}
variable {x5 : Int}
variable {x11 : Int}
variable {x6 : Int}
variable {x8 : Int}
variable {x11 : Int}
variable {x13 : Int}
variable {x1 : Int}
variable {x13 : Int}
variable {x12 : Int}
variable {x7 : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 17)
  let let6 := (Int.ofNat 11)
  let let7 := (binrel% HDiv.hDiv let6 let5)
  let let8 := (binrel% GT.gt let7 let1)
  let let9 := (Int.ofNat 1)
  let let10 := (Int.ofNat 2)
  let let11 := (Neg.neg let10)
  let let12 := (Neg.neg let9)
  let let13 := (binrel% HMul.hMul let12 x10)
  let let14 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x4) (binrel% HAdd.hAdd let13 (binrel% HMul.hMul let11 x11))))
  let let15 := (binrel% GE.ge let14 let9)
  let let16 := (Not let15)
  let let17 := (binrel% LT.lt let14 let9)
  let let18 := (Int.ofNat 18)
  let let19 := (binrel% HDiv.hDiv let18 let5)
  let let20 := (Neg.neg let19)
  let let21 := (binrel% LT.lt let20 let1)
  let let22 := (binrel% HDiv.hDiv (Int.ofNat 8) let5)
  let let23 := (binrel% GT.gt let22 let1)
  let let24 := (binrel% GT.gt let2 let1)
  let let25 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x8 (binrel% HMul.hMul let11 x14)))
  let let26 := (binrel% GE.ge let25 let10)
  let let27 := (Not let26)
  let let28 := (binrel% LT.lt let25 let10)
  let let29 := (Neg.neg let7)
  let let30 := (binrel% LT.lt let29 let1)
  let let31 := (binrel% HDiv.hDiv (Int.ofNat 15) let5)
  let let32 := (Neg.neg let31)
  let let33 := (binrel% LT.lt let32 let1)
  let let34 := (binrel% HDiv.hDiv let9 let5)
  let let35 := (Neg.neg let34)
  let let36 := (binrel% LT.lt let35 let1)
  let let37 := (binrel% HDiv.hDiv (Int.ofNat 7) let5)
  let let38 := (binrel% GT.gt let37 let1)
  let let39 := (binrel% HMul.hMul let12 x4)
  let let40 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 let13)))))
  let let41 := (binrel% GE.ge let40 let10)
  let let42 := (Not let41)
  let let43 := (binrel% LT.lt let40 let10)
  let let44 := (Int.ofNat 54)
  let let45 := (binrel% HDiv.hDiv let44 let5)
  let let46 := (Int.ofNat 36)
  let let47 := (Neg.neg (binrel% HDiv.hDiv let46 let5))
  let let48 := (Int.ofNat 72)
  let let49 := (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv let48 let5) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let47 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x11) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x12) (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x13) (binrel% HMul.hMul let45 x14))))))))))))
  let let50 := (Int.ofNat 3)
  let let51 := (Neg.neg let50)
  let let52 := (Int.ofNat 4)
  let let53 := (binrel% HMul.hMul let12 x3)
  let let54 := (binrel% HMul.hMul let12 x2)
  let let55 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let52) x4) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x8) (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x11) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x12) (binrel% HAdd.hAdd x13 (binrel% HMul.hMul let51 x14))))))))))))
  let let56 := (binrel% HMul.hMul let20 let55)
  let let57 := (binrel% HDiv.hDiv (Int.ofNat 16) let5)
  let let58 := (Neg.neg let57)
  let let59 := (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x12) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x13) (binrel% HMul.hMul let58 x14)))))))
  let let60 := (binrel% HMul.hMul let12 x13)
  let let61 := (binrel% HMul.hMul let12 x8)
  let let62 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x12 (binrel% HAdd.hAdd let60 x14))))))
  let let63 := (binrel% HMul.hMul let58 let62)
  let let64 := (Neg.neg (Int.ofNat 10))
  let let65 := (binrel% HMul.hMul let12 x14)
  let let66 := (binrel% HMul.hMul let12 x12)
  let let67 := (binrel% HMul.hMul let12 x11)
  let let68 := (binrel% HMul.hMul let10 x7)
  let let69 := (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 let65)))
  let let70 := (binrel% GE.ge let69 let64)
  let let71 := (Not let70)
  let let72 := (binrel% LT.lt let69 let64)
  let let73 := (binrel% HMul.hMul let12 x5)
  let let74 := (Neg.neg x5)
  let let75 := (Not let42)
  let let76 := (Eq let41 let75)
  let let77 := (Eq let75 let41)
  let let78 := (binrel% HMul.hMul let10 x3)
  let let79 := (binrel% HMul.hMul x3 let10)
  let let80 := (binrel% HMul.hMul x11 let12)
  let let81 := (Rat.ofInt x8)
  let let82 := (binrel% HMul.hMul let2 x8)
  let let83 := (binrel% HMul.hMul let10 x12)
  let let84 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd let83 x13))))
  let let85 := (binrel% GE.ge let84 let12)
  let let86 := (Not let85)
  let let87 := (binrel% LE.le let84 let11)
  let let88 := (Rat.ofInt (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x12) let60)))))
  let let89 := (binrel% HMul.hMul let3 let84)
  let let90 := (binrel% GE.ge x13 let11)
  let let91 := (Not let90)
  let let92 := (binrel% LE.le x13 let51)
  let let93 := (binrel% HDiv.hDiv (Int.ofNat 22) let5)
  let let94 := (Neg.neg let93)
  let let95 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let29 x10) (binrel% HMul.hMul let94 x11))))
  let let96 := (binrel% HMul.hMul let7 let14)
  let let97 := (Not let86)
  let let98 := (binrel% HMul.hMul x8 let12)
  let let99 := (binrel% HMul.hMul x3 let12)
  let let100 := (binrel% HMul.hMul x14 let10)
  let let101 := (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let99 let98))
  let let102 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let100 let99) let98)
  let let103 := (Int.ofNat 6)
  let let104 := (binrel% GE.ge x0 let103)
  let let105 := (Not let104)
  let let106 := (Not let105)
  let let107 := (Eq let104 let106)
  let let108 := (Eq let106 let104)
  let let109 := (Eq let104 let104)
  let let110 := (Neg.neg let18)
  let let111 := (binrel% HMul.hMul let110 x13)
  let let112 := (binrel% HMul.hMul x13 let110)
  let let113 := (binrel% LE.le let40 let9)
  let let114 := (binrel% LE.le let103 x0)
  let let115 := (binrel% HMul.hMul x2 let12)
  let let116 := (binrel% GE.ge x11 let9)
  let let117 := (Eq let116 let116)
  let let118 := (binrel% HMul.hMul let12 x1)
  let let119 := (binrel% HMul.hMul x1 let12)
  let let120 := (binrel% HMul.hMul let10 x14)
  let let121 := (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let61 let120))
  let let122 := (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let53 let61))
  let let123 := (binrel% LT.lt x0 let103)
  let let124 := (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x8 x10)))
  let let125 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let78)))
  let let126 := (binrel% HMul.hMul x12 let12)
  let let127 := (binrel% HMul.hMul x14 let12)
  let let128 := (binrel% HMul.hMul x7 let10)
  let let129 := (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let80 let126)))
  let let130 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let128 let127) let80) let126)
  let let131 := (binrel% LE.le let121 let11)
  let let132 := (binrel% HMul.hMul x8 let9)
  let let133 := (Not let116)
  let let134 := (binrel% LT.lt x11 let9)
  let let135 := (binrel% HMul.hMul x11 let9)
  let let136 := (binrel% HDiv.hDiv let10 let5)
  let let137 := (binrel% GT.gt let136 let1)
  let let138 := (binrel% HMul.hMul x3 let9)
  let let139 := (binrel% HMul.hMul let18 x3)
  let let140 := (binrel% HMul.hMul x3 let18)
  let let141 := (binrel% HMul.hMul let110 x5)
  let let142 := (binrel% HMul.hMul x5 let110)
  let let143 := (binrel% HMul.hMul x13 let9)
  let let144 := (binrel% HDiv.hDiv (Int.ofNat 13) let5)
  let let145 := (binrel% GT.gt let144 let1)
  let let146 := (binrel% HMul.hMul let18 x10)
  let let147 := (binrel% HMul.hMul x10 let18)
  let let148 := (Rat.ofInt 0)
  let let149 := (Neg.neg let37)
  let let150 := (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x7) (binrel% HMul.hMul let149 x10))))))
  let let151 := (binrel% HMul.hMul let136 x11)
  let let152 := (Neg.neg let144)
  let let153 := (binrel% HDiv.hDiv (Int.ofNat 26) let5)
  let let154 := (binrel% HAdd.hAdd (binrel% HMul.hMul let144 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let153 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x10) (binrel% HMul.hMul let152 x11)))))))
  let let155 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let136) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x8) (binrel% HMul.hMul let35 x10))))
  let let156 := (binrel% HDiv.hDiv (Int.ofNat 30) let5)
  let let157 := (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let156) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let156 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x10) (binrel% HMul.hMul let156 x13))))))))
  let let158 := (binrel% HMul.hMul let29 x13)
  let let159 := (Rat.ofInt let25)
  let let160 := (binrel% HMul.hMul let22 x0)
  let let161 := (binrel% HDiv.hDiv let52 let5)
  let let162 := (Neg.neg let161)
  let let163 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x11) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x12) (binrel% HMul.hMul let162 x14))))
  let let164 := (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let163 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let151 let150)))))))))))))
  let let165 := (binrel% HMul.hMul x12 let10)
  let let166 := (binrel% HMul.hMul let10 x6)
  let let167 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let13 let67))))))
  let let168 := (binrel% GE.ge let167 let12)
  let let169 := (Not let168)
  let let170 := (binrel% LT.lt let167 let12)
  let let171 := (binrel% HMul.hMul let48 x4)
  let let172 := (binrel% HMul.hMul x4 let48)
  let let173 := (binrel% HMul.hMul let10 x11)
  let let174 := (binrel% HMul.hMul let10 x4)
  let let175 := (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd x10 let173)))
  let let176 := (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let173 let118)))
  let let177 := (Neg.neg x4)
  let let178 := (Neg.neg x10)
  let let179 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let178 (binrel% HAdd.hAdd let177 x1)))))
  let let180 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x7) x0) let178) let177) x1)
  let let181 := (binrel% GE.ge let62 let50)
  let let182 := (Not let181)
  let let183 := (Not let182)
  let let184 := (binrel% HMul.hMul let18 x2)
  let let185 := (binrel% HMul.hMul x2 let18)
  let let186 := (binrel% LT.lt let58 let1)
  let let187 := (binrel% GE.ge let124 let9)
  let let188 := (binrel% LE.le let9 let124)
  let let189 := (binrel% HMul.hMul let44 x14)
  let let190 := (binrel% HMul.hMul x14 let44)
  let let191 := (binrel% HMul.hMul let110 x6)
  let let192 := (binrel% HMul.hMul x6 let110)
  let let193 := (binrel% HMul.hMul x10 let9)
  let let194 := (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let143 let165))))
  let let195 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let138 let193) let135) let143) let165)
  let let196 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x13 let83))))
  let let197 := (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd x13 let65))))))
  let let198 := (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x13 let66))))))
  let let199 := (binrel% LE.le let64 let69)
  let let200 := (binrel% HMul.hMul let44 x12)
  let let201 := (binrel% HMul.hMul let44 x11)
  let let202 := (Neg.neg let46)
  let let203 := (binrel% HMul.hMul let202 x8)
  let let204 := (binrel% HMul.hMul let110 x1)
  let let205 := (binrel% HAdd.hAdd let204 (binrel% HAdd.hAdd let184 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let201 (binrel% HAdd.hAdd let200 (binrel% HAdd.hAdd let111 let189)))))))))))
  let let206 := (binrel% HAdd.hAdd let200 (binrel% HAdd.hAdd let204 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let201 (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let184 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd let191 let139)))))))))))
  let let207 := (Eq let41 let41)
  let let208 := (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let143 let126))))))
  let let209 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let99 let127) let115) let193) let132) let143) let126)
  let let210 := (Neg.neg let153)
  let let211 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 48) let5))
  let let212 := (binrel% HDiv.hDiv (Int.ofNat 40) let5)
  let let213 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 44) let5))
  let let214 := (Rat.ofInt 3)
  let let215 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let213 (binrel% HAdd.hAdd let212 (binrel% HAdd.hAdd let211 (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd let148 let37)))))))))))))
  let let216 := (binrel% HMul.hMul let37 let40)
  let let217 := (binrel% HMul.hMul x11 let44)
  let let218 := (binrel% HMul.hMul x8 let202)
  let let219 := (binrel% LE.le let11 let197)
  let let220 := (binrel% GE.ge let55 let10)
  let let221 := (Not let220)
  let let222 := (Not let221)
  let let223 := (binrel% HMul.hMul x12 let44)
  let let224 := (binrel% HMul.hMul x4 let10)
  let let225 := (binrel% HMul.hMul x11 let10)
  let let226 := (Not let133)
  let let227 := (Eq let226 let116)
  let let228 := (binrel% HMul.hMul x1 let110)
  let let229 := (binrel% HMul.hMul let161 let69)
  let let230 := (binrel% HAdd.hAdd let224 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let225 let119)))
  let let231 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let224 let193) let225) let119)
  let let232 := (Eq let116 let226)
  let let233 := (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let217 (binrel% HAdd.hAdd let218 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let185 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let192 let140)))))))))))
  let let234 := (binrel% LE.le let175 let12)
  let let235 := (Not let169)
  let let236 := (Eq let235 let168)
  let let237 := (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let67 let66)))
  let let238 := (binrel% GT.gt let161 let1)
  let let239 := (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let79)))
  let let240 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let74 x8) x10) let79)
  let let241 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let39 x1)))))
  let let242 := (binrel% HMul.hMul let11 x13)
  let let243 := (binrel% HMul.hMul let11 x5)
  let let244 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let243 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let13 let242)))))))
  let let245 := (binrel% GE.ge let244 let1)
  let let246 := (binrel% LE.le let1 let244)
  let let247 := (binrel% HAdd.hAdd let243 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let242 (binrel% HAdd.hAdd let174 x2)))))))
  let let248 := (binrel% GE.ge x8 let52)
  let let249 := (Not let248)
  let let250 := (binrel% LT.lt x8 let52)
  let let251 := (binrel% HMul.hMul x13 let11)
  let let252 := (binrel% LE.le let148 let35)
  let let253 := (binrel% HMul.hMul x5 let11)
  let let254 := (binrel% HAdd.hAdd let253 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let178 (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let224 x2)))))))
  let let255 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let253 x7) x6) x0) let178) let251) let224) x2)
  let let256 := (binrel% LE.le let12 let167)
  let let257 := (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let61 let67))))))
  let let258 := (binrel% HMul.hMul x5 let12)
  let let259 := (Eq let168 let235)
  let let260 := (binrel% HMul.hMul x6 let10)
  let let261 := (binrel% HMul.hMul x10 let12)
  let let262 := (binrel% HMul.hMul let144 let167)
  let let263 := (binrel% HMul.hMul x4 let12)
  let let264 := (binrel% HMul.hMul x2 let9)
  let let265 := (binrel% HAdd.hAdd let260 (binrel% HAdd.hAdd let264 (binrel% HAdd.hAdd let263 (binrel% HAdd.hAdd let261 (binrel% HAdd.hAdd let258 (binrel% HAdd.hAdd let98 let80))))))
  let let266 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let260 let264) let263) let261) let258) let98) let80)
  let let267 := (binrel% GE.ge let205 let110)
  let let268 := (binrel% HMul.hMul let35 let124)
  let let269 := (binrel% LE.le let9 x11)
  let let270 := (binrel% LE.le let52 x8)
  let let271 := (binrel% GE.ge let233 let110)
  let let272 := (Not let271)
  let let273 := (binrel% LE.le let64 let130)
  let let274 := (Not let273)
  let let275 := (binrel% LE.le let180 let9)
  let let276 := (binrel% LE.le let102 let11)
  let let277 := (Not let276)
  let let278 := (binrel% LE.le let231 let12)
  let let279 := (Not let278)
  let let280 := (binrel% LE.le let195 let11)
  let let281 := (Not let280)
  let let282 := (binrel% LE.le let11 let209)
  let let283 := (Not let282)
  let let284 := (binrel% LE.le let9 let240)
  let let285 := (binrel% LE.le let1 let255)
  let let286 := (binrel% LE.le let12 let266)
  let let287 := (Not let286)
  let let288 := (Not let114)
  let let289 := (Not let92)
  let let290 := (Not let269)
  let let291 := (Not let270)
  let let292 := (And let291 (And let290 (And let289 (And let288 (And let287 (And let285 (And let284 (And let283 (And let281 (And let279 (And let277 (And let275 (And let274 let272)))))))))))))
  let let293 := (And (And (And (And (And (And (And (And (And (And (And (And (And let291 let290) let289) let288) let287) let285) let284) let283) let281) let279) let277) let275) let274) let272)
  let let294 := (Eq let248 let248)
  let let295 := (binrel% HMul.hMul let37 let9)
  let let296 := (Not let249)
  let let297 := (Eq let296 let248)
  let let298 := (binrel% HMul.hMul let144 let11)
  let let299 := (Eq let248 let296)
  let let300 := (binrel% HMul.hMul let35 let9)
  let let301 := (Eq let15 let15)
  let let302 := (binrel% HMul.hMul let2 let9)
  let let303 := (Not let16)
  let let304 := (Eq let303 let15)
  let let305 := (binrel% HMul.hMul let58 let50)
  let let306 := (Eq let15 let303)
  let let307 := (Int.ofNat 5)
  let let308 := (binrel% HMul.hMul let22 let307)
  let let309 := (Eq let70 let70)
  let let310 := (Not let71)
  let let311 := (Eq let310 let70)
  let let312 := (binrel% LE.le x8 let50)
  let let313 := (Not let312)
  let let314 := (binrel% GT.gt x8 let50)
  let let315 := (Eq let314 let313)
  let let316 := (binrel% HMul.hMul let3 let12)
  let let317 := (Eq let70 let310)
  let let318 := (binrel% HMul.hMul let2 let50)
  let let319 := (Eq let26 let26)
  let let320 := (Not let27)
  let let321 := (Eq let320 let26)
  let let322 := (Eq let26 let320)
  let let323 := (Eq let168 let168)
  let let324 := (Not let91)
  let let325 := (binrel% HMul.hMul let7 let1)
  let let326 := (binrel% HMul.hMul let20 let10)
  let let327 := (binrel% HMul.hMul let136 let1)
  let let328 := (binrel% HMul.hMul let32 let1)
  let let329 := (binrel% HMul.hMul let29 let11)
  let let330 := (Neg.neg let6)
  let let331 := (binrel% HMul.hMul let161 let330)
  let let332 := (binrel% HMul.hMul let32 let244)
  let let333 := (binrel% HMul.hMul let2 let25)
  let let334 := (And let249 (And let133 (And let90 (And let105 (And let169 (And let245 (And let187 (And let181 (And let85 (And let16 (And let27 (And let42 (And let71 let220)))))))))))))
  let let335 := (Eq let233 let205)
  let let336 := (Not let187)
  let let337 := (Not let245)
  let let338 := (Or let41 (Or let116 (Or let168 (Or let336 (Or let337 (Or let91 (Or let26 (Or let182 (Or let104 (Or let70 (Or let221 (Or let15 (Or let86 let248)))))))))))))
  let let339 := (Or let75 (Or let226 (Or let235 (Or let336 (Or let337 (Or let91 (Or let320 (Or let182 (Or let106 (Or let310 (Or let221 (Or let303 (Or let86 let296)))))))))))))
  let let340 := (binrel% HAdd.hAdd let318 (binrel% HAdd.hAdd let316 (binrel% HAdd.hAdd let325 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let331 (binrel% HAdd.hAdd let308 (binrel% HAdd.hAdd let305 (binrel% HAdd.hAdd let302 (binrel% HAdd.hAdd let329 (binrel% HAdd.hAdd let328 (binrel% HAdd.hAdd let300 (binrel% HAdd.hAdd let298 (binrel% HAdd.hAdd let327 let295)))))))))))))
  let let341 := (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let333 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let332 (binrel% HAdd.hAdd let268 (binrel% HAdd.hAdd let262 (binrel% HAdd.hAdd let151 let216)))))))))))))
  let let342 := (binrel% LE.le let341 let340)
  let let343 := (binrel% LE.le let216 let295)
  let let344 := (And let38 let113)
  let let345 := (binrel% LE.le let151 let327)
  let let346 := (binrel% LE.le x11 let1)
  let let347 := (And let137 let346)
  let let348 := (binrel% LE.le let262 let298)
  let let349 := (binrel% LE.le let167 let11)
  let let350 := (And let145 let349)
  let let351 := (binrel% LE.le let268 let300)
  let let352 := (And let36 let187)
  let let353 := (binrel% LE.le let332 let328)
  let let354 := (And let33 let245)
  let let355 := (binrel% LE.le let158 let329)
  let let356 := (And let30 let90)
  let let357 := (binrel% LE.le let333 let302)
  let let358 := (binrel% LE.le let25 let9)
  let let359 := (And let24 let358)
  let let360 := (binrel% LE.le let63 let305)
  let let361 := (And let186 let181)
  let let362 := (binrel% LE.le let160 let308)
  let let363 := (binrel% LE.le x0 let307)
  let let364 := (And let23 let363)
  let let365 := (binrel% LE.le let229 let331)
  let let366 := (binrel% LE.le let69 let330)
  let let367 := (And let238 let366)
  let let368 := (binrel% LE.le let56 let326)
  let let369 := (And let21 let220)
  let let370 := (binrel% LE.le let96 let325)
  let let371 := (binrel% LE.le let14 let1)
  let let372 := (And let8 let371)
  let let373 := (binrel% LE.le let89 let316)
  let let374 := (And let4 let85)
  let let375 := (binrel% LE.le let82 let318)
  let let376 := (And let24 let312)
(Eq let4 True) → (Eq let8 True) → (Eq let17 let16) → (Eq let21 True) → (Eq let23 True) → (Eq let24 True) → (Eq let28 let27) → (Eq let30 True) → (Eq let33 True) → (Eq let36 True) → (Eq let38 True) → (Eq let43 let42) → (Eq let56 let49) → (Eq let63 let59) → (Eq let72 let71) → (Eq let74 let73) → (Eq let77 let76) → (Eq let79 let78) → (Eq let80 let67) → (Eq let82 let81) → (Eq let87 let86) → (Eq let89 let88) → (Eq let92 let91) → (Eq let96 let95) → (Eq let97 let85) → (Eq let102 let101) → (Eq let108 let107) → (Eq let99 let53) → (Eq let109 True) → (Eq let112 let111) → (Eq let113 let42) → (Eq let114 let104) → (Eq let115 let54) → (Eq let117 True) → (Eq let119 let118) → (Eq let122 let121) → (Eq let123 let105) → (Eq let125 let124) → (Eq let130 let129) → (Eq let131 let26) → (Eq let132 x8) → (Eq let134 let133) → (Eq let135 x11) → (Eq let137 True) → (Eq let138 x3) → (Eq let140 let139) → (Eq let142 let141) → (Eq let128 let68) → (Eq let143 x13) → (Eq let145 True) → (Eq let147 let146) → (Eq let127 let65) → (Eq let100 let120) → (Eq let98 let61) → let108 → (Eq let164 let148) → (Eq let165 let83) → (Eq let170 let169) → (Eq let172 let171) → (Eq let176 let175) → (Eq let180 let179) → (Eq let183 let181) → (Eq let185 let184) → (Eq let186 True) → (Eq let188 let187) → (Eq let126 let66) → (Eq let190 let189) → (Eq let192 let191) → (Eq let195 let194) → (Eq let196 let84) → (Eq let198 let197) → (Eq let199 let70) → (Eq let177 let39) → (Eq let206 let205) → (Eq let207 True) → (Eq let209 let208) → (Eq let215 let35) → (Eq let216 let150) → (Eq let217 let201) → (Eq let218 let203) → (Eq let219 let182) → (Eq let222 let220) → (Eq let223 let200) → (Eq let224 let174) → (Eq let225 let173) → let227 → (Eq let228 let204) → (Eq let229 let163) → (Eq let231 let230) → (Eq let193 x10) → (Eq let227 let232) → (Eq let233 let233) → (Eq let234 let15) → let236 → (Eq let237 let69) → (Eq let238 True) → (Eq let240 let239) → (Eq let241 let40) → (Eq let246 let245) → (Eq let178 let13) → (Eq let247 let244) → (Eq let250 let249) → (Eq let251 let242) → (Eq let252 False) → (Eq let253 let243) → (Eq let255 let254) → (Eq let256 let168) → (Eq let257 let167) → (Eq let258 let73) → (Eq let236 let259) → (Eq let260 let166) → (Eq let261 let13) → (Eq let262 let154) → (Eq let266 let265) → (Eq let267 let221) → (Eq let263 let39) → (Eq let268 let155) → (Eq let269 let116) → (Eq let270 let248) → (Eq let293 let292) → (Eq let294 True) → (Eq let295 let37) → let297 → (Eq let298 let210) → (Eq let297 let299) → (Eq let300 let35) → (Eq let301 True) → (Eq let302 let2) → let304 → (Eq let305 let211) → (Eq let304 let306) → (Eq let308 let212) → (Eq let309 True) → let311 → let315 → (Eq let316 let2) → (Eq let311 let317) → (Eq let318 let214) → (Eq let319 True) → let321 → (Eq let321 let322) → (Eq let323 True) → (Eq let324 let90) → let77 → (Eq let325 let148) → (Eq let312 let249) → (Eq let326 let47) → (Eq let327 let148) → (Eq let328 let148) → (Eq let329 let93) → (Eq let331 let213) → (Eq let264 x2) → (Eq let332 let157) → (Eq let333 let159) → let293 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 17)
  let let6 := (Int.ofNat 11)
  let let7 := (binrel% HDiv.hDiv let6 let5)
  let let8 := (binrel% GT.gt let7 let1)
  let let9 := (Int.ofNat 1)
  let let10 := (Int.ofNat 2)
  let let11 := (Neg.neg let10)
  let let12 := (Neg.neg let9)
  let let13 := (binrel% HMul.hMul let12 x10)
  let let14 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x4) (binrel% HAdd.hAdd let13 (binrel% HMul.hMul let11 x11))))
  let let15 := (binrel% GE.ge let14 let9)
  let let16 := (Not let15)
  let let17 := (binrel% LT.lt let14 let9)
  let let18 := (Int.ofNat 18)
  let let19 := (binrel% HDiv.hDiv let18 let5)
  let let20 := (Neg.neg let19)
  let let21 := (binrel% LT.lt let20 let1)
  let let22 := (binrel% HDiv.hDiv (Int.ofNat 8) let5)
  let let23 := (binrel% GT.gt let22 let1)
  let let24 := (binrel% GT.gt let2 let1)
  let let25 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x8 (binrel% HMul.hMul let11 x14)))
  let let26 := (binrel% GE.ge let25 let10)
  let let27 := (Not let26)
  let let28 := (binrel% LT.lt let25 let10)
  let let29 := (Neg.neg let7)
  let let30 := (binrel% LT.lt let29 let1)
  let let31 := (binrel% HDiv.hDiv (Int.ofNat 15) let5)
  let let32 := (Neg.neg let31)
  let let33 := (binrel% LT.lt let32 let1)
  let let34 := (binrel% HDiv.hDiv let9 let5)
  let let35 := (Neg.neg let34)
  let let36 := (binrel% LT.lt let35 let1)
  let let37 := (binrel% HDiv.hDiv (Int.ofNat 7) let5)
  let let38 := (binrel% GT.gt let37 let1)
  let let39 := (binrel% HMul.hMul let12 x4)
  let let40 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 let13)))))
  let let41 := (binrel% GE.ge let40 let10)
  let let42 := (Not let41)
  let let43 := (binrel% LT.lt let40 let10)
  let let44 := (Int.ofNat 54)
  let let45 := (binrel% HDiv.hDiv let44 let5)
  let let46 := (Int.ofNat 36)
  let let47 := (Neg.neg (binrel% HDiv.hDiv let46 let5))
  let let48 := (Int.ofNat 72)
  let let49 := (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv let48 let5) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let47 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x11) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x12) (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x13) (binrel% HMul.hMul let45 x14))))))))))))
  let let50 := (Int.ofNat 3)
  let let51 := (Neg.neg let50)
  let let52 := (Int.ofNat 4)
  let let53 := (binrel% HMul.hMul let12 x3)
  let let54 := (binrel% HMul.hMul let12 x2)
  let let55 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let52) x4) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x8) (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x11) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x12) (binrel% HAdd.hAdd x13 (binrel% HMul.hMul let51 x14))))))))))))
  let let56 := (binrel% HMul.hMul let20 let55)
  let let57 := (binrel% HDiv.hDiv (Int.ofNat 16) let5)
  let let58 := (Neg.neg let57)
  let let59 := (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x10) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x12) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x13) (binrel% HMul.hMul let58 x14)))))))
  let let60 := (binrel% HMul.hMul let12 x13)
  let let61 := (binrel% HMul.hMul let12 x8)
  let let62 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x12 (binrel% HAdd.hAdd let60 x14))))))
  let let63 := (binrel% HMul.hMul let58 let62)
  let let64 := (Neg.neg (Int.ofNat 10))
  let let65 := (binrel% HMul.hMul let12 x14)
  let let66 := (binrel% HMul.hMul let12 x12)
  let let67 := (binrel% HMul.hMul let12 x11)
  let let68 := (binrel% HMul.hMul let10 x7)
  let let69 := (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 let65)))
  let let70 := (binrel% GE.ge let69 let64)
  let let71 := (Not let70)
  let let72 := (binrel% LT.lt let69 let64)
  let let73 := (binrel% HMul.hMul let12 x5)
  let let74 := (Neg.neg x5)
  let let75 := (Not let42)
  let let76 := (Eq let41 let75)
  let let77 := (Eq let75 let41)
  let let78 := (binrel% HMul.hMul let10 x3)
  let let79 := (binrel% HMul.hMul x3 let10)
  let let80 := (binrel% HMul.hMul x11 let12)
  let let81 := (Rat.ofInt x8)
  let let82 := (binrel% HMul.hMul let2 x8)
  let let83 := (binrel% HMul.hMul let10 x12)
  let let84 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd let83 x13))))
  let let85 := (binrel% GE.ge let84 let12)
  let let86 := (Not let85)
  let let87 := (binrel% LE.le let84 let11)
  let let88 := (Rat.ofInt (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x12) let60)))))
  let let89 := (binrel% HMul.hMul let3 let84)
  let let90 := (binrel% GE.ge x13 let11)
  let let91 := (Not let90)
  let let92 := (binrel% LE.le x13 let51)
  let let93 := (binrel% HDiv.hDiv (Int.ofNat 22) let5)
  let let94 := (Neg.neg let93)
  let let95 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let29 x10) (binrel% HMul.hMul let94 x11))))
  let let96 := (binrel% HMul.hMul let7 let14)
  let let97 := (Not let86)
  let let98 := (binrel% HMul.hMul x8 let12)
  let let99 := (binrel% HMul.hMul x3 let12)
  let let100 := (binrel% HMul.hMul x14 let10)
  let let101 := (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let99 let98))
  let let102 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let100 let99) let98)
  let let103 := (Int.ofNat 6)
  let let104 := (binrel% GE.ge x0 let103)
  let let105 := (Not let104)
  let let106 := (Not let105)
  let let107 := (Eq let104 let106)
  let let108 := (Eq let106 let104)
  let let109 := (Eq let104 let104)
  let let110 := (Neg.neg let18)
  let let111 := (binrel% HMul.hMul let110 x13)
  let let112 := (binrel% HMul.hMul x13 let110)
  let let113 := (binrel% LE.le let40 let9)
  let let114 := (binrel% LE.le let103 x0)
  let let115 := (binrel% HMul.hMul x2 let12)
  let let116 := (binrel% GE.ge x11 let9)
  let let117 := (Eq let116 let116)
  let let118 := (binrel% HMul.hMul let12 x1)
  let let119 := (binrel% HMul.hMul x1 let12)
  let let120 := (binrel% HMul.hMul let10 x14)
  let let121 := (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let61 let120))
  let let122 := (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let53 let61))
  let let123 := (binrel% LT.lt x0 let103)
  let let124 := (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x8 x10)))
  let let125 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let78)))
  let let126 := (binrel% HMul.hMul x12 let12)
  let let127 := (binrel% HMul.hMul x14 let12)
  let let128 := (binrel% HMul.hMul x7 let10)
  let let129 := (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let80 let126)))
  let let130 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let128 let127) let80) let126)
  let let131 := (binrel% LE.le let121 let11)
  let let132 := (binrel% HMul.hMul x8 let9)
  let let133 := (Not let116)
  let let134 := (binrel% LT.lt x11 let9)
  let let135 := (binrel% HMul.hMul x11 let9)
  let let136 := (binrel% HDiv.hDiv let10 let5)
  let let137 := (binrel% GT.gt let136 let1)
  let let138 := (binrel% HMul.hMul x3 let9)
  let let139 := (binrel% HMul.hMul let18 x3)
  let let140 := (binrel% HMul.hMul x3 let18)
  let let141 := (binrel% HMul.hMul let110 x5)
  let let142 := (binrel% HMul.hMul x5 let110)
  let let143 := (binrel% HMul.hMul x13 let9)
  let let144 := (binrel% HDiv.hDiv (Int.ofNat 13) let5)
  let let145 := (binrel% GT.gt let144 let1)
  let let146 := (binrel% HMul.hMul let18 x10)
  let let147 := (binrel% HMul.hMul x10 let18)
  let let148 := (Rat.ofInt 0)
  let let149 := (Neg.neg let37)
  let let150 := (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x7) (binrel% HMul.hMul let149 x10))))))
  let let151 := (binrel% HMul.hMul let136 x11)
  let let152 := (Neg.neg let144)
  let let153 := (binrel% HDiv.hDiv (Int.ofNat 26) let5)
  let let154 := (binrel% HAdd.hAdd (binrel% HMul.hMul let144 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let153 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x8) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x10) (binrel% HMul.hMul let152 x11)))))))
  let let155 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let136) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x8) (binrel% HMul.hMul let35 x10))))
  let let156 := (binrel% HDiv.hDiv (Int.ofNat 30) let5)
  let let157 := (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let156) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let156 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x10) (binrel% HMul.hMul let156 x13))))))))
  let let158 := (binrel% HMul.hMul let29 x13)
  let let159 := (Rat.ofInt let25)
  let let160 := (binrel% HMul.hMul let22 x0)
  let let161 := (binrel% HDiv.hDiv let52 let5)
  let let162 := (Neg.neg let161)
  let let163 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x11) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x12) (binrel% HMul.hMul let162 x14))))
  let let164 := (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let163 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let151 let150)))))))))))))
  let let165 := (binrel% HMul.hMul x12 let10)
  let let166 := (binrel% HMul.hMul let10 x6)
  let let167 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let13 let67))))))
  let let168 := (binrel% GE.ge let167 let12)
  let let169 := (Not let168)
  let let170 := (binrel% LT.lt let167 let12)
  let let171 := (binrel% HMul.hMul let48 x4)
  let let172 := (binrel% HMul.hMul x4 let48)
  let let173 := (binrel% HMul.hMul let10 x11)
  let let174 := (binrel% HMul.hMul let10 x4)
  let let175 := (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd x10 let173)))
  let let176 := (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let173 let118)))
  let let177 := (Neg.neg x4)
  let let178 := (Neg.neg x10)
  let let179 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let178 (binrel% HAdd.hAdd let177 x1)))))
  let let180 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x7) x0) let178) let177) x1)
  let let181 := (binrel% GE.ge let62 let50)
  let let182 := (Not let181)
  let let183 := (Not let182)
  let let184 := (binrel% HMul.hMul let18 x2)
  let let185 := (binrel% HMul.hMul x2 let18)
  let let186 := (binrel% LT.lt let58 let1)
  let let187 := (binrel% GE.ge let124 let9)
  let let188 := (binrel% LE.le let9 let124)
  let let189 := (binrel% HMul.hMul let44 x14)
  let let190 := (binrel% HMul.hMul x14 let44)
  let let191 := (binrel% HMul.hMul let110 x6)
  let let192 := (binrel% HMul.hMul x6 let110)
  let let193 := (binrel% HMul.hMul x10 let9)
  let let194 := (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let143 let165))))
  let let195 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let138 let193) let135) let143) let165)
  let let196 := (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x13 let83))))
  let let197 := (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd x13 let65))))))
  let let198 := (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x10 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x13 let66))))))
  let let199 := (binrel% LE.le let64 let69)
  let let200 := (binrel% HMul.hMul let44 x12)
  let let201 := (binrel% HMul.hMul let44 x11)
  let let202 := (Neg.neg let46)
  let let203 := (binrel% HMul.hMul let202 x8)
  let let204 := (binrel% HMul.hMul let110 x1)
  let let205 := (binrel% HAdd.hAdd let204 (binrel% HAdd.hAdd let184 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let201 (binrel% HAdd.hAdd let200 (binrel% HAdd.hAdd let111 let189)))))))))))
  let let206 := (binrel% HAdd.hAdd let200 (binrel% HAdd.hAdd let204 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let201 (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let184 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd let191 let139)))))))))))
  let let207 := (Eq let41 let41)
  let let208 := (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let143 let126))))))
  let let209 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let99 let127) let115) let193) let132) let143) let126)
  let let210 := (Neg.neg let153)
  let let211 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 48) let5))
  let let212 := (binrel% HDiv.hDiv (Int.ofNat 40) let5)
  let let213 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 44) let5))
  let let214 := (Rat.ofInt 3)
  let let215 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let213 (binrel% HAdd.hAdd let212 (binrel% HAdd.hAdd let211 (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd let148 let37)))))))))))))
  let let216 := (binrel% HMul.hMul let37 let40)
  let let217 := (binrel% HMul.hMul x11 let44)
  let let218 := (binrel% HMul.hMul x8 let202)
  let let219 := (binrel% LE.le let11 let197)
  let let220 := (binrel% GE.ge let55 let10)
  let let221 := (Not let220)
  let let222 := (Not let221)
  let let223 := (binrel% HMul.hMul x12 let44)
  let let224 := (binrel% HMul.hMul x4 let10)
  let let225 := (binrel% HMul.hMul x11 let10)
  let let226 := (Not let133)
  let let227 := (Eq let226 let116)
  let let228 := (binrel% HMul.hMul x1 let110)
  let let229 := (binrel% HMul.hMul let161 let69)
  let let230 := (binrel% HAdd.hAdd let224 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let225 let119)))
  let let231 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let224 let193) let225) let119)
  let let232 := (Eq let116 let226)
  let let233 := (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let217 (binrel% HAdd.hAdd let218 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let185 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let192 let140)))))))))))
  let let234 := (binrel% LE.le let175 let12)
  let let235 := (Not let169)
  let let236 := (Eq let235 let168)
  let let237 := (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let67 let66)))
  let let238 := (binrel% GT.gt let161 let1)
  let let239 := (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x10 let79)))
  let let240 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let74 x8) x10) let79)
  let let241 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let39 x1)))))
  let let242 := (binrel% HMul.hMul let11 x13)
  let let243 := (binrel% HMul.hMul let11 x5)
  let let244 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let243 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let13 let242)))))))
  let let245 := (binrel% GE.ge let244 let1)
  let let246 := (binrel% LE.le let1 let244)
  let let247 := (binrel% HAdd.hAdd let243 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let242 (binrel% HAdd.hAdd let174 x2)))))))
  let let248 := (binrel% GE.ge x8 let52)
  let let249 := (Not let248)
  let let250 := (binrel% LT.lt x8 let52)
  let let251 := (binrel% HMul.hMul x13 let11)
  let let252 := (binrel% LE.le let148 let35)
  let let253 := (binrel% HMul.hMul x5 let11)
  let let254 := (binrel% HAdd.hAdd let253 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let178 (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let224 x2)))))))
  let let255 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let253 x7) x6) x0) let178) let251) let224) x2)
  let let256 := (binrel% LE.le let12 let167)
  let let257 := (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let61 let67))))))
  let let258 := (binrel% HMul.hMul x5 let12)
  let let259 := (Eq let168 let235)
  let let260 := (binrel% HMul.hMul x6 let10)
  let let261 := (binrel% HMul.hMul x10 let12)
  let let262 := (binrel% HMul.hMul let144 let167)
  let let263 := (binrel% HMul.hMul x4 let12)
  let let264 := (binrel% HMul.hMul x2 let9)
  let let265 := (binrel% HAdd.hAdd let260 (binrel% HAdd.hAdd let264 (binrel% HAdd.hAdd let263 (binrel% HAdd.hAdd let261 (binrel% HAdd.hAdd let258 (binrel% HAdd.hAdd let98 let80))))))
  let let266 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let260 let264) let263) let261) let258) let98) let80)
  let let267 := (binrel% GE.ge let205 let110)
  let let268 := (binrel% HMul.hMul let35 let124)
  let let269 := (binrel% LE.le let9 x11)
  let let270 := (binrel% LE.le let52 x8)
  let let271 := (binrel% GE.ge let233 let110)
  let let272 := (Not let271)
  let let273 := (binrel% LE.le let64 let130)
  let let274 := (Not let273)
  let let275 := (binrel% LE.le let180 let9)
  let let276 := (binrel% LE.le let102 let11)
  let let277 := (Not let276)
  let let278 := (binrel% LE.le let231 let12)
  let let279 := (Not let278)
  let let280 := (binrel% LE.le let195 let11)
  let let281 := (Not let280)
  let let282 := (binrel% LE.le let11 let209)
  let let283 := (Not let282)
  let let284 := (binrel% LE.le let9 let240)
  let let285 := (binrel% LE.le let1 let255)
  let let286 := (binrel% LE.le let12 let266)
  let let287 := (Not let286)
  let let288 := (Not let114)
  let let289 := (Not let92)
  let let290 := (Not let269)
  let let291 := (Not let270)
  let let292 := (And let291 (And let290 (And let289 (And let288 (And let287 (And let285 (And let284 (And let283 (And let281 (And let279 (And let277 (And let275 (And let274 let272)))))))))))))
  let let293 := (And (And (And (And (And (And (And (And (And (And (And (And (And let291 let290) let289) let288) let287) let285) let284) let283) let281) let279) let277) let275) let274) let272)
  let let294 := (Eq let248 let248)
  let let295 := (binrel% HMul.hMul let37 let9)
  let let296 := (Not let249)
  let let297 := (Eq let296 let248)
  let let298 := (binrel% HMul.hMul let144 let11)
  let let299 := (Eq let248 let296)
  let let300 := (binrel% HMul.hMul let35 let9)
  let let301 := (Eq let15 let15)
  let let302 := (binrel% HMul.hMul let2 let9)
  let let303 := (Not let16)
  let let304 := (Eq let303 let15)
  let let305 := (binrel% HMul.hMul let58 let50)
  let let306 := (Eq let15 let303)
  let let307 := (Int.ofNat 5)
  let let308 := (binrel% HMul.hMul let22 let307)
  let let309 := (Eq let70 let70)
  let let310 := (Not let71)
  let let311 := (Eq let310 let70)
  let let312 := (binrel% LE.le x8 let50)
  let let313 := (Not let312)
  let let314 := (binrel% GT.gt x8 let50)
  let let315 := (Eq let314 let313)
  let let316 := (binrel% HMul.hMul let3 let12)
  let let317 := (Eq let70 let310)
  let let318 := (binrel% HMul.hMul let2 let50)
  let let319 := (Eq let26 let26)
  let let320 := (Not let27)
  let let321 := (Eq let320 let26)
  let let322 := (Eq let26 let320)
  let let323 := (Eq let168 let168)
  let let324 := (Not let91)
  let let325 := (binrel% HMul.hMul let7 let1)
  let let326 := (binrel% HMul.hMul let20 let10)
  let let327 := (binrel% HMul.hMul let136 let1)
  let let328 := (binrel% HMul.hMul let32 let1)
  let let329 := (binrel% HMul.hMul let29 let11)
  let let330 := (Neg.neg let6)
  let let331 := (binrel% HMul.hMul let161 let330)
  let let332 := (binrel% HMul.hMul let32 let244)
  let let333 := (binrel% HMul.hMul let2 let25)
  let let334 := (And let249 (And let133 (And let90 (And let105 (And let169 (And let245 (And let187 (And let181 (And let85 (And let16 (And let27 (And let42 (And let71 let220)))))))))))))
  let let335 := (Eq let233 let205)
  let let336 := (Not let187)
  let let337 := (Not let245)
  let let338 := (Or let41 (Or let116 (Or let168 (Or let336 (Or let337 (Or let91 (Or let26 (Or let182 (Or let104 (Or let70 (Or let221 (Or let15 (Or let86 let248)))))))))))))
  let let339 := (Or let75 (Or let226 (Or let235 (Or let336 (Or let337 (Or let91 (Or let320 (Or let182 (Or let106 (Or let310 (Or let221 (Or let303 (Or let86 let296)))))))))))))
  let let340 := (binrel% HAdd.hAdd let318 (binrel% HAdd.hAdd let316 (binrel% HAdd.hAdd let325 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let331 (binrel% HAdd.hAdd let308 (binrel% HAdd.hAdd let305 (binrel% HAdd.hAdd let302 (binrel% HAdd.hAdd let329 (binrel% HAdd.hAdd let328 (binrel% HAdd.hAdd let300 (binrel% HAdd.hAdd let298 (binrel% HAdd.hAdd let327 let295)))))))))))))
  let let341 := (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let333 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let332 (binrel% HAdd.hAdd let268 (binrel% HAdd.hAdd let262 (binrel% HAdd.hAdd let151 let216)))))))))))))
  let let342 := (binrel% LE.le let341 let340)
  let let343 := (binrel% LE.le let216 let295)
  let let344 := (And let38 let113)
  let let345 := (binrel% LE.le let151 let327)
  let let346 := (binrel% LE.le x11 let1)
  let let347 := (And let137 let346)
  let let348 := (binrel% LE.le let262 let298)
  let let349 := (binrel% LE.le let167 let11)
  let let350 := (And let145 let349)
  let let351 := (binrel% LE.le let268 let300)
  let let352 := (And let36 let187)
  let let353 := (binrel% LE.le let332 let328)
  let let354 := (And let33 let245)
  let let355 := (binrel% LE.le let158 let329)
  let let356 := (And let30 let90)
  let let357 := (binrel% LE.le let333 let302)
  let let358 := (binrel% LE.le let25 let9)
  let let359 := (And let24 let358)
  let let360 := (binrel% LE.le let63 let305)
  let let361 := (And let186 let181)
  let let362 := (binrel% LE.le let160 let308)
  let let363 := (binrel% LE.le x0 let307)
  let let364 := (And let23 let363)
  let let365 := (binrel% LE.le let229 let331)
  let let366 := (binrel% LE.le let69 let330)
  let let367 := (And let238 let366)
  let let368 := (binrel% LE.le let56 let326)
  let let369 := (And let21 let220)
  let let370 := (binrel% LE.le let96 let325)
  let let371 := (binrel% LE.le let14 let1)
  let let372 := (And let8 let371)
  let let373 := (binrel% LE.le let89 let316)
  let let374 := (And let4 let85)
  let let375 := (binrel% LE.le let82 let318)
  let let376 := (And let24 let312)
fun lean_r0 : (Eq let4 True) => -- EVALUATE
fun lean_r1 : (Eq let8 True) => -- EVALUATE
fun lean_r2 : (Eq let17 let16) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let21 True) => -- EVALUATE
fun lean_r4 : (Eq let23 True) => -- EVALUATE
fun lean_r5 : (Eq let24 True) => -- EVALUATE
fun lean_r6 : (Eq let28 let27) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let30 True) => -- EVALUATE
fun lean_r8 : (Eq let33 True) => -- EVALUATE
fun lean_r9 : (Eq let36 True) => -- EVALUATE
fun lean_r10 : (Eq let38 True) => -- EVALUATE
fun lean_r11 : (Eq let43 let42) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let56 let49) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let63 let59) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let72 let71) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let74 let73) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let77 let76) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let79 let78) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let80 let67) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let82 let81) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let87 let86) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let89 let88) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let92 let91) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let96 let95) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let97 let85) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq let102 let101) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let108 let107) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let99 let53) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let109 True) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let112 let111) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let113 let42) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let114 let104) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let115 let54) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let117 True) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let119 let118) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let122 let121) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let123 let105) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let125 let124) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let130 let129) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let131 let26) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let132 x8) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let134 let133) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let135 x11) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let137 True) => -- EVALUATE
fun lean_r44 : (Eq let138 x3) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let140 let139) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let142 let141) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let128 let68) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let143 x13) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let145 True) => -- EVALUATE
fun lean_r50 : (Eq let147 let146) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let127 let65) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let100 let120) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let98 let61) => -- THEORY_REWRITE_ARITH
fun lean_r54 : let108 => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq let164 let148) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let165 let83) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let170 let169) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let172 let171) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let176 let175) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let180 let179) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let183 let181) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq let185 let184) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let186 True) => -- EVALUATE
fun lean_r64 : (Eq let188 let187) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let126 let66) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let190 let189) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let192 let191) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let195 let194) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let196 let84) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let198 let197) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let199 let70) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let177 let39) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let206 let205) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let207 True) => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq let209 let208) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let215 let35) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let216 let150) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let217 let201) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let218 let203) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let219 let182) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let222 let220) => -- THEORY_REWRITE_BOOL
fun lean_r82 : (Eq let223 let200) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let224 let174) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let225 let173) => -- THEORY_REWRITE_ARITH
fun lean_r85 : let227 => -- THEORY_REWRITE_BOOL
fun lean_r86 : (Eq let228 let204) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let229 let163) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let231 let230) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let193 x10) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let227 let232) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq let233 let233) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let234 let15) => -- THEORY_REWRITE_ARITH
fun lean_r93 : let236 => -- THEORY_REWRITE_BOOL
fun lean_r94 : (Eq let237 let69) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let238 True) => -- EVALUATE
fun lean_r96 : (Eq let240 let239) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let241 let40) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let246 let245) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let178 let13) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let247 let244) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let250 let249) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let251 let242) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let252 False) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let253 let243) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let255 let254) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let256 let168) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let257 let167) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let258 let73) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let236 let259) => -- THEORY_REWRITE_BOOL
fun lean_r110 : (Eq let260 let166) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let261 let13) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let262 let154) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let266 let265) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let267 let221) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let263 let39) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let268 let155) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let269 let116) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq let270 let248) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let293 let292) => -- THEORY_REWRITE_BOOL
fun lean_r120 : (Eq let294 True) => -- THEORY_REWRITE_BOOL
fun lean_r121 : (Eq let295 let37) => -- THEORY_REWRITE_ARITH
fun lean_r122 : let297 => -- THEORY_REWRITE_BOOL
fun lean_r123 : (Eq let298 let210) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let297 let299) => -- THEORY_REWRITE_BOOL
fun lean_r125 : (Eq let300 let35) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let301 True) => -- THEORY_REWRITE_BOOL
fun lean_r127 : (Eq let302 let2) => -- THEORY_REWRITE_ARITH
fun lean_r128 : let304 => -- THEORY_REWRITE_BOOL
fun lean_r129 : (Eq let305 let211) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq let304 let306) => -- THEORY_REWRITE_BOOL
fun lean_r131 : (Eq let308 let212) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let309 True) => -- THEORY_REWRITE_BOOL
fun lean_r133 : let311 => -- THEORY_REWRITE_BOOL
fun lean_r134 : let315 => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let316 let2) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let311 let317) => -- THEORY_REWRITE_BOOL
fun lean_r137 : (Eq let318 let214) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let319 True) => -- THEORY_REWRITE_BOOL
fun lean_r139 : let321 => -- THEORY_REWRITE_BOOL
fun lean_r140 : (Eq let321 let322) => -- THEORY_REWRITE_BOOL
fun lean_r141 : (Eq let323 True) => -- THEORY_REWRITE_BOOL
fun lean_r142 : (Eq let324 let90) => -- THEORY_REWRITE_BOOL
fun lean_r143 : let77 => -- THEORY_REWRITE_BOOL
fun lean_r144 : (Eq let325 let148) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq let312 let249) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq let326 let47) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq let327 let148) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq let328 let148) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let329 let93) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let331 let213) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let264 x2) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq let332 let157) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq let333 let159) => -- THEORY_REWRITE_ARITH
fun lean_a154 : let293 => by
have lean_s0 : (Or let75 (Or let226 (Or let235 (Or let336 (Or let337 (Or let91 (Or let320 (Or let182 (Or let106 (Or let310 (Or let221 (Or let303 (Or let86 (Or let296 False)))))))))))))) :=
  (scope (fun lean_a155 : let42 =>
    (scope (fun lean_a156 : let133 =>
      (scope (fun lean_a157 : let169 =>
        (scope (fun lean_a158 : let187 =>
          (scope (fun lean_a159 : let245 =>
            (scope (fun lean_a160 : let90 =>
              (scope (fun lean_a161 : let27 =>
                (scope (fun lean_a162 : let181 =>
                  (scope (fun lean_a163 : let105 =>
                    (scope (fun lean_a164 : let71 =>
                      (scope (fun lean_a165 : let220 =>
                        (scope (fun lean_a166 : let16 =>
                          (scope (fun lean_a167 : let85 =>
                            (scope (fun lean_a168 : let249 =>
                              have lean_s0 : (Eq let249 let250) := by timed Eq.symm lean_r101
                              have lean_s1 : let250 := by timed eqResolve lean_a168 lean_s0
                              have lean_s2 : let312 := by intTightUb lean_s1
                              have lean_s3 : (Or let313 False) :=
                                (scope (fun lean_a169 : let312 =>
                                  have lean_s3 : let24 := by timed trueElim lean_r5
                                  have lean_s4 : let376 := by timed And.intro lean_s3 lean_a169
                                  have lean_s5 : (Implies let376 let375) := by arithMulPos [x8, let50, let2], 1
                                  have lean_s6 : let375 := by timed modusPonens lean_s4 lean_s5
                                  have lean_s7 : let4 := by timed trueElim lean_r0
                                  have lean_s8 : let374 := by timed And.intro lean_s7 lean_a167
                                  have lean_s9 : (Implies let374 let373) := by arithMulNeg [let84, let12, let3], 3
                                  have lean_s10 : let373 := by timed modusPonens lean_s8 lean_s9
                                  have lean_s11 : let8 := by timed trueElim lean_r1
                                  have lean_s12 : (Eq let16 let17) := by timed Eq.symm lean_r2
                                  have lean_s13 : let17 := by timed eqResolve lean_a166 lean_s12
                                  have lean_s14 : let371 := by intTightUb lean_s13
                                  have lean_s15 : let372 := by timed And.intro lean_s11 lean_s14
                                  have lean_s16 : (Implies let372 let370) := by arithMulPos [let14, let1, let7], 1
                                  have lean_s17 : let370 := by timed modusPonens lean_s15 lean_s16
                                  have lean_s18 : let21 := by timed trueElim lean_r3
                                  have lean_s19 : let369 := by timed And.intro lean_s18 lean_a165
                                  have lean_s20 : (Implies let369 let368) := by arithMulNeg [let55, let10, let20], 3
                                  have lean_s21 : let368 := by timed modusPonens lean_s19 lean_s20
                                  have lean_s22 : let238 := by timed trueElim lean_r95
                                  have lean_s23 : (Eq let71 let72) := by timed Eq.symm lean_r14
                                  have lean_s24 : let72 := by timed eqResolve lean_a164 lean_s23
                                  have lean_s25 : let366 := by intTightUb lean_s24
                                  have lean_s26 : let367 := by timed And.intro lean_s22 lean_s25
                                  have lean_s27 : (Implies let367 let365) := by arithMulPos [let69, let330, let161], 1
                                  have lean_s28 : let365 := by timed modusPonens lean_s26 lean_s27
                                  have lean_s29 : let23 := by timed trueElim lean_r4
                                  have lean_s30 : (Eq let105 let123) := by timed Eq.symm lean_r36
                                  have lean_s31 : let123 := by timed eqResolve lean_a163 lean_s30
                                  have lean_s32 : let363 := by intTightUb lean_s31
                                  have lean_s33 : let364 := by timed And.intro lean_s29 lean_s32
                                  have lean_s34 : (Implies let364 let362) := by arithMulPos [x0, let307, let22], 1
                                  have lean_s35 : let362 := by timed modusPonens lean_s33 lean_s34
                                  have lean_s36 : let186 := by timed trueElim lean_r63
                                  have lean_s37 : let361 := by timed And.intro lean_s36 lean_a162
                                  have lean_s38 : (Implies let361 let360) := by arithMulNeg [let62, let50, let58], 3
                                  have lean_s39 : let360 := by timed modusPonens lean_s37 lean_s38
                                  have lean_s40 : (Eq let27 let28) := by timed Eq.symm lean_r6
                                  have lean_s41 : let28 := by timed eqResolve lean_a161 lean_s40
                                  have lean_s42 : let358 := by intTightUb lean_s41
                                  have lean_s43 : let359 := by timed And.intro lean_s3 lean_s42
                                  have lean_s44 : (Implies let359 let357) := by arithMulPos [let25, let9, let2], 1
                                  have lean_s45 : let357 := by timed modusPonens lean_s43 lean_s44
                                  have lean_s46 : let30 := by timed trueElim lean_r7
                                  have lean_s47 : let356 := by timed And.intro lean_s46 lean_a160
                                  have lean_s48 : (Implies let356 let355) := by arithMulNeg [x13, let11, let29], 3
                                  have lean_s49 : let355 := by timed modusPonens lean_s47 lean_s48
                                  have lean_s50 : let33 := by timed trueElim lean_r8
                                  have lean_s51 : let354 := by timed And.intro lean_s50 lean_a159
                                  have lean_s52 : (Implies let354 let353) := by arithMulNeg [let244, let1, let32], 3
                                  have lean_s53 : let353 := by timed modusPonens lean_s51 lean_s52
                                  have lean_s54 : let36 := by timed trueElim lean_r9
                                  have lean_s55 : let352 := by timed And.intro lean_s54 lean_a158
                                  have lean_s56 : (Implies let352 let351) := by arithMulNeg [let124, let9, let35], 3
                                  have lean_s57 : let351 := by timed modusPonens lean_s55 lean_s56
                                  have lean_s58 : let145 := by timed trueElim lean_r49
                                  have lean_s59 : (Eq let169 let170) := by timed Eq.symm lean_r57
                                  have lean_s60 : let170 := by timed eqResolve lean_a157 lean_s59
                                  have lean_s61 : let349 := by intTightUb lean_s60
                                  have lean_s62 : let350 := by timed And.intro lean_s58 lean_s61
                                  have lean_s63 : (Implies let350 let348) := by arithMulPos [let167, let11, let144], 1
                                  have lean_s64 : let348 := by timed modusPonens lean_s62 lean_s63
                                  have lean_s65 : let137 := by timed trueElim lean_r43
                                  have lean_s66 : (Eq let133 let134) := by timed Eq.symm lean_r41
                                  have lean_s67 : let134 := by timed eqResolve lean_a156 lean_s66
                                  have lean_s68 : let346 := by intTightUb lean_s67
                                  have lean_s69 : let347 := by timed And.intro lean_s65 lean_s68
                                  have lean_s70 : (Implies let347 let345) := by arithMulPos [x11, let1, let136], 1
                                  have lean_s71 : let345 := by timed modusPonens lean_s69 lean_s70
                                  have lean_s72 : let38 := by timed trueElim lean_r10
                                  have lean_s73 : (Eq let42 let43) := by timed Eq.symm lean_r11
                                  have lean_s74 : let43 := by timed eqResolve lean_a155 lean_s73
                                  have lean_s75 : let113 := by intTightUb lean_s74
                                  have lean_s76 : let344 := by timed And.intro lean_s72 lean_s75
                                  have lean_s77 : (Implies let344 let343) := by arithMulPos [let40, let9, let37], 1
                                  have lean_s78 : let343 := by timed modusPonens lean_s76 lean_s77
                                  have lean_s79 : let342 := by sumBounds [lean_s6, lean_s10, lean_s17, lean_s21, lean_s28, lean_s35, lean_s39, lean_s45, lean_s49, lean_s53, lean_s57, lean_s64, lean_s71, lean_s78]
                                  have lean_s80 : (Eq let160 let160) := by timed rfl
                                  have lean_s81 : (Eq let158 let158) := by timed rfl
                                  have lean_s82 : (Eq let151 let151) := by timed rfl
                                  let lean_s83 := by timed congrHAdd lean_s82 lean_r77
                                  let lean_s84 := by timed congrHAdd lean_r112 lean_s83
                                  let lean_s85 := by timed congrHAdd lean_r116 lean_s84
                                  let lean_s86 := by timed congrHAdd lean_r152 lean_s85
                                  let lean_s87 := by timed congrHAdd lean_s81 lean_s86
                                  let lean_s88 := by timed congrHAdd lean_r153 lean_s87
                                  let lean_s89 := by timed congrHAdd lean_r13 lean_s88
                                  let lean_s90 := by timed congrHAdd lean_s80 lean_s89
                                  let lean_s91 := by timed congrHAdd lean_r87 lean_s90
                                  let lean_s92 := by timed congrHAdd lean_r12 lean_s91
                                  let lean_s93 := by timed congrHAdd lean_r23 lean_s92
                                  let lean_s94 := by timed congrHAdd lean_r21 lean_s93
                                  have lean_s95 : (Eq let341 let164) := by timed congrHAdd lean_r19 lean_s94
                                  have lean_s96 : (Eq let341 let148) := by timed Eq.trans lean_s95 lean_r55
                                  let lean_s97 := by timed flipCongrArg lean_s96 [LE.le]
                                  let lean_s98 := by timed congrHAdd lean_r147 lean_r121
                                  let lean_s99 := by timed congrHAdd lean_r123 lean_s98
                                  let lean_s100 := by timed congrHAdd lean_r125 lean_s99
                                  let lean_s101 := by timed congrHAdd lean_r148 lean_s100
                                  let lean_s102 := by timed congrHAdd lean_r149 lean_s101
                                  let lean_s103 := by timed congrHAdd lean_r127 lean_s102
                                  let lean_s104 := by timed congrHAdd lean_r129 lean_s103
                                  let lean_s105 := by timed congrHAdd lean_r131 lean_s104
                                  let lean_s106 := by timed congrHAdd lean_r150 lean_s105
                                  let lean_s107 := by timed congrHAdd lean_r146 lean_s106
                                  let lean_s108 := by timed congrHAdd lean_r144 lean_s107
                                  let lean_s109 := by timed congrHAdd lean_r135 lean_s108
                                  have lean_s110 : (Eq let340 let215) := by timed congrHAdd lean_r137 lean_s109
                                  have lean_s111 : (Eq let340 let35) := by timed Eq.trans lean_s110 lean_r76
                                  have lean_s112 : (Eq let342 let252) := by timed congr lean_s97 lean_s111
                                  have lean_s113 : (Eq let342 False) := by timed Eq.trans lean_s112 lean_r103
                                  show False from by timed eqResolve lean_s79 lean_s113
                                ))
                              have lean_s4 : let313 := by liftOrNToNeg lean_s3
                              have lean_s5 : (Eq let313 let296) := by timed flipCongrArg lean_r145 [Not]
                              have lean_s6 : (Eq let313 let248) := by timed Eq.trans lean_s5 lean_r122
                              have lean_s7 : (Eq let314 let248) := by timed Eq.trans lean_r134 lean_s6
                              have lean_s8 : (Eq let248 let314) := by timed Eq.symm lean_s7
                              have lean_s9 : (Eq let313 let314) := by timed Eq.trans lean_s6 lean_s8
                              have lean_s10 : let314 := by timed eqResolve lean_s4 lean_s9
                              have lean_s11 : (Eq let248 let313) := by timed Eq.symm lean_s6
                              have lean_s12 : let315 := by timed Eq.trans lean_s7 lean_s11
                              have lean_s13 : let313 := by timed eqResolve lean_s10 lean_s12
                              show False from by timed contradiction lean_s2 lean_s13
  ))))))))))))))))))))))))))))
have lean_s1 : (Not (And let42 (And let133 (And let169 (And let187 (And let245 (And let90 (And let27 (And let181 (And let105 (And let71 (And let220 (And let16 (And let85 let249)))))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let339 := by timed flipNotAnd lean_s1 [let42, let133, let169, let187, let245, let90, let27, let181, let105, let71, let220, let16, let85, let249]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let207 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let76 let207) := by timed congr lean_s5 lean_r143
have lean_s7 : (Eq let76 True) := by timed Eq.trans lean_s6 lean_r74
have lean_s8 : (Eq let77 True) := by timed Eq.trans lean_r16 lean_s7
have lean_s9 : let77 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let117 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let232 let117) := by timed congr lean_s12 lean_r85
have lean_s14 : (Eq let232 True) := by timed Eq.trans lean_s13 lean_r33
have lean_s15 : (Eq let227 True) := by timed Eq.trans lean_r90 lean_s14
have lean_s16 : let227 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : let323 := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq let259 let323) := by timed congr lean_s19 lean_r93
have lean_s21 : (Eq let259 True) := by timed Eq.trans lean_s20 lean_r141
have lean_s22 : (Eq let236 True) := by timed Eq.trans lean_r109 lean_s21
have lean_s23 : let236 := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : (Eq let336 let336) := by timed rfl
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : (Eq let337 let337) := by timed rfl
let lean_s28 := by timed congr lean_s3 lean_s27
have lean_s29 : (Eq let91 let91) := by timed rfl
let lean_s30 := by timed congr lean_s3 lean_s29
have lean_s31 : let319 := by timed rfl
let lean_s32 := by timed flipCongrArg lean_s31 [Eq]
have lean_s33 : (Eq let322 let319) := by timed congr lean_s32 lean_r139
have lean_s34 : (Eq let322 True) := by timed Eq.trans lean_s33 lean_r138
have lean_s35 : (Eq let321 True) := by timed Eq.trans lean_r140 lean_s34
have lean_s36 : let321 := by timed trueElim lean_s35
let lean_s37 := by timed congr lean_s3 lean_s36
have lean_s38 : (Eq let182 let182) := by timed rfl
let lean_s39 := by timed congr lean_s3 lean_s38
have lean_s40 : let109 := by timed rfl
let lean_s41 := by timed flipCongrArg lean_s40 [Eq]
have lean_s42 : (Eq let107 let109) := by timed congr lean_s41 lean_r54
have lean_s43 : (Eq let107 True) := by timed Eq.trans lean_s42 lean_r28
have lean_s44 : (Eq let108 True) := by timed Eq.trans lean_r26 lean_s43
have lean_s45 : let108 := by timed trueElim lean_s44
let lean_s46 := by timed congr lean_s3 lean_s45
have lean_s47 : let309 := by timed rfl
let lean_s48 := by timed flipCongrArg lean_s47 [Eq]
have lean_s49 : (Eq let317 let309) := by timed congr lean_s48 lean_r133
have lean_s50 : (Eq let317 True) := by timed Eq.trans lean_s49 lean_r132
have lean_s51 : (Eq let311 True) := by timed Eq.trans lean_r136 lean_s50
have lean_s52 : let311 := by timed trueElim lean_s51
let lean_s53 := by timed congr lean_s3 lean_s52
have lean_s54 : (Eq let221 let221) := by timed rfl
let lean_s55 := by timed congr lean_s3 lean_s54
have lean_s56 : let301 := by timed rfl
let lean_s57 := by timed flipCongrArg lean_s56 [Eq]
have lean_s58 : (Eq let306 let301) := by timed congr lean_s57 lean_r128
have lean_s59 : (Eq let306 True) := by timed Eq.trans lean_s58 lean_r126
have lean_s60 : (Eq let304 True) := by timed Eq.trans lean_r130 lean_s59
have lean_s61 : let304 := by timed trueElim lean_s60
let lean_s62 := by timed congr lean_s3 lean_s61
have lean_s63 : (Eq let86 let86) := by timed rfl
let lean_s64 := by timed congr lean_s3 lean_s63
have lean_s65 : let294 := by timed rfl
let lean_s66 := by timed flipCongrArg lean_s65 [Eq]
have lean_s67 : (Eq let299 let294) := by timed congr lean_s66 lean_r122
have lean_s68 : (Eq let299 True) := by timed Eq.trans lean_s67 lean_r120
have lean_s69 : (Eq let297 True) := by timed Eq.trans lean_r124 lean_s68
have lean_s70 : let297 := by timed trueElim lean_s69
let lean_s71 := by timed congr lean_s64 lean_s70
let lean_s72 := by timed congr lean_s62 lean_s71
let lean_s73 := by timed congr lean_s55 lean_s72
let lean_s74 := by timed congr lean_s53 lean_s73
let lean_s75 := by timed congr lean_s46 lean_s74
let lean_s76 := by timed congr lean_s39 lean_s75
let lean_s77 := by timed congr lean_s37 lean_s76
let lean_s78 := by timed congr lean_s30 lean_s77
let lean_s79 := by timed congr lean_s28 lean_s78
let lean_s80 := by timed congr lean_s26 lean_s79
let lean_s81 := by timed congr lean_s24 lean_s80
let lean_s82 := by timed congr lean_s17 lean_s81
have lean_s83 : (Eq let339 let338) := by timed congr lean_s10 lean_s82
have lean_s84 : let338 := by timed eqResolve lean_s2 lean_s83
have lean_s85 : (Or let248 (Or let116 (Or let91 (Or let104 (Or let168 (Or let182 (Or let86 (Or let15 (Or let26 (Or let41 (Or let70 (Or let221 (Or let337 let336))))))))))))) := by permutateOr lean_s84, [13, 1, 5, 8, 2, 7, 12, 11, 6, 0, 9, 10, 4, 3], (- 1)
have lean_s86 : (Eq And And) := by timed rfl
have lean_s87 : (Eq let291 let249) := by timed flipCongrArg lean_r118 [Not]
let lean_s88 := by timed congr lean_s86 lean_s87
have lean_s89 : (Eq let290 let133) := by timed flipCongrArg lean_r117 [Not]
let lean_s90 := by timed congr lean_s86 lean_s89
have lean_s91 : (Eq let289 let324) := by timed flipCongrArg lean_r22 [Not]
have lean_s92 : (Eq let289 let90) := by timed Eq.trans lean_s91 lean_r142
let lean_s93 := by timed congr lean_s86 lean_s92
have lean_s94 : (Eq let288 let105) := by timed flipCongrArg lean_r31 [Not]
let lean_s95 := by timed congr lean_s86 lean_s94
have lean_s96 : (Eq let12 let12) := by timed rfl
let lean_s97 := by timed flipCongrArg lean_s96 [LE.le]
let lean_s98 := by timed congrHAdd lean_r53 lean_r18
let lean_s99 := by timed congrHAdd lean_r108 lean_s98
let lean_s100 := by timed congrHAdd lean_r111 lean_s99
let lean_s101 := by timed congrHAdd lean_r115 lean_s100
let lean_s102 := by timed congrHAdd lean_r151 lean_s101
have lean_s103 : (Eq let265 let257) := by timed congrHAdd lean_r110 lean_s102
have lean_s104 : (Eq let265 let167) := by timed Eq.trans lean_s103 lean_r107
have lean_s105 : (Eq let266 let167) := by timed Eq.trans lean_r113 lean_s104
have lean_s106 : (Eq let286 let256) := by timed congr lean_s97 lean_s105
have lean_s107 : (Eq let286 let168) := by timed Eq.trans lean_s106 lean_r106
have lean_s108 : (Eq let287 let169) := by timed flipCongrArg lean_s107 [Not]
let lean_s109 := by timed congr lean_s86 lean_s108
have lean_s110 : (Eq let1 let1) := by timed rfl
let lean_s111 := by timed flipCongrArg lean_s110 [LE.le]
have lean_s112 : (Eq x7 x7) := by timed rfl
have lean_s113 : (Eq x6 x6) := by timed rfl
have lean_s114 : (Eq x0 x0) := by timed rfl
have lean_s115 : (Eq x2 x2) := by timed rfl
let lean_s116 := by timed congrHAdd lean_r83 lean_s115
let lean_s117 := by timed congrHAdd lean_r102 lean_s116
let lean_s118 := by timed congrHAdd lean_r99 lean_s117
let lean_s119 := by timed congrHAdd lean_s114 lean_s118
let lean_s120 := by timed congrHAdd lean_s113 lean_s119
let lean_s121 := by timed congrHAdd lean_s112 lean_s120
have lean_s122 : (Eq let254 let247) := by timed congrHAdd lean_r104 lean_s121
have lean_s123 : (Eq let254 let244) := by timed Eq.trans lean_s122 lean_r100
have lean_s124 : (Eq let255 let244) := by timed Eq.trans lean_r105 lean_s123
have lean_s125 : (Eq let285 let246) := by timed congr lean_s111 lean_s124
have lean_s126 : (Eq let285 let245) := by timed Eq.trans lean_s125 lean_r98
let lean_s127 := by timed congr lean_s86 lean_s126
have lean_s128 : (Eq let9 let9) := by timed rfl
let lean_s129 := by timed flipCongrArg lean_s128 [LE.le]
have lean_s130 : (Eq x8 x8) := by timed rfl
have lean_s131 : (Eq x10 x10) := by timed rfl
let lean_s132 := by timed congrHAdd lean_s131 lean_r17
let lean_s133 := by timed congrHAdd lean_s130 lean_s132
have lean_s134 : (Eq let239 let125) := by timed congrHAdd lean_r15 lean_s133
have lean_s135 : (Eq let239 let124) := by timed Eq.trans lean_s134 lean_r37
have lean_s136 : (Eq let240 let124) := by timed Eq.trans lean_r96 lean_s135
have lean_s137 : (Eq let284 let188) := by timed congr lean_s129 lean_s136
have lean_s138 : (Eq let284 let187) := by timed Eq.trans lean_s137 lean_r64
let lean_s139 := by timed congr lean_s86 lean_s138
have lean_s140 : (Eq let11 let11) := by timed rfl
let lean_s141 := by timed flipCongrArg lean_s140 [LE.le]
let lean_s142 := by timed congrHAdd lean_r48 lean_r65
let lean_s143 := by timed congrHAdd lean_r40 lean_s142
let lean_s144 := by timed congrHAdd lean_r89 lean_s143
let lean_s145 := by timed congrHAdd lean_r32 lean_s144
let lean_s146 := by timed congrHAdd lean_r51 lean_s145
have lean_s147 : (Eq let208 let198) := by timed congrHAdd lean_r27 lean_s146
have lean_s148 : (Eq let208 let197) := by timed Eq.trans lean_s147 lean_r70
have lean_s149 : (Eq let209 let197) := by timed Eq.trans lean_r75 lean_s148
have lean_s150 : (Eq let282 let219) := by timed congr lean_s141 lean_s149
have lean_s151 : (Eq let282 let182) := by timed Eq.trans lean_s150 lean_r80
have lean_s152 : (Eq let283 let183) := by timed flipCongrArg lean_s151 [Not]
have lean_s153 : (Eq let283 let181) := by timed Eq.trans lean_s152 lean_r61
let lean_s154 := by timed congr lean_s86 lean_s153
let lean_s155 := by timed congrHAdd lean_r48 lean_r56
let lean_s156 := by timed congrHAdd lean_r42 lean_s155
let lean_s157 := by timed congrHAdd lean_r89 lean_s156
have lean_s158 : (Eq let194 let196) := by timed congrHAdd lean_r44 lean_s157
have lean_s159 : (Eq let194 let84) := by timed Eq.trans lean_s158 lean_r69
have lean_s160 : (Eq let195 let84) := by timed Eq.trans lean_r68 lean_s159
let lean_s161 := by timed flipCongrArg lean_s160 [LE.le]
have lean_s162 : (Eq let280 let87) := by timed congr lean_s161 lean_s140
have lean_s163 : (Eq let280 let86) := by timed Eq.trans lean_s162 lean_r20
have lean_s164 : (Eq let281 let97) := by timed flipCongrArg lean_s163 [Not]
have lean_s165 : (Eq let281 let85) := by timed Eq.trans lean_s164 lean_r24
let lean_s166 := by timed congr lean_s86 lean_s165
let lean_s167 := by timed congrHAdd lean_r84 lean_r34
let lean_s168 := by timed congrHAdd lean_r89 lean_s167
have lean_s169 : (Eq let230 let176) := by timed congrHAdd lean_r83 lean_s168
have lean_s170 : (Eq let230 let175) := by timed Eq.trans lean_s169 lean_r59
have lean_s171 : (Eq let231 let175) := by timed Eq.trans lean_r88 lean_s170
let lean_s172 := by timed flipCongrArg lean_s171 [LE.le]
have lean_s173 : (Eq let278 let234) := by timed congr lean_s172 lean_s96
have lean_s174 : (Eq let278 let15) := by timed Eq.trans lean_s173 lean_r92
have lean_s175 : (Eq let279 let16) := by timed flipCongrArg lean_s174 [Not]
let lean_s176 := by timed congr lean_s86 lean_s175
let lean_s177 := by timed congrHAdd lean_r27 lean_r53
have lean_s178 : (Eq let101 let122) := by timed congrHAdd lean_r52 lean_s177
have lean_s179 : (Eq let101 let121) := by timed Eq.trans lean_s178 lean_r35
have lean_s180 : (Eq let102 let121) := by timed Eq.trans lean_r25 lean_s179
let lean_s181 := by timed flipCongrArg lean_s180 [LE.le]
have lean_s182 : (Eq let276 let131) := by timed congr lean_s181 lean_s140
have lean_s183 : (Eq let276 let26) := by timed Eq.trans lean_s182 lean_r39
have lean_s184 : (Eq let277 let27) := by timed flipCongrArg lean_s183 [Not]
let lean_s185 := by timed congr lean_s86 lean_s184
have lean_s186 : (Eq x1 x1) := by timed rfl
let lean_s187 := by timed congrHAdd lean_r72 lean_s186
let lean_s188 := by timed congrHAdd lean_r99 lean_s187
let lean_s189 := by timed congrHAdd lean_s114 lean_s188
let lean_s190 := by timed congrHAdd lean_s112 lean_s189
have lean_s191 : (Eq let179 let241) := by timed congrHAdd lean_s113 lean_s190
have lean_s192 : (Eq let179 let40) := by timed Eq.trans lean_s191 lean_r97
have lean_s193 : (Eq let180 let40) := by timed Eq.trans lean_r60 lean_s192
let lean_s194 := by timed flipCongrArg lean_s193 [LE.le]
have lean_s195 : (Eq let275 let113) := by timed congr lean_s194 lean_s128
have lean_s196 : (Eq let275 let42) := by timed Eq.trans lean_s195 lean_r30
let lean_s197 := by timed congr lean_s86 lean_s196
have lean_s198 : (Eq let64 let64) := by timed rfl
let lean_s199 := by timed flipCongrArg lean_s198 [LE.le]
let lean_s200 := by timed congrHAdd lean_r18 lean_r65
let lean_s201 := by timed congrHAdd lean_r51 lean_s200
have lean_s202 : (Eq let129 let237) := by timed congrHAdd lean_r47 lean_s201
have lean_s203 : (Eq let129 let69) := by timed Eq.trans lean_s202 lean_r94
have lean_s204 : (Eq let130 let69) := by timed Eq.trans lean_r38 lean_s203
have lean_s205 : (Eq let273 let199) := by timed congr lean_s199 lean_s204
have lean_s206 : (Eq let273 let70) := by timed Eq.trans lean_s205 lean_r71
have lean_s207 : (Eq let274 let71) := by timed flipCongrArg lean_s206 [Not]
let lean_s208 := by timed congr lean_s86 lean_s207
let lean_s209 := by timed congrHAdd lean_r67 lean_r45
let lean_s210 := by timed congrHAdd lean_r66 lean_s209
let lean_s211 := by timed congrHAdd lean_r62 lean_s210
let lean_s212 := by timed congrHAdd lean_r58 lean_s211
let lean_s213 := by timed congrHAdd lean_r50 lean_s212
let lean_s214 := by timed congrHAdd lean_r46 lean_s213
let lean_s215 := by timed congrHAdd lean_r79 lean_s214
let lean_s216 := by timed congrHAdd lean_r78 lean_s215
let lean_s217 := by timed congrHAdd lean_r29 lean_s216
let lean_s218 := by timed congrHAdd lean_r86 lean_s217
have lean_s219 : (Eq let233 let206) := by timed congrHAdd lean_r82 lean_s218
have lean_s220 : let335 := by timed Eq.trans lean_s219 lean_r73
have lean_s221 : let335 := by timed Eq.trans lean_r91 lean_s220
let lean_s222 := by timed flipCongrArg lean_s221 [GE.ge]
have lean_s223 : (Eq let110 let110) := by timed rfl
have lean_s224 : (Eq let271 let267) := by timed congr lean_s222 lean_s223
have lean_s225 : (Eq let271 let221) := by timed Eq.trans lean_s224 lean_r114
have lean_s226 : (Eq let272 let222) := by timed flipCongrArg lean_s225 [Not]
have lean_s227 : (Eq let272 let220) := by timed Eq.trans lean_s226 lean_r81
let lean_s228 := by timed congr lean_s208 lean_s227
let lean_s229 := by timed congr lean_s197 lean_s228
let lean_s230 := by timed congr lean_s185 lean_s229
let lean_s231 := by timed congr lean_s176 lean_s230
let lean_s232 := by timed congr lean_s166 lean_s231
let lean_s233 := by timed congr lean_s154 lean_s232
let lean_s234 := by timed congr lean_s139 lean_s233
let lean_s235 := by timed congr lean_s127 lean_s234
let lean_s236 := by timed congr lean_s109 lean_s235
let lean_s237 := by timed congr lean_s95 lean_s236
let lean_s238 := by timed congr lean_s93 lean_s237
let lean_s239 := by timed congr lean_s90 lean_s238
have lean_s240 : (Eq let292 let334) := by timed congr lean_s88 lean_s239
have lean_s241 : (Eq let293 let334) := by timed Eq.trans lean_r119 lean_s240
have lean_s242 : let334 := by timed eqResolve lean_a154 lean_s241
have lean_s243 : let220 := by andElim lean_s242, 13
let lean_s244 := by R2 lean_s85, lean_s243, let220, [(- 1), 0]
have lean_s245 : let71 := by andElim lean_s242, 12
let lean_s246 := by R1 lean_s244, lean_s245, let70, [(- 1), 0]
have lean_s247 : let42 := by andElim lean_s242, 11
let lean_s248 := by R1 lean_s246, lean_s247, let41, [(- 1), 0]
have lean_s249 : let27 := by andElim lean_s242, 10
let lean_s250 := by R1 lean_s248, lean_s249, let26, [(- 1), 0]
have lean_s251 : let16 := by andElim lean_s242, 9
let lean_s252 := by R1 lean_s250, lean_s251, let15, [(- 1), 0]
have lean_s253 : let85 := by andElim lean_s242, 8
let lean_s254 := by R2 lean_s252, lean_s253, let85, [(- 1), 0]
have lean_s255 : let181 := by andElim lean_s242, 7
let lean_s256 := by R2 lean_s254, lean_s255, let181, [(- 1), 0]
have lean_s257 : let187 := by andElim lean_s242, 6
let lean_s258 := by R2 lean_s256, lean_s257, let187, [(- 1), 0]
have lean_s259 : let245 := by andElim lean_s242, 5
let lean_s260 := by R2 lean_s258, lean_s259, let245, [(- 1), 0]
have lean_s261 : let169 := by andElim lean_s242, 4
let lean_s262 := by R1 lean_s260, lean_s261, let168, [(- 1), 0]
have lean_s263 : let105 := by andElim lean_s242, 3
let lean_s264 := by R1 lean_s262, lean_s263, let104, [(- 1), 0]
have lean_s265 : let90 := by andElim lean_s242, 2
let lean_s266 := by R2 lean_s264, lean_s265, let90, [(- 1), 0]
have lean_s267 : let133 := by andElim lean_s242, 1
let lean_s268 := by R1 lean_s266, lean_s267, let116, [(- 1), 0]
have lean_s269 : let249 := by andElim lean_s242, 0
exact (show False from by R1 lean_s268, lean_s269, let248, [0, 0])


