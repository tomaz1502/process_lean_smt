open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x7 : Int}
variable {x6 : Int}
variable {x0 : Int}
variable {x3 : Int}
variable {x8 : Int}
variable {x2 : Int}
variable {x1 : Int}
variable {x9 : Int}
variable {x5 : Int}
variable {x1 : Int}
variable {x2 : Int}
variable {x9 : Int}
variable {x4 : Int}
variable {x0 : Int}
variable {x5 : Int}
variable {x6 : Int}
variable {x4 : Int}
variable {x3 : Int}
variable {x8 : Int}
variable {x7 : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (binrel% GT.gt let2 let1)
  let let4 := (Int.ofNat 1)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HMul.hMul let5 x9)
  let let7 := (binrel% HAdd.hAdd x4 let6)
  let let8 := (binrel% GE.ge let7 let1)
  let let9 := (Not let8)
  let let10 := (binrel% LT.lt let7 let1)
  let let11 := (Int.ofNat 5)
  let let12 := (binrel% HDiv.hDiv (Int.ofNat 7) let11)
  let let13 := (binrel% GT.gt let12 let1)
  let let14 := (Int.ofNat 2)
  let let15 := (Neg.neg let14)
  let let16 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x8) let6)))
  let let17 := (binrel% GE.ge let16 let14)
  let let18 := (Not let17)
  let let19 := (binrel% LT.lt let16 let14)
  let let20 := (binrel% HDiv.hDiv (Int.ofNat 4) let11)
  let let21 := (Neg.neg let20)
  let let22 := (binrel% LT.lt let21 let1)
  let let23 := (binrel% HDiv.hDiv (Int.ofNat 6) let11)
  let let24 := (binrel% GT.gt let23 let1)
  let let25 := (binrel% HMul.hMul let5 x7)
  let let26 := (binrel% HAdd.hAdd x5 let25)
  let let27 := (binrel% HMul.hMul let14 x1)
  let let28 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let27 let26))
  let let29 := (binrel% GE.ge let28 let4)
  let let30 := (Not let29)
  let let31 := (binrel% LT.lt let28 let4)
  let let32 := (binrel% HDiv.hDiv let14 let11)
  let let33 := (binrel% GT.gt let32 let1)
  let let34 := (binrel% HMul.hMul let5 x6)
  let let35 := (binrel% HMul.hMul let5 x2)
  let let36 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x4) (binrel% HAdd.hAdd let34 let6))))
  let let37 := (binrel% GE.ge let36 let4)
  let let38 := (Not let37)
  let let39 := (binrel% LT.lt let36 let4)
  let let40 := (binrel% HMul.hMul let5 x8)
  let let41 := (binrel% HMul.hMul let14 x5)
  let let42 := (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let25 let40))
  let let43 := (Rat.ofInt let42)
  let let44 := (binrel% HMul.hMul let2 let42)
  let let45 := (Neg.neg let32)
  let let46 := (binrel% HMul.hMul let45 x9)
  let let47 := (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x4) let46)
  let let48 := (binrel% HMul.hMul let32 let7)
  let let49 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) let11)) x8) (binrel% HMul.hMul (Neg.neg let12) x9))))
  let let50 := (binrel% HMul.hMul let12 let16)
  let let51 := (Int.ofNat 16)
  let let52 := (binrel% HDiv.hDiv let51 let11)
  let let53 := (Int.ofNat 24)
  let let54 := (Neg.neg let52)
  let let55 := (Int.ofNat 8)
  let let56 := (binrel% HDiv.hDiv let55 let11)
  let let57 := (Neg.neg let56)
  let let58 := (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv let53 let11) x8) (binrel% HMul.hMul let52 x9))))))
  let let59 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 3)) x8) (binrel% HMul.hMul let15 x9))))))
  let let60 := (binrel% HMul.hMul let57 let59)
  let let61 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x2) (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let40 let6))))
  let let62 := (binrel% HMul.hMul let14 x2)
  let let63 := (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))
  let let64 := (Neg.neg let2)
  let let65 := (binrel% HMul.hMul let64 let63)
  let let66 := (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x6) let46))))
  let let67 := (binrel% HMul.hMul let32 let36)
  let let68 := (Rat.ofInt 0)
  let let69 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 12) let11) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x5) (binrel% HMul.hMul (Neg.neg let23) x7))))
  let let70 := (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x2) (binrel% HMul.hMul let20 x7)))
  let let71 := (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let69 let66)))))))
  let let72 := (binrel% HMul.hMul let2 let4)
  let let73 := (binrel% HMul.hMul let12 let4)
  let let74 := (binrel% HMul.hMul let21 let1)
  let let75 := (binrel% HMul.hMul let32 let1)
  let let76 := (Neg.neg (binrel% HDiv.hDiv let4 let11))
  let let77 := (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let68 let68)))))))
  let let78 := (binrel% LE.le let42 let4)
  let let79 := (Not let78)
  let let80 := (binrel% GT.gt let42 let4)
  let let81 := (Eq let80 let79)
  let let82 := (Not let38)
  let let83 := (Eq let82 let37)
  let let84 := (Not let30)
  let let85 := (Eq let29 let84)
  let let86 := (Eq let84 let29)
  let let87 := (Neg.neg x2)
  let let88 := (binrel% LT.lt let57 let1)
  let let89 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let35 let25))
  let let90 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x1 let25))
  let let91 := (binrel% HMul.hMul let64 let5)
  let let92 := (binrel% HMul.hMul let5 x5)
  let let93 := (Neg.neg x5)
  let let94 := (Eq let37 let82)
  let let95 := (Neg.neg x0)
  let let96 := (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let95 x2))))
  let let97 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) let95) x2)
  let let98 := (binrel% HMul.hMul x5 let14)
  let let99 := (binrel% HMul.hMul let32 let5)
  let let100 := (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x7 let40)))) let4)
  let let101 := (binrel% HMul.hMul let5 x0)
  let let102 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let25 x8))))
  let let103 := (binrel% LE.le let102 let5)
  let let104 := (binrel% HMul.hMul let53 x8)
  let let105 := (binrel% HMul.hMul x8 let53)
  let let106 := (binrel% HMul.hMul let23 let28)
  let let107 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let92 let40)))
  let let108 := (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let40 x3)))
  let let109 := (Neg.neg x6)
  let let110 := (binrel% HMul.hMul let23 let1)
  let let111 := (Neg.neg x8)
  let let112 := (Eq let37 let37)
  let let113 := (binrel% GE.ge let59 let14)
  let let114 := (Not let113)
  let let115 := (Neg.neg let55)
  let let116 := (binrel% HMul.hMul let51 x9)
  let let117 := (Neg.neg let51)
  let let118 := (binrel% HMul.hMul let117 x5)
  let let119 := (binrel% HMul.hMul let55 x2)
  let let120 := (binrel% HMul.hMul let115 x1)
  let let121 := (binrel% HMul.hMul let115 x0)
  let let122 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let104 let116)))))
  let let123 := (binrel% GE.ge let122 let115)
  let let124 := (binrel% HAdd.hAdd x6 x9)
  let let125 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 let124)))
  let let126 := (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let101 x2))))
  let let127 := (Eq let29 let29)
  let let128 := (binrel% HMul.hMul x5 let117)
  let let129 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x0 let26))
  let let130 := (Not let114)
  let let131 := (binrel% HMul.hMul x2 let55)
  let let132 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 let25))))
  let let133 := (binrel% GE.ge let42 let14)
  let let134 := (Eq let133 let133)
  let let135 := (binrel% HMul.hMul x9 let51)
  let let136 := (Neg.neg x7)
  let let137 := (binrel% HMul.hMul x1 let115)
  let let138 := (binrel% HMul.hMul x0 let115)
  let let139 := (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let131 let105)))))
  let let140 := (binrel% HAdd.hAdd x1 x8)
  let let141 := (binrel% HAdd.hAdd x8 x1)
  let let142 := (binrel% GE.ge let107 let1)
  let let143 := (binrel% LE.le let1 let107)
  let let144 := (binrel% HMul.hMul let14 x8)
  let let145 := (binrel% HMul.hMul x8 let14)
  let let146 := (binrel% HMul.hMul let57 let14)
  let let147 := (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let111 x3)))
  let let148 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let93 x2) let111) x3)
  let let149 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let119 let104)))))
  let let150 := (Not let133)
  let let151 := (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 let136))))
  let let152 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let95 x6) x5) x8) let136)
  let let153 := (Eq let8 let8)
  let let154 := (binrel% GE.ge let140 let4)
  let let155 := (binrel% LE.le let4 let140)
  let let156 := (binrel% HMul.hMul x1 let14)
  let let157 := (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 let136)))
  let let158 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let156 x0) x5) let136)
  let let159 := (binrel% LE.le let68 let76)
  let let160 := (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let144 x9)))
  let let161 := (binrel% LE.le let5 let160)
  let let162 := (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd x1 let136))
  let let163 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let87 x1) let136)
  let let164 := (binrel% HMul.hMul x2 let14)
  let let165 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let62 x8)))
  let let166 := (binrel% LE.le let1 let125)
  let let167 := (Not let18)
  let let168 := (Eq let167 let17)
  let let169 := (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let144 let25)))
  let let170 := (binrel% LT.lt let42 let14)
  let let171 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let145 let136)))
  let let172 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let109 x9) let145) let136)
  let let173 := (binrel% HMul.hMul let21 let89)
  let let174 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let41 let25))
  let let175 := (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let98 let136))
  let let176 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let111 let98) let136)
  let let177 := (binrel% LE.le let7 let5)
  let let178 := (binrel% HSub.hSub x4 x9)
  let let179 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let164 x8)))
  let let180 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let124 let164) x8)
  let let181 := (Eq let17 let167)
  let let182 := (binrel% LE.le let28 let1)
  let let183 := (binrel% GE.ge let89 let1)
  let let184 := (binrel% LE.le let1 let89)
  let let185 := (binrel% GE.ge let63 let5)
  let let186 := (binrel% LE.le let5 let63)
  let let187 := (binrel% GE.ge let139 let115)
  let let188 := (Not let187)
  let let189 := (binrel% LE.le let4 let141)
  let let190 := (binrel% LE.le let1 let97)
  let let191 := (binrel% LE.le let1 let148)
  let let192 := (binrel% LE.le let152 let5)
  let let193 := (binrel% LE.le let1 let163)
  let let194 := (binrel% LE.le let5 let172)
  let let195 := (binrel% LE.le let176 let4)
  let let196 := (binrel% LE.le let178 let5)
  let let197 := (binrel% LE.le let158 let1)
  let let198 := (binrel% LE.le let5 let180)
  let let199 := (And let198 (And let197 (And let196 (And let195 (And let194 (And let193 (And let192 (And let191 (And let190 (And let189 let188))))))))))
  let let200 := (And (And (And (And (And (And (And (And (And (And let198 let197) let196) let195) let194) let193) let192) let191) let190) let189) let188)
  let let201 := (Not let150)
  let let202 := (Eq let201 let133)
  let let203 := (Eq let133 let201)
  let let204 := (Not let9)
  let let205 := (Eq let204 let8)
  let let206 := (binrel% LT.lt let64 let1)
  let let207 := (Eq let8 let204)
  let let208 := (Eq let17 let17)
  let let209 := (And let185 (And let30 (And let9 (And let150 (And let18 (And let183 (And let100 (And let142 (And let38 (And let154 let113))))))))))
  let let210 := (Eq let139 let122)
  let let211 := (Not let183)
  let let212 := (Not let185)
  let let213 := (Or let37 (Or let29 (Or let212 (Or let114 (Or let211 (Or let17 (Or let8 let133)))))))
  let let214 := (Or let82 (Or let84 (Or let212 (Or let114 (Or let211 (Or let167 (Or let204 let201)))))))
  let let215 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let110 let75)))))))
  let let216 := (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let106 let67)))))))
  let let217 := (binrel% LE.le let216 let215)
  let let218 := (binrel% LE.le let67 let75)
  let let219 := (binrel% LE.le let36 let1)
  let let220 := (And let33 let219)
  let let221 := (binrel% LE.le let106 let110)
  let let222 := (And let24 let182)
  let let223 := (binrel% LE.le let65 let91)
  let let224 := (And let206 let185)
  let let225 := (binrel% LE.le let60 let146)
  let let226 := (And let88 let113)
  let let227 := (binrel% LE.le let173 let74)
  let let228 := (And let22 let183)
  let let229 := (binrel% LE.le let50 let73)
  let let230 := (binrel% LE.le let16 let4)
  let let231 := (And let13 let230)
  let let232 := (binrel% LE.le let48 let99)
  let let233 := (And let33 let177)
  let let234 := (binrel% LE.le let44 let72)
  let let235 := (And let3 let78)
(Eq let3 True) → (Eq let10 let9) → (Eq let13 True) → (Eq let19 let18) → (Eq let22 True) → (Eq let24 True) → (Eq let31 let30) → (Eq let33 True) → (Eq let39 let38) → (Eq let44 let43) → (Eq let48 let47) → (Eq let50 let49) → (Eq let60 let58) → (Eq let65 let61) → (Eq let67 let66) → (Eq let71 let68) → (Eq let72 let2) → (Eq let73 let12) → (Eq let74 let68) → (Eq let75 let68) → (Eq let77 let76) → let81 → let83 → (Eq let86 let85) → let86 → (Eq let87 let35) → (Eq let88 True) → (Eq let90 let89) → (Eq let91 let2) → (Eq let93 let92) → (Eq let83 let94) → (Eq let97 let96) → (Eq let98 let41) → (Eq let99 let45) → (Eq let103 let100) → (Eq let105 let104) → (Eq let106 let69) → (Eq let108 let107) → (Eq let109 let34) → (Eq let110 let68) → (Eq let111 let40) → (Eq let112 True) → (Eq let95 let101) → (Eq let123 let114) → (Eq let126 let125) → (Eq let127 True) → (Eq let128 let118) → (Eq let129 let28) → (Eq let130 let113) → (Eq let131 let119) → (Eq let132 let102) → (Eq let134 True) → (Eq let135 let116) → (Eq let136 let25) → (Eq let139 let139) → (Eq let141 let140) → (Eq let143 let142) → (Eq let145 let144) → (Eq let146 let54) → (Eq let148 let147) → (Eq let149 let122) → (Eq let78 let150) → (Eq let152 let151) → (Eq let153 True) → (Eq let155 let154) → (Eq let158 let157) → (Eq let159 False) → (Eq let161 let18) → (Eq let163 let162) → (Eq let164 let62) → (Eq let165 let63) → (Eq let166 let38) → let168 → (Eq let169 let160) → (Eq let170 let150) → (Eq let172 let171) → (Eq let173 let70) → (Eq let174 let42) → (Eq let176 let175) → (Eq let177 let9) → (Eq let178 let7) → (Eq let180 let179) → (Eq let168 let181) → (Eq let182 let30) → (Eq let156 let27) → (Eq let184 let183) → (Eq let186 let185) → (Eq let200 let199) → (Eq let137 let120) → let202 → (Eq let138 let121) → (Eq let202 let203) → let205 → (Eq let206 True) → (Eq let205 let207) → (Eq let208 True) → let200 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (binrel% GT.gt let2 let1)
  let let4 := (Int.ofNat 1)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HMul.hMul let5 x9)
  let let7 := (binrel% HAdd.hAdd x4 let6)
  let let8 := (binrel% GE.ge let7 let1)
  let let9 := (Not let8)
  let let10 := (binrel% LT.lt let7 let1)
  let let11 := (Int.ofNat 5)
  let let12 := (binrel% HDiv.hDiv (Int.ofNat 7) let11)
  let let13 := (binrel% GT.gt let12 let1)
  let let14 := (Int.ofNat 2)
  let let15 := (Neg.neg let14)
  let let16 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x8) let6)))
  let let17 := (binrel% GE.ge let16 let14)
  let let18 := (Not let17)
  let let19 := (binrel% LT.lt let16 let14)
  let let20 := (binrel% HDiv.hDiv (Int.ofNat 4) let11)
  let let21 := (Neg.neg let20)
  let let22 := (binrel% LT.lt let21 let1)
  let let23 := (binrel% HDiv.hDiv (Int.ofNat 6) let11)
  let let24 := (binrel% GT.gt let23 let1)
  let let25 := (binrel% HMul.hMul let5 x7)
  let let26 := (binrel% HAdd.hAdd x5 let25)
  let let27 := (binrel% HMul.hMul let14 x1)
  let let28 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let27 let26))
  let let29 := (binrel% GE.ge let28 let4)
  let let30 := (Not let29)
  let let31 := (binrel% LT.lt let28 let4)
  let let32 := (binrel% HDiv.hDiv let14 let11)
  let let33 := (binrel% GT.gt let32 let1)
  let let34 := (binrel% HMul.hMul let5 x6)
  let let35 := (binrel% HMul.hMul let5 x2)
  let let36 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x4) (binrel% HAdd.hAdd let34 let6))))
  let let37 := (binrel% GE.ge let36 let4)
  let let38 := (Not let37)
  let let39 := (binrel% LT.lt let36 let4)
  let let40 := (binrel% HMul.hMul let5 x8)
  let let41 := (binrel% HMul.hMul let14 x5)
  let let42 := (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let25 let40))
  let let43 := (Rat.ofInt let42)
  let let44 := (binrel% HMul.hMul let2 let42)
  let let45 := (Neg.neg let32)
  let let46 := (binrel% HMul.hMul let45 x9)
  let let47 := (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x4) let46)
  let let48 := (binrel% HMul.hMul let32 let7)
  let let49 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x6) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) let11)) x8) (binrel% HMul.hMul (Neg.neg let12) x9))))
  let let50 := (binrel% HMul.hMul let12 let16)
  let let51 := (Int.ofNat 16)
  let let52 := (binrel% HDiv.hDiv let51 let11)
  let let53 := (Int.ofNat 24)
  let let54 := (Neg.neg let52)
  let let55 := (Int.ofNat 8)
  let let56 := (binrel% HDiv.hDiv let55 let11)
  let let57 := (Neg.neg let56)
  let let58 := (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv let53 let11) x8) (binrel% HMul.hMul let52 x9))))))
  let let59 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 3)) x8) (binrel% HMul.hMul let15 x9))))))
  let let60 := (binrel% HMul.hMul let57 let59)
  let let61 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x2) (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let40 let6))))
  let let62 := (binrel% HMul.hMul let14 x2)
  let let63 := (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))
  let let64 := (Neg.neg let2)
  let let65 := (binrel% HMul.hMul let64 let63)
  let let66 := (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x2) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x6) let46))))
  let let67 := (binrel% HMul.hMul let32 let36)
  let let68 := (Rat.ofInt 0)
  let let69 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 12) let11) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x5) (binrel% HMul.hMul (Neg.neg let23) x7))))
  let let70 := (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x1) (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x2) (binrel% HMul.hMul let20 x7)))
  let let71 := (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let69 let66)))))))
  let let72 := (binrel% HMul.hMul let2 let4)
  let let73 := (binrel% HMul.hMul let12 let4)
  let let74 := (binrel% HMul.hMul let21 let1)
  let let75 := (binrel% HMul.hMul let32 let1)
  let let76 := (Neg.neg (binrel% HDiv.hDiv let4 let11))
  let let77 := (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let68 let68)))))))
  let let78 := (binrel% LE.le let42 let4)
  let let79 := (Not let78)
  let let80 := (binrel% GT.gt let42 let4)
  let let81 := (Eq let80 let79)
  let let82 := (Not let38)
  let let83 := (Eq let82 let37)
  let let84 := (Not let30)
  let let85 := (Eq let29 let84)
  let let86 := (Eq let84 let29)
  let let87 := (Neg.neg x2)
  let let88 := (binrel% LT.lt let57 let1)
  let let89 := (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let35 let25))
  let let90 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x1 let25))
  let let91 := (binrel% HMul.hMul let64 let5)
  let let92 := (binrel% HMul.hMul let5 x5)
  let let93 := (Neg.neg x5)
  let let94 := (Eq let37 let82)
  let let95 := (Neg.neg x0)
  let let96 := (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let95 x2))))
  let let97 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) let95) x2)
  let let98 := (binrel% HMul.hMul x5 let14)
  let let99 := (binrel% HMul.hMul let32 let5)
  let let100 := (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x7 let40)))) let4)
  let let101 := (binrel% HMul.hMul let5 x0)
  let let102 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let25 x8))))
  let let103 := (binrel% LE.le let102 let5)
  let let104 := (binrel% HMul.hMul let53 x8)
  let let105 := (binrel% HMul.hMul x8 let53)
  let let106 := (binrel% HMul.hMul let23 let28)
  let let107 := (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let92 let40)))
  let let108 := (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let40 x3)))
  let let109 := (Neg.neg x6)
  let let110 := (binrel% HMul.hMul let23 let1)
  let let111 := (Neg.neg x8)
  let let112 := (Eq let37 let37)
  let let113 := (binrel% GE.ge let59 let14)
  let let114 := (Not let113)
  let let115 := (Neg.neg let55)
  let let116 := (binrel% HMul.hMul let51 x9)
  let let117 := (Neg.neg let51)
  let let118 := (binrel% HMul.hMul let117 x5)
  let let119 := (binrel% HMul.hMul let55 x2)
  let let120 := (binrel% HMul.hMul let115 x1)
  let let121 := (binrel% HMul.hMul let115 x0)
  let let122 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let104 let116)))))
  let let123 := (binrel% GE.ge let122 let115)
  let let124 := (binrel% HAdd.hAdd x6 x9)
  let let125 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 let124)))
  let let126 := (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let101 x2))))
  let let127 := (Eq let29 let29)
  let let128 := (binrel% HMul.hMul x5 let117)
  let let129 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x0 let26))
  let let130 := (Not let114)
  let let131 := (binrel% HMul.hMul x2 let55)
  let let132 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 let25))))
  let let133 := (binrel% GE.ge let42 let14)
  let let134 := (Eq let133 let133)
  let let135 := (binrel% HMul.hMul x9 let51)
  let let136 := (Neg.neg x7)
  let let137 := (binrel% HMul.hMul x1 let115)
  let let138 := (binrel% HMul.hMul x0 let115)
  let let139 := (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let131 let105)))))
  let let140 := (binrel% HAdd.hAdd x1 x8)
  let let141 := (binrel% HAdd.hAdd x8 x1)
  let let142 := (binrel% GE.ge let107 let1)
  let let143 := (binrel% LE.le let1 let107)
  let let144 := (binrel% HMul.hMul let14 x8)
  let let145 := (binrel% HMul.hMul x8 let14)
  let let146 := (binrel% HMul.hMul let57 let14)
  let let147 := (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd let111 x3)))
  let let148 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let93 x2) let111) x3)
  let let149 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let119 let104)))))
  let let150 := (Not let133)
  let let151 := (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 let136))))
  let let152 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let95 x6) x5) x8) let136)
  let let153 := (Eq let8 let8)
  let let154 := (binrel% GE.ge let140 let4)
  let let155 := (binrel% LE.le let4 let140)
  let let156 := (binrel% HMul.hMul x1 let14)
  let let157 := (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 let136)))
  let let158 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let156 x0) x5) let136)
  let let159 := (binrel% LE.le let68 let76)
  let let160 := (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let144 x9)))
  let let161 := (binrel% LE.le let5 let160)
  let let162 := (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd x1 let136))
  let let163 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let87 x1) let136)
  let let164 := (binrel% HMul.hMul x2 let14)
  let let165 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let62 x8)))
  let let166 := (binrel% LE.le let1 let125)
  let let167 := (Not let18)
  let let168 := (Eq let167 let17)
  let let169 := (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let144 let25)))
  let let170 := (binrel% LT.lt let42 let14)
  let let171 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let145 let136)))
  let let172 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let109 x9) let145) let136)
  let let173 := (binrel% HMul.hMul let21 let89)
  let let174 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let41 let25))
  let let175 := (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let98 let136))
  let let176 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let111 let98) let136)
  let let177 := (binrel% LE.le let7 let5)
  let let178 := (binrel% HSub.hSub x4 x9)
  let let179 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let164 x8)))
  let let180 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let124 let164) x8)
  let let181 := (Eq let17 let167)
  let let182 := (binrel% LE.le let28 let1)
  let let183 := (binrel% GE.ge let89 let1)
  let let184 := (binrel% LE.le let1 let89)
  let let185 := (binrel% GE.ge let63 let5)
  let let186 := (binrel% LE.le let5 let63)
  let let187 := (binrel% GE.ge let139 let115)
  let let188 := (Not let187)
  let let189 := (binrel% LE.le let4 let141)
  let let190 := (binrel% LE.le let1 let97)
  let let191 := (binrel% LE.le let1 let148)
  let let192 := (binrel% LE.le let152 let5)
  let let193 := (binrel% LE.le let1 let163)
  let let194 := (binrel% LE.le let5 let172)
  let let195 := (binrel% LE.le let176 let4)
  let let196 := (binrel% LE.le let178 let5)
  let let197 := (binrel% LE.le let158 let1)
  let let198 := (binrel% LE.le let5 let180)
  let let199 := (And let198 (And let197 (And let196 (And let195 (And let194 (And let193 (And let192 (And let191 (And let190 (And let189 let188))))))))))
  let let200 := (And (And (And (And (And (And (And (And (And (And let198 let197) let196) let195) let194) let193) let192) let191) let190) let189) let188)
  let let201 := (Not let150)
  let let202 := (Eq let201 let133)
  let let203 := (Eq let133 let201)
  let let204 := (Not let9)
  let let205 := (Eq let204 let8)
  let let206 := (binrel% LT.lt let64 let1)
  let let207 := (Eq let8 let204)
  let let208 := (Eq let17 let17)
  let let209 := (And let185 (And let30 (And let9 (And let150 (And let18 (And let183 (And let100 (And let142 (And let38 (And let154 let113))))))))))
  let let210 := (Eq let139 let122)
  let let211 := (Not let183)
  let let212 := (Not let185)
  let let213 := (Or let37 (Or let29 (Or let212 (Or let114 (Or let211 (Or let17 (Or let8 let133)))))))
  let let214 := (Or let82 (Or let84 (Or let212 (Or let114 (Or let211 (Or let167 (Or let204 let201)))))))
  let let215 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let110 let75)))))))
  let let216 := (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let106 let67)))))))
  let let217 := (binrel% LE.le let216 let215)
  let let218 := (binrel% LE.le let67 let75)
  let let219 := (binrel% LE.le let36 let1)
  let let220 := (And let33 let219)
  let let221 := (binrel% LE.le let106 let110)
  let let222 := (And let24 let182)
  let let223 := (binrel% LE.le let65 let91)
  let let224 := (And let206 let185)
  let let225 := (binrel% LE.le let60 let146)
  let let226 := (And let88 let113)
  let let227 := (binrel% LE.le let173 let74)
  let let228 := (And let22 let183)
  let let229 := (binrel% LE.le let50 let73)
  let let230 := (binrel% LE.le let16 let4)
  let let231 := (And let13 let230)
  let let232 := (binrel% LE.le let48 let99)
  let let233 := (And let33 let177)
  let let234 := (binrel% LE.le let44 let72)
  let let235 := (And let3 let78)
fun lean_r0 : (Eq let3 True) => -- EVALUATE
fun lean_r1 : (Eq let10 let9) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let13 True) => -- EVALUATE
fun lean_r3 : (Eq let19 let18) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let22 True) => -- EVALUATE
fun lean_r5 : (Eq let24 True) => -- EVALUATE
fun lean_r6 : (Eq let31 let30) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let33 True) => -- EVALUATE
fun lean_r8 : (Eq let39 let38) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let44 let43) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let48 let47) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let50 let49) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let60 let58) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let65 let61) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let67 let66) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let71 let68) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let72 let2) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let73 let12) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let74 let68) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let75 let68) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let77 let76) => -- THEORY_REWRITE_ARITH
fun lean_r21 : let81 => -- THEORY_REWRITE_ARITH
fun lean_r22 : let83 => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let86 let85) => -- THEORY_REWRITE_BOOL
fun lean_r24 : let86 => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq let87 let35) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let88 True) => -- EVALUATE
fun lean_r27 : (Eq let90 let89) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let91 let2) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let93 let92) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let83 let94) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let97 let96) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let98 let41) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let99 let45) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let103 let100) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let105 let104) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let106 let69) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let108 let107) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let109 let34) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let110 let68) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let111 let40) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let112 True) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq let95 let101) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let123 let114) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let126 let125) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let127 True) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let128 let118) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let129 let28) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let130 let113) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let131 let119) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let132 let102) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let134 True) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let135 let116) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let136 let25) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let139 let139) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let141 let140) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let143 let142) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let145 let144) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let146 let54) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let148 let147) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let149 let122) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let78 let150) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let152 let151) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let153 True) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq let155 let154) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let158 let157) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let159 False) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let161 let18) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let163 let162) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let164 let62) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let165 let63) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let166 let38) => -- THEORY_REWRITE_ARITH
fun lean_r72 : let168 => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let169 let160) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let170 let150) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let172 let171) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let173 let70) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let174 let42) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let176 let175) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let177 let9) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let178 let7) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let180 let179) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let168 let181) => -- THEORY_REWRITE_BOOL
fun lean_r83 : (Eq let182 let30) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let156 let27) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let184 let183) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let186 let185) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let200 let199) => -- THEORY_REWRITE_BOOL
fun lean_r88 : (Eq let137 let120) => -- THEORY_REWRITE_ARITH
fun lean_r89 : let202 => -- THEORY_REWRITE_BOOL
fun lean_r90 : (Eq let138 let121) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let202 let203) => -- THEORY_REWRITE_BOOL
fun lean_r92 : let205 => -- THEORY_REWRITE_BOOL
fun lean_r93 : (Eq let206 True) => -- EVALUATE
fun lean_r94 : (Eq let205 let207) => -- THEORY_REWRITE_BOOL
fun lean_r95 : (Eq let208 True) => -- THEORY_REWRITE_BOOL
fun lean_a96 : let200 => by
have lean_s0 : (Or let82 (Or let84 (Or let212 (Or let114 (Or let211 (Or let167 (Or let204 (Or let201 False)))))))) :=
  (scope (fun lean_a97 : let38 =>
    (scope (fun lean_a98 : let30 =>
      (scope (fun lean_a99 : let185 =>
        (scope (fun lean_a100 : let113 =>
          (scope (fun lean_a101 : let183 =>
            (scope (fun lean_a102 : let18 =>
              (scope (fun lean_a103 : let9 =>
                (scope (fun lean_a104 : let150 =>
                  have lean_s0 : (Eq let150 let170) := by timed Eq.symm lean_r74
                  have lean_s1 : let170 := by timed eqResolve lean_a104 lean_s0
                  have lean_s2 : let78 := by intTightUb lean_s1
                  have lean_s3 : (Or let79 False) :=
                    (scope (fun lean_a105 : let78 =>
                      have lean_s3 : let3 := by timed trueElim lean_r0
                      have lean_s4 : let235 := by timed And.intro lean_s3 lean_a105
                      have lean_s5 : (Implies let235 let234) := by arithMulPos [let42, let4, let2], 1
                      have lean_s6 : let234 := by timed modusPonens lean_s4 lean_s5
                      have lean_s7 : let33 := by timed trueElim lean_r7
                      have lean_s8 : (Eq let9 let10) := by timed Eq.symm lean_r1
                      have lean_s9 : let10 := by timed eqResolve lean_a103 lean_s8
                      have lean_s10 : let177 := by intTightUb lean_s9
                      have lean_s11 : let233 := by timed And.intro lean_s7 lean_s10
                      have lean_s12 : (Implies let233 let232) := by arithMulPos [let7, let5, let32], 1
                      have lean_s13 : let232 := by timed modusPonens lean_s11 lean_s12
                      have lean_s14 : let13 := by timed trueElim lean_r2
                      have lean_s15 : (Eq let18 let19) := by timed Eq.symm lean_r3
                      have lean_s16 : let19 := by timed eqResolve lean_a102 lean_s15
                      have lean_s17 : let230 := by intTightUb lean_s16
                      have lean_s18 : let231 := by timed And.intro lean_s14 lean_s17
                      have lean_s19 : (Implies let231 let229) := by arithMulPos [let16, let4, let12], 1
                      have lean_s20 : let229 := by timed modusPonens lean_s18 lean_s19
                      have lean_s21 : let22 := by timed trueElim lean_r4
                      have lean_s22 : let228 := by timed And.intro lean_s21 lean_a101
                      have lean_s23 : (Implies let228 let227) := by arithMulNeg [let89, let1, let21], 3
                      have lean_s24 : let227 := by timed modusPonens lean_s22 lean_s23
                      have lean_s25 : let88 := by timed trueElim lean_r26
                      have lean_s26 : let226 := by timed And.intro lean_s25 lean_a100
                      have lean_s27 : (Implies let226 let225) := by arithMulNeg [let59, let14, let57], 3
                      have lean_s28 : let225 := by timed modusPonens lean_s26 lean_s27
                      have lean_s29 : let206 := by timed trueElim lean_r93
                      have lean_s30 : let224 := by timed And.intro lean_s29 lean_a99
                      have lean_s31 : (Implies let224 let223) := by arithMulNeg [let63, let5, let64], 3
                      have lean_s32 : let223 := by timed modusPonens lean_s30 lean_s31
                      have lean_s33 : let24 := by timed trueElim lean_r5
                      have lean_s34 : (Eq let30 let31) := by timed Eq.symm lean_r6
                      have lean_s35 : let31 := by timed eqResolve lean_a98 lean_s34
                      have lean_s36 : let182 := by intTightUb lean_s35
                      have lean_s37 : let222 := by timed And.intro lean_s33 lean_s36
                      have lean_s38 : (Implies let222 let221) := by arithMulPos [let28, let1, let23], 1
                      have lean_s39 : let221 := by timed modusPonens lean_s37 lean_s38
                      have lean_s40 : (Eq let38 let39) := by timed Eq.symm lean_r8
                      have lean_s41 : let39 := by timed eqResolve lean_a97 lean_s40
                      have lean_s42 : let219 := by intTightUb lean_s41
                      have lean_s43 : let220 := by timed And.intro lean_s7 lean_s42
                      have lean_s44 : (Implies let220 let218) := by arithMulPos [let36, let1, let32], 1
                      have lean_s45 : let218 := by timed modusPonens lean_s43 lean_s44
                      have lean_s46 : let217 := by sumBounds [lean_s6, lean_s13, lean_s20, lean_s24, lean_s28, lean_s32, lean_s39, lean_s45]
                      let lean_s47 := by timed congrHAdd lean_r36 lean_r14
                      let lean_s48 := by timed congrHAdd lean_r13 lean_s47
                      let lean_s49 := by timed congrHAdd lean_r12 lean_s48
                      let lean_s50 := by timed congrHAdd lean_r76 lean_s49
                      let lean_s51 := by timed congrHAdd lean_r11 lean_s50
                      let lean_s52 := by timed congrHAdd lean_r10 lean_s51
                      have lean_s53 : (Eq let216 let71) := by timed congrHAdd lean_r9 lean_s52
                      have lean_s54 : (Eq let216 let68) := by timed Eq.trans lean_s53 lean_r15
                      let lean_s55 := by timed flipCongrArg lean_s54 [LE.le]
                      let lean_s56 := by timed congrHAdd lean_r39 lean_r19
                      let lean_s57 := by timed congrHAdd lean_r28 lean_s56
                      let lean_s58 := by timed congrHAdd lean_r58 lean_s57
                      let lean_s59 := by timed congrHAdd lean_r18 lean_s58
                      let lean_s60 := by timed congrHAdd lean_r17 lean_s59
                      let lean_s61 := by timed congrHAdd lean_r33 lean_s60
                      have lean_s62 : (Eq let215 let77) := by timed congrHAdd lean_r16 lean_s61
                      have lean_s63 : (Eq let215 let76) := by timed Eq.trans lean_s62 lean_r20
                      have lean_s64 : (Eq let217 let159) := by timed congr lean_s55 lean_s63
                      have lean_s65 : (Eq let217 False) := by timed Eq.trans lean_s64 lean_r66
                      show False from by timed eqResolve lean_s46 lean_s65
                    ))
                  have lean_s4 : let79 := by liftOrNToNeg lean_s3
                  have lean_s5 : (Eq let79 let201) := by timed flipCongrArg lean_r61 [Not]
                  have lean_s6 : (Eq let79 let133) := by timed Eq.trans lean_s5 lean_r89
                  have lean_s7 : (Eq let80 let133) := by timed Eq.trans lean_r21 lean_s6
                  have lean_s8 : (Eq let133 let80) := by timed Eq.symm lean_s7
                  have lean_s9 : (Eq let79 let80) := by timed Eq.trans lean_s6 lean_s8
                  have lean_s10 : let80 := by timed eqResolve lean_s4 lean_s9
                  have lean_s11 : (Eq let133 let79) := by timed Eq.symm lean_s6
                  have lean_s12 : let81 := by timed Eq.trans lean_s7 lean_s11
                  have lean_s13 : let79 := by timed eqResolve lean_s10 lean_s12
                  show False from by timed contradiction lean_s2 lean_s13
  ))))))))))))))))
have lean_s1 : (Not (And let38 (And let30 (And let185 (And let113 (And let183 (And let18 (And let9 let150)))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let214 := by timed flipNotAnd lean_s1 [let38, let30, let185, let113, let183, let18, let9, let150]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let112 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let94 let112) := by timed congr lean_s5 lean_r22
have lean_s7 : (Eq let94 True) := by timed Eq.trans lean_s6 lean_r41
have lean_s8 : (Eq let83 True) := by timed Eq.trans lean_r30 lean_s7
have lean_s9 : let83 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let127 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let85 let127) := by timed congr lean_s12 lean_r24
have lean_s14 : (Eq let85 True) := by timed Eq.trans lean_s13 lean_r45
have lean_s15 : (Eq let86 True) := by timed Eq.trans lean_r23 lean_s14
have lean_s16 : let86 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : (Eq let212 let212) := by timed rfl
let lean_s19 := by timed congr lean_s3 lean_s18
have lean_s20 : (Eq let114 let114) := by timed rfl
let lean_s21 := by timed congr lean_s3 lean_s20
have lean_s22 : (Eq let211 let211) := by timed rfl
let lean_s23 := by timed congr lean_s3 lean_s22
have lean_s24 : let208 := by timed rfl
let lean_s25 := by timed flipCongrArg lean_s24 [Eq]
have lean_s26 : (Eq let181 let208) := by timed congr lean_s25 lean_r72
have lean_s27 : (Eq let181 True) := by timed Eq.trans lean_s26 lean_r95
have lean_s28 : (Eq let168 True) := by timed Eq.trans lean_r82 lean_s27
have lean_s29 : let168 := by timed trueElim lean_s28
let lean_s30 := by timed congr lean_s3 lean_s29
have lean_s31 : let153 := by timed rfl
let lean_s32 := by timed flipCongrArg lean_s31 [Eq]
have lean_s33 : (Eq let207 let153) := by timed congr lean_s32 lean_r92
have lean_s34 : (Eq let207 True) := by timed Eq.trans lean_s33 lean_r63
have lean_s35 : (Eq let205 True) := by timed Eq.trans lean_r94 lean_s34
have lean_s36 : let205 := by timed trueElim lean_s35
let lean_s37 := by timed congr lean_s3 lean_s36
have lean_s38 : let134 := by timed rfl
let lean_s39 := by timed flipCongrArg lean_s38 [Eq]
have lean_s40 : (Eq let203 let134) := by timed congr lean_s39 lean_r89
have lean_s41 : (Eq let203 True) := by timed Eq.trans lean_s40 lean_r51
have lean_s42 : (Eq let202 True) := by timed Eq.trans lean_r91 lean_s41
have lean_s43 : let202 := by timed trueElim lean_s42
let lean_s44 := by timed congr lean_s37 lean_s43
let lean_s45 := by timed congr lean_s30 lean_s44
let lean_s46 := by timed congr lean_s23 lean_s45
let lean_s47 := by timed congr lean_s21 lean_s46
let lean_s48 := by timed congr lean_s19 lean_s47
let lean_s49 := by timed congr lean_s17 lean_s48
have lean_s50 : (Eq let214 let213) := by timed congr lean_s10 lean_s49
have lean_s51 : let213 := by timed eqResolve lean_s2 lean_s50
have lean_s52 : (Or let29 (Or let8 (Or let133 (Or let17 (Or let37 (Or let114 (Or let212 let211))))))) := by permutateOr lean_s51, [1, 6, 7, 5, 0, 3, 2, 4], (- 1)
have lean_s53 : (Eq And And) := by timed rfl
have lean_s54 : (Eq let5 let5) := by timed rfl
let lean_s55 := by timed flipCongrArg lean_s54 [LE.le]
have lean_s56 : (Eq x6 x6) := by timed rfl
have lean_s57 : (Eq x9 x9) := by timed rfl
have lean_s58 : (Eq x8 x8) := by timed rfl
let lean_s59 := by timed congrHAdd lean_r69 lean_s58
let lean_s60 := by timed congrHAdd lean_s57 lean_s59
have lean_s61 : (Eq let179 let165) := by timed congrHAdd lean_s56 lean_s60
have lean_s62 : (Eq let179 let63) := by timed Eq.trans lean_s61 lean_r70
have lean_s63 : (Eq let180 let63) := by timed Eq.trans lean_r81 lean_s62
have lean_s64 : (Eq let198 let186) := by timed congr lean_s55 lean_s63
have lean_s65 : (Eq let198 let185) := by timed Eq.trans lean_s64 lean_r86
let lean_s66 := by timed congr lean_s53 lean_s65
have lean_s67 : (Eq x0 x0) := by timed rfl
have lean_s68 : (Eq x5 x5) := by timed rfl
let lean_s69 := by timed congrHAdd lean_s68 lean_r53
let lean_s70 := by timed congrHAdd lean_s67 lean_s69
have lean_s71 : (Eq let157 let129) := by timed congrHAdd lean_r84 lean_s70
have lean_s72 : (Eq let157 let28) := by timed Eq.trans lean_s71 lean_r47
have lean_s73 : (Eq let158 let28) := by timed Eq.trans lean_r65 lean_s72
let lean_s74 := by timed flipCongrArg lean_s73 [LE.le]
have lean_s75 : (Eq let1 let1) := by timed rfl
have lean_s76 : (Eq let197 let182) := by timed congr lean_s74 lean_s75
have lean_s77 : (Eq let197 let30) := by timed Eq.trans lean_s76 lean_r83
let lean_s78 := by timed congr lean_s53 lean_s77
let lean_s79 := by timed flipCongrArg lean_r80 [LE.le]
have lean_s80 : (Eq let196 let177) := by timed congr lean_s79 lean_s54
have lean_s81 : (Eq let196 let9) := by timed Eq.trans lean_s80 lean_r79
let lean_s82 := by timed congr lean_s53 lean_s81
let lean_s83 := by timed congrHAdd lean_r32 lean_r53
have lean_s84 : (Eq let175 let174) := by timed congrHAdd lean_r40 lean_s83
have lean_s85 : (Eq let175 let42) := by timed Eq.trans lean_s84 lean_r77
have lean_s86 : (Eq let176 let42) := by timed Eq.trans lean_r78 lean_s85
let lean_s87 := by timed flipCongrArg lean_s86 [LE.le]
have lean_s88 : (Eq let4 let4) := by timed rfl
have lean_s89 : (Eq let195 let78) := by timed congr lean_s87 lean_s88
have lean_s90 : (Eq let195 let150) := by timed Eq.trans lean_s89 lean_r61
let lean_s91 := by timed congr lean_s53 lean_s90
let lean_s92 := by timed flipCongrArg lean_s54 [LE.le]
let lean_s93 := by timed congrHAdd lean_r57 lean_r53
let lean_s94 := by timed congrHAdd lean_s57 lean_s93
have lean_s95 : (Eq let171 let169) := by timed congrHAdd lean_r38 lean_s94
have lean_s96 : (Eq let171 let160) := by timed Eq.trans lean_s95 lean_r73
have lean_s97 : (Eq let172 let160) := by timed Eq.trans lean_r75 lean_s96
have lean_s98 : (Eq let194 let161) := by timed congr lean_s92 lean_s97
have lean_s99 : (Eq let194 let18) := by timed Eq.trans lean_s98 lean_r67
let lean_s100 := by timed congr lean_s53 lean_s99
let lean_s101 := by timed flipCongrArg lean_s75 [LE.le]
have lean_s102 : (Eq x1 x1) := by timed rfl
let lean_s103 := by timed congrHAdd lean_s102 lean_r53
have lean_s104 : (Eq let162 let90) := by timed congrHAdd lean_r25 lean_s103
have lean_s105 : (Eq let162 let89) := by timed Eq.trans lean_s104 lean_r27
have lean_s106 : (Eq let163 let89) := by timed Eq.trans lean_r68 lean_s105
have lean_s107 : (Eq let193 let184) := by timed congr lean_s101 lean_s106
have lean_s108 : (Eq let193 let183) := by timed Eq.trans lean_s107 lean_r85
let lean_s109 := by timed congr lean_s53 lean_s108
let lean_s110 := by timed congrHAdd lean_s58 lean_r53
let lean_s111 := by timed congrHAdd lean_s68 lean_s110
let lean_s112 := by timed congrHAdd lean_s56 lean_s111
have lean_s113 : (Eq let151 let132) := by timed congrHAdd lean_r42 lean_s112
have lean_s114 : (Eq let151 let102) := by timed Eq.trans lean_s113 lean_r50
have lean_s115 : (Eq let152 let102) := by timed Eq.trans lean_r62 lean_s114
let lean_s116 := by timed flipCongrArg lean_s115 [LE.le]
have lean_s117 : (Eq let192 let103) := by timed congr lean_s116 lean_s54
have lean_s118 : (Eq let192 let100) := by timed Eq.trans lean_s117 lean_r34
let lean_s119 := by timed congr lean_s53 lean_s118
let lean_s120 := by timed flipCongrArg lean_s75 [LE.le]
have lean_s121 : (Eq x2 x2) := by timed rfl
have lean_s122 : (Eq x3 x3) := by timed rfl
let lean_s123 := by timed congrHAdd lean_r40 lean_s122
let lean_s124 := by timed congrHAdd lean_s121 lean_s123
have lean_s125 : (Eq let147 let108) := by timed congrHAdd lean_r29 lean_s124
have lean_s126 : (Eq let147 let107) := by timed Eq.trans lean_s125 lean_r37
have lean_s127 : (Eq let148 let107) := by timed Eq.trans lean_r59 lean_s126
have lean_s128 : (Eq let191 let143) := by timed congr lean_s120 lean_s127
have lean_s129 : (Eq let191 let142) := by timed Eq.trans lean_s128 lean_r56
let lean_s130 := by timed congr lean_s53 lean_s129
let lean_s131 := by timed flipCongrArg lean_s75 [LE.le]
have lean_s132 : (Eq x4 x4) := by timed rfl
let lean_s133 := by timed congrHAdd lean_r42 lean_s121
let lean_s134 := by timed congrHAdd lean_s56 lean_s133
let lean_s135 := by timed congrHAdd lean_s132 lean_s134
have lean_s136 : (Eq let96 let126) := by timed congrHAdd lean_s57 lean_s135
have lean_s137 : (Eq let96 let125) := by timed Eq.trans lean_s136 lean_r44
have lean_s138 : (Eq let97 let125) := by timed Eq.trans lean_r31 lean_s137
have lean_s139 : (Eq let190 let166) := by timed congr lean_s131 lean_s138
have lean_s140 : (Eq let190 let38) := by timed Eq.trans lean_s139 lean_r71
let lean_s141 := by timed congr lean_s53 lean_s140
let lean_s142 := by timed flipCongrArg lean_s88 [LE.le]
have lean_s143 : (Eq let189 let155) := by timed congr lean_s142 lean_r55
have lean_s144 : (Eq let189 let154) := by timed Eq.trans lean_s143 lean_r64
let lean_s145 := by timed congr lean_s53 lean_s144
let lean_s146 := by timed congrHAdd lean_r49 lean_r35
let lean_s147 := by timed congrHAdd lean_r52 lean_s146
let lean_s148 := by timed congrHAdd lean_r46 lean_s147
let lean_s149 := by timed congrHAdd lean_r88 lean_s148
have lean_s150 : (Eq let139 let149) := by timed congrHAdd lean_r90 lean_s149
have lean_s151 : let210 := by timed Eq.trans lean_s150 lean_r60
have lean_s152 : let210 := by timed Eq.trans lean_r54 lean_s151
let lean_s153 := by timed flipCongrArg lean_s152 [GE.ge]
have lean_s154 : (Eq let115 let115) := by timed rfl
have lean_s155 : (Eq let187 let123) := by timed congr lean_s153 lean_s154
have lean_s156 : (Eq let187 let114) := by timed Eq.trans lean_s155 lean_r43
have lean_s157 : (Eq let188 let130) := by timed flipCongrArg lean_s156 [Not]
have lean_s158 : (Eq let188 let113) := by timed Eq.trans lean_s157 lean_r48
let lean_s159 := by timed congr lean_s145 lean_s158
let lean_s160 := by timed congr lean_s141 lean_s159
let lean_s161 := by timed congr lean_s130 lean_s160
let lean_s162 := by timed congr lean_s119 lean_s161
let lean_s163 := by timed congr lean_s109 lean_s162
let lean_s164 := by timed congr lean_s100 lean_s163
let lean_s165 := by timed congr lean_s91 lean_s164
let lean_s166 := by timed congr lean_s82 lean_s165
let lean_s167 := by timed congr lean_s78 lean_s166
have lean_s168 : (Eq let199 let209) := by timed congr lean_s66 lean_s167
have lean_s169 : (Eq let200 let209) := by timed Eq.trans lean_r87 lean_s168
have lean_s170 : let209 := by timed eqResolve lean_a96 lean_s169
have lean_s171 : let113 := by andElim lean_s170, 10
let lean_s172 := by R2 lean_s52, lean_s171, let113, [(- 1), 0]
have lean_s173 : let38 := by andElim lean_s170, 8
let lean_s174 := by R1 lean_s172, lean_s173, let37, [(- 1), 0]
have lean_s175 : let183 := by andElim lean_s170, 5
let lean_s176 := by R2 lean_s174, lean_s175, let183, [(- 1), 0]
have lean_s177 : let18 := by andElim lean_s170, 4
let lean_s178 := by R1 lean_s176, lean_s177, let17, [(- 1), 0]
have lean_s179 : let150 := by andElim lean_s170, 3
let lean_s180 := by R1 lean_s178, lean_s179, let133, [(- 1), 0]
have lean_s181 : let9 := by andElim lean_s170, 2
let lean_s182 := by R1 lean_s180, lean_s181, let8, [(- 1), 0]
have lean_s183 : let30 := by andElim lean_s170, 1
let lean_s184 := by R1 lean_s182, lean_s183, let29, [(- 1), 0]
have lean_s185 : let185 := by andElim lean_s170, 0
exact (show False from by R2 lean_s184, lean_s185, let185, [0, 0])


