open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x4 : Int}
variable {x9 : Int}
variable {x1 : Int}
variable {x6 : Int}
variable {x3 : Int}
variable {x0 : Int}
variable {x7 : Int}
variable {x2 : Int}
variable {x8 : Int}
variable {x5 : Int}
variable {x0 : Int}
variable {x3 : Int}
variable {x1 : Int}
variable {x7 : Int}
variable {x9 : Int}
variable {x2 : Int}
variable {x6 : Int}
variable {x8 : Int}
variable {x4 : Int}
variable {x5 : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 1)
  let let6 := (Neg.neg let5)
  let let7 := (binrel% HMul.hMul let6 x9)
  let let8 := (binrel% HMul.hMul let6 x6)
  let let9 := (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd let8 let7))
  let let10 := (binrel% GE.ge let9 let1)
  let let11 := (Not let10)
  let let12 := (binrel% LT.lt let9 let1)
  let let13 := (binrel% HDiv.hDiv let5 (Int.ofNat 3))
  let let14 := (binrel% GT.gt let13 let1)
  let let15 := (Neg.neg let13)
  let let16 := (binrel% LT.lt let15 let1)
  let let17 := (binrel% GE.ge x6 let1)
  let let18 := (Not let17)
  let let19 := (binrel% LT.lt x6 let1)
  let let20 := (binrel% HMul.hMul let13 x8)
  let let21 := (binrel% HMul.hMul let15 x6)
  let let22 := (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x5) (binrel% HAdd.hAdd let21 let20)))
  let let23 := (binrel% HMul.hMul let6 x8)
  let let24 := (binrel% HMul.hMul let6 x5)
  let let25 := (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6 let23)))
  let let26 := (binrel% HMul.hMul let15 let25)
  let let27 := (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x7) (binrel% HAdd.hAdd let20 (binrel% HMul.hMul let13 x9)))
  let let28 := (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let23 let7))
  let let29 := (binrel% HMul.hMul let15 let28)
  let let30 := (Int.ofNat 6)
  let let31 := (binrel% HDiv.hDiv let5 let30)
  let let32 := (Neg.neg let31)
  let let33 := (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x5) (binrel% HMul.hMul let32 x6))
  let let34 := (Int.ofNat 2)
  let let35 := (binrel% HMul.hMul let34 x5)
  let let36 := (binrel% HAdd.hAdd let35 x6)
  let let37 := (binrel% HMul.hMul let32 let36)
  let let38 := (Rat.ofInt 0)
  let let39 := (binrel% HDiv.hDiv (Int.ofNat 5) let30)
  let let40 := (binrel% HMul.hMul let39 x6)
  let let41 := (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x7) let20)
  let let42 := (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x4) (binrel% HAdd.hAdd let21 (binrel% HMul.hMul let15 x9)))
  let let43 := (Rat.ofInt let23)
  let let44 := (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let33 let40))))))
  let let45 := (binrel% HMul.hMul let13 let6)
  let let46 := (binrel% HMul.hMul let32 let6)
  let let47 := (Neg.neg let39)
  let let48 := (binrel% HMul.hMul let39 let6)
  let let49 := (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let31 let47))))))
  let let50 := (binrel% GE.ge let38 let38)
  let let51 := (Not True)
  let let52 := (binrel% HMul.hMul let6 x7)
  let let53 := (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let52 let7)))) let1)
  let let54 := (binrel% HMul.hMul let6 x0)
  let let55 := (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 x9))))
  let let56 := (binrel% LE.le let55 let1)
  let let57 := (binrel% HMul.hMul let5 x6)
  let let58 := (binrel% LE.le x6 let6)
  let let59 := (binrel% HMul.hMul let6 x4)
  let let60 := (binrel% HMul.hMul let6 x2)
  let let61 := (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let59 x6))
  let let62 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let59 let1)))))))))
  let let63 := (binrel% GE.ge let25 let1)
  let let64 := (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let8 x8)))
  let let65 := (binrel% LE.le let64 let1)
  let let66 := (binrel% HMul.hMul let1 x4)
  let let67 := (binrel% HMul.hMul let15 let1)
  let let68 := (binrel% HMul.hMul let13 let1)
  let let69 := (binrel% HMul.hMul let3 let6)
  let let70 := (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let46 let48))))))
  let let71 := (binrel% HAdd.hAdd x7 x8)
  let let72 := (binrel% HMul.hMul let13 let71)
  let let73 := (binrel% HMul.hMul let13 let9)
  let let74 := (binrel% HMul.hMul let3 x8)
  let let75 := (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let37 let40))))))
  let let76 := (binrel% GE.ge let75 let70)
  let let77 := (Not let76)
  let let78 := (binrel% LT.lt let75 let70)
  let let79 := (Not let11)
  let let80 := (Eq let10 let79)
  let let81 := (Eq let79 let10)
  let let82 := (binrel% HAdd.hAdd let59 let24)
  let let83 := (binrel% HAdd.hAdd let1 let1)
  let let84 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let59 let83))))))))
  let let85 := (binrel% HMul.hMul let1 x6)
  let let86 := (Eq let17 let17)
  let let87 := (binrel% HMul.hMul let5 x8)
  let let88 := (binrel% HMul.hMul let1 x7)
  let let89 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 let83))
  let let90 := (binrel% HAdd.hAdd let1 let89)
  let let91 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let1 let90)))))
  let let92 := (binrel% GE.ge let28 let1)
  let let93 := (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x8 x9))
  let let94 := (binrel% LE.le let93 let1)
  let let95 := (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 x8))))) let6)
  let let96 := (binrel% HMul.hMul let6 x3)
  let let97 := (binrel% HMul.hMul let6 x1)
  let let98 := (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let8 let23)))))
  let let99 := (binrel% LE.le let98 let5)
  let let100 := (binrel% HMul.hMul let5 x2)
  let let101 := (binrel% HAdd.hAdd let54 let1)
  let let102 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let96 let101))))))))
  let let103 := (binrel% HMul.hMul let1 x2)
  let let104 := (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x5 let89))))))
  let let105 := (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let54 let89))))))
  let let106 := (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let23 x9)))) let1)
  let let107 := (binrel% HMul.hMul (Neg.neg let34) x5)
  let let108 := (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 let7))))
  let let109 := (binrel% LE.le let108 let1)
  let let110 := (binrel% HMul.hMul let1 x0)
  let let111 := (binrel% GT.gt let39 let1)
  let let112 := (binrel% LE.le let9 let6)
  let let113 := (binrel% HMul.hMul let1 x5)
  let let114 := (binrel% HAdd.hAdd let107 let8)
  let let115 := (binrel% HAdd.hAdd let24 let54)
  let let116 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 let115))))))))
  let let117 := (binrel% GE.ge let71 let1)
  let let118 := (Not let117)
  let let119 := (Not let118)
  let let120 := (Eq let117 let119)
  let let121 := (Eq let119 let117)
  let let122 := (binrel% HMul.hMul let5 x7)
  let let123 := (Eq let117 let117)
  let let124 := (binrel% HMul.hMul let5 x5)
  let let125 := (binrel% LT.lt let32 let1)
  let let126 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let8 let90)))))
  let let127 := (binrel% HMul.hMul let5 x0)
  let let128 := (binrel% HMul.hMul let1 x9)
  let let129 := (binrel% HMul.hMul let1 x1)
  let let130 := (binrel% HMul.hMul let5 x3)
  let let131 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let1 x7)))))))))
  let let132 := (binrel% GE.ge (binrel% HAdd.hAdd x0 let8) let5)
  let let133 := (binrel% HAdd.hAdd let54 x6)
  let let134 := (binrel% LE.le let133 let6)
  let let135 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let60 x5))
  let let136 := (Not (binrel% GE.ge let135 let5))
  let let137 := (binrel% LE.le let135 let1)
  let let138 := (Not let18)
  let let139 := (Eq let17 let138)
  let let140 := (Eq let138 let17)
  let let141 := (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 let135)))))))
  let let142 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let54 let101))))))))
  let let143 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let1 let7)))))))))
  let let144 := (binrel% HMul.hMul let1 x3)
  let let145 := (binrel% LE.le let71 let6)
  let let146 := (binrel% HAdd.hAdd let52 x9)
  let let147 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x9 let89))))))
  let let148 := (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 let8)) let1)
  let let149 := (binrel% LE.le let61 let1)
  let let150 := (Eq let10 let10)
  let let151 := (binrel% HMul.hMul let1 x8)
  let let152 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x9 let52)))))))))
  let let153 := (binrel% HMul.hMul let5 x9)
  let let154 := (binrel% GE.ge let36 let6)
  let let155 := (binrel% LE.le let114 let5)
  let let156 := (binrel% LT.lt let71 let1)
  let let157 := (binrel% GE.ge (binrel% HAdd.hAdd x7 let7) let6)
  let let158 := (binrel% LE.le let146 let5)
  let let159 := (binrel% GE.ge x8 let6)
  let let160 := (binrel% LE.le let23 let5)
  let let161 := (binrel% HMul.hMul let5 x4)
  let let162 := (binrel% GE.ge (binrel% HAdd.hAdd x4 x5) let1)
  let let163 := (binrel% LE.le let82 let1)
  let let164 := (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let96 let89))))))
  let let165 := (Not let159)
  let let166 := (binrel% LT.lt x8 let6)
  let let167 := (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let151 let122)))))))))
  let let168 := (binrel% LE.le let167 let6)
  let let169 := (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let60 let124)))))))))
  let let170 := (binrel% LE.le let169 let1)
  let let171 := (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let54 let128)))))))))
  let let172 := (binrel% LE.le let171 let5)
  let let173 := (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let66 let113)))))))))
  let let174 := (binrel% LE.le let173 let1)
  let let175 := (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let129 let7)))))))))
  let let176 := (binrel% LE.le let175 let1)
  let let177 := (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let113 let144)))))))))
  let let178 := (binrel% LE.le let177 let6)
  let let179 := (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let54 let88)))))))))
  let let180 := (binrel% LE.le let179 let6)
  let let181 := (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let110 let144)))))))))
  let let182 := (binrel% LE.le let181 let1)
  let let183 := (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let59 let151)))))))))
  let let184 := (binrel% LE.le let183 let1)
  let let185 := (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let153 let52)))))))))
  let let186 := (binrel% LE.le let185 let1)
  let let187 := (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let113 let115))))))))
  let let188 := (binrel% LE.le let187 let5)
  let let189 := (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let103 let66)))))))))
  let let190 := (binrel% LE.le let189 let5)
  let let191 := (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let103 let103)))))))))
  let let192 := (binrel% LE.le let191 let1)
  let let193 := (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let66 let151)))))))))
  let let194 := (binrel% LE.le let193 let5)
  let let195 := (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let110 let110)))))))))
  let let196 := (binrel% LE.le let195 let6)
  let let197 := (And let196 (And let194 (And let192 (And let190 (And let188 (And let186 (And let184 (And let182 (And let180 (And let178 (And let176 (And let174 (And let172 (And let170 let168))))))))))))))
  let let198 := (And let11 (And let159 (And let53 (And let157 (And let154 (And let92 (And let148 (And let63 (And let132 (And let18 (And let106 (And let162 (And let95 (And let136 let118))))))))))))))
  let let199 := (Not let63)
  let let200 := (Not let92)
  let let201 := (Not let154)
  let let202 := (Or let199 let165)
  let let203 := (Or let17 (Or let201 (Or let200 (Or let117 (Or let10 let202)))))
  let let204 := (Or let138 (Or let201 (Or let200 (Or let119 (Or let79 let202)))))
  let let205 := (Or let165 False)
  let let206 := (binrel% LE.le let40 let48)
  let let207 := (And let111 let58)
  let let208 := (binrel% LE.le let37 let46)
  let let209 := (And let125 let154)
  let let210 := (binrel% LE.le let29 let67)
  let let211 := (And let16 let92)
  let let212 := (binrel% LE.le let72 let45)
  let let213 := (And let14 let145)
  let let214 := (binrel% LT.lt let73 let68)
  let let215 := (And let14 let12)
  let let216 := (binrel% LE.le let26 let67)
  let let217 := (And let16 let63)
  let let218 := (binrel% LE.le let74 let69)
  let let219 := (And let4 let159)
(Eq let4 True) → (Eq let12 let11) → (Eq let14 True) → (Eq let16 True) → (Eq let19 let18) → (Eq let26 let22) → (Eq let29 let27) → (Eq let37 let33) → (Eq let44 let38) → (Eq let45 let15) → (Eq let46 let31) → (Eq let48 let47) → (Eq let49 let38) → (Eq let50 True) → (Eq let51 False) → (Eq let56 let53) → (Eq let57 x6) → (Eq let58 let18) → (Eq let62 let61) → (Eq let65 let63) → (Eq let66 let1) → (Eq let78 let77) → (Eq let81 let80) → (Eq let84 let82) → (Eq let85 let1) → (Eq let86 True) → (Eq let87 x8) → (Eq let88 let1) → (Eq let91 x6) → (Eq let94 let92) → (Eq let99 let95) → (Eq let100 x2) → (Eq let102 let98) → (Eq let103 let1) → (Eq let67 let38) → (Eq let104 let64) → (Eq let105 let55) → (Eq let109 let106) → (Eq let110 let1) → (Eq let111 True) → (Eq let112 let11) → (Eq let113 let1) → (Eq let116 let114) → (Eq let121 let120) → (Eq let72 let41) → (Eq let122 x7) → (Eq let123 True) → (Eq let124 x5) → (Eq let125 True) → (Eq let126 let9) → (Eq let69 let2) → (Eq let127 x0) → let121 → (Eq let128 let1) → (Eq let129 let1) → (Eq let130 x3) → (Eq let131 let71) → (Eq let134 let132) → (Eq let137 let136) → (Eq let140 let139) → (Eq let141 let135) → (Eq let142 let133) → (Eq let143 let108) → (Eq let144 let1) → (Eq let145 let118) → (Eq let147 let146) → (Eq let149 let148) → (Eq let73 let42) → (Eq let150 True) → (Eq let151 let1) → (Eq let152 let93) → (Eq let153 x9) → (Eq let155 let154) → (Eq let156 let118) → (Eq let158 let157) → (Eq let160 let159) → (Eq let161 x4) → (Eq let163 let162) → (Eq let164 let23) → (Eq let74 let43) → let81 → let140 → (Eq let68 let38) → (Eq let166 let165) → let197 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 1)
  let let6 := (Neg.neg let5)
  let let7 := (binrel% HMul.hMul let6 x9)
  let let8 := (binrel% HMul.hMul let6 x6)
  let let9 := (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd let8 let7))
  let let10 := (binrel% GE.ge let9 let1)
  let let11 := (Not let10)
  let let12 := (binrel% LT.lt let9 let1)
  let let13 := (binrel% HDiv.hDiv let5 (Int.ofNat 3))
  let let14 := (binrel% GT.gt let13 let1)
  let let15 := (Neg.neg let13)
  let let16 := (binrel% LT.lt let15 let1)
  let let17 := (binrel% GE.ge x6 let1)
  let let18 := (Not let17)
  let let19 := (binrel% LT.lt x6 let1)
  let let20 := (binrel% HMul.hMul let13 x8)
  let let21 := (binrel% HMul.hMul let15 x6)
  let let22 := (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x4) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x5) (binrel% HAdd.hAdd let21 let20)))
  let let23 := (binrel% HMul.hMul let6 x8)
  let let24 := (binrel% HMul.hMul let6 x5)
  let let25 := (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6 let23)))
  let let26 := (binrel% HMul.hMul let15 let25)
  let let27 := (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x7) (binrel% HAdd.hAdd let20 (binrel% HMul.hMul let13 x9)))
  let let28 := (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd let23 let7))
  let let29 := (binrel% HMul.hMul let15 let28)
  let let30 := (Int.ofNat 6)
  let let31 := (binrel% HDiv.hDiv let5 let30)
  let let32 := (Neg.neg let31)
  let let33 := (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x5) (binrel% HMul.hMul let32 x6))
  let let34 := (Int.ofNat 2)
  let let35 := (binrel% HMul.hMul let34 x5)
  let let36 := (binrel% HAdd.hAdd let35 x6)
  let let37 := (binrel% HMul.hMul let32 let36)
  let let38 := (Rat.ofInt 0)
  let let39 := (binrel% HDiv.hDiv (Int.ofNat 5) let30)
  let let40 := (binrel% HMul.hMul let39 x6)
  let let41 := (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x7) let20)
  let let42 := (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x4) (binrel% HAdd.hAdd let21 (binrel% HMul.hMul let15 x9)))
  let let43 := (Rat.ofInt let23)
  let let44 := (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let33 let40))))))
  let let45 := (binrel% HMul.hMul let13 let6)
  let let46 := (binrel% HMul.hMul let32 let6)
  let let47 := (Neg.neg let39)
  let let48 := (binrel% HMul.hMul let39 let6)
  let let49 := (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let31 let47))))))
  let let50 := (binrel% GE.ge let38 let38)
  let let51 := (Not True)
  let let52 := (binrel% HMul.hMul let6 x7)
  let let53 := (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let52 let7)))) let1)
  let let54 := (binrel% HMul.hMul let6 x0)
  let let55 := (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 x9))))
  let let56 := (binrel% LE.le let55 let1)
  let let57 := (binrel% HMul.hMul let5 x6)
  let let58 := (binrel% LE.le x6 let6)
  let let59 := (binrel% HMul.hMul let6 x4)
  let let60 := (binrel% HMul.hMul let6 x2)
  let let61 := (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let59 x6))
  let let62 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let59 let1)))))))))
  let let63 := (binrel% GE.ge let25 let1)
  let let64 := (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd let8 x8)))
  let let65 := (binrel% LE.le let64 let1)
  let let66 := (binrel% HMul.hMul let1 x4)
  let let67 := (binrel% HMul.hMul let15 let1)
  let let68 := (binrel% HMul.hMul let13 let1)
  let let69 := (binrel% HMul.hMul let3 let6)
  let let70 := (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let46 let48))))))
  let let71 := (binrel% HAdd.hAdd x7 x8)
  let let72 := (binrel% HMul.hMul let13 let71)
  let let73 := (binrel% HMul.hMul let13 let9)
  let let74 := (binrel% HMul.hMul let3 x8)
  let let75 := (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let37 let40))))))
  let let76 := (binrel% GE.ge let75 let70)
  let let77 := (Not let76)
  let let78 := (binrel% LT.lt let75 let70)
  let let79 := (Not let11)
  let let80 := (Eq let10 let79)
  let let81 := (Eq let79 let10)
  let let82 := (binrel% HAdd.hAdd let59 let24)
  let let83 := (binrel% HAdd.hAdd let1 let1)
  let let84 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let59 let83))))))))
  let let85 := (binrel% HMul.hMul let1 x6)
  let let86 := (Eq let17 let17)
  let let87 := (binrel% HMul.hMul let5 x8)
  let let88 := (binrel% HMul.hMul let1 x7)
  let let89 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 let83))
  let let90 := (binrel% HAdd.hAdd let1 let89)
  let let91 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let1 let90)))))
  let let92 := (binrel% GE.ge let28 let1)
  let let93 := (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x8 x9))
  let let94 := (binrel% LE.le let93 let1)
  let let95 := (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 x8))))) let6)
  let let96 := (binrel% HMul.hMul let6 x3)
  let let97 := (binrel% HMul.hMul let6 x1)
  let let98 := (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let8 let23)))))
  let let99 := (binrel% LE.le let98 let5)
  let let100 := (binrel% HMul.hMul let5 x2)
  let let101 := (binrel% HAdd.hAdd let54 let1)
  let let102 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let96 let101))))))))
  let let103 := (binrel% HMul.hMul let1 x2)
  let let104 := (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x5 let89))))))
  let let105 := (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let54 let89))))))
  let let106 := (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let23 x9)))) let1)
  let let107 := (binrel% HMul.hMul (Neg.neg let34) x5)
  let let108 := (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 let7))))
  let let109 := (binrel% LE.le let108 let1)
  let let110 := (binrel% HMul.hMul let1 x0)
  let let111 := (binrel% GT.gt let39 let1)
  let let112 := (binrel% LE.le let9 let6)
  let let113 := (binrel% HMul.hMul let1 x5)
  let let114 := (binrel% HAdd.hAdd let107 let8)
  let let115 := (binrel% HAdd.hAdd let24 let54)
  let let116 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 let115))))))))
  let let117 := (binrel% GE.ge let71 let1)
  let let118 := (Not let117)
  let let119 := (Not let118)
  let let120 := (Eq let117 let119)
  let let121 := (Eq let119 let117)
  let let122 := (binrel% HMul.hMul let5 x7)
  let let123 := (Eq let117 let117)
  let let124 := (binrel% HMul.hMul let5 x5)
  let let125 := (binrel% LT.lt let32 let1)
  let let126 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let8 let90)))))
  let let127 := (binrel% HMul.hMul let5 x0)
  let let128 := (binrel% HMul.hMul let1 x9)
  let let129 := (binrel% HMul.hMul let1 x1)
  let let130 := (binrel% HMul.hMul let5 x3)
  let let131 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let1 x7)))))))))
  let let132 := (binrel% GE.ge (binrel% HAdd.hAdd x0 let8) let5)
  let let133 := (binrel% HAdd.hAdd let54 x6)
  let let134 := (binrel% LE.le let133 let6)
  let let135 := (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let60 x5))
  let let136 := (Not (binrel% GE.ge let135 let5))
  let let137 := (binrel% LE.le let135 let1)
  let let138 := (Not let18)
  let let139 := (Eq let17 let138)
  let let140 := (Eq let138 let17)
  let let141 := (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 let135)))))))
  let let142 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let54 let101))))))))
  let let143 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let1 let7)))))))))
  let let144 := (binrel% HMul.hMul let1 x3)
  let let145 := (binrel% LE.le let71 let6)
  let let146 := (binrel% HAdd.hAdd let52 x9)
  let let147 := (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x9 let89))))))
  let let148 := (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 let8)) let1)
  let let149 := (binrel% LE.le let61 let1)
  let let150 := (Eq let10 let10)
  let let151 := (binrel% HMul.hMul let1 x8)
  let let152 := (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd x9 let52)))))))))
  let let153 := (binrel% HMul.hMul let5 x9)
  let let154 := (binrel% GE.ge let36 let6)
  let let155 := (binrel% LE.le let114 let5)
  let let156 := (binrel% LT.lt let71 let1)
  let let157 := (binrel% GE.ge (binrel% HAdd.hAdd x7 let7) let6)
  let let158 := (binrel% LE.le let146 let5)
  let let159 := (binrel% GE.ge x8 let6)
  let let160 := (binrel% LE.le let23 let5)
  let let161 := (binrel% HMul.hMul let5 x4)
  let let162 := (binrel% GE.ge (binrel% HAdd.hAdd x4 x5) let1)
  let let163 := (binrel% LE.le let82 let1)
  let let164 := (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let1 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd let96 let89))))))
  let let165 := (Not let159)
  let let166 := (binrel% LT.lt x8 let6)
  let let167 := (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let151 let122)))))))))
  let let168 := (binrel% LE.le let167 let6)
  let let169 := (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let60 let124)))))))))
  let let170 := (binrel% LE.le let169 let1)
  let let171 := (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let54 let128)))))))))
  let let172 := (binrel% LE.le let171 let5)
  let let173 := (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let66 let113)))))))))
  let let174 := (binrel% LE.le let173 let1)
  let let175 := (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let129 let7)))))))))
  let let176 := (binrel% LE.le let175 let1)
  let let177 := (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let113 let144)))))))))
  let let178 := (binrel% LE.le let177 let6)
  let let179 := (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let54 let88)))))))))
  let let180 := (binrel% LE.le let179 let6)
  let let181 := (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let110 let144)))))))))
  let let182 := (binrel% LE.le let181 let1)
  let let183 := (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let59 let151)))))))))
  let let184 := (binrel% LE.le let183 let1)
  let let185 := (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let153 let52)))))))))
  let let186 := (binrel% LE.le let185 let1)
  let let187 := (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let113 let115))))))))
  let let188 := (binrel% LE.le let187 let5)
  let let189 := (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let103 let66)))))))))
  let let190 := (binrel% LE.le let189 let5)
  let let191 := (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let103 let103)))))))))
  let let192 := (binrel% LE.le let191 let1)
  let let193 := (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let66 let151)))))))))
  let let194 := (binrel% LE.le let193 let5)
  let let195 := (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let110 let110)))))))))
  let let196 := (binrel% LE.le let195 let6)
  let let197 := (And let196 (And let194 (And let192 (And let190 (And let188 (And let186 (And let184 (And let182 (And let180 (And let178 (And let176 (And let174 (And let172 (And let170 let168))))))))))))))
  let let198 := (And let11 (And let159 (And let53 (And let157 (And let154 (And let92 (And let148 (And let63 (And let132 (And let18 (And let106 (And let162 (And let95 (And let136 let118))))))))))))))
  let let199 := (Not let63)
  let let200 := (Not let92)
  let let201 := (Not let154)
  let let202 := (Or let199 let165)
  let let203 := (Or let17 (Or let201 (Or let200 (Or let117 (Or let10 let202)))))
  let let204 := (Or let138 (Or let201 (Or let200 (Or let119 (Or let79 let202)))))
  let let205 := (Or let165 False)
  let let206 := (binrel% LE.le let40 let48)
  let let207 := (And let111 let58)
  let let208 := (binrel% LE.le let37 let46)
  let let209 := (And let125 let154)
  let let210 := (binrel% LE.le let29 let67)
  let let211 := (And let16 let92)
  let let212 := (binrel% LE.le let72 let45)
  let let213 := (And let14 let145)
  let let214 := (binrel% LT.lt let73 let68)
  let let215 := (And let14 let12)
  let let216 := (binrel% LE.le let26 let67)
  let let217 := (And let16 let63)
  let let218 := (binrel% LE.le let74 let69)
  let let219 := (And let4 let159)
fun lean_r0 : (Eq let4 True) => -- EVALUATE
fun lean_r1 : (Eq let12 let11) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let14 True) => -- EVALUATE
fun lean_r3 : (Eq let16 True) => -- EVALUATE
fun lean_r4 : (Eq let19 let18) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let26 let22) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let29 let27) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let37 let33) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let44 let38) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let45 let15) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let46 let31) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let48 let47) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let49 let38) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let50 True) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let51 False) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let56 let53) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let57 x6) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let58 let18) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let62 let61) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let65 let63) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let66 let1) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let78 let77) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let81 let80) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let84 let82) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let85 let1) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let86 True) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq let87 x8) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let88 let1) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let91 x6) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let94 let92) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let99 let95) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let100 x2) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let102 let98) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let103 let1) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let67 let38) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let104 let64) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let105 let55) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let109 let106) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let110 let1) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let111 True) => -- EVALUATE
fun lean_r40 : (Eq let112 let11) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let113 let1) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let116 let114) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let121 let120) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let72 let41) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let122 x7) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let123 True) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let124 x5) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let125 True) => -- EVALUATE
fun lean_r49 : (Eq let126 let9) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let69 let2) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let127 x0) => -- THEORY_REWRITE_ARITH
fun lean_r52 : let121 => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let128 let1) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let129 let1) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let130 x3) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let131 let71) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let134 let132) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let137 let136) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let140 let139) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let141 let135) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let142 let133) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let143 let108) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let144 let1) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let145 let118) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let147 let146) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let149 let148) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let73 let42) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let150 True) => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq let151 let1) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let152 let93) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let153 x9) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let155 let154) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let156 let118) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let158 let157) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let160 let159) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let161 x4) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let163 let162) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let164 let23) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let74 let43) => -- THEORY_REWRITE_ARITH
fun lean_r80 : let81 => -- THEORY_REWRITE_BOOL
fun lean_r81 : let140 => -- THEORY_REWRITE_BOOL
fun lean_r82 : (Eq let68 let38) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let166 let165) => -- THEORY_REWRITE_ARITH
fun lean_a84 : let197 => by
have lean_s0 : (Or let138 (Or let201 (Or let200 (Or let119 (Or let79 (Or let199 let205)))))) :=
  (scope (fun lean_a85 : let18 =>
    (scope (fun lean_a86 : let154 =>
      (scope (fun lean_a87 : let92 =>
        (scope (fun lean_a88 : let118 =>
          (scope (fun lean_a89 : let11 =>
            (scope (fun lean_a90 : let63 =>
              (scope (fun lean_a91 : let159 =>
                have lean_s0 : let205 :=
                  (scope (fun lean_a92 : let159 =>
                    have lean_s0 : let4 := by timed trueElim lean_r0
                    have lean_s1 : let219 := by timed And.intro lean_s0 lean_a92
                    have lean_s2 : (Implies let219 let218) := by arithMulNeg [x8, let6, let3], 3
                    have lean_s3 : let218 := by timed modusPonens lean_s1 lean_s2
                    have lean_s4 : let16 := by timed trueElim lean_r3
                    have lean_s5 : let217 := by timed And.intro lean_s4 lean_a90
                    have lean_s6 : (Implies let217 let216) := by arithMulNeg [let25, let1, let15], 3
                    have lean_s7 : let216 := by timed modusPonens lean_s5 lean_s6
                    have lean_s8 : let14 := by timed trueElim lean_r2
                    have lean_s9 : (Eq let11 let12) := by timed Eq.symm lean_r1
                    have lean_s10 : let12 := by timed eqResolve lean_a89 lean_s9
                    have lean_s11 : let215 := by timed And.intro lean_s8 lean_s10
                    have lean_s12 : (Implies let215 let214) := by arithMulPos [let9, let1, let13], 0
                    have lean_s13 : let214 := by timed modusPonens lean_s11 lean_s12
                    have lean_s14 : (Eq let118 let156) := by timed Eq.symm lean_r73
                    have lean_s15 : let156 := by timed eqResolve lean_a88 lean_s14
                    have lean_s16 : let145 := by intTightUb lean_s15
                    have lean_s17 : let213 := by timed And.intro lean_s8 lean_s16
                    have lean_s18 : (Implies let213 let212) := by arithMulPos [let71, let6, let13], 1
                    have lean_s19 : let212 := by timed modusPonens lean_s17 lean_s18
                    have lean_s20 : let211 := by timed And.intro lean_s4 lean_a87
                    have lean_s21 : (Implies let211 let210) := by arithMulNeg [let28, let1, let15], 3
                    have lean_s22 : let210 := by timed modusPonens lean_s20 lean_s21
                    have lean_s23 : let125 := by timed trueElim lean_r48
                    have lean_s24 : let209 := by timed And.intro lean_s23 lean_a86
                    have lean_s25 : (Implies let209 let208) := by arithMulNeg [let36, let6, let32], 3
                    have lean_s26 : let208 := by timed modusPonens lean_s24 lean_s25
                    have lean_s27 : let111 := by timed trueElim lean_r39
                    have lean_s28 : (Eq let18 let19) := by timed Eq.symm lean_r4
                    have lean_s29 : let19 := by timed eqResolve lean_a85 lean_s28
                    have lean_s30 : let58 := by intTightUb lean_s29
                    have lean_s31 : let207 := by timed And.intro lean_s27 lean_s30
                    have lean_s32 : (Implies let207 let206) := by arithMulPos [x6, let6, let39], 1
                    have lean_s33 : let206 := by timed modusPonens lean_s31 lean_s32
                    have lean_s34 : let78 := by sumBounds [lean_s3, lean_s7, lean_s13, lean_s19, lean_s22, lean_s26, lean_s33]
                    have lean_s35 : (Eq let40 let40) := by timed rfl
                    let lean_s36 := by timed congrHAdd lean_r7 lean_s35
                    let lean_s37 := by timed congrHAdd lean_r6 lean_s36
                    let lean_s38 := by timed congrHAdd lean_r44 lean_s37
                    let lean_s39 := by timed congrHAdd lean_r67 lean_s38
                    let lean_s40 := by timed congrHAdd lean_r5 lean_s39
                    have lean_s41 : (Eq let75 let44) := by timed congrHAdd lean_r79 lean_s40
                    have lean_s42 : (Eq let75 let38) := by timed Eq.trans lean_s41 lean_r8
                    let lean_s43 := by timed flipCongrArg lean_s42 [GE.ge]
                    let lean_s44 := by timed congrHAdd lean_r10 lean_r11
                    let lean_s45 := by timed congrHAdd lean_r34 lean_s44
                    let lean_s46 := by timed congrHAdd lean_r9 lean_s45
                    let lean_s47 := by timed congrHAdd lean_r82 lean_s46
                    let lean_s48 := by timed congrHAdd lean_r34 lean_s47
                    have lean_s49 : (Eq let70 let49) := by timed congrHAdd lean_r50 lean_s48
                    have lean_s50 : (Eq let70 let38) := by timed Eq.trans lean_s49 lean_r12
                    have lean_s51 : (Eq let76 let50) := by timed congr lean_s43 lean_s50
                    have lean_s52 : (Eq let76 True) := by timed Eq.trans lean_s51 lean_r13
                    have lean_s53 : (Eq let77 let51) := by timed flipCongrArg lean_s52 [Not]
                    have lean_s54 : (Eq let77 False) := by timed Eq.trans lean_s53 lean_r14
                    have lean_s55 : (Eq let78 False) := by timed Eq.trans lean_r21 lean_s54
                    show False from by timed eqResolve lean_s34 lean_s55
                  ))
                have lean_s1 : let165 := by liftOrNToNeg lean_s0
                have lean_s2 : (Eq let165 let166) := by timed Eq.symm lean_r83
                have lean_s3 : let166 := by timed eqResolve lean_s1 lean_s2
                have lean_s4 : let165 := by timed eqResolve lean_s3 lean_r83
                show False from by timed contradiction lean_a91 lean_s4
  ))))))))))))))
have lean_s1 : (Not (And let18 (And let154 (And let92 (And let118 (And let11 (And let63 let159))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let204 := by timed flipNotAnd lean_s1 [let18, let154, let92, let118, let11, let63, let159]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let86 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let139 let86) := by timed congr lean_s5 lean_r81
have lean_s7 : (Eq let139 True) := by timed Eq.trans lean_s6 lean_r25
have lean_s8 : (Eq let140 True) := by timed Eq.trans lean_r59 lean_s7
have lean_s9 : let140 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq let201 let201) := by timed rfl
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq let200 let200) := by timed rfl
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : let123 := by timed rfl
let lean_s16 := by timed flipCongrArg lean_s15 [Eq]
have lean_s17 : (Eq let120 let123) := by timed congr lean_s16 lean_r52
have lean_s18 : (Eq let120 True) := by timed Eq.trans lean_s17 lean_r46
have lean_s19 : (Eq let121 True) := by timed Eq.trans lean_r43 lean_s18
have lean_s20 : let121 := by timed trueElim lean_s19
let lean_s21 := by timed congr lean_s3 lean_s20
have lean_s22 : let150 := by timed rfl
let lean_s23 := by timed flipCongrArg lean_s22 [Eq]
have lean_s24 : (Eq let80 let150) := by timed congr lean_s23 lean_r80
have lean_s25 : (Eq let80 True) := by timed Eq.trans lean_s24 lean_r68
have lean_s26 : (Eq let81 True) := by timed Eq.trans lean_r22 lean_s25
have lean_s27 : let81 := by timed trueElim lean_s26
let lean_s28 := by timed congr lean_s3 lean_s27
have lean_s29 : (Eq let199 let199) := by timed rfl
let lean_s30 := by timed congr lean_s3 lean_s29
have lean_s31 : (Eq let165 let165) := by timed rfl
let lean_s32 := by timed congr lean_s30 lean_s31
let lean_s33 := by timed congr lean_s28 lean_s32
let lean_s34 := by timed congr lean_s21 lean_s33
let lean_s35 := by timed congr lean_s14 lean_s34
let lean_s36 := by timed congr lean_s12 lean_s35
have lean_s37 : (Eq let204 let203) := by timed congr lean_s10 lean_s36
have lean_s38 : let203 := by timed eqResolve lean_s2 lean_s37
have lean_s39 : (Or let10 (Or let17 (Or let117 (Or let165 (Or let201 (Or let200 let199)))))) := by permutateOr lean_s38, [4, 0, 3, 6, 1, 2, 5], (- 1)
have lean_s40 : (Eq And And) := by timed rfl
have lean_s41 : (Eq let7 let7) := by timed rfl
have lean_s42 : (Eq let8 let8) := by timed rfl
let lean_s43 := by timed congrHAdd lean_r38 lean_r38
let lean_s44 := by timed congrHAdd lean_r69 lean_s43
let lean_s45 := by timed congrHAdd lean_r27 lean_s44
let lean_s46 := by timed congrHAdd lean_r33 lean_s45
let lean_s47 := by timed congrHAdd lean_s42 lean_s46
let lean_s48 := by timed congrHAdd lean_s41 lean_s47
let lean_s49 := by timed congrHAdd lean_r76 lean_s48
let lean_s50 := by timed congrHAdd lean_r38 lean_s49
have lean_s51 : (Eq let195 let126) := by timed congrHAdd lean_r54 lean_s50
have lean_s52 : (Eq let195 let9) := by timed Eq.trans lean_s51 lean_r49
let lean_s53 := by timed flipCongrArg lean_s52 [LE.le]
have lean_s54 : (Eq let6 let6) := by timed rfl
have lean_s55 : (Eq let196 let112) := by timed congr lean_s53 lean_s54
have lean_s56 : (Eq let196 let11) := by timed Eq.trans lean_s55 lean_r40
let lean_s57 := by timed congr lean_s40 lean_s56
have lean_s58 : (Eq let23 let23) := by timed rfl
have lean_s59 : (Eq let96 let96) := by timed rfl
let lean_s60 := by timed congrHAdd lean_r20 lean_r69
let lean_s61 := by timed congrHAdd lean_r69 lean_s60
let lean_s62 := by timed congrHAdd lean_r69 lean_s61
let lean_s63 := by timed congrHAdd lean_s59 lean_s62
let lean_s64 := by timed congrHAdd lean_r55 lean_s63
let lean_s65 := by timed congrHAdd lean_s58 lean_s64
let lean_s66 := by timed congrHAdd lean_r38 lean_s65
let lean_s67 := by timed congrHAdd lean_s58 lean_s66
have lean_s68 : (Eq let193 let164) := by timed congrHAdd lean_r26 lean_s67
have lean_s69 : (Eq let193 let23) := by timed Eq.trans lean_s68 lean_r78
let lean_s70 := by timed flipCongrArg lean_s69 [LE.le]
have lean_s71 : (Eq let5 let5) := by timed rfl
have lean_s72 : (Eq let194 let160) := by timed congr lean_s70 lean_s71
have lean_s73 : (Eq let194 let159) := by timed Eq.trans lean_s72 lean_r75
let lean_s74 := by timed congr lean_s40 lean_s73
have lean_s75 : (Eq let24 let24) := by timed rfl
have lean_s76 : (Eq let54 let54) := by timed rfl
let lean_s77 := by timed congrHAdd lean_r33 lean_r33
let lean_s78 := by timed congrHAdd lean_r38 lean_s77
let lean_s79 := by timed congrHAdd lean_r53 lean_s78
let lean_s80 := by timed congrHAdd lean_s76 lean_s79
let lean_s81 := by timed congrHAdd lean_r24 lean_s80
let lean_s82 := by timed congrHAdd lean_s75 lean_s81
let lean_s83 := by timed congrHAdd lean_r71 lean_s82
let lean_s84 := by timed congrHAdd lean_r16 lean_s83
have lean_s85 : (Eq let191 let105) := by timed congrHAdd lean_r45 lean_s84
have lean_s86 : (Eq let191 let55) := by timed Eq.trans lean_s85 lean_r36
let lean_s87 := by timed flipCongrArg lean_s86 [LE.le]
have lean_s88 : (Eq let1 let1) := by timed rfl
have lean_s89 : (Eq let192 let56) := by timed congr lean_s87 lean_s88
have lean_s90 : (Eq let192 let53) := by timed Eq.trans lean_s89 lean_r15
let lean_s91 := by timed congr lean_s40 lean_s90
have lean_s92 : (Eq let52 let52) := by timed rfl
let lean_s93 := by timed congrHAdd lean_r33 lean_r20
let lean_s94 := by timed congrHAdd lean_r33 lean_s93
let lean_s95 := by timed congrHAdd lean_r38 lean_s94
let lean_s96 := by timed congrHAdd lean_r71 lean_s95
let lean_s97 := by timed congrHAdd lean_r53 lean_s96
let lean_s98 := by timed congrHAdd lean_r53 lean_s97
let lean_s99 := by timed congrHAdd lean_s92 lean_s98
let lean_s100 := by timed congrHAdd lean_s42 lean_s99
have lean_s101 : (Eq let189 let147) := by timed congrHAdd lean_r16 lean_s100
have lean_s102 : (Eq let189 let146) := by timed Eq.trans lean_s101 lean_r65
let lean_s103 := by timed flipCongrArg lean_s102 [LE.le]
have lean_s104 : (Eq let190 let158) := by timed congr lean_s103 lean_s71
have lean_s105 : (Eq let190 let157) := by timed Eq.trans lean_s104 lean_r74
let lean_s106 := by timed congr lean_s40 lean_s105
let lean_s107 := by timed congrHAdd lean_s75 lean_s76
let lean_s108 := by timed congrHAdd lean_r41 lean_s107
let lean_s109 := by timed congrHAdd lean_r33 lean_s108
let lean_s110 := by timed congrHAdd lean_r33 lean_s109
let lean_s111 := by timed congrHAdd lean_r63 lean_s110
let lean_s112 := by timed congrHAdd lean_s75 lean_s111
let lean_s113 := by timed congrHAdd lean_r33 lean_s112
let lean_s114 := by timed congrHAdd lean_s42 lean_s113
have lean_s115 : (Eq let187 let116) := by timed congrHAdd lean_r51 lean_s114
have lean_s116 : (Eq let187 let114) := by timed Eq.trans lean_s115 lean_r42
let lean_s117 := by timed flipCongrArg lean_s116 [LE.le]
have lean_s118 : (Eq let188 let155) := by timed congr lean_s117 lean_s71
have lean_s119 : (Eq let188 let154) := by timed Eq.trans lean_s118 lean_r72
let lean_s120 := by timed congr lean_s40 lean_s119
let lean_s121 := by timed congrHAdd lean_r71 lean_s92
let lean_s122 := by timed congrHAdd lean_r54 lean_s121
let lean_s123 := by timed congrHAdd lean_s41 lean_s122
let lean_s124 := by timed congrHAdd lean_r71 lean_s123
let lean_s125 := by timed congrHAdd lean_r63 lean_s124
let lean_s126 := by timed congrHAdd lean_r26 lean_s125
let lean_s127 := by timed congrHAdd lean_r69 lean_s126
let lean_s128 := by timed congrHAdd lean_r38 lean_s127
have lean_s129 : (Eq let185 let152) := by timed congrHAdd lean_r38 lean_s128
have lean_s130 : (Eq let185 let93) := by timed Eq.trans lean_s129 lean_r70
let lean_s131 := by timed flipCongrArg lean_s130 [LE.le]
have lean_s132 : (Eq let186 let94) := by timed congr lean_s131 lean_s88
have lean_s133 : (Eq let186 let92) := by timed Eq.trans lean_s132 lean_r29
let lean_s134 := by timed congr lean_s40 lean_s133
have lean_s135 : (Eq let60 let60) := by timed rfl
have lean_s136 : (Eq let59 let59) := by timed rfl
let lean_s137 := by timed congrHAdd lean_s136 lean_r69
let lean_s138 := by timed congrHAdd lean_s135 lean_s137
let lean_s139 := by timed congrHAdd lean_r63 lean_s138
let lean_s140 := by timed congrHAdd lean_r16 lean_s139
let lean_s141 := by timed congrHAdd lean_r53 lean_s140
let lean_s142 := by timed congrHAdd lean_r41 lean_s141
let lean_s143 := by timed congrHAdd lean_r69 lean_s142
let lean_s144 := by timed congrHAdd lean_r20 lean_s143
have lean_s145 : (Eq let183 let62) := by timed congrHAdd lean_r41 lean_s144
have lean_s146 : (Eq let183 let61) := by timed Eq.trans lean_s145 lean_r18
let lean_s147 := by timed flipCongrArg lean_s146 [LE.le]
have lean_s148 : (Eq let184 let149) := by timed congr lean_s147 lean_s88
have lean_s149 : (Eq let184 let148) := by timed Eq.trans lean_s148 lean_r66
let lean_s150 := by timed congr lean_s40 lean_s149
let lean_s151 := by timed congrHAdd lean_r38 lean_r63
let lean_s152 := by timed congrHAdd lean_r33 lean_s151
let lean_s153 := by timed congrHAdd lean_r54 lean_s152
let lean_s154 := by timed congrHAdd lean_r47 lean_s153
let lean_s155 := by timed congrHAdd lean_s42 lean_s154
let lean_s156 := by timed congrHAdd lean_s136 lean_s155
let lean_s157 := by timed congrHAdd lean_r63 lean_s156
let lean_s158 := by timed congrHAdd lean_r63 lean_s157
have lean_s159 : (Eq let181 let104) := by timed congrHAdd lean_r26 lean_s158
have lean_s160 : (Eq let181 let64) := by timed Eq.trans lean_s159 lean_r35
let lean_s161 := by timed flipCongrArg lean_s160 [LE.le]
have lean_s162 : (Eq let182 let65) := by timed congr lean_s161 lean_s88
have lean_s163 : (Eq let182 let63) := by timed Eq.trans lean_s162 lean_r19
let lean_s164 := by timed congr lean_s40 lean_s163
let lean_s165 := by timed congrHAdd lean_s76 lean_r27
let lean_s166 := by timed congrHAdd lean_s76 lean_s165
let lean_s167 := by timed congrHAdd lean_r33 lean_s166
let lean_s168 := by timed congrHAdd lean_r16 lean_s167
let lean_s169 := by timed congrHAdd lean_r41 lean_s168
let lean_s170 := by timed congrHAdd lean_r27 lean_s169
let lean_s171 := by timed congrHAdd lean_r51 lean_s170
let lean_s172 := by timed congrHAdd lean_r54 lean_s171
have lean_s173 : (Eq let179 let142) := by timed congrHAdd lean_r41 lean_s172
have lean_s174 : (Eq let179 let133) := by timed Eq.trans lean_s173 lean_r61
let lean_s175 := by timed flipCongrArg lean_s174 [LE.le]
have lean_s176 : (Eq let180 let134) := by timed congr lean_s175 lean_s54
have lean_s177 : (Eq let180 let132) := by timed Eq.trans lean_s176 lean_r57
let lean_s178 := by timed congr lean_s40 lean_s177
let lean_s179 := by timed congrHAdd lean_r41 lean_r63
let lean_s180 := by timed congrHAdd lean_r54 lean_s179
let lean_s181 := by timed congrHAdd lean_r38 lean_s180
let lean_s182 := by timed congrHAdd lean_r24 lean_s181
let lean_s183 := by timed congrHAdd lean_r38 lean_s182
let lean_s184 := by timed congrHAdd lean_r16 lean_s183
let lean_s185 := by timed congrHAdd lean_r54 lean_s184
let lean_s186 := by timed congrHAdd lean_r63 lean_s185
have lean_s187 : (Eq let177 let91) := by timed congrHAdd lean_r33 lean_s186
have lean_s188 : (Eq let177 x6) := by timed Eq.trans lean_s187 lean_r28
let lean_s189 := by timed flipCongrArg lean_s188 [LE.le]
have lean_s190 : (Eq let178 let58) := by timed congr lean_s189 lean_s54
have lean_s191 : (Eq let178 let18) := by timed Eq.trans lean_s190 lean_r17
let lean_s192 := by timed congr lean_s40 lean_s191
have lean_s193 : (Eq let97 let97) := by timed rfl
let lean_s194 := by timed congrHAdd lean_r54 lean_s41
let lean_s195 := by timed congrHAdd lean_s75 lean_s194
let lean_s196 := by timed congrHAdd lean_r26 lean_s195
let lean_s197 := by timed congrHAdd lean_r31 lean_s196
let lean_s198 := by timed congrHAdd lean_s193 lean_s197
let lean_s199 := by timed congrHAdd lean_s75 lean_s198
let lean_s200 := by timed congrHAdd lean_r20 lean_s199
let lean_s201 := by timed congrHAdd lean_s135 lean_s200
have lean_s202 : (Eq let175 let143) := by timed congrHAdd lean_r16 lean_s201
have lean_s203 : (Eq let175 let108) := by timed Eq.trans lean_s202 lean_r62
let lean_s204 := by timed flipCongrArg lean_s203 [LE.le]
have lean_s205 : (Eq let176 let109) := by timed congr lean_s204 lean_s88
have lean_s206 : (Eq let176 let106) := by timed Eq.trans lean_s205 lean_r37
let lean_s207 := by timed congr lean_s40 lean_s206
let lean_s208 := by timed congrHAdd lean_r20 lean_r41
let lean_s209 := by timed congrHAdd lean_s136 lean_s208
let lean_s210 := by timed congrHAdd lean_r69 lean_s209
let lean_s211 := by timed congrHAdd lean_r53 lean_s210
let lean_s212 := by timed congrHAdd lean_s75 lean_s211
let lean_s213 := by timed congrHAdd lean_r69 lean_s212
let lean_s214 := by timed congrHAdd lean_r63 lean_s213
let lean_s215 := by timed congrHAdd lean_r38 lean_s214
have lean_s216 : (Eq let173 let84) := by timed congrHAdd lean_r38 lean_s215
have lean_s217 : (Eq let173 let82) := by timed Eq.trans lean_s216 lean_r23
let lean_s218 := by timed flipCongrArg lean_s217 [LE.le]
have lean_s219 : (Eq let174 let163) := by timed congr lean_s218 lean_s88
have lean_s220 : (Eq let174 let162) := by timed Eq.trans lean_s219 lean_r77
let lean_s221 := by timed congr lean_s40 lean_s220
let lean_s222 := by timed congrHAdd lean_s76 lean_r53
let lean_s223 := by timed congrHAdd lean_s59 lean_s222
let lean_s224 := by timed congrHAdd lean_s135 lean_s223
let lean_s225 := by timed congrHAdd lean_s58 lean_s224
let lean_s226 := by timed congrHAdd lean_s42 lean_s225
let lean_s227 := by timed congrHAdd lean_r54 lean_s226
let lean_s228 := by timed congrHAdd lean_r53 lean_s227
let lean_s229 := by timed congrHAdd lean_s193 lean_s228
have lean_s230 : (Eq let171 let102) := by timed congrHAdd lean_r27 lean_s229
have lean_s231 : (Eq let171 let98) := by timed Eq.trans lean_s230 lean_r32
let lean_s232 := by timed flipCongrArg lean_s231 [LE.le]
have lean_s233 : (Eq let172 let99) := by timed congr lean_s232 lean_s71
have lean_s234 : (Eq let172 let95) := by timed Eq.trans lean_s233 lean_r30
let lean_s235 := by timed congr lean_s40 lean_s234
let lean_s236 := by timed congrHAdd lean_s135 lean_r47
let lean_s237 := by timed congrHAdd lean_r51 lean_s236
let lean_s238 := by timed congrHAdd lean_r41 lean_s237
let lean_s239 := by timed congrHAdd lean_r63 lean_s238
let lean_s240 := by timed congrHAdd lean_r63 lean_s239
let lean_s241 := by timed congrHAdd lean_r33 lean_s240
let lean_s242 := by timed congrHAdd lean_s58 lean_s241
let lean_s243 := by timed congrHAdd lean_r24 lean_s242
have lean_s244 : (Eq let169 let141) := by timed congrHAdd lean_r26 lean_s243
have lean_s245 : (Eq let169 let135) := by timed Eq.trans lean_s244 lean_r60
let lean_s246 := by timed flipCongrArg lean_s245 [LE.le]
have lean_s247 : (Eq let170 let137) := by timed congr lean_s246 lean_s88
have lean_s248 : (Eq let170 let136) := by timed Eq.trans lean_s247 lean_r58
let lean_s249 := by timed congr lean_s40 lean_s248
let lean_s250 := by timed congrHAdd lean_r69 lean_r45
let lean_s251 := by timed congrHAdd lean_s75 lean_s250
let lean_s252 := by timed congrHAdd lean_r26 lean_s251
let lean_s253 := by timed congrHAdd lean_r38 lean_s252
let lean_s254 := by timed congrHAdd lean_s59 lean_s253
let lean_s255 := by timed congrHAdd lean_r54 lean_s254
let lean_s256 := by timed congrHAdd lean_r55 lean_s255
let lean_s257 := by timed congrHAdd lean_r47 lean_s256
have lean_s258 : (Eq let167 let131) := by timed congrHAdd lean_r53 lean_s257
have lean_s259 : (Eq let167 let71) := by timed Eq.trans lean_s258 lean_r56
let lean_s260 := by timed flipCongrArg lean_s259 [LE.le]
have lean_s261 : (Eq let168 let145) := by timed congr lean_s260 lean_s54
have lean_s262 : (Eq let168 let118) := by timed Eq.trans lean_s261 lean_r64
let lean_s263 := by timed congr lean_s249 lean_s262
let lean_s264 := by timed congr lean_s235 lean_s263
let lean_s265 := by timed congr lean_s221 lean_s264
let lean_s266 := by timed congr lean_s207 lean_s265
let lean_s267 := by timed congr lean_s192 lean_s266
let lean_s268 := by timed congr lean_s178 lean_s267
let lean_s269 := by timed congr lean_s164 lean_s268
let lean_s270 := by timed congr lean_s150 lean_s269
let lean_s271 := by timed congr lean_s134 lean_s270
let lean_s272 := by timed congr lean_s120 lean_s271
let lean_s273 := by timed congr lean_s106 lean_s272
let lean_s274 := by timed congr lean_s91 lean_s273
let lean_s275 := by timed congr lean_s74 lean_s274
have lean_s276 : (Eq let197 let198) := by timed congr lean_s57 lean_s275
have lean_s277 : let198 := by timed eqResolve lean_a84 lean_s276
have lean_s278 : let118 := by andElim lean_s277, 14
let lean_s279 := by R1 lean_s39, lean_s278, let117, [(- 1), 0]
have lean_s280 : let18 := by andElim lean_s277, 9
let lean_s281 := by R1 lean_s279, lean_s280, let17, [(- 1), 0]
have lean_s282 : let63 := by andElim lean_s277, 7
let lean_s283 := by R2 lean_s281, lean_s282, let63, [(- 1), 0]
have lean_s284 : let92 := by andElim lean_s277, 5
let lean_s285 := by R2 lean_s283, lean_s284, let92, [(- 1), 0]
have lean_s286 : let154 := by andElim lean_s277, 4
let lean_s287 := by R2 lean_s285, lean_s286, let154, [(- 1), 0]
have lean_s288 : let159 := by andElim lean_s277, 1
let lean_s289 := by R2 lean_s287, lean_s288, let159, [(- 1), 0]
have lean_s290 : let11 := by andElim lean_s277, 0
exact (show False from by R1 lean_s289, lean_s290, let10, [0, 0])


