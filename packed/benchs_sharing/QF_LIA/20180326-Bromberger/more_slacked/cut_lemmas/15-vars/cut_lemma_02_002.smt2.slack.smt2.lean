open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x14x5fplus : Int}
variable {x14x5fminus : Int}
variable {x12x5fplus : Int}
variable {x12x5fminus : Int}
variable {x11x5fplus : Int}
variable {x11x5fminus : Int}
variable {x2x5fplus : Int}
variable {x2x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x8x5fplus : Int}
variable {x8x5fminus : Int}
variable {x3x5fplus : Int}
variable {x1x5fplus : Int}
variable {x5x5fminus : Int}
variable {x1x5fminus : Int}
variable {x0x5fplus : Int}
variable {x10x5fminus : Int}
variable {x0x5fminus : Int}
variable {x1x5fplus : Int}
variable {x10x5fplus : Int}
variable {x10x5fminus : Int}
variable {x8x5fplus : Int}
variable {x7x5fminus : Int}
variable {x8x5fminus : Int}
variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x13x5fminus : Int}
variable {x4x5fminus : Int}
variable {x3x5fplus : Int}
variable {x5x5fplus : Int}
variable {x3x5fminus : Int}
variable {x4x5fplus : Int}
variable {x6x5fminus : Int}
variable {x13x5fplus : Int}
variable {x6x5fplus : Int}
variable {x7x5fminus : Int}
variable {x1x5fminus : Int}
variable {x7x5fplus : Int}
variable {x10x5fplus : Int}
variable {x2x5fminus : Int}
variable {x2x5fplus : Int}
variable {x7x5fplus : Int}
variable {x11x5fminus : Int}
variable {x11x5fplus : Int}
variable {x6x5fminus : Int}
variable {x12x5fminus : Int}
variable {x12x5fplus : Int}
variable {x13x5fminus : Int}
variable {x3x5fminus : Int}
variable {x13x5fplus : Int}
variable {x6x5fplus : Int}
variable {x14x5fminus : Int}
variable {x14x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 4)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% HMul.hMul let3 x8x5fminus)
  let let5 := (binrel% HAdd.hAdd x8x5fplus let4)
  let let6 := (binrel% GE.ge let5 let1)
  let let7 := (Not let6)
  let let8 := (binrel% LT.lt let5 let1)
  let let9 := (Int.ofNat 0)
  let let10 := (Rat.ofInt 1)
  let let11 := (Neg.neg let10)
  let let12 := (binrel% LT.lt let11 let9)
  let let13 := (binrel% GT.gt let10 let9)
  let let14 := (Int.ofNat 2)
  let let15 := (binrel% HMul.hMul let3 x3x5fminus)
  let let16 := (binrel% HAdd.hAdd x3x5fplus let15)
  let let17 := (Neg.neg let14)
  let let18 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x14x5fminus) let16))))
  let let19 := (binrel% GE.ge let18 let14)
  let let20 := (Not let19)
  let let21 := (binrel% LT.lt let18 let14)
  let let22 := (Neg.neg (Int.ofNat 10))
  let let23 := (binrel% HMul.hMul let3 x12x5fplus)
  let let24 := (binrel% HMul.hMul let3 x14x5fplus)
  let let25 := (binrel% HMul.hMul let3 x11x5fplus)
  let let26 := (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x7x5fminus) (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd let23 x12x5fminus)))))))
  let let27 := (binrel% GE.ge let26 let22)
  let let28 := (Not let27)
  let let29 := (binrel% LT.lt let26 let22)
  let let30 := (Int.ofNat 17)
  let let31 := (Int.ofNat 11)
  let let32 := (binrel% HDiv.hDiv let31 let30)
  let let33 := (Neg.neg let32)
  let let34 := (binrel% LT.lt let33 let9)
  let let35 := (binrel% HDiv.hDiv (Int.ofNat 13) let30)
  let let36 := (Neg.neg let35)
  let let37 := (binrel% LT.lt let36 let9)
  let let38 := (binrel% HDiv.hDiv (Int.ofNat 16) let30)
  let let39 := (binrel% GT.gt let38 let9)
  let let40 := (binrel% HMul.hMul let3 x3x5fplus)
  let let41 := (binrel% HAdd.hAdd let40 x3x5fminus)
  let let42 := (binrel% HMul.hMul let3 x2x5fplus)
  let let43 := (binrel% HMul.hMul let3 x10x5fminus)
  let let44 := (binrel% HMul.hMul let3 x13x5fminus)
  let let45 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x12x5fminus let41))))))))))))
  let let46 := (binrel% GE.ge let45 let17)
  let let47 := (Not let46)
  let let48 := (binrel% LT.lt let45 let17)
  let let49 := (binrel% HMul.hMul let3 x0x5fplus)
  let let50 := (binrel% HAdd.hAdd let49 x0x5fminus)
  let let51 := (binrel% HMul.hMul let3 x6x5fplus)
  let let52 := (binrel% HMul.hMul let3 x7x5fplus)
  let let53 := (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x13x5fminus) (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x4x5fminus) (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x2x5fminus let50))))))))))))))
  let let54 := (binrel% GE.ge let53 let2)
  let let55 := (Not let54)
  let let56 := (binrel% LT.lt let53 let2)
  let let57 := (binrel% HDiv.hDiv let2 let30)
  let let58 := (Neg.neg let57)
  let let59 := (binrel% LT.lt let58 let9)
  let let60 := (binrel% HDiv.hDiv let14 let30)
  let let61 := (binrel% GT.gt let60 let9)
  let let62 := (Rat.ofInt let5)
  let let63 := (binrel% HMul.hMul let10 let5)
  let let64 := (Int.ofNat 6)
  let let65 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let3 x0x5fminus))
  let let66 := (binrel% GE.ge let65 let64)
  let let67 := (Not let66)
  let let68 := (binrel% LT.lt let65 let64)
  let let69 := (binrel% HMul.hMul let3 x10x5fplus)
  let let70 := (binrel% HMul.hMul let3 x13x5fplus)
  let let71 := (Rat.ofInt (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x12x5fminus) let41)))))))))
  let let72 := (binrel% HMul.hMul let17 x12x5fminus)
  let let73 := (binrel% HMul.hMul let14 x12x5fplus)
  let let74 := (binrel% HMul.hMul let3 x11x5fminus)
  let let75 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 let16))))))))
  let let76 := (binrel% HMul.hMul let11 let75)
  let let77 := (binrel% HDiv.hDiv (Int.ofNat 8) let30)
  let let78 := (Neg.neg let77)
  let let79 := (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x0x5fplus) (binrel% HMul.hMul let78 x0x5fminus))
  let let80 := (binrel% HMul.hMul let77 let65)
  let let81 := (binrel% HDiv.hDiv (Int.ofNat 22) let30)
  let let82 := (Neg.neg let81)
  let let83 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x1x5fplus) (binrel% HMul.hMul let33 x1x5fminus))))))))
  let let84 := (binrel% HMul.hMul let3 x1x5fplus)
  let let85 := (binrel% HAdd.hAdd let84 x1x5fminus)
  let let86 := (binrel% HMul.hMul let17 x11x5fminus)
  let let87 := (binrel% HMul.hMul let14 x11x5fplus)
  let let88 := (binrel% HMul.hMul let17 x4x5fminus)
  let let89 := (binrel% HMul.hMul let14 x4x5fplus)
  let let90 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let86 let85))))))
  let let91 := (binrel% HMul.hMul let33 let90)
  let let92 := (binrel% HDiv.hDiv (Int.ofNat 18) let30)
  let let93 := (Neg.neg let92)
  let let94 := (binrel% HDiv.hDiv (Int.ofNat 54) let30)
  let let95 := (Neg.neg let94)
  let let96 := (binrel% HDiv.hDiv (Int.ofNat 36) let30)
  let let97 := (Neg.neg let96)
  let let98 := (binrel% HDiv.hDiv (Int.ofNat 72) let30)
  let let99 := (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let98) x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let95 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let96 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let95 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let95 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x1x5fplus) (binrel% HMul.hMul let92 x1x5fminus))))))))))))))))))))))))
  let let100 := (Int.ofNat 3)
  let let101 := (Neg.neg let100)
  let let102 := (Neg.neg let1)
  let let103 := (binrel% HMul.hMul let3 x5x5fminus)
  let let104 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x6x5fminus) (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd (binrel% HMul.hMul let102 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let1 x4x5fminus) (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x12x5fminus) (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HMul.hMul let3 x1x5fminus))))))))))))))))))))))))
  let let105 := (binrel% HMul.hMul let93 let104)
  let let106 := (Neg.neg let38)
  let let107 := (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x3x5fplus) (binrel% HMul.hMul let38 x3x5fminus))))))))))))))
  let let108 := (binrel% HMul.hMul let38 let45)
  let let109 := (binrel% HDiv.hDiv (Int.ofNat 15) let30)
  let let110 := (Neg.neg let109)
  let let111 := (binrel% HDiv.hDiv (Int.ofNat 30) let30)
  let let112 := (Neg.neg let111)
  let let113 := (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x0x5fplus) (binrel% HMul.hMul let109 x0x5fminus))))))))))))))))
  let let114 := (binrel% HMul.hMul let109 let53)
  let let115 := (Neg.neg let60)
  let let116 := (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x3x5fplus) (binrel% HMul.hMul let60 x3x5fminus))))))))
  let let117 := (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x3x5fplus) (binrel% HMul.hMul let17 x3x5fminus))
  let let118 := (binrel% HMul.hMul let3 x5x5fplus)
  let let119 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 let117))))))
  let let120 := (binrel% HMul.hMul let58 let119)
  let let121 := (binrel% HDiv.hDiv (Int.ofNat 7) let30)
  let let122 := (Neg.neg let121)
  let let123 := (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x1x5fplus) (binrel% HMul.hMul let122 x1x5fminus))))))))))))
  let let124 := (binrel% HMul.hMul let3 x4x5fminus)
  let let125 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x0x5fminus let85))))))))))
  let let126 := (binrel% HMul.hMul let122 let125)
  let let127 := (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x11x5fplus) (binrel% HMul.hMul let115 x11x5fminus))
  let let128 := (binrel% HAdd.hAdd x11x5fplus let74)
  let let129 := (binrel% HMul.hMul let60 let128)
  let let130 := (Rat.ofInt 0)
  let let131 := (binrel% HDiv.hDiv (Int.ofNat 26) let30)
  let let132 := (Neg.neg let131)
  let let133 := (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let132 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x8x5fplus) (binrel% HMul.hMul let35 x8x5fminus))))))))))))))
  let let134 := (binrel% HDiv.hDiv let1 let30)
  let let135 := (Neg.neg let134)
  let let136 := (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let78 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let135 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let134 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let135 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let134 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let135 x12x5fplus) (binrel% HMul.hMul let134 x12x5fminus))))))))
  let let137 := (Rat.ofInt let18)
  let let138 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x13x5fplus) (binrel% HMul.hMul let32 x13x5fminus))
  let let139 := (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let123 let127)))))))))))))
  let let140 := (binrel% HMul.hMul let14 x6x5fminus)
  let let141 := (binrel% HMul.hMul let17 x6x5fplus)
  let let142 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 let5))))))))))))
  let let143 := (binrel% HMul.hMul let36 let142)
  let let144 := (binrel% HAdd.hAdd x13x5fplus let44)
  let let145 := (binrel% HSub.hSub x13x5fplus x13x5fminus)
  let let146 := (Not let7)
  let let147 := (Eq let146 let6)
  let let148 := (binrel% HMul.hMul let17 x14x5fminus)
  let let149 := (binrel% HMul.hMul let14 x14x5fplus)
  let let150 := (binrel% HMul.hMul let3 x8x5fplus)
  let let151 := (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 let41))))
  let let152 := (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd x8x5fminus let41))))
  let let153 := (binrel% HMul.hMul let3 x12x5fminus)
  let let154 := (binrel% HMul.hMul let3 x14x5fminus)
  let let155 := (binrel% HMul.hMul let14 x7x5fminus)
  let let156 := (binrel% HMul.hMul let17 x7x5fplus)
  let let157 := (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd x12x5fplus let153)))))))
  let let158 := (binrel% GE.ge let157 let31)
  let let159 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd x1x5fminus let50))))))))))
  let let160 := (binrel% HSub.hSub x11x5fplus x11x5fminus)
  let let161 := (binrel% GE.ge let128 let2)
  let let162 := (Eq let161 let161)
  let let163 := (binrel% HMul.hMul let93 let14)
  let let164 := (binrel% HMul.hMul let101 x12x5fminus)
  let let165 := (binrel% HMul.hMul let100 x12x5fplus)
  let let166 := (binrel% HMul.hMul let101 x14x5fminus)
  let let167 := (binrel% HMul.hMul let100 x14x5fplus)
  let let168 := (binrel% HMul.hMul let14 x8x5fminus)
  let let169 := (binrel% HMul.hMul let17 x8x5fplus)
  let let170 := (binrel% HMul.hMul let101 x11x5fminus)
  let let171 := (binrel% HMul.hMul let100 x11x5fplus)
  let let172 := (binrel% HMul.hMul let3 x2x5fminus)
  let let173 := (binrel% HMul.hMul let102 x4x5fminus)
  let let174 := (binrel% HMul.hMul let1 x4x5fplus)
  let let175 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let15 let85))))))))))))))))))))))
  let let176 := (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let172 let85))))))))))))))))))))))
  let let177 := (binrel% HMul.hMul let134 let26)
  let let178 := (binrel% GE.ge let104 let14)
  let let179 := (binrel% LE.le let175 let17)
  let let180 := (binrel% GT.gt let109 let9)
  let let181 := (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let88 let85))))))
  let let182 := (binrel% LT.lt let122 let9)
  let let183 := (Not let20)
  let let184 := (Eq let183 let19)
  let let185 := (Not let55)
  let let186 := (Eq let185 let54)
  let let187 := (binrel% GE.ge let151 let3)
  let let188 := (Eq let66 let66)
  let let189 := (binrel% GT.gt let134 let9)
  let let190 := (Int.ofNat 5)
  let let191 := (binrel% LE.le let65 let190)
  let let192 := (Not let161)
  let let193 := (binrel% LT.lt let128 let2)
  let let194 := (Eq let6 let146)
  let let195 := (binrel% LE.le let53 let9)
  let let196 := (Not let28)
  let let197 := (Eq let196 let27)
  let let198 := (binrel% HMul.hMul let11 let3)
  let let199 := (Eq let19 let183)
  let let200 := (Eq let54 let185)
  let let201 := (binrel% GT.gt let77 let9)
  let let202 := (binrel% HMul.hMul let33 let144)
  let let203 := (binrel% LE.le let128 let9)
  let let204 := (Eq let19 let19)
  let let205 := (binrel% LT.lt let93 let9)
  let let206 := (Eq let54 let54)
  let let207 := (binrel% HMul.hMul let10 let18)
  let let208 := (binrel% HSub.hSub x0x5fplus x0x5fminus)
  let let209 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 let16))))))))
  let let210 := (binrel% HMul.hMul let58 let2)
  let let211 := (Eq let6 let6)
  let let212 := (binrel% LE.le let5 let100)
  let let213 := (Not let192)
  let let214 := (Eq let161 let213)
  let let215 := (Eq let213 let161)
  let let216 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let42 x2x5fminus)))))))))))))
  let let217 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 44) let30))
  let let218 := (Neg.neg let31)
  let let219 := (binrel% HMul.hMul let134 let218)
  let let220 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let156 let155)))))))
  let let221 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let153 let16))))))))))))
  let let222 := (binrel% GE.ge let221 let100)
  let let223 := (Not let67)
  let let224 := (Eq let223 let66)
  let let225 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x2x5fplus let172)))))))))))))
  let let226 := (Eq let66 let223)
  let let227 := (Eq let27 let27)
  let let228 := (Eq let27 let196)
  let let229 := (binrel% HMul.hMul let33 let17)
  let let230 := (Eq let46 let46)
  let let231 := (Not let47)
  let let232 := (Eq let231 let46)
  let let233 := (Eq let46 let231)
  let let234 := (binrel% HMul.hMul let33 let9)
  let let235 := (binrel% HMul.hMul let10 let2)
  let let236 := (Not let212)
  let let237 := (binrel% GT.gt let5 let100)
  let let238 := (Eq let237 let236)
  let let239 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 48) let30))
  let let240 := (binrel% HMul.hMul let38 let101)
  let let241 := (binrel% HDiv.hDiv (Int.ofNat 40) let30)
  let let242 := (Rat.ofInt 3)
  let let243 := (binrel% HAdd.hAdd let242 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let241 (binrel% HAdd.hAdd let217 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let239 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let121 let130)))))))))))))
  let let244 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd x5x5fminus let117))))))
  let let245 := (binrel% HMul.hMul let60 let9)
  let let246 := (binrel% HMul.hMul let122 let3)
  let let247 := (binrel% HMul.hMul let109 let9)
  let let248 := (binrel% HSub.hSub x8x5fplus x8x5fminus)
  let let249 := (binrel% HMul.hMul let36 let14)
  let let250 := (binrel% LE.le let130 let58)
  let let251 := (binrel% HMul.hMul let77 let190)
  let let252 := (binrel% HMul.hMul let10 let100)
  let let253 := (binrel% GE.ge let145 let17)
  let let254 := (binrel% LE.le let208 let190)
  let let255 := (binrel% LE.le let160 let9)
  let let256 := (binrel% LE.le let248 let100)
  let let257 := (binrel% GE.ge let216 let14)
  let let258 := (binrel% GE.ge let225 let100)
  let let259 := (binrel% GE.ge let209 let3)
  let let260 := (binrel% GE.ge let181 let9)
  let let261 := (binrel% GE.ge let220 let31)
  let let262 := (binrel% GE.ge let152 let3)
  let let263 := (binrel% LE.le let176 let17)
  let let264 := (binrel% GE.ge let159 let3)
  let let265 := (binrel% GE.ge let244 let2)
  let let266 := (binrel% GE.ge let144 let17)
  let let267 := (binrel% GE.ge let142 let14)
  let let268 := (binrel% GE.ge let75 let3)
  let let269 := (binrel% GE.ge let90 let9)
  let let270 := (binrel% GE.ge let125 let3)
  let let271 := (binrel% GE.ge let119 let2)
  let let272 := (Not let271)
  let let273 := (Not let270)
  let let274 := (Not let178)
  let let275 := (Not let269)
  let let276 := (Not let268)
  let let277 := (Not let267)
  let let278 := (Not let266)
  let let279 := (Or let161 (Or let273 (Or let272 (Or let54 (Or let46 (Or let277 (Or let274 (Or let275 (Or let27 (Or let66 (Or let19 (Or let276 (Or let278 let6)))))))))))))
  let let280 := (Or let213 (Or let273 (Or let272 (Or let185 (Or let231 (Or let277 (Or let274 (Or let275 (Or let196 (Or let223 (Or let183 (Or let276 (Or let278 let146)))))))))))))
  let let281 := (binrel% HAdd.hAdd let252 (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let198 (binrel% HAdd.hAdd let235 (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let219 (binrel% HAdd.hAdd let234 (binrel% HAdd.hAdd let163 (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let240 (binrel% HAdd.hAdd let247 (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd let246 let245)))))))))))))
  let let282 := (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let202 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let207 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let126 let129)))))))))))))
  let let283 := (binrel% LE.le let282 let281)
  let let284 := (binrel% LE.le let129 let245)
  let let285 := (And let61 let203)
  let let286 := (binrel% LE.le let126 let246)
  let let287 := (And let182 let270)
  let let288 := (binrel% LE.le let120 let210)
  let let289 := (And let59 let271)
  let let290 := (binrel% LE.le let114 let247)
  let let291 := (And let180 let195)
  let let292 := (binrel% LE.le let108 let240)
  let let293 := (binrel% LE.le let45 let101)
  let let294 := (And let39 let293)
  let let295 := (binrel% LE.le let143 let249)
  let let296 := (And let37 let267)
  let let297 := (binrel% LE.le let105 let163)
  let let298 := (And let205 let178)
  let let299 := (binrel% LE.le let91 let234)
  let let300 := (And let34 let269)
  let let301 := (binrel% LE.le let177 let219)
  let let302 := (binrel% LE.le let26 let218)
  let let303 := (And let189 let302)
  let let304 := (binrel% LE.le let80 let251)
  let let305 := (And let201 let191)
  let let306 := (binrel% LE.le let207 let235)
  let let307 := (binrel% LE.le let18 let2)
  let let308 := (And let13 let307)
  let let309 := (binrel% LE.le let76 let198)
  let let310 := (And let12 let268)
  let let311 := (binrel% LE.le let202 let229)
  let let312 := (And let34 let266)
  let let313 := (binrel% LE.le let63 let252)
  let let314 := (And let13 let212)
(Eq let8 let7) → (Eq let12 True) → (Eq let13 True) → (Eq let21 let20) → (Eq let29 let28) → (Eq let34 True) → (Eq let37 True) → (Eq let39 True) → (Eq let48 let47) → (Eq let56 let55) → (Eq let59 True) → (Eq let61 True) → (Eq let63 let62) → (Eq let68 let67) → (Eq let76 let71) → (Eq let80 let79) → (Eq let91 let83) → (Eq let105 let99) → (Eq let108 let107) → (Eq let114 let113) → (Eq let120 let116) → (Eq let126 let123) → (Eq let129 let127) → (Eq let139 let130) → (Eq let143 let133) → (Eq let145 let144) → let147 → (Eq let152 let151) → (Eq let158 let28) → (Eq let159 let125) → (Eq let160 let128) → (Eq let162 True) → (Eq let163 let97) → (Eq let176 let175) → (Eq let177 let136) → (Eq let179 let178) → (Eq let180 True) → (Eq let181 let90) → (Eq let182 True) → let184 → let186 → (Eq let187 let20) → (Eq let188 True) → (Eq let189 True) → (Eq let191 let67) → (Eq let193 let192) → (Eq let147 let194) → (Eq let195 let55) → let197 → (Eq let198 let10) → (Eq let184 let199) → (Eq let186 let200) → (Eq let201 True) → (Eq let202 let138) → (Eq let203 let192) → (Eq let204 True) → (Eq let205 True) → (Eq let206 True) → (Eq let207 let137) → (Eq let208 let65) → (Eq let209 let75) → (Eq let210 let58) → (Eq let211 True) → (Eq let212 let7) → (Eq let215 let214) → (Eq let216 let142) → (Eq let219 let217) → (Eq let220 let157) → (Eq let222 let47) → let224 → (Eq let225 let221) → (Eq let224 let226) → (Eq let227 True) → (Eq let197 let228) → (Eq let229 let81) → (Eq let230 True) → let232 → (Eq let232 let233) → let215 → (Eq let234 let130) → (Eq let235 let10) → let238 → (Eq let240 let239) → (Eq let243 let58) → (Eq let244 let119) → (Eq let245 let130) → (Eq let246 let121) → (Eq let247 let130) → (Eq let248 let5) → (Eq let249 let132) → (Eq let250 False) → (Eq let251 let241) → (Eq let252 let242) → (binrel% GE.ge x13x5fplus let9) → (binrel% GE.ge x13x5fminus let9) → (binrel% GE.ge x10x5fplus let9) → (binrel% GE.ge x10x5fminus let9) → (binrel% GE.ge x7x5fplus let9) → (binrel% GE.ge x7x5fminus let9) → (binrel% GE.ge x6x5fplus let9) → (binrel% GE.ge x6x5fminus let9) → (binrel% GE.ge x5x5fplus let9) → (binrel% GE.ge x5x5fminus let9) → (binrel% GE.ge x4x5fplus let9) → (binrel% GE.ge x4x5fminus let9) → (binrel% GE.ge x2x5fplus let9) → (binrel% GE.ge x2x5fminus let9) → (binrel% GE.ge x0x5fplus let9) → (binrel% GE.ge x0x5fminus let9) → (binrel% GE.ge x11x5fplus let9) → (binrel% GE.ge x11x5fminus let9) → (binrel% GE.ge x8x5fplus let9) → (binrel% GE.ge x8x5fminus let9) → (binrel% GE.ge x14x5fplus let9) → (binrel% GE.ge x14x5fminus let9) → (binrel% GE.ge x12x5fplus let9) → (binrel% GE.ge x12x5fminus let9) → (binrel% GE.ge x3x5fplus let9) → (binrel% GE.ge x3x5fminus let9) → (binrel% GE.ge x1x5fplus let9) → (binrel% GE.ge x1x5fminus let9) → let253 → let254 → let255 → let256 → let195 → let257 → let258 → let259 → let260 → let261 → let262 → let263 → let264 → let265 → False :=
  let let1 := (Int.ofNat 4)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% HMul.hMul let3 x8x5fminus)
  let let5 := (binrel% HAdd.hAdd x8x5fplus let4)
  let let6 := (binrel% GE.ge let5 let1)
  let let7 := (Not let6)
  let let8 := (binrel% LT.lt let5 let1)
  let let9 := (Int.ofNat 0)
  let let10 := (Rat.ofInt 1)
  let let11 := (Neg.neg let10)
  let let12 := (binrel% LT.lt let11 let9)
  let let13 := (binrel% GT.gt let10 let9)
  let let14 := (Int.ofNat 2)
  let let15 := (binrel% HMul.hMul let3 x3x5fminus)
  let let16 := (binrel% HAdd.hAdd x3x5fplus let15)
  let let17 := (Neg.neg let14)
  let let18 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x14x5fminus) let16))))
  let let19 := (binrel% GE.ge let18 let14)
  let let20 := (Not let19)
  let let21 := (binrel% LT.lt let18 let14)
  let let22 := (Neg.neg (Int.ofNat 10))
  let let23 := (binrel% HMul.hMul let3 x12x5fplus)
  let let24 := (binrel% HMul.hMul let3 x14x5fplus)
  let let25 := (binrel% HMul.hMul let3 x11x5fplus)
  let let26 := (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x7x5fminus) (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd let23 x12x5fminus)))))))
  let let27 := (binrel% GE.ge let26 let22)
  let let28 := (Not let27)
  let let29 := (binrel% LT.lt let26 let22)
  let let30 := (Int.ofNat 17)
  let let31 := (Int.ofNat 11)
  let let32 := (binrel% HDiv.hDiv let31 let30)
  let let33 := (Neg.neg let32)
  let let34 := (binrel% LT.lt let33 let9)
  let let35 := (binrel% HDiv.hDiv (Int.ofNat 13) let30)
  let let36 := (Neg.neg let35)
  let let37 := (binrel% LT.lt let36 let9)
  let let38 := (binrel% HDiv.hDiv (Int.ofNat 16) let30)
  let let39 := (binrel% GT.gt let38 let9)
  let let40 := (binrel% HMul.hMul let3 x3x5fplus)
  let let41 := (binrel% HAdd.hAdd let40 x3x5fminus)
  let let42 := (binrel% HMul.hMul let3 x2x5fplus)
  let let43 := (binrel% HMul.hMul let3 x10x5fminus)
  let let44 := (binrel% HMul.hMul let3 x13x5fminus)
  let let45 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x12x5fminus let41))))))))))))
  let let46 := (binrel% GE.ge let45 let17)
  let let47 := (Not let46)
  let let48 := (binrel% LT.lt let45 let17)
  let let49 := (binrel% HMul.hMul let3 x0x5fplus)
  let let50 := (binrel% HAdd.hAdd let49 x0x5fminus)
  let let51 := (binrel% HMul.hMul let3 x6x5fplus)
  let let52 := (binrel% HMul.hMul let3 x7x5fplus)
  let let53 := (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x13x5fminus) (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x4x5fminus) (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x2x5fminus let50))))))))))))))
  let let54 := (binrel% GE.ge let53 let2)
  let let55 := (Not let54)
  let let56 := (binrel% LT.lt let53 let2)
  let let57 := (binrel% HDiv.hDiv let2 let30)
  let let58 := (Neg.neg let57)
  let let59 := (binrel% LT.lt let58 let9)
  let let60 := (binrel% HDiv.hDiv let14 let30)
  let let61 := (binrel% GT.gt let60 let9)
  let let62 := (Rat.ofInt let5)
  let let63 := (binrel% HMul.hMul let10 let5)
  let let64 := (Int.ofNat 6)
  let let65 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let3 x0x5fminus))
  let let66 := (binrel% GE.ge let65 let64)
  let let67 := (Not let66)
  let let68 := (binrel% LT.lt let65 let64)
  let let69 := (binrel% HMul.hMul let3 x10x5fplus)
  let let70 := (binrel% HMul.hMul let3 x13x5fplus)
  let let71 := (Rat.ofInt (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x12x5fminus) let41)))))))))
  let let72 := (binrel% HMul.hMul let17 x12x5fminus)
  let let73 := (binrel% HMul.hMul let14 x12x5fplus)
  let let74 := (binrel% HMul.hMul let3 x11x5fminus)
  let let75 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 let16))))))))
  let let76 := (binrel% HMul.hMul let11 let75)
  let let77 := (binrel% HDiv.hDiv (Int.ofNat 8) let30)
  let let78 := (Neg.neg let77)
  let let79 := (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x0x5fplus) (binrel% HMul.hMul let78 x0x5fminus))
  let let80 := (binrel% HMul.hMul let77 let65)
  let let81 := (binrel% HDiv.hDiv (Int.ofNat 22) let30)
  let let82 := (Neg.neg let81)
  let let83 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x1x5fplus) (binrel% HMul.hMul let33 x1x5fminus))))))))
  let let84 := (binrel% HMul.hMul let3 x1x5fplus)
  let let85 := (binrel% HAdd.hAdd let84 x1x5fminus)
  let let86 := (binrel% HMul.hMul let17 x11x5fminus)
  let let87 := (binrel% HMul.hMul let14 x11x5fplus)
  let let88 := (binrel% HMul.hMul let17 x4x5fminus)
  let let89 := (binrel% HMul.hMul let14 x4x5fplus)
  let let90 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let86 let85))))))
  let let91 := (binrel% HMul.hMul let33 let90)
  let let92 := (binrel% HDiv.hDiv (Int.ofNat 18) let30)
  let let93 := (Neg.neg let92)
  let let94 := (binrel% HDiv.hDiv (Int.ofNat 54) let30)
  let let95 := (Neg.neg let94)
  let let96 := (binrel% HDiv.hDiv (Int.ofNat 36) let30)
  let let97 := (Neg.neg let96)
  let let98 := (binrel% HDiv.hDiv (Int.ofNat 72) let30)
  let let99 := (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let98) x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let95 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let96 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let95 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let95 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x1x5fplus) (binrel% HMul.hMul let92 x1x5fminus))))))))))))))))))))))))
  let let100 := (Int.ofNat 3)
  let let101 := (Neg.neg let100)
  let let102 := (Neg.neg let1)
  let let103 := (binrel% HMul.hMul let3 x5x5fminus)
  let let104 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x6x5fminus) (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd (binrel% HMul.hMul let102 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let1 x4x5fminus) (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let17 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x12x5fminus) (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HMul.hMul let3 x1x5fminus))))))))))))))))))))))))
  let let105 := (binrel% HMul.hMul let93 let104)
  let let106 := (Neg.neg let38)
  let let107 := (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x3x5fplus) (binrel% HMul.hMul let38 x3x5fminus))))))))))))))
  let let108 := (binrel% HMul.hMul let38 let45)
  let let109 := (binrel% HDiv.hDiv (Int.ofNat 15) let30)
  let let110 := (Neg.neg let109)
  let let111 := (binrel% HDiv.hDiv (Int.ofNat 30) let30)
  let let112 := (Neg.neg let111)
  let let113 := (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x0x5fplus) (binrel% HMul.hMul let109 x0x5fminus))))))))))))))))
  let let114 := (binrel% HMul.hMul let109 let53)
  let let115 := (Neg.neg let60)
  let let116 := (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x3x5fplus) (binrel% HMul.hMul let60 x3x5fminus))))))))
  let let117 := (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x3x5fplus) (binrel% HMul.hMul let17 x3x5fminus))
  let let118 := (binrel% HMul.hMul let3 x5x5fplus)
  let let119 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 let117))))))
  let let120 := (binrel% HMul.hMul let58 let119)
  let let121 := (binrel% HDiv.hDiv (Int.ofNat 7) let30)
  let let122 := (Neg.neg let121)
  let let123 := (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x1x5fplus) (binrel% HMul.hMul let122 x1x5fminus))))))))))))
  let let124 := (binrel% HMul.hMul let3 x4x5fminus)
  let let125 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x0x5fminus let85))))))))))
  let let126 := (binrel% HMul.hMul let122 let125)
  let let127 := (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x11x5fplus) (binrel% HMul.hMul let115 x11x5fminus))
  let let128 := (binrel% HAdd.hAdd x11x5fplus let74)
  let let129 := (binrel% HMul.hMul let60 let128)
  let let130 := (Rat.ofInt 0)
  let let131 := (binrel% HDiv.hDiv (Int.ofNat 26) let30)
  let let132 := (Neg.neg let131)
  let let133 := (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let132 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let35 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x8x5fplus) (binrel% HMul.hMul let35 x8x5fminus))))))))))))))
  let let134 := (binrel% HDiv.hDiv let1 let30)
  let let135 := (Neg.neg let134)
  let let136 := (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let78 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let135 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let134 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let135 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let134 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let135 x12x5fplus) (binrel% HMul.hMul let134 x12x5fminus))))))))
  let let137 := (Rat.ofInt let18)
  let let138 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x13x5fplus) (binrel% HMul.hMul let32 x13x5fminus))
  let let139 := (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let123 let127)))))))))))))
  let let140 := (binrel% HMul.hMul let14 x6x5fminus)
  let let141 := (binrel% HMul.hMul let17 x6x5fplus)
  let let142 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 let5))))))))))))
  let let143 := (binrel% HMul.hMul let36 let142)
  let let144 := (binrel% HAdd.hAdd x13x5fplus let44)
  let let145 := (binrel% HSub.hSub x13x5fplus x13x5fminus)
  let let146 := (Not let7)
  let let147 := (Eq let146 let6)
  let let148 := (binrel% HMul.hMul let17 x14x5fminus)
  let let149 := (binrel% HMul.hMul let14 x14x5fplus)
  let let150 := (binrel% HMul.hMul let3 x8x5fplus)
  let let151 := (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 let41))))
  let let152 := (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd x8x5fminus let41))))
  let let153 := (binrel% HMul.hMul let3 x12x5fminus)
  let let154 := (binrel% HMul.hMul let3 x14x5fminus)
  let let155 := (binrel% HMul.hMul let14 x7x5fminus)
  let let156 := (binrel% HMul.hMul let17 x7x5fplus)
  let let157 := (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd x12x5fplus let153)))))))
  let let158 := (binrel% GE.ge let157 let31)
  let let159 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd x1x5fminus let50))))))))))
  let let160 := (binrel% HSub.hSub x11x5fplus x11x5fminus)
  let let161 := (binrel% GE.ge let128 let2)
  let let162 := (Eq let161 let161)
  let let163 := (binrel% HMul.hMul let93 let14)
  let let164 := (binrel% HMul.hMul let101 x12x5fminus)
  let let165 := (binrel% HMul.hMul let100 x12x5fplus)
  let let166 := (binrel% HMul.hMul let101 x14x5fminus)
  let let167 := (binrel% HMul.hMul let100 x14x5fplus)
  let let168 := (binrel% HMul.hMul let14 x8x5fminus)
  let let169 := (binrel% HMul.hMul let17 x8x5fplus)
  let let170 := (binrel% HMul.hMul let101 x11x5fminus)
  let let171 := (binrel% HMul.hMul let100 x11x5fplus)
  let let172 := (binrel% HMul.hMul let3 x2x5fminus)
  let let173 := (binrel% HMul.hMul let102 x4x5fminus)
  let let174 := (binrel% HMul.hMul let1 x4x5fplus)
  let let175 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let15 let85))))))))))))))))))))))
  let let176 := (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let172 let85))))))))))))))))))))))
  let let177 := (binrel% HMul.hMul let134 let26)
  let let178 := (binrel% GE.ge let104 let14)
  let let179 := (binrel% LE.le let175 let17)
  let let180 := (binrel% GT.gt let109 let9)
  let let181 := (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let88 let85))))))
  let let182 := (binrel% LT.lt let122 let9)
  let let183 := (Not let20)
  let let184 := (Eq let183 let19)
  let let185 := (Not let55)
  let let186 := (Eq let185 let54)
  let let187 := (binrel% GE.ge let151 let3)
  let let188 := (Eq let66 let66)
  let let189 := (binrel% GT.gt let134 let9)
  let let190 := (Int.ofNat 5)
  let let191 := (binrel% LE.le let65 let190)
  let let192 := (Not let161)
  let let193 := (binrel% LT.lt let128 let2)
  let let194 := (Eq let6 let146)
  let let195 := (binrel% LE.le let53 let9)
  let let196 := (Not let28)
  let let197 := (Eq let196 let27)
  let let198 := (binrel% HMul.hMul let11 let3)
  let let199 := (Eq let19 let183)
  let let200 := (Eq let54 let185)
  let let201 := (binrel% GT.gt let77 let9)
  let let202 := (binrel% HMul.hMul let33 let144)
  let let203 := (binrel% LE.le let128 let9)
  let let204 := (Eq let19 let19)
  let let205 := (binrel% LT.lt let93 let9)
  let let206 := (Eq let54 let54)
  let let207 := (binrel% HMul.hMul let10 let18)
  let let208 := (binrel% HSub.hSub x0x5fplus x0x5fminus)
  let let209 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 let16))))))))
  let let210 := (binrel% HMul.hMul let58 let2)
  let let211 := (Eq let6 let6)
  let let212 := (binrel% LE.le let5 let100)
  let let213 := (Not let192)
  let let214 := (Eq let161 let213)
  let let215 := (Eq let213 let161)
  let let216 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let42 x2x5fminus)))))))))))))
  let let217 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 44) let30))
  let let218 := (Neg.neg let31)
  let let219 := (binrel% HMul.hMul let134 let218)
  let let220 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let156 let155)))))))
  let let221 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let153 let16))))))))))))
  let let222 := (binrel% GE.ge let221 let100)
  let let223 := (Not let67)
  let let224 := (Eq let223 let66)
  let let225 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x2x5fplus let172)))))))))))))
  let let226 := (Eq let66 let223)
  let let227 := (Eq let27 let27)
  let let228 := (Eq let27 let196)
  let let229 := (binrel% HMul.hMul let33 let17)
  let let230 := (Eq let46 let46)
  let let231 := (Not let47)
  let let232 := (Eq let231 let46)
  let let233 := (Eq let46 let231)
  let let234 := (binrel% HMul.hMul let33 let9)
  let let235 := (binrel% HMul.hMul let10 let2)
  let let236 := (Not let212)
  let let237 := (binrel% GT.gt let5 let100)
  let let238 := (Eq let237 let236)
  let let239 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 48) let30))
  let let240 := (binrel% HMul.hMul let38 let101)
  let let241 := (binrel% HDiv.hDiv (Int.ofNat 40) let30)
  let let242 := (Rat.ofInt 3)
  let let243 := (binrel% HAdd.hAdd let242 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let241 (binrel% HAdd.hAdd let217 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let239 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let121 let130)))))))))))))
  let let244 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd x5x5fminus let117))))))
  let let245 := (binrel% HMul.hMul let60 let9)
  let let246 := (binrel% HMul.hMul let122 let3)
  let let247 := (binrel% HMul.hMul let109 let9)
  let let248 := (binrel% HSub.hSub x8x5fplus x8x5fminus)
  let let249 := (binrel% HMul.hMul let36 let14)
  let let250 := (binrel% LE.le let130 let58)
  let let251 := (binrel% HMul.hMul let77 let190)
  let let252 := (binrel% HMul.hMul let10 let100)
  let let253 := (binrel% GE.ge let145 let17)
  let let254 := (binrel% LE.le let208 let190)
  let let255 := (binrel% LE.le let160 let9)
  let let256 := (binrel% LE.le let248 let100)
  let let257 := (binrel% GE.ge let216 let14)
  let let258 := (binrel% GE.ge let225 let100)
  let let259 := (binrel% GE.ge let209 let3)
  let let260 := (binrel% GE.ge let181 let9)
  let let261 := (binrel% GE.ge let220 let31)
  let let262 := (binrel% GE.ge let152 let3)
  let let263 := (binrel% LE.le let176 let17)
  let let264 := (binrel% GE.ge let159 let3)
  let let265 := (binrel% GE.ge let244 let2)
  let let266 := (binrel% GE.ge let144 let17)
  let let267 := (binrel% GE.ge let142 let14)
  let let268 := (binrel% GE.ge let75 let3)
  let let269 := (binrel% GE.ge let90 let9)
  let let270 := (binrel% GE.ge let125 let3)
  let let271 := (binrel% GE.ge let119 let2)
  let let272 := (Not let271)
  let let273 := (Not let270)
  let let274 := (Not let178)
  let let275 := (Not let269)
  let let276 := (Not let268)
  let let277 := (Not let267)
  let let278 := (Not let266)
  let let279 := (Or let161 (Or let273 (Or let272 (Or let54 (Or let46 (Or let277 (Or let274 (Or let275 (Or let27 (Or let66 (Or let19 (Or let276 (Or let278 let6)))))))))))))
  let let280 := (Or let213 (Or let273 (Or let272 (Or let185 (Or let231 (Or let277 (Or let274 (Or let275 (Or let196 (Or let223 (Or let183 (Or let276 (Or let278 let146)))))))))))))
  let let281 := (binrel% HAdd.hAdd let252 (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let198 (binrel% HAdd.hAdd let235 (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let219 (binrel% HAdd.hAdd let234 (binrel% HAdd.hAdd let163 (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let240 (binrel% HAdd.hAdd let247 (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd let246 let245)))))))))))))
  let let282 := (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let202 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let207 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let126 let129)))))))))))))
  let let283 := (binrel% LE.le let282 let281)
  let let284 := (binrel% LE.le let129 let245)
  let let285 := (And let61 let203)
  let let286 := (binrel% LE.le let126 let246)
  let let287 := (And let182 let270)
  let let288 := (binrel% LE.le let120 let210)
  let let289 := (And let59 let271)
  let let290 := (binrel% LE.le let114 let247)
  let let291 := (And let180 let195)
  let let292 := (binrel% LE.le let108 let240)
  let let293 := (binrel% LE.le let45 let101)
  let let294 := (And let39 let293)
  let let295 := (binrel% LE.le let143 let249)
  let let296 := (And let37 let267)
  let let297 := (binrel% LE.le let105 let163)
  let let298 := (And let205 let178)
  let let299 := (binrel% LE.le let91 let234)
  let let300 := (And let34 let269)
  let let301 := (binrel% LE.le let177 let219)
  let let302 := (binrel% LE.le let26 let218)
  let let303 := (And let189 let302)
  let let304 := (binrel% LE.le let80 let251)
  let let305 := (And let201 let191)
  let let306 := (binrel% LE.le let207 let235)
  let let307 := (binrel% LE.le let18 let2)
  let let308 := (And let13 let307)
  let let309 := (binrel% LE.le let76 let198)
  let let310 := (And let12 let268)
  let let311 := (binrel% LE.le let202 let229)
  let let312 := (And let34 let266)
  let let313 := (binrel% LE.le let63 let252)
  let let314 := (And let13 let212)
fun lean_r0 : (Eq let8 let7) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let12 True) => -- EVALUATE
fun lean_r2 : (Eq let13 True) => -- EVALUATE
fun lean_r3 : (Eq let21 let20) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let29 let28) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let34 True) => -- EVALUATE
fun lean_r6 : (Eq let37 True) => -- EVALUATE
fun lean_r7 : (Eq let39 True) => -- EVALUATE
fun lean_r8 : (Eq let48 let47) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let56 let55) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let59 True) => -- EVALUATE
fun lean_r11 : (Eq let61 True) => -- EVALUATE
fun lean_r12 : (Eq let63 let62) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let68 let67) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let76 let71) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let80 let79) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let91 let83) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let105 let99) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let108 let107) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let114 let113) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let120 let116) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let126 let123) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let129 let127) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let139 let130) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let143 let133) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let145 let144) => -- THEORY_REWRITE_ARITH
fun lean_r26 : let147 => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let152 let151) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let158 let28) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let159 let125) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let160 let128) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let162 True) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let163 let97) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let176 let175) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let177 let136) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let179 let178) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let180 True) => -- EVALUATE
fun lean_r37 : (Eq let181 let90) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let182 True) => -- EVALUATE
fun lean_r39 : let184 => -- THEORY_REWRITE_BOOL
fun lean_r40 : let186 => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let187 let20) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let188 True) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let189 True) => -- EVALUATE
fun lean_r44 : (Eq let191 let67) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let193 let192) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let147 let194) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let195 let55) => -- THEORY_REWRITE_ARITH
fun lean_r48 : let197 => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let198 let10) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let184 let199) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq let186 let200) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let201 True) => -- EVALUATE
fun lean_r53 : (Eq let202 let138) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let203 let192) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let204 True) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq let205 True) => -- EVALUATE
fun lean_r57 : (Eq let206 True) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq let207 let137) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let208 let65) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let209 let75) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let210 let58) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let211 True) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let212 let7) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let215 let214) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq let216 let142) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let219 let217) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let220 let157) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let222 let47) => -- THEORY_REWRITE_ARITH
fun lean_r69 : let224 => -- THEORY_REWRITE_BOOL
fun lean_r70 : (Eq let225 let221) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let224 let226) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let227 True) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let197 let228) => -- THEORY_REWRITE_BOOL
fun lean_r74 : (Eq let229 let81) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let230 True) => -- THEORY_REWRITE_BOOL
fun lean_r76 : let232 => -- THEORY_REWRITE_BOOL
fun lean_r77 : (Eq let232 let233) => -- THEORY_REWRITE_BOOL
fun lean_r78 : let215 => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq let234 let130) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let235 let10) => -- THEORY_REWRITE_ARITH
fun lean_r81 : let238 => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let240 let239) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let243 let58) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let244 let119) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let245 let130) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let246 let121) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let247 let130) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let248 let5) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let249 let132) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let250 False) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let251 let241) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let252 let242) => -- THEORY_REWRITE_ARITH
fun lean_a93 : (binrel% GE.ge x13x5fplus let9) =>
fun lean_a94 : (binrel% GE.ge x13x5fminus let9) =>
fun lean_a95 : (binrel% GE.ge x10x5fplus let9) =>
fun lean_a96 : (binrel% GE.ge x10x5fminus let9) =>
fun lean_a97 : (binrel% GE.ge x7x5fplus let9) =>
fun lean_a98 : (binrel% GE.ge x7x5fminus let9) =>
fun lean_a99 : (binrel% GE.ge x6x5fplus let9) =>
fun lean_a100 : (binrel% GE.ge x6x5fminus let9) =>
fun lean_a101 : (binrel% GE.ge x5x5fplus let9) =>
fun lean_a102 : (binrel% GE.ge x5x5fminus let9) =>
fun lean_a103 : (binrel% GE.ge x4x5fplus let9) =>
fun lean_a104 : (binrel% GE.ge x4x5fminus let9) =>
fun lean_a105 : (binrel% GE.ge x2x5fplus let9) =>
fun lean_a106 : (binrel% GE.ge x2x5fminus let9) =>
fun lean_a107 : (binrel% GE.ge x0x5fplus let9) =>
fun lean_a108 : (binrel% GE.ge x0x5fminus let9) =>
fun lean_a109 : (binrel% GE.ge x11x5fplus let9) =>
fun lean_a110 : (binrel% GE.ge x11x5fminus let9) =>
fun lean_a111 : (binrel% GE.ge x8x5fplus let9) =>
fun lean_a112 : (binrel% GE.ge x8x5fminus let9) =>
fun lean_a113 : (binrel% GE.ge x14x5fplus let9) =>
fun lean_a114 : (binrel% GE.ge x14x5fminus let9) =>
fun lean_a115 : (binrel% GE.ge x12x5fplus let9) =>
fun lean_a116 : (binrel% GE.ge x12x5fminus let9) =>
fun lean_a117 : (binrel% GE.ge x3x5fplus let9) =>
fun lean_a118 : (binrel% GE.ge x3x5fminus let9) =>
fun lean_a119 : (binrel% GE.ge x1x5fplus let9) =>
fun lean_a120 : (binrel% GE.ge x1x5fminus let9) =>
fun lean_a121 : let253 =>
fun lean_a122 : let254 =>
fun lean_a123 : let255 =>
fun lean_a124 : let256 =>
fun lean_a125 : let195 =>
fun lean_a126 : let257 =>
fun lean_a127 : let258 =>
fun lean_a128 : let259 =>
fun lean_a129 : let260 =>
fun lean_a130 : let261 =>
fun lean_a131 : let262 =>
fun lean_a132 : let263 =>
fun lean_a133 : let264 =>
fun lean_a134 : let265 => by
have lean_s0 : (Or let213 (Or let273 (Or let272 (Or let185 (Or let231 (Or let277 (Or let274 (Or let275 (Or let196 (Or let223 (Or let183 (Or let276 (Or let278 (Or let146 False)))))))))))))) :=
  (scope (fun lean_a135 : let192 =>
    (scope (fun lean_a136 : let270 =>
      (scope (fun lean_a137 : let271 =>
        (scope (fun lean_a138 : let55 =>
          (scope (fun lean_a139 : let47 =>
            (scope (fun lean_a140 : let267 =>
              (scope (fun lean_a141 : let178 =>
                (scope (fun lean_a142 : let269 =>
                  (scope (fun lean_a143 : let28 =>
                    (scope (fun lean_a144 : let67 =>
                      (scope (fun lean_a145 : let20 =>
                        (scope (fun lean_a146 : let268 =>
                          (scope (fun lean_a147 : let266 =>
                            (scope (fun lean_a148 : let7 =>
                              let lean_s0 := by timed flipCongrArg lean_r88 [LE.le]
                              have lean_s1 : (Eq let100 let100) := by timed rfl
                              have lean_s2 : (Eq let256 let212) := by timed congr lean_s0 lean_s1
                              have lean_s3 : (Eq let256 let7) := by timed Eq.trans lean_s2 lean_r63
                              have lean_s4 : let7 := by timed eqResolve lean_a124 lean_s3
                              have lean_s5 : (Eq let7 let8) := by timed Eq.symm lean_r0
                              have lean_s6 : let8 := by timed eqResolve lean_s4 lean_s5
                              have lean_s7 : let212 := by intTightUb lean_s6
                              have lean_s8 : (Or let236 False) :=
                                (scope (fun lean_a149 : let212 =>
                                  have lean_s8 : let13 := by timed trueElim lean_r2
                                  have lean_s9 : let314 := by timed And.intro lean_s8 lean_a149
                                  have lean_s10 : (Implies let314 let313) := by arithMulPos [let5, let100, let10], 1
                                  have lean_s11 : let313 := by timed modusPonens lean_s9 lean_s10
                                  have lean_s12 : let34 := by timed trueElim lean_r5
                                  let lean_s13 := by timed flipCongrArg lean_r25 [GE.ge]
                                  have lean_s14 : (Eq let17 let17) := by timed rfl
                                  have lean_s15 : (Eq let253 let266) := by timed congr lean_s13 lean_s14
                                  have lean_s16 : let266 := by timed eqResolve lean_a121 lean_s15
                                  have lean_s17 : let312 := by timed And.intro lean_s12 lean_s16
                                  have lean_s18 : (Implies let312 let311) := by arithMulNeg [let144, let17, let33], 3
                                  have lean_s19 : let311 := by timed modusPonens lean_s17 lean_s18
                                  have lean_s20 : let12 := by timed trueElim lean_r1
                                  let lean_s21 := by timed flipCongrArg lean_r60 [GE.ge]
                                  have lean_s22 : (Eq let3 let3) := by timed rfl
                                  have lean_s23 : (Eq let259 let268) := by timed congr lean_s21 lean_s22
                                  have lean_s24 : let268 := by timed eqResolve lean_a128 lean_s23
                                  have lean_s25 : let310 := by timed And.intro lean_s20 lean_s24
                                  have lean_s26 : (Implies let310 let309) := by arithMulNeg [let75, let3, let11], 3
                                  have lean_s27 : let309 := by timed modusPonens lean_s25 lean_s26
                                  let lean_s28 := by timed flipCongrArg lean_r27 [GE.ge]
                                  have lean_s29 : (Eq let262 let187) := by timed congr lean_s28 lean_s22
                                  have lean_s30 : (Eq let262 let20) := by timed Eq.trans lean_s29 lean_r41
                                  have lean_s31 : let20 := by timed eqResolve lean_a131 lean_s30
                                  have lean_s32 : (Eq let20 let21) := by timed Eq.symm lean_r3
                                  have lean_s33 : let21 := by timed eqResolve lean_s31 lean_s32
                                  have lean_s34 : let307 := by intTightUb lean_s33
                                  have lean_s35 : let308 := by timed And.intro lean_s8 lean_s34
                                  have lean_s36 : (Implies let308 let306) := by arithMulPos [let18, let2, let10], 1
                                  have lean_s37 : let306 := by timed modusPonens lean_s35 lean_s36
                                  have lean_s38 : let201 := by timed trueElim lean_r52
                                  let lean_s39 := by timed flipCongrArg lean_r59 [LE.le]
                                  have lean_s40 : (Eq let190 let190) := by timed rfl
                                  have lean_s41 : (Eq let254 let191) := by timed congr lean_s39 lean_s40
                                  have lean_s42 : (Eq let254 let67) := by timed Eq.trans lean_s41 lean_r44
                                  have lean_s43 : let67 := by timed eqResolve lean_a122 lean_s42
                                  have lean_s44 : (Eq let67 let68) := by timed Eq.symm lean_r13
                                  have lean_s45 : let68 := by timed eqResolve lean_s43 lean_s44
                                  have lean_s46 : let191 := by intTightUb lean_s45
                                  have lean_s47 : let305 := by timed And.intro lean_s38 lean_s46
                                  have lean_s48 : (Implies let305 let304) := by arithMulPos [let65, let190, let77], 1
                                  have lean_s49 : let304 := by timed modusPonens lean_s47 lean_s48
                                  have lean_s50 : let189 := by timed trueElim lean_r43
                                  let lean_s51 := by timed flipCongrArg lean_r67 [GE.ge]
                                  have lean_s52 : (Eq let31 let31) := by timed rfl
                                  have lean_s53 : (Eq let261 let158) := by timed congr lean_s51 lean_s52
                                  have lean_s54 : (Eq let261 let28) := by timed Eq.trans lean_s53 lean_r28
                                  have lean_s55 : let28 := by timed eqResolve lean_a130 lean_s54
                                  have lean_s56 : (Eq let28 let29) := by timed Eq.symm lean_r4
                                  have lean_s57 : let29 := by timed eqResolve lean_s55 lean_s56
                                  have lean_s58 : let302 := by intTightUb lean_s57
                                  have lean_s59 : let303 := by timed And.intro lean_s50 lean_s58
                                  have lean_s60 : (Implies let303 let301) := by arithMulPos [let26, let218, let134], 1
                                  have lean_s61 : let301 := by timed modusPonens lean_s59 lean_s60
                                  let lean_s62 := by timed flipCongrArg lean_r37 [GE.ge]
                                  have lean_s63 : (Eq let9 let9) := by timed rfl
                                  have lean_s64 : (Eq let260 let269) := by timed congr lean_s62 lean_s63
                                  have lean_s65 : let269 := by timed eqResolve lean_a129 lean_s64
                                  have lean_s66 : let300 := by timed And.intro lean_s12 lean_s65
                                  have lean_s67 : (Implies let300 let299) := by arithMulNeg [let90, let9, let33], 3
                                  have lean_s68 : let299 := by timed modusPonens lean_s66 lean_s67
                                  have lean_s69 : let205 := by timed trueElim lean_r56
                                  let lean_s70 := by timed flipCongrArg lean_r33 [LE.le]
                                  have lean_s71 : (Eq let263 let179) := by timed congr lean_s70 lean_s14
                                  have lean_s72 : (Eq let263 let178) := by timed Eq.trans lean_s71 lean_r35
                                  have lean_s73 : let178 := by timed eqResolve lean_a132 lean_s72
                                  have lean_s74 : let298 := by timed And.intro lean_s69 lean_s73
                                  have lean_s75 : (Implies let298 let297) := by arithMulNeg [let104, let14, let93], 3
                                  have lean_s76 : let297 := by timed modusPonens lean_s74 lean_s75
                                  have lean_s77 : let37 := by timed trueElim lean_r6
                                  let lean_s78 := by timed flipCongrArg lean_r65 [GE.ge]
                                  have lean_s79 : (Eq let14 let14) := by timed rfl
                                  have lean_s80 : (Eq let257 let267) := by timed congr lean_s78 lean_s79
                                  have lean_s81 : let267 := by timed eqResolve lean_a126 lean_s80
                                  have lean_s82 : let296 := by timed And.intro lean_s77 lean_s81
                                  have lean_s83 : (Implies let296 let295) := by arithMulNeg [let142, let14, let36], 3
                                  have lean_s84 : let295 := by timed modusPonens lean_s82 lean_s83
                                  have lean_s85 : let39 := by timed trueElim lean_r7
                                  let lean_s86 := by timed flipCongrArg lean_r70 [GE.ge]
                                  have lean_s87 : (Eq let258 let222) := by timed congr lean_s86 lean_s1
                                  have lean_s88 : (Eq let258 let47) := by timed Eq.trans lean_s87 lean_r68
                                  have lean_s89 : let47 := by timed eqResolve lean_a127 lean_s88
                                  have lean_s90 : (Eq let47 let48) := by timed Eq.symm lean_r8
                                  have lean_s91 : let48 := by timed eqResolve lean_s89 lean_s90
                                  have lean_s92 : let293 := by intTightUb lean_s91
                                  have lean_s93 : let294 := by timed And.intro lean_s85 lean_s92
                                  have lean_s94 : (Implies let294 let292) := by arithMulPos [let45, let101, let38], 1
                                  have lean_s95 : let292 := by timed modusPonens lean_s93 lean_s94
                                  have lean_s96 : let180 := by timed trueElim lean_r36
                                  have lean_s97 : let55 := by timed eqResolve lean_a125 lean_r47
                                  have lean_s98 : (Eq let55 let56) := by timed Eq.symm lean_r9
                                  have lean_s99 : let56 := by timed eqResolve lean_s97 lean_s98
                                  have lean_s100 : let195 := by intTightUb lean_s99
                                  have lean_s101 : let291 := by timed And.intro lean_s96 lean_s100
                                  have lean_s102 : (Implies let291 let290) := by arithMulPos [let53, let9, let109], 1
                                  have lean_s103 : let290 := by timed modusPonens lean_s101 lean_s102
                                  have lean_s104 : let59 := by timed trueElim lean_r10
                                  let lean_s105 := by timed flipCongrArg lean_r84 [GE.ge]
                                  have lean_s106 : (Eq let2 let2) := by timed rfl
                                  have lean_s107 : (Eq let265 let271) := by timed congr lean_s105 lean_s106
                                  have lean_s108 : let271 := by timed eqResolve lean_a134 lean_s107
                                  have lean_s109 : let289 := by timed And.intro lean_s104 lean_s108
                                  have lean_s110 : (Implies let289 let288) := by arithMulNeg [let119, let2, let58], 3
                                  have lean_s111 : let288 := by timed modusPonens lean_s109 lean_s110
                                  have lean_s112 : let182 := by timed trueElim lean_r38
                                  let lean_s113 := by timed flipCongrArg lean_r29 [GE.ge]
                                  have lean_s114 : (Eq let264 let270) := by timed congr lean_s113 lean_s22
                                  have lean_s115 : let270 := by timed eqResolve lean_a133 lean_s114
                                  have lean_s116 : let287 := by timed And.intro lean_s112 lean_s115
                                  have lean_s117 : (Implies let287 let286) := by arithMulNeg [let125, let3, let122], 3
                                  have lean_s118 : let286 := by timed modusPonens lean_s116 lean_s117
                                  have lean_s119 : let61 := by timed trueElim lean_r11
                                  let lean_s120 := by timed flipCongrArg lean_r30 [LE.le]
                                  have lean_s121 : (Eq let255 let203) := by timed congr lean_s120 lean_s63
                                  have lean_s122 : (Eq let255 let192) := by timed Eq.trans lean_s121 lean_r54
                                  have lean_s123 : let192 := by timed eqResolve lean_a123 lean_s122
                                  have lean_s124 : (Eq let192 let193) := by timed Eq.symm lean_r45
                                  have lean_s125 : let193 := by timed eqResolve lean_s123 lean_s124
                                  have lean_s126 : let203 := by intTightUb lean_s125
                                  have lean_s127 : let285 := by timed And.intro lean_s119 lean_s126
                                  have lean_s128 : (Implies let285 let284) := by arithMulPos [let128, let9, let60], 1
                                  have lean_s129 : let284 := by timed modusPonens lean_s127 lean_s128
                                  have lean_s130 : let283 := by sumBounds [lean_s11, lean_s19, lean_s27, lean_s37, lean_s49, lean_s61, lean_s68, lean_s76, lean_s84, lean_s95, lean_s103, lean_s111, lean_s118, lean_s129]
                                  let lean_s131 := by timed congrHAdd lean_r21 lean_r22
                                  let lean_s132 := by timed congrHAdd lean_r20 lean_s131
                                  let lean_s133 := by timed congrHAdd lean_r19 lean_s132
                                  let lean_s134 := by timed congrHAdd lean_r18 lean_s133
                                  let lean_s135 := by timed congrHAdd lean_r24 lean_s134
                                  let lean_s136 := by timed congrHAdd lean_r17 lean_s135
                                  let lean_s137 := by timed congrHAdd lean_r16 lean_s136
                                  let lean_s138 := by timed congrHAdd lean_r34 lean_s137
                                  let lean_s139 := by timed congrHAdd lean_r15 lean_s138
                                  let lean_s140 := by timed congrHAdd lean_r58 lean_s139
                                  let lean_s141 := by timed congrHAdd lean_r14 lean_s140
                                  let lean_s142 := by timed congrHAdd lean_r53 lean_s141
                                  have lean_s143 : (Eq let282 let139) := by timed congrHAdd lean_r12 lean_s142
                                  have lean_s144 : (Eq let282 let130) := by timed Eq.trans lean_s143 lean_r23
                                  let lean_s145 := by timed flipCongrArg lean_s144 [LE.le]
                                  let lean_s146 := by timed congrHAdd lean_r86 lean_r85
                                  let lean_s147 := by timed congrHAdd lean_r61 lean_s146
                                  let lean_s148 := by timed congrHAdd lean_r87 lean_s147
                                  let lean_s149 := by timed congrHAdd lean_r82 lean_s148
                                  let lean_s150 := by timed congrHAdd lean_r89 lean_s149
                                  let lean_s151 := by timed congrHAdd lean_r32 lean_s150
                                  let lean_s152 := by timed congrHAdd lean_r79 lean_s151
                                  let lean_s153 := by timed congrHAdd lean_r66 lean_s152
                                  let lean_s154 := by timed congrHAdd lean_r91 lean_s153
                                  let lean_s155 := by timed congrHAdd lean_r80 lean_s154
                                  let lean_s156 := by timed congrHAdd lean_r49 lean_s155
                                  let lean_s157 := by timed congrHAdd lean_r74 lean_s156
                                  have lean_s158 : (Eq let281 let243) := by timed congrHAdd lean_r92 lean_s157
                                  have lean_s159 : (Eq let281 let58) := by timed Eq.trans lean_s158 lean_r83
                                  have lean_s160 : (Eq let283 let250) := by timed congr lean_s145 lean_s159
                                  have lean_s161 : (Eq let283 False) := by timed Eq.trans lean_s160 lean_r90
                                  show False from by timed eqResolve lean_s130 lean_s161
                                ))
                              have lean_s9 : let236 := by liftOrNToNeg lean_s8
                              have lean_s10 : (Eq let236 let146) := by timed flipCongrArg lean_r63 [Not]
                              have lean_s11 : (Eq let236 let6) := by timed Eq.trans lean_s10 lean_r26
                              have lean_s12 : (Eq let237 let6) := by timed Eq.trans lean_r81 lean_s11
                              have lean_s13 : (Eq let6 let237) := by timed Eq.symm lean_s12
                              have lean_s14 : (Eq let236 let237) := by timed Eq.trans lean_s11 lean_s13
                              have lean_s15 : let237 := by timed eqResolve lean_s9 lean_s14
                              have lean_s16 : (Eq let6 let236) := by timed Eq.symm lean_s11
                              have lean_s17 : let238 := by timed Eq.trans lean_s12 lean_s16
                              have lean_s18 : let236 := by timed eqResolve lean_s15 lean_s17
                              show False from by timed contradiction lean_s7 lean_s18
  ))))))))))))))))))))))))))))
have lean_s1 : (Not (And let192 (And let270 (And let271 (And let55 (And let47 (And let267 (And let178 (And let269 (And let28 (And let67 (And let20 (And let268 (And let266 let7)))))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let280 := by timed flipNotAnd lean_s1 [let192, let270, let271, let55, let47, let267, let178, let269, let28, let67, let20, let268, let266, let7]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let162 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let214 let162) := by timed congr lean_s5 lean_r78
have lean_s7 : (Eq let214 True) := by timed Eq.trans lean_s6 lean_r31
have lean_s8 : (Eq let215 True) := by timed Eq.trans lean_r64 lean_s7
have lean_s9 : let215 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq let273 let273) := by timed rfl
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq let272 let272) := by timed rfl
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : let206 := by timed rfl
let lean_s16 := by timed flipCongrArg lean_s15 [Eq]
have lean_s17 : (Eq let200 let206) := by timed congr lean_s16 lean_r40
have lean_s18 : (Eq let200 True) := by timed Eq.trans lean_s17 lean_r57
have lean_s19 : (Eq let186 True) := by timed Eq.trans lean_r51 lean_s18
have lean_s20 : let186 := by timed trueElim lean_s19
let lean_s21 := by timed congr lean_s3 lean_s20
have lean_s22 : let230 := by timed rfl
let lean_s23 := by timed flipCongrArg lean_s22 [Eq]
have lean_s24 : (Eq let233 let230) := by timed congr lean_s23 lean_r76
have lean_s25 : (Eq let233 True) := by timed Eq.trans lean_s24 lean_r75
have lean_s26 : (Eq let232 True) := by timed Eq.trans lean_r77 lean_s25
have lean_s27 : let232 := by timed trueElim lean_s26
let lean_s28 := by timed congr lean_s3 lean_s27
have lean_s29 : (Eq let277 let277) := by timed rfl
let lean_s30 := by timed congr lean_s3 lean_s29
have lean_s31 : (Eq let274 let274) := by timed rfl
let lean_s32 := by timed congr lean_s3 lean_s31
have lean_s33 : (Eq let275 let275) := by timed rfl
let lean_s34 := by timed congr lean_s3 lean_s33
have lean_s35 : let227 := by timed rfl
let lean_s36 := by timed flipCongrArg lean_s35 [Eq]
have lean_s37 : (Eq let228 let227) := by timed congr lean_s36 lean_r48
have lean_s38 : (Eq let228 True) := by timed Eq.trans lean_s37 lean_r72
have lean_s39 : (Eq let197 True) := by timed Eq.trans lean_r73 lean_s38
have lean_s40 : let197 := by timed trueElim lean_s39
let lean_s41 := by timed congr lean_s3 lean_s40
have lean_s42 : let188 := by timed rfl
let lean_s43 := by timed flipCongrArg lean_s42 [Eq]
have lean_s44 : (Eq let226 let188) := by timed congr lean_s43 lean_r69
have lean_s45 : (Eq let226 True) := by timed Eq.trans lean_s44 lean_r42
have lean_s46 : (Eq let224 True) := by timed Eq.trans lean_r71 lean_s45
have lean_s47 : let224 := by timed trueElim lean_s46
let lean_s48 := by timed congr lean_s3 lean_s47
have lean_s49 : let204 := by timed rfl
let lean_s50 := by timed flipCongrArg lean_s49 [Eq]
have lean_s51 : (Eq let199 let204) := by timed congr lean_s50 lean_r39
have lean_s52 : (Eq let199 True) := by timed Eq.trans lean_s51 lean_r55
have lean_s53 : (Eq let184 True) := by timed Eq.trans lean_r50 lean_s52
have lean_s54 : let184 := by timed trueElim lean_s53
let lean_s55 := by timed congr lean_s3 lean_s54
have lean_s56 : (Eq let276 let276) := by timed rfl
let lean_s57 := by timed congr lean_s3 lean_s56
have lean_s58 : (Eq let278 let278) := by timed rfl
let lean_s59 := by timed congr lean_s3 lean_s58
have lean_s60 : let211 := by timed rfl
let lean_s61 := by timed flipCongrArg lean_s60 [Eq]
have lean_s62 : (Eq let194 let211) := by timed congr lean_s61 lean_r26
have lean_s63 : (Eq let194 True) := by timed Eq.trans lean_s62 lean_r62
have lean_s64 : (Eq let147 True) := by timed Eq.trans lean_r46 lean_s63
have lean_s65 : let147 := by timed trueElim lean_s64
let lean_s66 := by timed congr lean_s59 lean_s65
let lean_s67 := by timed congr lean_s57 lean_s66
let lean_s68 := by timed congr lean_s55 lean_s67
let lean_s69 := by timed congr lean_s48 lean_s68
let lean_s70 := by timed congr lean_s41 lean_s69
let lean_s71 := by timed congr lean_s34 lean_s70
let lean_s72 := by timed congr lean_s32 lean_s71
let lean_s73 := by timed congr lean_s30 lean_s72
let lean_s74 := by timed congr lean_s28 lean_s73
let lean_s75 := by timed congr lean_s21 lean_s74
let lean_s76 := by timed congr lean_s14 lean_s75
let lean_s77 := by timed congr lean_s12 lean_s76
have lean_s78 : (Eq let280 let279) := by timed congr lean_s10 lean_s77
have lean_s79 : let279 := by timed eqResolve lean_s2 lean_s78
have lean_s80 : (Or let66 (Or let161 (Or let6 (Or let54 (Or let46 (Or let27 (Or let19 (Or let278 (Or let277 (Or let276 (Or let275 (Or let274 (Or let273 let272))))))))))))) := by permutateOr lean_s79, [9, 0, 13, 3, 4, 8, 10, 12, 5, 11, 7, 6, 1, 2], (- 1)
let lean_s81 := by timed flipCongrArg lean_r84 [GE.ge]
have lean_s82 : (Eq let2 let2) := by timed rfl
have lean_s83 : (Eq let265 let271) := by timed congr lean_s81 lean_s82
have lean_s84 : let271 := by timed eqResolve lean_a134 lean_s83
let lean_s85 := by R2 lean_s80, lean_s84, let271, [(- 1), 0]
let lean_s86 := by timed flipCongrArg lean_r29 [GE.ge]
have lean_s87 : (Eq let3 let3) := by timed rfl
have lean_s88 : (Eq let264 let270) := by timed congr lean_s86 lean_s87
have lean_s89 : let270 := by timed eqResolve lean_a133 lean_s88
let lean_s90 := by R2 lean_s85, lean_s89, let270, [(- 1), 0]
let lean_s91 := by timed flipCongrArg lean_r33 [LE.le]
have lean_s92 : (Eq let17 let17) := by timed rfl
have lean_s93 : (Eq let263 let179) := by timed congr lean_s91 lean_s92
have lean_s94 : (Eq let263 let178) := by timed Eq.trans lean_s93 lean_r35
have lean_s95 : let178 := by timed eqResolve lean_a132 lean_s94
let lean_s96 := by R2 lean_s90, lean_s95, let178, [(- 1), 0]
let lean_s97 := by timed flipCongrArg lean_r27 [GE.ge]
have lean_s98 : (Eq let262 let187) := by timed congr lean_s97 lean_s87
have lean_s99 : (Eq let262 let20) := by timed Eq.trans lean_s98 lean_r41
have lean_s100 : let20 := by timed eqResolve lean_a131 lean_s99
let lean_s101 := by R1 lean_s96, lean_s100, let19, [(- 1), 0]
let lean_s102 := by timed flipCongrArg lean_r67 [GE.ge]
have lean_s103 : (Eq let31 let31) := by timed rfl
have lean_s104 : (Eq let261 let158) := by timed congr lean_s102 lean_s103
have lean_s105 : (Eq let261 let28) := by timed Eq.trans lean_s104 lean_r28
have lean_s106 : let28 := by timed eqResolve lean_a130 lean_s105
let lean_s107 := by R1 lean_s101, lean_s106, let27, [(- 1), 0]
let lean_s108 := by timed flipCongrArg lean_r37 [GE.ge]
have lean_s109 : (Eq let9 let9) := by timed rfl
have lean_s110 : (Eq let260 let269) := by timed congr lean_s108 lean_s109
have lean_s111 : let269 := by timed eqResolve lean_a129 lean_s110
let lean_s112 := by R2 lean_s107, lean_s111, let269, [(- 1), 0]
let lean_s113 := by timed flipCongrArg lean_r60 [GE.ge]
have lean_s114 : (Eq let259 let268) := by timed congr lean_s113 lean_s87
have lean_s115 : let268 := by timed eqResolve lean_a128 lean_s114
let lean_s116 := by R2 lean_s112, lean_s115, let268, [(- 1), 0]
let lean_s117 := by timed flipCongrArg lean_r70 [GE.ge]
have lean_s118 : (Eq let100 let100) := by timed rfl
have lean_s119 : (Eq let258 let222) := by timed congr lean_s117 lean_s118
have lean_s120 : (Eq let258 let47) := by timed Eq.trans lean_s119 lean_r68
have lean_s121 : let47 := by timed eqResolve lean_a127 lean_s120
let lean_s122 := by R1 lean_s116, lean_s121, let46, [(- 1), 0]
let lean_s123 := by timed flipCongrArg lean_r65 [GE.ge]
have lean_s124 : (Eq let14 let14) := by timed rfl
have lean_s125 : (Eq let257 let267) := by timed congr lean_s123 lean_s124
have lean_s126 : let267 := by timed eqResolve lean_a126 lean_s125
let lean_s127 := by R2 lean_s122, lean_s126, let267, [(- 1), 0]
have lean_s128 : let55 := by timed eqResolve lean_a125 lean_r47
let lean_s129 := by R1 lean_s127, lean_s128, let54, [(- 1), 0]
let lean_s130 := by timed flipCongrArg lean_r88 [LE.le]
have lean_s131 : (Eq let256 let212) := by timed congr lean_s130 lean_s118
have lean_s132 : (Eq let256 let7) := by timed Eq.trans lean_s131 lean_r63
have lean_s133 : let7 := by timed eqResolve lean_a124 lean_s132
let lean_s134 := by R1 lean_s129, lean_s133, let6, [(- 1), 0]
let lean_s135 := by timed flipCongrArg lean_r30 [LE.le]
have lean_s136 : (Eq let255 let203) := by timed congr lean_s135 lean_s109
have lean_s137 : (Eq let255 let192) := by timed Eq.trans lean_s136 lean_r54
have lean_s138 : let192 := by timed eqResolve lean_a123 lean_s137
let lean_s139 := by R1 lean_s134, lean_s138, let161, [(- 1), 0]
let lean_s140 := by timed flipCongrArg lean_r59 [LE.le]
have lean_s141 : (Eq let190 let190) := by timed rfl
have lean_s142 : (Eq let254 let191) := by timed congr lean_s140 lean_s141
have lean_s143 : (Eq let254 let67) := by timed Eq.trans lean_s142 lean_r44
have lean_s144 : let67 := by timed eqResolve lean_a122 lean_s143
let lean_s145 := by R1 lean_s139, lean_s144, let66, [(- 1), 0]
let lean_s146 := by timed flipCongrArg lean_r25 [GE.ge]
have lean_s147 : (Eq let253 let266) := by timed congr lean_s146 lean_s92
have lean_s148 : let266 := by timed eqResolve lean_a121 lean_s147
exact (show False from by R2 lean_s145, lean_s148, let266, [0, 0])


