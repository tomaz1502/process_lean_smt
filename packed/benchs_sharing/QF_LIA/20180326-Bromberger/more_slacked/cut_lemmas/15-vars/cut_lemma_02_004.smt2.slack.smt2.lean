open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x2x5fplus : Int}
variable {x2x5fminus : Int}
variable {x11x5fplus : Int}
variable {x11x5fminus : Int}
variable {x7x5fminus : Int}
variable {x6x5fplus : Int}
variable {x6x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x8x5fplus : Int}
variable {x8x5fminus : Int}
variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x0x5fplus : Int}
variable {x12x5fplus : Int}
variable {x10x5fplus : Int}
variable {x10x5fminus : Int}
variable {x8x5fplus : Int}
variable {x13x5fminus : Int}
variable {x8x5fminus : Int}
variable {x1x5fminus : Int}
variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x4x5fminus : Int}
variable {x1x5fplus : Int}
variable {x14x5fplus : Int}
variable {x3x5fplus : Int}
variable {x7x5fplus : Int}
variable {x1x5fminus : Int}
variable {x3x5fminus : Int}
variable {x3x5fplus : Int}
variable {x4x5fplus : Int}
variable {x6x5fminus : Int}
variable {x1x5fplus : Int}
variable {x6x5fplus : Int}
variable {x7x5fminus : Int}
variable {x12x5fminus : Int}
variable {x7x5fplus : Int}
variable {x13x5fplus : Int}
variable {x11x5fminus : Int}
variable {x11x5fplus : Int}
variable {x10x5fminus : Int}
variable {x12x5fminus : Int}
variable {x12x5fplus : Int}
variable {x13x5fminus : Int}
variable {x14x5fminus : Int}
variable {x13x5fplus : Int}
variable {x10x5fplus : Int}
variable {x14x5fminus : Int}
variable {x0x5fminus : Int}
variable {x3x5fminus : Int}
variable {x14x5fplus : Int}
variable {x2x5fminus : Int}
variable {x2x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 6)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let3 x0x5fminus))
  let let5 := (binrel% GE.ge let4 let1)
  let let6 := (Not let5)
  let let7 := (binrel% LT.lt let4 let1)
  let let8 := (Int.ofNat 0)
  let let9 := (Int.ofNat 2)
  let let10 := (binrel% HDiv.hDiv let2 let9)
  let let11 := (binrel% GT.gt let10 let8)
  let let12 := (Neg.neg let9)
  let let13 := (binrel% HMul.hMul let3 x1x5fplus)
  let let14 := (binrel% HAdd.hAdd let13 x1x5fminus)
  let let15 := (binrel% HMul.hMul let12 x12x5fminus)
  let let16 := (binrel% HMul.hMul let9 x12x5fplus)
  let let17 := (binrel% HMul.hMul let12 x14x5fminus)
  let let18 := (binrel% HMul.hMul let9 x14x5fplus)
  let let19 := (binrel% HMul.hMul let3 x8x5fplus)
  let let20 := (binrel% HMul.hMul let12 x11x5fminus)
  let let21 := (binrel% HMul.hMul let9 x11x5fplus)
  let let22 := (binrel% HMul.hMul let3 x0x5fplus)
  let let23 := (binrel% HMul.hMul let12 x4x5fminus)
  let let24 := (binrel% HMul.hMul let9 x4x5fplus)
  let let25 := (binrel% HMul.hMul let3 x6x5fplus)
  let let26 := (binrel% HMul.hMul let3 x7x5fplus)
  let let27 := (binrel% HMul.hMul let12 x10x5fminus)
  let let28 := (binrel% HMul.hMul let9 x10x5fplus)
  let let29 := (binrel% HMul.hMul let3 x13x5fminus)
  let let30 := (binrel% HMul.hMul let3 x3x5fminus)
  let let31 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 let14))))))))))))))))))))))
  let let32 := (binrel% GE.ge let31 let12)
  let let33 := (Not let32)
  let let34 := (binrel% LT.lt let31 let12)
  let let35 := (binrel% HMul.hMul let3 x11x5fminus)
  let let36 := (binrel% HAdd.hAdd x11x5fplus let35)
  let let37 := (binrel% GE.ge let36 let2)
  let let38 := (Not let37)
  let let39 := (binrel% LT.lt let36 let2)
  let let40 := (Rat.ofInt 1)
  let let41 := (binrel% GT.gt let40 let8)
  let let42 := (binrel% HMul.hMul let3 x8x5fminus)
  let let43 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x14x5fplus) (binrel% HMul.hMul let9 x14x5fminus))))))
  let let44 := (binrel% GE.ge let43 let9)
  let let45 := (Not let44)
  let let46 := (binrel% LT.lt let43 let9)
  let let47 := (binrel% HMul.hMul let40 let2)
  let let48 := (binrel% HMul.hMul let40 let8)
  let let49 := (Neg.neg let40)
  let let50 := (binrel% HMul.hMul let49 let12)
  let let51 := (Neg.neg let10)
  let let52 := (binrel% HMul.hMul let51 let3)
  let let53 := (Int.ofNat 3)
  let let54 := (Neg.neg let53)
  let let55 := (binrel% HDiv.hDiv let53 let9)
  let let56 := (binrel% HMul.hMul let55 let54)
  let let57 := (Neg.neg (Int.ofNat 10))
  let let58 := (binrel% HMul.hMul let10 let57)
  let let59 := (binrel% HMul.hMul let49 let8)
  let let60 := (binrel% HMul.hMul let51 let9)
  let let61 := (binrel% HMul.hMul let51 let2)
  let let62 := (binrel% HMul.hMul let51 let53)
  let let63 := (Int.ofNat 5)
  let let64 := (binrel% HMul.hMul let40 let63)
  let let65 := (binrel% HMul.hMul let49 let3)
  let let66 := (binrel% HMul.hMul let40 let53)
  let let67 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let48 let47))))))))))))
  let let68 := (binrel% HMul.hMul let40 let43)
  let let69 := (binrel% HMul.hMul let40 let36)
  let let70 := (binrel% HAdd.hAdd x13x5fplus let29)
  let let71 := (binrel% HMul.hMul let49 let70)
  let let72 := (binrel% HMul.hMul let3 x4x5fminus)
  let let73 := (binrel% HMul.hMul let3 x10x5fminus)
  let let74 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x0x5fminus let14))))))))))
  let let75 := (binrel% HMul.hMul let51 let74)
  let let76 := (binrel% HMul.hMul let55 let31)
  let let77 := (binrel% HMul.hMul let3 x11x5fplus)
  let let78 := (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x7x5fminus) (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x14x5fplus) (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x12x5fplus) x12x5fminus)))))))
  let let79 := (binrel% HMul.hMul let10 let78)
  let let80 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 let14))))))
  let let81 := (binrel% HMul.hMul let49 let80)
  let let82 := (binrel% HAdd.hAdd x8x5fplus let42)
  let let83 := (binrel% HMul.hMul let3 x2x5fplus)
  let let84 := (binrel% HMul.hMul let3 x5x5fminus)
  let let85 := (binrel% HMul.hMul let9 x6x5fminus)
  let let86 := (binrel% HMul.hMul let12 x6x5fplus)
  let let87 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 let82))))))))))))
  let let88 := (binrel% HMul.hMul let51 let87)
  let let89 := (binrel% HMul.hMul let3 x5x5fplus)
  let let90 := (binrel% HMul.hMul let12 x3x5fminus)
  let let91 := (binrel% HMul.hMul let9 x3x5fplus)
  let let92 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd x5x5fminus let82))))))
  let let93 := (binrel% HMul.hMul let51 let92)
  let let94 := (binrel% HMul.hMul let3 x12x5fminus)
  let let95 := (binrel% HMul.hMul let3 x14x5fminus)
  let let96 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd x12x5fplus let94)))
  let let97 := (binrel% HMul.hMul let3 x2x5fminus)
  let let98 := (binrel% HMul.hMul let3 x10x5fplus)
  let let99 := (binrel% HMul.hMul let3 x13x5fplus)
  let let100 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus let96))))))))))
  let let101 := (binrel% HMul.hMul let51 let100)
  let let102 := (binrel% HMul.hMul let40 let4)
  let let103 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let16 let15)))))))))
  let let104 := (binrel% HMul.hMul let49 let103)
  let let105 := (binrel% HMul.hMul let40 let82)
  let let106 := (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let69 let68))))))))))))
  let let107 := (binrel% GE.ge let106 let67)
  let let108 := (Not let107)
  let let109 := (binrel% LT.lt let106 let67)
  let let110 := (binrel% GE.ge let78 let57)
  let let111 := (Not let110)
  let let112 := (Not let111)
  let let113 := (Eq let112 let110)
  let let114 := (Not let6)
  let let115 := (Eq let5 let114)
  let let116 := (Eq let114 let5)
  let let117 := (Not let45)
  let let118 := (Eq let117 let44)
  let let119 := (Int.ofNat 4)
  let let120 := (binrel% GE.ge let82 let119)
  let let121 := (Not let120)
  let let122 := (Not let121)
  let let123 := (Eq let122 let120)
  let let124 := (binrel% GT.gt let55 let8)
  let let125 := (Eq let5 let5)
  let let126 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x2x5fplus let97)))))))))))))
  let let127 := (Eq let32 let32)
  let let128 := (Eq let120 let122)
  let let129 := (binrel% HAdd.hAdd let22 x0x5fminus)
  let let130 := (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x1x5fminus let129))
  let let131 := (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 let130))))))))))))))))))))
  let let132 := (binrel% HSub.hSub x8x5fplus x8x5fminus)
  let let133 := (Rat.ofInt 0)
  let let134 := (Rat.ofInt let43)
  let let135 := (Rat.ofInt let36)
  let let136 := (Rat.ofInt (binrel% HAdd.hAdd let99 x13x5fminus))
  let let137 := (binrel% HMul.hMul let10 x4x5fminus)
  let let138 := (binrel% HMul.hMul let51 x4x5fplus)
  let let139 := (binrel% HMul.hMul let10 x10x5fminus)
  let let140 := (binrel% HMul.hMul let51 x10x5fplus)
  let let141 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x6x5fminus) (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x1x5fplus) (binrel% HMul.hMul let51 x1x5fminus))))))))))))
  let let142 := (Neg.neg let55)
  let let143 := (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let53 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let53 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let53 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let53 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let53 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x1x5fplus) (binrel% HMul.hMul let55 x1x5fminus))))))))))))))))))))))))
  let let144 := (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x12x5fplus) (binrel% HMul.hMul let10 x12x5fminus))))
  let let145 := (binrel% HMul.hMul let10 x11x5fminus)
  let let146 := (binrel% HMul.hMul let51 x11x5fplus)
  let let147 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x7x5fminus) (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let145 let144))))
  let let148 := (binrel% HMul.hMul let9 x4x5fminus)
  let let149 := (binrel% HMul.hMul let12 x4x5fplus)
  let let150 := (Rat.ofInt (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x11x5fminus) (binrel% HAdd.hAdd x1x5fplus (binrel% HMul.hMul let3 x1x5fminus)))))))))
  let let151 := (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x8x5fplus) (binrel% HMul.hMul let10 x8x5fminus))
  let let152 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x5x5fminus) (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x2x5fminus) (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let145 let151))))))))))))
  let let153 := (binrel% HMul.hMul let3 x3x5fplus)
  let let154 := (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x5x5fminus) let151))))))
  let let155 := (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x8x5fminus) let144))))))))))
  let let156 := (Rat.ofInt let4)
  let let157 := (Rat.ofInt (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x12x5fplus) (binrel% HMul.hMul let9 x12x5fminus)))))))))))
  let let158 := (Rat.ofInt let82)
  let let159 := (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let135 let134))))))))))))
  let let160 := (binrel% LE.le let31 let54)
  let let161 := (Eq let110 let110)
  let let162 := (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let18 let17)))))
  let let163 := (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let153 x3x5fminus)))))
  let let164 := (binrel% GE.ge let162 let3)
  let let165 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let91 let90)))))))
  let let166 := (Eq let120 let120)
  let let167 := (binrel% LT.lt let82 let119)
  let let168 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 let14))))))
  let let169 := (binrel% HSub.hSub x13x5fplus x13x5fminus)
  let let170 := (Int.ofNat 11)
  let let171 := (binrel% HMul.hMul let9 x7x5fminus)
  let let172 := (binrel% HMul.hMul let12 x7x5fplus)
  let let173 := (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 let96))))
  let let174 := (binrel% GE.ge let173 let170)
  let let175 := (binrel% LT.lt let78 let57)
  let let176 := (binrel% LE.le let4 let63)
  let let177 := (binrel% HSub.hSub x0x5fplus x0x5fminus)
  let let178 := (Eq let44 let44)
  let let179 := (Rat.ofInt 2)
  let let180 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 9) let9))
  let let181 := (Rat.ofInt 5)
  let let182 := (Neg.neg let181)
  let let183 := (Rat.ofInt 3)
  let let184 := (binrel% HAdd.hAdd let183 (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let179 (binrel% HAdd.hAdd let133 let40))))))))))))
  let let185 := (binrel% LE.le let36 let8)
  let let186 := (binrel% LT.lt let49 let8)
  let let187 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let72 let130))))))))
  let let188 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let83 x2x5fminus)))))))))))))
  let let189 := (binrel% GE.ge let133 let133)
  let let190 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x3x5fplus let30)))))))))
  let let191 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let172 let171)))))))
  let let192 := (Not let33)
  let let193 := (Eq let192 let32)
  let let194 := (Eq let32 let192)
  let let195 := (Eq let37 let37)
  let let196 := (binrel% HSub.hSub x11x5fplus x11x5fminus)
  let let197 := (binrel% LT.lt let51 let8)
  let let198 := (binrel% LE.le let82 let53)
  let let199 := (Not let198)
  let let200 := (binrel% GT.gt let82 let53)
  let let201 := (Eq let200 let199)
  let let202 := (Eq let44 let117)
  let let203 := (Not True)
  let let204 := (Eq let110 let112)
  let let205 := (Not let38)
  let let206 := (Eq let205 let37)
  let let207 := (Eq let37 let205)
  let let208 := (binrel% GE.ge let169 let12)
  let let209 := (binrel% LE.le let177 let63)
  let let210 := (binrel% LE.le let196 let8)
  let let211 := (binrel% LE.le let132 let53)
  let let212 := (binrel% GE.ge let188 let9)
  let let213 := (binrel% GE.ge let126 let53)
  let let214 := (binrel% GE.ge let190 let3)
  let let215 := (binrel% GE.ge let168 let8)
  let let216 := (binrel% GE.ge let191 let170)
  let let217 := (binrel% GE.ge let163 let3)
  let let218 := (binrel% LE.le let131 let54)
  let let219 := (binrel% GE.ge let187 let3)
  let let220 := (binrel% GE.ge let165 let2)
  let let221 := (binrel% GE.ge let70 let12)
  let let222 := (binrel% GE.ge let87 let9)
  let let223 := (binrel% GE.ge let100 let53)
  let let224 := (binrel% GE.ge let103 let3)
  let let225 := (binrel% GE.ge let80 let8)
  let let226 := (binrel% GE.ge let74 let3)
  let let227 := (binrel% GE.ge let92 let2)
  let let228 := (Not let227)
  let let229 := (Not let226)
  let let230 := (Not let225)
  let let231 := (Not let224)
  let let232 := (Not let223)
  let let233 := (Not let222)
  let let234 := (Not let221)
  let let235 := (Or let44 (Or let37 (Or let234 (Or let229 (Or let32 (Or let110 (Or let230 (Or let233 (Or let228 (Or let232 (Or let5 (Or let231 let120))))))))))))
  let let236 := (Or let117 (Or let205 (Or let234 (Or let229 (Or let192 (Or let112 (Or let230 (Or let233 (Or let228 (Or let232 (Or let114 (Or let231 let122))))))))))))
  let let237 := (binrel% LE.le let68 let47)
  let let238 := (binrel% LE.le let43 let2)
  let let239 := (And let41 let238)
  let let240 := (binrel% LE.le let69 let48)
  let let241 := (And let41 let185)
  let let242 := (binrel% LE.le let71 let50)
  let let243 := (And let186 let221)
  let let244 := (binrel% LE.le let75 let52)
  let let245 := (And let197 let226)
  let let246 := (binrel% LE.le let76 let56)
  let let247 := (And let124 let160)
  let let248 := (binrel% LT.lt let79 let58)
  let let249 := (And let11 let175)
  let let250 := (binrel% LE.le let81 let59)
  let let251 := (And let186 let225)
  let let252 := (binrel% LE.le let88 let60)
  let let253 := (And let197 let222)
  let let254 := (binrel% LE.le let93 let61)
  let let255 := (And let197 let227)
  let let256 := (binrel% LE.le let101 let62)
  let let257 := (And let197 let223)
  let let258 := (binrel% LE.le let102 let64)
  let let259 := (And let41 let176)
  let let260 := (binrel% LE.le let104 let65)
  let let261 := (And let186 let224)
  let let262 := (binrel% LE.le let105 let66)
  let let263 := (And let41 let198)
(Eq let7 let6) → (Eq let11 True) → (Eq let34 let33) → (Eq let39 let38) → (Eq let41 True) → (Eq let46 let45) → (Eq let109 let108) → let113 → (Eq let116 let115) → let118 → let123 → (Eq let124 True) → (Eq let125 True) → (Eq let126 let100) → (Eq let127 True) → (Eq let123 let128) → (Eq let131 let31) → (Eq let132 let82) → (Eq let159 let133) → (Eq let160 let33) → (Eq let161 True) → (Eq let163 let162) → (Eq let164 let45) → (Eq let165 let92) → (Eq let166 True) → (Eq let167 let121) → (Eq let168 let80) → (Eq let169 let70) → (Eq let174 let111) → (Eq let175 let111) → (Eq let176 let6) → (Eq let177 let4) → (Eq let81 let150) → (Eq let59 let133) → let116 → (Eq let178 True) → (Eq let184 let133) → (Eq let185 let38) → (Eq let186 True) → (Eq let187 let74) → (Eq let188 let87) → (Eq let189 True) → (Eq let190 let103) → (Eq let191 let173) → let193 → (Eq let193 let194) → (Eq let93 let154) → (Eq let61 let51) → (Eq let195 True) → (Eq let196 let36) → (Eq let71 let136) → (Eq let50 let179) → (Eq let197 True) → let201 → (Eq let76 let143) → (Eq let198 let121) → (Eq let56 let180) → (Eq let118 let202) → (Eq let203 False) → (Eq let68 let134) → (Eq let113 let204) → (Eq let47 let40) → (Eq let79 let147) → (Eq let58 let182) → (Eq let88 let152) → (Eq let60 let49) → (Eq let48 let133) → (Eq let69 let135) → (Eq let101 let155) → let206 → (Eq let62 let142) → (Eq let52 let10) → (Eq let75 let141) → (Eq let102 let156) → (Eq let206 let207) → (Eq let64 let181) → (Eq let104 let157) → (Eq let65 let40) → (Eq let105 let158) → (Eq let66 let183) → (binrel% GE.ge x3x5fplus let8) → (binrel% GE.ge x3x5fminus let8) → (binrel% GE.ge x13x5fplus let8) → (binrel% GE.ge x13x5fminus let8) → (binrel% GE.ge x10x5fplus let8) → (binrel% GE.ge x10x5fminus let8) → (binrel% GE.ge x7x5fplus let8) → (binrel% GE.ge x7x5fminus let8) → (binrel% GE.ge x6x5fplus let8) → (binrel% GE.ge x6x5fminus let8) → (binrel% GE.ge x5x5fplus let8) → (binrel% GE.ge x5x5fminus let8) → (binrel% GE.ge x4x5fplus let8) → (binrel% GE.ge x4x5fminus let8) → (binrel% GE.ge x2x5fplus let8) → (binrel% GE.ge x2x5fminus let8) → (binrel% GE.ge x0x5fplus let8) → (binrel% GE.ge x0x5fminus let8) → (binrel% GE.ge x11x5fplus let8) → (binrel% GE.ge x11x5fminus let8) → (binrel% GE.ge x8x5fplus let8) → (binrel% GE.ge x8x5fminus let8) → (binrel% GE.ge x14x5fplus let8) → (binrel% GE.ge x14x5fminus let8) → (binrel% GE.ge x12x5fplus let8) → (binrel% GE.ge x12x5fminus let8) → (binrel% GE.ge x1x5fplus let8) → (binrel% GE.ge x1x5fminus let8) → (binrel% GE.ge (binrel% HSub.hSub x3x5fplus x3x5fminus) let8) → let208 → let209 → let210 → let211 → (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x13x5fminus) (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x5x5fminus) (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd x2x5fminus let129)))))))))))))) let8) → let212 → let213 → let214 → let215 → let216 → let217 → let218 → let219 → let220 → False :=
  let let1 := (Int.ofNat 6)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let3 x0x5fminus))
  let let5 := (binrel% GE.ge let4 let1)
  let let6 := (Not let5)
  let let7 := (binrel% LT.lt let4 let1)
  let let8 := (Int.ofNat 0)
  let let9 := (Int.ofNat 2)
  let let10 := (binrel% HDiv.hDiv let2 let9)
  let let11 := (binrel% GT.gt let10 let8)
  let let12 := (Neg.neg let9)
  let let13 := (binrel% HMul.hMul let3 x1x5fplus)
  let let14 := (binrel% HAdd.hAdd let13 x1x5fminus)
  let let15 := (binrel% HMul.hMul let12 x12x5fminus)
  let let16 := (binrel% HMul.hMul let9 x12x5fplus)
  let let17 := (binrel% HMul.hMul let12 x14x5fminus)
  let let18 := (binrel% HMul.hMul let9 x14x5fplus)
  let let19 := (binrel% HMul.hMul let3 x8x5fplus)
  let let20 := (binrel% HMul.hMul let12 x11x5fminus)
  let let21 := (binrel% HMul.hMul let9 x11x5fplus)
  let let22 := (binrel% HMul.hMul let3 x0x5fplus)
  let let23 := (binrel% HMul.hMul let12 x4x5fminus)
  let let24 := (binrel% HMul.hMul let9 x4x5fplus)
  let let25 := (binrel% HMul.hMul let3 x6x5fplus)
  let let26 := (binrel% HMul.hMul let3 x7x5fplus)
  let let27 := (binrel% HMul.hMul let12 x10x5fminus)
  let let28 := (binrel% HMul.hMul let9 x10x5fplus)
  let let29 := (binrel% HMul.hMul let3 x13x5fminus)
  let let30 := (binrel% HMul.hMul let3 x3x5fminus)
  let let31 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 let14))))))))))))))))))))))
  let let32 := (binrel% GE.ge let31 let12)
  let let33 := (Not let32)
  let let34 := (binrel% LT.lt let31 let12)
  let let35 := (binrel% HMul.hMul let3 x11x5fminus)
  let let36 := (binrel% HAdd.hAdd x11x5fplus let35)
  let let37 := (binrel% GE.ge let36 let2)
  let let38 := (Not let37)
  let let39 := (binrel% LT.lt let36 let2)
  let let40 := (Rat.ofInt 1)
  let let41 := (binrel% GT.gt let40 let8)
  let let42 := (binrel% HMul.hMul let3 x8x5fminus)
  let let43 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x14x5fplus) (binrel% HMul.hMul let9 x14x5fminus))))))
  let let44 := (binrel% GE.ge let43 let9)
  let let45 := (Not let44)
  let let46 := (binrel% LT.lt let43 let9)
  let let47 := (binrel% HMul.hMul let40 let2)
  let let48 := (binrel% HMul.hMul let40 let8)
  let let49 := (Neg.neg let40)
  let let50 := (binrel% HMul.hMul let49 let12)
  let let51 := (Neg.neg let10)
  let let52 := (binrel% HMul.hMul let51 let3)
  let let53 := (Int.ofNat 3)
  let let54 := (Neg.neg let53)
  let let55 := (binrel% HDiv.hDiv let53 let9)
  let let56 := (binrel% HMul.hMul let55 let54)
  let let57 := (Neg.neg (Int.ofNat 10))
  let let58 := (binrel% HMul.hMul let10 let57)
  let let59 := (binrel% HMul.hMul let49 let8)
  let let60 := (binrel% HMul.hMul let51 let9)
  let let61 := (binrel% HMul.hMul let51 let2)
  let let62 := (binrel% HMul.hMul let51 let53)
  let let63 := (Int.ofNat 5)
  let let64 := (binrel% HMul.hMul let40 let63)
  let let65 := (binrel% HMul.hMul let49 let3)
  let let66 := (binrel% HMul.hMul let40 let53)
  let let67 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let48 let47))))))))))))
  let let68 := (binrel% HMul.hMul let40 let43)
  let let69 := (binrel% HMul.hMul let40 let36)
  let let70 := (binrel% HAdd.hAdd x13x5fplus let29)
  let let71 := (binrel% HMul.hMul let49 let70)
  let let72 := (binrel% HMul.hMul let3 x4x5fminus)
  let let73 := (binrel% HMul.hMul let3 x10x5fminus)
  let let74 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x0x5fminus let14))))))))))
  let let75 := (binrel% HMul.hMul let51 let74)
  let let76 := (binrel% HMul.hMul let55 let31)
  let let77 := (binrel% HMul.hMul let3 x11x5fplus)
  let let78 := (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x7x5fminus) (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x14x5fplus) (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x12x5fplus) x12x5fminus)))))))
  let let79 := (binrel% HMul.hMul let10 let78)
  let let80 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 let14))))))
  let let81 := (binrel% HMul.hMul let49 let80)
  let let82 := (binrel% HAdd.hAdd x8x5fplus let42)
  let let83 := (binrel% HMul.hMul let3 x2x5fplus)
  let let84 := (binrel% HMul.hMul let3 x5x5fminus)
  let let85 := (binrel% HMul.hMul let9 x6x5fminus)
  let let86 := (binrel% HMul.hMul let12 x6x5fplus)
  let let87 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 let82))))))))))))
  let let88 := (binrel% HMul.hMul let51 let87)
  let let89 := (binrel% HMul.hMul let3 x5x5fplus)
  let let90 := (binrel% HMul.hMul let12 x3x5fminus)
  let let91 := (binrel% HMul.hMul let9 x3x5fplus)
  let let92 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd x5x5fminus let82))))))
  let let93 := (binrel% HMul.hMul let51 let92)
  let let94 := (binrel% HMul.hMul let3 x12x5fminus)
  let let95 := (binrel% HMul.hMul let3 x14x5fminus)
  let let96 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd x12x5fplus let94)))
  let let97 := (binrel% HMul.hMul let3 x2x5fminus)
  let let98 := (binrel% HMul.hMul let3 x10x5fplus)
  let let99 := (binrel% HMul.hMul let3 x13x5fplus)
  let let100 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus let96))))))))))
  let let101 := (binrel% HMul.hMul let51 let100)
  let let102 := (binrel% HMul.hMul let40 let4)
  let let103 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let16 let15)))))))))
  let let104 := (binrel% HMul.hMul let49 let103)
  let let105 := (binrel% HMul.hMul let40 let82)
  let let106 := (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let69 let68))))))))))))
  let let107 := (binrel% GE.ge let106 let67)
  let let108 := (Not let107)
  let let109 := (binrel% LT.lt let106 let67)
  let let110 := (binrel% GE.ge let78 let57)
  let let111 := (Not let110)
  let let112 := (Not let111)
  let let113 := (Eq let112 let110)
  let let114 := (Not let6)
  let let115 := (Eq let5 let114)
  let let116 := (Eq let114 let5)
  let let117 := (Not let45)
  let let118 := (Eq let117 let44)
  let let119 := (Int.ofNat 4)
  let let120 := (binrel% GE.ge let82 let119)
  let let121 := (Not let120)
  let let122 := (Not let121)
  let let123 := (Eq let122 let120)
  let let124 := (binrel% GT.gt let55 let8)
  let let125 := (Eq let5 let5)
  let let126 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x2x5fplus let97)))))))))))))
  let let127 := (Eq let32 let32)
  let let128 := (Eq let120 let122)
  let let129 := (binrel% HAdd.hAdd let22 x0x5fminus)
  let let130 := (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x1x5fminus let129))
  let let131 := (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let30 let130))))))))))))))))))))
  let let132 := (binrel% HSub.hSub x8x5fplus x8x5fminus)
  let let133 := (Rat.ofInt 0)
  let let134 := (Rat.ofInt let43)
  let let135 := (Rat.ofInt let36)
  let let136 := (Rat.ofInt (binrel% HAdd.hAdd let99 x13x5fminus))
  let let137 := (binrel% HMul.hMul let10 x4x5fminus)
  let let138 := (binrel% HMul.hMul let51 x4x5fplus)
  let let139 := (binrel% HMul.hMul let10 x10x5fminus)
  let let140 := (binrel% HMul.hMul let51 x10x5fplus)
  let let141 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x6x5fminus) (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x1x5fplus) (binrel% HMul.hMul let51 x1x5fminus))))))))))))
  let let142 := (Neg.neg let55)
  let let143 := (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let53 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let53 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let53 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let53 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let53 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let142 x1x5fplus) (binrel% HMul.hMul let55 x1x5fminus))))))))))))))))))))))))
  let let144 := (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x12x5fplus) (binrel% HMul.hMul let10 x12x5fminus))))
  let let145 := (binrel% HMul.hMul let10 x11x5fminus)
  let let146 := (binrel% HMul.hMul let51 x11x5fplus)
  let let147 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x7x5fminus) (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let145 let144))))
  let let148 := (binrel% HMul.hMul let9 x4x5fminus)
  let let149 := (binrel% HMul.hMul let12 x4x5fplus)
  let let150 := (Rat.ofInt (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x11x5fminus) (binrel% HAdd.hAdd x1x5fplus (binrel% HMul.hMul let3 x1x5fminus)))))))))
  let let151 := (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x8x5fplus) (binrel% HMul.hMul let10 x8x5fminus))
  let let152 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x5x5fminus) (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x2x5fminus) (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let145 let151))))))))))))
  let let153 := (binrel% HMul.hMul let3 x3x5fplus)
  let let154 := (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x5x5fminus) let151))))))
  let let155 := (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let51 x8x5fminus) let144))))))))))
  let let156 := (Rat.ofInt let4)
  let let157 := (Rat.ofInt (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x12x5fplus) (binrel% HMul.hMul let9 x12x5fminus)))))))))))
  let let158 := (Rat.ofInt let82)
  let let159 := (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let135 let134))))))))))))
  let let160 := (binrel% LE.le let31 let54)
  let let161 := (Eq let110 let110)
  let let162 := (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let18 let17)))))
  let let163 := (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let153 x3x5fminus)))))
  let let164 := (binrel% GE.ge let162 let3)
  let let165 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let91 let90)))))))
  let let166 := (Eq let120 let120)
  let let167 := (binrel% LT.lt let82 let119)
  let let168 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 let14))))))
  let let169 := (binrel% HSub.hSub x13x5fplus x13x5fminus)
  let let170 := (Int.ofNat 11)
  let let171 := (binrel% HMul.hMul let9 x7x5fminus)
  let let172 := (binrel% HMul.hMul let12 x7x5fplus)
  let let173 := (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 let96))))
  let let174 := (binrel% GE.ge let173 let170)
  let let175 := (binrel% LT.lt let78 let57)
  let let176 := (binrel% LE.le let4 let63)
  let let177 := (binrel% HSub.hSub x0x5fplus x0x5fminus)
  let let178 := (Eq let44 let44)
  let let179 := (Rat.ofInt 2)
  let let180 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 9) let9))
  let let181 := (Rat.ofInt 5)
  let let182 := (Neg.neg let181)
  let let183 := (Rat.ofInt 3)
  let let184 := (binrel% HAdd.hAdd let183 (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let179 (binrel% HAdd.hAdd let133 let40))))))))))))
  let let185 := (binrel% LE.le let36 let8)
  let let186 := (binrel% LT.lt let49 let8)
  let let187 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let72 let130))))))))
  let let188 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let83 x2x5fminus)))))))))))))
  let let189 := (binrel% GE.ge let133 let133)
  let let190 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x3x5fplus let30)))))))))
  let let191 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let172 let171)))))))
  let let192 := (Not let33)
  let let193 := (Eq let192 let32)
  let let194 := (Eq let32 let192)
  let let195 := (Eq let37 let37)
  let let196 := (binrel% HSub.hSub x11x5fplus x11x5fminus)
  let let197 := (binrel% LT.lt let51 let8)
  let let198 := (binrel% LE.le let82 let53)
  let let199 := (Not let198)
  let let200 := (binrel% GT.gt let82 let53)
  let let201 := (Eq let200 let199)
  let let202 := (Eq let44 let117)
  let let203 := (Not True)
  let let204 := (Eq let110 let112)
  let let205 := (Not let38)
  let let206 := (Eq let205 let37)
  let let207 := (Eq let37 let205)
  let let208 := (binrel% GE.ge let169 let12)
  let let209 := (binrel% LE.le let177 let63)
  let let210 := (binrel% LE.le let196 let8)
  let let211 := (binrel% LE.le let132 let53)
  let let212 := (binrel% GE.ge let188 let9)
  let let213 := (binrel% GE.ge let126 let53)
  let let214 := (binrel% GE.ge let190 let3)
  let let215 := (binrel% GE.ge let168 let8)
  let let216 := (binrel% GE.ge let191 let170)
  let let217 := (binrel% GE.ge let163 let3)
  let let218 := (binrel% LE.le let131 let54)
  let let219 := (binrel% GE.ge let187 let3)
  let let220 := (binrel% GE.ge let165 let2)
  let let221 := (binrel% GE.ge let70 let12)
  let let222 := (binrel% GE.ge let87 let9)
  let let223 := (binrel% GE.ge let100 let53)
  let let224 := (binrel% GE.ge let103 let3)
  let let225 := (binrel% GE.ge let80 let8)
  let let226 := (binrel% GE.ge let74 let3)
  let let227 := (binrel% GE.ge let92 let2)
  let let228 := (Not let227)
  let let229 := (Not let226)
  let let230 := (Not let225)
  let let231 := (Not let224)
  let let232 := (Not let223)
  let let233 := (Not let222)
  let let234 := (Not let221)
  let let235 := (Or let44 (Or let37 (Or let234 (Or let229 (Or let32 (Or let110 (Or let230 (Or let233 (Or let228 (Or let232 (Or let5 (Or let231 let120))))))))))))
  let let236 := (Or let117 (Or let205 (Or let234 (Or let229 (Or let192 (Or let112 (Or let230 (Or let233 (Or let228 (Or let232 (Or let114 (Or let231 let122))))))))))))
  let let237 := (binrel% LE.le let68 let47)
  let let238 := (binrel% LE.le let43 let2)
  let let239 := (And let41 let238)
  let let240 := (binrel% LE.le let69 let48)
  let let241 := (And let41 let185)
  let let242 := (binrel% LE.le let71 let50)
  let let243 := (And let186 let221)
  let let244 := (binrel% LE.le let75 let52)
  let let245 := (And let197 let226)
  let let246 := (binrel% LE.le let76 let56)
  let let247 := (And let124 let160)
  let let248 := (binrel% LT.lt let79 let58)
  let let249 := (And let11 let175)
  let let250 := (binrel% LE.le let81 let59)
  let let251 := (And let186 let225)
  let let252 := (binrel% LE.le let88 let60)
  let let253 := (And let197 let222)
  let let254 := (binrel% LE.le let93 let61)
  let let255 := (And let197 let227)
  let let256 := (binrel% LE.le let101 let62)
  let let257 := (And let197 let223)
  let let258 := (binrel% LE.le let102 let64)
  let let259 := (And let41 let176)
  let let260 := (binrel% LE.le let104 let65)
  let let261 := (And let186 let224)
  let let262 := (binrel% LE.le let105 let66)
  let let263 := (And let41 let198)
fun lean_r0 : (Eq let7 let6) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let11 True) => -- EVALUATE
fun lean_r2 : (Eq let34 let33) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let39 let38) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let41 True) => -- EVALUATE
fun lean_r5 : (Eq let46 let45) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let109 let108) => -- THEORY_REWRITE_ARITH
fun lean_r7 : let113 => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let116 let115) => -- THEORY_REWRITE_BOOL
fun lean_r9 : let118 => -- THEORY_REWRITE_BOOL
fun lean_r10 : let123 => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let124 True) => -- EVALUATE
fun lean_r12 : (Eq let125 True) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let126 let100) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let127 True) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let123 let128) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq let131 let31) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let132 let82) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let159 let133) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let160 let33) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let161 True) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq let163 let162) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let164 let45) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let165 let92) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let166 True) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq let167 let121) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let168 let80) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let169 let70) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let174 let111) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let175 let111) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let176 let6) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let177 let4) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let81 let150) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let59 let133) => -- THEORY_REWRITE_ARITH
fun lean_r34 : let116 => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let178 True) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let184 let133) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let185 let38) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let186 True) => -- EVALUATE
fun lean_r39 : (Eq let187 let74) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let188 let87) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let189 True) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let190 let103) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let191 let173) => -- THEORY_REWRITE_ARITH
fun lean_r44 : let193 => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq let193 let194) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let93 let154) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let61 let51) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let195 True) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let196 let36) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let71 let136) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let50 let179) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let197 True) => -- EVALUATE
fun lean_r53 : let201 => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let76 let143) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let198 let121) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let56 let180) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let118 let202) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq let203 False) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let68 let134) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let113 let204) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq let47 let40) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let79 let147) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let58 let182) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let88 let152) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let60 let49) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let48 let133) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let69 let135) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let101 let155) => -- THEORY_REWRITE_ARITH
fun lean_r69 : let206 => -- THEORY_REWRITE_BOOL
fun lean_r70 : (Eq let62 let142) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let52 let10) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let75 let141) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let102 let156) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let206 let207) => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq let64 let181) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let104 let157) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let65 let40) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let105 let158) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let66 let183) => -- THEORY_REWRITE_ARITH
fun lean_a80 : (binrel% GE.ge x3x5fplus let8) =>
fun lean_a81 : (binrel% GE.ge x3x5fminus let8) =>
fun lean_a82 : (binrel% GE.ge x13x5fplus let8) =>
fun lean_a83 : (binrel% GE.ge x13x5fminus let8) =>
fun lean_a84 : (binrel% GE.ge x10x5fplus let8) =>
fun lean_a85 : (binrel% GE.ge x10x5fminus let8) =>
fun lean_a86 : (binrel% GE.ge x7x5fplus let8) =>
fun lean_a87 : (binrel% GE.ge x7x5fminus let8) =>
fun lean_a88 : (binrel% GE.ge x6x5fplus let8) =>
fun lean_a89 : (binrel% GE.ge x6x5fminus let8) =>
fun lean_a90 : (binrel% GE.ge x5x5fplus let8) =>
fun lean_a91 : (binrel% GE.ge x5x5fminus let8) =>
fun lean_a92 : (binrel% GE.ge x4x5fplus let8) =>
fun lean_a93 : (binrel% GE.ge x4x5fminus let8) =>
fun lean_a94 : (binrel% GE.ge x2x5fplus let8) =>
fun lean_a95 : (binrel% GE.ge x2x5fminus let8) =>
fun lean_a96 : (binrel% GE.ge x0x5fplus let8) =>
fun lean_a97 : (binrel% GE.ge x0x5fminus let8) =>
fun lean_a98 : (binrel% GE.ge x11x5fplus let8) =>
fun lean_a99 : (binrel% GE.ge x11x5fminus let8) =>
fun lean_a100 : (binrel% GE.ge x8x5fplus let8) =>
fun lean_a101 : (binrel% GE.ge x8x5fminus let8) =>
fun lean_a102 : (binrel% GE.ge x14x5fplus let8) =>
fun lean_a103 : (binrel% GE.ge x14x5fminus let8) =>
fun lean_a104 : (binrel% GE.ge x12x5fplus let8) =>
fun lean_a105 : (binrel% GE.ge x12x5fminus let8) =>
fun lean_a106 : (binrel% GE.ge x1x5fplus let8) =>
fun lean_a107 : (binrel% GE.ge x1x5fminus let8) =>
fun lean_a108 : (binrel% GE.ge (binrel% HSub.hSub x3x5fplus x3x5fminus) let8) =>
fun lean_a109 : let208 =>
fun lean_a110 : let209 =>
fun lean_a111 : let210 =>
fun lean_a112 : let211 =>
fun lean_a113 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x13x5fminus) (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x5x5fminus) (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd x2x5fminus let129)))))))))))))) let8) =>
fun lean_a114 : let212 =>
fun lean_a115 : let213 =>
fun lean_a116 : let214 =>
fun lean_a117 : let215 =>
fun lean_a118 : let216 =>
fun lean_a119 : let217 =>
fun lean_a120 : let218 =>
fun lean_a121 : let219 =>
fun lean_a122 : let220 => by
have lean_s0 : (Or let117 (Or let205 (Or let234 (Or let229 (Or let192 (Or let112 (Or let230 (Or let233 (Or let228 (Or let232 (Or let114 (Or let231 (Or let122 False))))))))))))) :=
  (scope (fun lean_a123 : let45 =>
    (scope (fun lean_a124 : let38 =>
      (scope (fun lean_a125 : let221 =>
        (scope (fun lean_a126 : let226 =>
          (scope (fun lean_a127 : let33 =>
            (scope (fun lean_a128 : let111 =>
              (scope (fun lean_a129 : let225 =>
                (scope (fun lean_a130 : let222 =>
                  (scope (fun lean_a131 : let227 =>
                    (scope (fun lean_a132 : let223 =>
                      (scope (fun lean_a133 : let6 =>
                        (scope (fun lean_a134 : let224 =>
                          (scope (fun lean_a135 : let121 =>
                            let lean_s0 := by timed flipCongrArg lean_r17 [LE.le]
                            have lean_s1 : (Eq let53 let53) := by timed rfl
                            have lean_s2 : (Eq let211 let198) := by timed congr lean_s0 lean_s1
                            have lean_s3 : (Eq let211 let121) := by timed Eq.trans lean_s2 lean_r55
                            have lean_s4 : let121 := by timed eqResolve lean_a112 lean_s3
                            have lean_s5 : (Eq let121 let167) := by timed Eq.symm lean_r25
                            have lean_s6 : let167 := by timed eqResolve lean_s4 lean_s5
                            have lean_s7 : let198 := by intTightUb lean_s6
                            have lean_s8 : (Or let199 False) :=
                              (scope (fun lean_a136 : let198 =>
                                have lean_s8 : let41 := by timed trueElim lean_r4
                                have lean_s9 : let263 := by timed And.intro lean_s8 lean_a136
                                have lean_s10 : (Implies let263 let262) := by arithMulPos [let82, let53, let40], 1
                                have lean_s11 : let262 := by timed modusPonens lean_s9 lean_s10
                                have lean_s12 : let186 := by timed trueElim lean_r38
                                let lean_s13 := by timed flipCongrArg lean_r42 [GE.ge]
                                have lean_s14 : (Eq let3 let3) := by timed rfl
                                have lean_s15 : (Eq let214 let224) := by timed congr lean_s13 lean_s14
                                have lean_s16 : let224 := by timed eqResolve lean_a116 lean_s15
                                have lean_s17 : let261 := by timed And.intro lean_s12 lean_s16
                                have lean_s18 : (Implies let261 let260) := by arithMulNeg [let103, let3, let49], 3
                                have lean_s19 : let260 := by timed modusPonens lean_s17 lean_s18
                                let lean_s20 := by timed flipCongrArg lean_r31 [LE.le]
                                have lean_s21 : (Eq let63 let63) := by timed rfl
                                have lean_s22 : (Eq let209 let176) := by timed congr lean_s20 lean_s21
                                have lean_s23 : (Eq let209 let6) := by timed Eq.trans lean_s22 lean_r30
                                have lean_s24 : let6 := by timed eqResolve lean_a110 lean_s23
                                have lean_s25 : (Eq let6 let7) := by timed Eq.symm lean_r0
                                have lean_s26 : let7 := by timed eqResolve lean_s24 lean_s25
                                have lean_s27 : let176 := by intTightUb lean_s26
                                have lean_s28 : let259 := by timed And.intro lean_s8 lean_s27
                                have lean_s29 : (Implies let259 let258) := by arithMulPos [let4, let63, let40], 1
                                have lean_s30 : let258 := by timed modusPonens lean_s28 lean_s29
                                have lean_s31 : let197 := by timed trueElim lean_r52
                                let lean_s32 := by timed flipCongrArg lean_r13 [GE.ge]
                                have lean_s33 : (Eq let213 let223) := by timed congr lean_s32 lean_s1
                                have lean_s34 : let223 := by timed eqResolve lean_a115 lean_s33
                                have lean_s35 : let257 := by timed And.intro lean_s31 lean_s34
                                have lean_s36 : (Implies let257 let256) := by arithMulNeg [let100, let53, let51], 3
                                have lean_s37 : let256 := by timed modusPonens lean_s35 lean_s36
                                let lean_s38 := by timed flipCongrArg lean_r23 [GE.ge]
                                have lean_s39 : (Eq let2 let2) := by timed rfl
                                have lean_s40 : (Eq let220 let227) := by timed congr lean_s38 lean_s39
                                have lean_s41 : let227 := by timed eqResolve lean_a122 lean_s40
                                have lean_s42 : let255 := by timed And.intro lean_s31 lean_s41
                                have lean_s43 : (Implies let255 let254) := by arithMulNeg [let92, let2, let51], 3
                                have lean_s44 : let254 := by timed modusPonens lean_s42 lean_s43
                                let lean_s45 := by timed flipCongrArg lean_r40 [GE.ge]
                                have lean_s46 : (Eq let9 let9) := by timed rfl
                                have lean_s47 : (Eq let212 let222) := by timed congr lean_s45 lean_s46
                                have lean_s48 : let222 := by timed eqResolve lean_a114 lean_s47
                                have lean_s49 : let253 := by timed And.intro lean_s31 lean_s48
                                have lean_s50 : (Implies let253 let252) := by arithMulNeg [let87, let9, let51], 3
                                have lean_s51 : let252 := by timed modusPonens lean_s49 lean_s50
                                let lean_s52 := by timed flipCongrArg lean_r26 [GE.ge]
                                have lean_s53 : (Eq let8 let8) := by timed rfl
                                have lean_s54 : (Eq let215 let225) := by timed congr lean_s52 lean_s53
                                have lean_s55 : let225 := by timed eqResolve lean_a117 lean_s54
                                have lean_s56 : let251 := by timed And.intro lean_s12 lean_s55
                                have lean_s57 : (Implies let251 let250) := by arithMulNeg [let80, let8, let49], 3
                                have lean_s58 : let250 := by timed modusPonens lean_s56 lean_s57
                                have lean_s59 : let11 := by timed trueElim lean_r1
                                let lean_s60 := by timed flipCongrArg lean_r43 [GE.ge]
                                have lean_s61 : (Eq let170 let170) := by timed rfl
                                have lean_s62 : (Eq let216 let174) := by timed congr lean_s60 lean_s61
                                have lean_s63 : (Eq let216 let111) := by timed Eq.trans lean_s62 lean_r28
                                have lean_s64 : let111 := by timed eqResolve lean_a118 lean_s63
                                have lean_s65 : (Eq let111 let175) := by timed Eq.symm lean_r29
                                have lean_s66 : let175 := by timed eqResolve lean_s64 lean_s65
                                have lean_s67 : let249 := by timed And.intro lean_s59 lean_s66
                                have lean_s68 : (Implies let249 let248) := by arithMulPos [let78, let57, let10], 0
                                have lean_s69 : let248 := by timed modusPonens lean_s67 lean_s68
                                have lean_s70 : let124 := by timed trueElim lean_r11
                                let lean_s71 := by timed flipCongrArg lean_r16 [LE.le]
                                have lean_s72 : (Eq let54 let54) := by timed rfl
                                have lean_s73 : (Eq let218 let160) := by timed congr lean_s71 lean_s72
                                have lean_s74 : (Eq let218 let33) := by timed Eq.trans lean_s73 lean_r19
                                have lean_s75 : let33 := by timed eqResolve lean_a120 lean_s74
                                have lean_s76 : (Eq let33 let34) := by timed Eq.symm lean_r2
                                have lean_s77 : let34 := by timed eqResolve lean_s75 lean_s76
                                have lean_s78 : let160 := by intTightUb lean_s77
                                have lean_s79 : let247 := by timed And.intro lean_s70 lean_s78
                                have lean_s80 : (Implies let247 let246) := by arithMulPos [let31, let54, let55], 1
                                have lean_s81 : let246 := by timed modusPonens lean_s79 lean_s80
                                let lean_s82 := by timed flipCongrArg lean_r39 [GE.ge]
                                have lean_s83 : (Eq let219 let226) := by timed congr lean_s82 lean_s14
                                have lean_s84 : let226 := by timed eqResolve lean_a121 lean_s83
                                have lean_s85 : let245 := by timed And.intro lean_s31 lean_s84
                                have lean_s86 : (Implies let245 let244) := by arithMulNeg [let74, let3, let51], 3
                                have lean_s87 : let244 := by timed modusPonens lean_s85 lean_s86
                                let lean_s88 := by timed flipCongrArg lean_r27 [GE.ge]
                                have lean_s89 : (Eq let12 let12) := by timed rfl
                                have lean_s90 : (Eq let208 let221) := by timed congr lean_s88 lean_s89
                                have lean_s91 : let221 := by timed eqResolve lean_a109 lean_s90
                                have lean_s92 : let243 := by timed And.intro lean_s12 lean_s91
                                have lean_s93 : (Implies let243 let242) := by arithMulNeg [let70, let12, let49], 3
                                have lean_s94 : let242 := by timed modusPonens lean_s92 lean_s93
                                let lean_s95 := by timed flipCongrArg lean_r49 [LE.le]
                                have lean_s96 : (Eq let210 let185) := by timed congr lean_s95 lean_s53
                                have lean_s97 : (Eq let210 let38) := by timed Eq.trans lean_s96 lean_r37
                                have lean_s98 : let38 := by timed eqResolve lean_a111 lean_s97
                                have lean_s99 : (Eq let38 let39) := by timed Eq.symm lean_r3
                                have lean_s100 : let39 := by timed eqResolve lean_s98 lean_s99
                                have lean_s101 : let185 := by intTightUb lean_s100
                                have lean_s102 : let241 := by timed And.intro lean_s8 lean_s101
                                have lean_s103 : (Implies let241 let240) := by arithMulPos [let36, let8, let40], 1
                                have lean_s104 : let240 := by timed modusPonens lean_s102 lean_s103
                                let lean_s105 := by timed flipCongrArg lean_r21 [GE.ge]
                                have lean_s106 : (Eq let217 let164) := by timed congr lean_s105 lean_s14
                                have lean_s107 : (Eq let217 let45) := by timed Eq.trans lean_s106 lean_r22
                                have lean_s108 : let45 := by timed eqResolve lean_a119 lean_s107
                                have lean_s109 : (Eq let45 let46) := by timed Eq.symm lean_r5
                                have lean_s110 : let46 := by timed eqResolve lean_s108 lean_s109
                                have lean_s111 : let238 := by intTightUb lean_s110
                                have lean_s112 : let239 := by timed And.intro lean_s8 lean_s111
                                have lean_s113 : (Implies let239 let237) := by arithMulPos [let43, let2, let40], 1
                                have lean_s114 : let237 := by timed modusPonens lean_s112 lean_s113
                                have lean_s115 : let109 := by sumBounds [lean_s11, lean_s19, lean_s30, lean_s37, lean_s44, lean_s51, lean_s58, lean_s69, lean_s81, lean_s87, lean_s94, lean_s104, lean_s114]
                                let lean_s116 := by timed congrHAdd lean_r67 lean_r59
                                let lean_s117 := by timed congrHAdd lean_r50 lean_s116
                                let lean_s118 := by timed congrHAdd lean_r72 lean_s117
                                let lean_s119 := by timed congrHAdd lean_r54 lean_s118
                                let lean_s120 := by timed congrHAdd lean_r62 lean_s119
                                let lean_s121 := by timed congrHAdd lean_r32 lean_s120
                                let lean_s122 := by timed congrHAdd lean_r64 lean_s121
                                let lean_s123 := by timed congrHAdd lean_r46 lean_s122
                                let lean_s124 := by timed congrHAdd lean_r68 lean_s123
                                let lean_s125 := by timed congrHAdd lean_r73 lean_s124
                                let lean_s126 := by timed congrHAdd lean_r76 lean_s125
                                have lean_s127 : (Eq let106 let159) := by timed congrHAdd lean_r78 lean_s126
                                have lean_s128 : (Eq let106 let133) := by timed Eq.trans lean_s127 lean_r18
                                let lean_s129 := by timed flipCongrArg lean_s128 [GE.ge]
                                let lean_s130 := by timed congrHAdd lean_r66 lean_r61
                                let lean_s131 := by timed congrHAdd lean_r51 lean_s130
                                let lean_s132 := by timed congrHAdd lean_r71 lean_s131
                                let lean_s133 := by timed congrHAdd lean_r56 lean_s132
                                let lean_s134 := by timed congrHAdd lean_r63 lean_s133
                                let lean_s135 := by timed congrHAdd lean_r33 lean_s134
                                let lean_s136 := by timed congrHAdd lean_r65 lean_s135
                                let lean_s137 := by timed congrHAdd lean_r47 lean_s136
                                let lean_s138 := by timed congrHAdd lean_r70 lean_s137
                                let lean_s139 := by timed congrHAdd lean_r75 lean_s138
                                let lean_s140 := by timed congrHAdd lean_r77 lean_s139
                                have lean_s141 : (Eq let67 let184) := by timed congrHAdd lean_r79 lean_s140
                                have lean_s142 : (Eq let67 let133) := by timed Eq.trans lean_s141 lean_r36
                                have lean_s143 : (Eq let107 let189) := by timed congr lean_s129 lean_s142
                                have lean_s144 : (Eq let107 True) := by timed Eq.trans lean_s143 lean_r41
                                have lean_s145 : (Eq let108 let203) := by timed flipCongrArg lean_s144 [Not]
                                have lean_s146 : (Eq let108 False) := by timed Eq.trans lean_s145 lean_r58
                                have lean_s147 : (Eq let109 False) := by timed Eq.trans lean_r6 lean_s146
                                show False from by timed eqResolve lean_s115 lean_s147
                              ))
                            have lean_s9 : let199 := by liftOrNToNeg lean_s8
                            have lean_s10 : (Eq let199 let122) := by timed flipCongrArg lean_r55 [Not]
                            have lean_s11 : (Eq let199 let120) := by timed Eq.trans lean_s10 lean_r10
                            have lean_s12 : (Eq let200 let120) := by timed Eq.trans lean_r53 lean_s11
                            have lean_s13 : (Eq let120 let200) := by timed Eq.symm lean_s12
                            have lean_s14 : (Eq let199 let200) := by timed Eq.trans lean_s11 lean_s13
                            have lean_s15 : let200 := by timed eqResolve lean_s9 lean_s14
                            have lean_s16 : (Eq let120 let199) := by timed Eq.symm lean_s11
                            have lean_s17 : let201 := by timed Eq.trans lean_s12 lean_s16
                            have lean_s18 : let199 := by timed eqResolve lean_s15 lean_s17
                            show False from by timed contradiction lean_s7 lean_s18
  ))))))))))))))))))))))))))
have lean_s1 : (Not (And let45 (And let38 (And let221 (And let226 (And let33 (And let111 (And let225 (And let222 (And let227 (And let223 (And let6 (And let224 let121))))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let236 := by timed flipNotAnd lean_s1 [let45, let38, let221, let226, let33, let111, let225, let222, let227, let223, let6, let224, let121]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let178 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let202 let178) := by timed congr lean_s5 lean_r9
have lean_s7 : (Eq let202 True) := by timed Eq.trans lean_s6 lean_r35
have lean_s8 : (Eq let118 True) := by timed Eq.trans lean_r57 lean_s7
have lean_s9 : let118 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let195 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let207 let195) := by timed congr lean_s12 lean_r69
have lean_s14 : (Eq let207 True) := by timed Eq.trans lean_s13 lean_r48
have lean_s15 : (Eq let206 True) := by timed Eq.trans lean_r74 lean_s14
have lean_s16 : let206 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : (Eq let234 let234) := by timed rfl
let lean_s19 := by timed congr lean_s3 lean_s18
have lean_s20 : (Eq let229 let229) := by timed rfl
let lean_s21 := by timed congr lean_s3 lean_s20
have lean_s22 : let127 := by timed rfl
let lean_s23 := by timed flipCongrArg lean_s22 [Eq]
have lean_s24 : (Eq let194 let127) := by timed congr lean_s23 lean_r44
have lean_s25 : (Eq let194 True) := by timed Eq.trans lean_s24 lean_r14
have lean_s26 : (Eq let193 True) := by timed Eq.trans lean_r45 lean_s25
have lean_s27 : let193 := by timed trueElim lean_s26
let lean_s28 := by timed congr lean_s3 lean_s27
have lean_s29 : let161 := by timed rfl
let lean_s30 := by timed flipCongrArg lean_s29 [Eq]
have lean_s31 : (Eq let204 let161) := by timed congr lean_s30 lean_r7
have lean_s32 : (Eq let204 True) := by timed Eq.trans lean_s31 lean_r20
have lean_s33 : (Eq let113 True) := by timed Eq.trans lean_r60 lean_s32
have lean_s34 : let113 := by timed trueElim lean_s33
let lean_s35 := by timed congr lean_s3 lean_s34
have lean_s36 : (Eq let230 let230) := by timed rfl
let lean_s37 := by timed congr lean_s3 lean_s36
have lean_s38 : (Eq let233 let233) := by timed rfl
let lean_s39 := by timed congr lean_s3 lean_s38
have lean_s40 : (Eq let228 let228) := by timed rfl
let lean_s41 := by timed congr lean_s3 lean_s40
have lean_s42 : (Eq let232 let232) := by timed rfl
let lean_s43 := by timed congr lean_s3 lean_s42
have lean_s44 : let125 := by timed rfl
let lean_s45 := by timed flipCongrArg lean_s44 [Eq]
have lean_s46 : (Eq let115 let125) := by timed congr lean_s45 lean_r34
have lean_s47 : (Eq let115 True) := by timed Eq.trans lean_s46 lean_r12
have lean_s48 : (Eq let116 True) := by timed Eq.trans lean_r8 lean_s47
have lean_s49 : let116 := by timed trueElim lean_s48
let lean_s50 := by timed congr lean_s3 lean_s49
have lean_s51 : (Eq let231 let231) := by timed rfl
let lean_s52 := by timed congr lean_s3 lean_s51
have lean_s53 : let166 := by timed rfl
let lean_s54 := by timed flipCongrArg lean_s53 [Eq]
have lean_s55 : (Eq let128 let166) := by timed congr lean_s54 lean_r10
have lean_s56 : (Eq let128 True) := by timed Eq.trans lean_s55 lean_r24
have lean_s57 : (Eq let123 True) := by timed Eq.trans lean_r15 lean_s56
have lean_s58 : let123 := by timed trueElim lean_s57
let lean_s59 := by timed congr lean_s52 lean_s58
let lean_s60 := by timed congr lean_s50 lean_s59
let lean_s61 := by timed congr lean_s43 lean_s60
let lean_s62 := by timed congr lean_s41 lean_s61
let lean_s63 := by timed congr lean_s39 lean_s62
let lean_s64 := by timed congr lean_s37 lean_s63
let lean_s65 := by timed congr lean_s35 lean_s64
let lean_s66 := by timed congr lean_s28 lean_s65
let lean_s67 := by timed congr lean_s21 lean_s66
let lean_s68 := by timed congr lean_s19 lean_s67
let lean_s69 := by timed congr lean_s17 lean_s68
have lean_s70 : (Eq let236 let235) := by timed congr lean_s10 lean_s69
have lean_s71 : let235 := by timed eqResolve lean_s2 lean_s70
have lean_s72 : (Or let5 (Or let37 (Or let120 (Or let110 (Or let44 (Or let32 (Or let234 (Or let233 (Or let232 (Or let231 (Or let230 (Or let229 let228)))))))))))) := by permutateOr lean_s71, [10, 1, 12, 5, 0, 4, 2, 7, 9, 11, 6, 3, 8], (- 1)
let lean_s73 := by timed flipCongrArg lean_r23 [GE.ge]
have lean_s74 : (Eq let2 let2) := by timed rfl
have lean_s75 : (Eq let220 let227) := by timed congr lean_s73 lean_s74
have lean_s76 : let227 := by timed eqResolve lean_a122 lean_s75
let lean_s77 := by R2 lean_s72, lean_s76, let227, [(- 1), 0]
let lean_s78 := by timed flipCongrArg lean_r39 [GE.ge]
have lean_s79 : (Eq let3 let3) := by timed rfl
have lean_s80 : (Eq let219 let226) := by timed congr lean_s78 lean_s79
have lean_s81 : let226 := by timed eqResolve lean_a121 lean_s80
let lean_s82 := by R2 lean_s77, lean_s81, let226, [(- 1), 0]
let lean_s83 := by timed flipCongrArg lean_r16 [LE.le]
have lean_s84 : (Eq let54 let54) := by timed rfl
have lean_s85 : (Eq let218 let160) := by timed congr lean_s83 lean_s84
have lean_s86 : (Eq let218 let33) := by timed Eq.trans lean_s85 lean_r19
have lean_s87 : let33 := by timed eqResolve lean_a120 lean_s86
let lean_s88 := by R1 lean_s82, lean_s87, let32, [(- 1), 0]
let lean_s89 := by timed flipCongrArg lean_r21 [GE.ge]
have lean_s90 : (Eq let217 let164) := by timed congr lean_s89 lean_s79
have lean_s91 : (Eq let217 let45) := by timed Eq.trans lean_s90 lean_r22
have lean_s92 : let45 := by timed eqResolve lean_a119 lean_s91
let lean_s93 := by R1 lean_s88, lean_s92, let44, [(- 1), 0]
let lean_s94 := by timed flipCongrArg lean_r43 [GE.ge]
have lean_s95 : (Eq let170 let170) := by timed rfl
have lean_s96 : (Eq let216 let174) := by timed congr lean_s94 lean_s95
have lean_s97 : (Eq let216 let111) := by timed Eq.trans lean_s96 lean_r28
have lean_s98 : let111 := by timed eqResolve lean_a118 lean_s97
let lean_s99 := by R1 lean_s93, lean_s98, let110, [(- 1), 0]
let lean_s100 := by timed flipCongrArg lean_r26 [GE.ge]
have lean_s101 : (Eq let8 let8) := by timed rfl
have lean_s102 : (Eq let215 let225) := by timed congr lean_s100 lean_s101
have lean_s103 : let225 := by timed eqResolve lean_a117 lean_s102
let lean_s104 := by R2 lean_s99, lean_s103, let225, [(- 1), 0]
let lean_s105 := by timed flipCongrArg lean_r42 [GE.ge]
have lean_s106 : (Eq let214 let224) := by timed congr lean_s105 lean_s79
have lean_s107 : let224 := by timed eqResolve lean_a116 lean_s106
let lean_s108 := by R2 lean_s104, lean_s107, let224, [(- 1), 0]
let lean_s109 := by timed flipCongrArg lean_r13 [GE.ge]
have lean_s110 : (Eq let53 let53) := by timed rfl
have lean_s111 : (Eq let213 let223) := by timed congr lean_s109 lean_s110
have lean_s112 : let223 := by timed eqResolve lean_a115 lean_s111
let lean_s113 := by R2 lean_s108, lean_s112, let223, [(- 1), 0]
let lean_s114 := by timed flipCongrArg lean_r40 [GE.ge]
have lean_s115 : (Eq let9 let9) := by timed rfl
have lean_s116 : (Eq let212 let222) := by timed congr lean_s114 lean_s115
have lean_s117 : let222 := by timed eqResolve lean_a114 lean_s116
let lean_s118 := by R2 lean_s113, lean_s117, let222, [(- 1), 0]
let lean_s119 := by timed flipCongrArg lean_r17 [LE.le]
have lean_s120 : (Eq let211 let198) := by timed congr lean_s119 lean_s110
have lean_s121 : (Eq let211 let121) := by timed Eq.trans lean_s120 lean_r55
have lean_s122 : let121 := by timed eqResolve lean_a112 lean_s121
let lean_s123 := by R1 lean_s118, lean_s122, let120, [(- 1), 0]
let lean_s124 := by timed flipCongrArg lean_r49 [LE.le]
have lean_s125 : (Eq let210 let185) := by timed congr lean_s124 lean_s101
have lean_s126 : (Eq let210 let38) := by timed Eq.trans lean_s125 lean_r37
have lean_s127 : let38 := by timed eqResolve lean_a111 lean_s126
let lean_s128 := by R1 lean_s123, lean_s127, let37, [(- 1), 0]
let lean_s129 := by timed flipCongrArg lean_r31 [LE.le]
have lean_s130 : (Eq let63 let63) := by timed rfl
have lean_s131 : (Eq let209 let176) := by timed congr lean_s129 lean_s130
have lean_s132 : (Eq let209 let6) := by timed Eq.trans lean_s131 lean_r30
have lean_s133 : let6 := by timed eqResolve lean_a110 lean_s132
let lean_s134 := by R1 lean_s128, lean_s133, let5, [(- 1), 0]
let lean_s135 := by timed flipCongrArg lean_r27 [GE.ge]
have lean_s136 : (Eq let12 let12) := by timed rfl
have lean_s137 : (Eq let208 let221) := by timed congr lean_s135 lean_s136
have lean_s138 : let221 := by timed eqResolve lean_a109 lean_s137
exact (show False from by R2 lean_s134, lean_s138, let221, [0, 0])


