open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x5x5fplus : Int}
variable {x7x5fplus : Int}
variable {x5x5fminus : Int}
variable {x0x5fplus : Int}
variable {x7x5fminus : Int}
variable {x0x5fminus : Int}
variable {x10x5fplus : Int}
variable {x9x5fplus : Int}
variable {x10x5fminus : Int}
variable {x7x5fplus : Int}
variable {x8x5fminus : Int}
variable {x7x5fminus : Int}
variable {x4x5fplus : Int}
variable {x5x5fminus : Int}
variable {x4x5fminus : Int}
variable {x1x5fplus : Int}
variable {x0x5fplus : Int}
variable {x1x5fminus : Int}
variable {x13x5fplus : Int}
variable {x10x5fminus : Int}
variable {x13x5fminus : Int}
variable {x12x5fplus : Int}
variable {x0x5fminus : Int}
variable {x11x5fplus : Int}
variable {x5x5fplus : Int}
variable {x2x5fplus : Int}
variable {x4x5fplus : Int}
variable {x9x5fminus : Int}
variable {x9x5fplus : Int}
variable {x9x5fminus : Int}
variable {x14x5fminus : Int}
variable {x2x5fminus : Int}
variable {x14x5fplus : Int}
variable {x10x5fplus : Int}
variable {x6x5fminus : Int}
variable {x6x5fplus : Int}
variable {x11x5fplus : Int}
variable {x8x5fminus : Int}
variable {x8x5fplus : Int}
variable {x8x5fplus : Int}
variable {x11x5fminus : Int}
variable {x12x5fminus : Int}
variable {x3x5fplus : Int}
variable {x11x5fminus : Int}
variable {x2x5fminus : Int}
variable {x2x5fplus : Int}
variable {x14x5fplus : Int}
variable {x14x5fminus : Int}
variable {x6x5fminus : Int}
variable {x6x5fplus : Int}
variable {x12x5fminus : Int}
variable {x12x5fplus : Int}
variable {x13x5fminus : Int}
variable {x13x5fplus : Int}
variable {x1x5fminus : Int}
variable {x1x5fplus : Int}
variable {x4x5fminus : Int}
variable {x3x5fminus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 2)
  let let6 := (Int.ofNat 1)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% HMul.hMul let7 x8x5fminus)
  let let9 := (binrel% HMul.hMul let7 x9x5fplus)
  let let10 := (binrel% HMul.hMul let5 x10x5fminus)
  let let11 := (Neg.neg let5)
  let let12 := (binrel% HMul.hMul let11 x10x5fplus)
  let let13 := (binrel% HMul.hMul let7 x13x5fminus)
  let let14 := (binrel% HMul.hMul let7 x14x5fminus)
  let let15 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x8x5fplus let8)))))))))
  let let16 := (binrel% GE.ge let15 let5)
  let let17 := (Not let16)
  let let18 := (binrel% LT.lt let15 let5)
  let let19 := (Int.ofNat 3)
  let let20 := (Int.ofNat 5)
  let let21 := (binrel% HDiv.hDiv let20 let19)
  let let22 := (Neg.neg let21)
  let let23 := (binrel% LT.lt let22 let1)
  let let24 := (Int.ofNat 8)
  let let25 := (binrel% HDiv.hDiv let24 let19)
  let let26 := (binrel% GT.gt let25 let1)
  let let27 := (Int.ofNat 6)
  let let28 := (binrel% HDiv.hDiv (Int.ofNat 19) let27)
  let let29 := (binrel% GT.gt let28 let1)
  let let30 := (binrel% HMul.hMul let7 x12x5fminus)
  let let31 := (binrel% HAdd.hAdd x12x5fplus let30)
  let let32 := (binrel% HMul.hMul let7 x0x5fplus)
  let let33 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x0x5fminus let31))))))
  let let34 := (binrel% GE.ge let33 let6)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt let33 let6)
  let let37 := (binrel% HDiv.hDiv let20 let5)
  let let38 := (binrel% GT.gt let37 let1)
  let let39 := (binrel% HMul.hMul let7 x2x5fplus)
  let let40 := (binrel% HAdd.hAdd let39 x2x5fminus)
  let let41 := (binrel% HMul.hMul let7 x5x5fminus)
  let let42 := (binrel% HMul.hMul let7 x7x5fplus)
  let let43 := (binrel% HMul.hMul let7 x10x5fminus)
  let let44 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 let40))))))
  let let45 := (binrel% GE.ge let44 let6)
  let let46 := (Not let45)
  let let47 := (binrel% LT.lt let44 let6)
  let let48 := (binrel% HMul.hMul let7 x2x5fminus)
  let let49 := (binrel% HAdd.hAdd x2x5fplus let48)
  let let50 := (binrel% HMul.hMul let7 x3x5fplus)
  let let51 := (binrel% HMul.hMul let7 x0x5fminus)
  let let52 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x3x5fminus let49))))))
  let let53 := (binrel% GE.ge let52 let6)
  let let54 := (Not let53)
  let let55 := (binrel% LT.lt let52 let6)
  let let56 := (Int.ofNat 7)
  let let57 := (binrel% HDiv.hDiv let56 let19)
  let let58 := (Neg.neg let57)
  let let59 := (binrel% LT.lt let58 let1)
  let let60 := (Int.ofNat 17)
  let let61 := (binrel% HDiv.hDiv let60 let27)
  let let62 := (Neg.neg let61)
  let let63 := (binrel% LT.lt let62 let1)
  let let64 := (Neg.neg (Rat.ofInt 4))
  let let65 := (binrel% LT.lt let64 let1)
  let let66 := (Neg.neg let19)
  let let67 := (binrel% HMul.hMul let64 let66)
  let let68 := (binrel% HMul.hMul let62 let6)
  let let69 := (binrel% HDiv.hDiv (Int.ofNat 11) let19)
  let let70 := (Neg.neg let69)
  let let71 := (binrel% HMul.hMul let70 let6)
  let let72 := (binrel% HMul.hMul let58 let6)
  let let73 := (binrel% HDiv.hDiv let5 let19)
  let let74 := (binrel% HMul.hMul let73 let1)
  let let75 := (binrel% HMul.hMul let37 let1)
  let let76 := (binrel% HMul.hMul let28 let1)
  let let77 := (binrel% HDiv.hDiv (Int.ofNat 10) let19)
  let let78 := (binrel% HMul.hMul let77 let1)
  let let79 := (binrel% HDiv.hDiv let56 let27)
  let let80 := (Neg.neg let79)
  let let81 := (binrel% HMul.hMul let80 let1)
  let let82 := (binrel% HMul.hMul let25 let7)
  let let83 := (binrel% HMul.hMul let2 let1)
  let let84 := (binrel% HDiv.hDiv let6 let19)
  let let85 := (binrel% HMul.hMul let84 let6)
  let let86 := (binrel% HMul.hMul let22 let6)
  let let87 := (binrel% HDiv.hDiv let20 let27)
  let let88 := (binrel% HMul.hMul let87 let6)
  let let89 := (binrel% HMul.hMul let3 let1)
  let let90 := (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let68 let67))))))))))))))
  let let91 := (binrel% HAdd.hAdd x0x5fplus let51)
  let let92 := (binrel% HMul.hMul let11 x9x5fminus)
  let let93 := (binrel% HMul.hMul let5 x9x5fplus)
  let let94 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x7x5fminus) (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 let91))))))))))))))
  let let95 := (binrel% HMul.hMul let64 let94)
  let let96 := (binrel% HMul.hMul let11 x12x5fminus)
  let let97 := (binrel% HMul.hMul let5 x12x5fplus)
  let let98 := (binrel% HMul.hMul let7 x1x5fplus)
  let let99 := (binrel% HMul.hMul let7 x4x5fminus)
  let let100 := (binrel% HMul.hMul let5 x7x5fminus)
  let let101 := (binrel% HMul.hMul let11 x7x5fplus)
  let let102 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let97 let96)))))))))))
  let let103 := (binrel% HMul.hMul let62 let102)
  let let104 := (binrel% HMul.hMul let7 x11x5fplus)
  let let105 := (binrel% HMul.hMul let7 x8x5fplus)
  let let106 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x4x5fplus) (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HMul.hMul let7 x1x5fminus))))))))))))
  let let107 := (binrel% HMul.hMul let70 let106)
  let let108 := (binrel% HMul.hMul let7 x12x5fplus)
  let let109 := (binrel% HMul.hMul let7 x11x5fminus)
  let let110 := (binrel% HMul.hMul let7 x9x5fminus)
  let let111 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 x12x5fminus)))))))))))
  let let112 := (binrel% HMul.hMul let58 let111)
  let let113 := (binrel% HMul.hMul let73 let52)
  let let114 := (binrel% HMul.hMul let37 let44)
  let let115 := (binrel% HMul.hMul let28 let33)
  let let116 := (binrel% HMul.hMul let7 x3x5fminus)
  let let117 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x3x5fplus let116)))))))))))
  let let118 := (binrel% HMul.hMul let77 let117)
  let let119 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus let40))))))))))))))
  let let120 := (binrel% HMul.hMul let80 let119)
  let let121 := (binrel% HMul.hMul let7 x6x5fplus)
  let let122 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let50 x3x5fminus)))
  let let123 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus let122))))))
  let let124 := (binrel% HMul.hMul let25 let123)
  let let125 := (binrel% HMul.hMul let7 x6x5fminus)
  let let126 := (binrel% HMul.hMul let11 x0x5fminus)
  let let127 := (binrel% HMul.hMul let5 x0x5fplus)
  let let128 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd x6x5fplus let125)))))))))))
  let let129 := (binrel% HMul.hMul let2 let128)
  let let130 := (binrel% HAdd.hAdd let98 x1x5fminus)
  let let131 := (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x4x5fminus) let130))
  let let132 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 let131))))))
  let let133 := (binrel% HMul.hMul let84 let132)
  let let134 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd x6x5fminus let40))
  let let135 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus let134))))))))
  let let136 := (binrel% HMul.hMul let22 let135)
  let let137 := (binrel% HMul.hMul let87 let15)
  let let138 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x9x5fminus) let49))))
  let let139 := (binrel% HMul.hMul let3 let138)
  let let140 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let103 let95))))))))))))))
  let let141 := (binrel% GE.ge let140 let90)
  let let142 := (Not let141)
  let let143 := (binrel% LT.lt let140 let90)
  let let144 := (Neg.neg let87)
  let let145 := (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let144 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let144 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let144 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x8x5fplus) (binrel% HMul.hMul let144 x8x5fminus))))))))))
  let let146 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x2x5fplus) (binrel% HMul.hMul let22 x2x5fminus))))))))))))
  let let147 := (Neg.neg let84)
  let let148 := (Neg.neg let73)
  let let149 := (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let147 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let147 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let147 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let148 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let147 x1x5fplus) (binrel% HMul.hMul let84 x1x5fminus))))))))))
  let let150 := (Rat.ofInt let128)
  let let151 := (binrel% LT.lt let80 let1)
  let let152 := (Neg.neg let25)
  let let153 := (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x3x5fplus) (binrel% HMul.hMul let25 x3x5fminus))))))))))
  let let154 := (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x2x5fplus) (binrel% HMul.hMul let80 x2x5fminus))))))))))))))))
  let let155 := (Neg.neg let77)
  let let156 := (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let155 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let155 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let155 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let155 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let155 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x3x5fplus) (binrel% HMul.hMul let155 x3x5fminus))))))))))))
  let let157 := (Rat.ofInt 0)
  let let158 := (Int.ofNat 4)
  let let159 := (Neg.neg let158)
  let let160 := (Neg.neg let24)
  let let161 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let159 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let158 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let159 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let158 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let160 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let160 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let160 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let160 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let159 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let158 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let159 x0x5fplus) (binrel% HMul.hMul let158 x0x5fminus)))))))))))))))))
  let let162 := (binrel% HDiv.hDiv let60 let19)
  let let163 := (Neg.neg let162)
  let let164 := (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x12x5fplus) (binrel% HMul.hMul let162 x12x5fminus))))))))))))
  let let165 := (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x1x5fplus) (binrel% HMul.hMul let69 x1x5fminus))))))))))))
  let let166 := (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x12x5fplus) (binrel% HMul.hMul let58 x12x5fminus))))))))))))
  let let167 := (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let148 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let148 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let148 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x2x5fplus) (binrel% HMul.hMul let148 x2x5fminus))))))))
  let let168 := (Neg.neg let37)
  let let169 := (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let168 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let168 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let168 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let168 x2x5fplus) (binrel% HMul.hMul let37 x2x5fminus))))))))
  let let170 := (Neg.neg let28)
  let let171 := (binrel% HAdd.hAdd (binrel% HMul.hMul let28 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let28 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let28 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let28 x12x5fplus) (binrel% HMul.hMul let170 x12x5fminus))))))))
  let let172 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x14x5fplus) (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let92 let40)))))
  let let173 := (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let164 let161))))))))))))))
  let let174 := (binrel% GT.gt let77 let1)
  let let175 := (binrel% GE.ge let117 let6)
  let let176 := (Not let175)
  let let177 := (binrel% LT.lt let117 let6)
  let let178 := (binrel% GE.ge let128 let6)
  let let179 := (Not let178)
  let let180 := (Not let179)
  let let181 := (Eq let180 let178)
  let let182 := (binrel% GT.gt let87 let1)
  let let183 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 let130))
  let let184 := (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 let183))))))))
  let let185 := (Eq let16 let16)
  let let186 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x1x5fminus let91))))))))))))))
  let let187 := (binrel% LE.le let117 let1)
  let let188 := (binrel% GT.gt let84 let1)
  let let189 := (Not let35)
  let let190 := (Eq let34 let189)
  let let191 := (Eq let189 let34)
  let let192 := (binrel% LE.le let52 let1)
  let let193 := (binrel% LE.le let128 let1)
  let let194 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let32 x0x5fminus)))))))
  let let195 := (binrel% HMul.hMul let7 x5x5fplus)
  let let196 := (binrel% HMul.hMul let7 x10x5fplus)
  let let197 := (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd let195 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd x11x5fminus let31))))))))))
  let let198 := (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd let195 (binrel% HAdd.hAdd x5x5fminus let91))))))))))
  let let199 := (binrel% GE.ge let132 let6)
  let let200 := (Not let199)
  let let201 := (Not let200)
  let let202 := (Eq let201 let199)
  let let203 := (binrel% LE.le let44 let1)
  let let204 := (binrel% GE.ge let111 let6)
  let let205 := (binrel% LE.le let197 let7)
  let let206 := (binrel% GE.ge let123 let1)
  let let207 := (Not let206)
  let let208 := (binrel% LT.lt let123 let1)
  let let209 := (binrel% LE.le let132 let1)
  let let210 := (binrel% HMul.hMul let7 x7x5fminus)
  let let211 := (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 let183))))))))
  let let212 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let210 let183))))))))
  let let213 := (binrel% LE.le let15 let6)
  let let214 := (Not let54)
  let let215 := (Eq let53 let214)
  let let216 := (Eq let214 let53)
  let let217 := (Eq let178 let178)
  let let218 := (Not True)
  let let219 := (binrel% GT.gt let73 let1)
  let let220 := (Rat.ofInt 12)
  let let221 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let127 let126)))))))))))
  let let222 := (Eq let34 let34)
  let let223 := (binrel% LE.le let123 let7)
  let let224 := (Eq let199 let199)
  let let225 := (binrel% GE.ge let106 let6)
  let let226 := (binrel% LE.le let211 let7)
  let let227 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 let134))))))))
  let let228 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x8x5fminus let131))))))
  let let229 := (Not let46)
  let let230 := (Eq let45 let229)
  let let231 := (Eq let229 let45)
  let let232 := (Not let17)
  let let233 := (Eq let16 let232)
  let let234 := (Eq let232 let16)
  let let235 := (binrel% LT.lt let128 let6)
  let let236 := (Not let176)
  let let237 := (Eq let236 let175)
  let let238 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 let122))))))
  let let239 := (Eq let206 let206)
  let let240 := (Eq let178 let180)
  let let241 := (Not let207)
  let let242 := (Eq let241 let206)
  let let243 := (Eq let206 let241)
  let let244 := (Eq let175 let175)
  let let245 := (binrel% GT.gt let2 let1)
  let let246 := (Eq let175 let236)
  let let247 := (binrel% LT.lt let132 let6)
  let let248 := (binrel% LE.le let33 let1)
  let let249 := (binrel% LT.lt let70 let1)
  let let250 := (Eq let45 let45)
  let let251 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let48 let91))))))
  let let252 := (Eq let199 let201)
  let let253 := (binrel% GE.ge let138 let1)
  let let254 := (Not let253)
  let let255 := (binrel% LT.lt let138 let1)
  let let256 := (Eq let53 let53)
  let let257 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let116 let91))))))))))
  let let258 := (binrel% GE.ge let157 let157)
  let let259 := (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let62 let220))))))))))))))
  let let260 := (binrel% GE.ge let94 let66)
  let let261 := (binrel% LE.le let212 let7)
  let let262 := (binrel% LE.le let198 let7)
  let let263 := (binrel% LE.le let221 let1)
  let let264 := (binrel% LE.le let257 let1)
  let let265 := (binrel% LE.le let228 let1)
  let let266 := (binrel% LE.le let238 let7)
  let let267 := (binrel% LE.le let194 let1)
  let let268 := (binrel% LE.le let251 let1)
  let let269 := (binrel% GE.ge let186 let1)
  let let270 := (binrel% GE.ge let184 let6)
  let let271 := (binrel% GE.ge let227 let6)
  let let272 := (binrel% GE.ge let119 let1)
  let let273 := (binrel% GE.ge let102 let6)
  let let274 := (binrel% GE.ge let135 let6)
  let let275 := (Not let274)
  let let276 := (Not let273)
  let let277 := (Not let272)
  let let278 := (Not let204)
  let let279 := (Not let225)
  let let280 := (Not let260)
  let let281 := (Or let280 (Or let276 (Or let279 (Or let278 (Or let53 (Or let45 (Or let34 (Or let175 (Or let277 (Or let206 (Or let178 (Or let199 (Or let275 (Or let16 let254))))))))))))))
  let let282 := (Or let280 (Or let276 (Or let279 (Or let278 (Or let214 (Or let229 (Or let189 (Or let236 (Or let277 (Or let241 (Or let180 (Or let201 (Or let275 (Or let232 let254))))))))))))))
  let let283 := (Or let254 False)
  let let284 := (binrel% LE.le let95 let67)
  let let285 := (And let65 let260)
  let let286 := (binrel% LE.le let103 let68)
  let let287 := (And let63 let273)
  let let288 := (binrel% LE.le let107 let71)
  let let289 := (And let249 let225)
  let let290 := (binrel% LE.le let112 let72)
  let let291 := (And let59 let204)
  let let292 := (binrel% LE.le let113 let74)
  let let293 := (And let219 let192)
  let let294 := (binrel% LE.le let114 let75)
  let let295 := (And let38 let203)
  let let296 := (binrel% LE.le let115 let76)
  let let297 := (And let29 let248)
  let let298 := (binrel% LE.le let118 let78)
  let let299 := (And let174 let187)
  let let300 := (binrel% LE.le let120 let81)
  let let301 := (And let151 let272)
  let let302 := (binrel% LE.le let124 let82)
  let let303 := (And let26 let223)
  let let304 := (binrel% LE.le let129 let83)
  let let305 := (And let245 let193)
  let let306 := (binrel% LT.lt let133 let85)
  let let307 := (And let188 let247)
  let let308 := (binrel% LE.le let136 let86)
  let let309 := (And let23 let274)
  let let310 := (binrel% LE.le let137 let88)
  let let311 := (And let182 let213)
  let let312 := (binrel% LE.le let139 let89)
  let let313 := (And let4 let253)
(Eq let4 True) → (Eq let18 let17) → (Eq let23 True) → (Eq let26 True) → (Eq let29 True) → (Eq let36 let35) → (Eq let38 True) → (Eq let47 let46) → (Eq let55 let54) → (Eq let59 True) → (Eq let63 True) → (Eq let65 True) → (Eq let143 let142) → (Eq let137 let145) → (Eq let136 let146) → (Eq let133 let149) → (Eq let129 let150) → (Eq let151 True) → (Eq let124 let153) → (Eq let120 let154) → (Eq let118 let156) → (Eq let173 let157) → (Eq let174 True) → (Eq let115 let171) → (Eq let89 let157) → (Eq let177 let176) → (Eq let114 let169) → (Eq let88 let87) → let181 → (Eq let72 let58) → (Eq let182 True) → (Eq let184 let102) → (Eq let185 True) → (Eq let74 let157) → (Eq let186 let119) → (Eq let187 let176) → (Eq let188 True) → (Eq let191 let190) → (Eq let192 let54) → (Eq let193 let179) → (Eq let194 let33) → (Eq let198 let197) → (Eq let112 let166) → (Eq let85 let84) → let202 → (Eq let71 let70) → (Eq let203 let46) → (Eq let205 let204) → (Eq let208 let207) → (Eq let209 let200) → (Eq let212 let211) → (Eq let213 let17) → (Eq let216 let215) → (Eq let217 True) → (Eq let218 False) → (Eq let219 True) → (Eq let67 let220) → (Eq let221 let128) → (Eq let222 True) → (Eq let223 let207) → (Eq let103 let164) → (Eq let82 let152) → (Eq let107 let165) → (Eq let83 let157) → (Eq let224 True) → (Eq let226 let225) → (Eq let68 let62) → (Eq let227 let135) → (Eq let139 let172) → (Eq let228 let132) → (Eq let231 let230) → (Eq let234 let233) → (Eq let78 let157) → (Eq let235 let179) → let237 → (Eq let238 let123) → (Eq let239 True) → (Eq let181 let240) → let242 → (Eq let242 let243) → (Eq let244 True) → (Eq let245 True) → (Eq let237 let246) → (Eq let247 let200) → (Eq let248 let35) → let191 → (Eq let249 True) → (Eq let250 True) → (Eq let75 let157) → (Eq let251 let52) → let231 → (Eq let113 let167) → (Eq let86 let22) → (Eq let202 let252) → (Eq let255 let254) → let234 → (Eq let76 let157) → (Eq let256 True) → let216 → (Eq let257 let117) → (Eq let258 True) → (Eq let259 let157) → (Eq let95 let161) → (Eq let81 let157) → (binrel% GE.ge x14x5fplus let1) → (binrel% GE.ge x14x5fminus let1) → (binrel% GE.ge x13x5fplus let1) → (binrel% GE.ge x13x5fminus let1) → (binrel% GE.ge x10x5fplus let1) → (binrel% GE.ge x10x5fminus let1) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x11x5fplus let1) → (binrel% GE.ge x11x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x12x5fplus let1) → (binrel% GE.ge x12x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → let260 → let261 → let262 → let263 → let264 → let265 → let266 → let213 → let203 → let267 → let268 → let269 → let270 → let271 → let253 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 2)
  let let6 := (Int.ofNat 1)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% HMul.hMul let7 x8x5fminus)
  let let9 := (binrel% HMul.hMul let7 x9x5fplus)
  let let10 := (binrel% HMul.hMul let5 x10x5fminus)
  let let11 := (Neg.neg let5)
  let let12 := (binrel% HMul.hMul let11 x10x5fplus)
  let let13 := (binrel% HMul.hMul let7 x13x5fminus)
  let let14 := (binrel% HMul.hMul let7 x14x5fminus)
  let let15 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x8x5fplus let8)))))))))
  let let16 := (binrel% GE.ge let15 let5)
  let let17 := (Not let16)
  let let18 := (binrel% LT.lt let15 let5)
  let let19 := (Int.ofNat 3)
  let let20 := (Int.ofNat 5)
  let let21 := (binrel% HDiv.hDiv let20 let19)
  let let22 := (Neg.neg let21)
  let let23 := (binrel% LT.lt let22 let1)
  let let24 := (Int.ofNat 8)
  let let25 := (binrel% HDiv.hDiv let24 let19)
  let let26 := (binrel% GT.gt let25 let1)
  let let27 := (Int.ofNat 6)
  let let28 := (binrel% HDiv.hDiv (Int.ofNat 19) let27)
  let let29 := (binrel% GT.gt let28 let1)
  let let30 := (binrel% HMul.hMul let7 x12x5fminus)
  let let31 := (binrel% HAdd.hAdd x12x5fplus let30)
  let let32 := (binrel% HMul.hMul let7 x0x5fplus)
  let let33 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x0x5fminus let31))))))
  let let34 := (binrel% GE.ge let33 let6)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt let33 let6)
  let let37 := (binrel% HDiv.hDiv let20 let5)
  let let38 := (binrel% GT.gt let37 let1)
  let let39 := (binrel% HMul.hMul let7 x2x5fplus)
  let let40 := (binrel% HAdd.hAdd let39 x2x5fminus)
  let let41 := (binrel% HMul.hMul let7 x5x5fminus)
  let let42 := (binrel% HMul.hMul let7 x7x5fplus)
  let let43 := (binrel% HMul.hMul let7 x10x5fminus)
  let let44 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 let40))))))
  let let45 := (binrel% GE.ge let44 let6)
  let let46 := (Not let45)
  let let47 := (binrel% LT.lt let44 let6)
  let let48 := (binrel% HMul.hMul let7 x2x5fminus)
  let let49 := (binrel% HAdd.hAdd x2x5fplus let48)
  let let50 := (binrel% HMul.hMul let7 x3x5fplus)
  let let51 := (binrel% HMul.hMul let7 x0x5fminus)
  let let52 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x3x5fminus let49))))))
  let let53 := (binrel% GE.ge let52 let6)
  let let54 := (Not let53)
  let let55 := (binrel% LT.lt let52 let6)
  let let56 := (Int.ofNat 7)
  let let57 := (binrel% HDiv.hDiv let56 let19)
  let let58 := (Neg.neg let57)
  let let59 := (binrel% LT.lt let58 let1)
  let let60 := (Int.ofNat 17)
  let let61 := (binrel% HDiv.hDiv let60 let27)
  let let62 := (Neg.neg let61)
  let let63 := (binrel% LT.lt let62 let1)
  let let64 := (Neg.neg (Rat.ofInt 4))
  let let65 := (binrel% LT.lt let64 let1)
  let let66 := (Neg.neg let19)
  let let67 := (binrel% HMul.hMul let64 let66)
  let let68 := (binrel% HMul.hMul let62 let6)
  let let69 := (binrel% HDiv.hDiv (Int.ofNat 11) let19)
  let let70 := (Neg.neg let69)
  let let71 := (binrel% HMul.hMul let70 let6)
  let let72 := (binrel% HMul.hMul let58 let6)
  let let73 := (binrel% HDiv.hDiv let5 let19)
  let let74 := (binrel% HMul.hMul let73 let1)
  let let75 := (binrel% HMul.hMul let37 let1)
  let let76 := (binrel% HMul.hMul let28 let1)
  let let77 := (binrel% HDiv.hDiv (Int.ofNat 10) let19)
  let let78 := (binrel% HMul.hMul let77 let1)
  let let79 := (binrel% HDiv.hDiv let56 let27)
  let let80 := (Neg.neg let79)
  let let81 := (binrel% HMul.hMul let80 let1)
  let let82 := (binrel% HMul.hMul let25 let7)
  let let83 := (binrel% HMul.hMul let2 let1)
  let let84 := (binrel% HDiv.hDiv let6 let19)
  let let85 := (binrel% HMul.hMul let84 let6)
  let let86 := (binrel% HMul.hMul let22 let6)
  let let87 := (binrel% HDiv.hDiv let20 let27)
  let let88 := (binrel% HMul.hMul let87 let6)
  let let89 := (binrel% HMul.hMul let3 let1)
  let let90 := (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let68 let67))))))))))))))
  let let91 := (binrel% HAdd.hAdd x0x5fplus let51)
  let let92 := (binrel% HMul.hMul let11 x9x5fminus)
  let let93 := (binrel% HMul.hMul let5 x9x5fplus)
  let let94 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x7x5fminus) (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 let91))))))))))))))
  let let95 := (binrel% HMul.hMul let64 let94)
  let let96 := (binrel% HMul.hMul let11 x12x5fminus)
  let let97 := (binrel% HMul.hMul let5 x12x5fplus)
  let let98 := (binrel% HMul.hMul let7 x1x5fplus)
  let let99 := (binrel% HMul.hMul let7 x4x5fminus)
  let let100 := (binrel% HMul.hMul let5 x7x5fminus)
  let let101 := (binrel% HMul.hMul let11 x7x5fplus)
  let let102 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let97 let96)))))))))))
  let let103 := (binrel% HMul.hMul let62 let102)
  let let104 := (binrel% HMul.hMul let7 x11x5fplus)
  let let105 := (binrel% HMul.hMul let7 x8x5fplus)
  let let106 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x4x5fplus) (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HMul.hMul let7 x1x5fminus))))))))))))
  let let107 := (binrel% HMul.hMul let70 let106)
  let let108 := (binrel% HMul.hMul let7 x12x5fplus)
  let let109 := (binrel% HMul.hMul let7 x11x5fminus)
  let let110 := (binrel% HMul.hMul let7 x9x5fminus)
  let let111 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 x12x5fminus)))))))))))
  let let112 := (binrel% HMul.hMul let58 let111)
  let let113 := (binrel% HMul.hMul let73 let52)
  let let114 := (binrel% HMul.hMul let37 let44)
  let let115 := (binrel% HMul.hMul let28 let33)
  let let116 := (binrel% HMul.hMul let7 x3x5fminus)
  let let117 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x3x5fplus let116)))))))))))
  let let118 := (binrel% HMul.hMul let77 let117)
  let let119 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus let40))))))))))))))
  let let120 := (binrel% HMul.hMul let80 let119)
  let let121 := (binrel% HMul.hMul let7 x6x5fplus)
  let let122 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let50 x3x5fminus)))
  let let123 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus let122))))))
  let let124 := (binrel% HMul.hMul let25 let123)
  let let125 := (binrel% HMul.hMul let7 x6x5fminus)
  let let126 := (binrel% HMul.hMul let11 x0x5fminus)
  let let127 := (binrel% HMul.hMul let5 x0x5fplus)
  let let128 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd x6x5fplus let125)))))))))))
  let let129 := (binrel% HMul.hMul let2 let128)
  let let130 := (binrel% HAdd.hAdd let98 x1x5fminus)
  let let131 := (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x4x5fminus) let130))
  let let132 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 let131))))))
  let let133 := (binrel% HMul.hMul let84 let132)
  let let134 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd x6x5fminus let40))
  let let135 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus let134))))))))
  let let136 := (binrel% HMul.hMul let22 let135)
  let let137 := (binrel% HMul.hMul let87 let15)
  let let138 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x9x5fminus) let49))))
  let let139 := (binrel% HMul.hMul let3 let138)
  let let140 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let103 let95))))))))))))))
  let let141 := (binrel% GE.ge let140 let90)
  let let142 := (Not let141)
  let let143 := (binrel% LT.lt let140 let90)
  let let144 := (Neg.neg let87)
  let let145 := (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let144 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let144 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let144 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x8x5fplus) (binrel% HMul.hMul let144 x8x5fminus))))))))))
  let let146 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x2x5fplus) (binrel% HMul.hMul let22 x2x5fminus))))))))))))
  let let147 := (Neg.neg let84)
  let let148 := (Neg.neg let73)
  let let149 := (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let147 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let147 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let147 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let148 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let147 x1x5fplus) (binrel% HMul.hMul let84 x1x5fminus))))))))))
  let let150 := (Rat.ofInt let128)
  let let151 := (binrel% LT.lt let80 let1)
  let let152 := (Neg.neg let25)
  let let153 := (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let152 x3x5fplus) (binrel% HMul.hMul let25 x3x5fminus))))))))))
  let let154 := (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x2x5fplus) (binrel% HMul.hMul let80 x2x5fminus))))))))))))))))
  let let155 := (Neg.neg let77)
  let let156 := (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let155 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let155 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let155 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let155 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let155 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x3x5fplus) (binrel% HMul.hMul let155 x3x5fminus))))))))))))
  let let157 := (Rat.ofInt 0)
  let let158 := (Int.ofNat 4)
  let let159 := (Neg.neg let158)
  let let160 := (Neg.neg let24)
  let let161 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let159 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let158 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let159 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let158 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let160 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let160 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let160 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let160 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let159 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let158 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let159 x0x5fplus) (binrel% HMul.hMul let158 x0x5fminus)))))))))))))))))
  let let162 := (binrel% HDiv.hDiv let60 let19)
  let let163 := (Neg.neg let162)
  let let164 := (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x12x5fplus) (binrel% HMul.hMul let162 x12x5fminus))))))))))))
  let let165 := (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x1x5fplus) (binrel% HMul.hMul let69 x1x5fminus))))))))))))
  let let166 := (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x12x5fplus) (binrel% HMul.hMul let58 x12x5fminus))))))))))))
  let let167 := (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let148 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let148 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let148 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x2x5fplus) (binrel% HMul.hMul let148 x2x5fminus))))))))
  let let168 := (Neg.neg let37)
  let let169 := (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let168 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let168 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let168 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let168 x2x5fplus) (binrel% HMul.hMul let37 x2x5fminus))))))))
  let let170 := (Neg.neg let28)
  let let171 := (binrel% HAdd.hAdd (binrel% HMul.hMul let28 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let28 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let28 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let28 x12x5fplus) (binrel% HMul.hMul let170 x12x5fminus))))))))
  let let172 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x14x5fplus) (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let92 let40)))))
  let let173 := (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let164 let161))))))))))))))
  let let174 := (binrel% GT.gt let77 let1)
  let let175 := (binrel% GE.ge let117 let6)
  let let176 := (Not let175)
  let let177 := (binrel% LT.lt let117 let6)
  let let178 := (binrel% GE.ge let128 let6)
  let let179 := (Not let178)
  let let180 := (Not let179)
  let let181 := (Eq let180 let178)
  let let182 := (binrel% GT.gt let87 let1)
  let let183 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 let130))
  let let184 := (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 let183))))))))
  let let185 := (Eq let16 let16)
  let let186 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x1x5fminus let91))))))))))))))
  let let187 := (binrel% LE.le let117 let1)
  let let188 := (binrel% GT.gt let84 let1)
  let let189 := (Not let35)
  let let190 := (Eq let34 let189)
  let let191 := (Eq let189 let34)
  let let192 := (binrel% LE.le let52 let1)
  let let193 := (binrel% LE.le let128 let1)
  let let194 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let32 x0x5fminus)))))))
  let let195 := (binrel% HMul.hMul let7 x5x5fplus)
  let let196 := (binrel% HMul.hMul let7 x10x5fplus)
  let let197 := (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd let195 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd x11x5fminus let31))))))))))
  let let198 := (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd let195 (binrel% HAdd.hAdd x5x5fminus let91))))))))))
  let let199 := (binrel% GE.ge let132 let6)
  let let200 := (Not let199)
  let let201 := (Not let200)
  let let202 := (Eq let201 let199)
  let let203 := (binrel% LE.le let44 let1)
  let let204 := (binrel% GE.ge let111 let6)
  let let205 := (binrel% LE.le let197 let7)
  let let206 := (binrel% GE.ge let123 let1)
  let let207 := (Not let206)
  let let208 := (binrel% LT.lt let123 let1)
  let let209 := (binrel% LE.le let132 let1)
  let let210 := (binrel% HMul.hMul let7 x7x5fminus)
  let let211 := (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 let183))))))))
  let let212 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let210 let183))))))))
  let let213 := (binrel% LE.le let15 let6)
  let let214 := (Not let54)
  let let215 := (Eq let53 let214)
  let let216 := (Eq let214 let53)
  let let217 := (Eq let178 let178)
  let let218 := (Not True)
  let let219 := (binrel% GT.gt let73 let1)
  let let220 := (Rat.ofInt 12)
  let let221 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let127 let126)))))))))))
  let let222 := (Eq let34 let34)
  let let223 := (binrel% LE.le let123 let7)
  let let224 := (Eq let199 let199)
  let let225 := (binrel% GE.ge let106 let6)
  let let226 := (binrel% LE.le let211 let7)
  let let227 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 let134))))))))
  let let228 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x8x5fminus let131))))))
  let let229 := (Not let46)
  let let230 := (Eq let45 let229)
  let let231 := (Eq let229 let45)
  let let232 := (Not let17)
  let let233 := (Eq let16 let232)
  let let234 := (Eq let232 let16)
  let let235 := (binrel% LT.lt let128 let6)
  let let236 := (Not let176)
  let let237 := (Eq let236 let175)
  let let238 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 let122))))))
  let let239 := (Eq let206 let206)
  let let240 := (Eq let178 let180)
  let let241 := (Not let207)
  let let242 := (Eq let241 let206)
  let let243 := (Eq let206 let241)
  let let244 := (Eq let175 let175)
  let let245 := (binrel% GT.gt let2 let1)
  let let246 := (Eq let175 let236)
  let let247 := (binrel% LT.lt let132 let6)
  let let248 := (binrel% LE.le let33 let1)
  let let249 := (binrel% LT.lt let70 let1)
  let let250 := (Eq let45 let45)
  let let251 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let48 let91))))))
  let let252 := (Eq let199 let201)
  let let253 := (binrel% GE.ge let138 let1)
  let let254 := (Not let253)
  let let255 := (binrel% LT.lt let138 let1)
  let let256 := (Eq let53 let53)
  let let257 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let116 let91))))))))))
  let let258 := (binrel% GE.ge let157 let157)
  let let259 := (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let62 let220))))))))))))))
  let let260 := (binrel% GE.ge let94 let66)
  let let261 := (binrel% LE.le let212 let7)
  let let262 := (binrel% LE.le let198 let7)
  let let263 := (binrel% LE.le let221 let1)
  let let264 := (binrel% LE.le let257 let1)
  let let265 := (binrel% LE.le let228 let1)
  let let266 := (binrel% LE.le let238 let7)
  let let267 := (binrel% LE.le let194 let1)
  let let268 := (binrel% LE.le let251 let1)
  let let269 := (binrel% GE.ge let186 let1)
  let let270 := (binrel% GE.ge let184 let6)
  let let271 := (binrel% GE.ge let227 let6)
  let let272 := (binrel% GE.ge let119 let1)
  let let273 := (binrel% GE.ge let102 let6)
  let let274 := (binrel% GE.ge let135 let6)
  let let275 := (Not let274)
  let let276 := (Not let273)
  let let277 := (Not let272)
  let let278 := (Not let204)
  let let279 := (Not let225)
  let let280 := (Not let260)
  let let281 := (Or let280 (Or let276 (Or let279 (Or let278 (Or let53 (Or let45 (Or let34 (Or let175 (Or let277 (Or let206 (Or let178 (Or let199 (Or let275 (Or let16 let254))))))))))))))
  let let282 := (Or let280 (Or let276 (Or let279 (Or let278 (Or let214 (Or let229 (Or let189 (Or let236 (Or let277 (Or let241 (Or let180 (Or let201 (Or let275 (Or let232 let254))))))))))))))
  let let283 := (Or let254 False)
  let let284 := (binrel% LE.le let95 let67)
  let let285 := (And let65 let260)
  let let286 := (binrel% LE.le let103 let68)
  let let287 := (And let63 let273)
  let let288 := (binrel% LE.le let107 let71)
  let let289 := (And let249 let225)
  let let290 := (binrel% LE.le let112 let72)
  let let291 := (And let59 let204)
  let let292 := (binrel% LE.le let113 let74)
  let let293 := (And let219 let192)
  let let294 := (binrel% LE.le let114 let75)
  let let295 := (And let38 let203)
  let let296 := (binrel% LE.le let115 let76)
  let let297 := (And let29 let248)
  let let298 := (binrel% LE.le let118 let78)
  let let299 := (And let174 let187)
  let let300 := (binrel% LE.le let120 let81)
  let let301 := (And let151 let272)
  let let302 := (binrel% LE.le let124 let82)
  let let303 := (And let26 let223)
  let let304 := (binrel% LE.le let129 let83)
  let let305 := (And let245 let193)
  let let306 := (binrel% LT.lt let133 let85)
  let let307 := (And let188 let247)
  let let308 := (binrel% LE.le let136 let86)
  let let309 := (And let23 let274)
  let let310 := (binrel% LE.le let137 let88)
  let let311 := (And let182 let213)
  let let312 := (binrel% LE.le let139 let89)
  let let313 := (And let4 let253)
fun lean_r0 : (Eq let4 True) => -- EVALUATE
fun lean_r1 : (Eq let18 let17) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let23 True) => -- EVALUATE
fun lean_r3 : (Eq let26 True) => -- EVALUATE
fun lean_r4 : (Eq let29 True) => -- EVALUATE
fun lean_r5 : (Eq let36 let35) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let38 True) => -- EVALUATE
fun lean_r7 : (Eq let47 let46) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let55 let54) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let59 True) => -- EVALUATE
fun lean_r10 : (Eq let63 True) => -- EVALUATE
fun lean_r11 : (Eq let65 True) => -- EVALUATE
fun lean_r12 : (Eq let143 let142) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let137 let145) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let136 let146) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let133 let149) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let129 let150) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let151 True) => -- EVALUATE
fun lean_r18 : (Eq let124 let153) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let120 let154) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let118 let156) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let173 let157) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let174 True) => -- EVALUATE
fun lean_r23 : (Eq let115 let171) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let89 let157) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let177 let176) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let114 let169) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let88 let87) => -- THEORY_REWRITE_ARITH
fun lean_r28 : let181 => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let72 let58) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let182 True) => -- EVALUATE
fun lean_r31 : (Eq let184 let102) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let185 True) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq let74 let157) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let186 let119) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let187 let176) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let188 True) => -- EVALUATE
fun lean_r37 : (Eq let191 let190) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq let192 let54) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let193 let179) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let194 let33) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let198 let197) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let112 let166) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let85 let84) => -- THEORY_REWRITE_ARITH
fun lean_r44 : let202 => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq let71 let70) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let203 let46) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let205 let204) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let208 let207) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let209 let200) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let212 let211) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let213 let17) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let216 let215) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let217 True) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let218 False) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq let219 True) => -- EVALUATE
fun lean_r56 : (Eq let67 let220) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let221 let128) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let222 True) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let223 let207) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let103 let164) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let82 let152) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let107 let165) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let83 let157) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let224 True) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq let226 let225) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let68 let62) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let227 let135) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let139 let172) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let228 let132) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let231 let230) => -- THEORY_REWRITE_BOOL
fun lean_r71 : (Eq let234 let233) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let78 let157) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let235 let179) => -- THEORY_REWRITE_ARITH
fun lean_r74 : let237 => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq let238 let123) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let239 True) => -- THEORY_REWRITE_BOOL
fun lean_r77 : (Eq let181 let240) => -- THEORY_REWRITE_BOOL
fun lean_r78 : let242 => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq let242 let243) => -- THEORY_REWRITE_BOOL
fun lean_r80 : (Eq let244 True) => -- THEORY_REWRITE_BOOL
fun lean_r81 : (Eq let245 True) => -- EVALUATE
fun lean_r82 : (Eq let237 let246) => -- THEORY_REWRITE_BOOL
fun lean_r83 : (Eq let247 let200) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let248 let35) => -- THEORY_REWRITE_ARITH
fun lean_r85 : let191 => -- THEORY_REWRITE_BOOL
fun lean_r86 : (Eq let249 True) => -- EVALUATE
fun lean_r87 : (Eq let250 True) => -- THEORY_REWRITE_BOOL
fun lean_r88 : (Eq let75 let157) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let251 let52) => -- THEORY_REWRITE_ARITH
fun lean_r90 : let231 => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq let113 let167) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let86 let22) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let202 let252) => -- THEORY_REWRITE_BOOL
fun lean_r94 : (Eq let255 let254) => -- THEORY_REWRITE_ARITH
fun lean_r95 : let234 => -- THEORY_REWRITE_BOOL
fun lean_r96 : (Eq let76 let157) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let256 True) => -- THEORY_REWRITE_BOOL
fun lean_r98 : let216 => -- THEORY_REWRITE_BOOL
fun lean_r99 : (Eq let257 let117) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let258 True) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let259 let157) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let95 let161) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let81 let157) => -- THEORY_REWRITE_ARITH
fun lean_a104 : (binrel% GE.ge x14x5fplus let1) =>
fun lean_a105 : (binrel% GE.ge x14x5fminus let1) =>
fun lean_a106 : (binrel% GE.ge x13x5fplus let1) =>
fun lean_a107 : (binrel% GE.ge x13x5fminus let1) =>
fun lean_a108 : (binrel% GE.ge x10x5fplus let1) =>
fun lean_a109 : (binrel% GE.ge x10x5fminus let1) =>
fun lean_a110 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a111 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a112 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a113 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a114 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a115 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a116 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a117 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a118 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a119 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a120 : (binrel% GE.ge x11x5fplus let1) =>
fun lean_a121 : (binrel% GE.ge x11x5fminus let1) =>
fun lean_a122 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a123 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a124 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a125 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a126 : (binrel% GE.ge x12x5fplus let1) =>
fun lean_a127 : (binrel% GE.ge x12x5fminus let1) =>
fun lean_a128 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a129 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a130 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a131 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a132 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a133 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a134 : let260 =>
fun lean_a135 : let261 =>
fun lean_a136 : let262 =>
fun lean_a137 : let263 =>
fun lean_a138 : let264 =>
fun lean_a139 : let265 =>
fun lean_a140 : let266 =>
fun lean_a141 : let213 =>
fun lean_a142 : let203 =>
fun lean_a143 : let267 =>
fun lean_a144 : let268 =>
fun lean_a145 : let269 =>
fun lean_a146 : let270 =>
fun lean_a147 : let271 =>
fun lean_a148 : let253 => by
have lean_s0 : (Or let280 (Or let276 (Or let279 (Or let278 (Or let214 (Or let229 (Or let189 (Or let236 (Or let277 (Or let241 (Or let180 (Or let201 (Or let275 (Or let232 let283)))))))))))))) :=
  (scope (fun lean_a149 : let260 =>
    (scope (fun lean_a150 : let273 =>
      (scope (fun lean_a151 : let225 =>
        (scope (fun lean_a152 : let204 =>
          (scope (fun lean_a153 : let54 =>
            (scope (fun lean_a154 : let46 =>
              (scope (fun lean_a155 : let35 =>
                (scope (fun lean_a156 : let176 =>
                  (scope (fun lean_a157 : let272 =>
                    (scope (fun lean_a158 : let207 =>
                      (scope (fun lean_a159 : let179 =>
                        (scope (fun lean_a160 : let200 =>
                          (scope (fun lean_a161 : let274 =>
                            (scope (fun lean_a162 : let17 =>
                              (scope (fun lean_a163 : let253 =>
                                have lean_s0 : let283 :=
                                  (scope (fun lean_a162 : let253 =>
                                    have lean_s0 : let4 := by timed trueElim lean_r0
                                    have lean_s1 : let313 := by timed And.intro lean_s0 lean_a162
                                    have lean_s2 : (Implies let313 let312) := by arithMulNeg [let138, let1, let3], 3
                                    have lean_s3 : let312 := by timed modusPonens lean_s1 lean_s2
                                    have lean_s4 : let182 := by timed trueElim lean_r30
                                    have lean_s5 : let17 := by timed eqResolve lean_a141 lean_r51
                                    have lean_s6 : (Eq let17 let18) := by timed Eq.symm lean_r1
                                    have lean_s7 : let18 := by timed eqResolve lean_s5 lean_s6
                                    have lean_s8 : let213 := by intTightUb lean_s7
                                    have lean_s9 : let311 := by timed And.intro lean_s4 lean_s8
                                    have lean_s10 : (Implies let311 let310) := by arithMulPos [let15, let6, let87], 1
                                    have lean_s11 : let310 := by timed modusPonens lean_s9 lean_s10
                                    have lean_s12 : let23 := by timed trueElim lean_r2
                                    let lean_s13 := by timed flipCongrArg lean_r67 [GE.ge]
                                    have lean_s14 : (Eq let6 let6) := by timed rfl
                                    have lean_s15 : (Eq let271 let274) := by timed congr lean_s13 lean_s14
                                    have lean_s16 : let274 := by timed eqResolve lean_a147 lean_s15
                                    have lean_s17 : let309 := by timed And.intro lean_s12 lean_s16
                                    have lean_s18 : (Implies let309 let308) := by arithMulNeg [let135, let6, let22], 3
                                    have lean_s19 : let308 := by timed modusPonens lean_s17 lean_s18
                                    have lean_s20 : let188 := by timed trueElim lean_r36
                                    let lean_s21 := by timed flipCongrArg lean_r69 [LE.le]
                                    have lean_s22 : (Eq let1 let1) := by timed rfl
                                    have lean_s23 : (Eq let265 let209) := by timed congr lean_s21 lean_s22
                                    have lean_s24 : (Eq let265 let200) := by timed Eq.trans lean_s23 lean_r49
                                    have lean_s25 : let200 := by timed eqResolve lean_a139 lean_s24
                                    have lean_s26 : (Eq let200 let247) := by timed Eq.symm lean_r83
                                    have lean_s27 : let247 := by timed eqResolve lean_s25 lean_s26
                                    have lean_s28 : let307 := by timed And.intro lean_s20 lean_s27
                                    have lean_s29 : (Implies let307 let306) := by arithMulPos [let132, let6, let84], 0
                                    have lean_s30 : let306 := by timed modusPonens lean_s28 lean_s29
                                    have lean_s31 : let245 := by timed trueElim lean_r81
                                    let lean_s32 := by timed flipCongrArg lean_r57 [LE.le]
                                    have lean_s33 : (Eq let263 let193) := by timed congr lean_s32 lean_s22
                                    have lean_s34 : (Eq let263 let179) := by timed Eq.trans lean_s33 lean_r39
                                    have lean_s35 : let179 := by timed eqResolve lean_a137 lean_s34
                                    have lean_s36 : (Eq let179 let235) := by timed Eq.symm lean_r73
                                    have lean_s37 : let235 := by timed eqResolve lean_s35 lean_s36
                                    have lean_s38 : let193 := by intTightUb lean_s37
                                    have lean_s39 : let305 := by timed And.intro lean_s31 lean_s38
                                    have lean_s40 : (Implies let305 let304) := by arithMulPos [let128, let1, let2], 1
                                    have lean_s41 : let304 := by timed modusPonens lean_s39 lean_s40
                                    have lean_s42 : let26 := by timed trueElim lean_r3
                                    let lean_s43 := by timed flipCongrArg lean_r75 [LE.le]
                                    have lean_s44 : (Eq let7 let7) := by timed rfl
                                    have lean_s45 : (Eq let266 let223) := by timed congr lean_s43 lean_s44
                                    have lean_s46 : (Eq let266 let207) := by timed Eq.trans lean_s45 lean_r59
                                    have lean_s47 : let207 := by timed eqResolve lean_a140 lean_s46
                                    have lean_s48 : (Eq let207 let208) := by timed Eq.symm lean_r48
                                    have lean_s49 : let208 := by timed eqResolve lean_s47 lean_s48
                                    have lean_s50 : let223 := by intTightUb lean_s49
                                    have lean_s51 : let303 := by timed And.intro lean_s42 lean_s50
                                    have lean_s52 : (Implies let303 let302) := by arithMulPos [let123, let7, let25], 1
                                    have lean_s53 : let302 := by timed modusPonens lean_s51 lean_s52
                                    have lean_s54 : let151 := by timed trueElim lean_r17
                                    let lean_s55 := by timed flipCongrArg lean_r34 [GE.ge]
                                    have lean_s56 : (Eq let269 let272) := by timed congr lean_s55 lean_s22
                                    have lean_s57 : let272 := by timed eqResolve lean_a145 lean_s56
                                    have lean_s58 : let301 := by timed And.intro lean_s54 lean_s57
                                    have lean_s59 : (Implies let301 let300) := by arithMulNeg [let119, let1, let80], 3
                                    have lean_s60 : let300 := by timed modusPonens lean_s58 lean_s59
                                    have lean_s61 : let174 := by timed trueElim lean_r22
                                    let lean_s62 := by timed flipCongrArg lean_r99 [LE.le]
                                    have lean_s63 : (Eq let264 let187) := by timed congr lean_s62 lean_s22
                                    have lean_s64 : (Eq let264 let176) := by timed Eq.trans lean_s63 lean_r35
                                    have lean_s65 : let176 := by timed eqResolve lean_a138 lean_s64
                                    have lean_s66 : (Eq let176 let177) := by timed Eq.symm lean_r25
                                    have lean_s67 : let177 := by timed eqResolve lean_s65 lean_s66
                                    have lean_s68 : let187 := by intTightUb lean_s67
                                    have lean_s69 : let299 := by timed And.intro lean_s61 lean_s68
                                    have lean_s70 : (Implies let299 let298) := by arithMulPos [let117, let1, let77], 1
                                    have lean_s71 : let298 := by timed modusPonens lean_s69 lean_s70
                                    have lean_s72 : let29 := by timed trueElim lean_r4
                                    let lean_s73 := by timed flipCongrArg lean_r40 [LE.le]
                                    have lean_s74 : (Eq let267 let248) := by timed congr lean_s73 lean_s22
                                    have lean_s75 : (Eq let267 let35) := by timed Eq.trans lean_s74 lean_r84
                                    have lean_s76 : let35 := by timed eqResolve lean_a143 lean_s75
                                    have lean_s77 : (Eq let35 let36) := by timed Eq.symm lean_r5
                                    have lean_s78 : let36 := by timed eqResolve lean_s76 lean_s77
                                    have lean_s79 : let248 := by intTightUb lean_s78
                                    have lean_s80 : let297 := by timed And.intro lean_s72 lean_s79
                                    have lean_s81 : (Implies let297 let296) := by arithMulPos [let33, let1, let28], 1
                                    have lean_s82 : let296 := by timed modusPonens lean_s80 lean_s81
                                    have lean_s83 : let38 := by timed trueElim lean_r6
                                    have lean_s84 : let46 := by timed eqResolve lean_a142 lean_r46
                                    have lean_s85 : (Eq let46 let47) := by timed Eq.symm lean_r7
                                    have lean_s86 : let47 := by timed eqResolve lean_s84 lean_s85
                                    have lean_s87 : let203 := by intTightUb lean_s86
                                    have lean_s88 : let295 := by timed And.intro lean_s83 lean_s87
                                    have lean_s89 : (Implies let295 let294) := by arithMulPos [let44, let1, let37], 1
                                    have lean_s90 : let294 := by timed modusPonens lean_s88 lean_s89
                                    have lean_s91 : let219 := by timed trueElim lean_r55
                                    let lean_s92 := by timed flipCongrArg lean_r89 [LE.le]
                                    have lean_s93 : (Eq let268 let192) := by timed congr lean_s92 lean_s22
                                    have lean_s94 : (Eq let268 let54) := by timed Eq.trans lean_s93 lean_r38
                                    have lean_s95 : let54 := by timed eqResolve lean_a144 lean_s94
                                    have lean_s96 : (Eq let54 let55) := by timed Eq.symm lean_r8
                                    have lean_s97 : let55 := by timed eqResolve lean_s95 lean_s96
                                    have lean_s98 : let192 := by intTightUb lean_s97
                                    have lean_s99 : let293 := by timed And.intro lean_s91 lean_s98
                                    have lean_s100 : (Implies let293 let292) := by arithMulPos [let52, let1, let73], 1
                                    have lean_s101 : let292 := by timed modusPonens lean_s99 lean_s100
                                    have lean_s102 : let59 := by timed trueElim lean_r9
                                    let lean_s103 := by timed flipCongrArg lean_r41 [LE.le]
                                    have lean_s104 : (Eq let262 let205) := by timed congr lean_s103 lean_s44
                                    have lean_s105 : (Eq let262 let204) := by timed Eq.trans lean_s104 lean_r47
                                    have lean_s106 : let204 := by timed eqResolve lean_a136 lean_s105
                                    have lean_s107 : let291 := by timed And.intro lean_s102 lean_s106
                                    have lean_s108 : (Implies let291 let290) := by arithMulNeg [let111, let6, let58], 3
                                    have lean_s109 : let290 := by timed modusPonens lean_s107 lean_s108
                                    have lean_s110 : let249 := by timed trueElim lean_r86
                                    let lean_s111 := by timed flipCongrArg lean_r50 [LE.le]
                                    have lean_s112 : (Eq let261 let226) := by timed congr lean_s111 lean_s44
                                    have lean_s113 : (Eq let261 let225) := by timed Eq.trans lean_s112 lean_r65
                                    have lean_s114 : let225 := by timed eqResolve lean_a135 lean_s113
                                    have lean_s115 : let289 := by timed And.intro lean_s110 lean_s114
                                    have lean_s116 : (Implies let289 let288) := by arithMulNeg [let106, let6, let70], 3
                                    have lean_s117 : let288 := by timed modusPonens lean_s115 lean_s116
                                    have lean_s118 : let63 := by timed trueElim lean_r10
                                    let lean_s119 := by timed flipCongrArg lean_r31 [GE.ge]
                                    have lean_s120 : (Eq let270 let273) := by timed congr lean_s119 lean_s14
                                    have lean_s121 : let273 := by timed eqResolve lean_a146 lean_s120
                                    have lean_s122 : let287 := by timed And.intro lean_s118 lean_s121
                                    have lean_s123 : (Implies let287 let286) := by arithMulNeg [let102, let6, let62], 3
                                    have lean_s124 : let286 := by timed modusPonens lean_s122 lean_s123
                                    have lean_s125 : let65 := by timed trueElim lean_r11
                                    have lean_s126 : let285 := by timed And.intro lean_s125 lean_a149
                                    have lean_s127 : (Implies let285 let284) := by arithMulNeg [let94, let66, let64], 3
                                    have lean_s128 : let284 := by timed modusPonens lean_s126 lean_s127
                                    have lean_s129 : let143 := by sumBounds [lean_s3, lean_s11, lean_s19, lean_s30, lean_s41, lean_s53, lean_s60, lean_s71, lean_s82, lean_s90, lean_s101, lean_s109, lean_s117, lean_s124, lean_s128]
                                    let lean_s130 := by timed congrHAdd lean_r60 lean_r102
                                    let lean_s131 := by timed congrHAdd lean_r62 lean_s130
                                    let lean_s132 := by timed congrHAdd lean_r42 lean_s131
                                    let lean_s133 := by timed congrHAdd lean_r91 lean_s132
                                    let lean_s134 := by timed congrHAdd lean_r26 lean_s133
                                    let lean_s135 := by timed congrHAdd lean_r23 lean_s134
                                    let lean_s136 := by timed congrHAdd lean_r20 lean_s135
                                    let lean_s137 := by timed congrHAdd lean_r19 lean_s136
                                    let lean_s138 := by timed congrHAdd lean_r18 lean_s137
                                    let lean_s139 := by timed congrHAdd lean_r16 lean_s138
                                    let lean_s140 := by timed congrHAdd lean_r15 lean_s139
                                    let lean_s141 := by timed congrHAdd lean_r14 lean_s140
                                    let lean_s142 := by timed congrHAdd lean_r13 lean_s141
                                    have lean_s143 : (Eq let140 let173) := by timed congrHAdd lean_r68 lean_s142
                                    have lean_s144 : (Eq let140 let157) := by timed Eq.trans lean_s143 lean_r21
                                    let lean_s145 := by timed flipCongrArg lean_s144 [GE.ge]
                                    let lean_s146 := by timed congrHAdd lean_r66 lean_r56
                                    let lean_s147 := by timed congrHAdd lean_r45 lean_s146
                                    let lean_s148 := by timed congrHAdd lean_r29 lean_s147
                                    let lean_s149 := by timed congrHAdd lean_r33 lean_s148
                                    let lean_s150 := by timed congrHAdd lean_r88 lean_s149
                                    let lean_s151 := by timed congrHAdd lean_r96 lean_s150
                                    let lean_s152 := by timed congrHAdd lean_r72 lean_s151
                                    let lean_s153 := by timed congrHAdd lean_r103 lean_s152
                                    let lean_s154 := by timed congrHAdd lean_r61 lean_s153
                                    let lean_s155 := by timed congrHAdd lean_r63 lean_s154
                                    let lean_s156 := by timed congrHAdd lean_r43 lean_s155
                                    let lean_s157 := by timed congrHAdd lean_r92 lean_s156
                                    let lean_s158 := by timed congrHAdd lean_r27 lean_s157
                                    have lean_s159 : (Eq let90 let259) := by timed congrHAdd lean_r24 lean_s158
                                    have lean_s160 : (Eq let90 let157) := by timed Eq.trans lean_s159 lean_r101
                                    have lean_s161 : (Eq let141 let258) := by timed congr lean_s145 lean_s160
                                    have lean_s162 : (Eq let141 True) := by timed Eq.trans lean_s161 lean_r100
                                    have lean_s163 : (Eq let142 let218) := by timed flipCongrArg lean_s162 [Not]
                                    have lean_s164 : (Eq let142 False) := by timed Eq.trans lean_s163 lean_r54
                                    have lean_s165 : (Eq let143 False) := by timed Eq.trans lean_r12 lean_s164
                                    show False from by timed eqResolve lean_s129 lean_s165
                                  ))
                                have lean_s1 : let254 := by liftOrNToNeg lean_s0
                                have lean_s2 : (Eq let254 let255) := by timed Eq.symm lean_r94
                                have lean_s3 : let255 := by timed eqResolve lean_s1 lean_s2
                                have lean_s4 : let254 := by timed eqResolve lean_s3 lean_r94
                                show False from by timed contradiction lean_a163 lean_s4
  ))))))))))))))))))))))))))))))
have lean_s1 : (Not (And let260 (And let273 (And let225 (And let204 (And let54 (And let46 (And let35 (And let176 (And let272 (And let207 (And let179 (And let200 (And let274 (And let17 let253))))))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let282 := by timed flipNotAnd lean_s1 [let260, let273, let225, let204, let54, let46, let35, let176, let272, let207, let179, let200, let274, let17, let253]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq let280 let280) := by timed rfl
let lean_s5 := by timed congr lean_s3 lean_s4
have lean_s6 : (Eq let276 let276) := by timed rfl
let lean_s7 := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq let279 let279) := by timed rfl
let lean_s9 := by timed congr lean_s3 lean_s8
have lean_s10 : (Eq let278 let278) := by timed rfl
let lean_s11 := by timed congr lean_s3 lean_s10
have lean_s12 : let256 := by timed rfl
let lean_s13 := by timed flipCongrArg lean_s12 [Eq]
have lean_s14 : (Eq let215 let256) := by timed congr lean_s13 lean_r98
have lean_s15 : (Eq let215 True) := by timed Eq.trans lean_s14 lean_r97
have lean_s16 : (Eq let216 True) := by timed Eq.trans lean_r52 lean_s15
have lean_s17 : let216 := by timed trueElim lean_s16
let lean_s18 := by timed congr lean_s3 lean_s17
have lean_s19 : let250 := by timed rfl
let lean_s20 := by timed flipCongrArg lean_s19 [Eq]
have lean_s21 : (Eq let230 let250) := by timed congr lean_s20 lean_r90
have lean_s22 : (Eq let230 True) := by timed Eq.trans lean_s21 lean_r87
have lean_s23 : (Eq let231 True) := by timed Eq.trans lean_r70 lean_s22
have lean_s24 : let231 := by timed trueElim lean_s23
let lean_s25 := by timed congr lean_s3 lean_s24
have lean_s26 : let222 := by timed rfl
let lean_s27 := by timed flipCongrArg lean_s26 [Eq]
have lean_s28 : (Eq let190 let222) := by timed congr lean_s27 lean_r85
have lean_s29 : (Eq let190 True) := by timed Eq.trans lean_s28 lean_r58
have lean_s30 : (Eq let191 True) := by timed Eq.trans lean_r37 lean_s29
have lean_s31 : let191 := by timed trueElim lean_s30
let lean_s32 := by timed congr lean_s3 lean_s31
have lean_s33 : let244 := by timed rfl
let lean_s34 := by timed flipCongrArg lean_s33 [Eq]
have lean_s35 : (Eq let246 let244) := by timed congr lean_s34 lean_r74
have lean_s36 : (Eq let246 True) := by timed Eq.trans lean_s35 lean_r80
have lean_s37 : (Eq let237 True) := by timed Eq.trans lean_r82 lean_s36
have lean_s38 : let237 := by timed trueElim lean_s37
let lean_s39 := by timed congr lean_s3 lean_s38
have lean_s40 : (Eq let277 let277) := by timed rfl
let lean_s41 := by timed congr lean_s3 lean_s40
have lean_s42 : let239 := by timed rfl
let lean_s43 := by timed flipCongrArg lean_s42 [Eq]
have lean_s44 : (Eq let243 let239) := by timed congr lean_s43 lean_r78
have lean_s45 : (Eq let243 True) := by timed Eq.trans lean_s44 lean_r76
have lean_s46 : (Eq let242 True) := by timed Eq.trans lean_r79 lean_s45
have lean_s47 : let242 := by timed trueElim lean_s46
let lean_s48 := by timed congr lean_s3 lean_s47
have lean_s49 : let217 := by timed rfl
let lean_s50 := by timed flipCongrArg lean_s49 [Eq]
have lean_s51 : (Eq let240 let217) := by timed congr lean_s50 lean_r28
have lean_s52 : (Eq let240 True) := by timed Eq.trans lean_s51 lean_r53
have lean_s53 : (Eq let181 True) := by timed Eq.trans lean_r77 lean_s52
have lean_s54 : let181 := by timed trueElim lean_s53
let lean_s55 := by timed congr lean_s3 lean_s54
have lean_s56 : let224 := by timed rfl
let lean_s57 := by timed flipCongrArg lean_s56 [Eq]
have lean_s58 : (Eq let252 let224) := by timed congr lean_s57 lean_r44
have lean_s59 : (Eq let252 True) := by timed Eq.trans lean_s58 lean_r64
have lean_s60 : (Eq let202 True) := by timed Eq.trans lean_r93 lean_s59
have lean_s61 : let202 := by timed trueElim lean_s60
let lean_s62 := by timed congr lean_s3 lean_s61
have lean_s63 : (Eq let275 let275) := by timed rfl
let lean_s64 := by timed congr lean_s3 lean_s63
have lean_s65 : let185 := by timed rfl
let lean_s66 := by timed flipCongrArg lean_s65 [Eq]
have lean_s67 : (Eq let233 let185) := by timed congr lean_s66 lean_r95
have lean_s68 : (Eq let233 True) := by timed Eq.trans lean_s67 lean_r32
have lean_s69 : (Eq let234 True) := by timed Eq.trans lean_r71 lean_s68
have lean_s70 : let234 := by timed trueElim lean_s69
let lean_s71 := by timed congr lean_s3 lean_s70
have lean_s72 : (Eq let254 let254) := by timed rfl
let lean_s73 := by timed congr lean_s71 lean_s72
let lean_s74 := by timed congr lean_s64 lean_s73
let lean_s75 := by timed congr lean_s62 lean_s74
let lean_s76 := by timed congr lean_s55 lean_s75
let lean_s77 := by timed congr lean_s48 lean_s76
let lean_s78 := by timed congr lean_s41 lean_s77
let lean_s79 := by timed congr lean_s39 lean_s78
let lean_s80 := by timed congr lean_s32 lean_s79
let lean_s81 := by timed congr lean_s25 lean_s80
let lean_s82 := by timed congr lean_s18 lean_s81
let lean_s83 := by timed congr lean_s11 lean_s82
let lean_s84 := by timed congr lean_s9 lean_s83
let lean_s85 := by timed congr lean_s7 lean_s84
have lean_s86 : (Eq let282 let281) := by timed congr lean_s5 lean_s85
have lean_s87 : let281 := by timed eqResolve lean_s2 lean_s86
have lean_s88 : (Or let178 (Or let175 (Or let199 (Or let206 (Or let16 (Or let45 (Or let34 (Or let53 (Or let280 (Or let279 (Or let278 (Or let277 (Or let276 (Or let275 let254)))))))))))))) := by permutateOr lean_s87, [10, 7, 11, 9, 13, 5, 6, 4, 0, 2, 3, 8, 1, 12, 14], (- 1)
let lean_s89 := by R2 lean_s88, lean_a148, let253, [(- 1), 0]
let lean_s90 := by timed flipCongrArg lean_r67 [GE.ge]
have lean_s91 : (Eq let6 let6) := by timed rfl
have lean_s92 : (Eq let271 let274) := by timed congr lean_s90 lean_s91
have lean_s93 : let274 := by timed eqResolve lean_a147 lean_s92
let lean_s94 := by R2 lean_s89, lean_s93, let274, [(- 1), 0]
let lean_s95 := by timed flipCongrArg lean_r31 [GE.ge]
have lean_s96 : (Eq let270 let273) := by timed congr lean_s95 lean_s91
have lean_s97 : let273 := by timed eqResolve lean_a146 lean_s96
let lean_s98 := by R2 lean_s94, lean_s97, let273, [(- 1), 0]
let lean_s99 := by timed flipCongrArg lean_r34 [GE.ge]
have lean_s100 : (Eq let1 let1) := by timed rfl
have lean_s101 : (Eq let269 let272) := by timed congr lean_s99 lean_s100
have lean_s102 : let272 := by timed eqResolve lean_a145 lean_s101
let lean_s103 := by R2 lean_s98, lean_s102, let272, [(- 1), 0]
let lean_s104 := by timed flipCongrArg lean_r89 [LE.le]
have lean_s105 : (Eq let268 let192) := by timed congr lean_s104 lean_s100
have lean_s106 : (Eq let268 let54) := by timed Eq.trans lean_s105 lean_r38
have lean_s107 : let54 := by timed eqResolve lean_a144 lean_s106
let lean_s108 := by R1 lean_s103, lean_s107, let53, [(- 1), 0]
let lean_s109 := by timed flipCongrArg lean_r40 [LE.le]
have lean_s110 : (Eq let267 let248) := by timed congr lean_s109 lean_s100
have lean_s111 : (Eq let267 let35) := by timed Eq.trans lean_s110 lean_r84
have lean_s112 : let35 := by timed eqResolve lean_a143 lean_s111
let lean_s113 := by R1 lean_s108, lean_s112, let34, [(- 1), 0]
have lean_s114 : let46 := by timed eqResolve lean_a142 lean_r46
let lean_s115 := by R1 lean_s113, lean_s114, let45, [(- 1), 0]
have lean_s116 : let17 := by timed eqResolve lean_a141 lean_r51
let lean_s117 := by R1 lean_s115, lean_s116, let16, [(- 1), 0]
let lean_s118 := by timed flipCongrArg lean_r75 [LE.le]
have lean_s119 : (Eq let7 let7) := by timed rfl
have lean_s120 : (Eq let266 let223) := by timed congr lean_s118 lean_s119
have lean_s121 : (Eq let266 let207) := by timed Eq.trans lean_s120 lean_r59
have lean_s122 : let207 := by timed eqResolve lean_a140 lean_s121
let lean_s123 := by R1 lean_s117, lean_s122, let206, [(- 1), 0]
let lean_s124 := by timed flipCongrArg lean_r69 [LE.le]
have lean_s125 : (Eq let265 let209) := by timed congr lean_s124 lean_s100
have lean_s126 : (Eq let265 let200) := by timed Eq.trans lean_s125 lean_r49
have lean_s127 : let200 := by timed eqResolve lean_a139 lean_s126
let lean_s128 := by R1 lean_s123, lean_s127, let199, [(- 1), 0]
let lean_s129 := by timed flipCongrArg lean_r99 [LE.le]
have lean_s130 : (Eq let264 let187) := by timed congr lean_s129 lean_s100
have lean_s131 : (Eq let264 let176) := by timed Eq.trans lean_s130 lean_r35
have lean_s132 : let176 := by timed eqResolve lean_a138 lean_s131
let lean_s133 := by R1 lean_s128, lean_s132, let175, [(- 1), 0]
let lean_s134 := by timed flipCongrArg lean_r57 [LE.le]
have lean_s135 : (Eq let263 let193) := by timed congr lean_s134 lean_s100
have lean_s136 : (Eq let263 let179) := by timed Eq.trans lean_s135 lean_r39
have lean_s137 : let179 := by timed eqResolve lean_a137 lean_s136
let lean_s138 := by R1 lean_s133, lean_s137, let178, [(- 1), 0]
let lean_s139 := by timed flipCongrArg lean_r41 [LE.le]
have lean_s140 : (Eq let262 let205) := by timed congr lean_s139 lean_s119
have lean_s141 : (Eq let262 let204) := by timed Eq.trans lean_s140 lean_r47
have lean_s142 : let204 := by timed eqResolve lean_a136 lean_s141
let lean_s143 := by R2 lean_s138, lean_s142, let204, [(- 1), 0]
let lean_s144 := by timed flipCongrArg lean_r50 [LE.le]
have lean_s145 : (Eq let261 let226) := by timed congr lean_s144 lean_s119
have lean_s146 : (Eq let261 let225) := by timed Eq.trans lean_s145 lean_r65
have lean_s147 : let225 := by timed eqResolve lean_a135 lean_s146
let lean_s148 := by R2 lean_s143, lean_s147, let225, [(- 1), 0]
exact (show False from by R2 lean_s148, lean_a134, let260, [0, 0])


