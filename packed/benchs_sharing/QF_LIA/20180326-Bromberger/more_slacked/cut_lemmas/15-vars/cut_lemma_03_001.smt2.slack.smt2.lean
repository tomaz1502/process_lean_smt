open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x7x5fminus : Int}
variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x7x5fplus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x5x5fplus : Int}
variable {x10x5fplus : Int}
variable {x10x5fminus : Int}
variable {x9x5fplus : Int}
variable {x1x5fplus : Int}
variable {x1x5fminus : Int}
variable {x12x5fplus : Int}
variable {x12x5fminus : Int}
variable {x10x5fplus : Int}
variable {x11x5fplus : Int}
variable {x11x5fminus : Int}
variable {x10x5fminus : Int}
variable {x6x5fplus : Int}
variable {x6x5fminus : Int}
variable {x3x5fminus : Int}
variable {x13x5fplus : Int}
variable {x13x5fminus : Int}
variable {x11x5fminus : Int}
variable {x2x5fplus : Int}
variable {x7x5fminus : Int}
variable {x8x5fminus : Int}
variable {x9x5fminus : Int}
variable {x9x5fminus : Int}
variable {x9x5fplus : Int}
variable {x4x5fminus : Int}
variable {x5x5fminus : Int}
variable {x14x5fminus : Int}
variable {x11x5fplus : Int}
variable {x7x5fplus : Int}
variable {x2x5fminus : Int}
variable {x0x5fplus : Int}
variable {x14x5fplus : Int}
variable {x8x5fminus : Int}
variable {x8x5fplus : Int}
variable {x4x5fplus : Int}
variable {x8x5fplus : Int}
variable {x3x5fplus : Int}
variable {x2x5fminus : Int}
variable {x2x5fplus : Int}
variable {x14x5fplus : Int}
variable {x14x5fminus : Int}
variable {x4x5fminus : Int}
variable {x4x5fplus : Int}
variable {x13x5fminus : Int}
variable {x13x5fplus : Int}
variable {x6x5fminus : Int}
variable {x6x5fplus : Int}
variable {x12x5fminus : Int}
variable {x12x5fplus : Int}
variable {x1x5fminus : Int}
variable {x1x5fplus : Int}
variable {x0x5fminus : Int}

theorem th0 :
  let let1 := (Int.ofNat 1)
  let let2 := (Neg.neg let1)
  let let3 := (binrel% HMul.hMul let2 x1x5fplus)
  let let4 := (binrel% HAdd.hAdd let3 x1x5fminus)
  let let5 := (Int.ofNat 2)
  let let6 := (binrel% HMul.hMul let5 x4x5fminus)
  let let7 := (Neg.neg let5)
  let let8 := (binrel% HMul.hMul let7 x4x5fplus)
  let let9 := (binrel% HMul.hMul let2 x8x5fplus)
  let let10 := (binrel% HMul.hMul let2 x9x5fminus)
  let let11 := (binrel% HMul.hMul let2 x11x5fminus)
  let let12 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let6 let4))))))))
  let let13 := (binrel% GE.ge let12 let1)
  let let14 := (Not let13)
  let let15 := (binrel% LT.lt let12 let1)
  let let16 := (Int.ofNat 0)
  let let17 := (Int.ofNat 7)
  let let18 := (binrel% HDiv.hDiv let1 let17)
  let let19 := (Neg.neg let18)
  let let20 := (binrel% LT.lt let19 let16)
  let let21 := (binrel% HMul.hMul let2 x2x5fminus)
  let let22 := (binrel% HAdd.hAdd x2x5fplus let21)
  let let23 := (binrel% HMul.hMul let2 x0x5fminus)
  let let24 := (binrel% HMul.hMul let2 x3x5fplus)
  let let25 := (binrel% HMul.hMul let2 x5x5fminus)
  let let26 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let23 let22))))))
  let let27 := (binrel% GE.ge let26 let1)
  let let28 := (Not let27)
  let let29 := (binrel% LT.lt let26 let1)
  let let30 := (binrel% HAdd.hAdd x0x5fplus let23)
  let let31 := (binrel% HMul.hMul let2 x8x5fminus)
  let let32 := (binrel% HMul.hMul let2 x13x5fminus)
  let let33 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x3x5fminus) let30))))))))))
  let let34 := (binrel% GE.ge let33 let1)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt let33 let1)
  let let37 := (Int.ofNat 14)
  let let38 := (Int.ofNat 17)
  let let39 := (binrel% HDiv.hDiv let38 let37)
  let let40 := (Neg.neg let39)
  let let41 := (binrel% LT.lt let40 let16)
  let let42 := (Rat.ofInt 1)
  let let43 := (binrel% GT.gt let42 let16)
  let let44 := (Int.ofNat 3)
  let let45 := (binrel% HDiv.hDiv let44 let17)
  let let46 := (binrel% GT.gt let45 let16)
  let let47 := (binrel% HMul.hMul let2 x9x5fplus)
  let let48 := (binrel% HMul.hMul let2 x10x5fplus)
  let let49 := (binrel% HMul.hMul let2 x12x5fminus)
  let let50 := (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x11x5fplus) (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x5x5fplus) (binrel% HAdd.hAdd x5x5fminus let30))))))))))
  let let51 := (binrel% GE.ge let50 let16)
  let let52 := (Not let51)
  let let53 := (binrel% LT.lt let50 let16)
  let let54 := (binrel% HDiv.hDiv (Int.ofNat 11) let37)
  let let55 := (binrel% GT.gt let54 let16)
  let let56 := (binrel% HDiv.hDiv (Int.ofNat 10) let17)
  let let57 := (Neg.neg let56)
  let let58 := (binrel% LT.lt let57 let16)
  let let59 := (binrel% HMul.hMul let2 x2x5fplus)
  let let60 := (binrel% HAdd.hAdd let59 x2x5fminus)
  let let61 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x14x5fplus) (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x9x5fminus) let60)))))
  let let62 := (binrel% HMul.hMul let2 x14x5fminus)
  let let63 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x9x5fminus) let22))))
  let let64 := (Neg.neg let42)
  let let65 := (binrel% HMul.hMul let64 let63)
  let let66 := (binrel% HDiv.hDiv (Int.ofNat 15) let37)
  let let67 := (Neg.neg let66)
  let let68 := (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x2x5fplus) (binrel% HMul.hMul let66 x2x5fminus))))))))
  let let69 := (binrel% HMul.hMul let2 x7x5fplus)
  let let70 := (binrel% HMul.hMul let2 x10x5fminus)
  let let71 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 let60))))))
  let let72 := (binrel% HMul.hMul let66 let71)
  let let73 := (binrel% HDiv.hDiv (Int.ofNat 5) let17)
  let let74 := (Neg.neg let73)
  let let75 := (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x1x5fplus) (binrel% HMul.hMul let73 x1x5fminus))))))))))
  let let76 := (binrel% HMul.hMul let73 let12)
  let let77 := (binrel% GT.gt let39 let16)
  let let78 := (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x2x5fplus) (binrel% HMul.hMul let19 x2x5fminus))))))))))))
  let let79 := (binrel% HMul.hMul let2 x6x5fplus)
  let let80 := (binrel% HMul.hMul let2 x12x5fplus)
  let let81 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x6x5fminus let60))))))))))
  let let82 := (binrel% HMul.hMul let19 let81)
  let let83 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x10x5fminus) (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x8x5fplus let31)))))))))
  let let84 := (binrel% GE.ge let83 let5)
  let let85 := (Not let84)
  let let86 := (binrel% LT.lt let83 let5)
  let let87 := (binrel% HDiv.hDiv (Int.ofNat 8) let17)
  let let88 := (Neg.neg let87)
  let let89 := (binrel% HMul.hMul let87 x3x5fminus)
  let let90 := (binrel% HMul.hMul let88 x3x5fplus)
  let let91 := (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x5x5fminus) (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x2x5fplus) (binrel% HMul.hMul let88 x2x5fminus))))))))
  let let92 := (binrel% HMul.hMul let87 let26)
  let let93 := (binrel% HDiv.hDiv (Int.ofNat 6) let17)
  let let94 := (Neg.neg let93)
  let let95 := (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x0x5fplus) (binrel% HMul.hMul let94 x0x5fminus))))))))))))
  let let96 := (binrel% HMul.hMul let93 let33)
  let let97 := (binrel% HDiv.hDiv (Int.ofNat 20) let17)
  let let98 := (Neg.neg let97)
  let let99 := (binrel% HDiv.hDiv (Int.ofNat 30) let17)
  let let100 := (Neg.neg let99)
  let let101 := (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let99 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let99 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x0x5fplus) (binrel% HMul.hMul let97 x0x5fminus))))))))))))))))))))))
  let let102 := (binrel% HMul.hMul let7 x0x5fminus)
  let let103 := (binrel% HMul.hMul let5 x0x5fplus)
  let let104 := (binrel% HAdd.hAdd let103 let102)
  let let105 := (Neg.neg let44)
  let let106 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x13x5fminus) (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd (binrel% HMul.hMul let105 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let105 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x5x5fminus) (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x3x5fminus let104))))))))))))))))))))
  let let107 := (binrel% HMul.hMul let57 let106)
  let let108 := (binrel% HDiv.hDiv let38 let17)
  let let109 := (Neg.neg let108)
  let let110 := (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let108 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x8x5fplus) (binrel% HMul.hMul let40 x8x5fminus))))))))))
  let let111 := (binrel% HMul.hMul let39 let83)
  let let112 := (binrel% HDiv.hDiv (Int.ofNat 4) let17)
  let let113 := (Neg.neg let112)
  let let114 := (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x4x5fplus) (binrel% HMul.hMul let88 x4x5fminus))))))))))
  let let115 := (binrel% HMul.hMul let2 x7x5fminus)
  let let116 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x13x5fplus) (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let8 let6)))))))))
  let let117 := (binrel% HMul.hMul let113 let116)
  let let118 := (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let108 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let108 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x1x5fplus) (binrel% HMul.hMul let40 x1x5fminus))))))))))))
  let let119 := (binrel% HMul.hMul let2 x4x5fminus)
  let let120 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let119 let4))
  let let121 := (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x12x5fminus) (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x7x5fminus) let120))))))))
  let let122 := (binrel% HMul.hMul let40 let121)
  let let123 := (binrel% HDiv.hDiv (Int.ofNat 9) let17)
  let let124 := (Neg.neg let123)
  let let125 := (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x1x5fplus) (binrel% HMul.hMul let123 x1x5fminus))))))))))))
  let let126 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let115 let120))))))))
  let let127 := (binrel% HMul.hMul let123 let126)
  let let128 := (binrel% HMul.hMul let54 x0x5fminus)
  let let129 := (Neg.neg let54)
  let let130 := (binrel% HMul.hMul let129 x0x5fplus)
  let let131 := (binrel% HMul.hMul let129 x12x5fminus)
  let let132 := (binrel% HMul.hMul let54 x12x5fplus)
  let let133 := (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x14x5fminus) (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x8x5fminus) (binrel% HAdd.hAdd let130 let128)))))))
  let let134 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x0x5fplus) x0x5fminus)))))))
  let let135 := (binrel% HMul.hMul let54 let134)
  let let136 := (binrel% LT.lt let64 let16)
  let let137 := (Rat.ofInt 0)
  let let138 := (binrel% HMul.hMul let64 let16)
  let let139 := (binrel% HMul.hMul let66 let16)
  let let140 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd x1x5fminus let60))))))))))))))
  let let141 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd x1x5fminus let30))))))))))))))
  let let142 := (binrel% GE.ge let71 let1)
  let let143 := (Eq let142 let142)
  let let144 := (binrel% GT.gt let123 let16)
  let let145 := (binrel% LE.le let137 let19)
  let let146 := (Not let85)
  let let147 := (Eq let146 let84)
  let let148 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let79 x6x5fminus)))))))))
  let let149 := (binrel% GE.ge let148 let16)
  let let150 := (Not let149)
  let let151 := (Not let150)
  let let152 := (Eq let151 let149)
  let let153 := (binrel% GE.ge let126 let16)
  let let154 := (Not let153)
  let let155 := (Not let154)
  let let156 := (Eq let155 let153)
  let let157 := (binrel% GT.gt let93 let16)
  let let158 := (Not let142)
  let let159 := (Not let158)
  let let160 := (Eq let159 let142)
  let let161 := (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x9x5fminus) (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x6x5fplus) (binrel% HMul.hMul let87 x6x5fminus))))))))))
  let let162 := (Neg.neg let45)
  let let163 := (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x0x5fplus) (binrel% HMul.hMul let162 x0x5fminus))))))))))))
  let let164 := (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x13x5fminus) (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x5x5fminus) (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x2x5fplus) (binrel% HMul.hMul let129 x2x5fminus))))))))))))))))
  let let165 := (binrel% HMul.hMul let2 x6x5fminus)
  let let166 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd x6x5fplus let165)))))))))))
  let let167 := (Rat.ofInt let166)
  let let168 := (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let163 (binrel% HAdd.hAdd let161 let133)))))))))))))))
  let let169 := (binrel% LE.le let126 let2)
  let let170 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let21 let30))))))
  let let171 := (binrel% GE.ge let134 let1)
  let let172 := (Eq let171 let171)
  let let173 := (Not let35)
  let let174 := (Eq let173 let34)
  let let175 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let24 x3x5fminus)))))))))
  let let176 := (Not let52)
  let let177 := (Eq let51 let176)
  let let178 := (Eq let176 let51)
  let let179 := (binrel% GT.gt let87 let16)
  let let180 := (binrel% HMul.hMul let129 let16)
  let let181 := (Eq let34 let34)
  let let182 := (binrel% GT.gt let73 let16)
  let let183 := (binrel% GE.ge let166 let1)
  let let184 := (Not let183)
  let let185 := (binrel% LE.le let166 let16)
  let let186 := (binrel% HMul.hMul let45 let50)
  let let187 := (Not let184)
  let let188 := (Eq let187 let183)
  let let189 := (Eq let34 let173)
  let let190 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let119 let104))))))))))
  let let191 := (binrel% HMul.hMul let73 let16)
  let let192 := (binrel% LE.le let33 let16)
  let let193 := (binrel% HMul.hMul let113 let16)
  let let194 := (Not let28)
  let let195 := (Eq let27 let194)
  let let196 := (Eq let194 let27)
  let let197 := (Eq let153 let155)
  let let198 := (binrel% LE.le let148 let2)
  let let199 := (binrel% LE.le let71 let16)
  let let200 := (binrel% LT.lt let126 let16)
  let let201 := (Eq let84 let84)
  let let202 := (Eq let149 let149)
  let let203 := (binrel% LT.lt let166 let1)
  let let204 := (binrel% LE.le let83 let1)
  let let205 := (binrel% HMul.hMul let42 let16)
  let let206 := (binrel% LE.le let50 let2)
  let let207 := (Eq let27 let27)
  let let208 := (Eq let153 let153)
  let let209 := (Eq let84 let146)
  let let210 := (Eq let149 let151)
  let let211 := (Not let171)
  let let212 := (binrel% LT.lt let134 let1)
  let let213 := (Eq let142 let159)
  let let214 := (binrel% HMul.hMul let39 let1)
  let let215 := (binrel% LE.le let12 let16)
  let let216 := (binrel% HMul.hMul let42 let166)
  let let217 := (binrel% LE.le let26 let16)
  let let218 := (binrel% HMul.hMul let57 let7)
  let let219 := (binrel% HMul.hMul let87 let148)
  let let220 := (Eq let183 let183)
  let let221 := (binrel% LT.lt let71 let1)
  let let222 := (binrel% LT.lt let129 let16)
  let let223 := (binrel% HMul.hMul let87 let16)
  let let224 := (binrel% HMul.hMul let129 let140)
  let let225 := (binrel% LE.le let134 let16)
  let let226 := (Eq let183 let187)
  let let227 := (Eq let51 let51)
  let let228 := (Not let14)
  let let229 := (Eq let228 let13)
  let let230 := (binrel% HMul.hMul let87 let2)
  let let231 := (binrel% LT.lt let148 let16)
  let let232 := (Eq let13 let228)
  let let233 := (binrel% HMul.hMul let45 let2)
  let let234 := (Not let211)
  let let235 := (Eq let234 let171)
  let let236 := (Eq let171 let234)
  let let237 := (binrel% GT.gt let66 let16)
  let let238 := (binrel% HMul.hMul let19 let1)
  let let239 := (binrel% GE.ge let63 let16)
  let let240 := (Not let239)
  let let241 := (binrel% LT.lt let63 let16)
  let let242 := (binrel% HMul.hMul let40 let1)
  let let243 := (binrel% LT.lt let113 let16)
  let let244 := (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let162 (binrel% HAdd.hAdd let88 let137)))))))))))))))
  let let245 := (Eq let13 let13)
  let let246 := (binrel% HMul.hMul let54 let16)
  let let247 := (binrel% HMul.hMul let123 let2)
  let let248 := (binrel% HMul.hMul let93 let16)
  let let249 := (binrel% GE.ge let106 let7)
  let let250 := (binrel% LE.le let190 let16)
  let let251 := (binrel% LE.le let175 let2)
  let let252 := (binrel% LE.le let170 let16)
  let let253 := (binrel% GE.ge let141 let16)
  let let254 := (binrel% GE.ge let121 let1)
  let let255 := (binrel% GE.ge let81 let1)
  let let256 := (binrel% GE.ge let116 let16)
  let let257 := (binrel% GE.ge let140 let16)
  let let258 := (Not let256)
  let let259 := (Not let255)
  let let260 := (Not let254)
  let let261 := (Not let257)
  let let262 := (Not let249)
  let let263 := (Or let171 (Or let149 (Or let51 (Or let261 (Or let153 (Or let183 (Or let260 (Or let258 (Or let84 (Or let262 (Or let34 (Or let27 (Or let259 (Or let13 (Or let142 let240)))))))))))))))
  let let264 := (Or let234 (Or let151 (Or let176 (Or let261 (Or let155 (Or let187 (Or let260 (Or let258 (Or let146 (Or let262 (Or let173 (Or let194 (Or let259 (Or let228 (Or let159 let240)))))))))))))))
  let let265 := (Or let240 False)
  let let266 := (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let238 (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let248 (binrel% HAdd.hAdd let218 (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let242 (binrel% HAdd.hAdd let205 (binrel% HAdd.hAdd let247 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let233 (binrel% HAdd.hAdd let230 let246)))))))))))))))
  let let267 := (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let216 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let224 (binrel% HAdd.hAdd let186 (binrel% HAdd.hAdd let219 let135)))))))))))))))
  let let268 := (binrel% LE.le let267 let266)
  let let269 := (binrel% LE.le let135 let246)
  let let270 := (And let55 let225)
  let let271 := (binrel% LE.le let219 let230)
  let let272 := (And let179 let198)
  let let273 := (binrel% LE.le let186 let233)
  let let274 := (And let46 let206)
  let let275 := (binrel% LE.le let224 let180)
  let let276 := (And let222 let257)
  let let277 := (binrel% LE.le let127 let247)
  let let278 := (And let144 let169)
  let let279 := (binrel% LE.le let216 let205)
  let let280 := (And let43 let185)
  let let281 := (binrel% LE.le let122 let242)
  let let282 := (And let41 let254)
  let let283 := (binrel% LE.le let117 let193)
  let let284 := (And let243 let256)
  let let285 := (binrel% LE.le let111 let214)
  let let286 := (And let77 let204)
  let let287 := (binrel% LE.le let107 let218)
  let let288 := (And let58 let249)
  let let289 := (binrel% LE.le let96 let248)
  let let290 := (And let157 let192)
  let let291 := (binrel% LE.le let92 let223)
  let let292 := (And let179 let217)
  let let293 := (binrel% LE.le let82 let238)
  let let294 := (And let20 let255)
  let let295 := (binrel% LE.le let76 let191)
  let let296 := (And let182 let215)
  let let297 := (binrel% LE.le let72 let139)
  let let298 := (And let237 let199)
  let let299 := (binrel% LE.le let65 let138)
  let let300 := (And let136 let239)
(Eq let15 let14) → (Eq let20 True) → (Eq let29 let28) → (Eq let36 let35) → (Eq let41 True) → (Eq let43 True) → (Eq let46 True) → (Eq let53 let52) → (Eq let55 True) → (Eq let58 True) → (Eq let65 let61) → (Eq let72 let68) → (Eq let76 let75) → (Eq let77 True) → (Eq let82 let78) → (Eq let86 let85) → (Eq let92 let91) → (Eq let96 let95) → (Eq let107 let101) → (Eq let111 let110) → (Eq let117 let114) → (Eq let122 let118) → (Eq let127 let125) → (Eq let135 let133) → (Eq let136 True) → (Eq let138 let137) → (Eq let139 let137) → (Eq let141 let140) → (Eq let143 True) → (Eq let144 True) → (Eq let145 False) → let147 → let152 → let156 → (Eq let157 True) → let160 → (Eq let168 let137) → (Eq let169 let154) → (Eq let170 let26) → (Eq let172 True) → let174 → (Eq let175 let148) → (Eq let178 let177) → (Eq let179 True) → (Eq let180 let137) → (Eq let181 True) → (Eq let182 True) → (Eq let185 let184) → (Eq let186 let163) → let188 → (Eq let174 let189) → (Eq let190 let166) → (Eq let191 let137) → (Eq let192 let35) → (Eq let193 let137) → (Eq let196 let195) → (Eq let156 let197) → (Eq let198 let150) → (Eq let199 let158) → (Eq let200 let154) → (Eq let201 True) → (Eq let202 True) → (Eq let203 let184) → (Eq let204 let85) → (Eq let205 let137) → (Eq let206 let52) → (Eq let207 True) → (Eq let208 True) → (Eq let147 let209) → (Eq let152 let210) → (Eq let212 let211) → (Eq let160 let213) → (Eq let214 let39) → (Eq let215 let14) → (Eq let216 let167) → (Eq let217 let28) → (Eq let218 let97) → (Eq let219 let161) → (Eq let220 True) → (Eq let221 let158) → (Eq let222 True) → (Eq let223 let137) → (Eq let224 let164) → (Eq let225 let211) → (Eq let188 let226) → (Eq let227 True) → let229 → (Eq let230 let88) → let178 → (Eq let231 let150) → (Eq let229 let232) → (Eq let233 let162) → let235 → (Eq let235 let236) → (Eq let237 True) → (Eq let238 let19) → (Eq let241 let240) → let196 → (Eq let242 let40) → (Eq let243 True) → (Eq let244 let19) → (Eq let245 True) → (Eq let246 let137) → (Eq let247 let124) → (Eq let248 let137) → (binrel% GE.ge x14x5fplus let16) → (binrel% GE.ge x14x5fminus let16) → (binrel% GE.ge x13x5fplus let16) → (binrel% GE.ge x13x5fminus let16) → (binrel% GE.ge x12x5fplus let16) → (binrel% GE.ge x12x5fminus let16) → (binrel% GE.ge x11x5fplus let16) → (binrel% GE.ge x11x5fminus let16) → (binrel% GE.ge x10x5fplus let16) → (binrel% GE.ge x10x5fminus let16) → (binrel% GE.ge x9x5fplus let16) → (binrel% GE.ge x9x5fminus let16) → (binrel% GE.ge x8x5fplus let16) → (binrel% GE.ge x8x5fminus let16) → (binrel% GE.ge x7x5fplus let16) → (binrel% GE.ge x7x5fminus let16) → (binrel% GE.ge x5x5fplus let16) → (binrel% GE.ge x5x5fminus let16) → (binrel% GE.ge x3x5fplus let16) → (binrel% GE.ge x3x5fminus let16) → (binrel% GE.ge x0x5fplus let16) → (binrel% GE.ge x0x5fminus let16) → (binrel% GE.ge x4x5fplus let16) → (binrel% GE.ge x4x5fminus let16) → (binrel% GE.ge x1x5fplus let16) → (binrel% GE.ge x1x5fminus let16) → (binrel% GE.ge x6x5fplus let16) → (binrel% GE.ge x6x5fminus let16) → (binrel% GE.ge x2x5fplus let16) → (binrel% GE.ge x2x5fminus let16) → let249 → let169 → let206 → let250 → let192 → let215 → let251 → let204 → let199 → let225 → let252 → let253 → let254 → let255 → let256 → let239 → False :=
  let let1 := (Int.ofNat 1)
  let let2 := (Neg.neg let1)
  let let3 := (binrel% HMul.hMul let2 x1x5fplus)
  let let4 := (binrel% HAdd.hAdd let3 x1x5fminus)
  let let5 := (Int.ofNat 2)
  let let6 := (binrel% HMul.hMul let5 x4x5fminus)
  let let7 := (Neg.neg let5)
  let let8 := (binrel% HMul.hMul let7 x4x5fplus)
  let let9 := (binrel% HMul.hMul let2 x8x5fplus)
  let let10 := (binrel% HMul.hMul let2 x9x5fminus)
  let let11 := (binrel% HMul.hMul let2 x11x5fminus)
  let let12 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd let6 let4))))))))
  let let13 := (binrel% GE.ge let12 let1)
  let let14 := (Not let13)
  let let15 := (binrel% LT.lt let12 let1)
  let let16 := (Int.ofNat 0)
  let let17 := (Int.ofNat 7)
  let let18 := (binrel% HDiv.hDiv let1 let17)
  let let19 := (Neg.neg let18)
  let let20 := (binrel% LT.lt let19 let16)
  let let21 := (binrel% HMul.hMul let2 x2x5fminus)
  let let22 := (binrel% HAdd.hAdd x2x5fplus let21)
  let let23 := (binrel% HMul.hMul let2 x0x5fminus)
  let let24 := (binrel% HMul.hMul let2 x3x5fplus)
  let let25 := (binrel% HMul.hMul let2 x5x5fminus)
  let let26 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let23 let22))))))
  let let27 := (binrel% GE.ge let26 let1)
  let let28 := (Not let27)
  let let29 := (binrel% LT.lt let26 let1)
  let let30 := (binrel% HAdd.hAdd x0x5fplus let23)
  let let31 := (binrel% HMul.hMul let2 x8x5fminus)
  let let32 := (binrel% HMul.hMul let2 x13x5fminus)
  let let33 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x3x5fminus) let30))))))))))
  let let34 := (binrel% GE.ge let33 let1)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt let33 let1)
  let let37 := (Int.ofNat 14)
  let let38 := (Int.ofNat 17)
  let let39 := (binrel% HDiv.hDiv let38 let37)
  let let40 := (Neg.neg let39)
  let let41 := (binrel% LT.lt let40 let16)
  let let42 := (Rat.ofInt 1)
  let let43 := (binrel% GT.gt let42 let16)
  let let44 := (Int.ofNat 3)
  let let45 := (binrel% HDiv.hDiv let44 let17)
  let let46 := (binrel% GT.gt let45 let16)
  let let47 := (binrel% HMul.hMul let2 x9x5fplus)
  let let48 := (binrel% HMul.hMul let2 x10x5fplus)
  let let49 := (binrel% HMul.hMul let2 x12x5fminus)
  let let50 := (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x11x5fplus) (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x5x5fplus) (binrel% HAdd.hAdd x5x5fminus let30))))))))))
  let let51 := (binrel% GE.ge let50 let16)
  let let52 := (Not let51)
  let let53 := (binrel% LT.lt let50 let16)
  let let54 := (binrel% HDiv.hDiv (Int.ofNat 11) let37)
  let let55 := (binrel% GT.gt let54 let16)
  let let56 := (binrel% HDiv.hDiv (Int.ofNat 10) let17)
  let let57 := (Neg.neg let56)
  let let58 := (binrel% LT.lt let57 let16)
  let let59 := (binrel% HMul.hMul let2 x2x5fplus)
  let let60 := (binrel% HAdd.hAdd let59 x2x5fminus)
  let let61 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x14x5fplus) (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x9x5fminus) let60)))))
  let let62 := (binrel% HMul.hMul let2 x14x5fminus)
  let let63 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x9x5fminus) let22))))
  let let64 := (Neg.neg let42)
  let let65 := (binrel% HMul.hMul let64 let63)
  let let66 := (binrel% HDiv.hDiv (Int.ofNat 15) let37)
  let let67 := (Neg.neg let66)
  let let68 := (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x2x5fplus) (binrel% HMul.hMul let66 x2x5fminus))))))))
  let let69 := (binrel% HMul.hMul let2 x7x5fplus)
  let let70 := (binrel% HMul.hMul let2 x10x5fminus)
  let let71 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 let60))))))
  let let72 := (binrel% HMul.hMul let66 let71)
  let let73 := (binrel% HDiv.hDiv (Int.ofNat 5) let17)
  let let74 := (Neg.neg let73)
  let let75 := (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x1x5fplus) (binrel% HMul.hMul let73 x1x5fminus))))))))))
  let let76 := (binrel% HMul.hMul let73 let12)
  let let77 := (binrel% GT.gt let39 let16)
  let let78 := (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x2x5fplus) (binrel% HMul.hMul let19 x2x5fminus))))))))))))
  let let79 := (binrel% HMul.hMul let2 x6x5fplus)
  let let80 := (binrel% HMul.hMul let2 x12x5fplus)
  let let81 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x6x5fminus let60))))))))))
  let let82 := (binrel% HMul.hMul let19 let81)
  let let83 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x10x5fminus) (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x8x5fplus let31)))))))))
  let let84 := (binrel% GE.ge let83 let5)
  let let85 := (Not let84)
  let let86 := (binrel% LT.lt let83 let5)
  let let87 := (binrel% HDiv.hDiv (Int.ofNat 8) let17)
  let let88 := (Neg.neg let87)
  let let89 := (binrel% HMul.hMul let87 x3x5fminus)
  let let90 := (binrel% HMul.hMul let88 x3x5fplus)
  let let91 := (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x5x5fminus) (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x2x5fplus) (binrel% HMul.hMul let88 x2x5fminus))))))))
  let let92 := (binrel% HMul.hMul let87 let26)
  let let93 := (binrel% HDiv.hDiv (Int.ofNat 6) let17)
  let let94 := (Neg.neg let93)
  let let95 := (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let94 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let93 x0x5fplus) (binrel% HMul.hMul let94 x0x5fminus))))))))))))
  let let96 := (binrel% HMul.hMul let93 let33)
  let let97 := (binrel% HDiv.hDiv (Int.ofNat 20) let17)
  let let98 := (Neg.neg let97)
  let let99 := (binrel% HDiv.hDiv (Int.ofNat 30) let17)
  let let100 := (Neg.neg let99)
  let let101 := (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let99 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let99 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x0x5fplus) (binrel% HMul.hMul let97 x0x5fminus))))))))))))))))))))))
  let let102 := (binrel% HMul.hMul let7 x0x5fminus)
  let let103 := (binrel% HMul.hMul let5 x0x5fplus)
  let let104 := (binrel% HAdd.hAdd let103 let102)
  let let105 := (Neg.neg let44)
  let let106 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x13x5fminus) (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd (binrel% HMul.hMul let105 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let105 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x5x5fminus) (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x3x5fminus let104))))))))))))))))))))
  let let107 := (binrel% HMul.hMul let57 let106)
  let let108 := (binrel% HDiv.hDiv let38 let17)
  let let109 := (Neg.neg let108)
  let let110 := (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let108 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x8x5fplus) (binrel% HMul.hMul let40 x8x5fminus))))))))))
  let let111 := (binrel% HMul.hMul let39 let83)
  let let112 := (binrel% HDiv.hDiv (Int.ofNat 4) let17)
  let let113 := (Neg.neg let112)
  let let114 := (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x4x5fplus) (binrel% HMul.hMul let88 x4x5fminus))))))))))
  let let115 := (binrel% HMul.hMul let2 x7x5fminus)
  let let116 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x13x5fplus) (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let8 let6)))))))))
  let let117 := (binrel% HMul.hMul let113 let116)
  let let118 := (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let108 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let108 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let39 x1x5fplus) (binrel% HMul.hMul let40 x1x5fminus))))))))))))
  let let119 := (binrel% HMul.hMul let2 x4x5fminus)
  let let120 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let119 let4))
  let let121 := (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x12x5fminus) (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x7x5fminus) let120))))))))
  let let122 := (binrel% HMul.hMul let40 let121)
  let let123 := (binrel% HDiv.hDiv (Int.ofNat 9) let17)
  let let124 := (Neg.neg let123)
  let let125 := (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x1x5fplus) (binrel% HMul.hMul let123 x1x5fminus))))))))))))
  let let126 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let115 let120))))))))
  let let127 := (binrel% HMul.hMul let123 let126)
  let let128 := (binrel% HMul.hMul let54 x0x5fminus)
  let let129 := (Neg.neg let54)
  let let130 := (binrel% HMul.hMul let129 x0x5fplus)
  let let131 := (binrel% HMul.hMul let129 x12x5fminus)
  let let132 := (binrel% HMul.hMul let54 x12x5fplus)
  let let133 := (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x14x5fminus) (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x8x5fminus) (binrel% HAdd.hAdd let130 let128)))))))
  let let134 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x0x5fplus) x0x5fminus)))))))
  let let135 := (binrel% HMul.hMul let54 let134)
  let let136 := (binrel% LT.lt let64 let16)
  let let137 := (Rat.ofInt 0)
  let let138 := (binrel% HMul.hMul let64 let16)
  let let139 := (binrel% HMul.hMul let66 let16)
  let let140 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd x1x5fminus let60))))))))))))))
  let let141 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd x1x5fminus let30))))))))))))))
  let let142 := (binrel% GE.ge let71 let1)
  let let143 := (Eq let142 let142)
  let let144 := (binrel% GT.gt let123 let16)
  let let145 := (binrel% LE.le let137 let19)
  let let146 := (Not let85)
  let let147 := (Eq let146 let84)
  let let148 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let79 x6x5fminus)))))))))
  let let149 := (binrel% GE.ge let148 let16)
  let let150 := (Not let149)
  let let151 := (Not let150)
  let let152 := (Eq let151 let149)
  let let153 := (binrel% GE.ge let126 let16)
  let let154 := (Not let153)
  let let155 := (Not let154)
  let let156 := (Eq let155 let153)
  let let157 := (binrel% GT.gt let93 let16)
  let let158 := (Not let142)
  let let159 := (Not let158)
  let let160 := (Eq let159 let142)
  let let161 := (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x9x5fminus) (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x6x5fplus) (binrel% HMul.hMul let87 x6x5fminus))))))))))
  let let162 := (Neg.neg let45)
  let let163 := (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x0x5fplus) (binrel% HMul.hMul let162 x0x5fminus))))))))))))
  let let164 := (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x13x5fminus) (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x5x5fminus) (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let129 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x2x5fplus) (binrel% HMul.hMul let129 x2x5fminus))))))))))))))))
  let let165 := (binrel% HMul.hMul let2 x6x5fminus)
  let let166 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd x6x5fplus let165)))))))))))
  let let167 := (Rat.ofInt let166)
  let let168 := (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let163 (binrel% HAdd.hAdd let161 let133)))))))))))))))
  let let169 := (binrel% LE.le let126 let2)
  let let170 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let21 let30))))))
  let let171 := (binrel% GE.ge let134 let1)
  let let172 := (Eq let171 let171)
  let let173 := (Not let35)
  let let174 := (Eq let173 let34)
  let let175 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let24 x3x5fminus)))))))))
  let let176 := (Not let52)
  let let177 := (Eq let51 let176)
  let let178 := (Eq let176 let51)
  let let179 := (binrel% GT.gt let87 let16)
  let let180 := (binrel% HMul.hMul let129 let16)
  let let181 := (Eq let34 let34)
  let let182 := (binrel% GT.gt let73 let16)
  let let183 := (binrel% GE.ge let166 let1)
  let let184 := (Not let183)
  let let185 := (binrel% LE.le let166 let16)
  let let186 := (binrel% HMul.hMul let45 let50)
  let let187 := (Not let184)
  let let188 := (Eq let187 let183)
  let let189 := (Eq let34 let173)
  let let190 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let119 let104))))))))))
  let let191 := (binrel% HMul.hMul let73 let16)
  let let192 := (binrel% LE.le let33 let16)
  let let193 := (binrel% HMul.hMul let113 let16)
  let let194 := (Not let28)
  let let195 := (Eq let27 let194)
  let let196 := (Eq let194 let27)
  let let197 := (Eq let153 let155)
  let let198 := (binrel% LE.le let148 let2)
  let let199 := (binrel% LE.le let71 let16)
  let let200 := (binrel% LT.lt let126 let16)
  let let201 := (Eq let84 let84)
  let let202 := (Eq let149 let149)
  let let203 := (binrel% LT.lt let166 let1)
  let let204 := (binrel% LE.le let83 let1)
  let let205 := (binrel% HMul.hMul let42 let16)
  let let206 := (binrel% LE.le let50 let2)
  let let207 := (Eq let27 let27)
  let let208 := (Eq let153 let153)
  let let209 := (Eq let84 let146)
  let let210 := (Eq let149 let151)
  let let211 := (Not let171)
  let let212 := (binrel% LT.lt let134 let1)
  let let213 := (Eq let142 let159)
  let let214 := (binrel% HMul.hMul let39 let1)
  let let215 := (binrel% LE.le let12 let16)
  let let216 := (binrel% HMul.hMul let42 let166)
  let let217 := (binrel% LE.le let26 let16)
  let let218 := (binrel% HMul.hMul let57 let7)
  let let219 := (binrel% HMul.hMul let87 let148)
  let let220 := (Eq let183 let183)
  let let221 := (binrel% LT.lt let71 let1)
  let let222 := (binrel% LT.lt let129 let16)
  let let223 := (binrel% HMul.hMul let87 let16)
  let let224 := (binrel% HMul.hMul let129 let140)
  let let225 := (binrel% LE.le let134 let16)
  let let226 := (Eq let183 let187)
  let let227 := (Eq let51 let51)
  let let228 := (Not let14)
  let let229 := (Eq let228 let13)
  let let230 := (binrel% HMul.hMul let87 let2)
  let let231 := (binrel% LT.lt let148 let16)
  let let232 := (Eq let13 let228)
  let let233 := (binrel% HMul.hMul let45 let2)
  let let234 := (Not let211)
  let let235 := (Eq let234 let171)
  let let236 := (Eq let171 let234)
  let let237 := (binrel% GT.gt let66 let16)
  let let238 := (binrel% HMul.hMul let19 let1)
  let let239 := (binrel% GE.ge let63 let16)
  let let240 := (Not let239)
  let let241 := (binrel% LT.lt let63 let16)
  let let242 := (binrel% HMul.hMul let40 let1)
  let let243 := (binrel% LT.lt let113 let16)
  let let244 := (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let137 (binrel% HAdd.hAdd let162 (binrel% HAdd.hAdd let88 let137)))))))))))))))
  let let245 := (Eq let13 let13)
  let let246 := (binrel% HMul.hMul let54 let16)
  let let247 := (binrel% HMul.hMul let123 let2)
  let let248 := (binrel% HMul.hMul let93 let16)
  let let249 := (binrel% GE.ge let106 let7)
  let let250 := (binrel% LE.le let190 let16)
  let let251 := (binrel% LE.le let175 let2)
  let let252 := (binrel% LE.le let170 let16)
  let let253 := (binrel% GE.ge let141 let16)
  let let254 := (binrel% GE.ge let121 let1)
  let let255 := (binrel% GE.ge let81 let1)
  let let256 := (binrel% GE.ge let116 let16)
  let let257 := (binrel% GE.ge let140 let16)
  let let258 := (Not let256)
  let let259 := (Not let255)
  let let260 := (Not let254)
  let let261 := (Not let257)
  let let262 := (Not let249)
  let let263 := (Or let171 (Or let149 (Or let51 (Or let261 (Or let153 (Or let183 (Or let260 (Or let258 (Or let84 (Or let262 (Or let34 (Or let27 (Or let259 (Or let13 (Or let142 let240)))))))))))))))
  let let264 := (Or let234 (Or let151 (Or let176 (Or let261 (Or let155 (Or let187 (Or let260 (Or let258 (Or let146 (Or let262 (Or let173 (Or let194 (Or let259 (Or let228 (Or let159 let240)))))))))))))))
  let let265 := (Or let240 False)
  let let266 := (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let238 (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let248 (binrel% HAdd.hAdd let218 (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let242 (binrel% HAdd.hAdd let205 (binrel% HAdd.hAdd let247 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let233 (binrel% HAdd.hAdd let230 let246)))))))))))))))
  let let267 := (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let216 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let224 (binrel% HAdd.hAdd let186 (binrel% HAdd.hAdd let219 let135)))))))))))))))
  let let268 := (binrel% LE.le let267 let266)
  let let269 := (binrel% LE.le let135 let246)
  let let270 := (And let55 let225)
  let let271 := (binrel% LE.le let219 let230)
  let let272 := (And let179 let198)
  let let273 := (binrel% LE.le let186 let233)
  let let274 := (And let46 let206)
  let let275 := (binrel% LE.le let224 let180)
  let let276 := (And let222 let257)
  let let277 := (binrel% LE.le let127 let247)
  let let278 := (And let144 let169)
  let let279 := (binrel% LE.le let216 let205)
  let let280 := (And let43 let185)
  let let281 := (binrel% LE.le let122 let242)
  let let282 := (And let41 let254)
  let let283 := (binrel% LE.le let117 let193)
  let let284 := (And let243 let256)
  let let285 := (binrel% LE.le let111 let214)
  let let286 := (And let77 let204)
  let let287 := (binrel% LE.le let107 let218)
  let let288 := (And let58 let249)
  let let289 := (binrel% LE.le let96 let248)
  let let290 := (And let157 let192)
  let let291 := (binrel% LE.le let92 let223)
  let let292 := (And let179 let217)
  let let293 := (binrel% LE.le let82 let238)
  let let294 := (And let20 let255)
  let let295 := (binrel% LE.le let76 let191)
  let let296 := (And let182 let215)
  let let297 := (binrel% LE.le let72 let139)
  let let298 := (And let237 let199)
  let let299 := (binrel% LE.le let65 let138)
  let let300 := (And let136 let239)
fun lean_r0 : (Eq let15 let14) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let20 True) => -- EVALUATE
fun lean_r2 : (Eq let29 let28) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let36 let35) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let41 True) => -- EVALUATE
fun lean_r5 : (Eq let43 True) => -- EVALUATE
fun lean_r6 : (Eq let46 True) => -- EVALUATE
fun lean_r7 : (Eq let53 let52) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let55 True) => -- EVALUATE
fun lean_r9 : (Eq let58 True) => -- EVALUATE
fun lean_r10 : (Eq let65 let61) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let72 let68) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let76 let75) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let77 True) => -- EVALUATE
fun lean_r14 : (Eq let82 let78) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let86 let85) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let92 let91) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let96 let95) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let107 let101) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let111 let110) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let117 let114) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let122 let118) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let127 let125) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let135 let133) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let136 True) => -- EVALUATE
fun lean_r25 : (Eq let138 let137) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let139 let137) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let141 let140) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let143 True) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let144 True) => -- EVALUATE
fun lean_r30 : (Eq let145 False) => -- THEORY_REWRITE_ARITH
fun lean_r31 : let147 => -- THEORY_REWRITE_BOOL
fun lean_r32 : let152 => -- THEORY_REWRITE_BOOL
fun lean_r33 : let156 => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let157 True) => -- EVALUATE
fun lean_r35 : let160 => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let168 let137) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let169 let154) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let170 let26) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let172 True) => -- THEORY_REWRITE_BOOL
fun lean_r40 : let174 => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let175 let148) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let178 let177) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let179 True) => -- EVALUATE
fun lean_r44 : (Eq let180 let137) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let181 True) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let182 True) => -- EVALUATE
fun lean_r47 : (Eq let185 let184) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let186 let163) => -- THEORY_REWRITE_ARITH
fun lean_r49 : let188 => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq let174 let189) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq let190 let166) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let191 let137) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let192 let35) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let193 let137) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let196 let195) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq let156 let197) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq let198 let150) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let199 let158) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let200 let154) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let201 True) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq let202 True) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq let203 let184) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let204 let85) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let205 let137) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let206 let52) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let207 True) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq let208 True) => -- THEORY_REWRITE_BOOL
fun lean_r68 : (Eq let147 let209) => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq let152 let210) => -- THEORY_REWRITE_BOOL
fun lean_r70 : (Eq let212 let211) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let160 let213) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let214 let39) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let215 let14) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let216 let167) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let217 let28) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let218 let97) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let219 let161) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let220 True) => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq let221 let158) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let222 True) => -- EVALUATE
fun lean_r81 : (Eq let223 let137) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let224 let164) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let225 let211) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let188 let226) => -- THEORY_REWRITE_BOOL
fun lean_r85 : (Eq let227 True) => -- THEORY_REWRITE_BOOL
fun lean_r86 : let229 => -- THEORY_REWRITE_BOOL
fun lean_r87 : (Eq let230 let88) => -- THEORY_REWRITE_ARITH
fun lean_r88 : let178 => -- THEORY_REWRITE_BOOL
fun lean_r89 : (Eq let231 let150) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let229 let232) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq let233 let162) => -- THEORY_REWRITE_ARITH
fun lean_r92 : let235 => -- THEORY_REWRITE_BOOL
fun lean_r93 : (Eq let235 let236) => -- THEORY_REWRITE_BOOL
fun lean_r94 : (Eq let237 True) => -- EVALUATE
fun lean_r95 : (Eq let238 let19) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let241 let240) => -- THEORY_REWRITE_ARITH
fun lean_r97 : let196 => -- THEORY_REWRITE_BOOL
fun lean_r98 : (Eq let242 let40) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let243 True) => -- EVALUATE
fun lean_r100 : (Eq let244 let19) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let245 True) => -- THEORY_REWRITE_BOOL
fun lean_r102 : (Eq let246 let137) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let247 let124) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let248 let137) => -- THEORY_REWRITE_ARITH
fun lean_a105 : (binrel% GE.ge x14x5fplus let16) =>
fun lean_a106 : (binrel% GE.ge x14x5fminus let16) =>
fun lean_a107 : (binrel% GE.ge x13x5fplus let16) =>
fun lean_a108 : (binrel% GE.ge x13x5fminus let16) =>
fun lean_a109 : (binrel% GE.ge x12x5fplus let16) =>
fun lean_a110 : (binrel% GE.ge x12x5fminus let16) =>
fun lean_a111 : (binrel% GE.ge x11x5fplus let16) =>
fun lean_a112 : (binrel% GE.ge x11x5fminus let16) =>
fun lean_a113 : (binrel% GE.ge x10x5fplus let16) =>
fun lean_a114 : (binrel% GE.ge x10x5fminus let16) =>
fun lean_a115 : (binrel% GE.ge x9x5fplus let16) =>
fun lean_a116 : (binrel% GE.ge x9x5fminus let16) =>
fun lean_a117 : (binrel% GE.ge x8x5fplus let16) =>
fun lean_a118 : (binrel% GE.ge x8x5fminus let16) =>
fun lean_a119 : (binrel% GE.ge x7x5fplus let16) =>
fun lean_a120 : (binrel% GE.ge x7x5fminus let16) =>
fun lean_a121 : (binrel% GE.ge x5x5fplus let16) =>
fun lean_a122 : (binrel% GE.ge x5x5fminus let16) =>
fun lean_a123 : (binrel% GE.ge x3x5fplus let16) =>
fun lean_a124 : (binrel% GE.ge x3x5fminus let16) =>
fun lean_a125 : (binrel% GE.ge x0x5fplus let16) =>
fun lean_a126 : (binrel% GE.ge x0x5fminus let16) =>
fun lean_a127 : (binrel% GE.ge x4x5fplus let16) =>
fun lean_a128 : (binrel% GE.ge x4x5fminus let16) =>
fun lean_a129 : (binrel% GE.ge x1x5fplus let16) =>
fun lean_a130 : (binrel% GE.ge x1x5fminus let16) =>
fun lean_a131 : (binrel% GE.ge x6x5fplus let16) =>
fun lean_a132 : (binrel% GE.ge x6x5fminus let16) =>
fun lean_a133 : (binrel% GE.ge x2x5fplus let16) =>
fun lean_a134 : (binrel% GE.ge x2x5fminus let16) =>
fun lean_a135 : let249 =>
fun lean_a136 : let169 =>
fun lean_a137 : let206 =>
fun lean_a138 : let250 =>
fun lean_a139 : let192 =>
fun lean_a140 : let215 =>
fun lean_a141 : let251 =>
fun lean_a142 : let204 =>
fun lean_a143 : let199 =>
fun lean_a144 : let225 =>
fun lean_a145 : let252 =>
fun lean_a146 : let253 =>
fun lean_a147 : let254 =>
fun lean_a148 : let255 =>
fun lean_a149 : let256 =>
fun lean_a150 : let239 => by
have lean_s0 : (Or let234 (Or let151 (Or let176 (Or let261 (Or let155 (Or let187 (Or let260 (Or let258 (Or let146 (Or let262 (Or let173 (Or let194 (Or let259 (Or let228 (Or let159 let265))))))))))))))) :=
  (scope (fun lean_a151 : let211 =>
    (scope (fun lean_a152 : let150 =>
      (scope (fun lean_a153 : let52 =>
        (scope (fun lean_a154 : let257 =>
          (scope (fun lean_a155 : let154 =>
            (scope (fun lean_a156 : let184 =>
              (scope (fun lean_a157 : let254 =>
                (scope (fun lean_a158 : let256 =>
                  (scope (fun lean_a159 : let85 =>
                    (scope (fun lean_a160 : let249 =>
                      (scope (fun lean_a161 : let35 =>
                        (scope (fun lean_a162 : let28 =>
                          (scope (fun lean_a163 : let255 =>
                            (scope (fun lean_a164 : let14 =>
                              (scope (fun lean_a165 : let158 =>
                                (scope (fun lean_a166 : let239 =>
                                  have lean_s0 : let265 :=
                                    (scope (fun lean_a162 : let239 =>
                                      have lean_s0 : let136 := by timed trueElim lean_r24
                                      have lean_s1 : let300 := by timed And.intro lean_s0 lean_a162
                                      have lean_s2 : (Implies let300 let299) := by arithMulNeg [let63, let16, let64], 3
                                      have lean_s3 : let299 := by timed modusPonens lean_s1 lean_s2
                                      have lean_s4 : let237 := by timed trueElim lean_r94
                                      have lean_s5 : let158 := by timed eqResolve lean_a143 lean_r58
                                      have lean_s6 : (Eq let158 let221) := by timed Eq.symm lean_r79
                                      have lean_s7 : let221 := by timed eqResolve lean_s5 lean_s6
                                      have lean_s8 : let199 := by intTightUb lean_s7
                                      have lean_s9 : let298 := by timed And.intro lean_s4 lean_s8
                                      have lean_s10 : (Implies let298 let297) := by arithMulPos [let71, let16, let66], 1
                                      have lean_s11 : let297 := by timed modusPonens lean_s9 lean_s10
                                      have lean_s12 : let182 := by timed trueElim lean_r46
                                      have lean_s13 : let14 := by timed eqResolve lean_a140 lean_r73
                                      have lean_s14 : (Eq let14 let15) := by timed Eq.symm lean_r0
                                      have lean_s15 : let15 := by timed eqResolve lean_s13 lean_s14
                                      have lean_s16 : let215 := by intTightUb lean_s15
                                      have lean_s17 : let296 := by timed And.intro lean_s12 lean_s16
                                      have lean_s18 : (Implies let296 let295) := by arithMulPos [let12, let16, let73], 1
                                      have lean_s19 : let295 := by timed modusPonens lean_s17 lean_s18
                                      have lean_s20 : let20 := by timed trueElim lean_r1
                                      have lean_s21 : let294 := by timed And.intro lean_s20 lean_a163
                                      have lean_s22 : (Implies let294 let293) := by arithMulNeg [let81, let1, let19], 3
                                      have lean_s23 : let293 := by timed modusPonens lean_s21 lean_s22
                                      have lean_s24 : let179 := by timed trueElim lean_r43
                                      let lean_s25 := by timed flipCongrArg lean_r38 [LE.le]
                                      have lean_s26 : (Eq let16 let16) := by timed rfl
                                      have lean_s27 : (Eq let252 let217) := by timed congr lean_s25 lean_s26
                                      have lean_s28 : (Eq let252 let28) := by timed Eq.trans lean_s27 lean_r75
                                      have lean_s29 : let28 := by timed eqResolve lean_a145 lean_s28
                                      have lean_s30 : (Eq let28 let29) := by timed Eq.symm lean_r2
                                      have lean_s31 : let29 := by timed eqResolve lean_s29 lean_s30
                                      have lean_s32 : let217 := by intTightUb lean_s31
                                      have lean_s33 : let292 := by timed And.intro lean_s24 lean_s32
                                      have lean_s34 : (Implies let292 let291) := by arithMulPos [let26, let16, let87], 1
                                      have lean_s35 : let291 := by timed modusPonens lean_s33 lean_s34
                                      have lean_s36 : let157 := by timed trueElim lean_r34
                                      have lean_s37 : let35 := by timed eqResolve lean_a139 lean_r53
                                      have lean_s38 : (Eq let35 let36) := by timed Eq.symm lean_r3
                                      have lean_s39 : let36 := by timed eqResolve lean_s37 lean_s38
                                      have lean_s40 : let192 := by intTightUb lean_s39
                                      have lean_s41 : let290 := by timed And.intro lean_s36 lean_s40
                                      have lean_s42 : (Implies let290 let289) := by arithMulPos [let33, let16, let93], 1
                                      have lean_s43 : let289 := by timed modusPonens lean_s41 lean_s42
                                      have lean_s44 : let58 := by timed trueElim lean_r9
                                      have lean_s45 : let288 := by timed And.intro lean_s44 lean_a160
                                      have lean_s46 : (Implies let288 let287) := by arithMulNeg [let106, let7, let57], 3
                                      have lean_s47 : let287 := by timed modusPonens lean_s45 lean_s46
                                      have lean_s48 : let77 := by timed trueElim lean_r13
                                      have lean_s49 : let85 := by timed eqResolve lean_a142 lean_r63
                                      have lean_s50 : (Eq let85 let86) := by timed Eq.symm lean_r15
                                      have lean_s51 : let86 := by timed eqResolve lean_s49 lean_s50
                                      have lean_s52 : let204 := by intTightUb lean_s51
                                      have lean_s53 : let286 := by timed And.intro lean_s48 lean_s52
                                      have lean_s54 : (Implies let286 let285) := by arithMulPos [let83, let1, let39], 1
                                      have lean_s55 : let285 := by timed modusPonens lean_s53 lean_s54
                                      have lean_s56 : let243 := by timed trueElim lean_r99
                                      have lean_s57 : let284 := by timed And.intro lean_s56 lean_a158
                                      have lean_s58 : (Implies let284 let283) := by arithMulNeg [let116, let16, let113], 3
                                      have lean_s59 : let283 := by timed modusPonens lean_s57 lean_s58
                                      have lean_s60 : let41 := by timed trueElim lean_r4
                                      have lean_s61 : let282 := by timed And.intro lean_s60 lean_a157
                                      have lean_s62 : (Implies let282 let281) := by arithMulNeg [let121, let1, let40], 3
                                      have lean_s63 : let281 := by timed modusPonens lean_s61 lean_s62
                                      have lean_s64 : let43 := by timed trueElim lean_r5
                                      let lean_s65 := by timed flipCongrArg lean_r51 [LE.le]
                                      have lean_s66 : (Eq let250 let185) := by timed congr lean_s65 lean_s26
                                      have lean_s67 : (Eq let250 let184) := by timed Eq.trans lean_s66 lean_r47
                                      have lean_s68 : let184 := by timed eqResolve lean_a138 lean_s67
                                      have lean_s69 : (Eq let184 let203) := by timed Eq.symm lean_r62
                                      have lean_s70 : let203 := by timed eqResolve lean_s68 lean_s69
                                      have lean_s71 : let185 := by intTightUb lean_s70
                                      have lean_s72 : let280 := by timed And.intro lean_s64 lean_s71
                                      have lean_s73 : (Implies let280 let279) := by arithMulPos [let166, let16, let42], 1
                                      have lean_s74 : let279 := by timed modusPonens lean_s72 lean_s73
                                      have lean_s75 : let144 := by timed trueElim lean_r29
                                      have lean_s76 : let154 := by timed eqResolve lean_a136 lean_r37
                                      have lean_s77 : (Eq let154 let200) := by timed Eq.symm lean_r59
                                      have lean_s78 : let200 := by timed eqResolve lean_s76 lean_s77
                                      have lean_s79 : let169 := by intTightUb lean_s78
                                      have lean_s80 : let278 := by timed And.intro lean_s75 lean_s79
                                      have lean_s81 : (Implies let278 let277) := by arithMulPos [let126, let2, let123], 1
                                      have lean_s82 : let277 := by timed modusPonens lean_s80 lean_s81
                                      have lean_s83 : let222 := by timed trueElim lean_r80
                                      let lean_s84 := by timed flipCongrArg lean_r27 [GE.ge]
                                      have lean_s85 : (Eq let253 let257) := by timed congr lean_s84 lean_s26
                                      have lean_s86 : let257 := by timed eqResolve lean_a146 lean_s85
                                      have lean_s87 : let276 := by timed And.intro lean_s83 lean_s86
                                      have lean_s88 : (Implies let276 let275) := by arithMulNeg [let140, let16, let129], 3
                                      have lean_s89 : let275 := by timed modusPonens lean_s87 lean_s88
                                      have lean_s90 : let46 := by timed trueElim lean_r6
                                      have lean_s91 : let52 := by timed eqResolve lean_a137 lean_r65
                                      have lean_s92 : (Eq let52 let53) := by timed Eq.symm lean_r7
                                      have lean_s93 : let53 := by timed eqResolve lean_s91 lean_s92
                                      have lean_s94 : let206 := by intTightUb lean_s93
                                      have lean_s95 : let274 := by timed And.intro lean_s90 lean_s94
                                      have lean_s96 : (Implies let274 let273) := by arithMulPos [let50, let2, let45], 1
                                      have lean_s97 : let273 := by timed modusPonens lean_s95 lean_s96
                                      let lean_s98 := by timed flipCongrArg lean_r41 [LE.le]
                                      have lean_s99 : (Eq let2 let2) := by timed rfl
                                      have lean_s100 : (Eq let251 let198) := by timed congr lean_s98 lean_s99
                                      have lean_s101 : (Eq let251 let150) := by timed Eq.trans lean_s100 lean_r57
                                      have lean_s102 : let150 := by timed eqResolve lean_a141 lean_s101
                                      have lean_s103 : (Eq let150 let231) := by timed Eq.symm lean_r89
                                      have lean_s104 : let231 := by timed eqResolve lean_s102 lean_s103
                                      have lean_s105 : let198 := by intTightUb lean_s104
                                      have lean_s106 : let272 := by timed And.intro lean_s24 lean_s105
                                      have lean_s107 : (Implies let272 let271) := by arithMulPos [let148, let2, let87], 1
                                      have lean_s108 : let271 := by timed modusPonens lean_s106 lean_s107
                                      have lean_s109 : let55 := by timed trueElim lean_r8
                                      have lean_s110 : let211 := by timed eqResolve lean_a144 lean_r83
                                      have lean_s111 : (Eq let211 let212) := by timed Eq.symm lean_r70
                                      have lean_s112 : let212 := by timed eqResolve lean_s110 lean_s111
                                      have lean_s113 : let225 := by intTightUb lean_s112
                                      have lean_s114 : let270 := by timed And.intro lean_s109 lean_s113
                                      have lean_s115 : (Implies let270 let269) := by arithMulPos [let134, let16, let54], 1
                                      have lean_s116 : let269 := by timed modusPonens lean_s114 lean_s115
                                      have lean_s117 : let268 := by sumBounds [lean_s3, lean_s11, lean_s19, lean_s23, lean_s35, lean_s43, lean_s47, lean_s55, lean_s59, lean_s63, lean_s74, lean_s82, lean_s89, lean_s97, lean_s108, lean_s116]
                                      let lean_s118 := by timed congrHAdd lean_r77 lean_r23
                                      let lean_s119 := by timed congrHAdd lean_r48 lean_s118
                                      let lean_s120 := by timed congrHAdd lean_r82 lean_s119
                                      let lean_s121 := by timed congrHAdd lean_r22 lean_s120
                                      let lean_s122 := by timed congrHAdd lean_r74 lean_s121
                                      let lean_s123 := by timed congrHAdd lean_r21 lean_s122
                                      let lean_s124 := by timed congrHAdd lean_r20 lean_s123
                                      let lean_s125 := by timed congrHAdd lean_r19 lean_s124
                                      let lean_s126 := by timed congrHAdd lean_r18 lean_s125
                                      let lean_s127 := by timed congrHAdd lean_r17 lean_s126
                                      let lean_s128 := by timed congrHAdd lean_r16 lean_s127
                                      let lean_s129 := by timed congrHAdd lean_r14 lean_s128
                                      let lean_s130 := by timed congrHAdd lean_r12 lean_s129
                                      let lean_s131 := by timed congrHAdd lean_r11 lean_s130
                                      have lean_s132 : (Eq let267 let168) := by timed congrHAdd lean_r10 lean_s131
                                      have lean_s133 : (Eq let267 let137) := by timed Eq.trans lean_s132 lean_r36
                                      let lean_s134 := by timed flipCongrArg lean_s133 [LE.le]
                                      let lean_s135 := by timed congrHAdd lean_r87 lean_r102
                                      let lean_s136 := by timed congrHAdd lean_r91 lean_s135
                                      let lean_s137 := by timed congrHAdd lean_r44 lean_s136
                                      let lean_s138 := by timed congrHAdd lean_r103 lean_s137
                                      let lean_s139 := by timed congrHAdd lean_r64 lean_s138
                                      let lean_s140 := by timed congrHAdd lean_r98 lean_s139
                                      let lean_s141 := by timed congrHAdd lean_r54 lean_s140
                                      let lean_s142 := by timed congrHAdd lean_r72 lean_s141
                                      let lean_s143 := by timed congrHAdd lean_r76 lean_s142
                                      let lean_s144 := by timed congrHAdd lean_r104 lean_s143
                                      let lean_s145 := by timed congrHAdd lean_r81 lean_s144
                                      let lean_s146 := by timed congrHAdd lean_r95 lean_s145
                                      let lean_s147 := by timed congrHAdd lean_r52 lean_s146
                                      let lean_s148 := by timed congrHAdd lean_r26 lean_s147
                                      have lean_s149 : (Eq let266 let244) := by timed congrHAdd lean_r25 lean_s148
                                      have lean_s150 : (Eq let266 let19) := by timed Eq.trans lean_s149 lean_r100
                                      have lean_s151 : (Eq let268 let145) := by timed congr lean_s134 lean_s150
                                      have lean_s152 : (Eq let268 False) := by timed Eq.trans lean_s151 lean_r30
                                      show False from by timed eqResolve lean_s117 lean_s152
                                    ))
                                  have lean_s1 : let240 := by liftOrNToNeg lean_s0
                                  have lean_s2 : (Eq let240 let241) := by timed Eq.symm lean_r96
                                  have lean_s3 : let241 := by timed eqResolve lean_s1 lean_s2
                                  have lean_s4 : let240 := by timed eqResolve lean_s3 lean_r96
                                  show False from by timed contradiction lean_a166 lean_s4
  ))))))))))))))))))))))))))))))))
have lean_s1 : (Not (And let211 (And let150 (And let52 (And let257 (And let154 (And let184 (And let254 (And let256 (And let85 (And let249 (And let35 (And let28 (And let255 (And let14 (And let158 let239)))))))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let264 := by timed flipNotAnd lean_s1 [let211, let150, let52, let257, let154, let184, let254, let256, let85, let249, let35, let28, let255, let14, let158, let239]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let172 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let236 let172) := by timed congr lean_s5 lean_r92
have lean_s7 : (Eq let236 True) := by timed Eq.trans lean_s6 lean_r39
have lean_s8 : (Eq let235 True) := by timed Eq.trans lean_r93 lean_s7
have lean_s9 : let235 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let202 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let210 let202) := by timed congr lean_s12 lean_r32
have lean_s14 : (Eq let210 True) := by timed Eq.trans lean_s13 lean_r61
have lean_s15 : (Eq let152 True) := by timed Eq.trans lean_r69 lean_s14
have lean_s16 : let152 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : let227 := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq let177 let227) := by timed congr lean_s19 lean_r88
have lean_s21 : (Eq let177 True) := by timed Eq.trans lean_s20 lean_r85
have lean_s22 : (Eq let178 True) := by timed Eq.trans lean_r42 lean_s21
have lean_s23 : let178 := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : (Eq let261 let261) := by timed rfl
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : let208 := by timed rfl
let lean_s28 := by timed flipCongrArg lean_s27 [Eq]
have lean_s29 : (Eq let197 let208) := by timed congr lean_s28 lean_r33
have lean_s30 : (Eq let197 True) := by timed Eq.trans lean_s29 lean_r67
have lean_s31 : (Eq let156 True) := by timed Eq.trans lean_r56 lean_s30
have lean_s32 : let156 := by timed trueElim lean_s31
let lean_s33 := by timed congr lean_s3 lean_s32
have lean_s34 : let220 := by timed rfl
let lean_s35 := by timed flipCongrArg lean_s34 [Eq]
have lean_s36 : (Eq let226 let220) := by timed congr lean_s35 lean_r49
have lean_s37 : (Eq let226 True) := by timed Eq.trans lean_s36 lean_r78
have lean_s38 : (Eq let188 True) := by timed Eq.trans lean_r84 lean_s37
have lean_s39 : let188 := by timed trueElim lean_s38
let lean_s40 := by timed congr lean_s3 lean_s39
have lean_s41 : (Eq let260 let260) := by timed rfl
let lean_s42 := by timed congr lean_s3 lean_s41
have lean_s43 : (Eq let258 let258) := by timed rfl
let lean_s44 := by timed congr lean_s3 lean_s43
have lean_s45 : let201 := by timed rfl
let lean_s46 := by timed flipCongrArg lean_s45 [Eq]
have lean_s47 : (Eq let209 let201) := by timed congr lean_s46 lean_r31
have lean_s48 : (Eq let209 True) := by timed Eq.trans lean_s47 lean_r60
have lean_s49 : (Eq let147 True) := by timed Eq.trans lean_r68 lean_s48
have lean_s50 : let147 := by timed trueElim lean_s49
let lean_s51 := by timed congr lean_s3 lean_s50
have lean_s52 : (Eq let262 let262) := by timed rfl
let lean_s53 := by timed congr lean_s3 lean_s52
have lean_s54 : let181 := by timed rfl
let lean_s55 := by timed flipCongrArg lean_s54 [Eq]
have lean_s56 : (Eq let189 let181) := by timed congr lean_s55 lean_r40
have lean_s57 : (Eq let189 True) := by timed Eq.trans lean_s56 lean_r45
have lean_s58 : (Eq let174 True) := by timed Eq.trans lean_r50 lean_s57
have lean_s59 : let174 := by timed trueElim lean_s58
let lean_s60 := by timed congr lean_s3 lean_s59
have lean_s61 : let207 := by timed rfl
let lean_s62 := by timed flipCongrArg lean_s61 [Eq]
have lean_s63 : (Eq let195 let207) := by timed congr lean_s62 lean_r97
have lean_s64 : (Eq let195 True) := by timed Eq.trans lean_s63 lean_r66
have lean_s65 : (Eq let196 True) := by timed Eq.trans lean_r55 lean_s64
have lean_s66 : let196 := by timed trueElim lean_s65
let lean_s67 := by timed congr lean_s3 lean_s66
have lean_s68 : (Eq let259 let259) := by timed rfl
let lean_s69 := by timed congr lean_s3 lean_s68
have lean_s70 : let245 := by timed rfl
let lean_s71 := by timed flipCongrArg lean_s70 [Eq]
have lean_s72 : (Eq let232 let245) := by timed congr lean_s71 lean_r86
have lean_s73 : (Eq let232 True) := by timed Eq.trans lean_s72 lean_r101
have lean_s74 : (Eq let229 True) := by timed Eq.trans lean_r90 lean_s73
have lean_s75 : let229 := by timed trueElim lean_s74
let lean_s76 := by timed congr lean_s3 lean_s75
have lean_s77 : let143 := by timed rfl
let lean_s78 := by timed flipCongrArg lean_s77 [Eq]
have lean_s79 : (Eq let213 let143) := by timed congr lean_s78 lean_r35
have lean_s80 : (Eq let213 True) := by timed Eq.trans lean_s79 lean_r28
have lean_s81 : (Eq let160 True) := by timed Eq.trans lean_r71 lean_s80
have lean_s82 : let160 := by timed trueElim lean_s81
let lean_s83 := by timed congr lean_s3 lean_s82
have lean_s84 : (Eq let240 let240) := by timed rfl
let lean_s85 := by timed congr lean_s83 lean_s84
let lean_s86 := by timed congr lean_s76 lean_s85
let lean_s87 := by timed congr lean_s69 lean_s86
let lean_s88 := by timed congr lean_s67 lean_s87
let lean_s89 := by timed congr lean_s60 lean_s88
let lean_s90 := by timed congr lean_s53 lean_s89
let lean_s91 := by timed congr lean_s51 lean_s90
let lean_s92 := by timed congr lean_s44 lean_s91
let lean_s93 := by timed congr lean_s42 lean_s92
let lean_s94 := by timed congr lean_s40 lean_s93
let lean_s95 := by timed congr lean_s33 lean_s94
let lean_s96 := by timed congr lean_s26 lean_s95
let lean_s97 := by timed congr lean_s24 lean_s96
let lean_s98 := by timed congr lean_s17 lean_s97
have lean_s99 : (Eq let264 let263) := by timed congr lean_s10 lean_s98
have lean_s100 : let263 := by timed eqResolve lean_s2 lean_s99
have lean_s101 : (Or let153 (Or let51 (Or let183 (Or let34 (Or let13 (Or let149 (Or let84 (Or let142 (Or let171 (Or let27 (Or let262 (Or let261 (Or let260 (Or let259 (Or let258 let240))))))))))))))) := by permutateOr lean_s100, [4, 2, 5, 10, 13, 1, 8, 14, 0, 11, 9, 3, 6, 12, 7, 15], (- 1)
let lean_s102 := by R2 lean_s101, lean_a150, let239, [(- 1), 0]
let lean_s103 := by R2 lean_s102, lean_a149, let256, [(- 1), 0]
let lean_s104 := by R2 lean_s103, lean_a148, let255, [(- 1), 0]
let lean_s105 := by R2 lean_s104, lean_a147, let254, [(- 1), 0]
let lean_s106 := by timed flipCongrArg lean_r27 [GE.ge]
have lean_s107 : (Eq let16 let16) := by timed rfl
have lean_s108 : (Eq let253 let257) := by timed congr lean_s106 lean_s107
have lean_s109 : let257 := by timed eqResolve lean_a146 lean_s108
let lean_s110 := by R2 lean_s105, lean_s109, let257, [(- 1), 0]
let lean_s111 := by timed flipCongrArg lean_r38 [LE.le]
have lean_s112 : (Eq let252 let217) := by timed congr lean_s111 lean_s107
have lean_s113 : (Eq let252 let28) := by timed Eq.trans lean_s112 lean_r75
have lean_s114 : let28 := by timed eqResolve lean_a145 lean_s113
let lean_s115 := by R1 lean_s110, lean_s114, let27, [(- 1), 0]
have lean_s116 : let211 := by timed eqResolve lean_a144 lean_r83
let lean_s117 := by R1 lean_s115, lean_s116, let171, [(- 1), 0]
have lean_s118 : let158 := by timed eqResolve lean_a143 lean_r58
let lean_s119 := by R1 lean_s117, lean_s118, let142, [(- 1), 0]
have lean_s120 : let85 := by timed eqResolve lean_a142 lean_r63
let lean_s121 := by R1 lean_s119, lean_s120, let84, [(- 1), 0]
let lean_s122 := by timed flipCongrArg lean_r41 [LE.le]
have lean_s123 : (Eq let2 let2) := by timed rfl
have lean_s124 : (Eq let251 let198) := by timed congr lean_s122 lean_s123
have lean_s125 : (Eq let251 let150) := by timed Eq.trans lean_s124 lean_r57
have lean_s126 : let150 := by timed eqResolve lean_a141 lean_s125
let lean_s127 := by R1 lean_s121, lean_s126, let149, [(- 1), 0]
have lean_s128 : let14 := by timed eqResolve lean_a140 lean_r73
let lean_s129 := by R1 lean_s127, lean_s128, let13, [(- 1), 0]
have lean_s130 : let35 := by timed eqResolve lean_a139 lean_r53
let lean_s131 := by R1 lean_s129, lean_s130, let34, [(- 1), 0]
let lean_s132 := by timed flipCongrArg lean_r51 [LE.le]
have lean_s133 : (Eq let250 let185) := by timed congr lean_s132 lean_s107
have lean_s134 : (Eq let250 let184) := by timed Eq.trans lean_s133 lean_r47
have lean_s135 : let184 := by timed eqResolve lean_a138 lean_s134
let lean_s136 := by R1 lean_s131, lean_s135, let183, [(- 1), 0]
have lean_s137 : let52 := by timed eqResolve lean_a137 lean_r65
let lean_s138 := by R1 lean_s136, lean_s137, let51, [(- 1), 0]
have lean_s139 : let154 := by timed eqResolve lean_a136 lean_r37
let lean_s140 := by R1 lean_s138, lean_s139, let153, [(- 1), 0]
exact (show False from by R2 lean_s140, lean_a135, let249, [0, 0])


