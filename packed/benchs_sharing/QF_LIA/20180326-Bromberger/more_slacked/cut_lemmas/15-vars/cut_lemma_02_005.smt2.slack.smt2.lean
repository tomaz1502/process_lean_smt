open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x2x5fplus : Int}
variable {x2x5fminus : Int}
variable {x14x5fplus : Int}
variable {x14x5fminus : Int}
variable {x12x5fplus : Int}
variable {x12x5fminus : Int}
variable {x7x5fplus : Int}
variable {x7x5fminus : Int}
variable {x1x5fplus : Int}
variable {x1x5fminus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x3x5fplus : Int}
variable {x8x5fminus : Int}
variable {x4x5fminus : Int}
variable {x5x5fminus : Int}
variable {x1x5fminus : Int}
variable {x10x5fplus : Int}
variable {x11x5fminus : Int}
variable {x10x5fminus : Int}
variable {x8x5fplus : Int}
variable {x1x5fplus : Int}
variable {x10x5fplus : Int}
variable {x8x5fminus : Int}
variable {x5x5fplus : Int}
variable {x0x5fplus : Int}
variable {x8x5fplus : Int}
variable {x5x5fminus : Int}
variable {x3x5fplus : Int}
variable {x4x5fminus : Int}
variable {x0x5fminus : Int}
variable {x13x5fplus : Int}
variable {x3x5fminus : Int}
variable {x4x5fplus : Int}
variable {x10x5fminus : Int}
variable {x6x5fminus : Int}
variable {x6x5fplus : Int}
variable {x4x5fplus : Int}
variable {x7x5fminus : Int}
variable {x7x5fplus : Int}
variable {x11x5fplus : Int}
variable {x11x5fminus : Int}
variable {x11x5fplus : Int}
variable {x3x5fminus : Int}
variable {x5x5fplus : Int}
variable {x12x5fminus : Int}
variable {x12x5fplus : Int}
variable {x13x5fminus : Int}
variable {x13x5fminus : Int}
variable {x13x5fplus : Int}
variable {x6x5fminus : Int}
variable {x14x5fminus : Int}
variable {x14x5fplus : Int}
variable {x6x5fplus : Int}
variable {x2x5fminus : Int}
variable {x2x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 2)
  let let6 := (Int.ofNat 3)
  let let7 := (binrel% HDiv.hDiv let6 let5)
  let let8 := (binrel% GT.gt let7 let1)
  let let9 := (Neg.neg let5)
  let let10 := (Int.ofNat 1)
  let let11 := (Neg.neg let10)
  let let12 := (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x0x5fplus) x0x5fminus)
  let let13 := (binrel% HMul.hMul let11 x7x5fplus)
  let let14 := (binrel% HMul.hMul let11 x1x5fplus)
  let let15 := (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fminus let12))))
  let let16 := (binrel% HMul.hMul let9 x12x5fminus)
  let let17 := (binrel% HMul.hMul let5 x12x5fplus)
  let let18 := (binrel% HMul.hMul let9 x14x5fminus)
  let let19 := (binrel% HMul.hMul let5 x14x5fplus)
  let let20 := (binrel% HMul.hMul let9 x4x5fminus)
  let let21 := (binrel% HMul.hMul let5 x4x5fplus)
  let let22 := (binrel% HMul.hMul let11 x6x5fplus)
  let let23 := (binrel% HMul.hMul let11 x8x5fplus)
  let let24 := (binrel% HMul.hMul let9 x10x5fminus)
  let let25 := (binrel% HMul.hMul let5 x10x5fplus)
  let let26 := (binrel% HMul.hMul let9 x11x5fminus)
  let let27 := (binrel% HMul.hMul let5 x11x5fplus)
  let let28 := (binrel% HMul.hMul let11 x13x5fminus)
  let let29 := (binrel% HMul.hMul let11 x3x5fminus)
  let let30 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 let15))))))))))))))))))
  let let31 := (binrel% GE.ge let30 let9)
  let let32 := (Not let31)
  let let33 := (binrel% LT.lt let30 let9)
  let let34 := (binrel% HMul.hMul let11 x11x5fminus)
  let let35 := (binrel% HAdd.hAdd x11x5fplus let34)
  let let36 := (binrel% GE.ge let35 let10)
  let let37 := (Not let36)
  let let38 := (binrel% LT.lt let35 let10)
  let let39 := (binrel% GT.gt let2 let1)
  let let40 := (binrel% HMul.hMul let11 x8x5fminus)
  let let41 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x14x5fplus) (binrel% HMul.hMul let5 x14x5fminus))))))
  let let42 := (binrel% GE.ge let41 let5)
  let let43 := (Not let42)
  let let44 := (binrel% LT.lt let41 let5)
  let let45 := (binrel% HAdd.hAdd x8x5fplus let40)
  let let46 := (Rat.ofInt let45)
  let let47 := (binrel% HMul.hMul let2 let45)
  let let48 := (binrel% HMul.hMul let11 x13x5fplus)
  let let49 := (Rat.ofInt (binrel% HAdd.hAdd let48 x13x5fminus))
  let let50 := (binrel% HAdd.hAdd x13x5fplus let28)
  let let51 := (binrel% HMul.hMul let3 let50)
  let let52 := (Not let37)
  let let53 := (Eq let52 let36)
  let let54 := (Eq let36 let36)
  let let55 := (binrel% HDiv.hDiv let10 let5)
  let let56 := (Neg.neg let55)
  let let57 := (binrel% LT.lt let56 let1)
  let let58 := (binrel% HMul.hMul let11 x5x5fplus)
  let let59 := (binrel% HMul.hMul let11 x10x5fminus)
  let let60 := (binrel% HMul.hMul let9 x3x5fminus)
  let let61 := (binrel% HMul.hMul let5 x3x5fplus)
  let let62 := (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let58 x5x5fminus)))))))
  let let63 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let61 let60)))))))
  let let64 := (Rat.ofInt 0)
  let let65 := (binrel% HMul.hMul let2 let1)
  let let66 := (Eq let42 let42)
  let let67 := (binrel% HMul.hMul let11 x12x5fminus)
  let let68 := (binrel% HMul.hMul let11 x14x5fminus)
  let let69 := (binrel% HMul.hMul let11 x2x5fminus)
  let let70 := (binrel% HMul.hMul let11 x10x5fplus)
  let let71 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x12x5fplus let67)))))))))))))
  let let72 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x2x5fplus let69)))))))))))))
  let let73 := (Not let32)
  let let74 := (Eq let31 let73)
  let let75 := (Eq let73 let31)
  let let76 := (Rat.ofInt let35)
  let let77 := (binrel% HMul.hMul let2 let35)
  let let78 := (Int.ofNat 4)
  let let79 := (binrel% GE.ge let45 let78)
  let let80 := (Not let79)
  let let81 := (Not let80)
  let let82 := (Eq let79 let81)
  let let83 := (Eq let81 let79)
  let let84 := (Rat.ofInt 5)
  let let85 := (Int.ofNat 5)
  let let86 := (binrel% HMul.hMul let2 let85)
  let let87 := (binrel% HMul.hMul let11 x4x5fminus)
  let let88 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let87 let15))))))
  let let89 := (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x1x5fminus let12))
  let let90 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let87 let89))))))))
  let let91 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 9) let5))
  let let92 := (Neg.neg let6)
  let let93 := (binrel% HMul.hMul let7 let92)
  let let94 := (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 let89))))))))))))))))))))
  let let95 := (binrel% HSub.hSub x13x5fplus x13x5fminus)
  let let96 := (binrel% HMul.hMul let55 x12x5fminus)
  let let97 := (binrel% HMul.hMul let56 x12x5fplus)
  let let98 := (binrel% HMul.hMul let55 x14x5fminus)
  let let99 := (binrel% HMul.hMul let56 x14x5fplus)
  let let100 := (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x2x5fminus) (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let97 let96)))))))))))))
  let let101 := (binrel% HMul.hMul let56 let71)
  let let102 := (Eq let79 let79)
  let let103 := (Neg.neg let7)
  let let104 := (Int.ofNat 11)
  let let105 := (Neg.neg (binrel% HDiv.hDiv let104 let5))
  let let106 := (Rat.ofInt 2)
  let let107 := (Rat.ofInt 3)
  let let108 := (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let64 let2))))))))))))
  let let109 := (binrel% HMul.hMul let11 x3x5fplus)
  let let110 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let19 let18)))))
  let let111 := (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let109 x3x5fminus)))))
  let let112 := (binrel% LE.le let30 let92)
  let let113 := (binrel% HMul.hMul let2 let10)
  let let114 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let17 let16)))))))))
  let let115 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x3x5fplus let29)))))))))
  let let116 := (binrel% HMul.hMul let3 let9)
  let let117 := (Eq let36 let52)
  let let118 := (binrel% HSub.hSub x11x5fplus x11x5fminus)
  let let119 := (binrel% LE.le let45 let6)
  let let120 := (Eq let31 let31)
  let let121 := (Int.ofNat 6)
  let let122 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let11 x0x5fminus))
  let let123 := (binrel% GE.ge let122 let121)
  let let124 := (Not let123)
  let let125 := (binrel% LE.le let122 let85)
  let let126 := (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x7x5fplus) (binrel% HMul.hMul let5 x7x5fminus))
  let let127 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let67 let126))))))
  let let128 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let34 let126))))))
  let let129 := (binrel% LT.lt let122 let121)
  let let130 := (binrel% GE.ge let110 let11)
  let let131 := (binrel% LT.lt let45 let78)
  let let132 := (binrel% HMul.hMul let55 x11x5fminus)
  let let133 := (binrel% HMul.hMul let56 x11x5fplus)
  let let134 := (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd x7x5fplus (binrel% HMul.hMul let11 x7x5fminus))))))))
  let let135 := (binrel% HMul.hMul let56 let127)
  let let136 := (binrel% HSub.hSub x0x5fplus x0x5fminus)
  let let137 := (Not let124)
  let let138 := (Eq let123 let137)
  let let139 := (Eq let137 let123)
  let let140 := (binrel% HMul.hMul let56 let104)
  let let141 := (binrel% HSub.hSub x8x5fplus x8x5fminus)
  let let142 := (Not let43)
  let let143 := (Eq let142 let42)
  let let144 := (Rat.ofInt let122)
  let let145 := (binrel% HMul.hMul let2 let122)
  let let146 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x0x5fplus) (binrel% HMul.hMul let7 x0x5fminus))))))))))))))))))))))))
  let let147 := (binrel% HMul.hMul let7 let30)
  let let148 := (Eq let42 let142)
  let let149 := (binrel% LE.le let64 let56)
  let let150 := (binrel% HMul.hMul let55 x8x5fminus)
  let let151 := (binrel% HMul.hMul let56 x8x5fplus)
  let let152 := (binrel% HMul.hMul let55 x10x5fminus)
  let let153 := (binrel% HMul.hMul let56 x10x5fplus)
  let let154 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x5x5fplus) (binrel% HMul.hMul let56 x5x5fminus))))))))
  let let155 := (binrel% HMul.hMul let56 let62)
  let let156 := (binrel% HMul.hMul let56 let11)
  let let157 := (binrel% HMul.hMul let56 let5)
  let let158 := (Eq let123 let123)
  let let159 := (binrel% HMul.hMul let56 let10)
  let let160 := (binrel% HMul.hMul let56 let6)
  let let161 := (binrel% HMul.hMul let3 let1)
  let let162 := (binrel% LE.le let35 let1)
  let let163 := (binrel% HMul.hMul let3 let11)
  let let164 := (binrel% HMul.hMul let2 let6)
  let let165 := (Not let119)
  let let166 := (binrel% GT.gt let45 let6)
  let let167 := (Eq let166 let165)
  let let168 := (Rat.ofInt let41)
  let let169 := (binrel% HMul.hMul let55 x4x5fminus)
  let let170 := (binrel% HMul.hMul let56 x4x5fplus)
  let let171 := (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x6x5fminus) (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x0x5fplus) (binrel% HMul.hMul let56 x0x5fminus))))))))))))
  let let172 := (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x5x5fminus) (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x2x5fplus) (binrel% HMul.hMul let56 x2x5fminus))))))))))))))
  let let173 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x11x5fminus) (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x4x5fminus) (binrel% HAdd.hAdd x1x5fplus (binrel% HMul.hMul let11 x1x5fminus)))))))))
  let let174 := (Rat.ofInt (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x11x5fplus) (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x12x5fplus) (binrel% HMul.hMul let5 x12x5fminus)))))))))))
  let let175 := (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let76 let168))))))))))))
  let let176 := (binrel% HMul.hMul let2 let41)
  let let177 := (binrel% HMul.hMul let56 let88)
  let let178 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x6x5fminus) (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x5x5fminus) (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x2x5fplus) x2x5fminus)))))))))))))
  let let179 := (binrel% HMul.hMul let56 let178)
  let let180 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let14 x1x5fminus)))))))
  let let181 := (binrel% HMul.hMul let3 let180)
  let let182 := (binrel% HMul.hMul let3 let114)
  let let183 := (binrel% GE.ge let95 let9)
  let let184 := (binrel% LE.le let118 let1)
  let let185 := (binrel% LE.le let141 let6)
  let let186 := (binrel% LE.le let136 let85)
  let let187 := (binrel% GE.ge let178 let5)
  let let188 := (binrel% GE.ge let72 let6)
  let let189 := (binrel% GE.ge let115 let11)
  let let190 := (binrel% GE.ge let180 let1)
  let let191 := (binrel% GE.ge let128 let104)
  let let192 := (binrel% GE.ge let111 let11)
  let let193 := (binrel% LE.le let94 let92)
  let let194 := (binrel% GE.ge let90 let11)
  let let195 := (binrel% GE.ge let63 let10)
  let let196 := (binrel% GE.ge let50 let9)
  let let197 := (binrel% GE.ge let71 let6)
  let let198 := (binrel% GE.ge let114 let11)
  let let199 := (binrel% GE.ge let127 let104)
  let let200 := (binrel% GE.ge let88 let11)
  let let201 := (binrel% GE.ge let62 let10)
  let let202 := (Not let201)
  let let203 := (Not let200)
  let let204 := (Not let199)
  let let205 := (Not let190)
  let let206 := (Not let198)
  let let207 := (Not let197)
  let let208 := (Not let187)
  let let209 := (Not let196)
  let let210 := (Or let42 (Or let36 (Or let123 (Or let31 (Or let203 (Or let208 (Or let202 (Or let207 (Or let204 (Or let205 (Or let206 (Or let209 let79))))))))))))
  let let211 := (Or let142 (Or let52 (Or let137 (Or let73 (Or let203 (Or let208 (Or let202 (Or let207 (Or let204 (Or let205 (Or let206 (Or let209 let81))))))))))))
  let let212 := (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let163 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let65 let113))))))))))))
  let let213 := (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let179 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let77 let176))))))))))))
  let let214 := (binrel% LE.le let213 let212)
  let let215 := (binrel% LE.le let176 let113)
  let let216 := (binrel% LE.le let41 let10)
  let let217 := (And let39 let216)
  let let218 := (binrel% LE.le let77 let65)
  let let219 := (And let39 let162)
  let let220 := (binrel% LE.le let145 let86)
  let let221 := (And let39 let125)
  let let222 := (binrel% LE.le let147 let93)
  let let223 := (And let8 let112)
  let let224 := (binrel% LE.le let177 let156)
  let let225 := (And let57 let200)
  let let226 := (binrel% LE.le let179 let157)
  let let227 := (And let57 let187)
  let let228 := (binrel% LE.le let155 let159)
  let let229 := (And let57 let201)
  let let230 := (binrel% LE.le let101 let160)
  let let231 := (And let57 let197)
  let let232 := (binrel% LE.le let135 let140)
  let let233 := (And let57 let199)
  let let234 := (binrel% LE.le let181 let161)
  let let235 := (And let4 let190)
  let let236 := (binrel% LE.le let182 let163)
  let let237 := (And let4 let198)
  let let238 := (binrel% LE.le let51 let116)
  let let239 := (And let4 let196)
  let let240 := (binrel% LE.le let47 let164)
  let let241 := (And let39 let119)
(Eq let4 True) → (Eq let8 True) → (Eq let33 let32) → (Eq let38 let37) → (Eq let39 True) → (Eq let44 let43) → (Eq let47 let46) → (Eq let51 let49) → let53 → (Eq let54 True) → (Eq let57 True) → (Eq let63 let62) → (Eq let65 let64) → (Eq let66 True) → (Eq let72 let71) → (Eq let75 let74) → (Eq let77 let76) → (Eq let83 let82) → let83 → (Eq let86 let84) → (Eq let90 let88) → (Eq let93 let91) → (Eq let94 let30) → (Eq let95 let50) → (Eq let101 let100) → (Eq let102 True) → (Eq let108 let56) → (Eq let111 let110) → (Eq let112 let32) → (Eq let113 let2) → (Eq let115 let114) → (Eq let116 let106) → (Eq let53 let117) → (Eq let118 let35) → (Eq let119 let80) → (Eq let120 True) → (Eq let125 let124) → (Eq let128 let127) → (Eq let129 let124) → (Eq let130 let43) → (Eq let131 let80) → (Eq let135 let134) → (Eq let136 let122) → (Eq let139 let138) → (Eq let140 let105) → (Eq let141 let45) → let143 → (Eq let145 let144) → (Eq let147 let146) → (Eq let143 let148) → (Eq let149 False) → (Eq let155 let154) → (Eq let156 let55) → (Eq let157 let3) → (Eq let158 True) → (Eq let159 let56) → let139 → (Eq let160 let103) → (Eq let161 let64) → (Eq let162 let37) → (Eq let163 let2) → (Eq let164 let107) → let167 → (Eq let175 let64) → let75 → (Eq let176 let168) → (Eq let177 let171) → (Eq let179 let172) → (Eq let181 let173) → (Eq let182 let174) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x13x5fplus let1) → (binrel% GE.ge x13x5fminus let1) → (binrel% GE.ge x11x5fplus let1) → (binrel% GE.ge x11x5fminus let1) → (binrel% GE.ge x10x5fplus let1) → (binrel% GE.ge x10x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x14x5fplus let1) → (binrel% GE.ge x14x5fminus let1) → (binrel% GE.ge x12x5fplus let1) → (binrel% GE.ge x12x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge (binrel% HSub.hSub x3x5fplus x3x5fminus) let1) → let183 → let184 → let185 → let186 → let187 → let188 → let189 → let190 → let191 → let192 → let193 → let194 → let195 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 2)
  let let6 := (Int.ofNat 3)
  let let7 := (binrel% HDiv.hDiv let6 let5)
  let let8 := (binrel% GT.gt let7 let1)
  let let9 := (Neg.neg let5)
  let let10 := (Int.ofNat 1)
  let let11 := (Neg.neg let10)
  let let12 := (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x0x5fplus) x0x5fminus)
  let let13 := (binrel% HMul.hMul let11 x7x5fplus)
  let let14 := (binrel% HMul.hMul let11 x1x5fplus)
  let let15 := (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fminus let12))))
  let let16 := (binrel% HMul.hMul let9 x12x5fminus)
  let let17 := (binrel% HMul.hMul let5 x12x5fplus)
  let let18 := (binrel% HMul.hMul let9 x14x5fminus)
  let let19 := (binrel% HMul.hMul let5 x14x5fplus)
  let let20 := (binrel% HMul.hMul let9 x4x5fminus)
  let let21 := (binrel% HMul.hMul let5 x4x5fplus)
  let let22 := (binrel% HMul.hMul let11 x6x5fplus)
  let let23 := (binrel% HMul.hMul let11 x8x5fplus)
  let let24 := (binrel% HMul.hMul let9 x10x5fminus)
  let let25 := (binrel% HMul.hMul let5 x10x5fplus)
  let let26 := (binrel% HMul.hMul let9 x11x5fminus)
  let let27 := (binrel% HMul.hMul let5 x11x5fplus)
  let let28 := (binrel% HMul.hMul let11 x13x5fminus)
  let let29 := (binrel% HMul.hMul let11 x3x5fminus)
  let let30 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 let15))))))))))))))))))
  let let31 := (binrel% GE.ge let30 let9)
  let let32 := (Not let31)
  let let33 := (binrel% LT.lt let30 let9)
  let let34 := (binrel% HMul.hMul let11 x11x5fminus)
  let let35 := (binrel% HAdd.hAdd x11x5fplus let34)
  let let36 := (binrel% GE.ge let35 let10)
  let let37 := (Not let36)
  let let38 := (binrel% LT.lt let35 let10)
  let let39 := (binrel% GT.gt let2 let1)
  let let40 := (binrel% HMul.hMul let11 x8x5fminus)
  let let41 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x14x5fplus) (binrel% HMul.hMul let5 x14x5fminus))))))
  let let42 := (binrel% GE.ge let41 let5)
  let let43 := (Not let42)
  let let44 := (binrel% LT.lt let41 let5)
  let let45 := (binrel% HAdd.hAdd x8x5fplus let40)
  let let46 := (Rat.ofInt let45)
  let let47 := (binrel% HMul.hMul let2 let45)
  let let48 := (binrel% HMul.hMul let11 x13x5fplus)
  let let49 := (Rat.ofInt (binrel% HAdd.hAdd let48 x13x5fminus))
  let let50 := (binrel% HAdd.hAdd x13x5fplus let28)
  let let51 := (binrel% HMul.hMul let3 let50)
  let let52 := (Not let37)
  let let53 := (Eq let52 let36)
  let let54 := (Eq let36 let36)
  let let55 := (binrel% HDiv.hDiv let10 let5)
  let let56 := (Neg.neg let55)
  let let57 := (binrel% LT.lt let56 let1)
  let let58 := (binrel% HMul.hMul let11 x5x5fplus)
  let let59 := (binrel% HMul.hMul let11 x10x5fminus)
  let let60 := (binrel% HMul.hMul let9 x3x5fminus)
  let let61 := (binrel% HMul.hMul let5 x3x5fplus)
  let let62 := (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let58 x5x5fminus)))))))
  let let63 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let61 let60)))))))
  let let64 := (Rat.ofInt 0)
  let let65 := (binrel% HMul.hMul let2 let1)
  let let66 := (Eq let42 let42)
  let let67 := (binrel% HMul.hMul let11 x12x5fminus)
  let let68 := (binrel% HMul.hMul let11 x14x5fminus)
  let let69 := (binrel% HMul.hMul let11 x2x5fminus)
  let let70 := (binrel% HMul.hMul let11 x10x5fplus)
  let let71 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x12x5fplus let67)))))))))))))
  let let72 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x2x5fplus let69)))))))))))))
  let let73 := (Not let32)
  let let74 := (Eq let31 let73)
  let let75 := (Eq let73 let31)
  let let76 := (Rat.ofInt let35)
  let let77 := (binrel% HMul.hMul let2 let35)
  let let78 := (Int.ofNat 4)
  let let79 := (binrel% GE.ge let45 let78)
  let let80 := (Not let79)
  let let81 := (Not let80)
  let let82 := (Eq let79 let81)
  let let83 := (Eq let81 let79)
  let let84 := (Rat.ofInt 5)
  let let85 := (Int.ofNat 5)
  let let86 := (binrel% HMul.hMul let2 let85)
  let let87 := (binrel% HMul.hMul let11 x4x5fminus)
  let let88 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let87 let15))))))
  let let89 := (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x1x5fminus let12))
  let let90 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let87 let89))))))))
  let let91 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 9) let5))
  let let92 := (Neg.neg let6)
  let let93 := (binrel% HMul.hMul let7 let92)
  let let94 := (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 let89))))))))))))))))))))
  let let95 := (binrel% HSub.hSub x13x5fplus x13x5fminus)
  let let96 := (binrel% HMul.hMul let55 x12x5fminus)
  let let97 := (binrel% HMul.hMul let56 x12x5fplus)
  let let98 := (binrel% HMul.hMul let55 x14x5fminus)
  let let99 := (binrel% HMul.hMul let56 x14x5fplus)
  let let100 := (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x2x5fminus) (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let97 let96)))))))))))))
  let let101 := (binrel% HMul.hMul let56 let71)
  let let102 := (Eq let79 let79)
  let let103 := (Neg.neg let7)
  let let104 := (Int.ofNat 11)
  let let105 := (Neg.neg (binrel% HDiv.hDiv let104 let5))
  let let106 := (Rat.ofInt 2)
  let let107 := (Rat.ofInt 3)
  let let108 := (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let64 let2))))))))))))
  let let109 := (binrel% HMul.hMul let11 x3x5fplus)
  let let110 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let19 let18)))))
  let let111 := (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let109 x3x5fminus)))))
  let let112 := (binrel% LE.le let30 let92)
  let let113 := (binrel% HMul.hMul let2 let10)
  let let114 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let17 let16)))))))))
  let let115 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x3x5fplus let29)))))))))
  let let116 := (binrel% HMul.hMul let3 let9)
  let let117 := (Eq let36 let52)
  let let118 := (binrel% HSub.hSub x11x5fplus x11x5fminus)
  let let119 := (binrel% LE.le let45 let6)
  let let120 := (Eq let31 let31)
  let let121 := (Int.ofNat 6)
  let let122 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let11 x0x5fminus))
  let let123 := (binrel% GE.ge let122 let121)
  let let124 := (Not let123)
  let let125 := (binrel% LE.le let122 let85)
  let let126 := (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x7x5fplus) (binrel% HMul.hMul let5 x7x5fminus))
  let let127 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let67 let126))))))
  let let128 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let34 let126))))))
  let let129 := (binrel% LT.lt let122 let121)
  let let130 := (binrel% GE.ge let110 let11)
  let let131 := (binrel% LT.lt let45 let78)
  let let132 := (binrel% HMul.hMul let55 x11x5fminus)
  let let133 := (binrel% HMul.hMul let56 x11x5fplus)
  let let134 := (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd x7x5fplus (binrel% HMul.hMul let11 x7x5fminus))))))))
  let let135 := (binrel% HMul.hMul let56 let127)
  let let136 := (binrel% HSub.hSub x0x5fplus x0x5fminus)
  let let137 := (Not let124)
  let let138 := (Eq let123 let137)
  let let139 := (Eq let137 let123)
  let let140 := (binrel% HMul.hMul let56 let104)
  let let141 := (binrel% HSub.hSub x8x5fplus x8x5fminus)
  let let142 := (Not let43)
  let let143 := (Eq let142 let42)
  let let144 := (Rat.ofInt let122)
  let let145 := (binrel% HMul.hMul let2 let122)
  let let146 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x0x5fplus) (binrel% HMul.hMul let7 x0x5fminus))))))))))))))))))))))))
  let let147 := (binrel% HMul.hMul let7 let30)
  let let148 := (Eq let42 let142)
  let let149 := (binrel% LE.le let64 let56)
  let let150 := (binrel% HMul.hMul let55 x8x5fminus)
  let let151 := (binrel% HMul.hMul let56 x8x5fplus)
  let let152 := (binrel% HMul.hMul let55 x10x5fminus)
  let let153 := (binrel% HMul.hMul let56 x10x5fplus)
  let let154 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x5x5fplus) (binrel% HMul.hMul let56 x5x5fminus))))))))
  let let155 := (binrel% HMul.hMul let56 let62)
  let let156 := (binrel% HMul.hMul let56 let11)
  let let157 := (binrel% HMul.hMul let56 let5)
  let let158 := (Eq let123 let123)
  let let159 := (binrel% HMul.hMul let56 let10)
  let let160 := (binrel% HMul.hMul let56 let6)
  let let161 := (binrel% HMul.hMul let3 let1)
  let let162 := (binrel% LE.le let35 let1)
  let let163 := (binrel% HMul.hMul let3 let11)
  let let164 := (binrel% HMul.hMul let2 let6)
  let let165 := (Not let119)
  let let166 := (binrel% GT.gt let45 let6)
  let let167 := (Eq let166 let165)
  let let168 := (Rat.ofInt let41)
  let let169 := (binrel% HMul.hMul let55 x4x5fminus)
  let let170 := (binrel% HMul.hMul let56 x4x5fplus)
  let let171 := (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x6x5fminus) (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x0x5fplus) (binrel% HMul.hMul let56 x0x5fminus))))))))))))
  let let172 := (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x5x5fminus) (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x2x5fplus) (binrel% HMul.hMul let56 x2x5fminus))))))))))))))
  let let173 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x11x5fminus) (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x4x5fminus) (binrel% HAdd.hAdd x1x5fplus (binrel% HMul.hMul let11 x1x5fminus)))))))))
  let let174 := (Rat.ofInt (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x11x5fplus) (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x12x5fplus) (binrel% HMul.hMul let5 x12x5fminus)))))))))))
  let let175 := (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let76 let168))))))))))))
  let let176 := (binrel% HMul.hMul let2 let41)
  let let177 := (binrel% HMul.hMul let56 let88)
  let let178 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x6x5fminus) (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x5x5fminus) (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x2x5fplus) x2x5fminus)))))))))))))
  let let179 := (binrel% HMul.hMul let56 let178)
  let let180 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let14 x1x5fminus)))))))
  let let181 := (binrel% HMul.hMul let3 let180)
  let let182 := (binrel% HMul.hMul let3 let114)
  let let183 := (binrel% GE.ge let95 let9)
  let let184 := (binrel% LE.le let118 let1)
  let let185 := (binrel% LE.le let141 let6)
  let let186 := (binrel% LE.le let136 let85)
  let let187 := (binrel% GE.ge let178 let5)
  let let188 := (binrel% GE.ge let72 let6)
  let let189 := (binrel% GE.ge let115 let11)
  let let190 := (binrel% GE.ge let180 let1)
  let let191 := (binrel% GE.ge let128 let104)
  let let192 := (binrel% GE.ge let111 let11)
  let let193 := (binrel% LE.le let94 let92)
  let let194 := (binrel% GE.ge let90 let11)
  let let195 := (binrel% GE.ge let63 let10)
  let let196 := (binrel% GE.ge let50 let9)
  let let197 := (binrel% GE.ge let71 let6)
  let let198 := (binrel% GE.ge let114 let11)
  let let199 := (binrel% GE.ge let127 let104)
  let let200 := (binrel% GE.ge let88 let11)
  let let201 := (binrel% GE.ge let62 let10)
  let let202 := (Not let201)
  let let203 := (Not let200)
  let let204 := (Not let199)
  let let205 := (Not let190)
  let let206 := (Not let198)
  let let207 := (Not let197)
  let let208 := (Not let187)
  let let209 := (Not let196)
  let let210 := (Or let42 (Or let36 (Or let123 (Or let31 (Or let203 (Or let208 (Or let202 (Or let207 (Or let204 (Or let205 (Or let206 (Or let209 let79))))))))))))
  let let211 := (Or let142 (Or let52 (Or let137 (Or let73 (Or let203 (Or let208 (Or let202 (Or let207 (Or let204 (Or let205 (Or let206 (Or let209 let81))))))))))))
  let let212 := (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let163 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let65 let113))))))))))))
  let let213 := (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let179 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let77 let176))))))))))))
  let let214 := (binrel% LE.le let213 let212)
  let let215 := (binrel% LE.le let176 let113)
  let let216 := (binrel% LE.le let41 let10)
  let let217 := (And let39 let216)
  let let218 := (binrel% LE.le let77 let65)
  let let219 := (And let39 let162)
  let let220 := (binrel% LE.le let145 let86)
  let let221 := (And let39 let125)
  let let222 := (binrel% LE.le let147 let93)
  let let223 := (And let8 let112)
  let let224 := (binrel% LE.le let177 let156)
  let let225 := (And let57 let200)
  let let226 := (binrel% LE.le let179 let157)
  let let227 := (And let57 let187)
  let let228 := (binrel% LE.le let155 let159)
  let let229 := (And let57 let201)
  let let230 := (binrel% LE.le let101 let160)
  let let231 := (And let57 let197)
  let let232 := (binrel% LE.le let135 let140)
  let let233 := (And let57 let199)
  let let234 := (binrel% LE.le let181 let161)
  let let235 := (And let4 let190)
  let let236 := (binrel% LE.le let182 let163)
  let let237 := (And let4 let198)
  let let238 := (binrel% LE.le let51 let116)
  let let239 := (And let4 let196)
  let let240 := (binrel% LE.le let47 let164)
  let let241 := (And let39 let119)
fun lean_r0 : (Eq let4 True) => -- EVALUATE
fun lean_r1 : (Eq let8 True) => -- EVALUATE
fun lean_r2 : (Eq let33 let32) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let38 let37) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let39 True) => -- EVALUATE
fun lean_r5 : (Eq let44 let43) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let47 let46) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let51 let49) => -- THEORY_REWRITE_ARITH
fun lean_r8 : let53 => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let54 True) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq let57 True) => -- EVALUATE
fun lean_r11 : (Eq let63 let62) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let65 let64) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let66 True) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let72 let71) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let75 let74) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq let77 let76) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let83 let82) => -- THEORY_REWRITE_BOOL
fun lean_r18 : let83 => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let86 let84) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let90 let88) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let93 let91) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let94 let30) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let95 let50) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let101 let100) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let102 True) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq let108 let56) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let111 let110) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let112 let32) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let113 let2) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let115 let114) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let116 let106) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let53 let117) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq let118 let35) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let119 let80) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let120 True) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let125 let124) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let128 let127) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let129 let124) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let130 let43) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let131 let80) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let135 let134) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let136 let122) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let139 let138) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let140 let105) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let141 let45) => -- THEORY_REWRITE_ARITH
fun lean_r46 : let143 => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let145 let144) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let147 let146) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let143 let148) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq let149 False) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let155 let154) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let156 let55) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let157 let3) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let158 True) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq let159 let56) => -- THEORY_REWRITE_ARITH
fun lean_r56 : let139 => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq let160 let103) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let161 let64) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let162 let37) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let163 let2) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let164 let107) => -- THEORY_REWRITE_ARITH
fun lean_r62 : let167 => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let175 let64) => -- THEORY_REWRITE_ARITH
fun lean_r64 : let75 => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq let176 let168) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let177 let171) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let179 let172) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let181 let173) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let182 let174) => -- THEORY_REWRITE_ARITH
fun lean_a70 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a71 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a72 : (binrel% GE.ge x13x5fplus let1) =>
fun lean_a73 : (binrel% GE.ge x13x5fminus let1) =>
fun lean_a74 : (binrel% GE.ge x11x5fplus let1) =>
fun lean_a75 : (binrel% GE.ge x11x5fminus let1) =>
fun lean_a76 : (binrel% GE.ge x10x5fplus let1) =>
fun lean_a77 : (binrel% GE.ge x10x5fminus let1) =>
fun lean_a78 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a79 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a80 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a81 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a82 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a83 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a84 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a85 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a86 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a87 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a88 : (binrel% GE.ge x14x5fplus let1) =>
fun lean_a89 : (binrel% GE.ge x14x5fminus let1) =>
fun lean_a90 : (binrel% GE.ge x12x5fplus let1) =>
fun lean_a91 : (binrel% GE.ge x12x5fminus let1) =>
fun lean_a92 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a93 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a94 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a95 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a96 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a97 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a98 : (binrel% GE.ge (binrel% HSub.hSub x3x5fplus x3x5fminus) let1) =>
fun lean_a99 : let183 =>
fun lean_a100 : let184 =>
fun lean_a101 : let185 =>
fun lean_a102 : let186 =>
fun lean_a103 : let187 =>
fun lean_a104 : let188 =>
fun lean_a105 : let189 =>
fun lean_a106 : let190 =>
fun lean_a107 : let191 =>
fun lean_a108 : let192 =>
fun lean_a109 : let193 =>
fun lean_a110 : let194 =>
fun lean_a111 : let195 => by
have lean_s0 : (Or let142 (Or let52 (Or let137 (Or let73 (Or let203 (Or let208 (Or let202 (Or let207 (Or let204 (Or let205 (Or let206 (Or let209 (Or let81 False))))))))))))) :=
  (scope (fun lean_a112 : let43 =>
    (scope (fun lean_a113 : let37 =>
      (scope (fun lean_a114 : let124 =>
        (scope (fun lean_a115 : let32 =>
          (scope (fun lean_a116 : let200 =>
            (scope (fun lean_a117 : let187 =>
              (scope (fun lean_a118 : let201 =>
                (scope (fun lean_a119 : let197 =>
                  (scope (fun lean_a120 : let199 =>
                    (scope (fun lean_a121 : let190 =>
                      (scope (fun lean_a122 : let198 =>
                        (scope (fun lean_a123 : let196 =>
                          (scope (fun lean_a124 : let80 =>
                            let lean_s0 := by timed flipCongrArg lean_r45 [LE.le]
                            have lean_s1 : (Eq let6 let6) := by timed rfl
                            have lean_s2 : (Eq let185 let119) := by timed congr lean_s0 lean_s1
                            have lean_s3 : (Eq let185 let80) := by timed Eq.trans lean_s2 lean_r34
                            have lean_s4 : let80 := by timed eqResolve lean_a101 lean_s3
                            have lean_s5 : (Eq let80 let131) := by timed Eq.symm lean_r40
                            have lean_s6 : let131 := by timed eqResolve lean_s4 lean_s5
                            have lean_s7 : let119 := by intTightUb lean_s6
                            have lean_s8 : (Or let165 False) :=
                              (scope (fun lean_a123 : let119 =>
                                have lean_s8 : let39 := by timed trueElim lean_r4
                                have lean_s9 : let241 := by timed And.intro lean_s8 lean_a123
                                have lean_s10 : (Implies let241 let240) := by arithMulPos [let45, let6, let2], 1
                                have lean_s11 : let240 := by timed modusPonens lean_s9 lean_s10
                                have lean_s12 : let4 := by timed trueElim lean_r0
                                let lean_s13 := by timed flipCongrArg lean_r23 [GE.ge]
                                have lean_s14 : (Eq let9 let9) := by timed rfl
                                have lean_s15 : (Eq let183 let196) := by timed congr lean_s13 lean_s14
                                have lean_s16 : let196 := by timed eqResolve lean_a99 lean_s15
                                have lean_s17 : let239 := by timed And.intro lean_s12 lean_s16
                                have lean_s18 : (Implies let239 let238) := by arithMulNeg [let50, let9, let3], 3
                                have lean_s19 : let238 := by timed modusPonens lean_s17 lean_s18
                                let lean_s20 := by timed flipCongrArg lean_r30 [GE.ge]
                                have lean_s21 : (Eq let11 let11) := by timed rfl
                                have lean_s22 : (Eq let189 let198) := by timed congr lean_s20 lean_s21
                                have lean_s23 : let198 := by timed eqResolve lean_a105 lean_s22
                                have lean_s24 : let237 := by timed And.intro lean_s12 lean_s23
                                have lean_s25 : (Implies let237 let236) := by arithMulNeg [let114, let11, let3], 3
                                have lean_s26 : let236 := by timed modusPonens lean_s24 lean_s25
                                have lean_s27 : let235 := by timed And.intro lean_s12 lean_a121
                                have lean_s28 : (Implies let235 let234) := by arithMulNeg [let180, let1, let3], 3
                                have lean_s29 : let234 := by timed modusPonens lean_s27 lean_s28
                                have lean_s30 : let57 := by timed trueElim lean_r10
                                let lean_s31 := by timed flipCongrArg lean_r37 [GE.ge]
                                have lean_s32 : (Eq let104 let104) := by timed rfl
                                have lean_s33 : (Eq let191 let199) := by timed congr lean_s31 lean_s32
                                have lean_s34 : let199 := by timed eqResolve lean_a107 lean_s33
                                have lean_s35 : let233 := by timed And.intro lean_s30 lean_s34
                                have lean_s36 : (Implies let233 let232) := by arithMulNeg [let127, let104, let56], 3
                                have lean_s37 : let232 := by timed modusPonens lean_s35 lean_s36
                                let lean_s38 := by timed flipCongrArg lean_r14 [GE.ge]
                                have lean_s39 : (Eq let188 let197) := by timed congr lean_s38 lean_s1
                                have lean_s40 : let197 := by timed eqResolve lean_a104 lean_s39
                                have lean_s41 : let231 := by timed And.intro lean_s30 lean_s40
                                have lean_s42 : (Implies let231 let230) := by arithMulNeg [let71, let6, let56], 3
                                have lean_s43 : let230 := by timed modusPonens lean_s41 lean_s42
                                let lean_s44 := by timed flipCongrArg lean_r11 [GE.ge]
                                have lean_s45 : (Eq let10 let10) := by timed rfl
                                have lean_s46 : (Eq let195 let201) := by timed congr lean_s44 lean_s45
                                have lean_s47 : let201 := by timed eqResolve lean_a111 lean_s46
                                have lean_s48 : let229 := by timed And.intro lean_s30 lean_s47
                                have lean_s49 : (Implies let229 let228) := by arithMulNeg [let62, let10, let56], 3
                                have lean_s50 : let228 := by timed modusPonens lean_s48 lean_s49
                                have lean_s51 : let227 := by timed And.intro lean_s30 lean_a117
                                have lean_s52 : (Implies let227 let226) := by arithMulNeg [let178, let5, let56], 3
                                have lean_s53 : let226 := by timed modusPonens lean_s51 lean_s52
                                let lean_s54 := by timed flipCongrArg lean_r20 [GE.ge]
                                have lean_s55 : (Eq let194 let200) := by timed congr lean_s54 lean_s21
                                have lean_s56 : let200 := by timed eqResolve lean_a110 lean_s55
                                have lean_s57 : let225 := by timed And.intro lean_s30 lean_s56
                                have lean_s58 : (Implies let225 let224) := by arithMulNeg [let88, let11, let56], 3
                                have lean_s59 : let224 := by timed modusPonens lean_s57 lean_s58
                                have lean_s60 : let8 := by timed trueElim lean_r1
                                let lean_s61 := by timed flipCongrArg lean_r22 [LE.le]
                                have lean_s62 : (Eq let92 let92) := by timed rfl
                                have lean_s63 : (Eq let193 let112) := by timed congr lean_s61 lean_s62
                                have lean_s64 : (Eq let193 let32) := by timed Eq.trans lean_s63 lean_r28
                                have lean_s65 : let32 := by timed eqResolve lean_a109 lean_s64
                                have lean_s66 : (Eq let32 let33) := by timed Eq.symm lean_r2
                                have lean_s67 : let33 := by timed eqResolve lean_s65 lean_s66
                                have lean_s68 : let112 := by intTightUb lean_s67
                                have lean_s69 : let223 := by timed And.intro lean_s60 lean_s68
                                have lean_s70 : (Implies let223 let222) := by arithMulPos [let30, let92, let7], 1
                                have lean_s71 : let222 := by timed modusPonens lean_s69 lean_s70
                                let lean_s72 := by timed flipCongrArg lean_r42 [LE.le]
                                have lean_s73 : (Eq let85 let85) := by timed rfl
                                have lean_s74 : (Eq let186 let125) := by timed congr lean_s72 lean_s73
                                have lean_s75 : (Eq let186 let124) := by timed Eq.trans lean_s74 lean_r36
                                have lean_s76 : let124 := by timed eqResolve lean_a102 lean_s75
                                have lean_s77 : (Eq let124 let129) := by timed Eq.symm lean_r38
                                have lean_s78 : let129 := by timed eqResolve lean_s76 lean_s77
                                have lean_s79 : let125 := by intTightUb lean_s78
                                have lean_s80 : let221 := by timed And.intro lean_s8 lean_s79
                                have lean_s81 : (Implies let221 let220) := by arithMulPos [let122, let85, let2], 1
                                have lean_s82 : let220 := by timed modusPonens lean_s80 lean_s81
                                let lean_s83 := by timed flipCongrArg lean_r33 [LE.le]
                                have lean_s84 : (Eq let1 let1) := by timed rfl
                                have lean_s85 : (Eq let184 let162) := by timed congr lean_s83 lean_s84
                                have lean_s86 : (Eq let184 let37) := by timed Eq.trans lean_s85 lean_r59
                                have lean_s87 : let37 := by timed eqResolve lean_a100 lean_s86
                                have lean_s88 : (Eq let37 let38) := by timed Eq.symm lean_r3
                                have lean_s89 : let38 := by timed eqResolve lean_s87 lean_s88
                                have lean_s90 : let162 := by intTightUb lean_s89
                                have lean_s91 : let219 := by timed And.intro lean_s8 lean_s90
                                have lean_s92 : (Implies let219 let218) := by arithMulPos [let35, let1, let2], 1
                                have lean_s93 : let218 := by timed modusPonens lean_s91 lean_s92
                                let lean_s94 := by timed flipCongrArg lean_r27 [GE.ge]
                                have lean_s95 : (Eq let192 let130) := by timed congr lean_s94 lean_s21
                                have lean_s96 : (Eq let192 let43) := by timed Eq.trans lean_s95 lean_r39
                                have lean_s97 : let43 := by timed eqResolve lean_a108 lean_s96
                                have lean_s98 : (Eq let43 let44) := by timed Eq.symm lean_r5
                                have lean_s99 : let44 := by timed eqResolve lean_s97 lean_s98
                                have lean_s100 : let216 := by intTightUb lean_s99
                                have lean_s101 : let217 := by timed And.intro lean_s8 lean_s100
                                have lean_s102 : (Implies let217 let215) := by arithMulPos [let41, let10, let2], 1
                                have lean_s103 : let215 := by timed modusPonens lean_s101 lean_s102
                                have lean_s104 : let214 := by sumBounds [lean_s11, lean_s19, lean_s26, lean_s29, lean_s37, lean_s43, lean_s50, lean_s53, lean_s59, lean_s71, lean_s82, lean_s93, lean_s103]
                                let lean_s105 := by timed congrHAdd lean_r16 lean_r65
                                let lean_s106 := by timed congrHAdd lean_r47 lean_s105
                                let lean_s107 := by timed congrHAdd lean_r48 lean_s106
                                let lean_s108 := by timed congrHAdd lean_r66 lean_s107
                                let lean_s109 := by timed congrHAdd lean_r67 lean_s108
                                let lean_s110 := by timed congrHAdd lean_r51 lean_s109
                                let lean_s111 := by timed congrHAdd lean_r24 lean_s110
                                let lean_s112 := by timed congrHAdd lean_r41 lean_s111
                                let lean_s113 := by timed congrHAdd lean_r68 lean_s112
                                let lean_s114 := by timed congrHAdd lean_r69 lean_s113
                                let lean_s115 := by timed congrHAdd lean_r7 lean_s114
                                have lean_s116 : (Eq let213 let175) := by timed congrHAdd lean_r6 lean_s115
                                have lean_s117 : (Eq let213 let64) := by timed Eq.trans lean_s116 lean_r63
                                let lean_s118 := by timed flipCongrArg lean_s117 [LE.le]
                                let lean_s119 := by timed congrHAdd lean_r12 lean_r29
                                let lean_s120 := by timed congrHAdd lean_r19 lean_s119
                                let lean_s121 := by timed congrHAdd lean_r21 lean_s120
                                let lean_s122 := by timed congrHAdd lean_r52 lean_s121
                                let lean_s123 := by timed congrHAdd lean_r53 lean_s122
                                let lean_s124 := by timed congrHAdd lean_r55 lean_s123
                                let lean_s125 := by timed congrHAdd lean_r57 lean_s124
                                let lean_s126 := by timed congrHAdd lean_r44 lean_s125
                                let lean_s127 := by timed congrHAdd lean_r58 lean_s126
                                let lean_s128 := by timed congrHAdd lean_r60 lean_s127
                                let lean_s129 := by timed congrHAdd lean_r31 lean_s128
                                have lean_s130 : (Eq let212 let108) := by timed congrHAdd lean_r61 lean_s129
                                have lean_s131 : (Eq let212 let56) := by timed Eq.trans lean_s130 lean_r26
                                have lean_s132 : (Eq let214 let149) := by timed congr lean_s118 lean_s131
                                have lean_s133 : (Eq let214 False) := by timed Eq.trans lean_s132 lean_r50
                                show False from by timed eqResolve lean_s104 lean_s133
                              ))
                            have lean_s9 : let165 := by liftOrNToNeg lean_s8
                            have lean_s10 : (Eq let165 let81) := by timed flipCongrArg lean_r34 [Not]
                            have lean_s11 : (Eq let165 let79) := by timed Eq.trans lean_s10 lean_r18
                            have lean_s12 : (Eq let166 let79) := by timed Eq.trans lean_r62 lean_s11
                            have lean_s13 : (Eq let79 let166) := by timed Eq.symm lean_s12
                            have lean_s14 : (Eq let165 let166) := by timed Eq.trans lean_s11 lean_s13
                            have lean_s15 : let166 := by timed eqResolve lean_s9 lean_s14
                            have lean_s16 : (Eq let79 let165) := by timed Eq.symm lean_s11
                            have lean_s17 : let167 := by timed Eq.trans lean_s12 lean_s16
                            have lean_s18 : let165 := by timed eqResolve lean_s15 lean_s17
                            show False from by timed contradiction lean_s7 lean_s18
  ))))))))))))))))))))))))))
have lean_s1 : (Not (And let43 (And let37 (And let124 (And let32 (And let200 (And let187 (And let201 (And let197 (And let199 (And let190 (And let198 (And let196 let80))))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let211 := by timed flipNotAnd lean_s1 [let43, let37, let124, let32, let200, let187, let201, let197, let199, let190, let198, let196, let80]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let66 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let148 let66) := by timed congr lean_s5 lean_r46
have lean_s7 : (Eq let148 True) := by timed Eq.trans lean_s6 lean_r13
have lean_s8 : (Eq let143 True) := by timed Eq.trans lean_r49 lean_s7
have lean_s9 : let143 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let54 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let117 let54) := by timed congr lean_s12 lean_r8
have lean_s14 : (Eq let117 True) := by timed Eq.trans lean_s13 lean_r9
have lean_s15 : (Eq let53 True) := by timed Eq.trans lean_r32 lean_s14
have lean_s16 : let53 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : let158 := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq let138 let158) := by timed congr lean_s19 lean_r56
have lean_s21 : (Eq let138 True) := by timed Eq.trans lean_s20 lean_r54
have lean_s22 : (Eq let139 True) := by timed Eq.trans lean_r43 lean_s21
have lean_s23 : let139 := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : let120 := by timed rfl
let lean_s26 := by timed flipCongrArg lean_s25 [Eq]
have lean_s27 : (Eq let74 let120) := by timed congr lean_s26 lean_r64
have lean_s28 : (Eq let74 True) := by timed Eq.trans lean_s27 lean_r35
have lean_s29 : (Eq let75 True) := by timed Eq.trans lean_r15 lean_s28
have lean_s30 : let75 := by timed trueElim lean_s29
let lean_s31 := by timed congr lean_s3 lean_s30
have lean_s32 : (Eq let203 let203) := by timed rfl
let lean_s33 := by timed congr lean_s3 lean_s32
have lean_s34 : (Eq let208 let208) := by timed rfl
let lean_s35 := by timed congr lean_s3 lean_s34
have lean_s36 : (Eq let202 let202) := by timed rfl
let lean_s37 := by timed congr lean_s3 lean_s36
have lean_s38 : (Eq let207 let207) := by timed rfl
let lean_s39 := by timed congr lean_s3 lean_s38
have lean_s40 : (Eq let204 let204) := by timed rfl
let lean_s41 := by timed congr lean_s3 lean_s40
have lean_s42 : (Eq let205 let205) := by timed rfl
let lean_s43 := by timed congr lean_s3 lean_s42
have lean_s44 : (Eq let206 let206) := by timed rfl
let lean_s45 := by timed congr lean_s3 lean_s44
have lean_s46 : (Eq let209 let209) := by timed rfl
let lean_s47 := by timed congr lean_s3 lean_s46
have lean_s48 : let102 := by timed rfl
let lean_s49 := by timed flipCongrArg lean_s48 [Eq]
have lean_s50 : (Eq let82 let102) := by timed congr lean_s49 lean_r18
have lean_s51 : (Eq let82 True) := by timed Eq.trans lean_s50 lean_r25
have lean_s52 : (Eq let83 True) := by timed Eq.trans lean_r17 lean_s51
have lean_s53 : let83 := by timed trueElim lean_s52
let lean_s54 := by timed congr lean_s47 lean_s53
let lean_s55 := by timed congr lean_s45 lean_s54
let lean_s56 := by timed congr lean_s43 lean_s55
let lean_s57 := by timed congr lean_s41 lean_s56
let lean_s58 := by timed congr lean_s39 lean_s57
let lean_s59 := by timed congr lean_s37 lean_s58
let lean_s60 := by timed congr lean_s35 lean_s59
let lean_s61 := by timed congr lean_s33 lean_s60
let lean_s62 := by timed congr lean_s31 lean_s61
let lean_s63 := by timed congr lean_s24 lean_s62
let lean_s64 := by timed congr lean_s17 lean_s63
have lean_s65 : (Eq let211 let210) := by timed congr lean_s10 lean_s64
have lean_s66 : let210 := by timed eqResolve lean_s2 lean_s65
have lean_s67 : (Or let36 (Or let79 (Or let123 (Or let42 (Or let31 (Or let209 (Or let208 (Or let207 (Or let206 (Or let205 (Or let204 (Or let203 let202)))))))))))) := by permutateOr lean_s66, [1, 12, 2, 0, 3, 11, 5, 7, 10, 9, 8, 4, 6], (- 1)
let lean_s68 := by timed flipCongrArg lean_r11 [GE.ge]
have lean_s69 : (Eq let10 let10) := by timed rfl
have lean_s70 : (Eq let195 let201) := by timed congr lean_s68 lean_s69
have lean_s71 : let201 := by timed eqResolve lean_a111 lean_s70
let lean_s72 := by R2 lean_s67, lean_s71, let201, [(- 1), 0]
let lean_s73 := by timed flipCongrArg lean_r20 [GE.ge]
have lean_s74 : (Eq let11 let11) := by timed rfl
have lean_s75 : (Eq let194 let200) := by timed congr lean_s73 lean_s74
have lean_s76 : let200 := by timed eqResolve lean_a110 lean_s75
let lean_s77 := by R2 lean_s72, lean_s76, let200, [(- 1), 0]
let lean_s78 := by timed flipCongrArg lean_r22 [LE.le]
have lean_s79 : (Eq let92 let92) := by timed rfl
have lean_s80 : (Eq let193 let112) := by timed congr lean_s78 lean_s79
have lean_s81 : (Eq let193 let32) := by timed Eq.trans lean_s80 lean_r28
have lean_s82 : let32 := by timed eqResolve lean_a109 lean_s81
let lean_s83 := by R1 lean_s77, lean_s82, let31, [(- 1), 0]
let lean_s84 := by timed flipCongrArg lean_r27 [GE.ge]
have lean_s85 : (Eq let192 let130) := by timed congr lean_s84 lean_s74
have lean_s86 : (Eq let192 let43) := by timed Eq.trans lean_s85 lean_r39
have lean_s87 : let43 := by timed eqResolve lean_a108 lean_s86
let lean_s88 := by R1 lean_s83, lean_s87, let42, [(- 1), 0]
let lean_s89 := by timed flipCongrArg lean_r37 [GE.ge]
have lean_s90 : (Eq let104 let104) := by timed rfl
have lean_s91 : (Eq let191 let199) := by timed congr lean_s89 lean_s90
have lean_s92 : let199 := by timed eqResolve lean_a107 lean_s91
let lean_s93 := by R2 lean_s88, lean_s92, let199, [(- 1), 0]
let lean_s94 := by R2 lean_s93, lean_a106, let190, [(- 1), 0]
let lean_s95 := by timed flipCongrArg lean_r30 [GE.ge]
have lean_s96 : (Eq let189 let198) := by timed congr lean_s95 lean_s74
have lean_s97 : let198 := by timed eqResolve lean_a105 lean_s96
let lean_s98 := by R2 lean_s94, lean_s97, let198, [(- 1), 0]
let lean_s99 := by timed flipCongrArg lean_r14 [GE.ge]
have lean_s100 : (Eq let6 let6) := by timed rfl
have lean_s101 : (Eq let188 let197) := by timed congr lean_s99 lean_s100
have lean_s102 : let197 := by timed eqResolve lean_a104 lean_s101
let lean_s103 := by R2 lean_s98, lean_s102, let197, [(- 1), 0]
let lean_s104 := by R2 lean_s103, lean_a103, let187, [(- 1), 0]
let lean_s105 := by timed flipCongrArg lean_r42 [LE.le]
have lean_s106 : (Eq let85 let85) := by timed rfl
have lean_s107 : (Eq let186 let125) := by timed congr lean_s105 lean_s106
have lean_s108 : (Eq let186 let124) := by timed Eq.trans lean_s107 lean_r36
have lean_s109 : let124 := by timed eqResolve lean_a102 lean_s108
let lean_s110 := by R1 lean_s104, lean_s109, let123, [(- 1), 0]
let lean_s111 := by timed flipCongrArg lean_r45 [LE.le]
have lean_s112 : (Eq let185 let119) := by timed congr lean_s111 lean_s100
have lean_s113 : (Eq let185 let80) := by timed Eq.trans lean_s112 lean_r34
have lean_s114 : let80 := by timed eqResolve lean_a101 lean_s113
let lean_s115 := by R1 lean_s110, lean_s114, let79, [(- 1), 0]
let lean_s116 := by timed flipCongrArg lean_r33 [LE.le]
have lean_s117 : (Eq let1 let1) := by timed rfl
have lean_s118 : (Eq let184 let162) := by timed congr lean_s116 lean_s117
have lean_s119 : (Eq let184 let37) := by timed Eq.trans lean_s118 lean_r59
have lean_s120 : let37 := by timed eqResolve lean_a100 lean_s119
let lean_s121 := by R1 lean_s115, lean_s120, let36, [(- 1), 0]
let lean_s122 := by timed flipCongrArg lean_r23 [GE.ge]
have lean_s123 : (Eq let9 let9) := by timed rfl
have lean_s124 : (Eq let183 let196) := by timed congr lean_s122 lean_s123
have lean_s125 : let196 := by timed eqResolve lean_a99 lean_s124
exact (show False from by R2 lean_s121, lean_s125, let196, [0, 0])


