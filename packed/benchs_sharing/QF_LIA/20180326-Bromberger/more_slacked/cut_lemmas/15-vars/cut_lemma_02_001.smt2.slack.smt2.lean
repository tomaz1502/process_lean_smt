open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x9x5fplus : Int}
variable {x9x5fminus : Int}
variable {x4x5fminus : Int}
variable {x14x5fminus : Int}
variable {x13x5fplus : Int}
variable {x13x5fminus : Int}
variable {x2x5fplus : Int}
variable {x14x5fplus : Int}
variable {x6x5fminus : Int}
variable {x11x5fminus : Int}
variable {x2x5fminus : Int}
variable {x7x5fplus : Int}
variable {x2x5fplus : Int}
variable {x13x5fminus : Int}
variable {x7x5fminus : Int}
variable {x6x5fplus : Int}
variable {x6x5fminus : Int}
variable {x3x5fminus : Int}
variable {x12x5fminus : Int}
variable {x3x5fplus : Int}
variable {x4x5fminus : Int}
variable {x5x5fminus : Int}
variable {x4x5fplus : Int}
variable {x3x5fminus : Int}
variable {x5x5fplus : Int}
variable {x11x5fplus : Int}
variable {x10x5fminus : Int}
variable {x8x5fminus : Int}
variable {x7x5fplus : Int}
variable {x8x5fplus : Int}
variable {x12x5fplus : Int}
variable {x5x5fplus : Int}
variable {x10x5fplus : Int}
variable {x4x5fplus : Int}
variable {x13x5fplus : Int}
variable {x0x5fminus : Int}
variable {x10x5fplus : Int}
variable {x0x5fplus : Int}
variable {x1x5fplus : Int}
variable {x6x5fplus : Int}
variable {x1x5fminus : Int}
variable {x7x5fminus : Int}
variable {x9x5fplus : Int}
variable {x5x5fminus : Int}
variable {x10x5fminus : Int}
variable {x3x5fplus : Int}
variable {x12x5fplus : Int}
variable {x8x5fminus : Int}
variable {x8x5fplus : Int}
variable {x0x5fminus : Int}
variable {x0x5fplus : Int}
variable {x1x5fminus : Int}
variable {x1x5fplus : Int}
variable {x2x5fminus : Int}
variable {x11x5fminus : Int}
variable {x11x5fplus : Int}
variable {x12x5fminus : Int}
variable {x14x5fminus : Int}
variable {x14x5fplus : Int}
variable {x9x5fminus : Int}

theorem th0 :
  let let1 := (Int.ofNat 4)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% HMul.hMul let3 x8x5fminus)
  let let5 := (binrel% HAdd.hAdd x8x5fplus let4)
  let let6 := (binrel% GE.ge let5 let1)
  let let7 := (Not let6)
  let let8 := (binrel% LT.lt let5 let1)
  let let9 := (Int.ofNat 0)
  let let10 := (Rat.ofInt 1)
  let let11 := (binrel% GT.gt let10 let9)
  let let12 := (Int.ofNat 2)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HMul.hMul let3 x3x5fminus)
  let let15 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x14x5fplus) (binrel% HMul.hMul let12 x14x5fminus))))))
  let let16 := (binrel% GE.ge let15 let12)
  let let17 := (Not let16)
  let let18 := (binrel% LT.lt let15 let12)
  let let19 := (Int.ofNat 17)
  let let20 := (binrel% HDiv.hDiv (Int.ofNat 8) let19)
  let let21 := (binrel% GT.gt let20 let9)
  let let22 := (Int.ofNat 6)
  let let23 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let3 x0x5fminus))
  let let24 := (binrel% GE.ge let23 let22)
  let let25 := (Not let24)
  let let26 := (binrel% LT.lt let23 let22)
  let let27 := (binrel% HMul.hMul let3 x0x5fplus)
  let let28 := (binrel% HAdd.hAdd let27 x0x5fminus)
  let let29 := (binrel% HMul.hMul let3 x2x5fplus)
  let let30 := (binrel% HMul.hMul let3 x6x5fplus)
  let let31 := (binrel% HMul.hMul let3 x7x5fplus)
  let let32 := (binrel% HMul.hMul let3 x10x5fminus)
  let let33 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x13x5fminus) (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x4x5fminus) (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x2x5fminus let28))))))))))))))
  let let34 := (binrel% GE.ge let33 let2)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt let33 let2)
  let let37 := (binrel% HDiv.hDiv let2 let19)
  let let38 := (Neg.neg let37)
  let let39 := (binrel% LT.lt let38 let9)
  let let40 := (Neg.neg let10)
  let let41 := (binrel% LT.lt let40 let9)
  let let42 := (binrel% HDiv.hDiv let12 let19)
  let let43 := (binrel% GT.gt let42 let9)
  let let44 := (binrel% HMul.hMul let3 x11x5fminus)
  let let45 := (binrel% HAdd.hAdd x11x5fplus let44)
  let let46 := (binrel% GE.ge let45 let2)
  let let47 := (Not let46)
  let let48 := (binrel% LT.lt let45 let2)
  let let49 := (binrel% HMul.hMul let3 x11x5fplus)
  let let50 := (binrel% HMul.hMul let3 x10x5fplus)
  let let51 := (binrel% HMul.hMul let3 x13x5fplus)
  let let52 := (binrel% HMul.hMul let3 x3x5fplus)
  let let53 := (Rat.ofInt (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x12x5fplus) (binrel% HMul.hMul let12 x12x5fminus)))))))))))
  let let54 := (binrel% HMul.hMul let13 x12x5fminus)
  let let55 := (binrel% HMul.hMul let12 x12x5fplus)
  let let56 := (binrel% HMul.hMul let3 x13x5fminus)
  let let57 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let55 let54)))))))))
  let let58 := (binrel% HMul.hMul let40 let57)
  let let59 := (Rat.ofInt let15)
  let let60 := (binrel% HMul.hMul let10 let15)
  let let61 := (binrel% HDiv.hDiv let1 let19)
  let let62 := (Neg.neg let61)
  let let63 := (Neg.neg let20)
  let let64 := (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let63 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x12x5fplus) (binrel% HMul.hMul let61 x12x5fminus))))))))
  let let65 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x7x5fminus) (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x14x5fplus) (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x12x5fplus) x12x5fminus)))))))
  let let66 := (binrel% HMul.hMul let61 let65)
  let let67 := (binrel% GT.gt let61 let9)
  let let68 := (Int.ofNat 11)
  let let69 := (binrel% HDiv.hDiv let68 let19)
  let let70 := (Neg.neg let69)
  let let71 := (binrel% HDiv.hDiv (Int.ofNat 22) let19)
  let let72 := (Neg.neg let71)
  let let73 := (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x1x5fplus) (binrel% HMul.hMul let70 x1x5fminus))))))))
  let let74 := (binrel% HMul.hMul let3 x1x5fplus)
  let let75 := (binrel% HAdd.hAdd let74 x1x5fminus)
  let let76 := (binrel% HMul.hMul let13 x11x5fminus)
  let let77 := (binrel% HMul.hMul let12 x11x5fplus)
  let let78 := (binrel% HMul.hMul let13 x4x5fminus)
  let let79 := (binrel% HMul.hMul let12 x4x5fplus)
  let let80 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let76 let75))))))
  let let81 := (binrel% HMul.hMul let70 let80)
  let let82 := (Neg.neg (Int.ofNat 10))
  let let83 := (binrel% GE.ge let65 let82)
  let let84 := (Not let83)
  let let85 := (binrel% LT.lt let65 let82)
  let let86 := (binrel% HDiv.hDiv (Int.ofNat 54) let19)
  let let87 := (Neg.neg let86)
  let let88 := (binrel% HDiv.hDiv (Int.ofNat 18) let19)
  let let89 := (Neg.neg let88)
  let let90 := (binrel% HDiv.hDiv (Int.ofNat 36) let19)
  let let91 := (Neg.neg let90)
  let let92 := (binrel% HDiv.hDiv (Int.ofNat 72) let19)
  let let93 := (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let92) x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x12x5fplus) (binrel% HMul.hMul let87 x12x5fminus))))))))))))))))))))))))
  let let94 := (Int.ofNat 3)
  let let95 := (Neg.neg let94)
  let let96 := (binrel% HMul.hMul let95 x12x5fminus)
  let let97 := (binrel% HMul.hMul let94 x12x5fplus)
  let let98 := (binrel% HMul.hMul let95 x14x5fminus)
  let let99 := (binrel% HMul.hMul let94 x14x5fplus)
  let let100 := (binrel% HMul.hMul let12 x8x5fminus)
  let let101 := (binrel% HMul.hMul let13 x8x5fplus)
  let let102 := (binrel% HMul.hMul let95 x11x5fminus)
  let let103 := (binrel% HMul.hMul let94 x11x5fplus)
  let let104 := (binrel% HMul.hMul let3 x2x5fminus)
  let let105 := (binrel% HMul.hMul (Neg.neg let1) x4x5fminus)
  let let106 := (binrel% HMul.hMul let1 x4x5fplus)
  let let107 := (binrel% HMul.hMul let3 x5x5fplus)
  let let108 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let97 let96)))))))))))))))))))))))
  let let109 := (binrel% HMul.hMul let88 let108)
  let let110 := (binrel% HDiv.hDiv (Int.ofNat 13) let19)
  let let111 := (Neg.neg let110)
  let let112 := (binrel% HDiv.hDiv (Int.ofNat 26) let19)
  let let113 := (Neg.neg let112)
  let let114 := (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x8x5fplus) (binrel% HMul.hMul let110 x8x5fminus))))))))))))))
  let let115 := (binrel% HMul.hMul let3 x4x5fminus)
  let let116 := (binrel% HMul.hMul let3 x5x5fminus)
  let let117 := (binrel% HMul.hMul let12 x6x5fminus)
  let let118 := (binrel% HMul.hMul let13 x6x5fplus)
  let let119 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 let5))))))))))))
  let let120 := (binrel% HMul.hMul let111 let119)
  let let121 := (binrel% HDiv.hDiv (Int.ofNat 16) let19)
  let let122 := (Neg.neg let121)
  let let123 := (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x12x5fplus) (binrel% HMul.hMul let121 x12x5fminus))))))))))))))
  let let124 := (binrel% HMul.hMul let3 x12x5fminus)
  let let125 := (binrel% HMul.hMul let3 x14x5fminus)
  let let126 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd x12x5fplus let124)))
  let let127 := (binrel% HMul.hMul let3 x8x5fplus)
  let let128 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd x8x5fminus let126))))))))))
  let let129 := (binrel% HMul.hMul let122 let128)
  let let130 := (binrel% HDiv.hDiv (Int.ofNat 15) let19)
  let let131 := (Neg.neg let130)
  let let132 := (binrel% HDiv.hDiv (Int.ofNat 30) let19)
  let let133 := (Neg.neg let132)
  let let134 := (binrel% HAdd.hAdd (binrel% HMul.hMul let132 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let130 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let130 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let130 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let132 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let132 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let130 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x0x5fplus) (binrel% HMul.hMul let130 x0x5fminus))))))))))))))))
  let let135 := (binrel% HMul.hMul let130 let33)
  let let136 := (binrel% LT.lt let70 let9)
  let let137 := (Neg.neg let42)
  let let138 := (binrel% HAdd.hAdd (binrel% HMul.hMul let137 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x8x5fplus) (binrel% HMul.hMul let37 x8x5fminus))))))))
  let let139 := (binrel% HMul.hMul let13 x3x5fminus)
  let let140 := (binrel% HMul.hMul let12 x3x5fplus)
  let let141 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x5x5fminus let5))))))
  let let142 := (binrel% HMul.hMul let38 let141)
  let let143 := (Not let25)
  let let144 := (Eq let24 let143)
  let let145 := (Eq let143 let24)
  let let146 := (Not let17)
  let let147 := (Eq let16 let146)
  let let148 := (Eq let146 let16)
  let let149 := (binrel% HDiv.hDiv (Int.ofNat 7) let19)
  let let150 := (Neg.neg let149)
  let let151 := (binrel% HAdd.hAdd (binrel% HMul.hMul let150 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let150 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let150 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let150 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let150 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x1x5fplus) (binrel% HMul.hMul let150 x1x5fminus))))))))))))
  let let152 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x0x5fminus let75))))))))))
  let let153 := (binrel% HMul.hMul let150 let152)
  let let154 := (Not let35)
  let let155 := (Eq let34 let154)
  let let156 := (Eq let154 let34)
  let let157 := (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x11x5fplus) (binrel% HMul.hMul let137 x11x5fminus))
  let let158 := (binrel% HMul.hMul let42 let45)
  let let159 := (Not let7)
  let let160 := (Eq let159 let6)
  let let161 := (binrel% HMul.hMul let12 x7x5fminus)
  let let162 := (binrel% HMul.hMul let13 x7x5fplus)
  let let163 := (binrel% HAdd.hAdd let162 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 let126))))
  let let164 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let162 let161)))))))
  let let165 := (binrel% HSub.hSub x0x5fplus x0x5fminus)
  let let166 := (binrel% GE.ge let108 let3)
  let let167 := (Not let166)
  let let168 := (Not let167)
  let let169 := (Eq let168 let166)
  let let170 := (Eq let6 let6)
  let let171 := (binrel% HMul.hMul let13 x14x5fminus)
  let let172 := (binrel% HMul.hMul let12 x14x5fplus)
  let let173 := (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let172 let171)))))
  let let174 := (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let52 x3x5fminus)))))
  let let175 := (binrel% HSub.hSub x11x5fplus x11x5fminus)
  let let176 := (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x1x5fminus let28))
  let let177 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let115 let176))))))))
  let let178 := (binrel% GE.ge let173 let3)
  let let179 := (Eq let46 let46)
  let let180 := (binrel% HMul.hMul let88 let13)
  let let181 := (Eq let6 let159)
  let let182 := (binrel% HAdd.hAdd x13x5fplus let56)
  let let183 := (binrel% HSub.hSub x13x5fplus x13x5fminus)
  let let184 := (Eq let166 let168)
  let let185 := (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let78 let75))))))
  let let186 := (binrel% LT.lt let150 let9)
  let let187 := (binrel% HMul.hMul let40 let3)
  let let188 := (Int.ofNat 5)
  let let189 := (binrel% LE.le let23 let188)
  let let190 := (Eq let24 let24)
  let let191 := (binrel% LT.lt let122 let9)
  let let192 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let29 x2x5fminus)))))))))))))
  let let193 := (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x0x5fplus) (binrel% HMul.hMul let63 x0x5fminus))
  let let194 := (binrel% HMul.hMul let20 let23)
  let let195 := (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let104 let75))))))))))))))))))))))
  let let196 := (Not let84)
  let let197 := (Eq let196 let83)
  let let198 := (binrel% LE.le let33 let9)
  let let199 := (binrel% HMul.hMul let111 let12)
  let let200 := (Eq let16 let16)
  let let201 := (binrel% HMul.hMul let38 let2)
  let let202 := (binrel% LE.le let108 let13)
  let let203 := (binrel% LE.le let5 let94)
  let let204 := (Rat.ofInt 0)
  let let205 := (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x13x5fplus) (binrel% HMul.hMul let69 x13x5fminus))
  let let206 := (Rat.ofInt let5)
  let let207 := (binrel% HAdd.hAdd let206 (binrel% HAdd.hAdd let205 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let151 let157)))))))))))))
  let let208 := (binrel% GT.gt let130 let9)
  let let209 := (binrel% HSub.hSub x8x5fplus x8x5fminus)
  let let210 := (binrel% HMul.hMul let70 let182)
  let let211 := (binrel% HMul.hMul let42 let9)
  let let212 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let140 let139)))))))
  let let213 := (binrel% LE.le let45 let9)
  let let214 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x2x5fplus let104)))))))))))))
  let let215 := (Not let47)
  let let216 := (Eq let46 let215)
  let let217 := (Eq let215 let46)
  let let218 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 44) let19))
  let let219 := (Neg.neg let68)
  let let220 := (binrel% HMul.hMul let61 let219)
  let let221 := (binrel% LT.lt let111 let9)
  let let222 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x3x5fplus let14)))))))))
  let let223 := (binrel% GT.gt let88 let9)
  let let224 := (Eq let34 let34)
  let let225 := (binrel% GE.ge let163 let68)
  let let226 := (Eq let83 let83)
  let let227 := (Eq let83 let196)
  let let228 := (binrel% HMul.hMul let70 let13)
  let let229 := (Eq let166 let166)
  let let230 := (binrel% HMul.hMul let70 let9)
  let let231 := (binrel% HMul.hMul let10 let2)
  let let232 := (Not let203)
  let let233 := (binrel% GT.gt let5 let94)
  let let234 := (Eq let233 let232)
  let let235 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 48) let19))
  let let236 := (binrel% HMul.hMul let122 let94)
  let let237 := (binrel% LT.lt let108 let3)
  let let238 := (binrel% HDiv.hDiv (Int.ofNat 40) let19)
  let let239 := (Rat.ofInt 3)
  let let240 := (binrel% HAdd.hAdd let239 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let238 (binrel% HAdd.hAdd let218 (binrel% HAdd.hAdd let204 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let235 (binrel% HAdd.hAdd let204 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let149 let204)))))))))))))
  let let241 := (binrel% HMul.hMul let10 let5)
  let let242 := (binrel% HMul.hMul let150 let3)
  let let243 := (binrel% HMul.hMul let130 let9)
  let let244 := (binrel% LE.le let204 let38)
  let let245 := (binrel% HMul.hMul let20 let188)
  let let246 := (binrel% HMul.hMul let10 let94)
  let let247 := (binrel% GE.ge let183 let13)
  let let248 := (binrel% LE.le let165 let188)
  let let249 := (binrel% LE.le let175 let9)
  let let250 := (binrel% LE.le let209 let94)
  let let251 := (binrel% GE.ge let192 let12)
  let let252 := (binrel% GE.ge let214 let94)
  let let253 := (binrel% GE.ge let222 let3)
  let let254 := (binrel% GE.ge let185 let9)
  let let255 := (binrel% GE.ge let164 let68)
  let let256 := (binrel% GE.ge let174 let3)
  let let257 := (binrel% LE.le let195 let13)
  let let258 := (binrel% GE.ge let177 let3)
  let let259 := (binrel% GE.ge let212 let2)
  let let260 := (binrel% GE.ge let182 let13)
  let let261 := (binrel% GE.ge let119 let12)
  let let262 := (binrel% GE.ge let128 let94)
  let let263 := (binrel% GE.ge let57 let3)
  let let264 := (binrel% GE.ge let80 let9)
  let let265 := (binrel% GE.ge let152 let3)
  let let266 := (binrel% GE.ge let141 let2)
  let let267 := (Not let266)
  let let268 := (Not let265)
  let let269 := (Not let264)
  let let270 := (Not let263)
  let let271 := (Not let262)
  let let272 := (Not let261)
  let let273 := (Not let260)
  let let274 := (Or let46 (Or let268 (Or let267 (Or let34 (Or let271 (Or let272 (Or let166 (Or let269 (Or let83 (Or let24 (Or let16 (Or let270 (Or let273 let6)))))))))))))
  let let275 := (Or let215 (Or let268 (Or let267 (Or let154 (Or let271 (Or let272 (Or let168 (Or let269 (Or let196 (Or let143 (Or let146 (Or let270 (Or let273 let159)))))))))))))
  let let276 := (binrel% HAdd.hAdd let246 (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let187 (binrel% HAdd.hAdd let231 (binrel% HAdd.hAdd let245 (binrel% HAdd.hAdd let220 (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let199 (binrel% HAdd.hAdd let236 (binrel% HAdd.hAdd let243 (binrel% HAdd.hAdd let201 (binrel% HAdd.hAdd let242 let211)))))))))))))
  let let277 := (binrel% HAdd.hAdd let241 (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let194 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let153 let158)))))))))))))
  let let278 := (binrel% LE.le let277 let276)
  let let279 := (binrel% LE.le let158 let211)
  let let280 := (And let43 let213)
  let let281 := (binrel% LE.le let153 let242)
  let let282 := (And let186 let265)
  let let283 := (binrel% LE.le let142 let201)
  let let284 := (And let39 let266)
  let let285 := (binrel% LE.le let135 let243)
  let let286 := (And let208 let198)
  let let287 := (binrel% LE.le let129 let236)
  let let288 := (And let191 let262)
  let let289 := (binrel% LE.le let120 let199)
  let let290 := (And let221 let261)
  let let291 := (binrel% LE.le let109 let180)
  let let292 := (And let223 let202)
  let let293 := (binrel% LE.le let81 let230)
  let let294 := (And let136 let264)
  let let295 := (binrel% LE.le let66 let220)
  let let296 := (binrel% LE.le let65 let219)
  let let297 := (And let67 let296)
  let let298 := (binrel% LE.le let194 let245)
  let let299 := (And let21 let189)
  let let300 := (binrel% LE.le let60 let231)
  let let301 := (binrel% LE.le let15 let2)
  let let302 := (And let11 let301)
  let let303 := (binrel% LE.le let58 let187)
  let let304 := (And let41 let263)
  let let305 := (binrel% LE.le let210 let228)
  let let306 := (And let136 let260)
  let let307 := (binrel% LE.le let241 let246)
  let let308 := (And let11 let203)
(Eq let8 let7) → (Eq let11 True) → (Eq let18 let17) → (Eq let21 True) → (Eq let26 let25) → (Eq let36 let35) → (Eq let39 True) → (Eq let41 True) → (Eq let43 True) → (Eq let48 let47) → (Eq let58 let53) → (Eq let60 let59) → (Eq let66 let64) → (Eq let67 True) → (Eq let81 let73) → (Eq let85 let84) → (Eq let109 let93) → (Eq let120 let114) → (Eq let129 let123) → (Eq let135 let134) → (Eq let136 True) → (Eq let142 let138) → (Eq let145 let144) → let145 → (Eq let148 let147) → (Eq let153 let151) → (Eq let156 let155) → let148 → (Eq let158 let157) → let156 → let160 → (Eq let164 let163) → (Eq let165 let23) → let169 → (Eq let170 True) → (Eq let174 let173) → (Eq let175 let45) → (Eq let177 let152) → (Eq let178 let17) → (Eq let179 True) → (Eq let180 let91) → (Eq let160 let181) → (Eq let183 let182) → (Eq let169 let184) → (Eq let185 let80) → (Eq let186 True) → (Eq let187 let10) → (Eq let189 let25) → (Eq let190 True) → (Eq let191 True) → (Eq let192 let119) → (Eq let194 let193) → (Eq let195 let108) → let197 → (Eq let198 let35) → (Eq let199 let113) → (Eq let200 True) → (Eq let201 let38) → (Eq let202 let167) → (Eq let203 let7) → (Eq let207 let204) → (Eq let208 True) → (Eq let209 let5) → (Eq let210 let205) → (Eq let211 let204) → (Eq let212 let141) → (Eq let213 let47) → (Eq let214 let128) → (Eq let217 let216) → (Eq let220 let218) → (Eq let221 True) → (Eq let222 let57) → (Eq let223 True) → (Eq let224 True) → (Eq let225 let84) → (Eq let226 True) → (Eq let197 let227) → (Eq let228 let71) → (Eq let229 True) → let217 → (Eq let230 let204) → (Eq let231 let10) → let234 → (Eq let236 let235) → (Eq let237 let167) → (Eq let240 let38) → (Eq let241 let206) → (Eq let242 let149) → (Eq let243 let204) → (Eq let244 False) → (Eq let245 let238) → (Eq let246 let239) → (binrel% GE.ge x3x5fplus let9) → (binrel% GE.ge x3x5fminus let9) → (binrel% GE.ge x13x5fplus let9) → (binrel% GE.ge x13x5fminus let9) → (binrel% GE.ge x10x5fplus let9) → (binrel% GE.ge x10x5fminus let9) → (binrel% GE.ge x7x5fplus let9) → (binrel% GE.ge x7x5fminus let9) → (binrel% GE.ge x6x5fplus let9) → (binrel% GE.ge x6x5fminus let9) → (binrel% GE.ge x5x5fplus let9) → (binrel% GE.ge x5x5fminus let9) → (binrel% GE.ge x4x5fplus let9) → (binrel% GE.ge x4x5fminus let9) → (binrel% GE.ge x2x5fplus let9) → (binrel% GE.ge x2x5fminus let9) → (binrel% GE.ge x0x5fplus let9) → (binrel% GE.ge x0x5fminus let9) → (binrel% GE.ge x11x5fplus let9) → (binrel% GE.ge x11x5fminus let9) → (binrel% GE.ge x8x5fplus let9) → (binrel% GE.ge x8x5fminus let9) → (binrel% GE.ge x9x5fplus let9) → (binrel% GE.ge x9x5fminus let9) → (binrel% GE.ge x1x5fplus let9) → (binrel% GE.ge x1x5fminus let9) → (binrel% GE.ge x14x5fplus let9) → (binrel% GE.ge x14x5fminus let9) → (binrel% GE.ge x12x5fplus let9) → (binrel% GE.ge x12x5fminus let9) → (binrel% GE.ge (binrel% HSub.hSub x3x5fplus x3x5fminus) let9) → let247 → let248 → let249 → let250 → let198 → let251 → (binrel% LE.le (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x9x5fplus) (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let104 let176)))))))))) let9) → let252 → let253 → let254 → let255 → let256 → let257 → let258 → let259 → False :=
  let let1 := (Int.ofNat 4)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% HMul.hMul let3 x8x5fminus)
  let let5 := (binrel% HAdd.hAdd x8x5fplus let4)
  let let6 := (binrel% GE.ge let5 let1)
  let let7 := (Not let6)
  let let8 := (binrel% LT.lt let5 let1)
  let let9 := (Int.ofNat 0)
  let let10 := (Rat.ofInt 1)
  let let11 := (binrel% GT.gt let10 let9)
  let let12 := (Int.ofNat 2)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HMul.hMul let3 x3x5fminus)
  let let15 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x14x5fplus) (binrel% HMul.hMul let12 x14x5fminus))))))
  let let16 := (binrel% GE.ge let15 let12)
  let let17 := (Not let16)
  let let18 := (binrel% LT.lt let15 let12)
  let let19 := (Int.ofNat 17)
  let let20 := (binrel% HDiv.hDiv (Int.ofNat 8) let19)
  let let21 := (binrel% GT.gt let20 let9)
  let let22 := (Int.ofNat 6)
  let let23 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let3 x0x5fminus))
  let let24 := (binrel% GE.ge let23 let22)
  let let25 := (Not let24)
  let let26 := (binrel% LT.lt let23 let22)
  let let27 := (binrel% HMul.hMul let3 x0x5fplus)
  let let28 := (binrel% HAdd.hAdd let27 x0x5fminus)
  let let29 := (binrel% HMul.hMul let3 x2x5fplus)
  let let30 := (binrel% HMul.hMul let3 x6x5fplus)
  let let31 := (binrel% HMul.hMul let3 x7x5fplus)
  let let32 := (binrel% HMul.hMul let3 x10x5fminus)
  let let33 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x13x5fminus) (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x4x5fminus) (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x2x5fminus let28))))))))))))))
  let let34 := (binrel% GE.ge let33 let2)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt let33 let2)
  let let37 := (binrel% HDiv.hDiv let2 let19)
  let let38 := (Neg.neg let37)
  let let39 := (binrel% LT.lt let38 let9)
  let let40 := (Neg.neg let10)
  let let41 := (binrel% LT.lt let40 let9)
  let let42 := (binrel% HDiv.hDiv let12 let19)
  let let43 := (binrel% GT.gt let42 let9)
  let let44 := (binrel% HMul.hMul let3 x11x5fminus)
  let let45 := (binrel% HAdd.hAdd x11x5fplus let44)
  let let46 := (binrel% GE.ge let45 let2)
  let let47 := (Not let46)
  let let48 := (binrel% LT.lt let45 let2)
  let let49 := (binrel% HMul.hMul let3 x11x5fplus)
  let let50 := (binrel% HMul.hMul let3 x10x5fplus)
  let let51 := (binrel% HMul.hMul let3 x13x5fplus)
  let let52 := (binrel% HMul.hMul let3 x3x5fplus)
  let let53 := (Rat.ofInt (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x12x5fplus) (binrel% HMul.hMul let12 x12x5fminus)))))))))))
  let let54 := (binrel% HMul.hMul let13 x12x5fminus)
  let let55 := (binrel% HMul.hMul let12 x12x5fplus)
  let let56 := (binrel% HMul.hMul let3 x13x5fminus)
  let let57 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let55 let54)))))))))
  let let58 := (binrel% HMul.hMul let40 let57)
  let let59 := (Rat.ofInt let15)
  let let60 := (binrel% HMul.hMul let10 let15)
  let let61 := (binrel% HDiv.hDiv let1 let19)
  let let62 := (Neg.neg let61)
  let let63 := (Neg.neg let20)
  let let64 := (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let63 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x12x5fplus) (binrel% HMul.hMul let61 x12x5fminus))))))))
  let let65 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x7x5fminus) (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x14x5fplus) (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x12x5fplus) x12x5fminus)))))))
  let let66 := (binrel% HMul.hMul let61 let65)
  let let67 := (binrel% GT.gt let61 let9)
  let let68 := (Int.ofNat 11)
  let let69 := (binrel% HDiv.hDiv let68 let19)
  let let70 := (Neg.neg let69)
  let let71 := (binrel% HDiv.hDiv (Int.ofNat 22) let19)
  let let72 := (Neg.neg let71)
  let let73 := (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x1x5fplus) (binrel% HMul.hMul let70 x1x5fminus))))))))
  let let74 := (binrel% HMul.hMul let3 x1x5fplus)
  let let75 := (binrel% HAdd.hAdd let74 x1x5fminus)
  let let76 := (binrel% HMul.hMul let13 x11x5fminus)
  let let77 := (binrel% HMul.hMul let12 x11x5fplus)
  let let78 := (binrel% HMul.hMul let13 x4x5fminus)
  let let79 := (binrel% HMul.hMul let12 x4x5fplus)
  let let80 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let76 let75))))))
  let let81 := (binrel% HMul.hMul let70 let80)
  let let82 := (Neg.neg (Int.ofNat 10))
  let let83 := (binrel% GE.ge let65 let82)
  let let84 := (Not let83)
  let let85 := (binrel% LT.lt let65 let82)
  let let86 := (binrel% HDiv.hDiv (Int.ofNat 54) let19)
  let let87 := (Neg.neg let86)
  let let88 := (binrel% HDiv.hDiv (Int.ofNat 18) let19)
  let let89 := (Neg.neg let88)
  let let90 := (binrel% HDiv.hDiv (Int.ofNat 36) let19)
  let let91 := (Neg.neg let90)
  let let92 := (binrel% HDiv.hDiv (Int.ofNat 72) let19)
  let let93 := (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let92 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let92) x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let89 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let87 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x12x5fplus) (binrel% HMul.hMul let87 x12x5fminus))))))))))))))))))))))))
  let let94 := (Int.ofNat 3)
  let let95 := (Neg.neg let94)
  let let96 := (binrel% HMul.hMul let95 x12x5fminus)
  let let97 := (binrel% HMul.hMul let94 x12x5fplus)
  let let98 := (binrel% HMul.hMul let95 x14x5fminus)
  let let99 := (binrel% HMul.hMul let94 x14x5fplus)
  let let100 := (binrel% HMul.hMul let12 x8x5fminus)
  let let101 := (binrel% HMul.hMul let13 x8x5fplus)
  let let102 := (binrel% HMul.hMul let95 x11x5fminus)
  let let103 := (binrel% HMul.hMul let94 x11x5fplus)
  let let104 := (binrel% HMul.hMul let3 x2x5fminus)
  let let105 := (binrel% HMul.hMul (Neg.neg let1) x4x5fminus)
  let let106 := (binrel% HMul.hMul let1 x4x5fplus)
  let let107 := (binrel% HMul.hMul let3 x5x5fplus)
  let let108 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let97 let96)))))))))))))))))))))))
  let let109 := (binrel% HMul.hMul let88 let108)
  let let110 := (binrel% HDiv.hDiv (Int.ofNat 13) let19)
  let let111 := (Neg.neg let110)
  let let112 := (binrel% HDiv.hDiv (Int.ofNat 26) let19)
  let let113 := (Neg.neg let112)
  let let114 := (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let113 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x8x5fplus) (binrel% HMul.hMul let110 x8x5fminus))))))))))))))
  let let115 := (binrel% HMul.hMul let3 x4x5fminus)
  let let116 := (binrel% HMul.hMul let3 x5x5fminus)
  let let117 := (binrel% HMul.hMul let12 x6x5fminus)
  let let118 := (binrel% HMul.hMul let13 x6x5fplus)
  let let119 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 let5))))))))))))
  let let120 := (binrel% HMul.hMul let111 let119)
  let let121 := (binrel% HDiv.hDiv (Int.ofNat 16) let19)
  let let122 := (Neg.neg let121)
  let let123 := (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let121 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let122 x12x5fplus) (binrel% HMul.hMul let121 x12x5fminus))))))))))))))
  let let124 := (binrel% HMul.hMul let3 x12x5fminus)
  let let125 := (binrel% HMul.hMul let3 x14x5fminus)
  let let126 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd x12x5fplus let124)))
  let let127 := (binrel% HMul.hMul let3 x8x5fplus)
  let let128 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd x8x5fminus let126))))))))))
  let let129 := (binrel% HMul.hMul let122 let128)
  let let130 := (binrel% HDiv.hDiv (Int.ofNat 15) let19)
  let let131 := (Neg.neg let130)
  let let132 := (binrel% HDiv.hDiv (Int.ofNat 30) let19)
  let let133 := (Neg.neg let132)
  let let134 := (binrel% HAdd.hAdd (binrel% HMul.hMul let132 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let130 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let130 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let130 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let132 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let132 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let130 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let131 x0x5fplus) (binrel% HMul.hMul let130 x0x5fminus))))))))))))))))
  let let135 := (binrel% HMul.hMul let130 let33)
  let let136 := (binrel% LT.lt let70 let9)
  let let137 := (Neg.neg let42)
  let let138 := (binrel% HAdd.hAdd (binrel% HMul.hMul let137 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x8x5fplus) (binrel% HMul.hMul let37 x8x5fminus))))))))
  let let139 := (binrel% HMul.hMul let13 x3x5fminus)
  let let140 := (binrel% HMul.hMul let12 x3x5fplus)
  let let141 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x5x5fminus let5))))))
  let let142 := (binrel% HMul.hMul let38 let141)
  let let143 := (Not let25)
  let let144 := (Eq let24 let143)
  let let145 := (Eq let143 let24)
  let let146 := (Not let17)
  let let147 := (Eq let16 let146)
  let let148 := (Eq let146 let16)
  let let149 := (binrel% HDiv.hDiv (Int.ofNat 7) let19)
  let let150 := (Neg.neg let149)
  let let151 := (binrel% HAdd.hAdd (binrel% HMul.hMul let150 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let150 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let150 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let150 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let150 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let149 x1x5fplus) (binrel% HMul.hMul let150 x1x5fminus))))))))))))
  let let152 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x0x5fminus let75))))))))))
  let let153 := (binrel% HMul.hMul let150 let152)
  let let154 := (Not let35)
  let let155 := (Eq let34 let154)
  let let156 := (Eq let154 let34)
  let let157 := (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x11x5fplus) (binrel% HMul.hMul let137 x11x5fminus))
  let let158 := (binrel% HMul.hMul let42 let45)
  let let159 := (Not let7)
  let let160 := (Eq let159 let6)
  let let161 := (binrel% HMul.hMul let12 x7x5fminus)
  let let162 := (binrel% HMul.hMul let13 x7x5fplus)
  let let163 := (binrel% HAdd.hAdd let162 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 let126))))
  let let164 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let162 let161)))))))
  let let165 := (binrel% HSub.hSub x0x5fplus x0x5fminus)
  let let166 := (binrel% GE.ge let108 let3)
  let let167 := (Not let166)
  let let168 := (Not let167)
  let let169 := (Eq let168 let166)
  let let170 := (Eq let6 let6)
  let let171 := (binrel% HMul.hMul let13 x14x5fminus)
  let let172 := (binrel% HMul.hMul let12 x14x5fplus)
  let let173 := (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let172 let171)))))
  let let174 := (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let52 x3x5fminus)))))
  let let175 := (binrel% HSub.hSub x11x5fplus x11x5fminus)
  let let176 := (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x1x5fminus let28))
  let let177 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let115 let176))))))))
  let let178 := (binrel% GE.ge let173 let3)
  let let179 := (Eq let46 let46)
  let let180 := (binrel% HMul.hMul let88 let13)
  let let181 := (Eq let6 let159)
  let let182 := (binrel% HAdd.hAdd x13x5fplus let56)
  let let183 := (binrel% HSub.hSub x13x5fplus x13x5fminus)
  let let184 := (Eq let166 let168)
  let let185 := (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let78 let75))))))
  let let186 := (binrel% LT.lt let150 let9)
  let let187 := (binrel% HMul.hMul let40 let3)
  let let188 := (Int.ofNat 5)
  let let189 := (binrel% LE.le let23 let188)
  let let190 := (Eq let24 let24)
  let let191 := (binrel% LT.lt let122 let9)
  let let192 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let29 x2x5fminus)))))))))))))
  let let193 := (binrel% HAdd.hAdd (binrel% HMul.hMul let20 x0x5fplus) (binrel% HMul.hMul let63 x0x5fminus))
  let let194 := (binrel% HMul.hMul let20 let23)
  let let195 := (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let104 let75))))))))))))))))))))))
  let let196 := (Not let84)
  let let197 := (Eq let196 let83)
  let let198 := (binrel% LE.le let33 let9)
  let let199 := (binrel% HMul.hMul let111 let12)
  let let200 := (Eq let16 let16)
  let let201 := (binrel% HMul.hMul let38 let2)
  let let202 := (binrel% LE.le let108 let13)
  let let203 := (binrel% LE.le let5 let94)
  let let204 := (Rat.ofInt 0)
  let let205 := (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x13x5fplus) (binrel% HMul.hMul let69 x13x5fminus))
  let let206 := (Rat.ofInt let5)
  let let207 := (binrel% HAdd.hAdd let206 (binrel% HAdd.hAdd let205 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let151 let157)))))))))))))
  let let208 := (binrel% GT.gt let130 let9)
  let let209 := (binrel% HSub.hSub x8x5fplus x8x5fminus)
  let let210 := (binrel% HMul.hMul let70 let182)
  let let211 := (binrel% HMul.hMul let42 let9)
  let let212 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let140 let139)))))))
  let let213 := (binrel% LE.le let45 let9)
  let let214 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x2x5fplus let104)))))))))))))
  let let215 := (Not let47)
  let let216 := (Eq let46 let215)
  let let217 := (Eq let215 let46)
  let let218 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 44) let19))
  let let219 := (Neg.neg let68)
  let let220 := (binrel% HMul.hMul let61 let219)
  let let221 := (binrel% LT.lt let111 let9)
  let let222 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd x3x5fplus let14)))))))))
  let let223 := (binrel% GT.gt let88 let9)
  let let224 := (Eq let34 let34)
  let let225 := (binrel% GE.ge let163 let68)
  let let226 := (Eq let83 let83)
  let let227 := (Eq let83 let196)
  let let228 := (binrel% HMul.hMul let70 let13)
  let let229 := (Eq let166 let166)
  let let230 := (binrel% HMul.hMul let70 let9)
  let let231 := (binrel% HMul.hMul let10 let2)
  let let232 := (Not let203)
  let let233 := (binrel% GT.gt let5 let94)
  let let234 := (Eq let233 let232)
  let let235 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 48) let19))
  let let236 := (binrel% HMul.hMul let122 let94)
  let let237 := (binrel% LT.lt let108 let3)
  let let238 := (binrel% HDiv.hDiv (Int.ofNat 40) let19)
  let let239 := (Rat.ofInt 3)
  let let240 := (binrel% HAdd.hAdd let239 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let238 (binrel% HAdd.hAdd let218 (binrel% HAdd.hAdd let204 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let235 (binrel% HAdd.hAdd let204 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let149 let204)))))))))))))
  let let241 := (binrel% HMul.hMul let10 let5)
  let let242 := (binrel% HMul.hMul let150 let3)
  let let243 := (binrel% HMul.hMul let130 let9)
  let let244 := (binrel% LE.le let204 let38)
  let let245 := (binrel% HMul.hMul let20 let188)
  let let246 := (binrel% HMul.hMul let10 let94)
  let let247 := (binrel% GE.ge let183 let13)
  let let248 := (binrel% LE.le let165 let188)
  let let249 := (binrel% LE.le let175 let9)
  let let250 := (binrel% LE.le let209 let94)
  let let251 := (binrel% GE.ge let192 let12)
  let let252 := (binrel% GE.ge let214 let94)
  let let253 := (binrel% GE.ge let222 let3)
  let let254 := (binrel% GE.ge let185 let9)
  let let255 := (binrel% GE.ge let164 let68)
  let let256 := (binrel% GE.ge let174 let3)
  let let257 := (binrel% LE.le let195 let13)
  let let258 := (binrel% GE.ge let177 let3)
  let let259 := (binrel% GE.ge let212 let2)
  let let260 := (binrel% GE.ge let182 let13)
  let let261 := (binrel% GE.ge let119 let12)
  let let262 := (binrel% GE.ge let128 let94)
  let let263 := (binrel% GE.ge let57 let3)
  let let264 := (binrel% GE.ge let80 let9)
  let let265 := (binrel% GE.ge let152 let3)
  let let266 := (binrel% GE.ge let141 let2)
  let let267 := (Not let266)
  let let268 := (Not let265)
  let let269 := (Not let264)
  let let270 := (Not let263)
  let let271 := (Not let262)
  let let272 := (Not let261)
  let let273 := (Not let260)
  let let274 := (Or let46 (Or let268 (Or let267 (Or let34 (Or let271 (Or let272 (Or let166 (Or let269 (Or let83 (Or let24 (Or let16 (Or let270 (Or let273 let6)))))))))))))
  let let275 := (Or let215 (Or let268 (Or let267 (Or let154 (Or let271 (Or let272 (Or let168 (Or let269 (Or let196 (Or let143 (Or let146 (Or let270 (Or let273 let159)))))))))))))
  let let276 := (binrel% HAdd.hAdd let246 (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let187 (binrel% HAdd.hAdd let231 (binrel% HAdd.hAdd let245 (binrel% HAdd.hAdd let220 (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let199 (binrel% HAdd.hAdd let236 (binrel% HAdd.hAdd let243 (binrel% HAdd.hAdd let201 (binrel% HAdd.hAdd let242 let211)))))))))))))
  let let277 := (binrel% HAdd.hAdd let241 (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let194 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let153 let158)))))))))))))
  let let278 := (binrel% LE.le let277 let276)
  let let279 := (binrel% LE.le let158 let211)
  let let280 := (And let43 let213)
  let let281 := (binrel% LE.le let153 let242)
  let let282 := (And let186 let265)
  let let283 := (binrel% LE.le let142 let201)
  let let284 := (And let39 let266)
  let let285 := (binrel% LE.le let135 let243)
  let let286 := (And let208 let198)
  let let287 := (binrel% LE.le let129 let236)
  let let288 := (And let191 let262)
  let let289 := (binrel% LE.le let120 let199)
  let let290 := (And let221 let261)
  let let291 := (binrel% LE.le let109 let180)
  let let292 := (And let223 let202)
  let let293 := (binrel% LE.le let81 let230)
  let let294 := (And let136 let264)
  let let295 := (binrel% LE.le let66 let220)
  let let296 := (binrel% LE.le let65 let219)
  let let297 := (And let67 let296)
  let let298 := (binrel% LE.le let194 let245)
  let let299 := (And let21 let189)
  let let300 := (binrel% LE.le let60 let231)
  let let301 := (binrel% LE.le let15 let2)
  let let302 := (And let11 let301)
  let let303 := (binrel% LE.le let58 let187)
  let let304 := (And let41 let263)
  let let305 := (binrel% LE.le let210 let228)
  let let306 := (And let136 let260)
  let let307 := (binrel% LE.le let241 let246)
  let let308 := (And let11 let203)
fun lean_r0 : (Eq let8 let7) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let11 True) => -- EVALUATE
fun lean_r2 : (Eq let18 let17) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let21 True) => -- EVALUATE
fun lean_r4 : (Eq let26 let25) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let36 let35) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let39 True) => -- EVALUATE
fun lean_r7 : (Eq let41 True) => -- EVALUATE
fun lean_r8 : (Eq let43 True) => -- EVALUATE
fun lean_r9 : (Eq let48 let47) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let58 let53) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let60 let59) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let66 let64) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let67 True) => -- EVALUATE
fun lean_r14 : (Eq let81 let73) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let85 let84) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let109 let93) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let120 let114) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let129 let123) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let135 let134) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let136 True) => -- EVALUATE
fun lean_r21 : (Eq let142 let138) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let145 let144) => -- THEORY_REWRITE_BOOL
fun lean_r23 : let145 => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let148 let147) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq let153 let151) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let156 let155) => -- THEORY_REWRITE_BOOL
fun lean_r27 : let148 => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let158 let157) => -- THEORY_REWRITE_ARITH
fun lean_r29 : let156 => -- THEORY_REWRITE_BOOL
fun lean_r30 : let160 => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let164 let163) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let165 let23) => -- THEORY_REWRITE_ARITH
fun lean_r33 : let169 => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let170 True) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let174 let173) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let175 let45) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let177 let152) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let178 let17) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let179 True) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let180 let91) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let160 let181) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq let183 let182) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let169 let184) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let185 let80) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let186 True) => -- EVALUATE
fun lean_r46 : (Eq let187 let10) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let189 let25) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let190 True) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let191 True) => -- EVALUATE
fun lean_r50 : (Eq let192 let119) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let194 let193) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let195 let108) => -- THEORY_REWRITE_ARITH
fun lean_r53 : let197 => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let198 let35) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let199 let113) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let200 True) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq let201 let38) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let202 let167) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let203 let7) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let207 let204) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let208 True) => -- EVALUATE
fun lean_r62 : (Eq let209 let5) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let210 let205) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let211 let204) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let212 let141) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let213 let47) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let214 let128) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let217 let216) => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq let220 let218) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let221 True) => -- EVALUATE
fun lean_r71 : (Eq let222 let57) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let223 True) => -- EVALUATE
fun lean_r73 : (Eq let224 True) => -- THEORY_REWRITE_BOOL
fun lean_r74 : (Eq let225 let84) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let226 True) => -- THEORY_REWRITE_BOOL
fun lean_r76 : (Eq let197 let227) => -- THEORY_REWRITE_BOOL
fun lean_r77 : (Eq let228 let71) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let229 True) => -- THEORY_REWRITE_BOOL
fun lean_r79 : let217 => -- THEORY_REWRITE_BOOL
fun lean_r80 : (Eq let230 let204) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let231 let10) => -- THEORY_REWRITE_ARITH
fun lean_r82 : let234 => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let236 let235) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let237 let167) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let240 let38) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let241 let206) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let242 let149) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let243 let204) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let244 False) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let245 let238) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let246 let239) => -- THEORY_REWRITE_ARITH
fun lean_a92 : (binrel% GE.ge x3x5fplus let9) =>
fun lean_a93 : (binrel% GE.ge x3x5fminus let9) =>
fun lean_a94 : (binrel% GE.ge x13x5fplus let9) =>
fun lean_a95 : (binrel% GE.ge x13x5fminus let9) =>
fun lean_a96 : (binrel% GE.ge x10x5fplus let9) =>
fun lean_a97 : (binrel% GE.ge x10x5fminus let9) =>
fun lean_a98 : (binrel% GE.ge x7x5fplus let9) =>
fun lean_a99 : (binrel% GE.ge x7x5fminus let9) =>
fun lean_a100 : (binrel% GE.ge x6x5fplus let9) =>
fun lean_a101 : (binrel% GE.ge x6x5fminus let9) =>
fun lean_a102 : (binrel% GE.ge x5x5fplus let9) =>
fun lean_a103 : (binrel% GE.ge x5x5fminus let9) =>
fun lean_a104 : (binrel% GE.ge x4x5fplus let9) =>
fun lean_a105 : (binrel% GE.ge x4x5fminus let9) =>
fun lean_a106 : (binrel% GE.ge x2x5fplus let9) =>
fun lean_a107 : (binrel% GE.ge x2x5fminus let9) =>
fun lean_a108 : (binrel% GE.ge x0x5fplus let9) =>
fun lean_a109 : (binrel% GE.ge x0x5fminus let9) =>
fun lean_a110 : (binrel% GE.ge x11x5fplus let9) =>
fun lean_a111 : (binrel% GE.ge x11x5fminus let9) =>
fun lean_a112 : (binrel% GE.ge x8x5fplus let9) =>
fun lean_a113 : (binrel% GE.ge x8x5fminus let9) =>
fun lean_a114 : (binrel% GE.ge x9x5fplus let9) =>
fun lean_a115 : (binrel% GE.ge x9x5fminus let9) =>
fun lean_a116 : (binrel% GE.ge x1x5fplus let9) =>
fun lean_a117 : (binrel% GE.ge x1x5fminus let9) =>
fun lean_a118 : (binrel% GE.ge x14x5fplus let9) =>
fun lean_a119 : (binrel% GE.ge x14x5fminus let9) =>
fun lean_a120 : (binrel% GE.ge x12x5fplus let9) =>
fun lean_a121 : (binrel% GE.ge x12x5fminus let9) =>
fun lean_a122 : (binrel% GE.ge (binrel% HSub.hSub x3x5fplus x3x5fminus) let9) =>
fun lean_a123 : let247 =>
fun lean_a124 : let248 =>
fun lean_a125 : let249 =>
fun lean_a126 : let250 =>
fun lean_a127 : let198 =>
fun lean_a128 : let251 =>
fun lean_a129 : (binrel% LE.le (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x9x5fplus) (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let104 let176)))))))))) let9) =>
fun lean_a130 : let252 =>
fun lean_a131 : let253 =>
fun lean_a132 : let254 =>
fun lean_a133 : let255 =>
fun lean_a134 : let256 =>
fun lean_a135 : let257 =>
fun lean_a136 : let258 =>
fun lean_a137 : let259 => by
have lean_s0 : (Or let215 (Or let268 (Or let267 (Or let154 (Or let271 (Or let272 (Or let168 (Or let269 (Or let196 (Or let143 (Or let146 (Or let270 (Or let273 (Or let159 False)))))))))))))) :=
  (scope (fun lean_a138 : let47 =>
    (scope (fun lean_a139 : let265 =>
      (scope (fun lean_a140 : let266 =>
        (scope (fun lean_a141 : let35 =>
          (scope (fun lean_a142 : let262 =>
            (scope (fun lean_a143 : let261 =>
              (scope (fun lean_a144 : let167 =>
                (scope (fun lean_a145 : let264 =>
                  (scope (fun lean_a146 : let84 =>
                    (scope (fun lean_a147 : let25 =>
                      (scope (fun lean_a148 : let17 =>
                        (scope (fun lean_a149 : let263 =>
                          (scope (fun lean_a150 : let260 =>
                            (scope (fun lean_a151 : let7 =>
                              let lean_s0 := by timed flipCongrArg lean_r62 [LE.le]
                              have lean_s1 : (Eq let94 let94) := by timed rfl
                              have lean_s2 : (Eq let250 let203) := by timed congr lean_s0 lean_s1
                              have lean_s3 : (Eq let250 let7) := by timed Eq.trans lean_s2 lean_r59
                              have lean_s4 : let7 := by timed eqResolve lean_a126 lean_s3
                              have lean_s5 : (Eq let7 let8) := by timed Eq.symm lean_r0
                              have lean_s6 : let8 := by timed eqResolve lean_s4 lean_s5
                              have lean_s7 : let203 := by intTightUb lean_s6
                              have lean_s8 : (Or let232 False) :=
                                (scope (fun lean_a152 : let203 =>
                                  have lean_s8 : let11 := by timed trueElim lean_r1
                                  have lean_s9 : let308 := by timed And.intro lean_s8 lean_a152
                                  have lean_s10 : (Implies let308 let307) := by arithMulPos [let5, let94, let10], 1
                                  have lean_s11 : let307 := by timed modusPonens lean_s9 lean_s10
                                  have lean_s12 : let136 := by timed trueElim lean_r20
                                  let lean_s13 := by timed flipCongrArg lean_r42 [GE.ge]
                                  have lean_s14 : (Eq let13 let13) := by timed rfl
                                  have lean_s15 : (Eq let247 let260) := by timed congr lean_s13 lean_s14
                                  have lean_s16 : let260 := by timed eqResolve lean_a123 lean_s15
                                  have lean_s17 : let306 := by timed And.intro lean_s12 lean_s16
                                  have lean_s18 : (Implies let306 let305) := by arithMulNeg [let182, let13, let70], 3
                                  have lean_s19 : let305 := by timed modusPonens lean_s17 lean_s18
                                  have lean_s20 : let41 := by timed trueElim lean_r7
                                  let lean_s21 := by timed flipCongrArg lean_r71 [GE.ge]
                                  have lean_s22 : (Eq let3 let3) := by timed rfl
                                  have lean_s23 : (Eq let253 let263) := by timed congr lean_s21 lean_s22
                                  have lean_s24 : let263 := by timed eqResolve lean_a131 lean_s23
                                  have lean_s25 : let304 := by timed And.intro lean_s20 lean_s24
                                  have lean_s26 : (Implies let304 let303) := by arithMulNeg [let57, let3, let40], 3
                                  have lean_s27 : let303 := by timed modusPonens lean_s25 lean_s26
                                  let lean_s28 := by timed flipCongrArg lean_r35 [GE.ge]
                                  have lean_s29 : (Eq let256 let178) := by timed congr lean_s28 lean_s22
                                  have lean_s30 : (Eq let256 let17) := by timed Eq.trans lean_s29 lean_r38
                                  have lean_s31 : let17 := by timed eqResolve lean_a134 lean_s30
                                  have lean_s32 : (Eq let17 let18) := by timed Eq.symm lean_r2
                                  have lean_s33 : let18 := by timed eqResolve lean_s31 lean_s32
                                  have lean_s34 : let301 := by intTightUb lean_s33
                                  have lean_s35 : let302 := by timed And.intro lean_s8 lean_s34
                                  have lean_s36 : (Implies let302 let300) := by arithMulPos [let15, let2, let10], 1
                                  have lean_s37 : let300 := by timed modusPonens lean_s35 lean_s36
                                  have lean_s38 : let21 := by timed trueElim lean_r3
                                  let lean_s39 := by timed flipCongrArg lean_r32 [LE.le]
                                  have lean_s40 : (Eq let188 let188) := by timed rfl
                                  have lean_s41 : (Eq let248 let189) := by timed congr lean_s39 lean_s40
                                  have lean_s42 : (Eq let248 let25) := by timed Eq.trans lean_s41 lean_r47
                                  have lean_s43 : let25 := by timed eqResolve lean_a124 lean_s42
                                  have lean_s44 : (Eq let25 let26) := by timed Eq.symm lean_r4
                                  have lean_s45 : let26 := by timed eqResolve lean_s43 lean_s44
                                  have lean_s46 : let189 := by intTightUb lean_s45
                                  have lean_s47 : let299 := by timed And.intro lean_s38 lean_s46
                                  have lean_s48 : (Implies let299 let298) := by arithMulPos [let23, let188, let20], 1
                                  have lean_s49 : let298 := by timed modusPonens lean_s47 lean_s48
                                  have lean_s50 : let67 := by timed trueElim lean_r13
                                  let lean_s51 := by timed flipCongrArg lean_r31 [GE.ge]
                                  have lean_s52 : (Eq let68 let68) := by timed rfl
                                  have lean_s53 : (Eq let255 let225) := by timed congr lean_s51 lean_s52
                                  have lean_s54 : (Eq let255 let84) := by timed Eq.trans lean_s53 lean_r74
                                  have lean_s55 : let84 := by timed eqResolve lean_a133 lean_s54
                                  have lean_s56 : (Eq let84 let85) := by timed Eq.symm lean_r15
                                  have lean_s57 : let85 := by timed eqResolve lean_s55 lean_s56
                                  have lean_s58 : let296 := by intTightUb lean_s57
                                  have lean_s59 : let297 := by timed And.intro lean_s50 lean_s58
                                  have lean_s60 : (Implies let297 let295) := by arithMulPos [let65, let219, let61], 1
                                  have lean_s61 : let295 := by timed modusPonens lean_s59 lean_s60
                                  let lean_s62 := by timed flipCongrArg lean_r44 [GE.ge]
                                  have lean_s63 : (Eq let9 let9) := by timed rfl
                                  have lean_s64 : (Eq let254 let264) := by timed congr lean_s62 lean_s63
                                  have lean_s65 : let264 := by timed eqResolve lean_a132 lean_s64
                                  have lean_s66 : let294 := by timed And.intro lean_s12 lean_s65
                                  have lean_s67 : (Implies let294 let293) := by arithMulNeg [let80, let9, let70], 3
                                  have lean_s68 : let293 := by timed modusPonens lean_s66 lean_s67
                                  have lean_s69 : let223 := by timed trueElim lean_r72
                                  let lean_s70 := by timed flipCongrArg lean_r52 [LE.le]
                                  have lean_s71 : (Eq let257 let202) := by timed congr lean_s70 lean_s14
                                  have lean_s72 : (Eq let257 let167) := by timed Eq.trans lean_s71 lean_r58
                                  have lean_s73 : let167 := by timed eqResolve lean_a135 lean_s72
                                  have lean_s74 : (Eq let167 let237) := by timed Eq.symm lean_r84
                                  have lean_s75 : let237 := by timed eqResolve lean_s73 lean_s74
                                  have lean_s76 : let202 := by intTightUb lean_s75
                                  have lean_s77 : let292 := by timed And.intro lean_s69 lean_s76
                                  have lean_s78 : (Implies let292 let291) := by arithMulPos [let108, let13, let88], 1
                                  have lean_s79 : let291 := by timed modusPonens lean_s77 lean_s78
                                  have lean_s80 : let221 := by timed trueElim lean_r70
                                  let lean_s81 := by timed flipCongrArg lean_r50 [GE.ge]
                                  have lean_s82 : (Eq let12 let12) := by timed rfl
                                  have lean_s83 : (Eq let251 let261) := by timed congr lean_s81 lean_s82
                                  have lean_s84 : let261 := by timed eqResolve lean_a128 lean_s83
                                  have lean_s85 : let290 := by timed And.intro lean_s80 lean_s84
                                  have lean_s86 : (Implies let290 let289) := by arithMulNeg [let119, let12, let111], 3
                                  have lean_s87 : let289 := by timed modusPonens lean_s85 lean_s86
                                  have lean_s88 : let191 := by timed trueElim lean_r49
                                  let lean_s89 := by timed flipCongrArg lean_r67 [GE.ge]
                                  have lean_s90 : (Eq let252 let262) := by timed congr lean_s89 lean_s1
                                  have lean_s91 : let262 := by timed eqResolve lean_a130 lean_s90
                                  have lean_s92 : let288 := by timed And.intro lean_s88 lean_s91
                                  have lean_s93 : (Implies let288 let287) := by arithMulNeg [let128, let94, let122], 3
                                  have lean_s94 : let287 := by timed modusPonens lean_s92 lean_s93
                                  have lean_s95 : let208 := by timed trueElim lean_r61
                                  have lean_s96 : let35 := by timed eqResolve lean_a127 lean_r54
                                  have lean_s97 : (Eq let35 let36) := by timed Eq.symm lean_r5
                                  have lean_s98 : let36 := by timed eqResolve lean_s96 lean_s97
                                  have lean_s99 : let198 := by intTightUb lean_s98
                                  have lean_s100 : let286 := by timed And.intro lean_s95 lean_s99
                                  have lean_s101 : (Implies let286 let285) := by arithMulPos [let33, let9, let130], 1
                                  have lean_s102 : let285 := by timed modusPonens lean_s100 lean_s101
                                  have lean_s103 : let39 := by timed trueElim lean_r6
                                  let lean_s104 := by timed flipCongrArg lean_r65 [GE.ge]
                                  have lean_s105 : (Eq let2 let2) := by timed rfl
                                  have lean_s106 : (Eq let259 let266) := by timed congr lean_s104 lean_s105
                                  have lean_s107 : let266 := by timed eqResolve lean_a137 lean_s106
                                  have lean_s108 : let284 := by timed And.intro lean_s103 lean_s107
                                  have lean_s109 : (Implies let284 let283) := by arithMulNeg [let141, let2, let38], 3
                                  have lean_s110 : let283 := by timed modusPonens lean_s108 lean_s109
                                  have lean_s111 : let186 := by timed trueElim lean_r45
                                  let lean_s112 := by timed flipCongrArg lean_r37 [GE.ge]
                                  have lean_s113 : (Eq let258 let265) := by timed congr lean_s112 lean_s22
                                  have lean_s114 : let265 := by timed eqResolve lean_a136 lean_s113
                                  have lean_s115 : let282 := by timed And.intro lean_s111 lean_s114
                                  have lean_s116 : (Implies let282 let281) := by arithMulNeg [let152, let3, let150], 3
                                  have lean_s117 : let281 := by timed modusPonens lean_s115 lean_s116
                                  have lean_s118 : let43 := by timed trueElim lean_r8
                                  let lean_s119 := by timed flipCongrArg lean_r36 [LE.le]
                                  have lean_s120 : (Eq let249 let213) := by timed congr lean_s119 lean_s63
                                  have lean_s121 : (Eq let249 let47) := by timed Eq.trans lean_s120 lean_r66
                                  have lean_s122 : let47 := by timed eqResolve lean_a125 lean_s121
                                  have lean_s123 : (Eq let47 let48) := by timed Eq.symm lean_r9
                                  have lean_s124 : let48 := by timed eqResolve lean_s122 lean_s123
                                  have lean_s125 : let213 := by intTightUb lean_s124
                                  have lean_s126 : let280 := by timed And.intro lean_s118 lean_s125
                                  have lean_s127 : (Implies let280 let279) := by arithMulPos [let45, let9, let42], 1
                                  have lean_s128 : let279 := by timed modusPonens lean_s126 lean_s127
                                  have lean_s129 : let278 := by sumBounds [lean_s11, lean_s19, lean_s27, lean_s37, lean_s49, lean_s61, lean_s68, lean_s79, lean_s87, lean_s94, lean_s102, lean_s110, lean_s117, lean_s128]
                                  let lean_s130 := by timed congrHAdd lean_r25 lean_r28
                                  let lean_s131 := by timed congrHAdd lean_r21 lean_s130
                                  let lean_s132 := by timed congrHAdd lean_r19 lean_s131
                                  let lean_s133 := by timed congrHAdd lean_r18 lean_s132
                                  let lean_s134 := by timed congrHAdd lean_r17 lean_s133
                                  let lean_s135 := by timed congrHAdd lean_r16 lean_s134
                                  let lean_s136 := by timed congrHAdd lean_r14 lean_s135
                                  let lean_s137 := by timed congrHAdd lean_r12 lean_s136
                                  let lean_s138 := by timed congrHAdd lean_r51 lean_s137
                                  let lean_s139 := by timed congrHAdd lean_r11 lean_s138
                                  let lean_s140 := by timed congrHAdd lean_r10 lean_s139
                                  let lean_s141 := by timed congrHAdd lean_r63 lean_s140
                                  have lean_s142 : (Eq let277 let207) := by timed congrHAdd lean_r86 lean_s141
                                  have lean_s143 : (Eq let277 let204) := by timed Eq.trans lean_s142 lean_r60
                                  let lean_s144 := by timed flipCongrArg lean_s143 [LE.le]
                                  let lean_s145 := by timed congrHAdd lean_r87 lean_r64
                                  let lean_s146 := by timed congrHAdd lean_r57 lean_s145
                                  let lean_s147 := by timed congrHAdd lean_r88 lean_s146
                                  let lean_s148 := by timed congrHAdd lean_r83 lean_s147
                                  let lean_s149 := by timed congrHAdd lean_r55 lean_s148
                                  let lean_s150 := by timed congrHAdd lean_r40 lean_s149
                                  let lean_s151 := by timed congrHAdd lean_r80 lean_s150
                                  let lean_s152 := by timed congrHAdd lean_r69 lean_s151
                                  let lean_s153 := by timed congrHAdd lean_r90 lean_s152
                                  let lean_s154 := by timed congrHAdd lean_r81 lean_s153
                                  let lean_s155 := by timed congrHAdd lean_r46 lean_s154
                                  let lean_s156 := by timed congrHAdd lean_r77 lean_s155
                                  have lean_s157 : (Eq let276 let240) := by timed congrHAdd lean_r91 lean_s156
                                  have lean_s158 : (Eq let276 let38) := by timed Eq.trans lean_s157 lean_r85
                                  have lean_s159 : (Eq let278 let244) := by timed congr lean_s144 lean_s158
                                  have lean_s160 : (Eq let278 False) := by timed Eq.trans lean_s159 lean_r89
                                  show False from by timed eqResolve lean_s129 lean_s160
                                ))
                              have lean_s9 : let232 := by liftOrNToNeg lean_s8
                              have lean_s10 : (Eq let232 let159) := by timed flipCongrArg lean_r59 [Not]
                              have lean_s11 : (Eq let232 let6) := by timed Eq.trans lean_s10 lean_r30
                              have lean_s12 : (Eq let233 let6) := by timed Eq.trans lean_r82 lean_s11
                              have lean_s13 : (Eq let6 let233) := by timed Eq.symm lean_s12
                              have lean_s14 : (Eq let232 let233) := by timed Eq.trans lean_s11 lean_s13
                              have lean_s15 : let233 := by timed eqResolve lean_s9 lean_s14
                              have lean_s16 : (Eq let6 let232) := by timed Eq.symm lean_s11
                              have lean_s17 : let234 := by timed Eq.trans lean_s12 lean_s16
                              have lean_s18 : let232 := by timed eqResolve lean_s15 lean_s17
                              show False from by timed contradiction lean_s7 lean_s18
  ))))))))))))))))))))))))))))
have lean_s1 : (Not (And let47 (And let265 (And let266 (And let35 (And let262 (And let261 (And let167 (And let264 (And let84 (And let25 (And let17 (And let263 (And let260 let7)))))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let275 := by timed flipNotAnd lean_s1 [let47, let265, let266, let35, let262, let261, let167, let264, let84, let25, let17, let263, let260, let7]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let179 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let216 let179) := by timed congr lean_s5 lean_r79
have lean_s7 : (Eq let216 True) := by timed Eq.trans lean_s6 lean_r39
have lean_s8 : (Eq let217 True) := by timed Eq.trans lean_r68 lean_s7
have lean_s9 : let217 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq let268 let268) := by timed rfl
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq let267 let267) := by timed rfl
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : let224 := by timed rfl
let lean_s16 := by timed flipCongrArg lean_s15 [Eq]
have lean_s17 : (Eq let155 let224) := by timed congr lean_s16 lean_r29
have lean_s18 : (Eq let155 True) := by timed Eq.trans lean_s17 lean_r73
have lean_s19 : (Eq let156 True) := by timed Eq.trans lean_r26 lean_s18
have lean_s20 : let156 := by timed trueElim lean_s19
let lean_s21 := by timed congr lean_s3 lean_s20
have lean_s22 : (Eq let271 let271) := by timed rfl
let lean_s23 := by timed congr lean_s3 lean_s22
have lean_s24 : (Eq let272 let272) := by timed rfl
let lean_s25 := by timed congr lean_s3 lean_s24
have lean_s26 : let229 := by timed rfl
let lean_s27 := by timed flipCongrArg lean_s26 [Eq]
have lean_s28 : (Eq let184 let229) := by timed congr lean_s27 lean_r33
have lean_s29 : (Eq let184 True) := by timed Eq.trans lean_s28 lean_r78
have lean_s30 : (Eq let169 True) := by timed Eq.trans lean_r43 lean_s29
have lean_s31 : let169 := by timed trueElim lean_s30
let lean_s32 := by timed congr lean_s3 lean_s31
have lean_s33 : (Eq let269 let269) := by timed rfl
let lean_s34 := by timed congr lean_s3 lean_s33
have lean_s35 : let226 := by timed rfl
let lean_s36 := by timed flipCongrArg lean_s35 [Eq]
have lean_s37 : (Eq let227 let226) := by timed congr lean_s36 lean_r53
have lean_s38 : (Eq let227 True) := by timed Eq.trans lean_s37 lean_r75
have lean_s39 : (Eq let197 True) := by timed Eq.trans lean_r76 lean_s38
have lean_s40 : let197 := by timed trueElim lean_s39
let lean_s41 := by timed congr lean_s3 lean_s40
have lean_s42 : let190 := by timed rfl
let lean_s43 := by timed flipCongrArg lean_s42 [Eq]
have lean_s44 : (Eq let144 let190) := by timed congr lean_s43 lean_r23
have lean_s45 : (Eq let144 True) := by timed Eq.trans lean_s44 lean_r48
have lean_s46 : (Eq let145 True) := by timed Eq.trans lean_r22 lean_s45
have lean_s47 : let145 := by timed trueElim lean_s46
let lean_s48 := by timed congr lean_s3 lean_s47
have lean_s49 : let200 := by timed rfl
let lean_s50 := by timed flipCongrArg lean_s49 [Eq]
have lean_s51 : (Eq let147 let200) := by timed congr lean_s50 lean_r27
have lean_s52 : (Eq let147 True) := by timed Eq.trans lean_s51 lean_r56
have lean_s53 : (Eq let148 True) := by timed Eq.trans lean_r24 lean_s52
have lean_s54 : let148 := by timed trueElim lean_s53
let lean_s55 := by timed congr lean_s3 lean_s54
have lean_s56 : (Eq let270 let270) := by timed rfl
let lean_s57 := by timed congr lean_s3 lean_s56
have lean_s58 : (Eq let273 let273) := by timed rfl
let lean_s59 := by timed congr lean_s3 lean_s58
have lean_s60 : let170 := by timed rfl
let lean_s61 := by timed flipCongrArg lean_s60 [Eq]
have lean_s62 : (Eq let181 let170) := by timed congr lean_s61 lean_r30
have lean_s63 : (Eq let181 True) := by timed Eq.trans lean_s62 lean_r34
have lean_s64 : (Eq let160 True) := by timed Eq.trans lean_r41 lean_s63
have lean_s65 : let160 := by timed trueElim lean_s64
let lean_s66 := by timed congr lean_s59 lean_s65
let lean_s67 := by timed congr lean_s57 lean_s66
let lean_s68 := by timed congr lean_s55 lean_s67
let lean_s69 := by timed congr lean_s48 lean_s68
let lean_s70 := by timed congr lean_s41 lean_s69
let lean_s71 := by timed congr lean_s34 lean_s70
let lean_s72 := by timed congr lean_s32 lean_s71
let lean_s73 := by timed congr lean_s25 lean_s72
let lean_s74 := by timed congr lean_s23 lean_s73
let lean_s75 := by timed congr lean_s21 lean_s74
let lean_s76 := by timed congr lean_s14 lean_s75
let lean_s77 := by timed congr lean_s12 lean_s76
have lean_s78 : (Eq let275 let274) := by timed congr lean_s10 lean_s77
have lean_s79 : let274 := by timed eqResolve lean_s2 lean_s78
have lean_s80 : (Or let24 (Or let46 (Or let6 (Or let34 (Or let83 (Or let16 (Or let166 (Or let273 (Or let272 (Or let271 (Or let270 (Or let269 (Or let268 let267))))))))))))) := by permutateOr lean_s79, [9, 0, 13, 3, 8, 10, 6, 12, 5, 4, 11, 7, 1, 2], (- 1)
let lean_s81 := by timed flipCongrArg lean_r65 [GE.ge]
have lean_s82 : (Eq let2 let2) := by timed rfl
have lean_s83 : (Eq let259 let266) := by timed congr lean_s81 lean_s82
have lean_s84 : let266 := by timed eqResolve lean_a137 lean_s83
let lean_s85 := by R2 lean_s80, lean_s84, let266, [(- 1), 0]
let lean_s86 := by timed flipCongrArg lean_r37 [GE.ge]
have lean_s87 : (Eq let3 let3) := by timed rfl
have lean_s88 : (Eq let258 let265) := by timed congr lean_s86 lean_s87
have lean_s89 : let265 := by timed eqResolve lean_a136 lean_s88
let lean_s90 := by R2 lean_s85, lean_s89, let265, [(- 1), 0]
let lean_s91 := by timed flipCongrArg lean_r52 [LE.le]
have lean_s92 : (Eq let13 let13) := by timed rfl
have lean_s93 : (Eq let257 let202) := by timed congr lean_s91 lean_s92
have lean_s94 : (Eq let257 let167) := by timed Eq.trans lean_s93 lean_r58
have lean_s95 : let167 := by timed eqResolve lean_a135 lean_s94
let lean_s96 := by R1 lean_s90, lean_s95, let166, [(- 1), 0]
let lean_s97 := by timed flipCongrArg lean_r35 [GE.ge]
have lean_s98 : (Eq let256 let178) := by timed congr lean_s97 lean_s87
have lean_s99 : (Eq let256 let17) := by timed Eq.trans lean_s98 lean_r38
have lean_s100 : let17 := by timed eqResolve lean_a134 lean_s99
let lean_s101 := by R1 lean_s96, lean_s100, let16, [(- 1), 0]
let lean_s102 := by timed flipCongrArg lean_r31 [GE.ge]
have lean_s103 : (Eq let68 let68) := by timed rfl
have lean_s104 : (Eq let255 let225) := by timed congr lean_s102 lean_s103
have lean_s105 : (Eq let255 let84) := by timed Eq.trans lean_s104 lean_r74
have lean_s106 : let84 := by timed eqResolve lean_a133 lean_s105
let lean_s107 := by R1 lean_s101, lean_s106, let83, [(- 1), 0]
let lean_s108 := by timed flipCongrArg lean_r44 [GE.ge]
have lean_s109 : (Eq let9 let9) := by timed rfl
have lean_s110 : (Eq let254 let264) := by timed congr lean_s108 lean_s109
have lean_s111 : let264 := by timed eqResolve lean_a132 lean_s110
let lean_s112 := by R2 lean_s107, lean_s111, let264, [(- 1), 0]
let lean_s113 := by timed flipCongrArg lean_r71 [GE.ge]
have lean_s114 : (Eq let253 let263) := by timed congr lean_s113 lean_s87
have lean_s115 : let263 := by timed eqResolve lean_a131 lean_s114
let lean_s116 := by R2 lean_s112, lean_s115, let263, [(- 1), 0]
let lean_s117 := by timed flipCongrArg lean_r67 [GE.ge]
have lean_s118 : (Eq let94 let94) := by timed rfl
have lean_s119 : (Eq let252 let262) := by timed congr lean_s117 lean_s118
have lean_s120 : let262 := by timed eqResolve lean_a130 lean_s119
let lean_s121 := by R2 lean_s116, lean_s120, let262, [(- 1), 0]
let lean_s122 := by timed flipCongrArg lean_r50 [GE.ge]
have lean_s123 : (Eq let12 let12) := by timed rfl
have lean_s124 : (Eq let251 let261) := by timed congr lean_s122 lean_s123
have lean_s125 : let261 := by timed eqResolve lean_a128 lean_s124
let lean_s126 := by R2 lean_s121, lean_s125, let261, [(- 1), 0]
have lean_s127 : let35 := by timed eqResolve lean_a127 lean_r54
let lean_s128 := by R1 lean_s126, lean_s127, let34, [(- 1), 0]
let lean_s129 := by timed flipCongrArg lean_r62 [LE.le]
have lean_s130 : (Eq let250 let203) := by timed congr lean_s129 lean_s118
have lean_s131 : (Eq let250 let7) := by timed Eq.trans lean_s130 lean_r59
have lean_s132 : let7 := by timed eqResolve lean_a126 lean_s131
let lean_s133 := by R1 lean_s128, lean_s132, let6, [(- 1), 0]
let lean_s134 := by timed flipCongrArg lean_r36 [LE.le]
have lean_s135 : (Eq let249 let213) := by timed congr lean_s134 lean_s109
have lean_s136 : (Eq let249 let47) := by timed Eq.trans lean_s135 lean_r66
have lean_s137 : let47 := by timed eqResolve lean_a125 lean_s136
let lean_s138 := by R1 lean_s133, lean_s137, let46, [(- 1), 0]
let lean_s139 := by timed flipCongrArg lean_r32 [LE.le]
have lean_s140 : (Eq let188 let188) := by timed rfl
have lean_s141 : (Eq let248 let189) := by timed congr lean_s139 lean_s140
have lean_s142 : (Eq let248 let25) := by timed Eq.trans lean_s141 lean_r47
have lean_s143 : let25 := by timed eqResolve lean_a124 lean_s142
let lean_s144 := by R1 lean_s138, lean_s143, let24, [(- 1), 0]
let lean_s145 := by timed flipCongrArg lean_r42 [GE.ge]
have lean_s146 : (Eq let247 let260) := by timed congr lean_s145 lean_s92
have lean_s147 : let260 := by timed eqResolve lean_a123 lean_s146
exact (show False from by R2 lean_s144, lean_s147, let260, [0, 0])


