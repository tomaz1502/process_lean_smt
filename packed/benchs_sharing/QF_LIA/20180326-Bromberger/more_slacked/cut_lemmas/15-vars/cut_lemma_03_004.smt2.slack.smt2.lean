open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x11x5fminus : Int}
variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x11x5fplus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x10x5fplus : Int}
variable {x10x5fplus : Int}
variable {x10x5fminus : Int}
variable {x13x5fplus : Int}
variable {x1x5fplus : Int}
variable {x1x5fminus : Int}
variable {x9x5fplus : Int}
variable {x12x5fplus : Int}
variable {x12x5fminus : Int}
variable {x11x5fplus : Int}
variable {x11x5fminus : Int}
variable {x14x5fminus : Int}
variable {x6x5fplus : Int}
variable {x6x5fminus : Int}
variable {x9x5fminus : Int}
variable {x13x5fplus : Int}
variable {x14x5fplus : Int}
variable {x2x5fminus : Int}
variable {x13x5fminus : Int}
variable {x2x5fplus : Int}
variable {x7x5fminus : Int}
variable {x12x5fminus : Int}
variable {x9x5fminus : Int}
variable {x13x5fminus : Int}
variable {x9x5fplus : Int}
variable {x4x5fminus : Int}
variable {x10x5fminus : Int}
variable {x2x5fplus : Int}
variable {x14x5fminus : Int}
variable {x7x5fplus : Int}
variable {x2x5fminus : Int}
variable {x8x5fplus : Int}
variable {x14x5fplus : Int}
variable {x6x5fminus : Int}
variable {x8x5fminus : Int}
variable {x12x5fplus : Int}
variable {x4x5fplus : Int}
variable {x8x5fplus : Int}
variable {x3x5fplus : Int}
variable {x4x5fminus : Int}
variable {x4x5fplus : Int}
variable {x7x5fminus : Int}
variable {x7x5fplus : Int}
variable {x8x5fminus : Int}
variable {x6x5fplus : Int}
variable {x1x5fminus : Int}
variable {x1x5fplus : Int}
variable {x0x5fminus : Int}
variable {x0x5fplus : Int}
variable {x5x5fminus : Int}
variable {x5x5fplus : Int}
variable {x3x5fminus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (binrel% GT.gt let2 let1)
  let let6 := (Int.ofNat 7)
  let let7 := (Int.ofNat 5)
  let let8 := (binrel% HDiv.hDiv let7 let6)
  let let9 := (binrel% GT.gt let8 let1)
  let let10 := (binrel% HDiv.hDiv (Int.ofNat 18) let6)
  let let11 := (binrel% GT.gt let10 let1)
  let let12 := (Int.ofNat 1)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HMul.hMul let13 x2x5fminus)
  let let15 := (binrel% HAdd.hAdd x2x5fplus let14)
  let let16 := (binrel% HMul.hMul let13 x0x5fminus)
  let let17 := (binrel% HMul.hMul let13 x3x5fplus)
  let let18 := (binrel% HMul.hMul let13 x5x5fminus)
  let let19 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let16 let15))))))
  let let20 := (binrel% GE.ge let19 let12)
  let let21 := (Not let20)
  let let22 := (binrel% LT.lt let19 let12)
  let let23 := (binrel% HDiv.hDiv (Int.ofNat 19) let6)
  let let24 := (binrel% GT.gt let23 let1)
  let let25 := (binrel% HMul.hMul let13 x2x5fplus)
  let let26 := (binrel% HAdd.hAdd let25 x2x5fminus)
  let let27 := (binrel% HMul.hMul let13 x7x5fplus)
  let let28 := (binrel% HMul.hMul let13 x10x5fminus)
  let let29 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 let26))))))
  let let30 := (binrel% GE.ge let29 let12)
  let let31 := (Not let30)
  let let32 := (binrel% LT.lt let29 let12)
  let let33 := (Int.ofNat 14)
  let let34 := (binrel% HDiv.hDiv (Int.ofNat 31) let33)
  let let35 := (binrel% GT.gt let34 let1)
  let let36 := (binrel% HMul.hMul let13 x8x5fminus)
  let let37 := (binrel% HMul.hMul let13 x12x5fminus)
  let let38 := (binrel% HMul.hMul let13 x14x5fminus)
  let let39 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x0x5fplus) x0x5fminus)))))))
  let let40 := (binrel% GE.ge let39 let12)
  let let41 := (Not let40)
  let let42 := (binrel% LT.lt let39 let12)
  let let43 := (Int.ofNat 2)
  let let44 := (Neg.neg let43)
  let let45 := (binrel% HMul.hMul let44 x9x5fminus)
  let let46 := (binrel% HMul.hMul let43 x9x5fplus)
  let let47 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x14x5fplus) (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let45 let26)))))
  let let48 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x9x5fminus) let15))))
  let let49 := (binrel% HMul.hMul let3 let48)
  let let50 := (binrel% HMul.hMul let13 x6x5fminus)
  let let51 := (binrel% HMul.hMul let13 x4x5fminus)
  let let52 := (binrel% HMul.hMul let44 x0x5fminus)
  let let53 := (binrel% HMul.hMul let43 x0x5fplus)
  let let54 := (binrel% HMul.hMul let13 x8x5fplus)
  let let55 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fplus let50)))))))))))
  let let56 := (Rat.ofInt let55)
  let let57 := (binrel% HMul.hMul let2 let55)
  let let58 := (Int.ofNat 37)
  let let59 := (binrel% HDiv.hDiv let58 let33)
  let let60 := (Neg.neg let59)
  let let61 := (binrel% HDiv.hDiv let58 let6)
  let let62 := (Neg.neg let61)
  let let63 := (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x1x5fplus) (binrel% HMul.hMul let60 x1x5fminus))))))))))))
  let let64 := (binrel% HMul.hMul let13 x1x5fplus)
  let let65 := (binrel% HAdd.hAdd let64 x1x5fminus)
  let let66 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let51 let65))
  let let67 := (binrel% HMul.hMul let13 x9x5fplus)
  let let68 := (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x12x5fminus) (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x7x5fminus) let66))))))))
  let let69 := (binrel% HMul.hMul let60 let68)
  let let70 := (binrel% HDiv.hDiv (Int.ofNat 20) let6)
  let let71 := (Neg.neg let70)
  let let72 := (binrel% LT.lt let71 let1)
  let let73 := (Neg.neg let8)
  let let74 := (binrel% HDiv.hDiv (Int.ofNat 10) let6)
  let let75 := (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let74) x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x1x5fplus) (binrel% HMul.hMul let8 x1x5fminus))))))))))
  let let76 := (binrel% HMul.hMul let43 x4x5fminus)
  let let77 := (binrel% HMul.hMul let44 x4x5fplus)
  let let78 := (binrel% HMul.hMul let13 x9x5fminus)
  let let79 := (binrel% HMul.hMul let13 x11x5fminus)
  let let80 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let76 let65))))))))
  let let81 := (binrel% HMul.hMul let8 let80)
  let let82 := (binrel% HDiv.hDiv (Int.ofNat 8) let6)
  let let83 := (Neg.neg let82)
  let let84 := (binrel% HDiv.hDiv (Int.ofNat 4) let6)
  let let85 := (Neg.neg let84)
  let let86 := (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x4x5fplus) (binrel% HMul.hMul let83 x4x5fminus))))))))))
  let let87 := (binrel% HMul.hMul let13 x7x5fminus)
  let let88 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x13x5fplus) (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let77 let76)))))))))
  let let89 := (binrel% HMul.hMul let85 let88)
  let let90 := (binrel% HDiv.hDiv (Int.ofNat 6) let6)
  let let91 := (Neg.neg let90)
  let let92 := (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x0x5fplus) (binrel% HMul.hMul let91 x0x5fminus))))))))))))
  let let93 := (binrel% HAdd.hAdd x0x5fplus let16)
  let let94 := (binrel% HMul.hMul let13 x13x5fminus)
  let let95 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x3x5fminus) let93))))))))))
  let let96 := (binrel% HMul.hMul let90 let95)
  let let97 := (binrel% HDiv.hDiv let12 let6)
  let let98 := (Neg.neg let97)
  let let99 := (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x2x5fplus) (binrel% HMul.hMul let98 x2x5fminus))))))))))))
  let let100 := (binrel% HMul.hMul let13 x6x5fplus)
  let let101 := (binrel% HMul.hMul let13 x12x5fplus)
  let let102 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd x6x5fminus let26))))))))))
  let let103 := (binrel% HMul.hMul let98 let102)
  let let104 := (Neg.neg let23)
  let let105 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x1x5fplus) (binrel% HMul.hMul let23 x1x5fminus))))))))))))
  let let106 := (binrel% HMul.hMul let13 x10x5fplus)
  let let107 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let87 let66))))))))
  let let108 := (binrel% HMul.hMul let23 let107)
  let let109 := (binrel% HDiv.hDiv (Int.ofNat 11) let33)
  let let110 := (Neg.neg let109)
  let let111 := (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x2x5fplus) (binrel% HMul.hMul let110 x2x5fminus))))))))))))))))
  let let112 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x1x5fminus let26))))))))))))))
  let let113 := (binrel% HMul.hMul let110 let112)
  let let114 := (binrel% HDiv.hDiv let7 let43)
  let let115 := (Neg.neg let114)
  let let116 := (binrel% HAdd.hAdd (binrel% HMul.hMul let114 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let114 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let114 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x2x5fplus) (binrel% HMul.hMul let114 x2x5fminus))))))))
  let let117 := (binrel% HMul.hMul let114 let29)
  let let118 := (binrel% HDiv.hDiv (Int.ofNat 3) let6)
  let let119 := (Neg.neg let118)
  let let120 := (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let119 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let119 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let119 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let119 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let119 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x0x5fplus) (binrel% HMul.hMul let119 x0x5fminus))))))))))))
  let let121 := (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x11x5fplus) (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x5x5fplus) (binrel% HAdd.hAdd x5x5fminus let93))))))))))
  let let122 := (binrel% HMul.hMul let118 let121)
  let let123 := (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x6x5fplus) (binrel% HMul.hMul let82 x6x5fminus))))))))))
  let let124 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let100 x6x5fminus)))))))))
  let let125 := (binrel% HMul.hMul let82 let124)
  let let126 := (Neg.neg let34)
  let let127 := (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x0x5fplus) (binrel% HMul.hMul let34 x0x5fminus))))))))
  let let128 := (binrel% HMul.hMul let34 let39)
  let let129 := (Rat.ofInt 0)
  let let130 := (binrel% HMul.hMul let3 let1)
  let let131 := (binrel% HMul.hMul let60 let12)
  let let132 := (binrel% HMul.hMul let8 let1)
  let let133 := (binrel% GT.gt let118 let1)
  let let134 := (binrel% HMul.hMul let43 x10x5fminus)
  let let135 := (binrel% HMul.hMul let44 x10x5fplus)
  let let136 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x8x5fplus let36)))))))))
  let let137 := (binrel% GE.ge let136 let43)
  let let138 := (Not let137)
  let let139 := (Not let138)
  let let140 := (Eq let139 let137)
  let let141 := (binrel% GE.ge let55 let12)
  let let142 := (Not let141)
  let let143 := (Not let142)
  let let144 := (Eq let143 let141)
  let let145 := (Not let31)
  let let146 := (Eq let145 let30)
  let let147 := (binrel% GE.ge let121 let1)
  let let148 := (Not let147)
  let let149 := (binrel% LT.lt let121 let1)
  let let150 := (Eq let137 let137)
  let let151 := (Eq let30 let30)
  let let152 := (Not let21)
  let let153 := (Eq let152 let20)
  let let154 := (Not let148)
  let let155 := (Eq let154 let147)
  let let156 := (binrel% GE.ge let80 let12)
  let let157 := (Not let156)
  let let158 := (Not let157)
  let let159 := (Eq let158 let156)
  let let160 := (Eq let20 let20)
  let let161 := (Eq let147 let147)
  let let162 := (Eq let156 let156)
  let let163 := (binrel% GE.ge let107 let1)
  let let164 := (Eq let163 let163)
  let let165 := (Eq let141 let141)
  let let166 := (Not let163)
  let let167 := (binrel% LE.le let107 let13)
  let let168 := (binrel% HMul.hMul let114 let1)
  let let169 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let14 let93))))))
  let let170 := (Eq let40 let40)
  let let171 := (binrel% GE.ge let124 let1)
  let let172 := (Not let171)
  let let173 := (binrel% LT.lt let124 let1)
  let let174 := (binrel% HMul.hMul let23 let13)
  let let175 := (binrel% LT.lt let60 let1)
  let let176 := (Eq let137 let139)
  let let177 := (Eq let141 let143)
  let let178 := (Eq let30 let145)
  let let179 := (Not let166)
  let let180 := (Eq let179 let163)
  let let181 := (binrel% LE.le let129 let98)
  let let182 := (binrel% LE.le let121 let13)
  let let183 := (binrel% LT.lt let107 let1)
  let let184 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x1x5fminus let93))))))))))))))
  let let185 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let17 x3x5fminus)))))))))
  let let186 := (Int.ofNat 17)
  let let187 := (binrel% HDiv.hDiv let186 let33)
  let let188 := (Neg.neg let187)
  let let189 := (binrel% HDiv.hDiv let186 let6)
  let let190 := (binrel% HAdd.hAdd (binrel% HMul.hMul let187 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let188 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let187 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let188 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let189) x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let189 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let188 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let187 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let187 x8x5fplus) (binrel% HMul.hMul let188 x8x5fminus))))))))))
  let let191 := (binrel% HDiv.hDiv (Int.ofNat 40) let6)
  let let192 := (Neg.neg let191)
  let let193 := (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let191 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let192 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let192 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let191 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let192 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let191 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let192 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let191 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let192 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let191 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x0x5fplus) (binrel% HMul.hMul let70 x0x5fminus))))))))))))))))))))))
  let let194 := (Neg.neg let10)
  let let195 := (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let194 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let194 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let194 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x2x5fplus) (binrel% HMul.hMul let194 x2x5fminus))))))))
  let let196 := (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let195 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let123 let127)))))))))))))))
  let let197 := (binrel% GE.ge let48 let1)
  let let198 := (Not let197)
  let let199 := (binrel% LT.lt let48 let1)
  let let200 := (Eq let20 let152)
  let let201 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let53 let52)))))))))))
  let let202 := (binrel% LT.lt let80 let12)
  let let203 := (binrel% GE.ge let95 let12)
  let let204 := (Not let203)
  let let205 := (binrel% LE.le let95 let1)
  let let206 := (binrel% HMul.hMul let85 let1)
  let let207 := (binrel% LE.le let124 let13)
  let let208 := (binrel% LT.lt let55 let12)
  let let209 := (binrel% GT.gt let114 let1)
  let let210 := (binrel% LE.le let29 let1)
  let let211 := (binrel% HMul.hMul let187 let136)
  let let212 := (Eq let171 let171)
  let let213 := (Eq let156 let158)
  let let214 := (binrel% LE.le let39 let1)
  let let215 := (Eq let163 let179)
  let let216 := (binrel% HMul.hMul let2 let1)
  let let217 := (binrel% LE.le let136 let12)
  let let218 := (binrel% LT.lt let110 let1)
  let let219 := (binrel% LE.le let19 let1)
  let let220 := (binrel% LT.lt let98 let1)
  let let221 := (Eq let147 let154)
  let let222 := (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let187 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let83 let129)))))))))))))))
  let let223 := (binrel% LT.lt let136 let43)
  let let224 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x5x5fminus) (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fminus let93))))))))))))))))))))
  let let225 := (binrel% HMul.hMul let71 let224)
  let let226 := (Not let172)
  let let227 := (Eq let226 let171)
  let let228 := (binrel% GT.gt let187 let1)
  let let229 := (binrel% HMul.hMul let10 let19)
  let let230 := (Eq let171 let226)
  let let231 := (Not let41)
  let let232 := (Eq let231 let40)
  let let233 := (binrel% GT.gt let82 let1)
  let let234 := (binrel% HMul.hMul let98 let12)
  let let235 := (Eq let40 let231)
  let let236 := (binrel% HMul.hMul let187 let12)
  let let237 := (binrel% LT.lt let95 let12)
  let let238 := (Eq let203 let203)
  let let239 := (binrel% HMul.hMul let34 let1)
  let let240 := (binrel% GT.gt let90 let1)
  let let241 := (Not let204)
  let let242 := (Eq let241 let203)
  let let243 := (binrel% HMul.hMul let82 let13)
  let let244 := (binrel% LE.le let55 let1)
  let let245 := (Eq let203 let241)
  let let246 := (binrel% HMul.hMul let118 let13)
  let let247 := (binrel% LT.lt let85 let1)
  let let248 := (binrel% HMul.hMul let110 let1)
  let let249 := (binrel% HMul.hMul let71 let44)
  let let250 := (binrel% LE.le let80 let1)
  let let251 := (binrel% HMul.hMul let10 let1)
  let let252 := (binrel% HMul.hMul let90 let1)
  let let253 := (binrel% GE.ge let224 let44)
  let let254 := (binrel% LE.le let201 let1)
  let let255 := (binrel% LE.le let185 let13)
  let let256 := (binrel% LE.le let169 let1)
  let let257 := (binrel% GE.ge let184 let1)
  let let258 := (binrel% GE.ge let68 let12)
  let let259 := (binrel% GE.ge let102 let12)
  let let260 := (binrel% GE.ge let88 let1)
  let let261 := (binrel% GE.ge let112 let1)
  let let262 := (Not let260)
  let let263 := (Not let259)
  let let264 := (Not let258)
  let let265 := (Not let261)
  let let266 := (Not let253)
  let let267 := (Or let40 (Or let171 (Or let147 (Or let30 (Or let265 (Or let163 (Or let263 (Or let137 (Or let266 (Or let20 (Or let203 (Or let262 (Or let156 (Or let264 (Or let141 let198)))))))))))))))
  let let268 := (Or let231 (Or let226 (Or let154 (Or let145 (Or let265 (Or let179 (Or let263 (Or let139 (Or let266 (Or let152 (Or let241 (Or let262 (Or let158 (Or let264 (Or let143 let198)))))))))))))))
  let let269 := (Or let198 False)
  let let270 := (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let216 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let206 (binrel% HAdd.hAdd let252 (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let236 (binrel% HAdd.hAdd let234 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let248 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let246 (binrel% HAdd.hAdd let243 let239)))))))))))))))
  let let271 := (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let225 (binrel% HAdd.hAdd let211 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let125 let128)))))))))))))))
  let let272 := (binrel% LE.le let271 let270)
  let let273 := (binrel% LE.le let128 let239)
  let let274 := (And let35 let214)
  let let275 := (binrel% LE.le let125 let243)
  let let276 := (And let233 let207)
  let let277 := (binrel% LE.le let122 let246)
  let let278 := (And let133 let182)
  let let279 := (binrel% LE.le let117 let168)
  let let280 := (And let209 let210)
  let let281 := (binrel% LE.le let113 let248)
  let let282 := (And let218 let261)
  let let283 := (binrel% LE.le let108 let174)
  let let284 := (And let24 let167)
  let let285 := (binrel% LE.le let103 let234)
  let let286 := (And let220 let259)
  let let287 := (binrel% LE.le let211 let236)
  let let288 := (And let228 let217)
  let let289 := (binrel% LE.le let225 let249)
  let let290 := (And let72 let253)
  let let291 := (binrel% LE.le let229 let251)
  let let292 := (And let11 let219)
  let let293 := (binrel% LE.le let96 let252)
  let let294 := (And let240 let205)
  let let295 := (binrel% LE.le let89 let206)
  let let296 := (And let247 let260)
  let let297 := (binrel% LE.le let81 let132)
  let let298 := (And let9 let250)
  let let299 := (binrel% LE.le let69 let131)
  let let300 := (And let175 let258)
  let let301 := (binrel% LE.le let57 let216)
  let let302 := (And let5 let244)
  let let303 := (binrel% LE.le let49 let130)
  let let304 := (And let4 let197)
(Eq let4 True) → (Eq let5 True) → (Eq let9 True) → (Eq let11 True) → (Eq let22 let21) → (Eq let24 True) → (Eq let32 let31) → (Eq let35 True) → (Eq let42 let41) → (Eq let49 let47) → (Eq let57 let56) → (Eq let69 let63) → (Eq let72 True) → (Eq let81 let75) → (Eq let89 let86) → (Eq let96 let92) → (Eq let103 let99) → (Eq let108 let105) → (Eq let113 let111) → (Eq let117 let116) → (Eq let122 let120) → (Eq let125 let123) → (Eq let128 let127) → (Eq let130 let129) → (Eq let131 let60) → (Eq let132 let129) → (Eq let133 True) → let140 → let144 → let146 → (Eq let149 let148) → (Eq let150 True) → (Eq let151 True) → let153 → let155 → let159 → (Eq let160 True) → (Eq let161 True) → (Eq let162 True) → (Eq let164 True) → (Eq let165 True) → (Eq let167 let166) → (Eq let168 let129) → (Eq let169 let19) → (Eq let170 True) → (Eq let173 let172) → (Eq let174 let104) → (Eq let175 True) → (Eq let140 let176) → (Eq let144 let177) → (Eq let146 let178) → let180 → (Eq let181 False) → (Eq let182 let148) → (Eq let183 let166) → (Eq let184 let112) → (Eq let185 let124) → (Eq let196 let129) → (Eq let199 let198) → (Eq let153 let200) → (Eq let201 let55) → (Eq let202 let157) → (Eq let205 let204) → (Eq let206 let129) → (Eq let207 let172) → (Eq let208 let142) → (Eq let209 True) → (Eq let210 let31) → (Eq let211 let190) → (Eq let212 True) → (Eq let159 let213) → (Eq let214 let41) → (Eq let180 let215) → (Eq let216 let129) → (Eq let217 let138) → (Eq let218 True) → (Eq let219 let21) → (Eq let220 True) → (Eq let155 let221) → (Eq let222 let98) → (Eq let223 let138) → (Eq let225 let193) → let227 → (Eq let228 True) → (Eq let229 let195) → (Eq let227 let230) → let232 → (Eq let233 True) → (Eq let234 let98) → (Eq let232 let235) → (Eq let236 let187) → (Eq let237 let204) → (Eq let238 True) → (Eq let239 let129) → (Eq let240 True) → let242 → (Eq let243 let83) → (Eq let244 let142) → (Eq let242 let245) → (Eq let246 let119) → (Eq let247 True) → (Eq let248 let129) → (Eq let249 let191) → (Eq let250 let157) → (Eq let251 let129) → (Eq let252 let129) → (binrel% GE.ge x14x5fplus let1) → (binrel% GE.ge x14x5fminus let1) → (binrel% GE.ge x13x5fplus let1) → (binrel% GE.ge x13x5fminus let1) → (binrel% GE.ge x12x5fplus let1) → (binrel% GE.ge x12x5fminus let1) → (binrel% GE.ge x11x5fplus let1) → (binrel% GE.ge x11x5fminus let1) → (binrel% GE.ge x10x5fplus let1) → (binrel% GE.ge x10x5fminus let1) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → let253 → let167 → let182 → let254 → let205 → let250 → let255 → let217 → let210 → let214 → let256 → let257 → let258 → let259 → let260 → let197 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (binrel% GT.gt let2 let1)
  let let6 := (Int.ofNat 7)
  let let7 := (Int.ofNat 5)
  let let8 := (binrel% HDiv.hDiv let7 let6)
  let let9 := (binrel% GT.gt let8 let1)
  let let10 := (binrel% HDiv.hDiv (Int.ofNat 18) let6)
  let let11 := (binrel% GT.gt let10 let1)
  let let12 := (Int.ofNat 1)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HMul.hMul let13 x2x5fminus)
  let let15 := (binrel% HAdd.hAdd x2x5fplus let14)
  let let16 := (binrel% HMul.hMul let13 x0x5fminus)
  let let17 := (binrel% HMul.hMul let13 x3x5fplus)
  let let18 := (binrel% HMul.hMul let13 x5x5fminus)
  let let19 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let16 let15))))))
  let let20 := (binrel% GE.ge let19 let12)
  let let21 := (Not let20)
  let let22 := (binrel% LT.lt let19 let12)
  let let23 := (binrel% HDiv.hDiv (Int.ofNat 19) let6)
  let let24 := (binrel% GT.gt let23 let1)
  let let25 := (binrel% HMul.hMul let13 x2x5fplus)
  let let26 := (binrel% HAdd.hAdd let25 x2x5fminus)
  let let27 := (binrel% HMul.hMul let13 x7x5fplus)
  let let28 := (binrel% HMul.hMul let13 x10x5fminus)
  let let29 := (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 let26))))))
  let let30 := (binrel% GE.ge let29 let12)
  let let31 := (Not let30)
  let let32 := (binrel% LT.lt let29 let12)
  let let33 := (Int.ofNat 14)
  let let34 := (binrel% HDiv.hDiv (Int.ofNat 31) let33)
  let let35 := (binrel% GT.gt let34 let1)
  let let36 := (binrel% HMul.hMul let13 x8x5fminus)
  let let37 := (binrel% HMul.hMul let13 x12x5fminus)
  let let38 := (binrel% HMul.hMul let13 x14x5fminus)
  let let39 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x0x5fplus) x0x5fminus)))))))
  let let40 := (binrel% GE.ge let39 let12)
  let let41 := (Not let40)
  let let42 := (binrel% LT.lt let39 let12)
  let let43 := (Int.ofNat 2)
  let let44 := (Neg.neg let43)
  let let45 := (binrel% HMul.hMul let44 x9x5fminus)
  let let46 := (binrel% HMul.hMul let43 x9x5fplus)
  let let47 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x14x5fplus) (binrel% HAdd.hAdd x14x5fminus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let45 let26)))))
  let let48 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x9x5fminus) let15))))
  let let49 := (binrel% HMul.hMul let3 let48)
  let let50 := (binrel% HMul.hMul let13 x6x5fminus)
  let let51 := (binrel% HMul.hMul let13 x4x5fminus)
  let let52 := (binrel% HMul.hMul let44 x0x5fminus)
  let let53 := (binrel% HMul.hMul let43 x0x5fplus)
  let let54 := (binrel% HMul.hMul let13 x8x5fplus)
  let let55 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fplus let50)))))))))))
  let let56 := (Rat.ofInt let55)
  let let57 := (binrel% HMul.hMul let2 let55)
  let let58 := (Int.ofNat 37)
  let let59 := (binrel% HDiv.hDiv let58 let33)
  let let60 := (Neg.neg let59)
  let let61 := (binrel% HDiv.hDiv let58 let6)
  let let62 := (Neg.neg let61)
  let let63 := (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x1x5fplus) (binrel% HMul.hMul let60 x1x5fminus))))))))))))
  let let64 := (binrel% HMul.hMul let13 x1x5fplus)
  let let65 := (binrel% HAdd.hAdd let64 x1x5fminus)
  let let66 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let51 let65))
  let let67 := (binrel% HMul.hMul let13 x9x5fplus)
  let let68 := (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x12x5fminus) (binrel% HAdd.hAdd x10x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x7x5fminus) let66))))))))
  let let69 := (binrel% HMul.hMul let60 let68)
  let let70 := (binrel% HDiv.hDiv (Int.ofNat 20) let6)
  let let71 := (Neg.neg let70)
  let let72 := (binrel% LT.lt let71 let1)
  let let73 := (Neg.neg let8)
  let let74 := (binrel% HDiv.hDiv (Int.ofNat 10) let6)
  let let75 := (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let74) x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x1x5fplus) (binrel% HMul.hMul let8 x1x5fminus))))))))))
  let let76 := (binrel% HMul.hMul let43 x4x5fminus)
  let let77 := (binrel% HMul.hMul let44 x4x5fplus)
  let let78 := (binrel% HMul.hMul let13 x9x5fminus)
  let let79 := (binrel% HMul.hMul let13 x11x5fminus)
  let let80 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let76 let65))))))))
  let let81 := (binrel% HMul.hMul let8 let80)
  let let82 := (binrel% HDiv.hDiv (Int.ofNat 8) let6)
  let let83 := (Neg.neg let82)
  let let84 := (binrel% HDiv.hDiv (Int.ofNat 4) let6)
  let let85 := (Neg.neg let84)
  let let86 := (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x4x5fplus) (binrel% HMul.hMul let83 x4x5fminus))))))))))
  let let87 := (binrel% HMul.hMul let13 x7x5fminus)
  let let88 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x13x5fplus) (binrel% HAdd.hAdd x13x5fminus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let77 let76)))))))))
  let let89 := (binrel% HMul.hMul let85 let88)
  let let90 := (binrel% HDiv.hDiv (Int.ofNat 6) let6)
  let let91 := (Neg.neg let90)
  let let92 := (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let91 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x0x5fplus) (binrel% HMul.hMul let91 x0x5fminus))))))))))))
  let let93 := (binrel% HAdd.hAdd x0x5fplus let16)
  let let94 := (binrel% HMul.hMul let13 x13x5fminus)
  let let95 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x3x5fminus) let93))))))))))
  let let96 := (binrel% HMul.hMul let90 let95)
  let let97 := (binrel% HDiv.hDiv let12 let6)
  let let98 := (Neg.neg let97)
  let let99 := (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let98 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let97 x2x5fplus) (binrel% HMul.hMul let98 x2x5fminus))))))))))))
  let let100 := (binrel% HMul.hMul let13 x6x5fplus)
  let let101 := (binrel% HMul.hMul let13 x12x5fplus)
  let let102 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd x6x5fminus let26))))))))))
  let let103 := (binrel% HMul.hMul let98 let102)
  let let104 := (Neg.neg let23)
  let let105 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let104 x1x5fplus) (binrel% HMul.hMul let23 x1x5fminus))))))))))))
  let let106 := (binrel% HMul.hMul let13 x10x5fplus)
  let let107 := (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let87 let66))))))))
  let let108 := (binrel% HMul.hMul let23 let107)
  let let109 := (binrel% HDiv.hDiv (Int.ofNat 11) let33)
  let let110 := (Neg.neg let109)
  let let111 := (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x2x5fplus) (binrel% HMul.hMul let110 x2x5fminus))))))))))))))))
  let let112 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x1x5fminus let26))))))))))))))
  let let113 := (binrel% HMul.hMul let110 let112)
  let let114 := (binrel% HDiv.hDiv let7 let43)
  let let115 := (Neg.neg let114)
  let let116 := (binrel% HAdd.hAdd (binrel% HMul.hMul let114 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let114 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let114 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 x2x5fplus) (binrel% HMul.hMul let114 x2x5fminus))))))))
  let let117 := (binrel% HMul.hMul let114 let29)
  let let118 := (binrel% HDiv.hDiv (Int.ofNat 3) let6)
  let let119 := (Neg.neg let118)
  let let120 := (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let119 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let119 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let119 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let119 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let119 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let118 x0x5fplus) (binrel% HMul.hMul let119 x0x5fminus))))))))))))
  let let121 := (binrel% HAdd.hAdd x12x5fplus (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x11x5fplus) (binrel% HAdd.hAdd x11x5fminus (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd x10x5fminus (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x5x5fplus) (binrel% HAdd.hAdd x5x5fminus let93))))))))))
  let let122 := (binrel% HMul.hMul let118 let121)
  let let123 := (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x6x5fplus) (binrel% HMul.hMul let82 x6x5fminus))))))))))
  let let124 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let100 x6x5fminus)))))))))
  let let125 := (binrel% HMul.hMul let82 let124)
  let let126 := (Neg.neg let34)
  let let127 := (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x0x5fplus) (binrel% HMul.hMul let34 x0x5fminus))))))))
  let let128 := (binrel% HMul.hMul let34 let39)
  let let129 := (Rat.ofInt 0)
  let let130 := (binrel% HMul.hMul let3 let1)
  let let131 := (binrel% HMul.hMul let60 let12)
  let let132 := (binrel% HMul.hMul let8 let1)
  let let133 := (binrel% GT.gt let118 let1)
  let let134 := (binrel% HMul.hMul let43 x10x5fminus)
  let let135 := (binrel% HMul.hMul let44 x10x5fplus)
  let let136 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x8x5fplus let36)))))))))
  let let137 := (binrel% GE.ge let136 let43)
  let let138 := (Not let137)
  let let139 := (Not let138)
  let let140 := (Eq let139 let137)
  let let141 := (binrel% GE.ge let55 let12)
  let let142 := (Not let141)
  let let143 := (Not let142)
  let let144 := (Eq let143 let141)
  let let145 := (Not let31)
  let let146 := (Eq let145 let30)
  let let147 := (binrel% GE.ge let121 let1)
  let let148 := (Not let147)
  let let149 := (binrel% LT.lt let121 let1)
  let let150 := (Eq let137 let137)
  let let151 := (Eq let30 let30)
  let let152 := (Not let21)
  let let153 := (Eq let152 let20)
  let let154 := (Not let148)
  let let155 := (Eq let154 let147)
  let let156 := (binrel% GE.ge let80 let12)
  let let157 := (Not let156)
  let let158 := (Not let157)
  let let159 := (Eq let158 let156)
  let let160 := (Eq let20 let20)
  let let161 := (Eq let147 let147)
  let let162 := (Eq let156 let156)
  let let163 := (binrel% GE.ge let107 let1)
  let let164 := (Eq let163 let163)
  let let165 := (Eq let141 let141)
  let let166 := (Not let163)
  let let167 := (binrel% LE.le let107 let13)
  let let168 := (binrel% HMul.hMul let114 let1)
  let let169 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let14 let93))))))
  let let170 := (Eq let40 let40)
  let let171 := (binrel% GE.ge let124 let1)
  let let172 := (Not let171)
  let let173 := (binrel% LT.lt let124 let1)
  let let174 := (binrel% HMul.hMul let23 let13)
  let let175 := (binrel% LT.lt let60 let1)
  let let176 := (Eq let137 let139)
  let let177 := (Eq let141 let143)
  let let178 := (Eq let30 let145)
  let let179 := (Not let166)
  let let180 := (Eq let179 let163)
  let let181 := (binrel% LE.le let129 let98)
  let let182 := (binrel% LE.le let121 let13)
  let let183 := (binrel% LT.lt let107 let1)
  let let184 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x1x5fminus let93))))))))))))))
  let let185 := (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let17 x3x5fminus)))))))))
  let let186 := (Int.ofNat 17)
  let let187 := (binrel% HDiv.hDiv let186 let33)
  let let188 := (Neg.neg let187)
  let let189 := (binrel% HDiv.hDiv let186 let6)
  let let190 := (binrel% HAdd.hAdd (binrel% HMul.hMul let187 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let188 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let187 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let188 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let189) x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let189 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let188 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let187 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let187 x8x5fplus) (binrel% HMul.hMul let188 x8x5fminus))))))))))
  let let191 := (binrel% HDiv.hDiv (Int.ofNat 40) let6)
  let let192 := (Neg.neg let191)
  let let193 := (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x14x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x14x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x13x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x13x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x12x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x12x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x11x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x11x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let191 x10x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let192 x10x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let192 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let191 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let192 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let191 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let192 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let191 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let192 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let191 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x0x5fplus) (binrel% HMul.hMul let70 x0x5fminus))))))))))))))))))))))
  let let194 := (Neg.neg let10)
  let let195 := (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let194 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let194 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let194 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x2x5fplus) (binrel% HMul.hMul let194 x2x5fminus))))))))
  let let196 := (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let195 (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let123 let127)))))))))))))))
  let let197 := (binrel% GE.ge let48 let1)
  let let198 := (Not let197)
  let let199 := (binrel% LT.lt let48 let1)
  let let200 := (Eq let20 let152)
  let let201 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let53 let52)))))))))))
  let let202 := (binrel% LT.lt let80 let12)
  let let203 := (binrel% GE.ge let95 let12)
  let let204 := (Not let203)
  let let205 := (binrel% LE.le let95 let1)
  let let206 := (binrel% HMul.hMul let85 let1)
  let let207 := (binrel% LE.le let124 let13)
  let let208 := (binrel% LT.lt let55 let12)
  let let209 := (binrel% GT.gt let114 let1)
  let let210 := (binrel% LE.le let29 let1)
  let let211 := (binrel% HMul.hMul let187 let136)
  let let212 := (Eq let171 let171)
  let let213 := (Eq let156 let158)
  let let214 := (binrel% LE.le let39 let1)
  let let215 := (Eq let163 let179)
  let let216 := (binrel% HMul.hMul let2 let1)
  let let217 := (binrel% LE.le let136 let12)
  let let218 := (binrel% LT.lt let110 let1)
  let let219 := (binrel% LE.le let19 let1)
  let let220 := (binrel% LT.lt let98 let1)
  let let221 := (Eq let147 let154)
  let let222 := (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let187 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let83 let129)))))))))))))))
  let let223 := (binrel% LT.lt let136 let43)
  let let224 := (binrel% HAdd.hAdd x14x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x13x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x12x5fminus (binrel% HAdd.hAdd x11x5fplus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x5x5fminus) (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fminus let93))))))))))))))))))))
  let let225 := (binrel% HMul.hMul let71 let224)
  let let226 := (Not let172)
  let let227 := (Eq let226 let171)
  let let228 := (binrel% GT.gt let187 let1)
  let let229 := (binrel% HMul.hMul let10 let19)
  let let230 := (Eq let171 let226)
  let let231 := (Not let41)
  let let232 := (Eq let231 let40)
  let let233 := (binrel% GT.gt let82 let1)
  let let234 := (binrel% HMul.hMul let98 let12)
  let let235 := (Eq let40 let231)
  let let236 := (binrel% HMul.hMul let187 let12)
  let let237 := (binrel% LT.lt let95 let12)
  let let238 := (Eq let203 let203)
  let let239 := (binrel% HMul.hMul let34 let1)
  let let240 := (binrel% GT.gt let90 let1)
  let let241 := (Not let204)
  let let242 := (Eq let241 let203)
  let let243 := (binrel% HMul.hMul let82 let13)
  let let244 := (binrel% LE.le let55 let1)
  let let245 := (Eq let203 let241)
  let let246 := (binrel% HMul.hMul let118 let13)
  let let247 := (binrel% LT.lt let85 let1)
  let let248 := (binrel% HMul.hMul let110 let1)
  let let249 := (binrel% HMul.hMul let71 let44)
  let let250 := (binrel% LE.le let80 let1)
  let let251 := (binrel% HMul.hMul let10 let1)
  let let252 := (binrel% HMul.hMul let90 let1)
  let let253 := (binrel% GE.ge let224 let44)
  let let254 := (binrel% LE.le let201 let1)
  let let255 := (binrel% LE.le let185 let13)
  let let256 := (binrel% LE.le let169 let1)
  let let257 := (binrel% GE.ge let184 let1)
  let let258 := (binrel% GE.ge let68 let12)
  let let259 := (binrel% GE.ge let102 let12)
  let let260 := (binrel% GE.ge let88 let1)
  let let261 := (binrel% GE.ge let112 let1)
  let let262 := (Not let260)
  let let263 := (Not let259)
  let let264 := (Not let258)
  let let265 := (Not let261)
  let let266 := (Not let253)
  let let267 := (Or let40 (Or let171 (Or let147 (Or let30 (Or let265 (Or let163 (Or let263 (Or let137 (Or let266 (Or let20 (Or let203 (Or let262 (Or let156 (Or let264 (Or let141 let198)))))))))))))))
  let let268 := (Or let231 (Or let226 (Or let154 (Or let145 (Or let265 (Or let179 (Or let263 (Or let139 (Or let266 (Or let152 (Or let241 (Or let262 (Or let158 (Or let264 (Or let143 let198)))))))))))))))
  let let269 := (Or let198 False)
  let let270 := (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let216 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let206 (binrel% HAdd.hAdd let252 (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let236 (binrel% HAdd.hAdd let234 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let248 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let246 (binrel% HAdd.hAdd let243 let239)))))))))))))))
  let let271 := (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let225 (binrel% HAdd.hAdd let211 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let125 let128)))))))))))))))
  let let272 := (binrel% LE.le let271 let270)
  let let273 := (binrel% LE.le let128 let239)
  let let274 := (And let35 let214)
  let let275 := (binrel% LE.le let125 let243)
  let let276 := (And let233 let207)
  let let277 := (binrel% LE.le let122 let246)
  let let278 := (And let133 let182)
  let let279 := (binrel% LE.le let117 let168)
  let let280 := (And let209 let210)
  let let281 := (binrel% LE.le let113 let248)
  let let282 := (And let218 let261)
  let let283 := (binrel% LE.le let108 let174)
  let let284 := (And let24 let167)
  let let285 := (binrel% LE.le let103 let234)
  let let286 := (And let220 let259)
  let let287 := (binrel% LE.le let211 let236)
  let let288 := (And let228 let217)
  let let289 := (binrel% LE.le let225 let249)
  let let290 := (And let72 let253)
  let let291 := (binrel% LE.le let229 let251)
  let let292 := (And let11 let219)
  let let293 := (binrel% LE.le let96 let252)
  let let294 := (And let240 let205)
  let let295 := (binrel% LE.le let89 let206)
  let let296 := (And let247 let260)
  let let297 := (binrel% LE.le let81 let132)
  let let298 := (And let9 let250)
  let let299 := (binrel% LE.le let69 let131)
  let let300 := (And let175 let258)
  let let301 := (binrel% LE.le let57 let216)
  let let302 := (And let5 let244)
  let let303 := (binrel% LE.le let49 let130)
  let let304 := (And let4 let197)
fun lean_r0 : (Eq let4 True) => -- EVALUATE
fun lean_r1 : (Eq let5 True) => -- EVALUATE
fun lean_r2 : (Eq let9 True) => -- EVALUATE
fun lean_r3 : (Eq let11 True) => -- EVALUATE
fun lean_r4 : (Eq let22 let21) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let24 True) => -- EVALUATE
fun lean_r6 : (Eq let32 let31) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let35 True) => -- EVALUATE
fun lean_r8 : (Eq let42 let41) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let49 let47) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let57 let56) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let69 let63) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let72 True) => -- EVALUATE
fun lean_r13 : (Eq let81 let75) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let89 let86) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let96 let92) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let103 let99) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let108 let105) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let113 let111) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let117 let116) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let122 let120) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let125 let123) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let128 let127) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let130 let129) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let131 let60) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let132 let129) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let133 True) => -- EVALUATE
fun lean_r27 : let140 => -- THEORY_REWRITE_BOOL
fun lean_r28 : let144 => -- THEORY_REWRITE_BOOL
fun lean_r29 : let146 => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq let149 let148) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let150 True) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let151 True) => -- THEORY_REWRITE_BOOL
fun lean_r33 : let153 => -- THEORY_REWRITE_BOOL
fun lean_r34 : let155 => -- THEORY_REWRITE_BOOL
fun lean_r35 : let159 => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let160 True) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq let161 True) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq let162 True) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq let164 True) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let165 True) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let167 let166) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let168 let129) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let169 let19) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let170 True) => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq let173 let172) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let174 let104) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let175 True) => -- EVALUATE
fun lean_r48 : (Eq let140 let176) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let144 let177) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq let146 let178) => -- THEORY_REWRITE_BOOL
fun lean_r51 : let180 => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let181 False) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let182 let148) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let183 let166) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let184 let112) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let185 let124) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let196 let129) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let199 let198) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let153 let200) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let201 let55) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let202 let157) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let205 let204) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let206 let129) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let207 let172) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let208 let142) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let209 True) => -- EVALUATE
fun lean_r67 : (Eq let210 let31) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let211 let190) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let212 True) => -- THEORY_REWRITE_BOOL
fun lean_r70 : (Eq let159 let213) => -- THEORY_REWRITE_BOOL
fun lean_r71 : (Eq let214 let41) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let180 let215) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let216 let129) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let217 let138) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let218 True) => -- EVALUATE
fun lean_r76 : (Eq let219 let21) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let220 True) => -- EVALUATE
fun lean_r78 : (Eq let155 let221) => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq let222 let98) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let223 let138) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let225 let193) => -- THEORY_REWRITE_ARITH
fun lean_r82 : let227 => -- THEORY_REWRITE_BOOL
fun lean_r83 : (Eq let228 True) => -- EVALUATE
fun lean_r84 : (Eq let229 let195) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let227 let230) => -- THEORY_REWRITE_BOOL
fun lean_r86 : let232 => -- THEORY_REWRITE_BOOL
fun lean_r87 : (Eq let233 True) => -- EVALUATE
fun lean_r88 : (Eq let234 let98) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let232 let235) => -- THEORY_REWRITE_BOOL
fun lean_r90 : (Eq let236 let187) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let237 let204) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let238 True) => -- THEORY_REWRITE_BOOL
fun lean_r93 : (Eq let239 let129) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let240 True) => -- EVALUATE
fun lean_r95 : let242 => -- THEORY_REWRITE_BOOL
fun lean_r96 : (Eq let243 let83) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let244 let142) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let242 let245) => -- THEORY_REWRITE_BOOL
fun lean_r99 : (Eq let246 let119) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let247 True) => -- EVALUATE
fun lean_r101 : (Eq let248 let129) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let249 let191) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let250 let157) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let251 let129) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let252 let129) => -- THEORY_REWRITE_ARITH
fun lean_a106 : (binrel% GE.ge x14x5fplus let1) =>
fun lean_a107 : (binrel% GE.ge x14x5fminus let1) =>
fun lean_a108 : (binrel% GE.ge x13x5fplus let1) =>
fun lean_a109 : (binrel% GE.ge x13x5fminus let1) =>
fun lean_a110 : (binrel% GE.ge x12x5fplus let1) =>
fun lean_a111 : (binrel% GE.ge x12x5fminus let1) =>
fun lean_a112 : (binrel% GE.ge x11x5fplus let1) =>
fun lean_a113 : (binrel% GE.ge x11x5fminus let1) =>
fun lean_a114 : (binrel% GE.ge x10x5fplus let1) =>
fun lean_a115 : (binrel% GE.ge x10x5fminus let1) =>
fun lean_a116 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a117 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a118 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a119 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a120 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a121 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a122 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a123 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a124 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a125 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a126 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a127 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a128 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a129 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a130 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a131 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a132 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a133 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a134 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a135 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a136 : let253 =>
fun lean_a137 : let167 =>
fun lean_a138 : let182 =>
fun lean_a139 : let254 =>
fun lean_a140 : let205 =>
fun lean_a141 : let250 =>
fun lean_a142 : let255 =>
fun lean_a143 : let217 =>
fun lean_a144 : let210 =>
fun lean_a145 : let214 =>
fun lean_a146 : let256 =>
fun lean_a147 : let257 =>
fun lean_a148 : let258 =>
fun lean_a149 : let259 =>
fun lean_a150 : let260 =>
fun lean_a151 : let197 => by
have lean_s0 : (Or let231 (Or let226 (Or let154 (Or let145 (Or let265 (Or let179 (Or let263 (Or let139 (Or let266 (Or let152 (Or let241 (Or let262 (Or let158 (Or let264 (Or let143 let269))))))))))))))) :=
  (scope (fun lean_a152 : let41 =>
    (scope (fun lean_a153 : let172 =>
      (scope (fun lean_a154 : let148 =>
        (scope (fun lean_a155 : let31 =>
          (scope (fun lean_a156 : let261 =>
            (scope (fun lean_a157 : let166 =>
              (scope (fun lean_a158 : let259 =>
                (scope (fun lean_a159 : let138 =>
                  (scope (fun lean_a160 : let253 =>
                    (scope (fun lean_a161 : let21 =>
                      (scope (fun lean_a162 : let204 =>
                        (scope (fun lean_a163 : let260 =>
                          (scope (fun lean_a164 : let157 =>
                            (scope (fun lean_a165 : let258 =>
                              (scope (fun lean_a166 : let142 =>
                                (scope (fun lean_a167 : let197 =>
                                  have lean_s0 : let269 :=
                                    (scope (fun lean_a163 : let197 =>
                                      have lean_s0 : let4 := by timed trueElim lean_r0
                                      have lean_s1 : let304 := by timed And.intro lean_s0 lean_a163
                                      have lean_s2 : (Implies let304 let303) := by arithMulNeg [let48, let1, let3], 3
                                      have lean_s3 : let303 := by timed modusPonens lean_s1 lean_s2
                                      have lean_s4 : let5 := by timed trueElim lean_r1
                                      let lean_s5 := by timed flipCongrArg lean_r60 [LE.le]
                                      have lean_s6 : (Eq let1 let1) := by timed rfl
                                      have lean_s7 : (Eq let254 let244) := by timed congr lean_s5 lean_s6
                                      have lean_s8 : (Eq let254 let142) := by timed Eq.trans lean_s7 lean_r97
                                      have lean_s9 : let142 := by timed eqResolve lean_a139 lean_s8
                                      have lean_s10 : (Eq let142 let208) := by timed Eq.symm lean_r65
                                      have lean_s11 : let208 := by timed eqResolve lean_s9 lean_s10
                                      have lean_s12 : let244 := by intTightUb lean_s11
                                      have lean_s13 : let302 := by timed And.intro lean_s4 lean_s12
                                      have lean_s14 : (Implies let302 let301) := by arithMulPos [let55, let1, let2], 1
                                      have lean_s15 : let301 := by timed modusPonens lean_s13 lean_s14
                                      have lean_s16 : let175 := by timed trueElim lean_r47
                                      have lean_s17 : let300 := by timed And.intro lean_s16 lean_a165
                                      have lean_s18 : (Implies let300 let299) := by arithMulNeg [let68, let12, let60], 3
                                      have lean_s19 : let299 := by timed modusPonens lean_s17 lean_s18
                                      have lean_s20 : let9 := by timed trueElim lean_r2
                                      have lean_s21 : let157 := by timed eqResolve lean_a141 lean_r103
                                      have lean_s22 : (Eq let157 let202) := by timed Eq.symm lean_r61
                                      have lean_s23 : let202 := by timed eqResolve lean_s21 lean_s22
                                      have lean_s24 : let250 := by intTightUb lean_s23
                                      have lean_s25 : let298 := by timed And.intro lean_s20 lean_s24
                                      have lean_s26 : (Implies let298 let297) := by arithMulPos [let80, let1, let8], 1
                                      have lean_s27 : let297 := by timed modusPonens lean_s25 lean_s26
                                      have lean_s28 : let247 := by timed trueElim lean_r100
                                      have lean_s29 : let296 := by timed And.intro lean_s28 lean_a163
                                      have lean_s30 : (Implies let296 let295) := by arithMulNeg [let88, let1, let85], 3
                                      have lean_s31 : let295 := by timed modusPonens lean_s29 lean_s30
                                      have lean_s32 : let240 := by timed trueElim lean_r94
                                      have lean_s33 : let204 := by timed eqResolve lean_a140 lean_r62
                                      have lean_s34 : (Eq let204 let237) := by timed Eq.symm lean_r91
                                      have lean_s35 : let237 := by timed eqResolve lean_s33 lean_s34
                                      have lean_s36 : let205 := by intTightUb lean_s35
                                      have lean_s37 : let294 := by timed And.intro lean_s32 lean_s36
                                      have lean_s38 : (Implies let294 let293) := by arithMulPos [let95, let1, let90], 1
                                      have lean_s39 : let293 := by timed modusPonens lean_s37 lean_s38
                                      have lean_s40 : let11 := by timed trueElim lean_r3
                                      let lean_s41 := by timed flipCongrArg lean_r43 [LE.le]
                                      have lean_s42 : (Eq let256 let219) := by timed congr lean_s41 lean_s6
                                      have lean_s43 : (Eq let256 let21) := by timed Eq.trans lean_s42 lean_r76
                                      have lean_s44 : let21 := by timed eqResolve lean_a146 lean_s43
                                      have lean_s45 : (Eq let21 let22) := by timed Eq.symm lean_r4
                                      have lean_s46 : let22 := by timed eqResolve lean_s44 lean_s45
                                      have lean_s47 : let219 := by intTightUb lean_s46
                                      have lean_s48 : let292 := by timed And.intro lean_s40 lean_s47
                                      have lean_s49 : (Implies let292 let291) := by arithMulPos [let19, let1, let10], 1
                                      have lean_s50 : let291 := by timed modusPonens lean_s48 lean_s49
                                      have lean_s51 : let72 := by timed trueElim lean_r12
                                      have lean_s52 : let290 := by timed And.intro lean_s51 lean_a160
                                      have lean_s53 : (Implies let290 let289) := by arithMulNeg [let224, let44, let71], 3
                                      have lean_s54 : let289 := by timed modusPonens lean_s52 lean_s53
                                      have lean_s55 : let228 := by timed trueElim lean_r83
                                      have lean_s56 : let138 := by timed eqResolve lean_a143 lean_r74
                                      have lean_s57 : (Eq let138 let223) := by timed Eq.symm lean_r80
                                      have lean_s58 : let223 := by timed eqResolve lean_s56 lean_s57
                                      have lean_s59 : let217 := by intTightUb lean_s58
                                      have lean_s60 : let288 := by timed And.intro lean_s55 lean_s59
                                      have lean_s61 : (Implies let288 let287) := by arithMulPos [let136, let12, let187], 1
                                      have lean_s62 : let287 := by timed modusPonens lean_s60 lean_s61
                                      have lean_s63 : let220 := by timed trueElim lean_r77
                                      have lean_s64 : let286 := by timed And.intro lean_s63 lean_a158
                                      have lean_s65 : (Implies let286 let285) := by arithMulNeg [let102, let12, let98], 3
                                      have lean_s66 : let285 := by timed modusPonens lean_s64 lean_s65
                                      have lean_s67 : let24 := by timed trueElim lean_r5
                                      have lean_s68 : let166 := by timed eqResolve lean_a137 lean_r41
                                      have lean_s69 : (Eq let166 let183) := by timed Eq.symm lean_r54
                                      have lean_s70 : let183 := by timed eqResolve lean_s68 lean_s69
                                      have lean_s71 : let167 := by intTightUb lean_s70
                                      have lean_s72 : let284 := by timed And.intro lean_s67 lean_s71
                                      have lean_s73 : (Implies let284 let283) := by arithMulPos [let107, let13, let23], 1
                                      have lean_s74 : let283 := by timed modusPonens lean_s72 lean_s73
                                      have lean_s75 : let218 := by timed trueElim lean_r75
                                      let lean_s76 := by timed flipCongrArg lean_r55 [GE.ge]
                                      have lean_s77 : (Eq let257 let261) := by timed congr lean_s76 lean_s6
                                      have lean_s78 : let261 := by timed eqResolve lean_a147 lean_s77
                                      have lean_s79 : let282 := by timed And.intro lean_s75 lean_s78
                                      have lean_s80 : (Implies let282 let281) := by arithMulNeg [let112, let1, let110], 3
                                      have lean_s81 : let281 := by timed modusPonens lean_s79 lean_s80
                                      have lean_s82 : let209 := by timed trueElim lean_r66
                                      have lean_s83 : let31 := by timed eqResolve lean_a144 lean_r67
                                      have lean_s84 : (Eq let31 let32) := by timed Eq.symm lean_r6
                                      have lean_s85 : let32 := by timed eqResolve lean_s83 lean_s84
                                      have lean_s86 : let210 := by intTightUb lean_s85
                                      have lean_s87 : let280 := by timed And.intro lean_s82 lean_s86
                                      have lean_s88 : (Implies let280 let279) := by arithMulPos [let29, let1, let114], 1
                                      have lean_s89 : let279 := by timed modusPonens lean_s87 lean_s88
                                      have lean_s90 : let133 := by timed trueElim lean_r26
                                      have lean_s91 : let148 := by timed eqResolve lean_a138 lean_r53
                                      have lean_s92 : (Eq let148 let149) := by timed Eq.symm lean_r30
                                      have lean_s93 : let149 := by timed eqResolve lean_s91 lean_s92
                                      have lean_s94 : let182 := by intTightUb lean_s93
                                      have lean_s95 : let278 := by timed And.intro lean_s90 lean_s94
                                      have lean_s96 : (Implies let278 let277) := by arithMulPos [let121, let13, let118], 1
                                      have lean_s97 : let277 := by timed modusPonens lean_s95 lean_s96
                                      have lean_s98 : let233 := by timed trueElim lean_r87
                                      let lean_s99 := by timed flipCongrArg lean_r56 [LE.le]
                                      have lean_s100 : (Eq let13 let13) := by timed rfl
                                      have lean_s101 : (Eq let255 let207) := by timed congr lean_s99 lean_s100
                                      have lean_s102 : (Eq let255 let172) := by timed Eq.trans lean_s101 lean_r64
                                      have lean_s103 : let172 := by timed eqResolve lean_a142 lean_s102
                                      have lean_s104 : (Eq let172 let173) := by timed Eq.symm lean_r45
                                      have lean_s105 : let173 := by timed eqResolve lean_s103 lean_s104
                                      have lean_s106 : let207 := by intTightUb lean_s105
                                      have lean_s107 : let276 := by timed And.intro lean_s98 lean_s106
                                      have lean_s108 : (Implies let276 let275) := by arithMulPos [let124, let13, let82], 1
                                      have lean_s109 : let275 := by timed modusPonens lean_s107 lean_s108
                                      have lean_s110 : let35 := by timed trueElim lean_r7
                                      have lean_s111 : let41 := by timed eqResolve lean_a145 lean_r71
                                      have lean_s112 : (Eq let41 let42) := by timed Eq.symm lean_r8
                                      have lean_s113 : let42 := by timed eqResolve lean_s111 lean_s112
                                      have lean_s114 : let214 := by intTightUb lean_s113
                                      have lean_s115 : let274 := by timed And.intro lean_s110 lean_s114
                                      have lean_s116 : (Implies let274 let273) := by arithMulPos [let39, let1, let34], 1
                                      have lean_s117 : let273 := by timed modusPonens lean_s115 lean_s116
                                      have lean_s118 : let272 := by sumBounds [lean_s3, lean_s15, lean_s19, lean_s27, lean_s31, lean_s39, lean_s50, lean_s54, lean_s62, lean_s66, lean_s74, lean_s81, lean_s89, lean_s97, lean_s109, lean_s117]
                                      let lean_s119 := by timed congrHAdd lean_r21 lean_r22
                                      let lean_s120 := by timed congrHAdd lean_r20 lean_s119
                                      let lean_s121 := by timed congrHAdd lean_r19 lean_s120
                                      let lean_s122 := by timed congrHAdd lean_r18 lean_s121
                                      let lean_s123 := by timed congrHAdd lean_r17 lean_s122
                                      let lean_s124 := by timed congrHAdd lean_r16 lean_s123
                                      let lean_s125 := by timed congrHAdd lean_r68 lean_s124
                                      let lean_s126 := by timed congrHAdd lean_r81 lean_s125
                                      let lean_s127 := by timed congrHAdd lean_r84 lean_s126
                                      let lean_s128 := by timed congrHAdd lean_r15 lean_s127
                                      let lean_s129 := by timed congrHAdd lean_r14 lean_s128
                                      let lean_s130 := by timed congrHAdd lean_r13 lean_s129
                                      let lean_s131 := by timed congrHAdd lean_r11 lean_s130
                                      let lean_s132 := by timed congrHAdd lean_r10 lean_s131
                                      have lean_s133 : (Eq let271 let196) := by timed congrHAdd lean_r9 lean_s132
                                      have lean_s134 : (Eq let271 let129) := by timed Eq.trans lean_s133 lean_r57
                                      let lean_s135 := by timed flipCongrArg lean_s134 [LE.le]
                                      let lean_s136 := by timed congrHAdd lean_r96 lean_r93
                                      let lean_s137 := by timed congrHAdd lean_r99 lean_s136
                                      let lean_s138 := by timed congrHAdd lean_r42 lean_s137
                                      let lean_s139 := by timed congrHAdd lean_r101 lean_s138
                                      let lean_s140 := by timed congrHAdd lean_r46 lean_s139
                                      let lean_s141 := by timed congrHAdd lean_r88 lean_s140
                                      let lean_s142 := by timed congrHAdd lean_r90 lean_s141
                                      let lean_s143 := by timed congrHAdd lean_r102 lean_s142
                                      let lean_s144 := by timed congrHAdd lean_r104 lean_s143
                                      let lean_s145 := by timed congrHAdd lean_r105 lean_s144
                                      let lean_s146 := by timed congrHAdd lean_r63 lean_s145
                                      let lean_s147 := by timed congrHAdd lean_r25 lean_s146
                                      let lean_s148 := by timed congrHAdd lean_r24 lean_s147
                                      let lean_s149 := by timed congrHAdd lean_r73 lean_s148
                                      have lean_s150 : (Eq let270 let222) := by timed congrHAdd lean_r23 lean_s149
                                      have lean_s151 : (Eq let270 let98) := by timed Eq.trans lean_s150 lean_r79
                                      have lean_s152 : (Eq let272 let181) := by timed congr lean_s135 lean_s151
                                      have lean_s153 : (Eq let272 False) := by timed Eq.trans lean_s152 lean_r52
                                      show False from by timed eqResolve lean_s118 lean_s153
                                    ))
                                  have lean_s1 : let198 := by liftOrNToNeg lean_s0
                                  have lean_s2 : (Eq let198 let199) := by timed Eq.symm lean_r58
                                  have lean_s3 : let199 := by timed eqResolve lean_s1 lean_s2
                                  have lean_s4 : let198 := by timed eqResolve lean_s3 lean_r58
                                  show False from by timed contradiction lean_a167 lean_s4
  ))))))))))))))))))))))))))))))))
have lean_s1 : (Not (And let41 (And let172 (And let148 (And let31 (And let261 (And let166 (And let259 (And let138 (And let253 (And let21 (And let204 (And let260 (And let157 (And let258 (And let142 let197)))))))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let268 := by timed flipNotAnd lean_s1 [let41, let172, let148, let31, let261, let166, let259, let138, let253, let21, let204, let260, let157, let258, let142, let197]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let170 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let235 let170) := by timed congr lean_s5 lean_r86
have lean_s7 : (Eq let235 True) := by timed Eq.trans lean_s6 lean_r44
have lean_s8 : (Eq let232 True) := by timed Eq.trans lean_r89 lean_s7
have lean_s9 : let232 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let212 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let230 let212) := by timed congr lean_s12 lean_r82
have lean_s14 : (Eq let230 True) := by timed Eq.trans lean_s13 lean_r69
have lean_s15 : (Eq let227 True) := by timed Eq.trans lean_r85 lean_s14
have lean_s16 : let227 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : let161 := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq let221 let161) := by timed congr lean_s19 lean_r34
have lean_s21 : (Eq let221 True) := by timed Eq.trans lean_s20 lean_r37
have lean_s22 : (Eq let155 True) := by timed Eq.trans lean_r78 lean_s21
have lean_s23 : let155 := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : let151 := by timed rfl
let lean_s26 := by timed flipCongrArg lean_s25 [Eq]
have lean_s27 : (Eq let178 let151) := by timed congr lean_s26 lean_r29
have lean_s28 : (Eq let178 True) := by timed Eq.trans lean_s27 lean_r32
have lean_s29 : (Eq let146 True) := by timed Eq.trans lean_r50 lean_s28
have lean_s30 : let146 := by timed trueElim lean_s29
let lean_s31 := by timed congr lean_s3 lean_s30
have lean_s32 : (Eq let265 let265) := by timed rfl
let lean_s33 := by timed congr lean_s3 lean_s32
have lean_s34 : let164 := by timed rfl
let lean_s35 := by timed flipCongrArg lean_s34 [Eq]
have lean_s36 : (Eq let215 let164) := by timed congr lean_s35 lean_r51
have lean_s37 : (Eq let215 True) := by timed Eq.trans lean_s36 lean_r39
have lean_s38 : (Eq let180 True) := by timed Eq.trans lean_r72 lean_s37
have lean_s39 : let180 := by timed trueElim lean_s38
let lean_s40 := by timed congr lean_s3 lean_s39
have lean_s41 : (Eq let263 let263) := by timed rfl
let lean_s42 := by timed congr lean_s3 lean_s41
have lean_s43 : let150 := by timed rfl
let lean_s44 := by timed flipCongrArg lean_s43 [Eq]
have lean_s45 : (Eq let176 let150) := by timed congr lean_s44 lean_r27
have lean_s46 : (Eq let176 True) := by timed Eq.trans lean_s45 lean_r31
have lean_s47 : (Eq let140 True) := by timed Eq.trans lean_r48 lean_s46
have lean_s48 : let140 := by timed trueElim lean_s47
let lean_s49 := by timed congr lean_s3 lean_s48
have lean_s50 : (Eq let266 let266) := by timed rfl
let lean_s51 := by timed congr lean_s3 lean_s50
have lean_s52 : let160 := by timed rfl
let lean_s53 := by timed flipCongrArg lean_s52 [Eq]
have lean_s54 : (Eq let200 let160) := by timed congr lean_s53 lean_r33
have lean_s55 : (Eq let200 True) := by timed Eq.trans lean_s54 lean_r36
have lean_s56 : (Eq let153 True) := by timed Eq.trans lean_r59 lean_s55
have lean_s57 : let153 := by timed trueElim lean_s56
let lean_s58 := by timed congr lean_s3 lean_s57
have lean_s59 : let238 := by timed rfl
let lean_s60 := by timed flipCongrArg lean_s59 [Eq]
have lean_s61 : (Eq let245 let238) := by timed congr lean_s60 lean_r95
have lean_s62 : (Eq let245 True) := by timed Eq.trans lean_s61 lean_r92
have lean_s63 : (Eq let242 True) := by timed Eq.trans lean_r98 lean_s62
have lean_s64 : let242 := by timed trueElim lean_s63
let lean_s65 := by timed congr lean_s3 lean_s64
have lean_s66 : (Eq let262 let262) := by timed rfl
let lean_s67 := by timed congr lean_s3 lean_s66
have lean_s68 : let162 := by timed rfl
let lean_s69 := by timed flipCongrArg lean_s68 [Eq]
have lean_s70 : (Eq let213 let162) := by timed congr lean_s69 lean_r35
have lean_s71 : (Eq let213 True) := by timed Eq.trans lean_s70 lean_r38
have lean_s72 : (Eq let159 True) := by timed Eq.trans lean_r70 lean_s71
have lean_s73 : let159 := by timed trueElim lean_s72
let lean_s74 := by timed congr lean_s3 lean_s73
have lean_s75 : (Eq let264 let264) := by timed rfl
let lean_s76 := by timed congr lean_s3 lean_s75
have lean_s77 : let165 := by timed rfl
let lean_s78 := by timed flipCongrArg lean_s77 [Eq]
have lean_s79 : (Eq let177 let165) := by timed congr lean_s78 lean_r28
have lean_s80 : (Eq let177 True) := by timed Eq.trans lean_s79 lean_r40
have lean_s81 : (Eq let144 True) := by timed Eq.trans lean_r49 lean_s80
have lean_s82 : let144 := by timed trueElim lean_s81
let lean_s83 := by timed congr lean_s3 lean_s82
have lean_s84 : (Eq let198 let198) := by timed rfl
let lean_s85 := by timed congr lean_s83 lean_s84
let lean_s86 := by timed congr lean_s76 lean_s85
let lean_s87 := by timed congr lean_s74 lean_s86
let lean_s88 := by timed congr lean_s67 lean_s87
let lean_s89 := by timed congr lean_s65 lean_s88
let lean_s90 := by timed congr lean_s58 lean_s89
let lean_s91 := by timed congr lean_s51 lean_s90
let lean_s92 := by timed congr lean_s49 lean_s91
let lean_s93 := by timed congr lean_s42 lean_s92
let lean_s94 := by timed congr lean_s40 lean_s93
let lean_s95 := by timed congr lean_s33 lean_s94
let lean_s96 := by timed congr lean_s31 lean_s95
let lean_s97 := by timed congr lean_s24 lean_s96
let lean_s98 := by timed congr lean_s17 lean_s97
have lean_s99 : (Eq let268 let267) := by timed congr lean_s10 lean_s98
have lean_s100 : let267 := by timed eqResolve lean_s2 lean_s99
have lean_s101 : (Or let163 (Or let147 (Or let141 (Or let203 (Or let156 (Or let171 (Or let137 (Or let30 (Or let40 (Or let20 (Or let266 (Or let265 (Or let264 (Or let263 (Or let262 let198))))))))))))))) := by permutateOr lean_s100, [5, 2, 14, 10, 12, 1, 7, 3, 0, 9, 8, 4, 13, 6, 11, 15], (- 1)
let lean_s102 := by R2 lean_s101, lean_a151, let197, [(- 1), 0]
let lean_s103 := by R2 lean_s102, lean_a150, let260, [(- 1), 0]
let lean_s104 := by R2 lean_s103, lean_a149, let259, [(- 1), 0]
let lean_s105 := by R2 lean_s104, lean_a148, let258, [(- 1), 0]
let lean_s106 := by timed flipCongrArg lean_r55 [GE.ge]
have lean_s107 : (Eq let1 let1) := by timed rfl
have lean_s108 : (Eq let257 let261) := by timed congr lean_s106 lean_s107
have lean_s109 : let261 := by timed eqResolve lean_a147 lean_s108
let lean_s110 := by R2 lean_s105, lean_s109, let261, [(- 1), 0]
let lean_s111 := by timed flipCongrArg lean_r43 [LE.le]
have lean_s112 : (Eq let256 let219) := by timed congr lean_s111 lean_s107
have lean_s113 : (Eq let256 let21) := by timed Eq.trans lean_s112 lean_r76
have lean_s114 : let21 := by timed eqResolve lean_a146 lean_s113
let lean_s115 := by R1 lean_s110, lean_s114, let20, [(- 1), 0]
have lean_s116 : let41 := by timed eqResolve lean_a145 lean_r71
let lean_s117 := by R1 lean_s115, lean_s116, let40, [(- 1), 0]
have lean_s118 : let31 := by timed eqResolve lean_a144 lean_r67
let lean_s119 := by R1 lean_s117, lean_s118, let30, [(- 1), 0]
have lean_s120 : let138 := by timed eqResolve lean_a143 lean_r74
let lean_s121 := by R1 lean_s119, lean_s120, let137, [(- 1), 0]
let lean_s122 := by timed flipCongrArg lean_r56 [LE.le]
have lean_s123 : (Eq let13 let13) := by timed rfl
have lean_s124 : (Eq let255 let207) := by timed congr lean_s122 lean_s123
have lean_s125 : (Eq let255 let172) := by timed Eq.trans lean_s124 lean_r64
have lean_s126 : let172 := by timed eqResolve lean_a142 lean_s125
let lean_s127 := by R1 lean_s121, lean_s126, let171, [(- 1), 0]
have lean_s128 : let157 := by timed eqResolve lean_a141 lean_r103
let lean_s129 := by R1 lean_s127, lean_s128, let156, [(- 1), 0]
have lean_s130 : let204 := by timed eqResolve lean_a140 lean_r62
let lean_s131 := by R1 lean_s129, lean_s130, let203, [(- 1), 0]
let lean_s132 := by timed flipCongrArg lean_r60 [LE.le]
have lean_s133 : (Eq let254 let244) := by timed congr lean_s132 lean_s107
have lean_s134 : (Eq let254 let142) := by timed Eq.trans lean_s133 lean_r97
have lean_s135 : let142 := by timed eqResolve lean_a139 lean_s134
let lean_s136 := by R1 lean_s131, lean_s135, let141, [(- 1), 0]
have lean_s137 : let148 := by timed eqResolve lean_a138 lean_r53
let lean_s138 := by R1 lean_s136, lean_s137, let147, [(- 1), 0]
have lean_s139 : let166 := by timed eqResolve lean_a137 lean_r41
let lean_s140 := by R1 lean_s138, lean_s139, let163, [(- 1), 0]
exact (show False from by R2 lean_s140, lean_a136, let253, [0, 0])


