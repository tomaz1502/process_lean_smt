open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x7x5fplus : Int}
variable {x7x5fminus : Int}
variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x8x5fplus : Int}
variable {x8x5fminus : Int}
variable {x2x5fplus : Int}
variable {x2x5fminus : Int}
variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x4x5fplus : Int}
variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x6x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x4x5fminus : Int}
variable {x9x5fplus : Int}
variable {x2x5fminus : Int}
variable {x9x5fplus : Int}
variable {x6x5fplus : Int}
variable {x6x5fminus : Int}
variable {x6x5fplus : Int}
variable {x9x5fminus : Int}
variable {x1x5fplus : Int}
variable {x0x5fminus : Int}
variable {x1x5fminus : Int}
variable {x2x5fplus : Int}
variable {x8x5fminus : Int}
variable {x8x5fplus : Int}
variable {x3x5fplus : Int}
variable {x7x5fminus : Int}
variable {x7x5fplus : Int}
variable {x1x5fminus : Int}
variable {x3x5fminus : Int}
variable {x1x5fplus : Int}
variable {x9x5fminus : Int}
variable {x0x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% HMul.hMul let3 x4x5fplus)
  let let5 := (binrel% HAdd.hAdd let4 x4x5fminus)
  let let6 := (binrel% HMul.hMul let3 x6x5fplus)
  let let7 := (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus let5))
  let let8 := (Int.ofNat 2)
  let let9 := (Neg.neg let8)
  let let10 := (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x7x5fminus) let7))
  let let11 := (binrel% GE.ge let10 let1)
  let let12 := (Not let11)
  let let13 := (binrel% LT.lt let10 let1)
  let let14 := (Int.ofNat 5)
  let let15 := (binrel% HDiv.hDiv (Int.ofNat 6) let14)
  let let16 := (Neg.neg let15)
  let let17 := (binrel% LT.lt let16 let1)
  let let18 := (binrel% HDiv.hDiv let8 let14)
  let let19 := (Neg.neg let18)
  let let20 := (binrel% LT.lt let19 let1)
  let let21 := (binrel% HDiv.hDiv (Int.ofNat 17) let14)
  let let22 := (binrel% GT.gt let21 let1)
  let let23 := (binrel% HDiv.hDiv (Int.ofNat 19) let14)
  let let24 := (Neg.neg let23)
  let let25 := (binrel% LT.lt let24 let1)
  let let26 := (binrel% HMul.hMul let3 x0x5fminus)
  let let27 := (binrel% HAdd.hAdd x0x5fplus let26)
  let let28 := (binrel% HMul.hMul let3 x3x5fplus)
  let let29 := (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x3x5fminus let27))
  let let30 := (binrel% HMul.hMul let3 x9x5fminus)
  let let31 := (binrel% HMul.hMul let3 x7x5fplus)
  let let32 := (binrel% HMul.hMul let3 x8x5fminus)
  let let33 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 let29))))))))
  let let34 := (binrel% GE.ge let33 let8)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt let33 let8)
  let let37 := (Rat.ofInt 1)
  let let38 := (binrel% GT.gt let37 let1)
  let let39 := (binrel% HMul.hMul let3 x0x5fplus)
  let let40 := (binrel% HAdd.hAdd let39 x0x5fminus)
  let let41 := (binrel% HMul.hMul let8 x8x5fminus)
  let let42 := (binrel% HMul.hMul let9 x8x5fplus)
  let let43 := (binrel% HMul.hMul let3 x1x5fminus)
  let let44 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x9x5fminus) let40))))))
  let let45 := (Rat.ofInt let44)
  let let46 := (binrel% HMul.hMul let37 let44)
  let let47 := (binrel% HMul.hMul let3 x7x5fminus)
  let let48 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 let5))))
  let let49 := (binrel% GE.ge let48 let1)
  let let50 := (Not let49)
  let let51 := (Not let50)
  let let52 := (Eq let51 let49)
  let let53 := (binrel% HAdd.hAdd let28 x3x5fminus)
  let let54 := (binrel% HMul.hMul let3 x5x5fplus)
  let let55 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 let53))))))
  let let56 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus let53))))))
  let let57 := (binrel% GE.ge let44 let2)
  let let58 := (Not let57)
  let let59 := (binrel% LE.le let44 let1)
  let let60 := (binrel% HDiv.hDiv (Int.ofNat 7) let14)
  let let61 := (binrel% GT.gt let60 let1)
  let let62 := (binrel% HMul.hMul let3 x2x5fplus)
  let let63 := (binrel% HAdd.hAdd let62 x2x5fminus)
  let let64 := (binrel% HMul.hMul let3 x5x5fminus)
  let let65 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 let63))
  let let66 := (binrel% HMul.hMul let3 x6x5fminus)
  let let67 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let66 let65))))
  let let68 := (binrel% GE.ge let67 let8)
  let let69 := (Eq let68 let68)
  let let70 := (binrel% HMul.hMul let3 x2x5fminus)
  let let71 := (binrel% HAdd.hAdd x2x5fplus let70)
  let let72 := (binrel% HMul.hMul let3 x1x5fplus)
  let let73 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus let71))))))
  let let74 := (binrel% HAdd.hAdd let72 x1x5fminus)
  let let75 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let70 let74))
  let let76 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus let75))))
  let let77 := (Eq let34 let34)
  let let78 := (binrel% LT.lt let48 let1)
  let let79 := (Rat.ofInt 0)
  let let80 := (Neg.neg let37)
  let let81 := (binrel% HMul.hMul let80 let1)
  let let82 := (Not let35)
  let let83 := (Eq let82 let34)
  let let84 := (binrel% HDiv.hDiv (Int.ofNat 14) let14)
  let let85 := (binrel% GT.gt let84 let1)
  let let86 := (Neg.neg let60)
  let let87 := (binrel% HMul.hMul let86 let1)
  let let88 := (binrel% LT.lt let44 let2)
  let let89 := (Eq let11 let11)
  let let90 := (binrel% HMul.hMul let9 x9x5fminus)
  let let91 := (binrel% HMul.hMul let8 x9x5fplus)
  let let92 := (binrel% HMul.hMul let9 x8x5fminus)
  let let93 := (binrel% HMul.hMul let8 x8x5fplus)
  let let94 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let90 let27))))))
  let let95 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus let27))))))
  let let96 := (Not let68)
  let let97 := (Not let96)
  let let98 := (Eq let97 let68)
  let let99 := (binrel% HDiv.hDiv (Int.ofNat 4) let14)
  let let100 := (Neg.neg let99)
  let let101 := (binrel% HDiv.hDiv (Int.ofNat 8) let14)
  let let102 := (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let101) x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let99 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x4x5fplus) (binrel% HMul.hMul let99 x4x5fminus))))))
  let let103 := (binrel% HMul.hMul let99 let10)
  let let104 := (binrel% HMul.hMul let3 x4x5fminus)
  let let105 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus let104)))))))))))
  let let106 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let104 let74))))))))))
  let let107 := (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x4x5fplus) (binrel% HMul.hMul let24 x4x5fminus))))))))))))
  let let108 := (binrel% HMul.hMul let3 x8x5fplus)
  let let109 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 let5))))))))))
  let let110 := (binrel% HMul.hMul let24 let109)
  let let111 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd x0x5fminus let71))))
  let let112 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus let40))))
  let let113 := (Eq let49 let49)
  let let114 := (binrel% LE.le let33 let2)
  let let115 := (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x4x5fplus) (binrel% HMul.hMul let16 x4x5fminus))))))))
  let let116 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus let7))))
  let let117 := (binrel% HMul.hMul let16 let116)
  let let118 := (Eq let57 let57)
  let let119 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x9x5fplus) (binrel% HAdd.hAdd x9x5fminus let63))))))
  let let120 := (binrel% GE.ge let119 let2)
  let let121 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 let71))))))
  let let122 := (binrel% LE.le let121 let3)
  let let123 := (binrel% HMul.hMul let99 let3)
  let let124 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x8x5fminus let75))))
  let let125 := (binrel% LE.le let48 let3)
  let let126 := (binrel% LE.le let67 let2)
  let let127 := (binrel% GE.ge let94 let1)
  let let128 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x4x5fminus let29))))))))
  let let129 := (binrel% LE.le let10 let3)
  let let130 := (binrel% LT.lt let80 let1)
  let let131 := (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x2x5fplus) (binrel% HMul.hMul let19 x2x5fminus))))))
  let let132 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let26 let63))))
  let let133 := (binrel% HMul.hMul let19 let132)
  let let134 := (binrel% HAdd.hAdd x1x5fplus let43)
  let let135 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x4x5fminus let134))))
  let let136 := (binrel% HMul.hMul let24 let1)
  let let137 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd x2x5fminus let134))))))
  let let138 := (binrel% HMul.hMul let60 x7x5fminus)
  let let139 := (binrel% HMul.hMul let86 x7x5fplus)
  let let140 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x3x5fplus) (binrel% HMul.hMul let86 x3x5fminus))))))))
  let let141 := (binrel% HMul.hMul let86 let55)
  let let142 := (Eq let68 let97)
  let let143 := (binrel% LT.lt let86 let1)
  let let144 := (Not let58)
  let let145 := (Eq let144 let57)
  let let146 := (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x2x5fplus) (binrel% HMul.hMul let9 x2x5fminus))
  let let147 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x1x5fminus) (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let90 let146)))))))
  let let148 := (Neg.neg (Rat.ofInt 2))
  let let149 := (binrel% HMul.hMul let148 let119)
  let let150 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus let65))))
  let let151 := (binrel% GE.ge let150 let1)
  let let152 := (binrel% LE.le let73 let1)
  let let153 := (Neg.neg let84)
  let let154 := (binrel% HMul.hMul let84 let3)
  let let155 := (Not let12)
  let let156 := (Eq let11 let155)
  let let157 := (Eq let155 let11)
  let let158 := (binrel% GT.gt let99 let1)
  let let159 := (binrel% GE.ge let132 let3)
  let let160 := (binrel% LE.le let111 let2)
  let let161 := (Eq let49 let51)
  let let162 := (Not let59)
  let let163 := (binrel% GT.gt let44 let1)
  let let164 := (Eq let163 let162)
  let let165 := (binrel% LT.lt let67 let8)
  let let166 := (Eq let34 let82)
  let let167 := (binrel% HMul.hMul let37 let1)
  let let168 := (binrel% LE.le let79 let19)
  let let169 := (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let153 let60))))))))))
  let let170 := (binrel% HMul.hMul let60 let2)
  let let171 := (binrel% GE.ge let109 let1)
  let let172 := (binrel% LE.le let105 let1)
  let let173 := (binrel% HMul.hMul let21 let2)
  let let174 := (binrel% HMul.hMul let19 let3)
  let let175 := (binrel% HMul.hMul let16 let1)
  let let176 := (binrel% HMul.hMul let148 let2)
  let let177 := (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x8x5fminus) (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x0x5fplus) (binrel% HMul.hMul let86 x0x5fminus))))))))))))
  let let178 := (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let153 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let153 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let153 x4x5fplus) (binrel% HMul.hMul let84 x4x5fminus))))))
  let let179 := (Neg.neg let21)
  let let180 := (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x2x5fplus) (binrel% HMul.hMul let21 x2x5fminus))))))))
  let let181 := (Rat.ofInt let73)
  let let182 := (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let178 let177))))))))))
  let let183 := (binrel% HMul.hMul let60 let33)
  let let184 := (binrel% LT.lt let148 let1)
  let let185 := (binrel% HMul.hMul let84 let48)
  let let186 := (binrel% HMul.hMul let21 let67)
  let let187 := (Eq let57 let144)
  let let188 := (binrel% HMul.hMul let80 let150)
  let let189 := (binrel% LE.le let106 let1)
  let let190 := (binrel% LE.le let128 let2)
  let let191 := (binrel% HMul.hMul let9 x4x5fminus)
  let let192 := (binrel% HMul.hMul let8 x4x5fplus)
  let let193 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let70 let134))
  let let194 := (binrel% HMul.hMul let3 x3x5fminus)
  let let195 := (binrel% LE.le let137 let2)
  let let196 := (binrel% LE.le let124 let3)
  let let197 := (binrel% LE.le let76 let1)
  let let198 := (binrel% LE.le let112 let2)
  let let199 := (binrel% LE.le let135 let3)
  let let200 := (binrel% GE.ge let116 let1)
  let let201 := (binrel% GE.ge let56 let1)
  let let202 := (binrel% GE.ge let95 let1)
  let let203 := (binrel% GE.ge let55 let1)
  let let204 := (Not let203)
  let let205 := (Not let200)
  let let206 := (Not let159)
  let let207 := (Not let151)
  let let208 := (Not let120)
  let let209 := (Not let171)
  let let210 := (Or let34 (Or let49 (Or let209 (Or let68 (Or let206 (Or let205 (Or let11 (Or let208 (Or let207 (Or let204 let57))))))))))
  let let211 := (Or let82 (Or let51 (Or let209 (Or let97 (Or let206 (Or let205 (Or let155 (Or let208 (Or let207 (Or let204 let144))))))))))
  let let212 := (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let176 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let175 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let154 let170))))))))))
  let let213 := (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let186 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let185 let183))))))))))
  let let214 := (binrel% LE.le let213 let212)
  let let215 := (binrel% LE.le let183 let170)
  let let216 := (And let61 let114)
  let let217 := (binrel% LE.le let185 let154)
  let let218 := (And let85 let125)
  let let219 := (binrel% LE.le let110 let136)
  let let220 := (And let25 let171)
  let let221 := (binrel% LE.le let186 let173)
  let let222 := (And let22 let126)
  let let223 := (binrel% LE.le let133 let174)
  let let224 := (And let20 let159)
  let let225 := (binrel% LE.le let117 let175)
  let let226 := (And let17 let200)
  let let227 := (binrel% LE.le let103 let123)
  let let228 := (And let158 let129)
  let let229 := (binrel% LE.le let149 let176)
  let let230 := (And let184 let120)
  let let231 := (binrel% LE.le let188 let81)
  let let232 := (And let130 let151)
  let let233 := (binrel% LE.le let141 let87)
  let let234 := (And let143 let203)
  let let235 := (binrel% LE.le let46 let167)
  let let236 := (And let38 let59)
(Eq let13 let12) → (Eq let17 True) → (Eq let20 True) → (Eq let22 True) → (Eq let25 True) → (Eq let36 let35) → (Eq let38 True) → (Eq let46 let45) → let52 → (Eq let56 let55) → (Eq let59 let58) → (Eq let61 True) → (Eq let69 True) → (Eq let76 let73) → (Eq let77 True) → (Eq let78 let50) → (Eq let81 let79) → let83 → (Eq let85 True) → (Eq let87 let79) → (Eq let88 let58) → (Eq let89 True) → (Eq let95 let94) → let98 → (Eq let103 let102) → (Eq let106 let105) → (Eq let110 let107) → (Eq let112 let111) → (Eq let113 True) → (Eq let114 let35) → (Eq let117 let115) → (Eq let118 True) → (Eq let122 let120) → (Eq let123 let100) → (Eq let124 let121) → (Eq let125 let50) → (Eq let126 let96) → (Eq let127 let58) → (Eq let128 let33) → (Eq let129 let12) → (Eq let130 True) → (Eq let133 let131) → (Eq let135 let48) → (Eq let136 let79) → (Eq let137 let67) → (Eq let141 let140) → (Eq let98 let142) → (Eq let143 True) → let145 → (Eq let149 let147) → (Eq let152 let151) → (Eq let154 let153) → (Eq let157 let156) → (Eq let158 True) → (Eq let160 let159) → (Eq let52 let161) → let164 → (Eq let165 let96) → (Eq let83 let166) → (Eq let167 let79) → (Eq let168 False) → (Eq let169 let19) → let157 → (Eq let170 let60) → (Eq let172 let171) → (Eq let173 let21) → (Eq let174 let18) → (Eq let175 let79) → (Eq let176 let148) → (Eq let182 let79) → (Eq let183 let177) → (Eq let184 True) → (Eq let185 let178) → (Eq let186 let180) → (Eq let145 let187) → (Eq let188 let181) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% LE.le (binrel% HSub.hSub x1x5fplus x1x5fminus) let2) → let189 → let190 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 let40)))))))) let2) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let192 (binrel% HAdd.hAdd let191 let71)))))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus let27)))))) let3) → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let194 let193)))) let1) → let195 → let196 → let197 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x6x5fminus) (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let194 let27)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let194 let63)))) let2) → let198 → let129 → let199 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 let5)))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus let146)))) let3) → (binrel% LE.le (binrel% HAdd.hAdd let192 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let70 let27)))) let3) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let6 x6x5fminus))) let3) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 let74)))))))) let3) → let200 → let201 → let202 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x5x5fminus) let53)))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fplus let194))))))) let2) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 let40)))))) let3) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let192 (binrel% HAdd.hAdd let191 let193)))) let2) → (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let104 let40)))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus let134)))) let3) → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% HMul.hMul let3 x4x5fplus)
  let let5 := (binrel% HAdd.hAdd let4 x4x5fminus)
  let let6 := (binrel% HMul.hMul let3 x6x5fplus)
  let let7 := (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus let5))
  let let8 := (Int.ofNat 2)
  let let9 := (Neg.neg let8)
  let let10 := (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x7x5fminus) let7))
  let let11 := (binrel% GE.ge let10 let1)
  let let12 := (Not let11)
  let let13 := (binrel% LT.lt let10 let1)
  let let14 := (Int.ofNat 5)
  let let15 := (binrel% HDiv.hDiv (Int.ofNat 6) let14)
  let let16 := (Neg.neg let15)
  let let17 := (binrel% LT.lt let16 let1)
  let let18 := (binrel% HDiv.hDiv let8 let14)
  let let19 := (Neg.neg let18)
  let let20 := (binrel% LT.lt let19 let1)
  let let21 := (binrel% HDiv.hDiv (Int.ofNat 17) let14)
  let let22 := (binrel% GT.gt let21 let1)
  let let23 := (binrel% HDiv.hDiv (Int.ofNat 19) let14)
  let let24 := (Neg.neg let23)
  let let25 := (binrel% LT.lt let24 let1)
  let let26 := (binrel% HMul.hMul let3 x0x5fminus)
  let let27 := (binrel% HAdd.hAdd x0x5fplus let26)
  let let28 := (binrel% HMul.hMul let3 x3x5fplus)
  let let29 := (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x3x5fminus let27))
  let let30 := (binrel% HMul.hMul let3 x9x5fminus)
  let let31 := (binrel% HMul.hMul let3 x7x5fplus)
  let let32 := (binrel% HMul.hMul let3 x8x5fminus)
  let let33 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 let29))))))))
  let let34 := (binrel% GE.ge let33 let8)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt let33 let8)
  let let37 := (Rat.ofInt 1)
  let let38 := (binrel% GT.gt let37 let1)
  let let39 := (binrel% HMul.hMul let3 x0x5fplus)
  let let40 := (binrel% HAdd.hAdd let39 x0x5fminus)
  let let41 := (binrel% HMul.hMul let8 x8x5fminus)
  let let42 := (binrel% HMul.hMul let9 x8x5fplus)
  let let43 := (binrel% HMul.hMul let3 x1x5fminus)
  let let44 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x9x5fminus) let40))))))
  let let45 := (Rat.ofInt let44)
  let let46 := (binrel% HMul.hMul let37 let44)
  let let47 := (binrel% HMul.hMul let3 x7x5fminus)
  let let48 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 let5))))
  let let49 := (binrel% GE.ge let48 let1)
  let let50 := (Not let49)
  let let51 := (Not let50)
  let let52 := (Eq let51 let49)
  let let53 := (binrel% HAdd.hAdd let28 x3x5fminus)
  let let54 := (binrel% HMul.hMul let3 x5x5fplus)
  let let55 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 let53))))))
  let let56 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus let53))))))
  let let57 := (binrel% GE.ge let44 let2)
  let let58 := (Not let57)
  let let59 := (binrel% LE.le let44 let1)
  let let60 := (binrel% HDiv.hDiv (Int.ofNat 7) let14)
  let let61 := (binrel% GT.gt let60 let1)
  let let62 := (binrel% HMul.hMul let3 x2x5fplus)
  let let63 := (binrel% HAdd.hAdd let62 x2x5fminus)
  let let64 := (binrel% HMul.hMul let3 x5x5fminus)
  let let65 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 let63))
  let let66 := (binrel% HMul.hMul let3 x6x5fminus)
  let let67 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let66 let65))))
  let let68 := (binrel% GE.ge let67 let8)
  let let69 := (Eq let68 let68)
  let let70 := (binrel% HMul.hMul let3 x2x5fminus)
  let let71 := (binrel% HAdd.hAdd x2x5fplus let70)
  let let72 := (binrel% HMul.hMul let3 x1x5fplus)
  let let73 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus let71))))))
  let let74 := (binrel% HAdd.hAdd let72 x1x5fminus)
  let let75 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let70 let74))
  let let76 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus let75))))
  let let77 := (Eq let34 let34)
  let let78 := (binrel% LT.lt let48 let1)
  let let79 := (Rat.ofInt 0)
  let let80 := (Neg.neg let37)
  let let81 := (binrel% HMul.hMul let80 let1)
  let let82 := (Not let35)
  let let83 := (Eq let82 let34)
  let let84 := (binrel% HDiv.hDiv (Int.ofNat 14) let14)
  let let85 := (binrel% GT.gt let84 let1)
  let let86 := (Neg.neg let60)
  let let87 := (binrel% HMul.hMul let86 let1)
  let let88 := (binrel% LT.lt let44 let2)
  let let89 := (Eq let11 let11)
  let let90 := (binrel% HMul.hMul let9 x9x5fminus)
  let let91 := (binrel% HMul.hMul let8 x9x5fplus)
  let let92 := (binrel% HMul.hMul let9 x8x5fminus)
  let let93 := (binrel% HMul.hMul let8 x8x5fplus)
  let let94 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let90 let27))))))
  let let95 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus let27))))))
  let let96 := (Not let68)
  let let97 := (Not let96)
  let let98 := (Eq let97 let68)
  let let99 := (binrel% HDiv.hDiv (Int.ofNat 4) let14)
  let let100 := (Neg.neg let99)
  let let101 := (binrel% HDiv.hDiv (Int.ofNat 8) let14)
  let let102 := (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let101) x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let99 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x4x5fplus) (binrel% HMul.hMul let99 x4x5fminus))))))
  let let103 := (binrel% HMul.hMul let99 let10)
  let let104 := (binrel% HMul.hMul let3 x4x5fminus)
  let let105 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus let104)))))))))))
  let let106 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let104 let74))))))))))
  let let107 := (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x4x5fplus) (binrel% HMul.hMul let24 x4x5fminus))))))))))))
  let let108 := (binrel% HMul.hMul let3 x8x5fplus)
  let let109 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 let5))))))))))
  let let110 := (binrel% HMul.hMul let24 let109)
  let let111 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd x0x5fminus let71))))
  let let112 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus let40))))
  let let113 := (Eq let49 let49)
  let let114 := (binrel% LE.le let33 let2)
  let let115 := (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x4x5fplus) (binrel% HMul.hMul let16 x4x5fminus))))))))
  let let116 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus let7))))
  let let117 := (binrel% HMul.hMul let16 let116)
  let let118 := (Eq let57 let57)
  let let119 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x9x5fplus) (binrel% HAdd.hAdd x9x5fminus let63))))))
  let let120 := (binrel% GE.ge let119 let2)
  let let121 := (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 let71))))))
  let let122 := (binrel% LE.le let121 let3)
  let let123 := (binrel% HMul.hMul let99 let3)
  let let124 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x8x5fminus let75))))
  let let125 := (binrel% LE.le let48 let3)
  let let126 := (binrel% LE.le let67 let2)
  let let127 := (binrel% GE.ge let94 let1)
  let let128 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x4x5fminus let29))))))))
  let let129 := (binrel% LE.le let10 let3)
  let let130 := (binrel% LT.lt let80 let1)
  let let131 := (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let19 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x2x5fplus) (binrel% HMul.hMul let19 x2x5fminus))))))
  let let132 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let26 let63))))
  let let133 := (binrel% HMul.hMul let19 let132)
  let let134 := (binrel% HAdd.hAdd x1x5fplus let43)
  let let135 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x4x5fminus let134))))
  let let136 := (binrel% HMul.hMul let24 let1)
  let let137 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd x2x5fminus let134))))))
  let let138 := (binrel% HMul.hMul let60 x7x5fminus)
  let let139 := (binrel% HMul.hMul let86 x7x5fplus)
  let let140 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x3x5fplus) (binrel% HMul.hMul let86 x3x5fminus))))))))
  let let141 := (binrel% HMul.hMul let86 let55)
  let let142 := (Eq let68 let97)
  let let143 := (binrel% LT.lt let86 let1)
  let let144 := (Not let58)
  let let145 := (Eq let144 let57)
  let let146 := (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x2x5fplus) (binrel% HMul.hMul let9 x2x5fminus))
  let let147 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x1x5fminus) (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let90 let146)))))))
  let let148 := (Neg.neg (Rat.ofInt 2))
  let let149 := (binrel% HMul.hMul let148 let119)
  let let150 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus let65))))
  let let151 := (binrel% GE.ge let150 let1)
  let let152 := (binrel% LE.le let73 let1)
  let let153 := (Neg.neg let84)
  let let154 := (binrel% HMul.hMul let84 let3)
  let let155 := (Not let12)
  let let156 := (Eq let11 let155)
  let let157 := (Eq let155 let11)
  let let158 := (binrel% GT.gt let99 let1)
  let let159 := (binrel% GE.ge let132 let3)
  let let160 := (binrel% LE.le let111 let2)
  let let161 := (Eq let49 let51)
  let let162 := (Not let59)
  let let163 := (binrel% GT.gt let44 let1)
  let let164 := (Eq let163 let162)
  let let165 := (binrel% LT.lt let67 let8)
  let let166 := (Eq let34 let82)
  let let167 := (binrel% HMul.hMul let37 let1)
  let let168 := (binrel% LE.le let79 let19)
  let let169 := (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let153 let60))))))))))
  let let170 := (binrel% HMul.hMul let60 let2)
  let let171 := (binrel% GE.ge let109 let1)
  let let172 := (binrel% LE.le let105 let1)
  let let173 := (binrel% HMul.hMul let21 let2)
  let let174 := (binrel% HMul.hMul let19 let3)
  let let175 := (binrel% HMul.hMul let16 let1)
  let let176 := (binrel% HMul.hMul let148 let2)
  let let177 := (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x8x5fminus) (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x0x5fplus) (binrel% HMul.hMul let86 x0x5fminus))))))))))))
  let let178 := (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let153 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let153 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let153 x4x5fplus) (binrel% HMul.hMul let84 x4x5fminus))))))
  let let179 := (Neg.neg let21)
  let let180 := (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x2x5fplus) (binrel% HMul.hMul let21 x2x5fminus))))))))
  let let181 := (Rat.ofInt let73)
  let let182 := (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let178 let177))))))))))
  let let183 := (binrel% HMul.hMul let60 let33)
  let let184 := (binrel% LT.lt let148 let1)
  let let185 := (binrel% HMul.hMul let84 let48)
  let let186 := (binrel% HMul.hMul let21 let67)
  let let187 := (Eq let57 let144)
  let let188 := (binrel% HMul.hMul let80 let150)
  let let189 := (binrel% LE.le let106 let1)
  let let190 := (binrel% LE.le let128 let2)
  let let191 := (binrel% HMul.hMul let9 x4x5fminus)
  let let192 := (binrel% HMul.hMul let8 x4x5fplus)
  let let193 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let70 let134))
  let let194 := (binrel% HMul.hMul let3 x3x5fminus)
  let let195 := (binrel% LE.le let137 let2)
  let let196 := (binrel% LE.le let124 let3)
  let let197 := (binrel% LE.le let76 let1)
  let let198 := (binrel% LE.le let112 let2)
  let let199 := (binrel% LE.le let135 let3)
  let let200 := (binrel% GE.ge let116 let1)
  let let201 := (binrel% GE.ge let56 let1)
  let let202 := (binrel% GE.ge let95 let1)
  let let203 := (binrel% GE.ge let55 let1)
  let let204 := (Not let203)
  let let205 := (Not let200)
  let let206 := (Not let159)
  let let207 := (Not let151)
  let let208 := (Not let120)
  let let209 := (Not let171)
  let let210 := (Or let34 (Or let49 (Or let209 (Or let68 (Or let206 (Or let205 (Or let11 (Or let208 (Or let207 (Or let204 let57))))))))))
  let let211 := (Or let82 (Or let51 (Or let209 (Or let97 (Or let206 (Or let205 (Or let155 (Or let208 (Or let207 (Or let204 let144))))))))))
  let let212 := (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let176 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let175 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let154 let170))))))))))
  let let213 := (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let186 (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let185 let183))))))))))
  let let214 := (binrel% LE.le let213 let212)
  let let215 := (binrel% LE.le let183 let170)
  let let216 := (And let61 let114)
  let let217 := (binrel% LE.le let185 let154)
  let let218 := (And let85 let125)
  let let219 := (binrel% LE.le let110 let136)
  let let220 := (And let25 let171)
  let let221 := (binrel% LE.le let186 let173)
  let let222 := (And let22 let126)
  let let223 := (binrel% LE.le let133 let174)
  let let224 := (And let20 let159)
  let let225 := (binrel% LE.le let117 let175)
  let let226 := (And let17 let200)
  let let227 := (binrel% LE.le let103 let123)
  let let228 := (And let158 let129)
  let let229 := (binrel% LE.le let149 let176)
  let let230 := (And let184 let120)
  let let231 := (binrel% LE.le let188 let81)
  let let232 := (And let130 let151)
  let let233 := (binrel% LE.le let141 let87)
  let let234 := (And let143 let203)
  let let235 := (binrel% LE.le let46 let167)
  let let236 := (And let38 let59)
fun lean_r0 : (Eq let13 let12) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let17 True) => -- EVALUATE
fun lean_r2 : (Eq let20 True) => -- EVALUATE
fun lean_r3 : (Eq let22 True) => -- EVALUATE
fun lean_r4 : (Eq let25 True) => -- EVALUATE
fun lean_r5 : (Eq let36 let35) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let38 True) => -- EVALUATE
fun lean_r7 : (Eq let46 let45) => -- THEORY_REWRITE_ARITH
fun lean_r8 : let52 => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let56 let55) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let59 let58) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let61 True) => -- EVALUATE
fun lean_r12 : (Eq let69 True) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let76 let73) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let77 True) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let78 let50) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let81 let79) => -- THEORY_REWRITE_ARITH
fun lean_r17 : let83 => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let85 True) => -- EVALUATE
fun lean_r19 : (Eq let87 let79) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let88 let58) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let89 True) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq let95 let94) => -- THEORY_REWRITE_ARITH
fun lean_r23 : let98 => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let103 let102) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let106 let105) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let110 let107) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let112 let111) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let113 True) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let114 let35) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let117 let115) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let118 True) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let122 let120) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let123 let100) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let124 let121) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let125 let50) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let126 let96) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let127 let58) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let128 let33) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let129 let12) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let130 True) => -- EVALUATE
fun lean_r41 : (Eq let133 let131) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let135 let48) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let136 let79) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let137 let67) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let141 let140) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let98 let142) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let143 True) => -- EVALUATE
fun lean_r48 : let145 => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let149 let147) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let152 let151) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let154 let153) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let157 let156) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let158 True) => -- EVALUATE
fun lean_r54 : (Eq let160 let159) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let52 let161) => -- THEORY_REWRITE_BOOL
fun lean_r56 : let164 => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let165 let96) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let83 let166) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let167 let79) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let168 False) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let169 let19) => -- THEORY_REWRITE_ARITH
fun lean_r62 : let157 => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let170 let60) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let172 let171) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let173 let21) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let174 let18) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let175 let79) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let176 let148) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let182 let79) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let183 let177) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let184 True) => -- EVALUATE
fun lean_r72 : (Eq let185 let178) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let186 let180) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let145 let187) => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq let188 let181) => -- THEORY_REWRITE_ARITH
fun lean_a76 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a77 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a78 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a79 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a80 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a81 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a82 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a83 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a84 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a85 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a86 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a87 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a88 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a89 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a90 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a91 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a92 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a93 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a94 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a95 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a96 : (binrel% LE.le (binrel% HSub.hSub x1x5fplus x1x5fminus) let2) =>
fun lean_a97 : let189 =>
fun lean_a98 : let190 =>
fun lean_a99 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 let40)))))))) let2) =>
fun lean_a100 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let192 (binrel% HAdd.hAdd let191 let71)))))))) let1) =>
fun lean_a101 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x5x5fminus let27)))))) let3) =>
fun lean_a102 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let194 let193)))) let1) =>
fun lean_a103 : let195 =>
fun lean_a104 : let196 =>
fun lean_a105 : let197 =>
fun lean_a106 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x6x5fminus) (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let194 let27)))))) let1) =>
fun lean_a107 : (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let194 let63)))) let2) =>
fun lean_a108 : let198 =>
fun lean_a109 : let129 =>
fun lean_a110 : let199 =>
fun lean_a111 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 let5)))) let1) =>
fun lean_a112 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus let146)))) let3) =>
fun lean_a113 : (binrel% LE.le (binrel% HAdd.hAdd let192 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let70 let27)))) let3) =>
fun lean_a114 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let6 x6x5fminus))) let3) =>
fun lean_a115 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 let74)))))))) let3) =>
fun lean_a116 : let200 =>
fun lean_a117 : let201 =>
fun lean_a118 : let202 =>
fun lean_a119 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x5x5fminus) let53)))))) let1) =>
fun lean_a120 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fplus let194))))))) let2) =>
fun lean_a121 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let43 let40)))))) let3) =>
fun lean_a122 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let192 (binrel% HAdd.hAdd let191 let193)))) let2) =>
fun lean_a123 : (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let104 let40)))) let1) =>
fun lean_a124 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x6x5fminus let134)))) let3) => by
have lean_s0 : (Or let82 (Or let51 (Or let209 (Or let97 (Or let206 (Or let205 (Or let155 (Or let208 (Or let207 (Or let204 (Or let144 False))))))))))) :=
  (scope (fun lean_a125 : let35 =>
    (scope (fun lean_a126 : let50 =>
      (scope (fun lean_a127 : let171 =>
        (scope (fun lean_a128 : let96 =>
          (scope (fun lean_a129 : let159 =>
            (scope (fun lean_a130 : let200 =>
              (scope (fun lean_a131 : let12 =>
                (scope (fun lean_a132 : let120 =>
                  (scope (fun lean_a133 : let151 =>
                    (scope (fun lean_a134 : let203 =>
                      (scope (fun lean_a135 : let58 =>
                        let lean_s0 := by timed flipCongrArg lean_r22 [GE.ge]
                        have lean_s1 : (Eq let1 let1) := by timed rfl
                        have lean_s2 : (Eq let202 let127) := by timed congr lean_s0 lean_s1
                        have lean_s3 : (Eq let202 let58) := by timed Eq.trans lean_s2 lean_r37
                        have lean_s4 : let58 := by timed eqResolve lean_a118 lean_s3
                        have lean_s5 : (Eq let58 let88) := by timed Eq.symm lean_r20
                        have lean_s6 : let88 := by timed eqResolve lean_s4 lean_s5
                        have lean_s7 : let59 := by intTightUb lean_s6
                        have lean_s8 : (Or let162 False) :=
                          (scope (fun lean_a135 : let59 =>
                            have lean_s8 : let38 := by timed trueElim lean_r6
                            have lean_s9 : let236 := by timed And.intro lean_s8 lean_a135
                            have lean_s10 : (Implies let236 let235) := by arithMulPos [let44, let1, let37], 1
                            have lean_s11 : let235 := by timed modusPonens lean_s9 lean_s10
                            have lean_s12 : let143 := by timed trueElim lean_r47
                            let lean_s13 := by timed flipCongrArg lean_r9 [GE.ge]
                            have lean_s14 : (Eq let201 let203) := by timed congr lean_s13 lean_s1
                            have lean_s15 : let203 := by timed eqResolve lean_a117 lean_s14
                            have lean_s16 : let234 := by timed And.intro lean_s12 lean_s15
                            have lean_s17 : (Implies let234 let233) := by arithMulNeg [let55, let1, let86], 3
                            have lean_s18 : let233 := by timed modusPonens lean_s16 lean_s17
                            have lean_s19 : let130 := by timed trueElim lean_r40
                            let lean_s20 := by timed flipCongrArg lean_r13 [LE.le]
                            have lean_s21 : (Eq let197 let152) := by timed congr lean_s20 lean_s1
                            have lean_s22 : (Eq let197 let151) := by timed Eq.trans lean_s21 lean_r50
                            have lean_s23 : let151 := by timed eqResolve lean_a105 lean_s22
                            have lean_s24 : let232 := by timed And.intro lean_s19 lean_s23
                            have lean_s25 : (Implies let232 let231) := by arithMulNeg [let150, let1, let80], 3
                            have lean_s26 : let231 := by timed modusPonens lean_s24 lean_s25
                            have lean_s27 : let184 := by timed trueElim lean_r71
                            let lean_s28 := by timed flipCongrArg lean_r34 [LE.le]
                            have lean_s29 : (Eq let3 let3) := by timed rfl
                            have lean_s30 : (Eq let196 let122) := by timed congr lean_s28 lean_s29
                            have lean_s31 : (Eq let196 let120) := by timed Eq.trans lean_s30 lean_r32
                            have lean_s32 : let120 := by timed eqResolve lean_a104 lean_s31
                            have lean_s33 : let230 := by timed And.intro lean_s27 lean_s32
                            have lean_s34 : (Implies let230 let229) := by arithMulNeg [let119, let2, let148], 3
                            have lean_s35 : let229 := by timed modusPonens lean_s33 lean_s34
                            have lean_s36 : let158 := by timed trueElim lean_r53
                            have lean_s37 : let12 := by timed eqResolve lean_a109 lean_r39
                            have lean_s38 : (Eq let12 let13) := by timed Eq.symm lean_r0
                            have lean_s39 : let13 := by timed eqResolve lean_s37 lean_s38
                            have lean_s40 : let129 := by intTightUb lean_s39
                            have lean_s41 : let228 := by timed And.intro lean_s36 lean_s40
                            have lean_s42 : (Implies let228 let227) := by arithMulPos [let10, let3, let99], 1
                            have lean_s43 : let227 := by timed modusPonens lean_s41 lean_s42
                            have lean_s44 : let17 := by timed trueElim lean_r1
                            have lean_s45 : let226 := by timed And.intro lean_s44 lean_a130
                            have lean_s46 : (Implies let226 let225) := by arithMulNeg [let116, let1, let16], 3
                            have lean_s47 : let225 := by timed modusPonens lean_s45 lean_s46
                            have lean_s48 : let20 := by timed trueElim lean_r2
                            let lean_s49 := by timed flipCongrArg lean_r27 [LE.le]
                            have lean_s50 : (Eq let2 let2) := by timed rfl
                            have lean_s51 : (Eq let198 let160) := by timed congr lean_s49 lean_s50
                            have lean_s52 : (Eq let198 let159) := by timed Eq.trans lean_s51 lean_r54
                            have lean_s53 : let159 := by timed eqResolve lean_a108 lean_s52
                            have lean_s54 : let224 := by timed And.intro lean_s48 lean_s53
                            have lean_s55 : (Implies let224 let223) := by arithMulNeg [let132, let3, let19], 3
                            have lean_s56 : let223 := by timed modusPonens lean_s54 lean_s55
                            have lean_s57 : let22 := by timed trueElim lean_r3
                            let lean_s58 := by timed flipCongrArg lean_r44 [LE.le]
                            have lean_s59 : (Eq let195 let126) := by timed congr lean_s58 lean_s50
                            have lean_s60 : (Eq let195 let96) := by timed Eq.trans lean_s59 lean_r36
                            have lean_s61 : let96 := by timed eqResolve lean_a103 lean_s60
                            have lean_s62 : (Eq let96 let165) := by timed Eq.symm lean_r57
                            have lean_s63 : let165 := by timed eqResolve lean_s61 lean_s62
                            have lean_s64 : let126 := by intTightUb lean_s63
                            have lean_s65 : let222 := by timed And.intro lean_s57 lean_s64
                            have lean_s66 : (Implies let222 let221) := by arithMulPos [let67, let2, let21], 1
                            have lean_s67 : let221 := by timed modusPonens lean_s65 lean_s66
                            have lean_s68 : let25 := by timed trueElim lean_r4
                            let lean_s69 := by timed flipCongrArg lean_r25 [LE.le]
                            have lean_s70 : (Eq let189 let172) := by timed congr lean_s69 lean_s1
                            have lean_s71 : (Eq let189 let171) := by timed Eq.trans lean_s70 lean_r64
                            have lean_s72 : let171 := by timed eqResolve lean_a97 lean_s71
                            have lean_s73 : let220 := by timed And.intro lean_s68 lean_s72
                            have lean_s74 : (Implies let220 let219) := by arithMulNeg [let109, let1, let24], 3
                            have lean_s75 : let219 := by timed modusPonens lean_s73 lean_s74
                            have lean_s76 : let85 := by timed trueElim lean_r18
                            let lean_s77 := by timed flipCongrArg lean_r42 [LE.le]
                            have lean_s78 : (Eq let199 let125) := by timed congr lean_s77 lean_s29
                            have lean_s79 : (Eq let199 let50) := by timed Eq.trans lean_s78 lean_r35
                            have lean_s80 : let50 := by timed eqResolve lean_a110 lean_s79
                            have lean_s81 : (Eq let50 let78) := by timed Eq.symm lean_r15
                            have lean_s82 : let78 := by timed eqResolve lean_s80 lean_s81
                            have lean_s83 : let125 := by intTightUb lean_s82
                            have lean_s84 : let218 := by timed And.intro lean_s76 lean_s83
                            have lean_s85 : (Implies let218 let217) := by arithMulPos [let48, let3, let84], 1
                            have lean_s86 : let217 := by timed modusPonens lean_s84 lean_s85
                            have lean_s87 : let61 := by timed trueElim lean_r11
                            let lean_s88 := by timed flipCongrArg lean_r38 [LE.le]
                            have lean_s89 : (Eq let190 let114) := by timed congr lean_s88 lean_s50
                            have lean_s90 : (Eq let190 let35) := by timed Eq.trans lean_s89 lean_r29
                            have lean_s91 : let35 := by timed eqResolve lean_a98 lean_s90
                            have lean_s92 : (Eq let35 let36) := by timed Eq.symm lean_r5
                            have lean_s93 : let36 := by timed eqResolve lean_s91 lean_s92
                            have lean_s94 : let114 := by intTightUb lean_s93
                            have lean_s95 : let216 := by timed And.intro lean_s87 lean_s94
                            have lean_s96 : (Implies let216 let215) := by arithMulPos [let33, let2, let60], 1
                            have lean_s97 : let215 := by timed modusPonens lean_s95 lean_s96
                            have lean_s98 : let214 := by sumBounds [lean_s11, lean_s18, lean_s26, lean_s35, lean_s43, lean_s47, lean_s56, lean_s67, lean_s75, lean_s86, lean_s97]
                            let lean_s99 := by timed congrHAdd lean_r72 lean_r70
                            let lean_s100 := by timed congrHAdd lean_r26 lean_s99
                            let lean_s101 := by timed congrHAdd lean_r73 lean_s100
                            let lean_s102 := by timed congrHAdd lean_r41 lean_s101
                            let lean_s103 := by timed congrHAdd lean_r30 lean_s102
                            let lean_s104 := by timed congrHAdd lean_r24 lean_s103
                            let lean_s105 := by timed congrHAdd lean_r49 lean_s104
                            let lean_s106 := by timed congrHAdd lean_r75 lean_s105
                            let lean_s107 := by timed congrHAdd lean_r45 lean_s106
                            have lean_s108 : (Eq let213 let182) := by timed congrHAdd lean_r7 lean_s107
                            have lean_s109 : (Eq let213 let79) := by timed Eq.trans lean_s108 lean_r69
                            let lean_s110 := by timed flipCongrArg lean_s109 [LE.le]
                            let lean_s111 := by timed congrHAdd lean_r51 lean_r63
                            let lean_s112 := by timed congrHAdd lean_r43 lean_s111
                            let lean_s113 := by timed congrHAdd lean_r65 lean_s112
                            let lean_s114 := by timed congrHAdd lean_r66 lean_s113
                            let lean_s115 := by timed congrHAdd lean_r67 lean_s114
                            let lean_s116 := by timed congrHAdd lean_r33 lean_s115
                            let lean_s117 := by timed congrHAdd lean_r68 lean_s116
                            let lean_s118 := by timed congrHAdd lean_r16 lean_s117
                            let lean_s119 := by timed congrHAdd lean_r19 lean_s118
                            have lean_s120 : (Eq let212 let169) := by timed congrHAdd lean_r59 lean_s119
                            have lean_s121 : (Eq let212 let19) := by timed Eq.trans lean_s120 lean_r61
                            have lean_s122 : (Eq let214 let168) := by timed congr lean_s110 lean_s121
                            have lean_s123 : (Eq let214 False) := by timed Eq.trans lean_s122 lean_r60
                            show False from by timed eqResolve lean_s98 lean_s123
                          ))
                        have lean_s9 : let162 := by liftOrNToNeg lean_s8
                        have lean_s10 : (Eq let162 let144) := by timed flipCongrArg lean_r10 [Not]
                        have lean_s11 : (Eq let162 let57) := by timed Eq.trans lean_s10 lean_r48
                        have lean_s12 : (Eq let163 let57) := by timed Eq.trans lean_r56 lean_s11
                        have lean_s13 : (Eq let57 let163) := by timed Eq.symm lean_s12
                        have lean_s14 : (Eq let162 let163) := by timed Eq.trans lean_s11 lean_s13
                        have lean_s15 : let163 := by timed eqResolve lean_s9 lean_s14
                        have lean_s16 : (Eq let57 let162) := by timed Eq.symm lean_s11
                        have lean_s17 : let164 := by timed Eq.trans lean_s12 lean_s16
                        have lean_s18 : let162 := by timed eqResolve lean_s15 lean_s17
                        show False from by timed contradiction lean_s7 lean_s18
  ))))))))))))))))))))))
have lean_s1 : (Not (And let35 (And let50 (And let171 (And let96 (And let159 (And let200 (And let12 (And let120 (And let151 (And let203 let58))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let211 := by timed flipNotAnd lean_s1 [let35, let50, let171, let96, let159, let200, let12, let120, let151, let203, let58]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let77 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let166 let77) := by timed congr lean_s5 lean_r17
have lean_s7 : (Eq let166 True) := by timed Eq.trans lean_s6 lean_r14
have lean_s8 : (Eq let83 True) := by timed Eq.trans lean_r58 lean_s7
have lean_s9 : let83 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let113 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let161 let113) := by timed congr lean_s12 lean_r8
have lean_s14 : (Eq let161 True) := by timed Eq.trans lean_s13 lean_r28
have lean_s15 : (Eq let52 True) := by timed Eq.trans lean_r55 lean_s14
have lean_s16 : let52 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : (Eq let209 let209) := by timed rfl
let lean_s19 := by timed congr lean_s3 lean_s18
have lean_s20 : let69 := by timed rfl
let lean_s21 := by timed flipCongrArg lean_s20 [Eq]
have lean_s22 : (Eq let142 let69) := by timed congr lean_s21 lean_r23
have lean_s23 : (Eq let142 True) := by timed Eq.trans lean_s22 lean_r12
have lean_s24 : (Eq let98 True) := by timed Eq.trans lean_r46 lean_s23
have lean_s25 : let98 := by timed trueElim lean_s24
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : (Eq let206 let206) := by timed rfl
let lean_s28 := by timed congr lean_s3 lean_s27
have lean_s29 : (Eq let205 let205) := by timed rfl
let lean_s30 := by timed congr lean_s3 lean_s29
have lean_s31 : let89 := by timed rfl
let lean_s32 := by timed flipCongrArg lean_s31 [Eq]
have lean_s33 : (Eq let156 let89) := by timed congr lean_s32 lean_r62
have lean_s34 : (Eq let156 True) := by timed Eq.trans lean_s33 lean_r21
have lean_s35 : (Eq let157 True) := by timed Eq.trans lean_r52 lean_s34
have lean_s36 : let157 := by timed trueElim lean_s35
let lean_s37 := by timed congr lean_s3 lean_s36
have lean_s38 : (Eq let208 let208) := by timed rfl
let lean_s39 := by timed congr lean_s3 lean_s38
have lean_s40 : (Eq let207 let207) := by timed rfl
let lean_s41 := by timed congr lean_s3 lean_s40
have lean_s42 : (Eq let204 let204) := by timed rfl
let lean_s43 := by timed congr lean_s3 lean_s42
have lean_s44 : let118 := by timed rfl
let lean_s45 := by timed flipCongrArg lean_s44 [Eq]
have lean_s46 : (Eq let187 let118) := by timed congr lean_s45 lean_r48
have lean_s47 : (Eq let187 True) := by timed Eq.trans lean_s46 lean_r31
have lean_s48 : (Eq let145 True) := by timed Eq.trans lean_r74 lean_s47
have lean_s49 : let145 := by timed trueElim lean_s48
let lean_s50 := by timed congr lean_s43 lean_s49
let lean_s51 := by timed congr lean_s41 lean_s50
let lean_s52 := by timed congr lean_s39 lean_s51
let lean_s53 := by timed congr lean_s37 lean_s52
let lean_s54 := by timed congr lean_s30 lean_s53
let lean_s55 := by timed congr lean_s28 lean_s54
let lean_s56 := by timed congr lean_s26 lean_s55
let lean_s57 := by timed congr lean_s19 lean_s56
let lean_s58 := by timed congr lean_s17 lean_s57
have lean_s59 : (Eq let211 let210) := by timed congr lean_s10 lean_s58
have lean_s60 : let210 := by timed eqResolve lean_s2 lean_s59
have lean_s61 : (Or let34 (Or let68 (Or let11 (Or let49 (Or let57 (Or let209 (Or let208 (Or let207 (Or let206 (Or let205 let204)))))))))) := by permutateOr lean_s60, [0, 3, 6, 1, 10, 2, 7, 8, 4, 5, 9], (- 1)
let lean_s62 := by timed flipCongrArg lean_r22 [GE.ge]
have lean_s63 : (Eq let1 let1) := by timed rfl
have lean_s64 : (Eq let202 let127) := by timed congr lean_s62 lean_s63
have lean_s65 : (Eq let202 let58) := by timed Eq.trans lean_s64 lean_r37
have lean_s66 : let58 := by timed eqResolve lean_a118 lean_s65
let lean_s67 := by R1 lean_s61, lean_s66, let57, [(- 1), 0]
let lean_s68 := by timed flipCongrArg lean_r9 [GE.ge]
have lean_s69 : (Eq let201 let203) := by timed congr lean_s68 lean_s63
have lean_s70 : let203 := by timed eqResolve lean_a117 lean_s69
let lean_s71 := by R2 lean_s67, lean_s70, let203, [(- 1), 0]
let lean_s72 := by R2 lean_s71, lean_a116, let200, [(- 1), 0]
let lean_s73 := by timed flipCongrArg lean_r42 [LE.le]
have lean_s74 : (Eq let3 let3) := by timed rfl
have lean_s75 : (Eq let199 let125) := by timed congr lean_s73 lean_s74
have lean_s76 : (Eq let199 let50) := by timed Eq.trans lean_s75 lean_r35
have lean_s77 : let50 := by timed eqResolve lean_a110 lean_s76
let lean_s78 := by R1 lean_s72, lean_s77, let49, [(- 1), 0]
have lean_s79 : let12 := by timed eqResolve lean_a109 lean_r39
let lean_s80 := by R1 lean_s78, lean_s79, let11, [(- 1), 0]
let lean_s81 := by timed flipCongrArg lean_r27 [LE.le]
have lean_s82 : (Eq let2 let2) := by timed rfl
have lean_s83 : (Eq let198 let160) := by timed congr lean_s81 lean_s82
have lean_s84 : (Eq let198 let159) := by timed Eq.trans lean_s83 lean_r54
have lean_s85 : let159 := by timed eqResolve lean_a108 lean_s84
let lean_s86 := by R2 lean_s80, lean_s85, let159, [(- 1), 0]
let lean_s87 := by timed flipCongrArg lean_r13 [LE.le]
have lean_s88 : (Eq let197 let152) := by timed congr lean_s87 lean_s63
have lean_s89 : (Eq let197 let151) := by timed Eq.trans lean_s88 lean_r50
have lean_s90 : let151 := by timed eqResolve lean_a105 lean_s89
let lean_s91 := by R2 lean_s86, lean_s90, let151, [(- 1), 0]
let lean_s92 := by timed flipCongrArg lean_r34 [LE.le]
have lean_s93 : (Eq let196 let122) := by timed congr lean_s92 lean_s74
have lean_s94 : (Eq let196 let120) := by timed Eq.trans lean_s93 lean_r32
have lean_s95 : let120 := by timed eqResolve lean_a104 lean_s94
let lean_s96 := by R2 lean_s91, lean_s95, let120, [(- 1), 0]
let lean_s97 := by timed flipCongrArg lean_r44 [LE.le]
have lean_s98 : (Eq let195 let126) := by timed congr lean_s97 lean_s82
have lean_s99 : (Eq let195 let96) := by timed Eq.trans lean_s98 lean_r36
have lean_s100 : let96 := by timed eqResolve lean_a103 lean_s99
let lean_s101 := by R1 lean_s96, lean_s100, let68, [(- 1), 0]
let lean_s102 := by timed flipCongrArg lean_r38 [LE.le]
have lean_s103 : (Eq let190 let114) := by timed congr lean_s102 lean_s82
have lean_s104 : (Eq let190 let35) := by timed Eq.trans lean_s103 lean_r29
have lean_s105 : let35 := by timed eqResolve lean_a98 lean_s104
let lean_s106 := by R1 lean_s101, lean_s105, let34, [(- 1), 0]
let lean_s107 := by timed flipCongrArg lean_r25 [LE.le]
have lean_s108 : (Eq let189 let172) := by timed congr lean_s107 lean_s63
have lean_s109 : (Eq let189 let171) := by timed Eq.trans lean_s108 lean_r64
have lean_s110 : let171 := by timed eqResolve lean_a97 lean_s109
exact (show False from by R2 lean_s106, lean_s110, let171, [0, 0])


