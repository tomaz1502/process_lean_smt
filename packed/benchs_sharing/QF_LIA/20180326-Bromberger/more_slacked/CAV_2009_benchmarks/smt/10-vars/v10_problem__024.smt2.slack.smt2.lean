open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x9x5fplus : Int}
variable {x9x5fminus : Int}
variable {x8x5fplus : Int}
variable {x8x5fminus : Int}
variable {x6x5fplus : Int}
variable {x8x5fplus : Int}
variable {x0x5fplus : Int}
variable {x6x5fplus : Int}
variable {x3x5fplus : Int}
variable {x8x5fminus : Int}
variable {x4x5fplus : Int}
variable {x2x5fminus : Int}
variable {x1x5fplus : Int}
variable {x5x5fplus : Int}
variable {x1x5fminus : Int}
variable {x2x5fminus : Int}
variable {x4x5fminus : Int}
variable {x7x5fplus : Int}
variable {x0x5fminus : Int}
variable {x3x5fminus : Int}
variable {x7x5fminus : Int}
variable {x0x5fplus : Int}
variable {x5x5fminus : Int}
variable {x0x5fminus : Int}
variable {x2x5fplus : Int}
variable {x6x5fminus : Int}
variable {x4x5fplus : Int}
variable {x2x5fplus : Int}
variable {x5x5fminus : Int}
variable {x5x5fplus : Int}
variable {x3x5fplus : Int}
variable {x6x5fminus : Int}
variable {x9x5fminus : Int}
variable {x9x5fplus : Int}
variable {x1x5fminus : Int}
variable {x7x5fminus : Int}
variable {x7x5fplus : Int}
variable {x1x5fplus : Int}
variable {x3x5fminus : Int}
variable {x4x5fminus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 1)
  let let6 := (Neg.neg let5)
  let let7 := (binrel% HMul.hMul let6 x5x5fminus)
  let let8 := (binrel% HMul.hMul let6 x6x5fminus)
  let let9 := (binrel% HMul.hMul let6 x0x5fminus)
  let let10 := (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x5x5fplus let7)))))
  let let11 := (binrel% GE.ge let10 let5)
  let let12 := (Not let11)
  let let13 := (binrel% LT.lt let10 let5)
  let let14 := (Int.ofNat 11)
  let let15 := (binrel% HDiv.hDiv (Int.ofNat 9) let14)
  let let16 := (binrel% GT.gt let15 let1)
  let let17 := (binrel% HMul.hMul let6 x4x5fminus)
  let let18 := (binrel% HAdd.hAdd x4x5fplus let17)
  let let19 := (binrel% HMul.hMul let6 x3x5fminus)
  let let20 := (binrel% HMul.hMul let6 x9x5fminus)
  let let21 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let19 let18))))
  let let22 := (binrel% GE.ge let21 let5)
  let let23 := (Not let22)
  let let24 := (binrel% LT.lt let21 let5)
  let let25 := (binrel% HMul.hMul let6 x5x5fplus)
  let let26 := (binrel% HMul.hMul let6 x1x5fminus)
  let let27 := (binrel% HMul.hMul let6 x7x5fplus)
  let let28 := (binrel% HMul.hMul let6 x8x5fminus)
  let let29 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let25 x5x5fminus)))))))
  let let30 := (binrel% GE.ge let29 let1)
  let let31 := (Not let30)
  let let32 := (binrel% LT.lt let29 let1)
  let let33 := (binrel% HMul.hMul let6 x2x5fminus)
  let let34 := (binrel% HAdd.hAdd x2x5fplus let33)
  let let35 := (binrel% HMul.hMul let6 x3x5fplus)
  let let36 := (binrel% HMul.hMul let6 x1x5fplus)
  let let37 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fminus let34))))))
  let let38 := (binrel% GE.ge let37 let5)
  let let39 := (Not let38)
  let let40 := (binrel% LT.lt let37 let5)
  let let41 := (binrel% HDiv.hDiv (Int.ofNat 4) let14)
  let let42 := (Neg.neg let41)
  let let43 := (binrel% LT.lt let42 let1)
  let let44 := (binrel% HDiv.hDiv (Int.ofNat 28) let14)
  let let45 := (binrel% GT.gt let44 let1)
  let let46 := (Not let31)
  let let47 := (Eq let46 let30)
  let let48 := (binrel% HMul.hMul let6 x4x5fplus)
  let let49 := (binrel% HAdd.hAdd let48 x4x5fminus)
  let let50 := (binrel% HMul.hMul let6 x7x5fminus)
  let let51 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus let49))))
  let let52 := (binrel% GE.ge let51 let5)
  let let53 := (Not let52)
  let let54 := (Not let53)
  let let55 := (Eq let54 let52)
  let let56 := (Eq let30 let30)
  let let57 := (Eq let52 let52)
  let let58 := (binrel% HAdd.hAdd let36 x1x5fminus)
  let let59 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let33 let58))))))
  let let60 := (Rat.ofInt 0)
  let let61 := (binrel% HDiv.hDiv (Int.ofNat 17) let14)
  let let62 := (binrel% HMul.hMul let61 let1)
  let let63 := (Eq let11 let11)
  let let64 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 let49))))
  let let65 := (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x4x5fminus let58))
  let let66 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 let65))
  let let67 := (binrel% HMul.hMul let6 x6x5fplus)
  let let68 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x6x5fminus let18))))
  let let69 := (binrel% GE.ge let68 let5)
  let let70 := (Not let69)
  let let71 := (binrel% GE.ge let64 let1)
  let let72 := (Not let12)
  let let73 := (Eq let72 let11)
  let let74 := (binrel% HDiv.hDiv (Int.ofNat 10) let14)
  let let75 := (Neg.neg let74)
  let let76 := (binrel% HMul.hMul let75 let5)
  let let77 := (binrel% HMul.hMul let44 let1)
  let let78 := (binrel% HMul.hMul let42 let5)
  let let79 := (binrel% HDiv.hDiv (Int.ofNat 12) let14)
  let let80 := (Neg.neg let79)
  let let81 := (binrel% HMul.hMul let80 let1)
  let let82 := (binrel% HDiv.hDiv (Int.ofNat 8) let14)
  let let83 := (binrel% HMul.hMul let82 let6)
  let let84 := (binrel% HMul.hMul let15 let5)
  let let85 := (binrel% HDiv.hDiv (Int.ofNat 13) let14)
  let let86 := (Neg.neg let85)
  let let87 := (binrel% HMul.hMul let86 let1)
  let let88 := (binrel% HDiv.hDiv (Int.ofNat 27) let14)
  let let89 := (binrel% HMul.hMul let88 let1)
  let let90 := (binrel% HMul.hMul let3 let6)
  let let91 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let77 let76))))))))))
  let let92 := (binrel% HAdd.hAdd let67 x6x5fminus)
  let let93 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let9 let92))))))
  let let94 := (binrel% HMul.hMul let75 let93)
  let let95 := (binrel% HMul.hMul let44 let51)
  let let96 := (binrel% HMul.hMul let6 x0x5fplus)
  let let97 := (binrel% HMul.hMul let6 x8x5fplus)
  let let98 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x4x5fminus let34))))))))))))))
  let let99 := (binrel% HMul.hMul let42 let98)
  let let100 := (binrel% HMul.hMul let61 let37)
  let let101 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fminus let18))))))
  let let102 := (binrel% HMul.hMul let80 let101)
  let let103 := (binrel% HMul.hMul let82 let29)
  let let104 := (binrel% HMul.hMul let15 let21)
  let let105 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let7 let34))))
  let let106 := (binrel% HMul.hMul let86 let105)
  let let107 := (binrel% HMul.hMul let88 let68)
  let let108 := (binrel% HMul.hMul let61 let10)
  let let109 := (binrel% HAdd.hAdd x0x5fplus let9)
  let let110 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 let109))
  let let111 := (binrel% HMul.hMul let3 let110)
  let let112 := (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let95 let94))))))))))
  let let113 := (binrel% GE.ge let112 let91)
  let let114 := (Not let113)
  let let115 := (binrel% LT.lt let112 let91)
  let let116 := (Neg.neg let82)
  let let117 := (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let116 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let116 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let116 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let116 x5x5fplus) (binrel% HMul.hMul let82 x5x5fminus))))))))
  let let118 := (binrel% LT.lt let51 let5)
  let let119 := (binrel% HAdd.hAdd x1x5fplus let26)
  let let120 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x5x5fminus let119))))))
  let let121 := (binrel% LE.le let37 let1)
  let let122 := (Not let39)
  let let123 := (Eq let122 let38)
  let let124 := (binrel% LE.le let51 let1)
  let let125 := (binrel% LT.lt let75 let1)
  let let126 := (Eq let38 let38)
  let let127 := (binrel% LT.lt let68 let5)
  let let128 := (Neg.neg let15)
  let let129 := (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let128 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let128 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x4x5fplus) (binrel% HMul.hMul let128 x4x5fminus))))))
  let let130 := (Eq let22 let22)
  let let131 := (binrel% LE.le let10 let1)
  let let132 := (Not let23)
  let let133 := (Eq let22 let132)
  let let134 := (Eq let132 let22)
  let let135 := (Neg.neg let88)
  let let136 := (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let135 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let135 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x4x5fplus) (binrel% HMul.hMul let135 x4x5fminus))))))
  let let137 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let7 let109))))
  let let138 := (binrel% LT.lt let80 let1)
  let let139 := (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x6x5fplus) (binrel% HMul.hMul let75 x6x5fminus))))))))
  let let140 := (Neg.neg let44)
  let let141 := (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x4x5fplus) (binrel% HMul.hMul let44 x4x5fminus))))))
  let let142 := (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x2x5fplus) (binrel% HMul.hMul let41 x2x5fminus))))))))))))))))
  let let143 := (Neg.neg let61)
  let let144 := (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let143 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let143 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let143 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x2x5fplus) (binrel% HMul.hMul let143 x2x5fminus))))))))
  let let145 := (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x4x5fplus) (binrel% HMul.hMul let79 x4x5fminus))))))))
  let let146 := (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x2x5fplus) (binrel% HMul.hMul let85 x2x5fminus))))))
  let let147 := (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let143 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let143 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x5x5fplus) (binrel% HMul.hMul let143 x5x5fminus))))))
  let let148 := (binrel% HAdd.hAdd let96 x0x5fminus)
  let let149 := (Rat.ofInt (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus let148)))
  let let150 := (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let141 let139))))))))))
  let let151 := (binrel% LE.le let21 let1)
  let let152 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus let109))
  let let153 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x6x5fminus let152))))
  let let154 := (binrel% GT.gt let61 let1)
  let let155 := (Not True)
  let let156 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fplus let19)))))
  let let157 := (Eq let30 let46)
  let let158 := (Not let70)
  let let159 := (Eq let69 let158)
  let let160 := (Eq let158 let69)
  let let161 := (Eq let52 let54)
  let let162 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let35 x3x5fminus)))))))
  let let163 := (binrel% GT.gt let82 let1)
  let let164 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let33 let148))))))))))))))
  let let165 := (Eq let38 let122)
  let let166 := (binrel% GE.ge let110 let6)
  let let167 := (Not let166)
  let let168 := (binrel% LT.lt let110 let6)
  let let169 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 let65))
  let let170 := (Int.ofNat 2)
  let let171 := (Neg.neg (binrel% HDiv.hDiv let170 let14))
  let let172 := (binrel% GE.ge let60 let171)
  let let173 := (Eq let11 let72)
  let let174 := (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let60 let75))))))))))
  let let175 := (binrel% GT.gt let88 let1)
  let let176 := (binrel% LE.le let29 let6)
  let let177 := (Eq let69 let69)
  let let178 := (binrel% LT.lt let86 let1)
  let let179 := (Neg.neg let170)
  let let180 := (binrel% LE.le let120 let6)
  let let181 := (binrel% LE.le let59 let1)
  let let182 := (binrel% LE.le let137 let1)
  let let183 := (binrel% LE.le let156 let1)
  let let184 := (binrel% LE.le let169 let1)
  let let185 := (binrel% GE.ge let164 let5)
  let let186 := (Int.ofNat 3)
  let let187 := (binrel% GE.ge let153 let5)
  let let188 := (binrel% GE.ge let162 let1)
  let let189 := (binrel% GE.ge let105 let1)
  let let190 := (binrel% GE.ge let66 let1)
  let let191 := (binrel% GE.ge let98 let5)
  let let192 := (binrel% GE.ge let93 let5)
  let let193 := (binrel% GE.ge let101 let1)
  let let194 := (Not let189)
  let let195 := (Not let193)
  let let196 := (Not let192)
  let let197 := (Not let191)
  let let198 := (Or let196 (Or let52 (Or let197 (Or let38 (Or let195 (Or let30 (Or let22 (Or let194 (Or let69 (Or let11 let167))))))))))
  let let199 := (Or let196 (Or let54 (Or let197 (Or let122 (Or let195 (Or let46 (Or let132 (Or let194 (Or let158 (Or let72 let167))))))))))
  let let200 := (Or let167 False)
  let let201 := (binrel% LE.le let94 let76)
  let let202 := (And let125 let192)
  let let203 := (binrel% LE.le let95 let77)
  let let204 := (And let45 let124)
  let let205 := (binrel% LE.le let99 let78)
  let let206 := (And let43 let191)
  let let207 := (binrel% LE.le let100 let62)
  let let208 := (And let154 let121)
  let let209 := (binrel% LE.le let102 let81)
  let let210 := (And let138 let193)
  let let211 := (binrel% LE.le let103 let83)
  let let212 := (And let163 let176)
  let let213 := (binrel% LT.lt let104 let84)
  let let214 := (And let16 let24)
  let let215 := (binrel% LE.le let106 let87)
  let let216 := (And let178 let189)
  let let217 := (binrel% LE.le let107 let89)
  let let218 := (binrel% LE.le let68 let1)
  let let219 := (And let175 let218)
  let let220 := (binrel% LE.le let108 let62)
  let let221 := (And let154 let131)
  let let222 := (binrel% LE.le let111 let90)
  let let223 := (And let4 let166)
(Eq let4 True) → (Eq let13 let12) → (Eq let16 True) → (Eq let24 let23) → (Eq let32 let31) → (Eq let40 let39) → (Eq let43 True) → (Eq let45 True) → let47 → let55 → (Eq let56 True) → (Eq let57 True) → (Eq let59 let37) → (Eq let62 let60) → (Eq let63 True) → (Eq let66 let64) → (Eq let71 let70) → let73 → (Eq let115 let114) → (Eq let78 let42) → (Eq let103 let117) → (Eq let118 let53) → (Eq let120 let29) → (Eq let121 let39) → let123 → (Eq let124 let53) → (Eq let125 True) → (Eq let126 True) → (Eq let127 let70) → (Eq let104 let129) → (Eq let130 True) → (Eq let131 let12) → (Eq let83 let116) → (Eq let134 let133) → (Eq let107 let136) → (Eq let137 let10) → (Eq let138 True) → (Eq let150 let60) → (Eq let151 let23) → (Eq let153 let93) → (Eq let154 True) → (Eq let155 False) → (Eq let156 let21) → (Eq let47 let157) → (Eq let100 let144) → (Eq let160 let159) → (Eq let55 let161) → (Eq let162 let101) → (Eq let163 True) → (Eq let164 let98) → (Eq let123 let165) → (Eq let168 let167) → (Eq let169 let51) → (Eq let172 True) → (Eq let73 let173) → (Eq let174 let171) → (Eq let90 let2) → (Eq let102 let145) → (Eq let81 let60) → (Eq let175 True) → let134 → (Eq let106 let146) → (Eq let84 let15) → (Eq let76 let75) → (Eq let108 let147) → (Eq let176 let31) → (Eq let87 let60) → (Eq let77 let60) → (Eq let111 let149) → (Eq let89 let60) → (Eq let94 let139) → (Eq let177 True) → (Eq let95 let141) → (Eq let178 True) → let160 → (Eq let99 let142) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x9x5fminus) (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus let148)))))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let19 let152)))))) let5) → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let33 let119)))))) let1) → let180 → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let33 let152)))) let1) → let181 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 let34)))))) let1) → let182 → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fminus let109)))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus let92)))) let1) → let183 → let184 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x3x5fplus) (binrel% HMul.hMul let179 x3x5fminus)))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let17 let109)) let1) → let185 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd (binrel% HMul.hMul let186 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let186) x4x5fminus) (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x1x5fplus) (binrel% HMul.hMul let179 x1x5fminus)))))))))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let17 let34)))))))) let1) → let187 → let188 → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x2x5fplus) (binrel% HMul.hMul let170 x2x5fminus)))))))) let1) → let189 → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x2x5fplus) x2x5fminus))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x0x5fplus) (binrel% HMul.hMul let170 x0x5fminus)))))) let1) → let190 → let166 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 1)
  let let6 := (Neg.neg let5)
  let let7 := (binrel% HMul.hMul let6 x5x5fminus)
  let let8 := (binrel% HMul.hMul let6 x6x5fminus)
  let let9 := (binrel% HMul.hMul let6 x0x5fminus)
  let let10 := (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x5x5fplus let7)))))
  let let11 := (binrel% GE.ge let10 let5)
  let let12 := (Not let11)
  let let13 := (binrel% LT.lt let10 let5)
  let let14 := (Int.ofNat 11)
  let let15 := (binrel% HDiv.hDiv (Int.ofNat 9) let14)
  let let16 := (binrel% GT.gt let15 let1)
  let let17 := (binrel% HMul.hMul let6 x4x5fminus)
  let let18 := (binrel% HAdd.hAdd x4x5fplus let17)
  let let19 := (binrel% HMul.hMul let6 x3x5fminus)
  let let20 := (binrel% HMul.hMul let6 x9x5fminus)
  let let21 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let19 let18))))
  let let22 := (binrel% GE.ge let21 let5)
  let let23 := (Not let22)
  let let24 := (binrel% LT.lt let21 let5)
  let let25 := (binrel% HMul.hMul let6 x5x5fplus)
  let let26 := (binrel% HMul.hMul let6 x1x5fminus)
  let let27 := (binrel% HMul.hMul let6 x7x5fplus)
  let let28 := (binrel% HMul.hMul let6 x8x5fminus)
  let let29 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let25 x5x5fminus)))))))
  let let30 := (binrel% GE.ge let29 let1)
  let let31 := (Not let30)
  let let32 := (binrel% LT.lt let29 let1)
  let let33 := (binrel% HMul.hMul let6 x2x5fminus)
  let let34 := (binrel% HAdd.hAdd x2x5fplus let33)
  let let35 := (binrel% HMul.hMul let6 x3x5fplus)
  let let36 := (binrel% HMul.hMul let6 x1x5fplus)
  let let37 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fminus let34))))))
  let let38 := (binrel% GE.ge let37 let5)
  let let39 := (Not let38)
  let let40 := (binrel% LT.lt let37 let5)
  let let41 := (binrel% HDiv.hDiv (Int.ofNat 4) let14)
  let let42 := (Neg.neg let41)
  let let43 := (binrel% LT.lt let42 let1)
  let let44 := (binrel% HDiv.hDiv (Int.ofNat 28) let14)
  let let45 := (binrel% GT.gt let44 let1)
  let let46 := (Not let31)
  let let47 := (Eq let46 let30)
  let let48 := (binrel% HMul.hMul let6 x4x5fplus)
  let let49 := (binrel% HAdd.hAdd let48 x4x5fminus)
  let let50 := (binrel% HMul.hMul let6 x7x5fminus)
  let let51 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus let49))))
  let let52 := (binrel% GE.ge let51 let5)
  let let53 := (Not let52)
  let let54 := (Not let53)
  let let55 := (Eq let54 let52)
  let let56 := (Eq let30 let30)
  let let57 := (Eq let52 let52)
  let let58 := (binrel% HAdd.hAdd let36 x1x5fminus)
  let let59 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let33 let58))))))
  let let60 := (Rat.ofInt 0)
  let let61 := (binrel% HDiv.hDiv (Int.ofNat 17) let14)
  let let62 := (binrel% HMul.hMul let61 let1)
  let let63 := (Eq let11 let11)
  let let64 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 let49))))
  let let65 := (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x4x5fminus let58))
  let let66 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 let65))
  let let67 := (binrel% HMul.hMul let6 x6x5fplus)
  let let68 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x6x5fminus let18))))
  let let69 := (binrel% GE.ge let68 let5)
  let let70 := (Not let69)
  let let71 := (binrel% GE.ge let64 let1)
  let let72 := (Not let12)
  let let73 := (Eq let72 let11)
  let let74 := (binrel% HDiv.hDiv (Int.ofNat 10) let14)
  let let75 := (Neg.neg let74)
  let let76 := (binrel% HMul.hMul let75 let5)
  let let77 := (binrel% HMul.hMul let44 let1)
  let let78 := (binrel% HMul.hMul let42 let5)
  let let79 := (binrel% HDiv.hDiv (Int.ofNat 12) let14)
  let let80 := (Neg.neg let79)
  let let81 := (binrel% HMul.hMul let80 let1)
  let let82 := (binrel% HDiv.hDiv (Int.ofNat 8) let14)
  let let83 := (binrel% HMul.hMul let82 let6)
  let let84 := (binrel% HMul.hMul let15 let5)
  let let85 := (binrel% HDiv.hDiv (Int.ofNat 13) let14)
  let let86 := (Neg.neg let85)
  let let87 := (binrel% HMul.hMul let86 let1)
  let let88 := (binrel% HDiv.hDiv (Int.ofNat 27) let14)
  let let89 := (binrel% HMul.hMul let88 let1)
  let let90 := (binrel% HMul.hMul let3 let6)
  let let91 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let77 let76))))))))))
  let let92 := (binrel% HAdd.hAdd let67 x6x5fminus)
  let let93 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let9 let92))))))
  let let94 := (binrel% HMul.hMul let75 let93)
  let let95 := (binrel% HMul.hMul let44 let51)
  let let96 := (binrel% HMul.hMul let6 x0x5fplus)
  let let97 := (binrel% HMul.hMul let6 x8x5fplus)
  let let98 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x4x5fminus let34))))))))))))))
  let let99 := (binrel% HMul.hMul let42 let98)
  let let100 := (binrel% HMul.hMul let61 let37)
  let let101 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fminus let18))))))
  let let102 := (binrel% HMul.hMul let80 let101)
  let let103 := (binrel% HMul.hMul let82 let29)
  let let104 := (binrel% HMul.hMul let15 let21)
  let let105 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let7 let34))))
  let let106 := (binrel% HMul.hMul let86 let105)
  let let107 := (binrel% HMul.hMul let88 let68)
  let let108 := (binrel% HMul.hMul let61 let10)
  let let109 := (binrel% HAdd.hAdd x0x5fplus let9)
  let let110 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 let109))
  let let111 := (binrel% HMul.hMul let3 let110)
  let let112 := (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let95 let94))))))))))
  let let113 := (binrel% GE.ge let112 let91)
  let let114 := (Not let113)
  let let115 := (binrel% LT.lt let112 let91)
  let let116 := (Neg.neg let82)
  let let117 := (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let116 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let116 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let116 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let116 x5x5fplus) (binrel% HMul.hMul let82 x5x5fminus))))))))
  let let118 := (binrel% LT.lt let51 let5)
  let let119 := (binrel% HAdd.hAdd x1x5fplus let26)
  let let120 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x5x5fminus let119))))))
  let let121 := (binrel% LE.le let37 let1)
  let let122 := (Not let39)
  let let123 := (Eq let122 let38)
  let let124 := (binrel% LE.le let51 let1)
  let let125 := (binrel% LT.lt let75 let1)
  let let126 := (Eq let38 let38)
  let let127 := (binrel% LT.lt let68 let5)
  let let128 := (Neg.neg let15)
  let let129 := (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let128 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let128 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x4x5fplus) (binrel% HMul.hMul let128 x4x5fminus))))))
  let let130 := (Eq let22 let22)
  let let131 := (binrel% LE.le let10 let1)
  let let132 := (Not let23)
  let let133 := (Eq let22 let132)
  let let134 := (Eq let132 let22)
  let let135 := (Neg.neg let88)
  let let136 := (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let135 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let135 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let88 x4x5fplus) (binrel% HMul.hMul let135 x4x5fminus))))))
  let let137 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let7 let109))))
  let let138 := (binrel% LT.lt let80 let1)
  let let139 := (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let75 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let74 x6x5fplus) (binrel% HMul.hMul let75 x6x5fminus))))))))
  let let140 := (Neg.neg let44)
  let let141 := (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x4x5fplus) (binrel% HMul.hMul let44 x4x5fminus))))))
  let let142 := (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x2x5fplus) (binrel% HMul.hMul let41 x2x5fminus))))))))))))))))
  let let143 := (Neg.neg let61)
  let let144 := (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let143 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let143 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let143 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x2x5fplus) (binrel% HMul.hMul let143 x2x5fminus))))))))
  let let145 := (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let79 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let80 x4x5fplus) (binrel% HMul.hMul let79 x4x5fminus))))))))
  let let146 := (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let85 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let86 x2x5fplus) (binrel% HMul.hMul let85 x2x5fminus))))))
  let let147 := (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let143 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let143 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x5x5fplus) (binrel% HMul.hMul let143 x5x5fminus))))))
  let let148 := (binrel% HAdd.hAdd let96 x0x5fminus)
  let let149 := (Rat.ofInt (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus let148)))
  let let150 := (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let141 let139))))))))))
  let let151 := (binrel% LE.le let21 let1)
  let let152 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus let109))
  let let153 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x6x5fminus let152))))
  let let154 := (binrel% GT.gt let61 let1)
  let let155 := (Not True)
  let let156 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fplus let19)))))
  let let157 := (Eq let30 let46)
  let let158 := (Not let70)
  let let159 := (Eq let69 let158)
  let let160 := (Eq let158 let69)
  let let161 := (Eq let52 let54)
  let let162 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let35 x3x5fminus)))))))
  let let163 := (binrel% GT.gt let82 let1)
  let let164 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let33 let148))))))))))))))
  let let165 := (Eq let38 let122)
  let let166 := (binrel% GE.ge let110 let6)
  let let167 := (Not let166)
  let let168 := (binrel% LT.lt let110 let6)
  let let169 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 let65))
  let let170 := (Int.ofNat 2)
  let let171 := (Neg.neg (binrel% HDiv.hDiv let170 let14))
  let let172 := (binrel% GE.ge let60 let171)
  let let173 := (Eq let11 let72)
  let let174 := (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let60 let75))))))))))
  let let175 := (binrel% GT.gt let88 let1)
  let let176 := (binrel% LE.le let29 let6)
  let let177 := (Eq let69 let69)
  let let178 := (binrel% LT.lt let86 let1)
  let let179 := (Neg.neg let170)
  let let180 := (binrel% LE.le let120 let6)
  let let181 := (binrel% LE.le let59 let1)
  let let182 := (binrel% LE.le let137 let1)
  let let183 := (binrel% LE.le let156 let1)
  let let184 := (binrel% LE.le let169 let1)
  let let185 := (binrel% GE.ge let164 let5)
  let let186 := (Int.ofNat 3)
  let let187 := (binrel% GE.ge let153 let5)
  let let188 := (binrel% GE.ge let162 let1)
  let let189 := (binrel% GE.ge let105 let1)
  let let190 := (binrel% GE.ge let66 let1)
  let let191 := (binrel% GE.ge let98 let5)
  let let192 := (binrel% GE.ge let93 let5)
  let let193 := (binrel% GE.ge let101 let1)
  let let194 := (Not let189)
  let let195 := (Not let193)
  let let196 := (Not let192)
  let let197 := (Not let191)
  let let198 := (Or let196 (Or let52 (Or let197 (Or let38 (Or let195 (Or let30 (Or let22 (Or let194 (Or let69 (Or let11 let167))))))))))
  let let199 := (Or let196 (Or let54 (Or let197 (Or let122 (Or let195 (Or let46 (Or let132 (Or let194 (Or let158 (Or let72 let167))))))))))
  let let200 := (Or let167 False)
  let let201 := (binrel% LE.le let94 let76)
  let let202 := (And let125 let192)
  let let203 := (binrel% LE.le let95 let77)
  let let204 := (And let45 let124)
  let let205 := (binrel% LE.le let99 let78)
  let let206 := (And let43 let191)
  let let207 := (binrel% LE.le let100 let62)
  let let208 := (And let154 let121)
  let let209 := (binrel% LE.le let102 let81)
  let let210 := (And let138 let193)
  let let211 := (binrel% LE.le let103 let83)
  let let212 := (And let163 let176)
  let let213 := (binrel% LT.lt let104 let84)
  let let214 := (And let16 let24)
  let let215 := (binrel% LE.le let106 let87)
  let let216 := (And let178 let189)
  let let217 := (binrel% LE.le let107 let89)
  let let218 := (binrel% LE.le let68 let1)
  let let219 := (And let175 let218)
  let let220 := (binrel% LE.le let108 let62)
  let let221 := (And let154 let131)
  let let222 := (binrel% LE.le let111 let90)
  let let223 := (And let4 let166)
fun lean_r0 : (Eq let4 True) => -- EVALUATE
fun lean_r1 : (Eq let13 let12) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let16 True) => -- EVALUATE
fun lean_r3 : (Eq let24 let23) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let32 let31) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let40 let39) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let43 True) => -- EVALUATE
fun lean_r7 : (Eq let45 True) => -- EVALUATE
fun lean_r8 : let47 => -- THEORY_REWRITE_BOOL
fun lean_r9 : let55 => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq let56 True) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let57 True) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let59 let37) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let62 let60) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let63 True) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let66 let64) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let71 let70) => -- THEORY_REWRITE_ARITH
fun lean_r17 : let73 => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let115 let114) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let78 let42) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let103 let117) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let118 let53) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let120 let29) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let121 let39) => -- THEORY_REWRITE_ARITH
fun lean_r24 : let123 => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq let124 let53) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let125 True) => -- EVALUATE
fun lean_r27 : (Eq let126 True) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let127 let70) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let104 let129) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let130 True) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let131 let12) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let83 let116) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let134 let133) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let107 let136) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let137 let10) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let138 True) => -- EVALUATE
fun lean_r37 : (Eq let150 let60) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let151 let23) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let153 let93) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let154 True) => -- EVALUATE
fun lean_r41 : (Eq let155 False) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq let156 let21) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let47 let157) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let100 let144) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let160 let159) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let55 let161) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let162 let101) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let163 True) => -- EVALUATE
fun lean_r49 : (Eq let164 let98) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let123 let165) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq let168 let167) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let169 let51) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let172 True) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let73 let173) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq let174 let171) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let90 let2) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let102 let145) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let81 let60) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let175 True) => -- EVALUATE
fun lean_r60 : let134 => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq let106 let146) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let84 let15) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let76 let75) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let108 let147) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let176 let31) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let87 let60) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let77 let60) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let111 let149) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let89 let60) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let94 let139) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let177 True) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let95 let141) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let178 True) => -- EVALUATE
fun lean_r74 : let160 => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq let99 let142) => -- THEORY_REWRITE_ARITH
fun lean_a76 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a77 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a78 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a79 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a80 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a81 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a82 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a83 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a84 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a85 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a86 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a87 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a88 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a89 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a90 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a91 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a92 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a93 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a94 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a95 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a96 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x9x5fminus) (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x1x5fminus let148)))))))) let1) =>
fun lean_a97 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let19 let152)))))) let5) =>
fun lean_a98 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let33 let119)))))) let1) =>
fun lean_a99 : let180 =>
fun lean_a100 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let33 let152)))) let1) =>
fun lean_a101 : let181 =>
fun lean_a102 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let8 let34)))))) let1) =>
fun lean_a103 : let182 =>
fun lean_a104 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fminus let109)))) let1) =>
fun lean_a105 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x7x5fminus let92)))) let1) =>
fun lean_a106 : let183 =>
fun lean_a107 : let184 =>
fun lean_a108 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x3x5fplus) (binrel% HMul.hMul let179 x3x5fminus)))) let1) =>
fun lean_a109 : (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let17 let109)) let1) =>
fun lean_a110 : let185 =>
fun lean_a111 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd (binrel% HMul.hMul let186 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let186) x4x5fminus) (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let170 x1x5fplus) (binrel% HMul.hMul let179 x1x5fminus)))))))))))) let1) =>
fun lean_a112 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let17 let34)))))))) let1) =>
fun lean_a113 : let187 =>
fun lean_a114 : let188 =>
fun lean_a115 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x2x5fplus) (binrel% HMul.hMul let170 x2x5fminus)))))))) let1) =>
fun lean_a116 : let189 =>
fun lean_a117 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x2x5fplus) x2x5fminus))))) let1) =>
fun lean_a118 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let179 x0x5fplus) (binrel% HMul.hMul let170 x0x5fminus)))))) let1) =>
fun lean_a119 : let190 =>
fun lean_a120 : let166 => by
have lean_s0 : (Or let196 (Or let54 (Or let197 (Or let122 (Or let195 (Or let46 (Or let132 (Or let194 (Or let158 (Or let72 let200)))))))))) :=
  (scope (fun lean_a121 : let192 =>
    (scope (fun lean_a122 : let53 =>
      (scope (fun lean_a123 : let191 =>
        (scope (fun lean_a124 : let39 =>
          (scope (fun lean_a125 : let193 =>
            (scope (fun lean_a126 : let31 =>
              (scope (fun lean_a127 : let23 =>
                (scope (fun lean_a128 : let189 =>
                  (scope (fun lean_a129 : let70 =>
                    (scope (fun lean_a130 : let12 =>
                      (scope (fun lean_a131 : let166 =>
                        have lean_s0 : let200 :=
                          (scope (fun lean_a130 : let166 =>
                            have lean_s0 : let4 := by timed trueElim lean_r0
                            have lean_s1 : let223 := by timed And.intro lean_s0 lean_a130
                            have lean_s2 : (Implies let223 let222) := by arithMulNeg [let110, let6, let3], 3
                            have lean_s3 : let222 := by timed modusPonens lean_s1 lean_s2
                            have lean_s4 : let154 := by timed trueElim lean_r40
                            let lean_s5 := by timed flipCongrArg lean_r35 [LE.le]
                            have lean_s6 : (Eq let1 let1) := by timed rfl
                            have lean_s7 : (Eq let182 let131) := by timed congr lean_s5 lean_s6
                            have lean_s8 : (Eq let182 let12) := by timed Eq.trans lean_s7 lean_r31
                            have lean_s9 : let12 := by timed eqResolve lean_a103 lean_s8
                            have lean_s10 : (Eq let12 let13) := by timed Eq.symm lean_r1
                            have lean_s11 : let13 := by timed eqResolve lean_s9 lean_s10
                            have lean_s12 : let131 := by intTightUb lean_s11
                            have lean_s13 : let221 := by timed And.intro lean_s4 lean_s12
                            have lean_s14 : (Implies let221 let220) := by arithMulPos [let10, let1, let61], 1
                            have lean_s15 : let220 := by timed modusPonens lean_s13 lean_s14
                            have lean_s16 : let175 := by timed trueElim lean_r59
                            let lean_s17 := by timed flipCongrArg lean_r15 [GE.ge]
                            have lean_s18 : (Eq let190 let71) := by timed congr lean_s17 lean_s6
                            have lean_s19 : (Eq let190 let70) := by timed Eq.trans lean_s18 lean_r16
                            have lean_s20 : let70 := by timed eqResolve lean_a119 lean_s19
                            have lean_s21 : (Eq let70 let127) := by timed Eq.symm lean_r28
                            have lean_s22 : let127 := by timed eqResolve lean_s20 lean_s21
                            have lean_s23 : let218 := by intTightUb lean_s22
                            have lean_s24 : let219 := by timed And.intro lean_s16 lean_s23
                            have lean_s25 : (Implies let219 let217) := by arithMulPos [let68, let1, let88], 1
                            have lean_s26 : let217 := by timed modusPonens lean_s24 lean_s25
                            have lean_s27 : let178 := by timed trueElim lean_r73
                            have lean_s28 : let216 := by timed And.intro lean_s27 lean_a128
                            have lean_s29 : (Implies let216 let215) := by arithMulNeg [let105, let1, let86], 3
                            have lean_s30 : let215 := by timed modusPonens lean_s28 lean_s29
                            have lean_s31 : let16 := by timed trueElim lean_r2
                            let lean_s32 := by timed flipCongrArg lean_r42 [LE.le]
                            have lean_s33 : (Eq let183 let151) := by timed congr lean_s32 lean_s6
                            have lean_s34 : (Eq let183 let23) := by timed Eq.trans lean_s33 lean_r38
                            have lean_s35 : let23 := by timed eqResolve lean_a106 lean_s34
                            have lean_s36 : (Eq let23 let24) := by timed Eq.symm lean_r3
                            have lean_s37 : let24 := by timed eqResolve lean_s35 lean_s36
                            have lean_s38 : let214 := by timed And.intro lean_s31 lean_s37
                            have lean_s39 : (Implies let214 let213) := by arithMulPos [let21, let5, let15], 0
                            have lean_s40 : let213 := by timed modusPonens lean_s38 lean_s39
                            have lean_s41 : let163 := by timed trueElim lean_r48
                            let lean_s42 := by timed flipCongrArg lean_r22 [LE.le]
                            have lean_s43 : (Eq let6 let6) := by timed rfl
                            have lean_s44 : (Eq let180 let176) := by timed congr lean_s42 lean_s43
                            have lean_s45 : (Eq let180 let31) := by timed Eq.trans lean_s44 lean_r65
                            have lean_s46 : let31 := by timed eqResolve lean_a99 lean_s45
                            have lean_s47 : (Eq let31 let32) := by timed Eq.symm lean_r4
                            have lean_s48 : let32 := by timed eqResolve lean_s46 lean_s47
                            have lean_s49 : let176 := by intTightUb lean_s48
                            have lean_s50 : let212 := by timed And.intro lean_s41 lean_s49
                            have lean_s51 : (Implies let212 let211) := by arithMulPos [let29, let6, let82], 1
                            have lean_s52 : let211 := by timed modusPonens lean_s50 lean_s51
                            have lean_s53 : let138 := by timed trueElim lean_r36
                            let lean_s54 := by timed flipCongrArg lean_r47 [GE.ge]
                            have lean_s55 : (Eq let188 let193) := by timed congr lean_s54 lean_s6
                            have lean_s56 : let193 := by timed eqResolve lean_a114 lean_s55
                            have lean_s57 : let210 := by timed And.intro lean_s53 lean_s56
                            have lean_s58 : (Implies let210 let209) := by arithMulNeg [let101, let1, let80], 3
                            have lean_s59 : let209 := by timed modusPonens lean_s57 lean_s58
                            let lean_s60 := by timed flipCongrArg lean_r12 [LE.le]
                            have lean_s61 : (Eq let181 let121) := by timed congr lean_s60 lean_s6
                            have lean_s62 : (Eq let181 let39) := by timed Eq.trans lean_s61 lean_r23
                            have lean_s63 : let39 := by timed eqResolve lean_a101 lean_s62
                            have lean_s64 : (Eq let39 let40) := by timed Eq.symm lean_r5
                            have lean_s65 : let40 := by timed eqResolve lean_s63 lean_s64
                            have lean_s66 : let121 := by intTightUb lean_s65
                            have lean_s67 : let208 := by timed And.intro lean_s4 lean_s66
                            have lean_s68 : (Implies let208 let207) := by arithMulPos [let37, let1, let61], 1
                            have lean_s69 : let207 := by timed modusPonens lean_s67 lean_s68
                            have lean_s70 : let43 := by timed trueElim lean_r6
                            let lean_s71 := by timed flipCongrArg lean_r49 [GE.ge]
                            have lean_s72 : (Eq let5 let5) := by timed rfl
                            have lean_s73 : (Eq let185 let191) := by timed congr lean_s71 lean_s72
                            have lean_s74 : let191 := by timed eqResolve lean_a110 lean_s73
                            have lean_s75 : let206 := by timed And.intro lean_s70 lean_s74
                            have lean_s76 : (Implies let206 let205) := by arithMulNeg [let98, let5, let42], 3
                            have lean_s77 : let205 := by timed modusPonens lean_s75 lean_s76
                            have lean_s78 : let45 := by timed trueElim lean_r7
                            let lean_s79 := by timed flipCongrArg lean_r52 [LE.le]
                            have lean_s80 : (Eq let184 let124) := by timed congr lean_s79 lean_s6
                            have lean_s81 : (Eq let184 let53) := by timed Eq.trans lean_s80 lean_r25
                            have lean_s82 : let53 := by timed eqResolve lean_a107 lean_s81
                            have lean_s83 : (Eq let53 let118) := by timed Eq.symm lean_r21
                            have lean_s84 : let118 := by timed eqResolve lean_s82 lean_s83
                            have lean_s85 : let124 := by intTightUb lean_s84
                            have lean_s86 : let204 := by timed And.intro lean_s78 lean_s85
                            have lean_s87 : (Implies let204 let203) := by arithMulPos [let51, let1, let44], 1
                            have lean_s88 : let203 := by timed modusPonens lean_s86 lean_s87
                            have lean_s89 : let125 := by timed trueElim lean_r26
                            let lean_s90 := by timed flipCongrArg lean_r39 [GE.ge]
                            have lean_s91 : (Eq let187 let192) := by timed congr lean_s90 lean_s72
                            have lean_s92 : let192 := by timed eqResolve lean_a113 lean_s91
                            have lean_s93 : let202 := by timed And.intro lean_s89 lean_s92
                            have lean_s94 : (Implies let202 let201) := by arithMulNeg [let93, let5, let75], 3
                            have lean_s95 : let201 := by timed modusPonens lean_s93 lean_s94
                            have lean_s96 : let115 := by sumBounds [lean_s3, lean_s15, lean_s26, lean_s30, lean_s40, lean_s52, lean_s59, lean_s69, lean_s77, lean_s88, lean_s95]
                            let lean_s97 := by timed congrHAdd lean_r72 lean_r70
                            let lean_s98 := by timed congrHAdd lean_r75 lean_s97
                            let lean_s99 := by timed congrHAdd lean_r44 lean_s98
                            let lean_s100 := by timed congrHAdd lean_r57 lean_s99
                            let lean_s101 := by timed congrHAdd lean_r20 lean_s100
                            let lean_s102 := by timed congrHAdd lean_r29 lean_s101
                            let lean_s103 := by timed congrHAdd lean_r61 lean_s102
                            let lean_s104 := by timed congrHAdd lean_r34 lean_s103
                            let lean_s105 := by timed congrHAdd lean_r64 lean_s104
                            have lean_s106 : (Eq let112 let150) := by timed congrHAdd lean_r68 lean_s105
                            have lean_s107 : (Eq let112 let60) := by timed Eq.trans lean_s106 lean_r37
                            let lean_s108 := by timed flipCongrArg lean_s107 [GE.ge]
                            let lean_s109 := by timed congrHAdd lean_r67 lean_r63
                            let lean_s110 := by timed congrHAdd lean_r19 lean_s109
                            let lean_s111 := by timed congrHAdd lean_r13 lean_s110
                            let lean_s112 := by timed congrHAdd lean_r58 lean_s111
                            let lean_s113 := by timed congrHAdd lean_r32 lean_s112
                            let lean_s114 := by timed congrHAdd lean_r62 lean_s113
                            let lean_s115 := by timed congrHAdd lean_r66 lean_s114
                            let lean_s116 := by timed congrHAdd lean_r69 lean_s115
                            let lean_s117 := by timed congrHAdd lean_r13 lean_s116
                            have lean_s118 : (Eq let91 let174) := by timed congrHAdd lean_r56 lean_s117
                            have lean_s119 : (Eq let91 let171) := by timed Eq.trans lean_s118 lean_r55
                            have lean_s120 : (Eq let113 let172) := by timed congr lean_s108 lean_s119
                            have lean_s121 : (Eq let113 True) := by timed Eq.trans lean_s120 lean_r53
                            have lean_s122 : (Eq let114 let155) := by timed flipCongrArg lean_s121 [Not]
                            have lean_s123 : (Eq let114 False) := by timed Eq.trans lean_s122 lean_r41
                            have lean_s124 : (Eq let115 False) := by timed Eq.trans lean_r18 lean_s123
                            show False from by timed eqResolve lean_s96 lean_s124
                          ))
                        have lean_s1 : let167 := by liftOrNToNeg lean_s0
                        have lean_s2 : (Eq let167 let168) := by timed Eq.symm lean_r51
                        have lean_s3 : let168 := by timed eqResolve lean_s1 lean_s2
                        have lean_s4 : let167 := by timed eqResolve lean_s3 lean_r51
                        show False from by timed contradiction lean_a131 lean_s4
  ))))))))))))))))))))))
have lean_s1 : (Not (And let192 (And let53 (And let191 (And let39 (And let193 (And let31 (And let23 (And let189 (And let70 (And let12 let166))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let199 := by timed flipNotAnd lean_s1 [let192, let53, let191, let39, let193, let31, let23, let189, let70, let12, let166]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq let196 let196) := by timed rfl
let lean_s5 := by timed congr lean_s3 lean_s4
have lean_s6 : let57 := by timed rfl
let lean_s7 := by timed flipCongrArg lean_s6 [Eq]
have lean_s8 : (Eq let161 let57) := by timed congr lean_s7 lean_r9
have lean_s9 : (Eq let161 True) := by timed Eq.trans lean_s8 lean_r11
have lean_s10 : (Eq let55 True) := by timed Eq.trans lean_r46 lean_s9
have lean_s11 : let55 := by timed trueElim lean_s10
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq let197 let197) := by timed rfl
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : let126 := by timed rfl
let lean_s16 := by timed flipCongrArg lean_s15 [Eq]
have lean_s17 : (Eq let165 let126) := by timed congr lean_s16 lean_r24
have lean_s18 : (Eq let165 True) := by timed Eq.trans lean_s17 lean_r27
have lean_s19 : (Eq let123 True) := by timed Eq.trans lean_r50 lean_s18
have lean_s20 : let123 := by timed trueElim lean_s19
let lean_s21 := by timed congr lean_s3 lean_s20
have lean_s22 : (Eq let195 let195) := by timed rfl
let lean_s23 := by timed congr lean_s3 lean_s22
have lean_s24 : let56 := by timed rfl
let lean_s25 := by timed flipCongrArg lean_s24 [Eq]
have lean_s26 : (Eq let157 let56) := by timed congr lean_s25 lean_r8
have lean_s27 : (Eq let157 True) := by timed Eq.trans lean_s26 lean_r10
have lean_s28 : (Eq let47 True) := by timed Eq.trans lean_r43 lean_s27
have lean_s29 : let47 := by timed trueElim lean_s28
let lean_s30 := by timed congr lean_s3 lean_s29
have lean_s31 : let130 := by timed rfl
let lean_s32 := by timed flipCongrArg lean_s31 [Eq]
have lean_s33 : (Eq let133 let130) := by timed congr lean_s32 lean_r60
have lean_s34 : (Eq let133 True) := by timed Eq.trans lean_s33 lean_r30
have lean_s35 : (Eq let134 True) := by timed Eq.trans lean_r33 lean_s34
have lean_s36 : let134 := by timed trueElim lean_s35
let lean_s37 := by timed congr lean_s3 lean_s36
have lean_s38 : (Eq let194 let194) := by timed rfl
let lean_s39 := by timed congr lean_s3 lean_s38
have lean_s40 : let177 := by timed rfl
let lean_s41 := by timed flipCongrArg lean_s40 [Eq]
have lean_s42 : (Eq let159 let177) := by timed congr lean_s41 lean_r74
have lean_s43 : (Eq let159 True) := by timed Eq.trans lean_s42 lean_r71
have lean_s44 : (Eq let160 True) := by timed Eq.trans lean_r45 lean_s43
have lean_s45 : let160 := by timed trueElim lean_s44
let lean_s46 := by timed congr lean_s3 lean_s45
have lean_s47 : let63 := by timed rfl
let lean_s48 := by timed flipCongrArg lean_s47 [Eq]
have lean_s49 : (Eq let173 let63) := by timed congr lean_s48 lean_r17
have lean_s50 : (Eq let173 True) := by timed Eq.trans lean_s49 lean_r14
have lean_s51 : (Eq let73 True) := by timed Eq.trans lean_r54 lean_s50
have lean_s52 : let73 := by timed trueElim lean_s51
let lean_s53 := by timed congr lean_s3 lean_s52
have lean_s54 : (Eq let167 let167) := by timed rfl
let lean_s55 := by timed congr lean_s53 lean_s54
let lean_s56 := by timed congr lean_s46 lean_s55
let lean_s57 := by timed congr lean_s39 lean_s56
let lean_s58 := by timed congr lean_s37 lean_s57
let lean_s59 := by timed congr lean_s30 lean_s58
let lean_s60 := by timed congr lean_s23 lean_s59
let lean_s61 := by timed congr lean_s21 lean_s60
let lean_s62 := by timed congr lean_s14 lean_s61
let lean_s63 := by timed congr lean_s12 lean_s62
have lean_s64 : (Eq let199 let198) := by timed congr lean_s5 lean_s63
have lean_s65 : let198 := by timed eqResolve lean_s2 lean_s64
have lean_s66 : (Or let30 (Or let38 (Or let11 (Or let22 (Or let52 (Or let69 (Or let197 (Or let196 (Or let195 (Or let194 let167)))))))))) := by permutateOr lean_s65, [5, 3, 9, 6, 1, 8, 2, 0, 4, 7, 10], (- 1)
let lean_s67 := by R2 lean_s66, lean_a120, let166, [(- 1), 0]
let lean_s68 := by timed flipCongrArg lean_r15 [GE.ge]
have lean_s69 : (Eq let1 let1) := by timed rfl
have lean_s70 : (Eq let190 let71) := by timed congr lean_s68 lean_s69
have lean_s71 : (Eq let190 let70) := by timed Eq.trans lean_s70 lean_r16
have lean_s72 : let70 := by timed eqResolve lean_a119 lean_s71
let lean_s73 := by R1 lean_s67, lean_s72, let69, [(- 1), 0]
let lean_s74 := by R2 lean_s73, lean_a116, let189, [(- 1), 0]
let lean_s75 := by timed flipCongrArg lean_r47 [GE.ge]
have lean_s76 : (Eq let188 let193) := by timed congr lean_s75 lean_s69
have lean_s77 : let193 := by timed eqResolve lean_a114 lean_s76
let lean_s78 := by R2 lean_s74, lean_s77, let193, [(- 1), 0]
let lean_s79 := by timed flipCongrArg lean_r39 [GE.ge]
have lean_s80 : (Eq let5 let5) := by timed rfl
have lean_s81 : (Eq let187 let192) := by timed congr lean_s79 lean_s80
have lean_s82 : let192 := by timed eqResolve lean_a113 lean_s81
let lean_s83 := by R2 lean_s78, lean_s82, let192, [(- 1), 0]
let lean_s84 := by timed flipCongrArg lean_r49 [GE.ge]
have lean_s85 : (Eq let185 let191) := by timed congr lean_s84 lean_s80
have lean_s86 : let191 := by timed eqResolve lean_a110 lean_s85
let lean_s87 := by R2 lean_s83, lean_s86, let191, [(- 1), 0]
let lean_s88 := by timed flipCongrArg lean_r52 [LE.le]
have lean_s89 : (Eq let184 let124) := by timed congr lean_s88 lean_s69
have lean_s90 : (Eq let184 let53) := by timed Eq.trans lean_s89 lean_r25
have lean_s91 : let53 := by timed eqResolve lean_a107 lean_s90
let lean_s92 := by R1 lean_s87, lean_s91, let52, [(- 1), 0]
let lean_s93 := by timed flipCongrArg lean_r42 [LE.le]
have lean_s94 : (Eq let183 let151) := by timed congr lean_s93 lean_s69
have lean_s95 : (Eq let183 let23) := by timed Eq.trans lean_s94 lean_r38
have lean_s96 : let23 := by timed eqResolve lean_a106 lean_s95
let lean_s97 := by R1 lean_s92, lean_s96, let22, [(- 1), 0]
let lean_s98 := by timed flipCongrArg lean_r35 [LE.le]
have lean_s99 : (Eq let182 let131) := by timed congr lean_s98 lean_s69
have lean_s100 : (Eq let182 let12) := by timed Eq.trans lean_s99 lean_r31
have lean_s101 : let12 := by timed eqResolve lean_a103 lean_s100
let lean_s102 := by R1 lean_s97, lean_s101, let11, [(- 1), 0]
let lean_s103 := by timed flipCongrArg lean_r12 [LE.le]
have lean_s104 : (Eq let181 let121) := by timed congr lean_s103 lean_s69
have lean_s105 : (Eq let181 let39) := by timed Eq.trans lean_s104 lean_r23
have lean_s106 : let39 := by timed eqResolve lean_a101 lean_s105
let lean_s107 := by R1 lean_s102, lean_s106, let38, [(- 1), 0]
let lean_s108 := by timed flipCongrArg lean_r22 [LE.le]
have lean_s109 : (Eq let6 let6) := by timed rfl
have lean_s110 : (Eq let180 let176) := by timed congr lean_s108 lean_s109
have lean_s111 : (Eq let180 let31) := by timed Eq.trans lean_s110 lean_r65
have lean_s112 : let31 := by timed eqResolve lean_a99 lean_s111
exact (show False from by R1 lean_s107, lean_s112, let30, [0, 0])


