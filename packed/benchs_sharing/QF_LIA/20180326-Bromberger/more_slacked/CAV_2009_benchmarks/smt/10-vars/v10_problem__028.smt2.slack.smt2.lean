open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x2x5fplus : Int}
variable {x2x5fminus : Int}
variable {x8x5fplus : Int}
variable {x8x5fminus : Int}
variable {x7x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x1x5fplus : Int}
variable {x7x5fminus : Int}
variable {x5x5fminus : Int}
variable {x4x5fplus : Int}
variable {x9x5fminus : Int}
variable {x1x5fplus : Int}
variable {x1x5fminus : Int}
variable {x4x5fminus : Int}
variable {x9x5fplus : Int}
variable {x9x5fminus : Int}
variable {x6x5fplus : Int}
variable {x5x5fplus : Int}
variable {x9x5fplus : Int}
variable {x5x5fminus : Int}
variable {x6x5fplus : Int}
variable {x6x5fminus : Int}
variable {x1x5fminus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x7x5fplus : Int}
variable {x7x5fplus : Int}
variable {x8x5fminus : Int}
variable {x0x5fplus : Int}
variable {x8x5fplus : Int}
variable {x2x5fminus : Int}
variable {x2x5fplus : Int}
variable {x3x5fminus : Int}
variable {x0x5fminus : Int}
variable {x3x5fplus : Int}
variable {x6x5fminus : Int}
variable {x5x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% HMul.hMul let3 x9x5fminus)
  let let5 := (binrel% HAdd.hAdd x9x5fplus let4)
  let let6 := (binrel% HMul.hMul let3 x8x5fplus)
  let let7 := (binrel% HMul.hMul let3 x6x5fplus)
  let let8 := (binrel% HMul.hMul let3 x0x5fplus)
  let let9 := (binrel% HMul.hMul let3 x5x5fminus)
  let let10 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x8x5fminus let5))))))))
  let let11 := (binrel% GE.ge let10 let1)
  let let12 := (Not let11)
  let let13 := (binrel% LT.lt let10 let1)
  let let14 := (Rat.ofInt 2)
  let let15 := (binrel% GT.gt let14 let1)
  let let16 := (binrel% HMul.hMul let3 x3x5fminus)
  let let17 := (binrel% HAdd.hAdd x3x5fplus let16)
  let let18 := (binrel% HMul.hMul let3 x0x5fminus)
  let let19 := (binrel% HMul.hMul let3 x1x5fminus)
  let let20 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x8x5fminus let17))))))))
  let let21 := (binrel% GE.ge let20 let2)
  let let22 := (Not let21)
  let let23 := (binrel% LT.lt let20 let2)
  let let24 := (Rat.ofInt 1)
  let let25 := (binrel% GT.gt let24 let1)
  let let26 := (binrel% HMul.hMul let3 x8x5fminus)
  let let27 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 let17))
  let let28 := (binrel% HMul.hMul let3 x6x5fminus)
  let let29 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 let27))
  let let30 := (binrel% HMul.hMul let3 x2x5fminus)
  let let31 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let29))
  let let32 := (binrel% GE.ge let31 let1)
  let let33 := (Not let32)
  let let34 := (binrel% LT.lt let31 let1)
  let let35 := (Int.ofNat 3)
  let let36 := (binrel% HDiv.hDiv (Int.ofNat 4) let35)
  let let37 := (Neg.neg let36)
  let let38 := (binrel% LT.lt let37 let1)
  let let39 := (binrel% GT.gt let36 let1)
  let let40 := (Int.ofNat 2)
  let let41 := (binrel% HMul.hMul let40 x3x5fminus)
  let let42 := (Neg.neg let40)
  let let43 := (binrel% HMul.hMul let42 x3x5fplus)
  let let44 := (binrel% HMul.hMul let3 x2x5fplus)
  let let45 := (binrel% HMul.hMul let3 x4x5fminus)
  let let46 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x9x5fplus) x9x5fminus)))))))))))
  let let47 := (binrel% GE.ge let46 let1)
  let let48 := (Not let47)
  let let49 := (binrel% LT.lt let46 let1)
  let let50 := (binrel% HMul.hMul let36 let1)
  let let51 := (binrel% HMul.hMul let37 let2)
  let let52 := (binrel% HDiv.hDiv let40 let35)
  let let53 := (binrel% HMul.hMul let52 let1)
  let let54 := (binrel% HMul.hMul let24 let3)
  let let55 := (binrel% HDiv.hDiv let2 let35)
  let let56 := (binrel% HMul.hMul let55 let2)
  let let57 := (binrel% HMul.hMul let14 let1)
  let let58 := (Neg.neg let14)
  let let59 := (binrel% HMul.hMul let58 let1)
  let let60 := (Neg.neg let55)
  let let61 := (binrel% HMul.hMul let60 let3)
  let let62 := (Neg.neg let52)
  let let63 := (binrel% HMul.hMul let62 let3)
  let let64 := (Neg.neg let24)
  let let65 := (binrel% HMul.hMul let64 let3)
  let let66 := (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let51 let50))))))))))
  let let67 := (binrel% HMul.hMul let36 let46)
  let let68 := (binrel% HMul.hMul let3 x3x5fplus)
  let let69 := (binrel% HAdd.hAdd let68 x3x5fminus)
  let let70 := (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x8x5fminus let69))
  let let71 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus let70))))))
  let let72 := (binrel% HMul.hMul let37 let71)
  let let73 := (binrel% HMul.hMul let3 x1x5fplus)
  let let74 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x6x5fplus let28)))))
  let let75 := (binrel% HMul.hMul let52 let74)
  let let76 := (binrel% HMul.hMul let24 let31)
  let let77 := (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x0x5fplus) (binrel% HMul.hMul let40 x0x5fminus))
  let let78 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let19 let77))
  let let79 := (binrel% HMul.hMul let3 x4x5fplus)
  let let80 := (binrel% HMul.hMul let3 x5x5fplus)
  let let81 := (binrel% HMul.hMul let3 x7x5fminus)
  let let82 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let78))))))))
  let let83 := (binrel% HMul.hMul let55 let82)
  let let84 := (binrel% HMul.hMul let14 let20)
  let let85 := (binrel% HMul.hMul let58 let17)
  let let86 := (binrel% HMul.hMul let36 let10)
  let let87 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 let70))))
  let let88 := (binrel% HMul.hMul let60 let87)
  let let89 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let6 x8x5fminus)))))))))
  let let90 := (binrel% HMul.hMul let62 let89)
  let let91 := (binrel% HAdd.hAdd x1x5fplus let19)
  let let92 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus let91))))
  let let93 := (binrel% HMul.hMul let64 let92)
  let let94 := (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let72 let67))))))))))
  let let95 := (binrel% GE.ge let94 let66)
  let let96 := (Not let95)
  let let97 := (binrel% LT.lt let94 let66)
  let let98 := (binrel% HAdd.hAdd let73 x1x5fminus)
  let let99 := (Rat.ofInt (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 let98)))))
  let let100 := (binrel% HMul.hMul let52 x1x5fminus)
  let let101 := (binrel% HMul.hMul let62 x1x5fplus)
  let let102 := (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x2x5fminus) (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x8x5fplus) (binrel% HMul.hMul let62 x8x5fminus))))))))))
  let let103 := (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x3x5fplus) (binrel% HMul.hMul let60 x3x5fminus))))))))
  let let104 := (Not let33)
  let let105 := (Eq let104 let32)
  let let106 := (binrel% GE.ge let82 let2)
  let let107 := (Not let106)
  let let108 := (Not let107)
  let let109 := (Eq let106 let108)
  let let110 := (Eq let108 let106)
  let let111 := (binrel% HMul.hMul let36 x0x5fminus)
  let let112 := (binrel% HMul.hMul let37 x0x5fplus)
  let let113 := (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x5x5fminus) (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x9x5fplus) (binrel% HMul.hMul let37 x9x5fminus))))))))))
  let let114 := (Rat.ofInt 0)
  let let115 := (Not let12)
  let let116 := (Eq let115 let11)
  let let117 := (Eq let106 let106)
  let let118 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 let69))))))))
  let let119 := (binrel% GE.ge let118 let1)
  let let120 := (binrel% HSub.hSub x3x5fplus x3x5fminus)
  let let121 := (Rat.ofInt (binrel% HAdd.hAdd let43 let41))
  let let122 := (binrel% HMul.hMul let42 x3x5fminus)
  let let123 := (binrel% HMul.hMul let40 x3x5fplus)
  let let124 := (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let122 let5))))))))))
  let let125 := (binrel% GE.ge let124 let2)
  let let126 := (Eq let32 let32)
  let let127 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let98))))
  let let128 := (binrel% GE.ge let71 let2)
  let let129 := (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x0x5fminus let29))))
  let let130 := (binrel% LE.le let129 let3)
  let let131 := (Not let48)
  let let132 := (Eq let131 let47)
  let let133 := (binrel% HMul.hMul let3 x7x5fplus)
  let let134 := (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus let27))))
  let let135 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus let17))))))
  let let136 := (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x2x5fminus) (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x6x5fplus) (binrel% HMul.hMul let62 x6x5fminus))))))
  let let137 := (binrel% GT.gt let55 let1)
  let let138 := (binrel% HAdd.hAdd x2x5fplus let30)
  let let139 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let16 let138))))))
  let let140 := (binrel% GE.ge let74 let1)
  let let141 := (Not let140)
  let let142 := (Not let141)
  let let143 := (Eq let140 let142)
  let let144 := (Eq let142 let140)
  let let145 := (binrel% GT.gt let52 let1)
  let let146 := (binrel% HAdd.hAdd let8 x0x5fminus)
  let let147 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let146))
  let let148 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus let147))))))
  let let149 := (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let37 let114))))))))))
  let let150 := (Not True)
  let let151 := (binrel% GE.ge let89 let3)
  let let152 := (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x8x5fplus let26)))))))))
  let let153 := (binrel% LE.le let152 let2)
  let let154 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let16 let146))))))))
  let let155 := (binrel% LT.lt let62 let1)
  let let156 := (Eq let11 let115)
  let let157 := (binrel% LE.le let74 let3)
  let let158 := (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x0x5fplus) (binrel% HMul.hMul let52 x0x5fminus))))))))))))
  let let159 := (binrel% LT.lt let60 let1)
  let let160 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let146))))))))))
  let let161 := (Eq let11 let11)
  let let162 := (binrel% LE.le let10 let3)
  let let163 := (binrel% LE.le let31 let3)
  let let164 := (binrel% GE.ge let87 let3)
  let let165 := (binrel% LE.le let134 let2)
  let let166 := (Eq let47 let47)
  let let167 := (binrel% LT.lt let74 let1)
  let let168 := (Eq let32 let104)
  let let169 := (Eq let140 let140)
  let let170 := (binrel% GE.ge let92 let3)
  let let171 := (Not let170)
  let let172 := (binrel% LT.lt let92 let3)
  let let173 := (binrel% LT.lt let82 let2)
  let let174 := (Eq let47 let131)
  let let175 := (binrel% GE.ge let114 let114)
  let let176 := (binrel% LT.lt let64 let1)
  let let177 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x1x5fminus let146))))))))
  let let178 := (Eq let21 let21)
  let let179 := (Not let22)
  let let180 := (Eq let179 let21)
  let let181 := (Eq let21 let179)
  let let182 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x2x5fminus let98))))))))
  let let183 := (binrel% HDiv.hDiv (Int.ofNat 8) let35)
  let let184 := (binrel% HMul.hMul let37 x6x5fminus)
  let let185 := (binrel% HMul.hMul let36 x6x5fplus)
  let let186 := (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x0x5fminus) (binrel% HAdd.hAdd let185 (binrel% HAdd.hAdd let184 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let183) x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let183 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x9x5fplus) (binrel% HMul.hMul let36 x9x5fminus))))))))))))
  let let187 := (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x4x5fminus) (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let185 (binrel% HAdd.hAdd let184 (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x3x5fplus) (binrel% HMul.hMul let37 x3x5fminus))))))))))
  let let188 := (Rat.ofInt let31)
  let let189 := (binrel% HMul.hMul let42 x1x5fminus)
  let let190 := (binrel% HMul.hMul let40 x1x5fplus)
  let let191 := (Rat.ofInt (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x8x5fminus) (binrel% HAdd.hAdd let123 let122))))))))))
  let let192 := (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let187 let186))))))))))
  let let193 := (binrel% LE.le let82 let1)
  let let194 := (binrel% LT.lt let58 let1)
  let let195 := (binrel% GE.ge let120 let1)
  let let196 := (binrel% LE.le let154 let3)
  let let197 := (binrel% LE.le let148 let3)
  let let198 := (binrel% LE.le let182 let2)
  let let199 := (binrel% HAdd.hAdd x0x5fplus let18)
  let let200 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let199))
  let let201 := (binrel% HAdd.hAdd let44 x2x5fminus)
  let let202 := (binrel% HMul.hMul let42 x8x5fminus)
  let let203 := (binrel% HMul.hMul let40 x8x5fplus)
  let let204 := (binrel% LE.le let139 let3)
  let let205 := (binrel% LE.le let135 let2)
  let let206 := (binrel% LE.le let127 let3)
  let let207 := (binrel% GE.ge let160 let2)
  let let208 := (binrel% GE.ge let177 let1)
  let let209 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let19 let199))
  let let210 := (binrel% GE.ge let17 let1)
  let let211 := (Not let164)
  let let212 := (Not let151)
  let let213 := (Not let128)
  let let214 := (Not let210)
  let let215 := (Or let211 (Or let212 let171))
  let let216 := (Or let47 (Or let213 (Or let140 (Or let32 (Or let106 (Or let21 (Or let214 (Or let11 let215))))))))
  let let217 := (Or let131 (Or let213 (Or let142 (Or let104 (Or let108 (Or let179 (Or let214 (Or let115 let215))))))))
  let let218 := (Or let171 False)
  let let219 := (binrel% LT.lt let67 let50)
  let let220 := (And let39 let49)
  let let221 := (binrel% LE.le let72 let51)
  let let222 := (And let38 let128)
  let let223 := (binrel% LT.lt let75 let53)
  let let224 := (And let145 let167)
  let let225 := (binrel% LE.le let76 let54)
  let let226 := (And let25 let163)
  let let227 := (binrel% LT.lt let83 let56)
  let let228 := (And let137 let173)
  let let229 := (binrel% LE.le let84 let57)
  let let230 := (binrel% LE.le let20 let1)
  let let231 := (And let15 let230)
  let let232 := (binrel% LE.le let85 let59)
  let let233 := (And let194 let210)
  let let234 := (binrel% LT.lt let86 let50)
  let let235 := (And let39 let13)
  let let236 := (binrel% LE.le let88 let61)
  let let237 := (And let159 let164)
  let let238 := (binrel% LE.le let90 let63)
  let let239 := (And let155 let151)
  let let240 := (binrel% LE.le let93 let65)
  let let241 := (And let176 let170)
(Eq let13 let12) → (Eq let15 True) → (Eq let23 let22) → (Eq let25 True) → (Eq let34 let33) → (Eq let38 True) → (Eq let39 True) → (Eq let49 let48) → (Eq let97 let96) → (Eq let93 let99) → (Eq let90 let102) → (Eq let88 let103) → let105 → (Eq let110 let109) → let110 → (Eq let86 let113) → (Eq let50 let114) → let116 → (Eq let117 True) → (Eq let119 let22) → (Eq let120 let17) → (Eq let85 let121) → (Eq let125 let48) → (Eq let126 True) → (Eq let127 let74) → (Eq let53 let114) → (Eq let130 let128) → let132 → (Eq let135 let134) → (Eq let75 let136) → (Eq let137 True) → (Eq let139 let31) → (Eq let144 let143) → (Eq let145 True) → (Eq let148 let10) → (Eq let149 let114) → (Eq let150 False) → (Eq let153 let151) → (Eq let65 let24) → (Eq let154 let129) → (Eq let155 True) → (Eq let116 let156) → (Eq let51 let37) → (Eq let157 let141) → (Eq let83 let158) → (Eq let159 True) → (Eq let160 let124) → (Eq let161 True) → (Eq let162 let12) → (Eq let54 let64) → (Eq let163 let33) → (Eq let165 let164) → (Eq let166 True) → (Eq let167 let141) → (Eq let105 let168) → (Eq let169 True) → let144 → (Eq let172 let171) → (Eq let173 let107) → (Eq let132 let174) → (Eq let175 True) → (Eq let176 True) → (Eq let177 let118) → (Eq let178 True) → (Eq let56 let55) → let180 → (Eq let57 let114) → (Eq let180 let181) → (Eq let59 let114) → (Eq let182 let152) → (Eq let192 let114) → (Eq let193 let107) → (Eq let61 let55) → (Eq let63 let52) → (Eq let67 let186) → (Eq let194 True) → (Eq let72 let187) → (Eq let76 let188) → (Eq let84 let191) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → let195 → let193 → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let189 let146)))))))))) let2) → let196 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let41 let98)))))))) let1) → let197 → let198 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 let138)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x3x5fminus let200)))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let202 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let201)))))) let1) → let204 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let91)))))) let1) → let205 → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x4x5fminus) (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x2x5fminus let199)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x8x5fminus let201)))) let3) → let206 → (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x6x5fminus) (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x3x5fminus let91)))) let1) → let207 → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x5x5fminus let78)))))) let1) → let208 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x5x5fminus) let200)))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let77)))))) let3) → (binrel% GE.ge (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let202 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let98)))))) let2) → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x2x5fminus let209)))) let2) → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let19 let146)))))) let3) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd x7x5fminus let146)))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 let209)))) let1) → let170 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 let147)) let3) → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 let146)) let1) → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% HMul.hMul let3 x9x5fminus)
  let let5 := (binrel% HAdd.hAdd x9x5fplus let4)
  let let6 := (binrel% HMul.hMul let3 x8x5fplus)
  let let7 := (binrel% HMul.hMul let3 x6x5fplus)
  let let8 := (binrel% HMul.hMul let3 x0x5fplus)
  let let9 := (binrel% HMul.hMul let3 x5x5fminus)
  let let10 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x8x5fminus let5))))))))
  let let11 := (binrel% GE.ge let10 let1)
  let let12 := (Not let11)
  let let13 := (binrel% LT.lt let10 let1)
  let let14 := (Rat.ofInt 2)
  let let15 := (binrel% GT.gt let14 let1)
  let let16 := (binrel% HMul.hMul let3 x3x5fminus)
  let let17 := (binrel% HAdd.hAdd x3x5fplus let16)
  let let18 := (binrel% HMul.hMul let3 x0x5fminus)
  let let19 := (binrel% HMul.hMul let3 x1x5fminus)
  let let20 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x8x5fminus let17))))))))
  let let21 := (binrel% GE.ge let20 let2)
  let let22 := (Not let21)
  let let23 := (binrel% LT.lt let20 let2)
  let let24 := (Rat.ofInt 1)
  let let25 := (binrel% GT.gt let24 let1)
  let let26 := (binrel% HMul.hMul let3 x8x5fminus)
  let let27 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 let17))
  let let28 := (binrel% HMul.hMul let3 x6x5fminus)
  let let29 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 let27))
  let let30 := (binrel% HMul.hMul let3 x2x5fminus)
  let let31 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let29))
  let let32 := (binrel% GE.ge let31 let1)
  let let33 := (Not let32)
  let let34 := (binrel% LT.lt let31 let1)
  let let35 := (Int.ofNat 3)
  let let36 := (binrel% HDiv.hDiv (Int.ofNat 4) let35)
  let let37 := (Neg.neg let36)
  let let38 := (binrel% LT.lt let37 let1)
  let let39 := (binrel% GT.gt let36 let1)
  let let40 := (Int.ofNat 2)
  let let41 := (binrel% HMul.hMul let40 x3x5fminus)
  let let42 := (Neg.neg let40)
  let let43 := (binrel% HMul.hMul let42 x3x5fplus)
  let let44 := (binrel% HMul.hMul let3 x2x5fplus)
  let let45 := (binrel% HMul.hMul let3 x4x5fminus)
  let let46 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x9x5fplus) x9x5fminus)))))))))))
  let let47 := (binrel% GE.ge let46 let1)
  let let48 := (Not let47)
  let let49 := (binrel% LT.lt let46 let1)
  let let50 := (binrel% HMul.hMul let36 let1)
  let let51 := (binrel% HMul.hMul let37 let2)
  let let52 := (binrel% HDiv.hDiv let40 let35)
  let let53 := (binrel% HMul.hMul let52 let1)
  let let54 := (binrel% HMul.hMul let24 let3)
  let let55 := (binrel% HDiv.hDiv let2 let35)
  let let56 := (binrel% HMul.hMul let55 let2)
  let let57 := (binrel% HMul.hMul let14 let1)
  let let58 := (Neg.neg let14)
  let let59 := (binrel% HMul.hMul let58 let1)
  let let60 := (Neg.neg let55)
  let let61 := (binrel% HMul.hMul let60 let3)
  let let62 := (Neg.neg let52)
  let let63 := (binrel% HMul.hMul let62 let3)
  let let64 := (Neg.neg let24)
  let let65 := (binrel% HMul.hMul let64 let3)
  let let66 := (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let51 let50))))))))))
  let let67 := (binrel% HMul.hMul let36 let46)
  let let68 := (binrel% HMul.hMul let3 x3x5fplus)
  let let69 := (binrel% HAdd.hAdd let68 x3x5fminus)
  let let70 := (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x8x5fminus let69))
  let let71 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus let70))))))
  let let72 := (binrel% HMul.hMul let37 let71)
  let let73 := (binrel% HMul.hMul let3 x1x5fplus)
  let let74 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x6x5fplus let28)))))
  let let75 := (binrel% HMul.hMul let52 let74)
  let let76 := (binrel% HMul.hMul let24 let31)
  let let77 := (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x0x5fplus) (binrel% HMul.hMul let40 x0x5fminus))
  let let78 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let19 let77))
  let let79 := (binrel% HMul.hMul let3 x4x5fplus)
  let let80 := (binrel% HMul.hMul let3 x5x5fplus)
  let let81 := (binrel% HMul.hMul let3 x7x5fminus)
  let let82 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let78))))))))
  let let83 := (binrel% HMul.hMul let55 let82)
  let let84 := (binrel% HMul.hMul let14 let20)
  let let85 := (binrel% HMul.hMul let58 let17)
  let let86 := (binrel% HMul.hMul let36 let10)
  let let87 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 let70))))
  let let88 := (binrel% HMul.hMul let60 let87)
  let let89 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let19 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let6 x8x5fminus)))))))))
  let let90 := (binrel% HMul.hMul let62 let89)
  let let91 := (binrel% HAdd.hAdd x1x5fplus let19)
  let let92 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus let91))))
  let let93 := (binrel% HMul.hMul let64 let92)
  let let94 := (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let72 let67))))))))))
  let let95 := (binrel% GE.ge let94 let66)
  let let96 := (Not let95)
  let let97 := (binrel% LT.lt let94 let66)
  let let98 := (binrel% HAdd.hAdd let73 x1x5fminus)
  let let99 := (Rat.ofInt (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 let98)))))
  let let100 := (binrel% HMul.hMul let52 x1x5fminus)
  let let101 := (binrel% HMul.hMul let62 x1x5fplus)
  let let102 := (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x2x5fminus) (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x8x5fplus) (binrel% HMul.hMul let62 x8x5fminus))))))))))
  let let103 := (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x3x5fplus) (binrel% HMul.hMul let60 x3x5fminus))))))))
  let let104 := (Not let33)
  let let105 := (Eq let104 let32)
  let let106 := (binrel% GE.ge let82 let2)
  let let107 := (Not let106)
  let let108 := (Not let107)
  let let109 := (Eq let106 let108)
  let let110 := (Eq let108 let106)
  let let111 := (binrel% HMul.hMul let36 x0x5fminus)
  let let112 := (binrel% HMul.hMul let37 x0x5fplus)
  let let113 := (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x5x5fminus) (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x9x5fplus) (binrel% HMul.hMul let37 x9x5fminus))))))))))
  let let114 := (Rat.ofInt 0)
  let let115 := (Not let12)
  let let116 := (Eq let115 let11)
  let let117 := (Eq let106 let106)
  let let118 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 let69))))))))
  let let119 := (binrel% GE.ge let118 let1)
  let let120 := (binrel% HSub.hSub x3x5fplus x3x5fminus)
  let let121 := (Rat.ofInt (binrel% HAdd.hAdd let43 let41))
  let let122 := (binrel% HMul.hMul let42 x3x5fminus)
  let let123 := (binrel% HMul.hMul let40 x3x5fplus)
  let let124 := (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let122 let5))))))))))
  let let125 := (binrel% GE.ge let124 let2)
  let let126 := (Eq let32 let32)
  let let127 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let98))))
  let let128 := (binrel% GE.ge let71 let2)
  let let129 := (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x0x5fminus let29))))
  let let130 := (binrel% LE.le let129 let3)
  let let131 := (Not let48)
  let let132 := (Eq let131 let47)
  let let133 := (binrel% HMul.hMul let3 x7x5fplus)
  let let134 := (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus let27))))
  let let135 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus let17))))))
  let let136 := (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x2x5fminus) (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd (binrel% HMul.hMul let52 x6x5fplus) (binrel% HMul.hMul let62 x6x5fminus))))))
  let let137 := (binrel% GT.gt let55 let1)
  let let138 := (binrel% HAdd.hAdd x2x5fplus let30)
  let let139 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let16 let138))))))
  let let140 := (binrel% GE.ge let74 let1)
  let let141 := (Not let140)
  let let142 := (Not let141)
  let let143 := (Eq let140 let142)
  let let144 := (Eq let142 let140)
  let let145 := (binrel% GT.gt let52 let1)
  let let146 := (binrel% HAdd.hAdd let8 x0x5fminus)
  let let147 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let146))
  let let148 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus let147))))))
  let let149 := (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let37 let114))))))))))
  let let150 := (Not True)
  let let151 := (binrel% GE.ge let89 let3)
  let let152 := (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x8x5fplus let26)))))))))
  let let153 := (binrel% LE.le let152 let2)
  let let154 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let16 let146))))))))
  let let155 := (binrel% LT.lt let62 let1)
  let let156 := (Eq let11 let115)
  let let157 := (binrel% LE.le let74 let3)
  let let158 := (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let60 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 x0x5fplus) (binrel% HMul.hMul let52 x0x5fminus))))))))))))
  let let159 := (binrel% LT.lt let60 let1)
  let let160 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let146))))))))))
  let let161 := (Eq let11 let11)
  let let162 := (binrel% LE.le let10 let3)
  let let163 := (binrel% LE.le let31 let3)
  let let164 := (binrel% GE.ge let87 let3)
  let let165 := (binrel% LE.le let134 let2)
  let let166 := (Eq let47 let47)
  let let167 := (binrel% LT.lt let74 let1)
  let let168 := (Eq let32 let104)
  let let169 := (Eq let140 let140)
  let let170 := (binrel% GE.ge let92 let3)
  let let171 := (Not let170)
  let let172 := (binrel% LT.lt let92 let3)
  let let173 := (binrel% LT.lt let82 let2)
  let let174 := (Eq let47 let131)
  let let175 := (binrel% GE.ge let114 let114)
  let let176 := (binrel% LT.lt let64 let1)
  let let177 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd x1x5fminus let146))))))))
  let let178 := (Eq let21 let21)
  let let179 := (Not let22)
  let let180 := (Eq let179 let21)
  let let181 := (Eq let21 let179)
  let let182 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x2x5fminus let98))))))))
  let let183 := (binrel% HDiv.hDiv (Int.ofNat 8) let35)
  let let184 := (binrel% HMul.hMul let37 x6x5fminus)
  let let185 := (binrel% HMul.hMul let36 x6x5fplus)
  let let186 := (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x0x5fminus) (binrel% HAdd.hAdd let185 (binrel% HAdd.hAdd let184 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let183) x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let183 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x9x5fplus) (binrel% HMul.hMul let36 x9x5fminus))))))))))))
  let let187 := (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x4x5fminus) (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let185 (binrel% HAdd.hAdd let184 (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let37 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x3x5fplus) (binrel% HMul.hMul let37 x3x5fminus))))))))))
  let let188 := (Rat.ofInt let31)
  let let189 := (binrel% HMul.hMul let42 x1x5fminus)
  let let190 := (binrel% HMul.hMul let40 x1x5fplus)
  let let191 := (Rat.ofInt (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x8x5fminus) (binrel% HAdd.hAdd let123 let122))))))))))
  let let192 := (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let187 let186))))))))))
  let let193 := (binrel% LE.le let82 let1)
  let let194 := (binrel% LT.lt let58 let1)
  let let195 := (binrel% GE.ge let120 let1)
  let let196 := (binrel% LE.le let154 let3)
  let let197 := (binrel% LE.le let148 let3)
  let let198 := (binrel% LE.le let182 let2)
  let let199 := (binrel% HAdd.hAdd x0x5fplus let18)
  let let200 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let199))
  let let201 := (binrel% HAdd.hAdd let44 x2x5fminus)
  let let202 := (binrel% HMul.hMul let42 x8x5fminus)
  let let203 := (binrel% HMul.hMul let40 x8x5fplus)
  let let204 := (binrel% LE.le let139 let3)
  let let205 := (binrel% LE.le let135 let2)
  let let206 := (binrel% LE.le let127 let3)
  let let207 := (binrel% GE.ge let160 let2)
  let let208 := (binrel% GE.ge let177 let1)
  let let209 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let19 let199))
  let let210 := (binrel% GE.ge let17 let1)
  let let211 := (Not let164)
  let let212 := (Not let151)
  let let213 := (Not let128)
  let let214 := (Not let210)
  let let215 := (Or let211 (Or let212 let171))
  let let216 := (Or let47 (Or let213 (Or let140 (Or let32 (Or let106 (Or let21 (Or let214 (Or let11 let215))))))))
  let let217 := (Or let131 (Or let213 (Or let142 (Or let104 (Or let108 (Or let179 (Or let214 (Or let115 let215))))))))
  let let218 := (Or let171 False)
  let let219 := (binrel% LT.lt let67 let50)
  let let220 := (And let39 let49)
  let let221 := (binrel% LE.le let72 let51)
  let let222 := (And let38 let128)
  let let223 := (binrel% LT.lt let75 let53)
  let let224 := (And let145 let167)
  let let225 := (binrel% LE.le let76 let54)
  let let226 := (And let25 let163)
  let let227 := (binrel% LT.lt let83 let56)
  let let228 := (And let137 let173)
  let let229 := (binrel% LE.le let84 let57)
  let let230 := (binrel% LE.le let20 let1)
  let let231 := (And let15 let230)
  let let232 := (binrel% LE.le let85 let59)
  let let233 := (And let194 let210)
  let let234 := (binrel% LT.lt let86 let50)
  let let235 := (And let39 let13)
  let let236 := (binrel% LE.le let88 let61)
  let let237 := (And let159 let164)
  let let238 := (binrel% LE.le let90 let63)
  let let239 := (And let155 let151)
  let let240 := (binrel% LE.le let93 let65)
  let let241 := (And let176 let170)
fun lean_r0 : (Eq let13 let12) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let15 True) => -- EVALUATE
fun lean_r2 : (Eq let23 let22) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let25 True) => -- EVALUATE
fun lean_r4 : (Eq let34 let33) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let38 True) => -- EVALUATE
fun lean_r6 : (Eq let39 True) => -- EVALUATE
fun lean_r7 : (Eq let49 let48) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let97 let96) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let93 let99) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let90 let102) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let88 let103) => -- THEORY_REWRITE_ARITH
fun lean_r12 : let105 => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let110 let109) => -- THEORY_REWRITE_BOOL
fun lean_r14 : let110 => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let86 let113) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let50 let114) => -- THEORY_REWRITE_ARITH
fun lean_r17 : let116 => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let117 True) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let119 let22) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let120 let17) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let85 let121) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let125 let48) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let126 True) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let127 let74) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let53 let114) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let130 let128) => -- THEORY_REWRITE_ARITH
fun lean_r27 : let132 => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let135 let134) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let75 let136) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let137 True) => -- EVALUATE
fun lean_r31 : (Eq let139 let31) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let144 let143) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq let145 True) => -- EVALUATE
fun lean_r34 : (Eq let148 let10) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let149 let114) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let150 False) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq let153 let151) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let65 let24) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let154 let129) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let155 True) => -- EVALUATE
fun lean_r41 : (Eq let116 let156) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq let51 let37) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let157 let141) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let83 let158) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let159 True) => -- EVALUATE
fun lean_r46 : (Eq let160 let124) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let161 True) => -- THEORY_REWRITE_BOOL
fun lean_r48 : (Eq let162 let12) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let54 let64) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let163 let33) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let165 let164) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let166 True) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let167 let141) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let105 let168) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq let169 True) => -- THEORY_REWRITE_BOOL
fun lean_r56 : let144 => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq let172 let171) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let173 let107) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let132 let174) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let175 True) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let176 True) => -- EVALUATE
fun lean_r62 : (Eq let177 let118) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let178 True) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq let56 let55) => -- THEORY_REWRITE_ARITH
fun lean_r65 : let180 => -- THEORY_REWRITE_BOOL
fun lean_r66 : (Eq let57 let114) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let180 let181) => -- THEORY_REWRITE_BOOL
fun lean_r68 : (Eq let59 let114) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let182 let152) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let192 let114) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let193 let107) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let61 let55) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let63 let52) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let67 let186) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let194 True) => -- EVALUATE
fun lean_r76 : (Eq let72 let187) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let76 let188) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let84 let191) => -- THEORY_REWRITE_ARITH
fun lean_a79 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a80 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a81 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a82 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a83 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a84 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a85 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a86 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a87 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a88 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a89 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a90 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a91 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a92 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a93 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a94 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a95 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a96 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a97 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a98 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a99 : let195 =>
fun lean_a100 : let193 =>
fun lean_a101 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let189 let146)))))))))) let2) =>
fun lean_a102 : let196 =>
fun lean_a103 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let41 let98)))))))) let1) =>
fun lean_a104 : let197 =>
fun lean_a105 : let198 =>
fun lean_a106 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 let138)))))) let1) =>
fun lean_a107 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x3x5fminus let200)))) let1) =>
fun lean_a108 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let202 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let201)))))) let1) =>
fun lean_a109 : let204 =>
fun lean_a110 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let91)))))) let1) =>
fun lean_a111 : let205 =>
fun lean_a112 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x4x5fminus) (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x2x5fminus let199)))))) let1) =>
fun lean_a113 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let6 (binrel% HAdd.hAdd x8x5fminus let201)))) let3) =>
fun lean_a114 : let206 =>
fun lean_a115 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x6x5fminus) (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x3x5fminus let91)))) let1) =>
fun lean_a116 : let207 =>
fun lean_a117 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x5x5fminus let78)))))) let1) =>
fun lean_a118 : let208 =>
fun lean_a119 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x5x5fminus) let200)))))) let1) =>
fun lean_a120 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let77)))))) let3) =>
fun lean_a121 : (binrel% GE.ge (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd let202 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let98)))))) let2) =>
fun lean_a122 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x2x5fminus let209)))) let2) =>
fun lean_a123 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let19 let146)))))) let3) =>
fun lean_a124 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd x7x5fminus let146)))))) let1) =>
fun lean_a125 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let45 let209)))) let1) =>
fun lean_a126 : let170 =>
fun lean_a127 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let4 let147)) let3) =>
fun lean_a128 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let28 let146)) let1) => by
have lean_s0 : (Or let131 (Or let213 (Or let142 (Or let104 (Or let108 (Or let179 (Or let214 (Or let115 (Or let211 (Or let212 let218)))))))))) :=
  (scope (fun lean_a129 : let48 =>
    (scope (fun lean_a130 : let128 =>
      (scope (fun lean_a131 : let141 =>
        (scope (fun lean_a132 : let33 =>
          (scope (fun lean_a133 : let107 =>
            (scope (fun lean_a134 : let22 =>
              (scope (fun lean_a135 : let210 =>
                (scope (fun lean_a136 : let12 =>
                  (scope (fun lean_a137 : let164 =>
                    (scope (fun lean_a138 : let151 =>
                      (scope (fun lean_a139 : let170 =>
                        have lean_s0 : let218 :=
                          (scope (fun lean_a139 : let170 =>
                            have lean_s0 : let176 := by timed trueElim lean_r61
                            have lean_s1 : let241 := by timed And.intro lean_s0 lean_a139
                            have lean_s2 : (Implies let241 let240) := by arithMulNeg [let92, let3, let64], 3
                            have lean_s3 : let240 := by timed modusPonens lean_s1 lean_s2
                            have lean_s4 : let155 := by timed trueElim lean_r40
                            let lean_s5 := by timed flipCongrArg lean_r69 [LE.le]
                            have lean_s6 : (Eq let2 let2) := by timed rfl
                            have lean_s7 : (Eq let198 let153) := by timed congr lean_s5 lean_s6
                            have lean_s8 : (Eq let198 let151) := by timed Eq.trans lean_s7 lean_r37
                            have lean_s9 : let151 := by timed eqResolve lean_a105 lean_s8
                            have lean_s10 : let239 := by timed And.intro lean_s4 lean_s9
                            have lean_s11 : (Implies let239 let238) := by arithMulNeg [let89, let3, let62], 3
                            have lean_s12 : let238 := by timed modusPonens lean_s10 lean_s11
                            have lean_s13 : let159 := by timed trueElim lean_r45
                            let lean_s14 := by timed flipCongrArg lean_r28 [LE.le]
                            have lean_s15 : (Eq let205 let165) := by timed congr lean_s14 lean_s6
                            have lean_s16 : (Eq let205 let164) := by timed Eq.trans lean_s15 lean_r51
                            have lean_s17 : let164 := by timed eqResolve lean_a111 lean_s16
                            have lean_s18 : let237 := by timed And.intro lean_s13 lean_s17
                            have lean_s19 : (Implies let237 let236) := by arithMulNeg [let87, let3, let60], 3
                            have lean_s20 : let236 := by timed modusPonens lean_s18 lean_s19
                            have lean_s21 : let39 := by timed trueElim lean_r6
                            let lean_s22 := by timed flipCongrArg lean_r34 [LE.le]
                            have lean_s23 : (Eq let3 let3) := by timed rfl
                            have lean_s24 : (Eq let197 let162) := by timed congr lean_s22 lean_s23
                            have lean_s25 : (Eq let197 let12) := by timed Eq.trans lean_s24 lean_r48
                            have lean_s26 : let12 := by timed eqResolve lean_a104 lean_s25
                            have lean_s27 : (Eq let12 let13) := by timed Eq.symm lean_r0
                            have lean_s28 : let13 := by timed eqResolve lean_s26 lean_s27
                            have lean_s29 : let235 := by timed And.intro lean_s21 lean_s28
                            have lean_s30 : (Implies let235 let234) := by arithMulPos [let10, let1, let36], 0
                            have lean_s31 : let234 := by timed modusPonens lean_s29 lean_s30
                            have lean_s32 : let194 := by timed trueElim lean_r75
                            let lean_s33 := by timed flipCongrArg lean_r20 [GE.ge]
                            have lean_s34 : (Eq let1 let1) := by timed rfl
                            have lean_s35 : (Eq let195 let210) := by timed congr lean_s33 lean_s34
                            have lean_s36 : let210 := by timed eqResolve lean_a99 lean_s35
                            have lean_s37 : let233 := by timed And.intro lean_s32 lean_s36
                            have lean_s38 : (Implies let233 let232) := by arithMulNeg [let17, let1, let58], 3
                            have lean_s39 : let232 := by timed modusPonens lean_s37 lean_s38
                            have lean_s40 : let15 := by timed trueElim lean_r1
                            let lean_s41 := by timed flipCongrArg lean_r62 [GE.ge]
                            have lean_s42 : (Eq let208 let119) := by timed congr lean_s41 lean_s34
                            have lean_s43 : (Eq let208 let22) := by timed Eq.trans lean_s42 lean_r19
                            have lean_s44 : let22 := by timed eqResolve lean_a118 lean_s43
                            have lean_s45 : (Eq let22 let23) := by timed Eq.symm lean_r2
                            have lean_s46 : let23 := by timed eqResolve lean_s44 lean_s45
                            have lean_s47 : let230 := by intTightUb lean_s46
                            have lean_s48 : let231 := by timed And.intro lean_s40 lean_s47
                            have lean_s49 : (Implies let231 let229) := by arithMulPos [let20, let1, let14], 1
                            have lean_s50 : let229 := by timed modusPonens lean_s48 lean_s49
                            have lean_s51 : let137 := by timed trueElim lean_r30
                            have lean_s52 : let107 := by timed eqResolve lean_a100 lean_r71
                            have lean_s53 : (Eq let107 let173) := by timed Eq.symm lean_r58
                            have lean_s54 : let173 := by timed eqResolve lean_s52 lean_s53
                            have lean_s55 : let228 := by timed And.intro lean_s51 lean_s54
                            have lean_s56 : (Implies let228 let227) := by arithMulPos [let82, let2, let55], 0
                            have lean_s57 : let227 := by timed modusPonens lean_s55 lean_s56
                            have lean_s58 : let25 := by timed trueElim lean_r3
                            let lean_s59 := by timed flipCongrArg lean_r31 [LE.le]
                            have lean_s60 : (Eq let204 let163) := by timed congr lean_s59 lean_s23
                            have lean_s61 : (Eq let204 let33) := by timed Eq.trans lean_s60 lean_r50
                            have lean_s62 : let33 := by timed eqResolve lean_a109 lean_s61
                            have lean_s63 : (Eq let33 let34) := by timed Eq.symm lean_r4
                            have lean_s64 : let34 := by timed eqResolve lean_s62 lean_s63
                            have lean_s65 : let163 := by intTightUb lean_s64
                            have lean_s66 : let226 := by timed And.intro lean_s58 lean_s65
                            have lean_s67 : (Implies let226 let225) := by arithMulPos [let31, let3, let24], 1
                            have lean_s68 : let225 := by timed modusPonens lean_s66 lean_s67
                            have lean_s69 : let145 := by timed trueElim lean_r33
                            let lean_s70 := by timed flipCongrArg lean_r24 [LE.le]
                            have lean_s71 : (Eq let206 let157) := by timed congr lean_s70 lean_s23
                            have lean_s72 : (Eq let206 let141) := by timed Eq.trans lean_s71 lean_r43
                            have lean_s73 : let141 := by timed eqResolve lean_a114 lean_s72
                            have lean_s74 : (Eq let141 let167) := by timed Eq.symm lean_r53
                            have lean_s75 : let167 := by timed eqResolve lean_s73 lean_s74
                            have lean_s76 : let224 := by timed And.intro lean_s69 lean_s75
                            have lean_s77 : (Implies let224 let223) := by arithMulPos [let74, let1, let52], 0
                            have lean_s78 : let223 := by timed modusPonens lean_s76 lean_s77
                            have lean_s79 : let38 := by timed trueElim lean_r5
                            let lean_s80 := by timed flipCongrArg lean_r39 [LE.le]
                            have lean_s81 : (Eq let196 let130) := by timed congr lean_s80 lean_s23
                            have lean_s82 : (Eq let196 let128) := by timed Eq.trans lean_s81 lean_r26
                            have lean_s83 : let128 := by timed eqResolve lean_a102 lean_s82
                            have lean_s84 : let222 := by timed And.intro lean_s79 lean_s83
                            have lean_s85 : (Implies let222 let221) := by arithMulNeg [let71, let2, let37], 3
                            have lean_s86 : let221 := by timed modusPonens lean_s84 lean_s85
                            let lean_s87 := by timed flipCongrArg lean_r46 [GE.ge]
                            have lean_s88 : (Eq let207 let125) := by timed congr lean_s87 lean_s6
                            have lean_s89 : (Eq let207 let48) := by timed Eq.trans lean_s88 lean_r22
                            have lean_s90 : let48 := by timed eqResolve lean_a116 lean_s89
                            have lean_s91 : (Eq let48 let49) := by timed Eq.symm lean_r7
                            have lean_s92 : let49 := by timed eqResolve lean_s90 lean_s91
                            have lean_s93 : let220 := by timed And.intro lean_s21 lean_s92
                            have lean_s94 : (Implies let220 let219) := by arithMulPos [let46, let1, let36], 0
                            have lean_s95 : let219 := by timed modusPonens lean_s93 lean_s94
                            have lean_s96 : let97 := by sumBounds [lean_s3, lean_s12, lean_s20, lean_s31, lean_s39, lean_s50, lean_s57, lean_s68, lean_s78, lean_s86, lean_s95]
                            let lean_s97 := by timed congrHAdd lean_r76 lean_r74
                            let lean_s98 := by timed congrHAdd lean_r29 lean_s97
                            let lean_s99 := by timed congrHAdd lean_r77 lean_s98
                            let lean_s100 := by timed congrHAdd lean_r44 lean_s99
                            let lean_s101 := by timed congrHAdd lean_r78 lean_s100
                            let lean_s102 := by timed congrHAdd lean_r21 lean_s101
                            let lean_s103 := by timed congrHAdd lean_r15 lean_s102
                            let lean_s104 := by timed congrHAdd lean_r11 lean_s103
                            let lean_s105 := by timed congrHAdd lean_r10 lean_s104
                            have lean_s106 : (Eq let94 let192) := by timed congrHAdd lean_r9 lean_s105
                            have lean_s107 : (Eq let94 let114) := by timed Eq.trans lean_s106 lean_r70
                            let lean_s108 := by timed flipCongrArg lean_s107 [GE.ge]
                            let lean_s109 := by timed congrHAdd lean_r42 lean_r16
                            let lean_s110 := by timed congrHAdd lean_r25 lean_s109
                            let lean_s111 := by timed congrHAdd lean_r49 lean_s110
                            let lean_s112 := by timed congrHAdd lean_r64 lean_s111
                            let lean_s113 := by timed congrHAdd lean_r66 lean_s112
                            let lean_s114 := by timed congrHAdd lean_r68 lean_s113
                            let lean_s115 := by timed congrHAdd lean_r16 lean_s114
                            let lean_s116 := by timed congrHAdd lean_r72 lean_s115
                            let lean_s117 := by timed congrHAdd lean_r73 lean_s116
                            have lean_s118 : (Eq let66 let149) := by timed congrHAdd lean_r38 lean_s117
                            have lean_s119 : (Eq let66 let114) := by timed Eq.trans lean_s118 lean_r35
                            have lean_s120 : (Eq let95 let175) := by timed congr lean_s108 lean_s119
                            have lean_s121 : (Eq let95 True) := by timed Eq.trans lean_s120 lean_r60
                            have lean_s122 : (Eq let96 let150) := by timed flipCongrArg lean_s121 [Not]
                            have lean_s123 : (Eq let96 False) := by timed Eq.trans lean_s122 lean_r36
                            have lean_s124 : (Eq let97 False) := by timed Eq.trans lean_r8 lean_s123
                            show False from by timed eqResolve lean_s96 lean_s124
                          ))
                        have lean_s1 : let171 := by liftOrNToNeg lean_s0
                        have lean_s2 : (Eq let171 let172) := by timed Eq.symm lean_r57
                        have lean_s3 : let172 := by timed eqResolve lean_s1 lean_s2
                        have lean_s4 : let171 := by timed eqResolve lean_s3 lean_r57
                        show False from by timed contradiction lean_a139 lean_s4
  ))))))))))))))))))))))
have lean_s1 : (Not (And let48 (And let128 (And let141 (And let33 (And let107 (And let22 (And let210 (And let12 (And let164 (And let151 let170))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let217 := by timed flipNotAnd lean_s1 [let48, let128, let141, let33, let107, let22, let210, let12, let164, let151, let170]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let166 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let174 let166) := by timed congr lean_s5 lean_r27
have lean_s7 : (Eq let174 True) := by timed Eq.trans lean_s6 lean_r52
have lean_s8 : (Eq let132 True) := by timed Eq.trans lean_r59 lean_s7
have lean_s9 : let132 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq let213 let213) := by timed rfl
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : let169 := by timed rfl
let lean_s14 := by timed flipCongrArg lean_s13 [Eq]
have lean_s15 : (Eq let143 let169) := by timed congr lean_s14 lean_r56
have lean_s16 : (Eq let143 True) := by timed Eq.trans lean_s15 lean_r55
have lean_s17 : (Eq let144 True) := by timed Eq.trans lean_r32 lean_s16
have lean_s18 : let144 := by timed trueElim lean_s17
let lean_s19 := by timed congr lean_s3 lean_s18
have lean_s20 : let126 := by timed rfl
let lean_s21 := by timed flipCongrArg lean_s20 [Eq]
have lean_s22 : (Eq let168 let126) := by timed congr lean_s21 lean_r12
have lean_s23 : (Eq let168 True) := by timed Eq.trans lean_s22 lean_r23
have lean_s24 : (Eq let105 True) := by timed Eq.trans lean_r54 lean_s23
have lean_s25 : let105 := by timed trueElim lean_s24
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : let117 := by timed rfl
let lean_s28 := by timed flipCongrArg lean_s27 [Eq]
have lean_s29 : (Eq let109 let117) := by timed congr lean_s28 lean_r14
have lean_s30 : (Eq let109 True) := by timed Eq.trans lean_s29 lean_r18
have lean_s31 : (Eq let110 True) := by timed Eq.trans lean_r13 lean_s30
have lean_s32 : let110 := by timed trueElim lean_s31
let lean_s33 := by timed congr lean_s3 lean_s32
have lean_s34 : let178 := by timed rfl
let lean_s35 := by timed flipCongrArg lean_s34 [Eq]
have lean_s36 : (Eq let181 let178) := by timed congr lean_s35 lean_r65
have lean_s37 : (Eq let181 True) := by timed Eq.trans lean_s36 lean_r63
have lean_s38 : (Eq let180 True) := by timed Eq.trans lean_r67 lean_s37
have lean_s39 : let180 := by timed trueElim lean_s38
let lean_s40 := by timed congr lean_s3 lean_s39
have lean_s41 : (Eq let214 let214) := by timed rfl
let lean_s42 := by timed congr lean_s3 lean_s41
have lean_s43 : let161 := by timed rfl
let lean_s44 := by timed flipCongrArg lean_s43 [Eq]
have lean_s45 : (Eq let156 let161) := by timed congr lean_s44 lean_r17
have lean_s46 : (Eq let156 True) := by timed Eq.trans lean_s45 lean_r47
have lean_s47 : (Eq let116 True) := by timed Eq.trans lean_r41 lean_s46
have lean_s48 : let116 := by timed trueElim lean_s47
let lean_s49 := by timed congr lean_s3 lean_s48
have lean_s50 : (Eq let211 let211) := by timed rfl
let lean_s51 := by timed congr lean_s3 lean_s50
have lean_s52 : (Eq let212 let212) := by timed rfl
let lean_s53 := by timed congr lean_s3 lean_s52
have lean_s54 : (Eq let171 let171) := by timed rfl
let lean_s55 := by timed congr lean_s53 lean_s54
let lean_s56 := by timed congr lean_s51 lean_s55
let lean_s57 := by timed congr lean_s49 lean_s56
let lean_s58 := by timed congr lean_s42 lean_s57
let lean_s59 := by timed congr lean_s40 lean_s58
let lean_s60 := by timed congr lean_s33 lean_s59
let lean_s61 := by timed congr lean_s26 lean_s60
let lean_s62 := by timed congr lean_s19 lean_s61
let lean_s63 := by timed congr lean_s12 lean_s62
have lean_s64 : (Eq let217 let216) := by timed congr lean_s10 lean_s63
have lean_s65 : let216 := by timed eqResolve lean_s2 lean_s64
have lean_s66 : (Or let106 (Or let11 (Or let32 (Or let140 (Or let47 (Or let21 (Or let214 (Or let213 (Or let212 (Or let211 let171)))))))))) := by permutateOr lean_s65, [4, 7, 3, 2, 0, 5, 6, 1, 9, 8, 10], (- 1)
let lean_s67 := by R2 lean_s66, lean_a126, let170, [(- 1), 0]
let lean_s68 := by timed flipCongrArg lean_r62 [GE.ge]
have lean_s69 : (Eq let1 let1) := by timed rfl
have lean_s70 : (Eq let208 let119) := by timed congr lean_s68 lean_s69
have lean_s71 : (Eq let208 let22) := by timed Eq.trans lean_s70 lean_r19
have lean_s72 : let22 := by timed eqResolve lean_a118 lean_s71
let lean_s73 := by R1 lean_s67, lean_s72, let21, [(- 1), 0]
let lean_s74 := by timed flipCongrArg lean_r46 [GE.ge]
have lean_s75 : (Eq let2 let2) := by timed rfl
have lean_s76 : (Eq let207 let125) := by timed congr lean_s74 lean_s75
have lean_s77 : (Eq let207 let48) := by timed Eq.trans lean_s76 lean_r22
have lean_s78 : let48 := by timed eqResolve lean_a116 lean_s77
let lean_s79 := by R1 lean_s73, lean_s78, let47, [(- 1), 0]
let lean_s80 := by timed flipCongrArg lean_r24 [LE.le]
have lean_s81 : (Eq let3 let3) := by timed rfl
have lean_s82 : (Eq let206 let157) := by timed congr lean_s80 lean_s81
have lean_s83 : (Eq let206 let141) := by timed Eq.trans lean_s82 lean_r43
have lean_s84 : let141 := by timed eqResolve lean_a114 lean_s83
let lean_s85 := by R1 lean_s79, lean_s84, let140, [(- 1), 0]
let lean_s86 := by timed flipCongrArg lean_r28 [LE.le]
have lean_s87 : (Eq let205 let165) := by timed congr lean_s86 lean_s75
have lean_s88 : (Eq let205 let164) := by timed Eq.trans lean_s87 lean_r51
have lean_s89 : let164 := by timed eqResolve lean_a111 lean_s88
let lean_s90 := by R2 lean_s85, lean_s89, let164, [(- 1), 0]
let lean_s91 := by timed flipCongrArg lean_r31 [LE.le]
have lean_s92 : (Eq let204 let163) := by timed congr lean_s91 lean_s81
have lean_s93 : (Eq let204 let33) := by timed Eq.trans lean_s92 lean_r50
have lean_s94 : let33 := by timed eqResolve lean_a109 lean_s93
let lean_s95 := by R1 lean_s90, lean_s94, let32, [(- 1), 0]
let lean_s96 := by timed flipCongrArg lean_r69 [LE.le]
have lean_s97 : (Eq let198 let153) := by timed congr lean_s96 lean_s75
have lean_s98 : (Eq let198 let151) := by timed Eq.trans lean_s97 lean_r37
have lean_s99 : let151 := by timed eqResolve lean_a105 lean_s98
let lean_s100 := by R2 lean_s95, lean_s99, let151, [(- 1), 0]
let lean_s101 := by timed flipCongrArg lean_r34 [LE.le]
have lean_s102 : (Eq let197 let162) := by timed congr lean_s101 lean_s81
have lean_s103 : (Eq let197 let12) := by timed Eq.trans lean_s102 lean_r48
have lean_s104 : let12 := by timed eqResolve lean_a104 lean_s103
let lean_s105 := by R1 lean_s100, lean_s104, let11, [(- 1), 0]
let lean_s106 := by timed flipCongrArg lean_r39 [LE.le]
have lean_s107 : (Eq let196 let130) := by timed congr lean_s106 lean_s81
have lean_s108 : (Eq let196 let128) := by timed Eq.trans lean_s107 lean_r26
have lean_s109 : let128 := by timed eqResolve lean_a102 lean_s108
let lean_s110 := by R2 lean_s105, lean_s109, let128, [(- 1), 0]
have lean_s111 : let107 := by timed eqResolve lean_a100 lean_r71
let lean_s112 := by R1 lean_s110, lean_s111, let106, [(- 1), 0]
let lean_s113 := by timed flipCongrArg lean_r20 [GE.ge]
have lean_s114 : (Eq let195 let210) := by timed congr lean_s113 lean_s69
have lean_s115 : let210 := by timed eqResolve lean_a99 lean_s114
exact (show False from by R2 lean_s112, lean_s115, let210, [0, 0])


