open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x1x5fplus : Int}
variable {x1x5fminus : Int}
variable {x9x5fminus : Int}
variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x8x5fplus : Int}
variable {x9x5fminus : Int}
variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x8x5fplus : Int}
variable {x7x5fminus : Int}
variable {x7x5fminus : Int}
variable {x6x5fplus : Int}
variable {x6x5fminus : Int}
variable {x6x5fminus : Int}
variable {x8x5fminus : Int}
variable {x2x5fplus : Int}
variable {x7x5fplus : Int}
variable {x6x5fplus : Int}
variable {x2x5fminus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x9x5fplus : Int}
variable {x7x5fplus : Int}
variable {x1x5fminus : Int}
variable {x1x5fplus : Int}
variable {x9x5fplus : Int}
variable {x4x5fminus : Int}
variable {x4x5fplus : Int}
variable {x0x5fminus : Int}
variable {x5x5fminus : Int}
variable {x5x5fplus : Int}
variable {x0x5fplus : Int}
variable {x2x5fminus : Int}
variable {x2x5fplus : Int}
variable {x8x5fminus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 2)
  let let3 := (Int.ofNat 1)
  let let4 := (binrel% HDiv.hDiv let3 let2)
  let let5 := (binrel% GT.gt let4 let1)
  let let6 := (Not True)
  let let7 := (Neg.neg let3)
  let let8 := (binrel% HMul.hMul let7 x4x5fplus)
  let let9 := (binrel% HMul.hMul let2 x5x5fminus)
  let let10 := (Neg.neg let2)
  let let11 := (binrel% HMul.hMul let10 x5x5fplus)
  let let12 := (binrel% HMul.hMul let10 x9x5fminus)
  let let13 := (binrel% HMul.hMul let2 x9x5fplus)
  let let14 := (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let8 x4x5fminus)))))
  let let15 := (binrel% GE.ge let14 let1)
  let let16 := (Not let15)
  let let17 := (Not let16)
  let let18 := (Eq let15 let17)
  let let19 := (Eq let17 let15)
  let let20 := (Eq let15 let15)
  let let21 := (binrel% HMul.hMul let7 x2x5fminus)
  let let22 := (binrel% HAdd.hAdd x2x5fplus let21)
  let let23 := (binrel% HMul.hMul let7 x7x5fminus)
  let let24 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 let22))
  let let25 := (binrel% GE.ge let24 let1)
  let let26 := (Eq let25 let25)
  let let27 := (Not let25)
  let let28 := (binrel% LE.le let24 let7)
  let let29 := (Int.ofNat 3)
  let let30 := (binrel% HDiv.hDiv let29 let2)
  let let31 := (Neg.neg let30)
  let let32 := (Int.ofNat 4)
  let let33 := (binrel% HDiv.hDiv let29 let32)
  let let34 := (Neg.neg let33)
  let let35 := (binrel% HMul.hMul let33 x5x5fminus)
  let let36 := (binrel% HMul.hMul let34 x5x5fplus)
  let let37 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x9x5fminus) (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x1x5fplus) (binrel% HMul.hMul let31 x1x5fminus))))))))
  let let38 := (binrel% HMul.hMul let10 x1x5fminus)
  let let39 := (binrel% HMul.hMul let2 x1x5fplus)
  let let40 := (binrel% HMul.hMul let7 x2x5fplus)
  let let41 := (binrel% HMul.hMul let7 x5x5fplus)
  let let42 := (binrel% HMul.hMul let7 x9x5fminus)
  let let43 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let39 let38)))))))
  let let44 := (binrel% HMul.hMul let33 let43)
  let let45 := (binrel% GE.ge let43 let3)
  let let46 := (Eq let45 let45)
  let let47 := (binrel% HMul.hMul let7 x1x5fminus)
  let let48 := (binrel% HAdd.hAdd x1x5fplus let47)
  let let49 := (binrel% HMul.hMul let7 x4x5fminus)
  let let50 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let21 let48))))))
  let let51 := (binrel% GE.ge let50 let3)
  let let52 := (Not let51)
  let let53 := (binrel% LT.lt let50 let3)
  let let54 := (binrel% LT.lt let24 let1)
  let let55 := (binrel% HMul.hMul let7 x3x5fplus)
  let let56 := (binrel% HAdd.hAdd let55 x3x5fminus)
  let let57 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 let56))
  let let58 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 let57))
  let let59 := (binrel% GE.ge let58 let1)
  let let60 := (Not let59)
  let let61 := (Not let60)
  let let62 := (Eq let59 let61)
  let let63 := (Eq let61 let59)
  let let64 := (Rat.ofInt 0)
  let let65 := (binrel% GE.ge let64 let31)
  let let66 := (binrel% HMul.hMul let7 x1x5fplus)
  let let67 := (binrel% HAdd.hAdd let66 x1x5fminus)
  let let68 := (binrel% HMul.hMul let7 x8x5fminus)
  let let69 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let21 let67))))))))
  let let70 := (binrel% GE.ge let69 let3)
  let let71 := (Not let70)
  let let72 := (Not let71)
  let let73 := (Eq let70 let72)
  let let74 := (Eq let72 let70)
  let let75 := (binrel% HMul.hMul let4 let1)
  let let76 := (binrel% HDiv.hDiv (Int.ofNat 5) let32)
  let let77 := (Neg.neg let76)
  let let78 := (binrel% HMul.hMul let77 let1)
  let let79 := (Rat.ofInt 1)
  let let80 := (binrel% HMul.hMul let79 let1)
  let let81 := (binrel% HDiv.hDiv let3 let32)
  let let82 := (binrel% HMul.hMul let81 let1)
  let let83 := (Neg.neg let79)
  let let84 := (binrel% HMul.hMul let83 let3)
  let let85 := (binrel% HMul.hMul let33 let3)
  let let86 := (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let80 let80)))))))))
  let let87 := (binrel% HMul.hMul let79 let58)
  let let88 := (binrel% HMul.hMul let79 let24)
  let let89 := (binrel% HMul.hMul let81 let14)
  let let90 := (binrel% HAdd.hAdd let41 x5x5fminus)
  let let91 := (binrel% HMul.hMul let7 x0x5fminus)
  let let92 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let91 let90))))))
  let let93 := (binrel% HMul.hMul let83 let92)
  let let94 := (binrel% HMul.hMul let7 x8x5fplus)
  let let95 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x4x5fminus let48))))))))
  let let96 := (binrel% HMul.hMul let77 let95)
  let let97 := (binrel% HMul.hMul let33 let69)
  let let98 := (binrel% HMul.hMul let7 x7x5fplus)
  let let99 := (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x8x5fminus) (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x7x5fminus let48))))
  let let100 := (binrel% HMul.hMul let4 let99)
  let let101 := (binrel% HMul.hMul let7 x0x5fplus)
  let let102 := (Neg.neg let29)
  let let103 := (binrel% HMul.hMul let102 x8x5fminus)
  let let104 := (binrel% HMul.hMul let29 x8x5fplus)
  let let105 := (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus let67))))))
  let let106 := (binrel% HMul.hMul let83 let105)
  let let107 := (binrel% HMul.hMul let83 let50)
  let let108 := (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let88 let87)))))))))
  let let109 := (binrel% GE.ge let108 let86)
  let let110 := (Not let109)
  let let111 := (binrel% LT.lt let108 let86)
  let let112 := (Not let27)
  let let113 := (Eq let112 let25)
  let let114 := (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let76 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let76 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let76 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let76 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x1x5fplus) (binrel% HMul.hMul let76 x1x5fminus))))))))))
  let let115 := (Not let45)
  let let116 := (Not let115)
  let let117 := (Eq let116 let45)
  let let118 := (binrel% GE.ge let99 let1)
  let let119 := (Not let118)
  let let120 := (Not let119)
  let let121 := (Eq let120 let118)
  let let122 := (binrel% GT.gt let81 let1)
  let let123 := (binrel% LE.le let14 let7)
  let let124 := (binrel% LE.le let43 let1)
  let let125 := (Eq let118 let118)
  let let126 := (Eq let25 let112)
  let let127 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x7x5fminus) (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x1x5fplus) (binrel% HMul.hMul let33 x1x5fminus))))))))))
  let let128 := (Eq let45 let116)
  let let129 := (binrel% LT.lt let58 let1)
  let let130 := (binrel% GT.gt let79 let1)
  let let131 := (Eq let118 let120)
  let let132 := (Eq let59 let59)
  let let133 := (binrel% LT.lt let83 let1)
  let let134 := (Rat.ofInt let58)
  let let135 := (binrel% LT.lt let69 let3)
  let let136 := (Eq let70 let70)
  let let137 := (binrel% LE.le let99 let7)
  let let138 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd x2x5fminus let67))
  let let139 := (Rat.ofInt (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x4x5fminus let138)))))
  let let140 := (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let64 let64)))))))))
  let let141 := (Neg.neg let4)
  let let142 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd (binrel% HMul.hMul let141 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x1x5fplus) (binrel% HMul.hMul let141 x1x5fminus))))))
  let let143 := (binrel% HMul.hMul let7 x5x5fminus)
  let let144 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let102 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let29 x8x5fminus) (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let143 let48)))))))
  let let145 := (Rat.ofInt let24)
  let let146 := (binrel% HAdd.hAdd let101 x0x5fminus)
  let let147 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd x1x5fminus let146))
  let let148 := (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus let147))))
  let let149 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let141 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let141 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let81) x4x5fplus) (binrel% HMul.hMul let81 x4x5fminus))))))
  let let150 := (binrel% HMul.hMul let7 x3x5fminus)
  let let151 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x9x5fplus) (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd x5x5fplus let143))))))))
  let let152 := (binrel% LT.lt let14 let1)
  let let153 := (binrel% LE.le let69 let1)
  let let154 := (binrel% LT.lt let43 let3)
  let let155 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let145 let134)))))))))
  let let156 := (binrel% GT.gt let33 let1)
  let let157 := (binrel% LE.le let58 let7)
  let let158 := (binrel% LT.lt let77 let1)
  let let159 := (binrel% HAdd.hAdd x0x5fplus let91)
  let let160 := (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x3x5fminus let159))
  let let161 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus let160))))
  let let162 := (binrel% LT.lt let99 let1)
  let let163 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let150 let159))
  let let164 := (binrel% HMul.hMul let7 x6x5fplus)
  let let165 := (binrel% HAdd.hAdd let40 x2x5fminus)
  let let166 := (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x4x5fminus let165))
  let let167 := (binrel% HMul.hMul let2 x3x5fminus)
  let let168 := (binrel% HMul.hMul let10 x3x5fplus)
  let let169 := (binrel% GE.ge let95 let1)
  let let170 := (binrel% GE.ge let161 let3)
  let let171 := (binrel% GE.ge let148 let3)
  let let172 := (binrel% GE.ge let92 let3)
  let let173 := (binrel% GE.ge let105 let3)
  let let174 := (Not let173)
  let let175 := (Or let174 let52)
  let let176 := (Not let172)
  let let177 := (Not let169)
  let let178 := (Or let59 (Or let25 (Or let15 (Or let176 (Or let45 (Or let177 (Or let70 (Or let118 let175))))))))
  let let179 := (Or let61 (Or let112 (Or let17 (Or let176 (Or let116 (Or let177 (Or let72 (Or let120 let175))))))))
  let let180 := (Or let52 False)
  let let181 := (binrel% LT.lt let87 let80)
  let let182 := (And let130 let129)
  let let183 := (binrel% LT.lt let88 let80)
  let let184 := (And let130 let54)
  let let185 := (binrel% LT.lt let89 let82)
  let let186 := (And let122 let152)
  let let187 := (binrel% LE.le let93 let84)
  let let188 := (And let133 let172)
  let let189 := (binrel% LT.lt let44 let85)
  let let190 := (And let156 let154)
  let let191 := (binrel% LE.le let96 let78)
  let let192 := (And let158 let169)
  let let193 := (binrel% LT.lt let97 let85)
  let let194 := (And let156 let135)
  let let195 := (binrel% LT.lt let100 let75)
  let let196 := (And let5 let162)
  let let197 := (binrel% LE.le let106 let84)
  let let198 := (And let133 let173)
  let let199 := (binrel% LE.le let107 let84)
  let let200 := (And let133 let51)
(Eq let5 True) → (Eq let6 False) → (Eq let19 let18) → (Eq let20 True) → (Eq let26 True) → (Eq let28 let27) → (Eq let44 let37) → (Eq let46 True) → (Eq let53 let52) → (Eq let54 let27) → (Eq let63 let62) → (Eq let65 True) → (Eq let74 let73) → (Eq let75 let64) → let63 → let74 → (Eq let78 let64) → (Eq let111 let110) → let19 → let113 → (Eq let96 let114) → let117 → let121 → (Eq let122 True) → (Eq let123 let16) → (Eq let124 let115) → (Eq let125 True) → (Eq let113 let126) → (Eq let80 let64) → (Eq let97 let127) → (Eq let117 let128) → (Eq let129 let60) → (Eq let130 True) → (Eq let121 let131) → (Eq let132 True) → (Eq let133 True) → (Eq let87 let134) → (Eq let135 let71) → (Eq let136 True) → (Eq let137 let119) → (Eq let85 let33) → (Eq let107 let139) → (Eq let140 let31) → (Eq let82 let64) → (Eq let100 let142) → (Eq let84 let83) → (Eq let106 let144) → (Eq let88 let145) → (Eq let148 let105) → (Eq let89 let149) → (Eq let93 let151) → (Eq let152 let16) → (Eq let153 let71) → (Eq let154 let115) → (Eq let155 let64) → (Eq let156 True) → (Eq let157 let60) → (Eq let158 True) → (Eq let161 let92) → (Eq let162 let119) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd x6x5fminus let163)))))))) let3) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x4x5fminus let163)))))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x1x5fminus) let159)))))))))) let7) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let49 let159)))))))) let3) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x2x5fminus) let48)))))))) let7) → let153 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let143 let165)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd (binrel% HMul.hMul let29 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let102 x5x5fminus) let147)))) let7) → let124 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x5x5fminus) let160)))) let1) → (binrel% LE.le (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let12 let166)) let3) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let150 let165)))) let3) → (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let47 let146)))) let3) → let137 → let157 → let123 → let28 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 let22)) let1) → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x6x5fminus) let90)) let7) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 let48)))))))) let1) → let169 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x6x5fminus) let166)))))) let7) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 let159)))))))) let3) → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x3x5fminus let138)))))) let1) → let170 → let171 → (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 let159)))))) let1) → let51 → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd (binrel% HMul.hMul let102 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let29 x6x5fminus) let56)))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x8x5fminus) let159)))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x3x5fminus let165)))) let1) → (binrel% GE.ge let57 let1) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 let165)) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let164 x6x5fminus))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let21 let146)) let7) → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 2)
  let let3 := (Int.ofNat 1)
  let let4 := (binrel% HDiv.hDiv let3 let2)
  let let5 := (binrel% GT.gt let4 let1)
  let let6 := (Not True)
  let let7 := (Neg.neg let3)
  let let8 := (binrel% HMul.hMul let7 x4x5fplus)
  let let9 := (binrel% HMul.hMul let2 x5x5fminus)
  let let10 := (Neg.neg let2)
  let let11 := (binrel% HMul.hMul let10 x5x5fplus)
  let let12 := (binrel% HMul.hMul let10 x9x5fminus)
  let let13 := (binrel% HMul.hMul let2 x9x5fplus)
  let let14 := (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let8 x4x5fminus)))))
  let let15 := (binrel% GE.ge let14 let1)
  let let16 := (Not let15)
  let let17 := (Not let16)
  let let18 := (Eq let15 let17)
  let let19 := (Eq let17 let15)
  let let20 := (Eq let15 let15)
  let let21 := (binrel% HMul.hMul let7 x2x5fminus)
  let let22 := (binrel% HAdd.hAdd x2x5fplus let21)
  let let23 := (binrel% HMul.hMul let7 x7x5fminus)
  let let24 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 let22))
  let let25 := (binrel% GE.ge let24 let1)
  let let26 := (Eq let25 let25)
  let let27 := (Not let25)
  let let28 := (binrel% LE.le let24 let7)
  let let29 := (Int.ofNat 3)
  let let30 := (binrel% HDiv.hDiv let29 let2)
  let let31 := (Neg.neg let30)
  let let32 := (Int.ofNat 4)
  let let33 := (binrel% HDiv.hDiv let29 let32)
  let let34 := (Neg.neg let33)
  let let35 := (binrel% HMul.hMul let33 x5x5fminus)
  let let36 := (binrel% HMul.hMul let34 x5x5fplus)
  let let37 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x9x5fminus) (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x1x5fplus) (binrel% HMul.hMul let31 x1x5fminus))))))))
  let let38 := (binrel% HMul.hMul let10 x1x5fminus)
  let let39 := (binrel% HMul.hMul let2 x1x5fplus)
  let let40 := (binrel% HMul.hMul let7 x2x5fplus)
  let let41 := (binrel% HMul.hMul let7 x5x5fplus)
  let let42 := (binrel% HMul.hMul let7 x9x5fminus)
  let let43 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let39 let38)))))))
  let let44 := (binrel% HMul.hMul let33 let43)
  let let45 := (binrel% GE.ge let43 let3)
  let let46 := (Eq let45 let45)
  let let47 := (binrel% HMul.hMul let7 x1x5fminus)
  let let48 := (binrel% HAdd.hAdd x1x5fplus let47)
  let let49 := (binrel% HMul.hMul let7 x4x5fminus)
  let let50 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let21 let48))))))
  let let51 := (binrel% GE.ge let50 let3)
  let let52 := (Not let51)
  let let53 := (binrel% LT.lt let50 let3)
  let let54 := (binrel% LT.lt let24 let1)
  let let55 := (binrel% HMul.hMul let7 x3x5fplus)
  let let56 := (binrel% HAdd.hAdd let55 x3x5fminus)
  let let57 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 let56))
  let let58 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 let57))
  let let59 := (binrel% GE.ge let58 let1)
  let let60 := (Not let59)
  let let61 := (Not let60)
  let let62 := (Eq let59 let61)
  let let63 := (Eq let61 let59)
  let let64 := (Rat.ofInt 0)
  let let65 := (binrel% GE.ge let64 let31)
  let let66 := (binrel% HMul.hMul let7 x1x5fplus)
  let let67 := (binrel% HAdd.hAdd let66 x1x5fminus)
  let let68 := (binrel% HMul.hMul let7 x8x5fminus)
  let let69 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let21 let67))))))))
  let let70 := (binrel% GE.ge let69 let3)
  let let71 := (Not let70)
  let let72 := (Not let71)
  let let73 := (Eq let70 let72)
  let let74 := (Eq let72 let70)
  let let75 := (binrel% HMul.hMul let4 let1)
  let let76 := (binrel% HDiv.hDiv (Int.ofNat 5) let32)
  let let77 := (Neg.neg let76)
  let let78 := (binrel% HMul.hMul let77 let1)
  let let79 := (Rat.ofInt 1)
  let let80 := (binrel% HMul.hMul let79 let1)
  let let81 := (binrel% HDiv.hDiv let3 let32)
  let let82 := (binrel% HMul.hMul let81 let1)
  let let83 := (Neg.neg let79)
  let let84 := (binrel% HMul.hMul let83 let3)
  let let85 := (binrel% HMul.hMul let33 let3)
  let let86 := (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let80 let80)))))))))
  let let87 := (binrel% HMul.hMul let79 let58)
  let let88 := (binrel% HMul.hMul let79 let24)
  let let89 := (binrel% HMul.hMul let81 let14)
  let let90 := (binrel% HAdd.hAdd let41 x5x5fminus)
  let let91 := (binrel% HMul.hMul let7 x0x5fminus)
  let let92 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let91 let90))))))
  let let93 := (binrel% HMul.hMul let83 let92)
  let let94 := (binrel% HMul.hMul let7 x8x5fplus)
  let let95 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x4x5fminus let48))))))))
  let let96 := (binrel% HMul.hMul let77 let95)
  let let97 := (binrel% HMul.hMul let33 let69)
  let let98 := (binrel% HMul.hMul let7 x7x5fplus)
  let let99 := (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x8x5fminus) (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x7x5fminus let48))))
  let let100 := (binrel% HMul.hMul let4 let99)
  let let101 := (binrel% HMul.hMul let7 x0x5fplus)
  let let102 := (Neg.neg let29)
  let let103 := (binrel% HMul.hMul let102 x8x5fminus)
  let let104 := (binrel% HMul.hMul let29 x8x5fplus)
  let let105 := (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus let67))))))
  let let106 := (binrel% HMul.hMul let83 let105)
  let let107 := (binrel% HMul.hMul let83 let50)
  let let108 := (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let88 let87)))))))))
  let let109 := (binrel% GE.ge let108 let86)
  let let110 := (Not let109)
  let let111 := (binrel% LT.lt let108 let86)
  let let112 := (Not let27)
  let let113 := (Eq let112 let25)
  let let114 := (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let76 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let76 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let76 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let76 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let77 x1x5fplus) (binrel% HMul.hMul let76 x1x5fminus))))))))))
  let let115 := (Not let45)
  let let116 := (Not let115)
  let let117 := (Eq let116 let45)
  let let118 := (binrel% GE.ge let99 let1)
  let let119 := (Not let118)
  let let120 := (Not let119)
  let let121 := (Eq let120 let118)
  let let122 := (binrel% GT.gt let81 let1)
  let let123 := (binrel% LE.le let14 let7)
  let let124 := (binrel% LE.le let43 let1)
  let let125 := (Eq let118 let118)
  let let126 := (Eq let25 let112)
  let let127 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x7x5fminus) (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x1x5fplus) (binrel% HMul.hMul let33 x1x5fminus))))))))))
  let let128 := (Eq let45 let116)
  let let129 := (binrel% LT.lt let58 let1)
  let let130 := (binrel% GT.gt let79 let1)
  let let131 := (Eq let118 let120)
  let let132 := (Eq let59 let59)
  let let133 := (binrel% LT.lt let83 let1)
  let let134 := (Rat.ofInt let58)
  let let135 := (binrel% LT.lt let69 let3)
  let let136 := (Eq let70 let70)
  let let137 := (binrel% LE.le let99 let7)
  let let138 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd x2x5fminus let67))
  let let139 := (Rat.ofInt (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x4x5fminus let138)))))
  let let140 := (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let64 let64)))))))))
  let let141 := (Neg.neg let4)
  let let142 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd (binrel% HMul.hMul let141 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x1x5fplus) (binrel% HMul.hMul let141 x1x5fminus))))))
  let let143 := (binrel% HMul.hMul let7 x5x5fminus)
  let let144 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let102 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let29 x8x5fminus) (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let143 let48)))))))
  let let145 := (Rat.ofInt let24)
  let let146 := (binrel% HAdd.hAdd let101 x0x5fminus)
  let let147 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd x1x5fminus let146))
  let let148 := (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus let147))))
  let let149 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let141 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let141 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let81) x4x5fplus) (binrel% HMul.hMul let81 x4x5fminus))))))
  let let150 := (binrel% HMul.hMul let7 x3x5fminus)
  let let151 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x9x5fplus) (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd x5x5fplus let143))))))))
  let let152 := (binrel% LT.lt let14 let1)
  let let153 := (binrel% LE.le let69 let1)
  let let154 := (binrel% LT.lt let43 let3)
  let let155 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let145 let134)))))))))
  let let156 := (binrel% GT.gt let33 let1)
  let let157 := (binrel% LE.le let58 let7)
  let let158 := (binrel% LT.lt let77 let1)
  let let159 := (binrel% HAdd.hAdd x0x5fplus let91)
  let let160 := (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x3x5fminus let159))
  let let161 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus let160))))
  let let162 := (binrel% LT.lt let99 let1)
  let let163 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let150 let159))
  let let164 := (binrel% HMul.hMul let7 x6x5fplus)
  let let165 := (binrel% HAdd.hAdd let40 x2x5fminus)
  let let166 := (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x4x5fminus let165))
  let let167 := (binrel% HMul.hMul let2 x3x5fminus)
  let let168 := (binrel% HMul.hMul let10 x3x5fplus)
  let let169 := (binrel% GE.ge let95 let1)
  let let170 := (binrel% GE.ge let161 let3)
  let let171 := (binrel% GE.ge let148 let3)
  let let172 := (binrel% GE.ge let92 let3)
  let let173 := (binrel% GE.ge let105 let3)
  let let174 := (Not let173)
  let let175 := (Or let174 let52)
  let let176 := (Not let172)
  let let177 := (Not let169)
  let let178 := (Or let59 (Or let25 (Or let15 (Or let176 (Or let45 (Or let177 (Or let70 (Or let118 let175))))))))
  let let179 := (Or let61 (Or let112 (Or let17 (Or let176 (Or let116 (Or let177 (Or let72 (Or let120 let175))))))))
  let let180 := (Or let52 False)
  let let181 := (binrel% LT.lt let87 let80)
  let let182 := (And let130 let129)
  let let183 := (binrel% LT.lt let88 let80)
  let let184 := (And let130 let54)
  let let185 := (binrel% LT.lt let89 let82)
  let let186 := (And let122 let152)
  let let187 := (binrel% LE.le let93 let84)
  let let188 := (And let133 let172)
  let let189 := (binrel% LT.lt let44 let85)
  let let190 := (And let156 let154)
  let let191 := (binrel% LE.le let96 let78)
  let let192 := (And let158 let169)
  let let193 := (binrel% LT.lt let97 let85)
  let let194 := (And let156 let135)
  let let195 := (binrel% LT.lt let100 let75)
  let let196 := (And let5 let162)
  let let197 := (binrel% LE.le let106 let84)
  let let198 := (And let133 let173)
  let let199 := (binrel% LE.le let107 let84)
  let let200 := (And let133 let51)
fun lean_r0 : (Eq let5 True) => -- EVALUATE
fun lean_r1 : (Eq let6 False) => -- THEORY_REWRITE_BOOL
fun lean_r2 : (Eq let19 let18) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq let20 True) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq let26 True) => -- THEORY_REWRITE_BOOL
fun lean_r5 : (Eq let28 let27) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let44 let37) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let46 True) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let53 let52) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let54 let27) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let63 let62) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let65 True) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let74 let73) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let75 let64) => -- THEORY_REWRITE_ARITH
fun lean_r14 : let63 => -- THEORY_REWRITE_BOOL
fun lean_r15 : let74 => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq let78 let64) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let111 let110) => -- THEORY_REWRITE_ARITH
fun lean_r18 : let19 => -- THEORY_REWRITE_BOOL
fun lean_r19 : let113 => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let96 let114) => -- THEORY_REWRITE_ARITH
fun lean_r21 : let117 => -- THEORY_REWRITE_BOOL
fun lean_r22 : let121 => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let122 True) => -- EVALUATE
fun lean_r24 : (Eq let123 let16) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let124 let115) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let125 True) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let113 let126) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let80 let64) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let97 let127) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let117 let128) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let129 let60) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let130 True) => -- EVALUATE
fun lean_r33 : (Eq let121 let131) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let132 True) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let133 True) => -- EVALUATE
fun lean_r36 : (Eq let87 let134) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let135 let71) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let136 True) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq let137 let119) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let85 let33) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let107 let139) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let140 let31) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let82 let64) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let100 let142) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let84 let83) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let106 let144) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let88 let145) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let148 let105) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let89 let149) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let93 let151) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let152 let16) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let153 let71) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let154 let115) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let155 let64) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let156 True) => -- EVALUATE
fun lean_r56 : (Eq let157 let60) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let158 True) => -- EVALUATE
fun lean_r58 : (Eq let161 let92) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let162 let119) => -- THEORY_REWRITE_ARITH
fun lean_a60 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a61 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a62 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a63 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a64 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a65 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a66 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a67 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a68 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a69 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a70 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a71 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a72 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a73 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a74 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a75 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a76 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a77 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a78 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a79 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a80 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd x6x5fminus let163)))))))) let3) =>
fun lean_a81 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x4x5fminus let163)))))))) let1) =>
fun lean_a82 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x1x5fminus) let159)))))))))) let7) =>
fun lean_a83 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let49 let159)))))))) let3) =>
fun lean_a84 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x2x5fminus) let48)))))))) let7) =>
fun lean_a85 : let153 =>
fun lean_a86 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let143 let165)))))) let1) =>
fun lean_a87 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd (binrel% HMul.hMul let29 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let102 x5x5fminus) let147)))) let7) =>
fun lean_a88 : let124 =>
fun lean_a89 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x5x5fminus) let160)))) let1) =>
fun lean_a90 : (binrel% LE.le (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let12 let166)) let3) =>
fun lean_a91 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let150 let165)))) let3) =>
fun lean_a92 : (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let47 let146)))) let3) =>
fun lean_a93 : let137 =>
fun lean_a94 : let157 =>
fun lean_a95 : let123 =>
fun lean_a96 : let28 =>
fun lean_a97 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 let22)) let1) =>
fun lean_a98 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x6x5fminus) let90)) let7) =>
fun lean_a99 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 let48)))))))) let1) =>
fun lean_a100 : let169 =>
fun lean_a101 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x6x5fminus) let166)))))) let7) =>
fun lean_a102 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 let159)))))))) let3) =>
fun lean_a103 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x3x5fminus let138)))))) let1) =>
fun lean_a104 : let170 =>
fun lean_a105 : let171 =>
fun lean_a106 : (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 let159)))))) let1) =>
fun lean_a107 : let51 =>
fun lean_a108 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd (binrel% HMul.hMul let102 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let29 x6x5fminus) let56)))))) let1) =>
fun lean_a109 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x8x5fminus) let159)))) let1) =>
fun lean_a110 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x3x5fminus let165)))) let1) =>
fun lean_a111 : (binrel% GE.ge let57 let1) =>
fun lean_a112 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let68 let165)) let1) =>
fun lean_a113 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let164 x6x5fminus))) let1) =>
fun lean_a114 : (binrel% GE.ge (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let21 let146)) let7) => by
have lean_s0 : (Or let61 (Or let112 (Or let17 (Or let176 (Or let116 (Or let177 (Or let72 (Or let120 (Or let174 let180))))))))) :=
  (scope (fun lean_a115 : let60 =>
    (scope (fun lean_a116 : let27 =>
      (scope (fun lean_a117 : let16 =>
        (scope (fun lean_a118 : let172 =>
          (scope (fun lean_a119 : let115 =>
            (scope (fun lean_a120 : let169 =>
              (scope (fun lean_a121 : let71 =>
                (scope (fun lean_a122 : let119 =>
                  (scope (fun lean_a123 : let173 =>
                    (scope (fun lean_a124 : let51 =>
                      have lean_s0 : let180 :=
                        (scope (fun lean_a123 : let51 =>
                          have lean_s0 : let133 := by timed trueElim lean_r35
                          have lean_s1 : let200 := by timed And.intro lean_s0 lean_a123
                          have lean_s2 : (Implies let200 let199) := by arithMulNeg [let50, let3, let83], 3
                          have lean_s3 : let199 := by timed modusPonens lean_s1 lean_s2
                          let lean_s4 := by timed flipCongrArg lean_r48 [GE.ge]
                          have lean_s5 : (Eq let3 let3) := by timed rfl
                          have lean_s6 : (Eq let171 let173) := by timed congr lean_s4 lean_s5
                          have lean_s7 : let173 := by timed eqResolve lean_a105 lean_s6
                          have lean_s8 : let198 := by timed And.intro lean_s0 lean_s7
                          have lean_s9 : (Implies let198 let197) := by arithMulNeg [let105, let3, let83], 3
                          have lean_s10 : let197 := by timed modusPonens lean_s8 lean_s9
                          have lean_s11 : let5 := by timed trueElim lean_r0
                          have lean_s12 : let119 := by timed eqResolve lean_a93 lean_r39
                          have lean_s13 : (Eq let119 let162) := by timed Eq.symm lean_r59
                          have lean_s14 : let162 := by timed eqResolve lean_s12 lean_s13
                          have lean_s15 : let196 := by timed And.intro lean_s11 lean_s14
                          have lean_s16 : (Implies let196 let195) := by arithMulPos [let99, let1, let4], 0
                          have lean_s17 : let195 := by timed modusPonens lean_s15 lean_s16
                          have lean_s18 : let156 := by timed trueElim lean_r55
                          have lean_s19 : let71 := by timed eqResolve lean_a85 lean_r52
                          have lean_s20 : (Eq let71 let135) := by timed Eq.symm lean_r37
                          have lean_s21 : let135 := by timed eqResolve lean_s19 lean_s20
                          have lean_s22 : let194 := by timed And.intro lean_s18 lean_s21
                          have lean_s23 : (Implies let194 let193) := by arithMulPos [let69, let3, let33], 0
                          have lean_s24 : let193 := by timed modusPonens lean_s22 lean_s23
                          have lean_s25 : let158 := by timed trueElim lean_r57
                          have lean_s26 : let192 := by timed And.intro lean_s25 lean_a120
                          have lean_s27 : (Implies let192 let191) := by arithMulNeg [let95, let1, let77], 3
                          have lean_s28 : let191 := by timed modusPonens lean_s26 lean_s27
                          have lean_s29 : let115 := by timed eqResolve lean_a88 lean_r25
                          have lean_s30 : (Eq let115 let154) := by timed Eq.symm lean_r53
                          have lean_s31 : let154 := by timed eqResolve lean_s29 lean_s30
                          have lean_s32 : let190 := by timed And.intro lean_s18 lean_s31
                          have lean_s33 : (Implies let190 let189) := by arithMulPos [let43, let3, let33], 0
                          have lean_s34 : let189 := by timed modusPonens lean_s32 lean_s33
                          let lean_s35 := by timed flipCongrArg lean_r58 [GE.ge]
                          have lean_s36 : (Eq let170 let172) := by timed congr lean_s35 lean_s5
                          have lean_s37 : let172 := by timed eqResolve lean_a104 lean_s36
                          have lean_s38 : let188 := by timed And.intro lean_s0 lean_s37
                          have lean_s39 : (Implies let188 let187) := by arithMulNeg [let92, let3, let83], 3
                          have lean_s40 : let187 := by timed modusPonens lean_s38 lean_s39
                          have lean_s41 : let122 := by timed trueElim lean_r23
                          have lean_s42 : let16 := by timed eqResolve lean_a95 lean_r24
                          have lean_s43 : (Eq let16 let152) := by timed Eq.symm lean_r51
                          have lean_s44 : let152 := by timed eqResolve lean_s42 lean_s43
                          have lean_s45 : let186 := by timed And.intro lean_s41 lean_s44
                          have lean_s46 : (Implies let186 let185) := by arithMulPos [let14, let1, let81], 0
                          have lean_s47 : let185 := by timed modusPonens lean_s45 lean_s46
                          have lean_s48 : let130 := by timed trueElim lean_r32
                          have lean_s49 : let27 := by timed eqResolve lean_a96 lean_r5
                          have lean_s50 : (Eq let27 let54) := by timed Eq.symm lean_r9
                          have lean_s51 : let54 := by timed eqResolve lean_s49 lean_s50
                          have lean_s52 : let184 := by timed And.intro lean_s48 lean_s51
                          have lean_s53 : (Implies let184 let183) := by arithMulPos [let24, let1, let79], 0
                          have lean_s54 : let183 := by timed modusPonens lean_s52 lean_s53
                          have lean_s55 : let60 := by timed eqResolve lean_a94 lean_r56
                          have lean_s56 : (Eq let60 let129) := by timed Eq.symm lean_r31
                          have lean_s57 : let129 := by timed eqResolve lean_s55 lean_s56
                          have lean_s58 : let182 := by timed And.intro lean_s48 lean_s57
                          have lean_s59 : (Implies let182 let181) := by arithMulPos [let58, let1, let79], 0
                          have lean_s60 : let181 := by timed modusPonens lean_s58 lean_s59
                          have lean_s61 : let111 := by sumBounds [lean_s3, lean_s10, lean_s17, lean_s24, lean_s28, lean_s34, lean_s40, lean_s47, lean_s54, lean_s60]
                          let lean_s62 := by timed congrHAdd lean_r47 lean_r36
                          let lean_s63 := by timed congrHAdd lean_r49 lean_s62
                          let lean_s64 := by timed congrHAdd lean_r50 lean_s63
                          let lean_s65 := by timed congrHAdd lean_r6 lean_s64
                          let lean_s66 := by timed congrHAdd lean_r20 lean_s65
                          let lean_s67 := by timed congrHAdd lean_r29 lean_s66
                          let lean_s68 := by timed congrHAdd lean_r44 lean_s67
                          let lean_s69 := by timed congrHAdd lean_r46 lean_s68
                          have lean_s70 : (Eq let108 let155) := by timed congrHAdd lean_r41 lean_s69
                          have lean_s71 : (Eq let108 let64) := by timed Eq.trans lean_s70 lean_r54
                          let lean_s72 := by timed flipCongrArg lean_s71 [GE.ge]
                          let lean_s73 := by timed congrHAdd lean_r28 lean_r28
                          let lean_s74 := by timed congrHAdd lean_r43 lean_s73
                          let lean_s75 := by timed congrHAdd lean_r45 lean_s74
                          let lean_s76 := by timed congrHAdd lean_r40 lean_s75
                          let lean_s77 := by timed congrHAdd lean_r16 lean_s76
                          let lean_s78 := by timed congrHAdd lean_r40 lean_s77
                          let lean_s79 := by timed congrHAdd lean_r13 lean_s78
                          let lean_s80 := by timed congrHAdd lean_r45 lean_s79
                          have lean_s81 : (Eq let86 let140) := by timed congrHAdd lean_r45 lean_s80
                          have lean_s82 : (Eq let86 let31) := by timed Eq.trans lean_s81 lean_r42
                          have lean_s83 : (Eq let109 let65) := by timed congr lean_s72 lean_s82
                          have lean_s84 : (Eq let109 True) := by timed Eq.trans lean_s83 lean_r11
                          have lean_s85 : (Eq let110 let6) := by timed flipCongrArg lean_s84 [Not]
                          have lean_s86 : (Eq let110 False) := by timed Eq.trans lean_s85 lean_r1
                          have lean_s87 : (Eq let111 False) := by timed Eq.trans lean_r17 lean_s86
                          show False from by timed eqResolve lean_s61 lean_s87
                        ))
                      have lean_s1 : let52 := by liftOrNToNeg lean_s0
                      have lean_s2 : (Eq let52 let53) := by timed Eq.symm lean_r8
                      have lean_s3 : let53 := by timed eqResolve lean_s1 lean_s2
                      have lean_s4 : let52 := by timed eqResolve lean_s3 lean_r8
                      show False from by timed contradiction lean_a124 lean_s4
  ))))))))))))))))))))
have lean_s1 : (Not (And let60 (And let27 (And let16 (And let172 (And let115 (And let169 (And let71 (And let119 (And let173 let51)))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let179 := by timed flipNotAnd lean_s1 [let60, let27, let16, let172, let115, let169, let71, let119, let173, let51]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let132 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let62 let132) := by timed congr lean_s5 lean_r14
have lean_s7 : (Eq let62 True) := by timed Eq.trans lean_s6 lean_r34
have lean_s8 : (Eq let63 True) := by timed Eq.trans lean_r10 lean_s7
have lean_s9 : let63 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let26 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let126 let26) := by timed congr lean_s12 lean_r19
have lean_s14 : (Eq let126 True) := by timed Eq.trans lean_s13 lean_r4
have lean_s15 : (Eq let113 True) := by timed Eq.trans lean_r27 lean_s14
have lean_s16 : let113 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : let20 := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq let18 let20) := by timed congr lean_s19 lean_r18
have lean_s21 : (Eq let18 True) := by timed Eq.trans lean_s20 lean_r3
have lean_s22 : (Eq let19 True) := by timed Eq.trans lean_r2 lean_s21
have lean_s23 : let19 := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : (Eq let176 let176) := by timed rfl
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : let46 := by timed rfl
let lean_s28 := by timed flipCongrArg lean_s27 [Eq]
have lean_s29 : (Eq let128 let46) := by timed congr lean_s28 lean_r21
have lean_s30 : (Eq let128 True) := by timed Eq.trans lean_s29 lean_r7
have lean_s31 : (Eq let117 True) := by timed Eq.trans lean_r30 lean_s30
have lean_s32 : let117 := by timed trueElim lean_s31
let lean_s33 := by timed congr lean_s3 lean_s32
have lean_s34 : (Eq let177 let177) := by timed rfl
let lean_s35 := by timed congr lean_s3 lean_s34
have lean_s36 : let136 := by timed rfl
let lean_s37 := by timed flipCongrArg lean_s36 [Eq]
have lean_s38 : (Eq let73 let136) := by timed congr lean_s37 lean_r15
have lean_s39 : (Eq let73 True) := by timed Eq.trans lean_s38 lean_r38
have lean_s40 : (Eq let74 True) := by timed Eq.trans lean_r12 lean_s39
have lean_s41 : let74 := by timed trueElim lean_s40
let lean_s42 := by timed congr lean_s3 lean_s41
have lean_s43 : let125 := by timed rfl
let lean_s44 := by timed flipCongrArg lean_s43 [Eq]
have lean_s45 : (Eq let131 let125) := by timed congr lean_s44 lean_r22
have lean_s46 : (Eq let131 True) := by timed Eq.trans lean_s45 lean_r26
have lean_s47 : (Eq let121 True) := by timed Eq.trans lean_r33 lean_s46
have lean_s48 : let121 := by timed trueElim lean_s47
let lean_s49 := by timed congr lean_s3 lean_s48
have lean_s50 : (Eq let174 let174) := by timed rfl
let lean_s51 := by timed congr lean_s3 lean_s50
have lean_s52 : (Eq let52 let52) := by timed rfl
let lean_s53 := by timed congr lean_s51 lean_s52
let lean_s54 := by timed congr lean_s49 lean_s53
let lean_s55 := by timed congr lean_s42 lean_s54
let lean_s56 := by timed congr lean_s35 lean_s55
let lean_s57 := by timed congr lean_s33 lean_s56
let lean_s58 := by timed congr lean_s26 lean_s57
let lean_s59 := by timed congr lean_s24 lean_s58
let lean_s60 := by timed congr lean_s17 lean_s59
have lean_s61 : (Eq let179 let178) := by timed congr lean_s10 lean_s60
have lean_s62 : let178 := by timed eqResolve lean_s2 lean_s61
have lean_s63 : (Or let70 (Or let45 (Or let118 (Or let59 (Or let15 (Or let25 (Or let177 (Or let176 let175)))))))) := by permutateOr lean_s62, [6, 4, 7, 0, 2, 1, 5, 3, 8, 9], (- 1)
let lean_s64 := by R2 lean_s63, lean_a107, let51, [(- 1), 0]
let lean_s65 := by timed flipCongrArg lean_r48 [GE.ge]
have lean_s66 : (Eq let3 let3) := by timed rfl
have lean_s67 : (Eq let171 let173) := by timed congr lean_s65 lean_s66
have lean_s68 : let173 := by timed eqResolve lean_a105 lean_s67
let lean_s69 := by R2 lean_s64, lean_s68, let173, [(- 1), 0]
let lean_s70 := by timed flipCongrArg lean_r58 [GE.ge]
have lean_s71 : (Eq let170 let172) := by timed congr lean_s70 lean_s66
have lean_s72 : let172 := by timed eqResolve lean_a104 lean_s71
let lean_s73 := by R2 lean_s69, lean_s72, let172, [(- 1), 0]
let lean_s74 := by R2 lean_s73, lean_a100, let169, [(- 1), 0]
have lean_s75 : let27 := by timed eqResolve lean_a96 lean_r5
let lean_s76 := by R1 lean_s74, lean_s75, let25, [(- 1), 0]
have lean_s77 : let16 := by timed eqResolve lean_a95 lean_r24
let lean_s78 := by R1 lean_s76, lean_s77, let15, [(- 1), 0]
have lean_s79 : let60 := by timed eqResolve lean_a94 lean_r56
let lean_s80 := by R1 lean_s78, lean_s79, let59, [(- 1), 0]
have lean_s81 : let119 := by timed eqResolve lean_a93 lean_r39
let lean_s82 := by R1 lean_s80, lean_s81, let118, [(- 1), 0]
have lean_s83 : let115 := by timed eqResolve lean_a88 lean_r25
let lean_s84 := by R1 lean_s82, lean_s83, let45, [(- 1), 0]
have lean_s85 : let71 := by timed eqResolve lean_a85 lean_r52
exact (show False from by R1 lean_s84, lean_s85, let70, [0, 0])


