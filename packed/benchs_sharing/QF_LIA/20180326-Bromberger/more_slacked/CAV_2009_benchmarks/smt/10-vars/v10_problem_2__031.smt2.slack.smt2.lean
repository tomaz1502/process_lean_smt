open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x2x5fplus : Int}
variable {x2x5fminus : Int}
variable {x5x5fminus : Int}
variable {x9x5fplus : Int}
variable {x2x5fminus : Int}
variable {x3x5fminus : Int}
variable {x5x5fminus : Int}
variable {x7x5fplus : Int}
variable {x9x5fminus : Int}
variable {x1x5fplus : Int}
variable {x6x5fminus : Int}
variable {x1x5fminus : Int}
variable {x8x5fplus : Int}
variable {x8x5fplus : Int}
variable {x5x5fplus : Int}
variable {x5x5fplus : Int}
variable {x8x5fminus : Int}
variable {x8x5fminus : Int}
variable {x7x5fminus : Int}
variable {x3x5fplus : Int}
variable {x9x5fplus : Int}
variable {x6x5fplus : Int}
variable {x3x5fminus : Int}
variable {x1x5fminus : Int}
variable {x2x5fplus : Int}
variable {x3x5fplus : Int}
variable {x4x5fplus : Int}
variable {x9x5fminus : Int}
variable {x0x5fminus : Int}
variable {x1x5fplus : Int}
variable {x0x5fplus : Int}
variable {x4x5fminus : Int}
variable {x7x5fminus : Int}
variable {x6x5fminus : Int}
variable {x7x5fplus : Int}
variable {x6x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 1)
  let let6 := (Neg.neg let5)
  let let7 := (binrel% HMul.hMul let6 x1x5fminus)
  let let8 := (binrel% HAdd.hAdd x1x5fplus let7)
  let let9 := (binrel% HMul.hMul let6 x0x5fplus)
  let let10 := (binrel% HMul.hMul let6 x2x5fplus)
  let let11 := (binrel% HMul.hMul let6 x9x5fminus)
  let let12 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x0x5fminus let8))))))
  let let13 := (binrel% GE.ge let12 let5)
  let let14 := (Not let13)
  let let15 := (binrel% LT.lt let12 let5)
  let let16 := (binrel% GT.gt let2 let1)
  let let17 := (binrel% HMul.hMul let6 x7x5fminus)
  let let18 := (binrel% HAdd.hAdd x7x5fplus let17)
  let let19 := (binrel% GE.ge let18 let1)
  let let20 := (Not let19)
  let let21 := (binrel% LT.lt let18 let1)
  let let22 := (binrel% HMul.hMul let6 x2x5fminus)
  let let23 := (binrel% HAdd.hAdd x2x5fplus let22)
  let let24 := (binrel% HMul.hMul let6 x6x5fplus)
  let let25 := (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6x5fminus let23))
  let let26 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 let25))))
  let let27 := (binrel% GE.ge let26 let1)
  let let28 := (Not let27)
  let let29 := (binrel% LT.lt let26 let1)
  let let30 := (Int.ofNat 2)
  let let31 := (Int.ofNat 3)
  let let32 := (binrel% HDiv.hDiv let31 let30)
  let let33 := (Neg.neg let32)
  let let34 := (binrel% HMul.hMul let33 x2x5fminus)
  let let35 := (binrel% HMul.hMul let32 x2x5fplus)
  let let36 := (binrel% HMul.hMul let33 x9x5fminus)
  let let37 := (binrel% HMul.hMul let32 x9x5fplus)
  let let38 := (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x7x5fminus) (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x6x5fminus) (binrel% HAdd.hAdd let35 let34)))))))
  let let39 := (binrel% HMul.hMul let32 let26)
  let let40 := (Rat.ofInt 0)
  let let41 := (Rat.ofInt let18)
  let let42 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x7x5fminus) (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x8x5fplus) (binrel% HMul.hMul let32 x8x5fminus))))))))
  let let43 := (Neg.neg let31)
  let let44 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x8x5fplus) (binrel% HMul.hMul let33 x8x5fminus))))))
  let let45 := (Int.ofNat 6)
  let let46 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let45) x9x5fplus) (binrel% HMul.hMul let45 x9x5fminus)))
  let let47 := (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x1x5fplus) (binrel% HMul.hMul let43 x1x5fminus))
  let let48 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x0x5fminus) let47)))))))
  let let49 := (binrel% HMul.hMul let6 x7x5fplus)
  let let50 := (Rat.ofInt (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x1x5fplus) (binrel% HMul.hMul let31 x1x5fminus)))))
  let let51 := (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 let38))))))
  let let52 := (binrel% HMul.hMul let6 x8x5fminus)
  let let53 := (binrel% HAdd.hAdd x8x5fplus let52)
  let let54 := (Neg.neg let30)
  let let55 := (binrel% HMul.hMul let54 x0x5fminus)
  let let56 := (binrel% HMul.hMul let30 x0x5fplus)
  let let57 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let55 let53))))
  let let58 := (binrel% GE.ge let57 let1)
  let let59 := (Not let58)
  let let60 := (binrel% LT.lt let57 let1)
  let let61 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 let47))
  let let62 := (binrel% HMul.hMul let3 let61)
  let let63 := (Rat.ofInt 3)
  let let64 := (binrel% HMul.hMul let63 let5)
  let let65 := (binrel% HMul.hMul let63 let12)
  let let66 := (Neg.neg (Rat.ofInt 6))
  let let67 := (binrel% HMul.hMul let66 let1)
  let let68 := (binrel% HMul.hMul let32 let57)
  let let69 := (binrel% HMul.hMul let33 let5)
  let let70 := (Not let14)
  let let71 := (Eq let70 let13)
  let let72 := (binrel% LE.le let18 let6)
  let let73 := (binrel% LT.lt let66 let1)
  let let74 := (binrel% LE.le let26 let6)
  let let75 := (binrel% LE.le let12 let1)
  let let76 := (binrel% LE.le let57 let6)
  let let77 := (binrel% HMul.hMul let2 let18)
  let let78 := (binrel% HMul.hMul let32 let1)
  let let79 := (binrel% HMul.hMul let6 x8x5fplus)
  let let80 := (binrel% HMul.hMul let6 x6x5fminus)
  let let81 := (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let79 x8x5fminus)))))))
  let let82 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus let80)))))))
  let let83 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x9x5fplus) (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6x5fminus let53))))))
  let let84 := (binrel% HMul.hMul let33 let83)
  let let85 := (binrel% HMul.hMul let2 let1)
  let let86 := (binrel% LT.lt let33 let1)
  let let87 := (binrel% GE.ge let83 let5)
  let let88 := (binrel% LE.le let81 let6)
  let let89 := (Not let20)
  let let90 := (Eq let19 let89)
  let let91 := (Eq let89 let19)
  let let92 := (binrel% HMul.hMul let32 let6)
  let let93 := (binrel% HMul.hMul let3 let1)
  let let94 := (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let85 let78))))))
  let let95 := (binrel% HAdd.hAdd x9x5fplus let11)
  let let96 := (binrel% HMul.hMul let66 let95)
  let let97 := (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let77 let39))))))
  let let98 := (binrel% GE.ge let97 let94)
  let let99 := (Not let98)
  let let100 := (binrel% LT.lt let97 let94)
  let let101 := (binrel% HAdd.hAdd let9 x0x5fminus)
  let let102 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let7 let101))))))
  let let103 := (Not let59)
  let let104 := (Eq let58 let103)
  let let105 := (Eq let103 let58)
  let let106 := (Not let28)
  let let107 := (Eq let27 let106)
  let let108 := (Eq let106 let27)
  let let109 := (Eq let13 let13)
  let let110 := (binrel% HSub.hSub x9x5fplus x9x5fminus)
  let let111 := (binrel% HSub.hSub x7x5fplus x7x5fminus)
  let let112 := (binrel% GT.gt let63 let1)
  let let113 := (binrel% HAdd.hAdd let56 let55)
  let let114 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let22 let113))))
  let let115 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let40 let40))))))
  let let116 := (Eq let13 let70)
  let let117 := (Eq let58 let58)
  let let118 := (binrel% GT.gt let32 let1)
  let let119 := (Eq let27 let27)
  let let120 := (binrel% GE.ge let61 let1)
  let let121 := (Not let120)
  let let122 := (binrel% LT.lt let61 let1)
  let let123 := (Not True)
  let let124 := (Eq let19 let19)
  let let125 := (binrel% GE.ge let40 let40)
  let let126 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 let25))))
  let let127 := (binrel% LE.le let111 let6)
  let let128 := (binrel% GE.ge let110 let1)
  let let129 := (binrel% HMul.hMul let6 x4x5fminus)
  let let130 := (binrel% HMul.hMul let6 x5x5fminus)
  let let131 := (binrel% HMul.hMul let6 x3x5fminus)
  let let132 := (binrel% HMul.hMul let6 x5x5fplus)
  let let133 := (binrel% HMul.hMul let30 x1x5fminus)
  let let134 := (binrel% HMul.hMul let54 x1x5fplus)
  let let135 := (binrel% LE.le let82 let6)
  let let136 := (binrel% LE.le let102 let1)
  let let137 := (binrel% LE.le let126 let6)
  let let138 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let6 x0x5fminus))
  let let139 := (binrel% HMul.hMul let6 x3x5fplus)
  let let140 := (binrel% LE.le let114 let6)
  let let141 := (binrel% HAdd.hAdd let139 x3x5fminus)
  let let142 := (binrel% HMul.hMul let6 x1x5fplus)
  let let143 := (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd x1x5fminus let101))
  let let144 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let22 let8))
  let let145 := (binrel% HMul.hMul let54 x4x5fminus)
  let let146 := (binrel% HMul.hMul let30 x4x5fplus)
  let let147 := (binrel% HMul.hMul let6 x4x5fplus)
  let let148 := (binrel% GE.ge let95 let1)
  let let149 := (Not let87)
  let let150 := (Not let148)
  let let151 := (Or let27 (Or let19 (Or let149 (Or let58 (Or let150 (Or let13 let121))))))
  let let152 := (Or let106 (Or let89 (Or let149 (Or let103 (Or let150 (Or let70 let121))))))
  let let153 := (Or let121 False)
  let let154 := (binrel% LT.lt let39 let78)
  let let155 := (And let118 let29)
  let let156 := (binrel% LT.lt let77 let85)
  let let157 := (And let16 let21)
  let let158 := (binrel% LE.le let84 let69)
  let let159 := (And let86 let87)
  let let160 := (binrel% LE.le let68 let92)
  let let161 := (And let118 let76)
  let let162 := (binrel% LE.le let96 let67)
  let let163 := (And let73 let148)
  let let164 := (binrel% LT.lt let65 let64)
  let let165 := (And let112 let15)
  let let166 := (binrel% LE.le let62 let93)
  let let167 := (And let4 let120)
(Eq let4 True) → (Eq let15 let14) → (Eq let16 True) → (Eq let21 let20) → (Eq let29 let28) → (Eq let39 let38) → (Eq let51 let40) → (Eq let60 let59) → (Eq let62 let50) → (Eq let64 let63) → (Eq let65 let48) → (Eq let67 let40) → (Eq let68 let44) → (Eq let69 let33) → let71 → (Eq let72 let20) → (Eq let73 True) → (Eq let74 let28) → (Eq let75 let14) → (Eq let76 let59) → (Eq let77 let41) → (Eq let78 let40) → (Eq let82 let81) → (Eq let84 let42) → (Eq let85 let40) → (Eq let86 True) → (Eq let88 let87) → (Eq let91 let90) → (Eq let100 let99) → (Eq let93 let40) → (Eq let102 let12) → (Eq let105 let104) → (Eq let108 let107) → (Eq let109 True) → (Eq let110 let95) → (Eq let111 let18) → (Eq let112 True) → (Eq let114 let57) → (Eq let115 let40) → (Eq let71 let116) → (Eq let117 True) → (Eq let118 True) → (Eq let119 True) → (Eq let96 let46) → (Eq let92 let33) → (Eq let122 let121) → let105 → let108 → (Eq let123 False) → (Eq let124 True) → (Eq let125 True) → (Eq let126 let26) → let91 → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → let127 → let128 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let22 let101)))))))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let131 let8)))))))) let6) → (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x9x5fminus) (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x5x5fplus let130))))))))) let5) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let134 let133))))))) let1) → let135 → let136 → let137 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd x3x5fminus let138)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 let113)))) let5) → let140 → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let133 let138)))) let5) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 let141)))) let6) → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 let143)) let1) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 let144)) let1) → (binrel% LE.le (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let145 let138)) let1) → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 let8)) let5) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x5x5fminus) (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd x4x5fminus let8)))))))))) let6) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let145 let144)))))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd x1x5fminus let138)))))))) let5) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x2x5fminus let101)))))))) let6) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let7 let138)))))))) let6) → (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x8x5fminus) (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 let23)))))))) let5) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x4x5fminus) let143)))))) let5) → (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 let8)))) let6) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd x4x5fminus let113)))) let5) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd x5x5fminus let101)))) let6) → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let147 x4x5fminus))))) let6) → (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let10 x2x5fminus))) let5) → (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x5x5fminus) (binrel% HAdd.hAdd let142 x1x5fminus))) let6) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let49 x7x5fminus))) let6) → let120 → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 let141)) let5) → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% LT.lt let3 let1)
  let let5 := (Int.ofNat 1)
  let let6 := (Neg.neg let5)
  let let7 := (binrel% HMul.hMul let6 x1x5fminus)
  let let8 := (binrel% HAdd.hAdd x1x5fplus let7)
  let let9 := (binrel% HMul.hMul let6 x0x5fplus)
  let let10 := (binrel% HMul.hMul let6 x2x5fplus)
  let let11 := (binrel% HMul.hMul let6 x9x5fminus)
  let let12 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x0x5fminus let8))))))
  let let13 := (binrel% GE.ge let12 let5)
  let let14 := (Not let13)
  let let15 := (binrel% LT.lt let12 let5)
  let let16 := (binrel% GT.gt let2 let1)
  let let17 := (binrel% HMul.hMul let6 x7x5fminus)
  let let18 := (binrel% HAdd.hAdd x7x5fplus let17)
  let let19 := (binrel% GE.ge let18 let1)
  let let20 := (Not let19)
  let let21 := (binrel% LT.lt let18 let1)
  let let22 := (binrel% HMul.hMul let6 x2x5fminus)
  let let23 := (binrel% HAdd.hAdd x2x5fplus let22)
  let let24 := (binrel% HMul.hMul let6 x6x5fplus)
  let let25 := (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6x5fminus let23))
  let let26 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 let25))))
  let let27 := (binrel% GE.ge let26 let1)
  let let28 := (Not let27)
  let let29 := (binrel% LT.lt let26 let1)
  let let30 := (Int.ofNat 2)
  let let31 := (Int.ofNat 3)
  let let32 := (binrel% HDiv.hDiv let31 let30)
  let let33 := (Neg.neg let32)
  let let34 := (binrel% HMul.hMul let33 x2x5fminus)
  let let35 := (binrel% HMul.hMul let32 x2x5fplus)
  let let36 := (binrel% HMul.hMul let33 x9x5fminus)
  let let37 := (binrel% HMul.hMul let32 x9x5fplus)
  let let38 := (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x7x5fminus) (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x6x5fminus) (binrel% HAdd.hAdd let35 let34)))))))
  let let39 := (binrel% HMul.hMul let32 let26)
  let let40 := (Rat.ofInt 0)
  let let41 := (Rat.ofInt let18)
  let let42 := (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x7x5fminus) (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let33 x8x5fplus) (binrel% HMul.hMul let32 x8x5fminus))))))))
  let let43 := (Neg.neg let31)
  let let44 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x8x5fplus) (binrel% HMul.hMul let33 x8x5fminus))))))
  let let45 := (Int.ofNat 6)
  let let46 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let45) x9x5fplus) (binrel% HMul.hMul let45 x9x5fminus)))
  let let47 := (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x1x5fplus) (binrel% HMul.hMul let43 x1x5fminus))
  let let48 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x0x5fminus) let47)))))))
  let let49 := (binrel% HMul.hMul let6 x7x5fplus)
  let let50 := (Rat.ofInt (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x1x5fplus) (binrel% HMul.hMul let31 x1x5fminus)))))
  let let51 := (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let41 let38))))))
  let let52 := (binrel% HMul.hMul let6 x8x5fminus)
  let let53 := (binrel% HAdd.hAdd x8x5fplus let52)
  let let54 := (Neg.neg let30)
  let let55 := (binrel% HMul.hMul let54 x0x5fminus)
  let let56 := (binrel% HMul.hMul let30 x0x5fplus)
  let let57 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let55 let53))))
  let let58 := (binrel% GE.ge let57 let1)
  let let59 := (Not let58)
  let let60 := (binrel% LT.lt let57 let1)
  let let61 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 let47))
  let let62 := (binrel% HMul.hMul let3 let61)
  let let63 := (Rat.ofInt 3)
  let let64 := (binrel% HMul.hMul let63 let5)
  let let65 := (binrel% HMul.hMul let63 let12)
  let let66 := (Neg.neg (Rat.ofInt 6))
  let let67 := (binrel% HMul.hMul let66 let1)
  let let68 := (binrel% HMul.hMul let32 let57)
  let let69 := (binrel% HMul.hMul let33 let5)
  let let70 := (Not let14)
  let let71 := (Eq let70 let13)
  let let72 := (binrel% LE.le let18 let6)
  let let73 := (binrel% LT.lt let66 let1)
  let let74 := (binrel% LE.le let26 let6)
  let let75 := (binrel% LE.le let12 let1)
  let let76 := (binrel% LE.le let57 let6)
  let let77 := (binrel% HMul.hMul let2 let18)
  let let78 := (binrel% HMul.hMul let32 let1)
  let let79 := (binrel% HMul.hMul let6 x8x5fplus)
  let let80 := (binrel% HMul.hMul let6 x6x5fminus)
  let let81 := (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let79 x8x5fminus)))))))
  let let82 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus let80)))))))
  let let83 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x9x5fplus) (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6x5fminus let53))))))
  let let84 := (binrel% HMul.hMul let33 let83)
  let let85 := (binrel% HMul.hMul let2 let1)
  let let86 := (binrel% LT.lt let33 let1)
  let let87 := (binrel% GE.ge let83 let5)
  let let88 := (binrel% LE.le let81 let6)
  let let89 := (Not let20)
  let let90 := (Eq let19 let89)
  let let91 := (Eq let89 let19)
  let let92 := (binrel% HMul.hMul let32 let6)
  let let93 := (binrel% HMul.hMul let3 let1)
  let let94 := (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let85 let78))))))
  let let95 := (binrel% HAdd.hAdd x9x5fplus let11)
  let let96 := (binrel% HMul.hMul let66 let95)
  let let97 := (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let96 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let77 let39))))))
  let let98 := (binrel% GE.ge let97 let94)
  let let99 := (Not let98)
  let let100 := (binrel% LT.lt let97 let94)
  let let101 := (binrel% HAdd.hAdd let9 x0x5fminus)
  let let102 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let7 let101))))))
  let let103 := (Not let59)
  let let104 := (Eq let58 let103)
  let let105 := (Eq let103 let58)
  let let106 := (Not let28)
  let let107 := (Eq let27 let106)
  let let108 := (Eq let106 let27)
  let let109 := (Eq let13 let13)
  let let110 := (binrel% HSub.hSub x9x5fplus x9x5fminus)
  let let111 := (binrel% HSub.hSub x7x5fplus x7x5fminus)
  let let112 := (binrel% GT.gt let63 let1)
  let let113 := (binrel% HAdd.hAdd let56 let55)
  let let114 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let22 let113))))
  let let115 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let40 let40))))))
  let let116 := (Eq let13 let70)
  let let117 := (Eq let58 let58)
  let let118 := (binrel% GT.gt let32 let1)
  let let119 := (Eq let27 let27)
  let let120 := (binrel% GE.ge let61 let1)
  let let121 := (Not let120)
  let let122 := (binrel% LT.lt let61 let1)
  let let123 := (Not True)
  let let124 := (Eq let19 let19)
  let let125 := (binrel% GE.ge let40 let40)
  let let126 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 let25))))
  let let127 := (binrel% LE.le let111 let6)
  let let128 := (binrel% GE.ge let110 let1)
  let let129 := (binrel% HMul.hMul let6 x4x5fminus)
  let let130 := (binrel% HMul.hMul let6 x5x5fminus)
  let let131 := (binrel% HMul.hMul let6 x3x5fminus)
  let let132 := (binrel% HMul.hMul let6 x5x5fplus)
  let let133 := (binrel% HMul.hMul let30 x1x5fminus)
  let let134 := (binrel% HMul.hMul let54 x1x5fplus)
  let let135 := (binrel% LE.le let82 let6)
  let let136 := (binrel% LE.le let102 let1)
  let let137 := (binrel% LE.le let126 let6)
  let let138 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let6 x0x5fminus))
  let let139 := (binrel% HMul.hMul let6 x3x5fplus)
  let let140 := (binrel% LE.le let114 let6)
  let let141 := (binrel% HAdd.hAdd let139 x3x5fminus)
  let let142 := (binrel% HMul.hMul let6 x1x5fplus)
  let let143 := (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd x1x5fminus let101))
  let let144 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let22 let8))
  let let145 := (binrel% HMul.hMul let54 x4x5fminus)
  let let146 := (binrel% HMul.hMul let30 x4x5fplus)
  let let147 := (binrel% HMul.hMul let6 x4x5fplus)
  let let148 := (binrel% GE.ge let95 let1)
  let let149 := (Not let87)
  let let150 := (Not let148)
  let let151 := (Or let27 (Or let19 (Or let149 (Or let58 (Or let150 (Or let13 let121))))))
  let let152 := (Or let106 (Or let89 (Or let149 (Or let103 (Or let150 (Or let70 let121))))))
  let let153 := (Or let121 False)
  let let154 := (binrel% LT.lt let39 let78)
  let let155 := (And let118 let29)
  let let156 := (binrel% LT.lt let77 let85)
  let let157 := (And let16 let21)
  let let158 := (binrel% LE.le let84 let69)
  let let159 := (And let86 let87)
  let let160 := (binrel% LE.le let68 let92)
  let let161 := (And let118 let76)
  let let162 := (binrel% LE.le let96 let67)
  let let163 := (And let73 let148)
  let let164 := (binrel% LT.lt let65 let64)
  let let165 := (And let112 let15)
  let let166 := (binrel% LE.le let62 let93)
  let let167 := (And let4 let120)
fun lean_r0 : (Eq let4 True) => -- EVALUATE
fun lean_r1 : (Eq let15 let14) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let16 True) => -- EVALUATE
fun lean_r3 : (Eq let21 let20) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let29 let28) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let39 let38) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let51 let40) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let60 let59) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let62 let50) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let64 let63) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let65 let48) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let67 let40) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let68 let44) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let69 let33) => -- THEORY_REWRITE_ARITH
fun lean_r14 : let71 => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let72 let20) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let73 True) => -- EVALUATE
fun lean_r17 : (Eq let74 let28) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let75 let14) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let76 let59) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let77 let41) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let78 let40) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let82 let81) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let84 let42) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let85 let40) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let86 True) => -- EVALUATE
fun lean_r26 : (Eq let88 let87) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let91 let90) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let100 let99) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let93 let40) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let102 let12) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let105 let104) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let108 let107) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq let109 True) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let110 let95) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let111 let18) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let112 True) => -- EVALUATE
fun lean_r37 : (Eq let114 let57) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let115 let40) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let71 let116) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let117 True) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let118 True) => -- EVALUATE
fun lean_r42 : (Eq let119 True) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let96 let46) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let92 let33) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let122 let121) => -- THEORY_REWRITE_ARITH
fun lean_r46 : let105 => -- THEORY_REWRITE_BOOL
fun lean_r47 : let108 => -- THEORY_REWRITE_BOOL
fun lean_r48 : (Eq let123 False) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let124 True) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq let125 True) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let126 let26) => -- THEORY_REWRITE_ARITH
fun lean_r52 : let91 => -- THEORY_REWRITE_BOOL
fun lean_a53 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a54 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a55 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a56 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a57 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a58 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a59 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a60 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a61 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a62 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a63 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a64 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a65 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a66 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a67 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a68 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a69 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a70 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a71 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a72 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a73 : let127 =>
fun lean_a74 : let128 =>
fun lean_a75 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let22 let101)))))))))) let1) =>
fun lean_a76 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let131 let8)))))))) let6) =>
fun lean_a77 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x9x5fminus) (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x5x5fplus let130))))))))) let5) =>
fun lean_a78 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let134 let133))))))) let1) =>
fun lean_a79 : let135 =>
fun lean_a80 : let136 =>
fun lean_a81 : let137 =>
fun lean_a82 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd x3x5fminus let138)))))) let1) =>
fun lean_a83 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 let113)))) let5) =>
fun lean_a84 : let140 =>
fun lean_a85 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let133 let138)))) let5) =>
fun lean_a86 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 let141)))) let6) =>
fun lean_a87 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 let143)) let1) =>
fun lean_a88 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 let144)) let1) =>
fun lean_a89 : (binrel% LE.le (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let145 let138)) let1) =>
fun lean_a90 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 let8)) let5) =>
fun lean_a91 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x5x5fminus) (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd x4x5fminus let8)))))))))) let6) =>
fun lean_a92 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let145 let144)))))))) let1) =>
fun lean_a93 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd x1x5fminus let138)))))))) let5) =>
fun lean_a94 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x2x5fminus let101)))))))) let6) =>
fun lean_a95 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let7 let138)))))))) let6) =>
fun lean_a96 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x8x5fminus) (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 let23)))))))) let5) =>
fun lean_a97 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x4x5fminus) let143)))))) let5) =>
fun lean_a98 : (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let129 let8)))) let6) =>
fun lean_a99 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd x4x5fminus let113)))) let5) =>
fun lean_a100 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd x5x5fminus let101)))) let6) =>
fun lean_a101 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let147 x4x5fminus))))) let6) =>
fun lean_a102 : (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let10 x2x5fminus))) let5) =>
fun lean_a103 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let30 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x5x5fminus) (binrel% HAdd.hAdd let142 x1x5fminus))) let6) =>
fun lean_a104 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let49 x7x5fminus))) let6) =>
fun lean_a105 : let120 =>
fun lean_a106 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let52 let141)) let5) => by
have lean_s0 : (Or let106 (Or let89 (Or let149 (Or let103 (Or let150 (Or let70 let153)))))) :=
  (scope (fun lean_a107 : let28 =>
    (scope (fun lean_a108 : let20 =>
      (scope (fun lean_a109 : let87 =>
        (scope (fun lean_a110 : let59 =>
          (scope (fun lean_a111 : let148 =>
            (scope (fun lean_a112 : let14 =>
              (scope (fun lean_a113 : let120 =>
                have lean_s0 : let153 :=
                  (scope (fun lean_a113 : let120 =>
                    have lean_s0 : let4 := by timed trueElim lean_r0
                    have lean_s1 : let167 := by timed And.intro lean_s0 lean_a113
                    have lean_s2 : (Implies let167 let166) := by arithMulNeg [let61, let1, let3], 3
                    have lean_s3 : let166 := by timed modusPonens lean_s1 lean_s2
                    have lean_s4 : let112 := by timed trueElim lean_r36
                    let lean_s5 := by timed flipCongrArg lean_r30 [LE.le]
                    have lean_s6 : (Eq let1 let1) := by timed rfl
                    have lean_s7 : (Eq let136 let75) := by timed congr lean_s5 lean_s6
                    have lean_s8 : (Eq let136 let14) := by timed Eq.trans lean_s7 lean_r18
                    have lean_s9 : let14 := by timed eqResolve lean_a80 lean_s8
                    have lean_s10 : (Eq let14 let15) := by timed Eq.symm lean_r1
                    have lean_s11 : let15 := by timed eqResolve lean_s9 lean_s10
                    have lean_s12 : let165 := by timed And.intro lean_s4 lean_s11
                    have lean_s13 : (Implies let165 let164) := by arithMulPos [let12, let5, let63], 0
                    have lean_s14 : let164 := by timed modusPonens lean_s12 lean_s13
                    have lean_s15 : let73 := by timed trueElim lean_r16
                    let lean_s16 := by timed flipCongrArg lean_r34 [GE.ge]
                    have lean_s17 : (Eq let128 let148) := by timed congr lean_s16 lean_s6
                    have lean_s18 : let148 := by timed eqResolve lean_a74 lean_s17
                    have lean_s19 : let163 := by timed And.intro lean_s15 lean_s18
                    have lean_s20 : (Implies let163 let162) := by arithMulNeg [let95, let1, let66], 3
                    have lean_s21 : let162 := by timed modusPonens lean_s19 lean_s20
                    have lean_s22 : let118 := by timed trueElim lean_r41
                    let lean_s23 := by timed flipCongrArg lean_r37 [LE.le]
                    have lean_s24 : (Eq let6 let6) := by timed rfl
                    have lean_s25 : (Eq let140 let76) := by timed congr lean_s23 lean_s24
                    have lean_s26 : (Eq let140 let59) := by timed Eq.trans lean_s25 lean_r19
                    have lean_s27 : let59 := by timed eqResolve lean_a84 lean_s26
                    have lean_s28 : (Eq let59 let60) := by timed Eq.symm lean_r7
                    have lean_s29 : let60 := by timed eqResolve lean_s27 lean_s28
                    have lean_s30 : let76 := by intTightUb lean_s29
                    have lean_s31 : let161 := by timed And.intro lean_s22 lean_s30
                    have lean_s32 : (Implies let161 let160) := by arithMulPos [let57, let6, let32], 1
                    have lean_s33 : let160 := by timed modusPonens lean_s31 lean_s32
                    have lean_s34 : let86 := by timed trueElim lean_r25
                    let lean_s35 := by timed flipCongrArg lean_r22 [LE.le]
                    have lean_s36 : (Eq let135 let88) := by timed congr lean_s35 lean_s24
                    have lean_s37 : (Eq let135 let87) := by timed Eq.trans lean_s36 lean_r26
                    have lean_s38 : let87 := by timed eqResolve lean_a79 lean_s37
                    have lean_s39 : let159 := by timed And.intro lean_s34 lean_s38
                    have lean_s40 : (Implies let159 let158) := by arithMulNeg [let83, let5, let33], 3
                    have lean_s41 : let158 := by timed modusPonens lean_s39 lean_s40
                    have lean_s42 : let16 := by timed trueElim lean_r2
                    let lean_s43 := by timed flipCongrArg lean_r35 [LE.le]
                    have lean_s44 : (Eq let127 let72) := by timed congr lean_s43 lean_s24
                    have lean_s45 : (Eq let127 let20) := by timed Eq.trans lean_s44 lean_r15
                    have lean_s46 : let20 := by timed eqResolve lean_a73 lean_s45
                    have lean_s47 : (Eq let20 let21) := by timed Eq.symm lean_r3
                    have lean_s48 : let21 := by timed eqResolve lean_s46 lean_s47
                    have lean_s49 : let157 := by timed And.intro lean_s42 lean_s48
                    have lean_s50 : (Implies let157 let156) := by arithMulPos [let18, let1, let2], 0
                    have lean_s51 : let156 := by timed modusPonens lean_s49 lean_s50
                    let lean_s52 := by timed flipCongrArg lean_r51 [LE.le]
                    have lean_s53 : (Eq let137 let74) := by timed congr lean_s52 lean_s24
                    have lean_s54 : (Eq let137 let28) := by timed Eq.trans lean_s53 lean_r17
                    have lean_s55 : let28 := by timed eqResolve lean_a81 lean_s54
                    have lean_s56 : (Eq let28 let29) := by timed Eq.symm lean_r4
                    have lean_s57 : let29 := by timed eqResolve lean_s55 lean_s56
                    have lean_s58 : let155 := by timed And.intro lean_s22 lean_s57
                    have lean_s59 : (Implies let155 let154) := by arithMulPos [let26, let1, let32], 0
                    have lean_s60 : let154 := by timed modusPonens lean_s58 lean_s59
                    have lean_s61 : let100 := by sumBounds [lean_s3, lean_s14, lean_s21, lean_s33, lean_s41, lean_s51, lean_s60]
                    let lean_s62 := by timed congrHAdd lean_r20 lean_r5
                    let lean_s63 := by timed congrHAdd lean_r23 lean_s62
                    let lean_s64 := by timed congrHAdd lean_r12 lean_s63
                    let lean_s65 := by timed congrHAdd lean_r43 lean_s64
                    let lean_s66 := by timed congrHAdd lean_r10 lean_s65
                    have lean_s67 : (Eq let97 let51) := by timed congrHAdd lean_r8 lean_s66
                    have lean_s68 : (Eq let97 let40) := by timed Eq.trans lean_s67 lean_r6
                    let lean_s69 := by timed flipCongrArg lean_s68 [GE.ge]
                    let lean_s70 := by timed congrHAdd lean_r24 lean_r21
                    let lean_s71 := by timed congrHAdd lean_r13 lean_s70
                    let lean_s72 := by timed congrHAdd lean_r44 lean_s71
                    let lean_s73 := by timed congrHAdd lean_r11 lean_s72
                    let lean_s74 := by timed congrHAdd lean_r9 lean_s73
                    have lean_s75 : (Eq let94 let115) := by timed congrHAdd lean_r29 lean_s74
                    have lean_s76 : (Eq let94 let40) := by timed Eq.trans lean_s75 lean_r38
                    have lean_s77 : (Eq let98 let125) := by timed congr lean_s69 lean_s76
                    have lean_s78 : (Eq let98 True) := by timed Eq.trans lean_s77 lean_r50
                    have lean_s79 : (Eq let99 let123) := by timed flipCongrArg lean_s78 [Not]
                    have lean_s80 : (Eq let99 False) := by timed Eq.trans lean_s79 lean_r48
                    have lean_s81 : (Eq let100 False) := by timed Eq.trans lean_r28 lean_s80
                    show False from by timed eqResolve lean_s61 lean_s81
                  ))
                have lean_s1 : let121 := by liftOrNToNeg lean_s0
                have lean_s2 : (Eq let121 let122) := by timed Eq.symm lean_r45
                have lean_s3 : let122 := by timed eqResolve lean_s1 lean_s2
                have lean_s4 : let121 := by timed eqResolve lean_s3 lean_r45
                show False from by timed contradiction lean_a113 lean_s4
  ))))))))))))))
have lean_s1 : (Not (And let28 (And let20 (And let87 (And let59 (And let148 (And let14 let120))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let152 := by timed flipNotAnd lean_s1 [let28, let20, let87, let59, let148, let14, let120]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let119 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let107 let119) := by timed congr lean_s5 lean_r47
have lean_s7 : (Eq let107 True) := by timed Eq.trans lean_s6 lean_r42
have lean_s8 : (Eq let108 True) := by timed Eq.trans lean_r32 lean_s7
have lean_s9 : let108 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let124 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let90 let124) := by timed congr lean_s12 lean_r52
have lean_s14 : (Eq let90 True) := by timed Eq.trans lean_s13 lean_r49
have lean_s15 : (Eq let91 True) := by timed Eq.trans lean_r27 lean_s14
have lean_s16 : let91 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : (Eq let149 let149) := by timed rfl
let lean_s19 := by timed congr lean_s3 lean_s18
have lean_s20 : let117 := by timed rfl
let lean_s21 := by timed flipCongrArg lean_s20 [Eq]
have lean_s22 : (Eq let104 let117) := by timed congr lean_s21 lean_r46
have lean_s23 : (Eq let104 True) := by timed Eq.trans lean_s22 lean_r40
have lean_s24 : (Eq let105 True) := by timed Eq.trans lean_r31 lean_s23
have lean_s25 : let105 := by timed trueElim lean_s24
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : (Eq let150 let150) := by timed rfl
let lean_s28 := by timed congr lean_s3 lean_s27
have lean_s29 : let109 := by timed rfl
let lean_s30 := by timed flipCongrArg lean_s29 [Eq]
have lean_s31 : (Eq let116 let109) := by timed congr lean_s30 lean_r14
have lean_s32 : (Eq let116 True) := by timed Eq.trans lean_s31 lean_r33
have lean_s33 : (Eq let71 True) := by timed Eq.trans lean_r39 lean_s32
have lean_s34 : let71 := by timed trueElim lean_s33
let lean_s35 := by timed congr lean_s3 lean_s34
have lean_s36 : (Eq let121 let121) := by timed rfl
let lean_s37 := by timed congr lean_s35 lean_s36
let lean_s38 := by timed congr lean_s28 lean_s37
let lean_s39 := by timed congr lean_s26 lean_s38
let lean_s40 := by timed congr lean_s19 lean_s39
let lean_s41 := by timed congr lean_s17 lean_s40
have lean_s42 : (Eq let152 let151) := by timed congr lean_s10 lean_s41
have lean_s43 : let151 := by timed eqResolve lean_s2 lean_s42
have lean_s44 : (Or let19 (Or let13 (Or let27 (Or let58 (Or let150 (Or let149 let121)))))) := by permutateOr lean_s43, [1, 5, 0, 3, 4, 2, 6], (- 1)
let lean_s45 := by R2 lean_s44, lean_a105, let120, [(- 1), 0]
let lean_s46 := by timed flipCongrArg lean_r37 [LE.le]
have lean_s47 : (Eq let6 let6) := by timed rfl
have lean_s48 : (Eq let140 let76) := by timed congr lean_s46 lean_s47
have lean_s49 : (Eq let140 let59) := by timed Eq.trans lean_s48 lean_r19
have lean_s50 : let59 := by timed eqResolve lean_a84 lean_s49
let lean_s51 := by R1 lean_s45, lean_s50, let58, [(- 1), 0]
let lean_s52 := by timed flipCongrArg lean_r51 [LE.le]
have lean_s53 : (Eq let137 let74) := by timed congr lean_s52 lean_s47
have lean_s54 : (Eq let137 let28) := by timed Eq.trans lean_s53 lean_r17
have lean_s55 : let28 := by timed eqResolve lean_a81 lean_s54
let lean_s56 := by R1 lean_s51, lean_s55, let27, [(- 1), 0]
let lean_s57 := by timed flipCongrArg lean_r30 [LE.le]
have lean_s58 : (Eq let1 let1) := by timed rfl
have lean_s59 : (Eq let136 let75) := by timed congr lean_s57 lean_s58
have lean_s60 : (Eq let136 let14) := by timed Eq.trans lean_s59 lean_r18
have lean_s61 : let14 := by timed eqResolve lean_a80 lean_s60
let lean_s62 := by R1 lean_s56, lean_s61, let13, [(- 1), 0]
let lean_s63 := by timed flipCongrArg lean_r22 [LE.le]
have lean_s64 : (Eq let135 let88) := by timed congr lean_s63 lean_s47
have lean_s65 : (Eq let135 let87) := by timed Eq.trans lean_s64 lean_r26
have lean_s66 : let87 := by timed eqResolve lean_a79 lean_s65
let lean_s67 := by R2 lean_s62, lean_s66, let87, [(- 1), 0]
let lean_s68 := by timed flipCongrArg lean_r34 [GE.ge]
have lean_s69 : (Eq let128 let148) := by timed congr lean_s68 lean_s58
have lean_s70 : let148 := by timed eqResolve lean_a74 lean_s69
let lean_s71 := by R2 lean_s67, lean_s70, let148, [(- 1), 0]
let lean_s72 := by timed flipCongrArg lean_r35 [LE.le]
have lean_s73 : (Eq let127 let72) := by timed congr lean_s72 lean_s47
have lean_s74 : (Eq let127 let20) := by timed Eq.trans lean_s73 lean_r15
have lean_s75 : let20 := by timed eqResolve lean_a73 lean_s74
exact (show False from by R1 lean_s71, lean_s75, let19, [0, 0])


