open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x6x5fplus : Int}
variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x1x5fplus : Int}
variable {x1x5fminus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x0x5fminus : Int}
variable {x4x5fminus : Int}
variable {x5x5fplus : Int}
variable {x9x5fplus : Int}
variable {x9x5fminus : Int}
variable {x8x5fplus : Int}
variable {x7x5fminus : Int}
variable {x8x5fminus : Int}
variable {x9x5fplus : Int}
variable {x5x5fplus : Int}
variable {x8x5fminus : Int}
variable {x5x5fminus : Int}
variable {x7x5fminus : Int}
variable {x2x5fplus : Int}
variable {x6x5fminus : Int}
variable {x7x5fplus : Int}
variable {x8x5fplus : Int}
variable {x2x5fminus : Int}
variable {x0x5fplus : Int}
variable {x4x5fplus : Int}
variable {x9x5fminus : Int}
variable {x1x5fminus : Int}
variable {x1x5fplus : Int}
variable {x3x5fminus : Int}
variable {x5x5fminus : Int}
variable {x3x5fplus : Int}
variable {x6x5fminus : Int}
variable {x6x5fplus : Int}
variable {x2x5fminus : Int}
variable {x7x5fplus : Int}
variable {x2x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 13)
  let let3 := (binrel% HDiv.hDiv (Int.ofNat 46) let2)
  let let4 := (binrel% GT.gt let3 let1)
  let let5 := (Int.ofNat 1)
  let let6 := (Neg.neg let5)
  let let7 := (binrel% HMul.hMul let6 x4x5fplus)
  let let8 := (binrel% HAdd.hAdd let7 x4x5fminus)
  let let9 := (binrel% HMul.hMul let6 x5x5fminus)
  let let10 := (binrel% HMul.hMul let6 x7x5fminus)
  let let11 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let8))))
  let let12 := (binrel% GE.ge let11 let1)
  let let13 := (Not let12)
  let let14 := (binrel% LT.lt let11 let1)
  let let15 := (binrel% HDiv.hDiv (Int.ofNat 19) let2)
  let let16 := (Neg.neg let15)
  let let17 := (binrel% LT.lt let16 let1)
  let let18 := (binrel% HDiv.hDiv (Int.ofNat 44) let2)
  let let19 := (binrel% GT.gt let18 let1)
  let let20 := (binrel% HMul.hMul let6 x2x5fplus)
  let let21 := (binrel% HAdd.hAdd let20 x2x5fminus)
  let let22 := (binrel% HMul.hMul let6 x1x5fminus)
  let let23 := (binrel% HMul.hMul let6 x4x5fminus)
  let let24 := (Int.ofNat 2)
  let let25 := (Neg.neg let24)
  let let26 := (binrel% HMul.hMul let25 x5x5fminus)
  let let27 := (binrel% HMul.hMul let24 x5x5fplus)
  let let28 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let22 let21))))))
  let let29 := (binrel% GE.ge let28 let5)
  let let30 := (Not let29)
  let let31 := (binrel% LT.lt let28 let5)
  let let32 := (binrel% HMul.hMul let25 x8x5fminus)
  let let33 := (binrel% HMul.hMul let24 x8x5fplus)
  let let34 := (binrel% HMul.hMul let25 x2x5fminus)
  let let35 := (binrel% HMul.hMul let24 x2x5fplus)
  let let36 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x9x5fplus) x9x5fminus)))))
  let let37 := (binrel% GE.ge let36 let5)
  let let38 := (Not let37)
  let let39 := (binrel% LT.lt let36 let5)
  let let40 := (binrel% LE.le let28 let1)
  let let41 := (binrel% HDiv.hDiv (Int.ofNat 67) let2)
  let let42 := (Neg.neg let41)
  let let43 := (binrel% LT.lt let42 let1)
  let let44 := (Not let30)
  let let45 := (Eq let44 let29)
  let let46 := (binrel% HMul.hMul let6 x9x5fminus)
  let let47 := (binrel% HAdd.hAdd x9x5fplus let46)
  let let48 := (binrel% HMul.hMul let25 x4x5fminus)
  let let49 := (binrel% HMul.hMul let24 x4x5fplus)
  let let50 := (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let32 let47))))
  let let51 := (binrel% GE.ge let50 let1)
  let let52 := (Not let51)
  let let53 := (Not let52)
  let let54 := (Eq let51 let53)
  let let55 := (Eq let53 let51)
  let let56 := (binrel% HDiv.hDiv (Int.ofNat 134) let2)
  let let57 := (Neg.neg let56)
  let let58 := (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x8x5fplus) (binrel% HMul.hMul let56 x8x5fminus))))))
  let let59 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let33 let32)))))
  let let60 := (binrel% HMul.hMul let42 let59)
  let let61 := (Eq let29 let44)
  let let62 := (binrel% HMul.hMul let6 x8x5fminus)
  let let63 := (binrel% HAdd.hAdd x8x5fplus let62)
  let let64 := (binrel% HMul.hMul let6 x3x5fplus)
  let let65 := (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus let63))))
  let let66 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let64 x3x5fminus)))))
  let let67 := (Eq let51 let51)
  let let68 := (binrel% HAdd.hAdd x1x5fplus let22)
  let let69 := (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x2x5fminus let68))
  let let70 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 let69))))
  let let71 := (Neg.neg let3)
  let let72 := (binrel% HMul.hMul let3 let6)
  let let73 := (Rat.ofInt let50)
  let let74 := (Rat.ofInt 1)
  let let75 := (binrel% HMul.hMul let74 let50)
  let let76 := (Not let13)
  let let77 := (Eq let76 let12)
  let let78 := (binrel% HMul.hMul let24 x8x5fminus)
  let let79 := (binrel% HMul.hMul let25 x8x5fplus)
  let let80 := (binrel% HMul.hMul let24 x2x5fminus)
  let let81 := (binrel% HMul.hMul let25 x2x5fplus)
  let let82 := (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let78 let47))))
  let let83 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let81 let80)))))
  let let84 := (Eq let12 let12)
  let let85 := (binrel% HMul.hMul let6 x8x5fplus)
  let let86 := (binrel% HAdd.hAdd let85 x8x5fminus)
  let let87 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 let86))))))
  let let88 := (binrel% GE.ge let87 let6)
  let let89 := (binrel% HMul.hMul let6 x1x5fplus)
  let let90 := (binrel% HMul.hMul let6 x7x5fplus)
  let let91 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let34 let63))))))
  let let92 := (binrel% LE.le let91 let5)
  let let93 := (Not let38)
  let let94 := (Eq let37 let93)
  let let95 := (Eq let93 let37)
  let let96 := (Eq let29 let29)
  let let97 := (binrel% HMul.hMul let6 x6x5fminus)
  let let98 := (binrel% HAdd.hAdd x6x5fplus let97)
  let let99 := (binrel% HMul.hMul let6 x2x5fminus)
  let let100 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 let98))))))
  let let101 := (binrel% HAdd.hAdd x2x5fplus let99)
  let let102 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let97 let101))))))
  let let103 := (binrel% HMul.hMul let16 x2x5fminus)
  let let104 := (binrel% HMul.hMul let15 x2x5fplus)
  let let105 := (binrel% HMul.hMul let15 x7x5fminus)
  let let106 := (binrel% HMul.hMul let16 x7x5fplus)
  let let107 := (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x6x5fplus) (binrel% HMul.hMul let16 x6x5fminus))))))))
  let let108 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x6x5fplus) x6x5fminus)))))))
  let let109 := (binrel% HMul.hMul let16 let108)
  let let110 := (Not True)
  let let111 := (binrel% HMul.hMul let6 x3x5fminus)
  let let112 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let111 let86))))
  let let113 := (binrel% GE.ge let112 let1)
  let let114 := (binrel% LE.le let65 let1)
  let let115 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 6) let2))
  let let116 := (Rat.ofInt 0)
  let let117 := (binrel% GE.ge let116 let115)
  let let118 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let22 let101))))))
  let let119 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let99 let68))))))
  let let120 := (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x3x5fminus) (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x6x5fplus) (binrel% HMul.hMul let15 x6x5fminus))))))))
  let let121 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x2x5fminus let98))))))
  let let122 := (binrel% HMul.hMul let16 let121)
  let let123 := (binrel% HMul.hMul let74 let5)
  let let124 := (binrel% HDiv.hDiv (Int.ofNat 36) let2)
  let let125 := (Neg.neg let124)
  let let126 := (binrel% HAdd.hAdd (binrel% HMul.hMul let125 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let125 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let125 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let125 x2x5fplus) (binrel% HMul.hMul let124 x2x5fminus))))))))
  let let127 := (binrel% HMul.hMul let125 let118)
  let let128 := (Eq let12 let76)
  let let129 := (binrel% LE.le let11 let6)
  let let130 := (binrel% LE.le let50 let6)
  let let131 := (Eq let37 let37)
  let let132 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let49 let48)))))
  let let133 := (binrel% HDiv.hDiv (Int.ofNat 8) let2)
  let let134 := (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let116 let133)))))))))
  let let135 := (binrel% GT.gt let74 let1)
  let let136 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus let21))))))
  let let137 := (Neg.neg let133)
  let let138 := (binrel% HMul.hMul let137 let6)
  let let139 := (binrel% HDiv.hDiv (Int.ofNat 55) let2)
  let let140 := (Neg.neg let139)
  let let141 := (binrel% HMul.hMul let140 let1)
  let let142 := (binrel% HMul.hMul let74 let1)
  let let143 := (binrel% HMul.hMul let125 let1)
  let let144 := (binrel% HMul.hMul let42 let1)
  let let145 := (binrel% HMul.hMul let18 let1)
  let let146 := (binrel% GE.ge let82 let1)
  let let147 := (binrel% HMul.hMul let16 let6)
  let let148 := (binrel% HDiv.hDiv (Int.ofNat 16) let2)
  let let149 := (binrel% HAdd.hAdd (binrel% HMul.hMul let137 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let137 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let148 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let148) x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x8x5fplus) (binrel% HMul.hMul let137 x8x5fminus))))))))
  let let150 := (binrel% HMul.hMul let137 let87)
  let let151 := (binrel% HMul.hMul let16 let1)
  let let152 := (binrel% GE.ge let108 let1)
  let let153 := (binrel% LE.le let100 let1)
  let let154 := (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let139 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let139 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let139 x8x5fplus) (binrel% HMul.hMul let140 x8x5fminus))))))
  let let155 := (binrel% HMul.hMul let140 let112)
  let let156 := (Neg.neg let18)
  let let157 := (binrel% HDiv.hDiv (Int.ofNat 88) let2)
  let let158 := (binrel% HAdd.hAdd (binrel% HMul.hMul let157 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let157) x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let156 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let156 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let156 x2x5fplus) (binrel% HMul.hMul let18 x2x5fminus))))))))
  let let159 := (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x4x5fplus) (binrel% HMul.hMul let3 x4x5fminus))))))
  let let160 := (Rat.ofInt let36)
  let let161 := (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let154 let149)))))))))
  let let162 := (binrel% HMul.hMul let18 let28)
  let let163 := (binrel% HAdd.hAdd let89 x1x5fminus)
  let let164 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let34 let163))))))
  let let165 := (binrel% HMul.hMul let3 let11)
  let let166 := (binrel% HMul.hMul let74 let36)
  let let167 := (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let141 let138)))))))))
  let let168 := (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let162 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let155 let150)))))))))
  let let169 := (binrel% GE.ge let168 let167)
  let let170 := (Not let169)
  let let171 := (binrel% LT.lt let168 let167)
  let let172 := (binrel% LT.lt let137 let1)
  let let173 := (binrel% LT.lt let140 let1)
  let let174 := (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 let8))))
  let let175 := (binrel% LT.lt let50 let1)
  let let176 := (binrel% LT.lt let125 let1)
  let let177 := (binrel% HMul.hMul let6 x5x5fplus)
  let let178 := (binrel% LE.le let70 let1)
  let let179 := (binrel% LE.le let102 let1)
  let let180 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let6 x0x5fminus))
  let let181 := (binrel% LE.le let164 let5)
  let let182 := (binrel% LE.le let66 let1)
  let let183 := (binrel% LE.le let132 let6)
  let let184 := (binrel% GE.ge let136 let6)
  let let185 := (binrel% GE.ge let119 let1)
  let let186 := (binrel% GE.ge let174 let1)
  let let187 := (binrel% GE.ge let83 let1)
  let let188 := (binrel% GE.ge let121 let6)
  let let189 := (binrel% GE.ge let118 let1)
  let let190 := (binrel% GE.ge let59 let1)
  let let191 := (Not let190)
  let let192 := (Not let189)
  let let193 := (Not let188)
  let let194 := (Not let113)
  let let195 := (Not let88)
  let let196 := (Not let152)
  let let197 := (Or let195 (Or let194 (Or let51 (Or let192 (Or let191 (Or let29 (Or let193 (Or let196 (Or let12 let37)))))))))
  let let198 := (Or let195 (Or let194 (Or let53 (Or let192 (Or let191 (Or let44 (Or let193 (Or let196 (Or let76 let93)))))))))
  let let199 := (Not let39)
  let let200 := (binrel% LE.le let150 let138)
  let let201 := (And let172 let88)
  let let202 := (binrel% LE.le let155 let141)
  let let203 := (And let173 let113)
  let let204 := (binrel% LT.lt let75 let142)
  let let205 := (And let135 let175)
  let let206 := (binrel% LE.le let127 let143)
  let let207 := (And let176 let189)
  let let208 := (binrel% LE.le let60 let144)
  let let209 := (And let43 let190)
  let let210 := (binrel% LE.le let162 let145)
  let let211 := (And let19 let40)
  let let212 := (binrel% LE.le let122 let147)
  let let213 := (And let17 let188)
  let let214 := (binrel% LE.le let109 let151)
  let let215 := (And let17 let152)
  let let216 := (binrel% LE.le let165 let72)
  let let217 := (And let4 let129)
  let let218 := (binrel% LT.lt let166 let123)
  let let219 := (And let135 let39)
(Eq let4 True) → (Eq let14 let13) → (Eq let17 True) → (Eq let19 True) → (Eq let31 let30) → (Eq let39 let38) → (Eq let40 let30) → (Eq let43 True) → let45 → (Eq let55 let54) → (Eq let60 let58) → (Eq let45 let61) → (Eq let66 let65) → (Eq let67 True) → (Eq let70 let28) → (Eq let72 let71) → (Eq let75 let73) → let77 → (Eq let83 let82) → (Eq let84 True) → (Eq let92 let88) → (Eq let95 let94) → let95 → (Eq let96 True) → (Eq let102 let100) → (Eq let109 let107) → (Eq let110 False) → (Eq let114 let113) → (Eq let117 True) → (Eq let119 let118) → (Eq let122 let120) → let55 → (Eq let123 let74) → (Eq let127 let126) → (Eq let77 let128) → (Eq let129 let13) → (Eq let130 let52) → (Eq let131 True) → (Eq let132 let50) → (Eq let134 let115) → (Eq let135 True) → (Eq let136 let121) → (Eq let138 let133) → (Eq let141 let116) → (Eq let142 let116) → (Eq let143 let116) → (Eq let144 let116) → (Eq let145 let116) → (Eq let146 let38) → (Eq let147 let15) → (Eq let150 let149) → (Eq let151 let116) → (Eq let153 let152) → (Eq let155 let154) → (Eq let161 let116) → (Eq let162 let158) → (Eq let164 let91) → (Eq let165 let159) → (Eq let166 let160) → (Eq let171 let170) → (Eq let172 True) → (Eq let173 True) → (Eq let174 let59) → (Eq let175 let52) → (Eq let176 True) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x0x5fplus) x0x5fminus))))))))))) let5) → let178 → let179 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus let68)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x7x5fminus let98)))))) let6) → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x2x5fminus let180)))))) let1) → let181 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x4x5fminus) (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let22 let180)))))) let1) → let129 → let182 → let183 → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let97 let163)) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x4x5fminus let69)))))))) let6) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x1x5fplus) (binrel% HMul.hMul let24 x1x5fminus)))))))))) let6) → let184 → let185 → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x7x5fminus) (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 let180)))))) let6) → let186 → let187 → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let21)))) let1) → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 13)
  let let3 := (binrel% HDiv.hDiv (Int.ofNat 46) let2)
  let let4 := (binrel% GT.gt let3 let1)
  let let5 := (Int.ofNat 1)
  let let6 := (Neg.neg let5)
  let let7 := (binrel% HMul.hMul let6 x4x5fplus)
  let let8 := (binrel% HAdd.hAdd let7 x4x5fminus)
  let let9 := (binrel% HMul.hMul let6 x5x5fminus)
  let let10 := (binrel% HMul.hMul let6 x7x5fminus)
  let let11 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let8))))
  let let12 := (binrel% GE.ge let11 let1)
  let let13 := (Not let12)
  let let14 := (binrel% LT.lt let11 let1)
  let let15 := (binrel% HDiv.hDiv (Int.ofNat 19) let2)
  let let16 := (Neg.neg let15)
  let let17 := (binrel% LT.lt let16 let1)
  let let18 := (binrel% HDiv.hDiv (Int.ofNat 44) let2)
  let let19 := (binrel% GT.gt let18 let1)
  let let20 := (binrel% HMul.hMul let6 x2x5fplus)
  let let21 := (binrel% HAdd.hAdd let20 x2x5fminus)
  let let22 := (binrel% HMul.hMul let6 x1x5fminus)
  let let23 := (binrel% HMul.hMul let6 x4x5fminus)
  let let24 := (Int.ofNat 2)
  let let25 := (Neg.neg let24)
  let let26 := (binrel% HMul.hMul let25 x5x5fminus)
  let let27 := (binrel% HMul.hMul let24 x5x5fplus)
  let let28 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let22 let21))))))
  let let29 := (binrel% GE.ge let28 let5)
  let let30 := (Not let29)
  let let31 := (binrel% LT.lt let28 let5)
  let let32 := (binrel% HMul.hMul let25 x8x5fminus)
  let let33 := (binrel% HMul.hMul let24 x8x5fplus)
  let let34 := (binrel% HMul.hMul let25 x2x5fminus)
  let let35 := (binrel% HMul.hMul let24 x2x5fplus)
  let let36 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x9x5fplus) x9x5fminus)))))
  let let37 := (binrel% GE.ge let36 let5)
  let let38 := (Not let37)
  let let39 := (binrel% LT.lt let36 let5)
  let let40 := (binrel% LE.le let28 let1)
  let let41 := (binrel% HDiv.hDiv (Int.ofNat 67) let2)
  let let42 := (Neg.neg let41)
  let let43 := (binrel% LT.lt let42 let1)
  let let44 := (Not let30)
  let let45 := (Eq let44 let29)
  let let46 := (binrel% HMul.hMul let6 x9x5fminus)
  let let47 := (binrel% HAdd.hAdd x9x5fplus let46)
  let let48 := (binrel% HMul.hMul let25 x4x5fminus)
  let let49 := (binrel% HMul.hMul let24 x4x5fplus)
  let let50 := (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let32 let47))))
  let let51 := (binrel% GE.ge let50 let1)
  let let52 := (Not let51)
  let let53 := (Not let52)
  let let54 := (Eq let51 let53)
  let let55 := (Eq let53 let51)
  let let56 := (binrel% HDiv.hDiv (Int.ofNat 134) let2)
  let let57 := (Neg.neg let56)
  let let58 := (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let42 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 x8x5fplus) (binrel% HMul.hMul let56 x8x5fminus))))))
  let let59 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let33 let32)))))
  let let60 := (binrel% HMul.hMul let42 let59)
  let let61 := (Eq let29 let44)
  let let62 := (binrel% HMul.hMul let6 x8x5fminus)
  let let63 := (binrel% HAdd.hAdd x8x5fplus let62)
  let let64 := (binrel% HMul.hMul let6 x3x5fplus)
  let let65 := (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus let63))))
  let let66 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let64 x3x5fminus)))))
  let let67 := (Eq let51 let51)
  let let68 := (binrel% HAdd.hAdd x1x5fplus let22)
  let let69 := (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x2x5fminus let68))
  let let70 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 let69))))
  let let71 := (Neg.neg let3)
  let let72 := (binrel% HMul.hMul let3 let6)
  let let73 := (Rat.ofInt let50)
  let let74 := (Rat.ofInt 1)
  let let75 := (binrel% HMul.hMul let74 let50)
  let let76 := (Not let13)
  let let77 := (Eq let76 let12)
  let let78 := (binrel% HMul.hMul let24 x8x5fminus)
  let let79 := (binrel% HMul.hMul let25 x8x5fplus)
  let let80 := (binrel% HMul.hMul let24 x2x5fminus)
  let let81 := (binrel% HMul.hMul let25 x2x5fplus)
  let let82 := (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let78 let47))))
  let let83 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let79 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let81 let80)))))
  let let84 := (Eq let12 let12)
  let let85 := (binrel% HMul.hMul let6 x8x5fplus)
  let let86 := (binrel% HAdd.hAdd let85 x8x5fminus)
  let let87 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 let86))))))
  let let88 := (binrel% GE.ge let87 let6)
  let let89 := (binrel% HMul.hMul let6 x1x5fplus)
  let let90 := (binrel% HMul.hMul let6 x7x5fplus)
  let let91 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let34 let63))))))
  let let92 := (binrel% LE.le let91 let5)
  let let93 := (Not let38)
  let let94 := (Eq let37 let93)
  let let95 := (Eq let93 let37)
  let let96 := (Eq let29 let29)
  let let97 := (binrel% HMul.hMul let6 x6x5fminus)
  let let98 := (binrel% HAdd.hAdd x6x5fplus let97)
  let let99 := (binrel% HMul.hMul let6 x2x5fminus)
  let let100 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 let98))))))
  let let101 := (binrel% HAdd.hAdd x2x5fplus let99)
  let let102 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let97 let101))))))
  let let103 := (binrel% HMul.hMul let16 x2x5fminus)
  let let104 := (binrel% HMul.hMul let15 x2x5fplus)
  let let105 := (binrel% HMul.hMul let15 x7x5fminus)
  let let106 := (binrel% HMul.hMul let16 x7x5fplus)
  let let107 := (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x6x5fplus) (binrel% HMul.hMul let16 x6x5fminus))))))))
  let let108 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x6x5fplus) x6x5fminus)))))))
  let let109 := (binrel% HMul.hMul let16 let108)
  let let110 := (Not True)
  let let111 := (binrel% HMul.hMul let6 x3x5fminus)
  let let112 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let111 let86))))
  let let113 := (binrel% GE.ge let112 let1)
  let let114 := (binrel% LE.le let65 let1)
  let let115 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 6) let2))
  let let116 := (Rat.ofInt 0)
  let let117 := (binrel% GE.ge let116 let115)
  let let118 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let22 let101))))))
  let let119 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let99 let68))))))
  let let120 := (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd (binrel% HMul.hMul let15 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x3x5fminus) (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd (binrel% HMul.hMul let16 x6x5fplus) (binrel% HMul.hMul let15 x6x5fminus))))))))
  let let121 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x2x5fminus let98))))))
  let let122 := (binrel% HMul.hMul let16 let121)
  let let123 := (binrel% HMul.hMul let74 let5)
  let let124 := (binrel% HDiv.hDiv (Int.ofNat 36) let2)
  let let125 := (Neg.neg let124)
  let let126 := (binrel% HAdd.hAdd (binrel% HMul.hMul let125 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let125 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let125 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let124 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let125 x2x5fplus) (binrel% HMul.hMul let124 x2x5fminus))))))))
  let let127 := (binrel% HMul.hMul let125 let118)
  let let128 := (Eq let12 let76)
  let let129 := (binrel% LE.le let11 let6)
  let let130 := (binrel% LE.le let50 let6)
  let let131 := (Eq let37 let37)
  let let132 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let49 let48)))))
  let let133 := (binrel% HDiv.hDiv (Int.ofNat 8) let2)
  let let134 := (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let116 let133)))))))))
  let let135 := (binrel% GT.gt let74 let1)
  let let136 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus let21))))))
  let let137 := (Neg.neg let133)
  let let138 := (binrel% HMul.hMul let137 let6)
  let let139 := (binrel% HDiv.hDiv (Int.ofNat 55) let2)
  let let140 := (Neg.neg let139)
  let let141 := (binrel% HMul.hMul let140 let1)
  let let142 := (binrel% HMul.hMul let74 let1)
  let let143 := (binrel% HMul.hMul let125 let1)
  let let144 := (binrel% HMul.hMul let42 let1)
  let let145 := (binrel% HMul.hMul let18 let1)
  let let146 := (binrel% GE.ge let82 let1)
  let let147 := (binrel% HMul.hMul let16 let6)
  let let148 := (binrel% HDiv.hDiv (Int.ofNat 16) let2)
  let let149 := (binrel% HAdd.hAdd (binrel% HMul.hMul let137 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let137 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let148 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let148) x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let133 x8x5fplus) (binrel% HMul.hMul let137 x8x5fminus))))))))
  let let150 := (binrel% HMul.hMul let137 let87)
  let let151 := (binrel% HMul.hMul let16 let1)
  let let152 := (binrel% GE.ge let108 let1)
  let let153 := (binrel% LE.le let100 let1)
  let let154 := (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let139 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let139 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let139 x8x5fplus) (binrel% HMul.hMul let140 x8x5fminus))))))
  let let155 := (binrel% HMul.hMul let140 let112)
  let let156 := (Neg.neg let18)
  let let157 := (binrel% HDiv.hDiv (Int.ofNat 88) let2)
  let let158 := (binrel% HAdd.hAdd (binrel% HMul.hMul let157 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let157) x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let156 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let18 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let156 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let156 x2x5fplus) (binrel% HMul.hMul let18 x2x5fminus))))))))
  let let159 := (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x4x5fplus) (binrel% HMul.hMul let3 x4x5fminus))))))
  let let160 := (Rat.ofInt let36)
  let let161 := (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let154 let149)))))))))
  let let162 := (binrel% HMul.hMul let18 let28)
  let let163 := (binrel% HAdd.hAdd let89 x1x5fminus)
  let let164 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let34 let163))))))
  let let165 := (binrel% HMul.hMul let3 let11)
  let let166 := (binrel% HMul.hMul let74 let36)
  let let167 := (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let141 let138)))))))))
  let let168 := (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let162 (binrel% HAdd.hAdd let60 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let155 let150)))))))))
  let let169 := (binrel% GE.ge let168 let167)
  let let170 := (Not let169)
  let let171 := (binrel% LT.lt let168 let167)
  let let172 := (binrel% LT.lt let137 let1)
  let let173 := (binrel% LT.lt let140 let1)
  let let174 := (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 let8))))
  let let175 := (binrel% LT.lt let50 let1)
  let let176 := (binrel% LT.lt let125 let1)
  let let177 := (binrel% HMul.hMul let6 x5x5fplus)
  let let178 := (binrel% LE.le let70 let1)
  let let179 := (binrel% LE.le let102 let1)
  let let180 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let6 x0x5fminus))
  let let181 := (binrel% LE.le let164 let5)
  let let182 := (binrel% LE.le let66 let1)
  let let183 := (binrel% LE.le let132 let6)
  let let184 := (binrel% GE.ge let136 let6)
  let let185 := (binrel% GE.ge let119 let1)
  let let186 := (binrel% GE.ge let174 let1)
  let let187 := (binrel% GE.ge let83 let1)
  let let188 := (binrel% GE.ge let121 let6)
  let let189 := (binrel% GE.ge let118 let1)
  let let190 := (binrel% GE.ge let59 let1)
  let let191 := (Not let190)
  let let192 := (Not let189)
  let let193 := (Not let188)
  let let194 := (Not let113)
  let let195 := (Not let88)
  let let196 := (Not let152)
  let let197 := (Or let195 (Or let194 (Or let51 (Or let192 (Or let191 (Or let29 (Or let193 (Or let196 (Or let12 let37)))))))))
  let let198 := (Or let195 (Or let194 (Or let53 (Or let192 (Or let191 (Or let44 (Or let193 (Or let196 (Or let76 let93)))))))))
  let let199 := (Not let39)
  let let200 := (binrel% LE.le let150 let138)
  let let201 := (And let172 let88)
  let let202 := (binrel% LE.le let155 let141)
  let let203 := (And let173 let113)
  let let204 := (binrel% LT.lt let75 let142)
  let let205 := (And let135 let175)
  let let206 := (binrel% LE.le let127 let143)
  let let207 := (And let176 let189)
  let let208 := (binrel% LE.le let60 let144)
  let let209 := (And let43 let190)
  let let210 := (binrel% LE.le let162 let145)
  let let211 := (And let19 let40)
  let let212 := (binrel% LE.le let122 let147)
  let let213 := (And let17 let188)
  let let214 := (binrel% LE.le let109 let151)
  let let215 := (And let17 let152)
  let let216 := (binrel% LE.le let165 let72)
  let let217 := (And let4 let129)
  let let218 := (binrel% LT.lt let166 let123)
  let let219 := (And let135 let39)
fun lean_r0 : (Eq let4 True) => -- EVALUATE
fun lean_r1 : (Eq let14 let13) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let17 True) => -- EVALUATE
fun lean_r3 : (Eq let19 True) => -- EVALUATE
fun lean_r4 : (Eq let31 let30) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let39 let38) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let40 let30) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let43 True) => -- EVALUATE
fun lean_r8 : let45 => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let55 let54) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq let60 let58) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let45 let61) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let66 let65) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let67 True) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let70 let28) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let72 let71) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let75 let73) => -- THEORY_REWRITE_ARITH
fun lean_r17 : let77 => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let83 let82) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let84 True) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let92 let88) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let95 let94) => -- THEORY_REWRITE_BOOL
fun lean_r22 : let95 => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let96 True) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let102 let100) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let109 let107) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let110 False) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let114 let113) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let117 True) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let119 let118) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let122 let120) => -- THEORY_REWRITE_ARITH
fun lean_r31 : let55 => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let123 let74) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let127 let126) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let77 let128) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let129 let13) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let130 let52) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let131 True) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq let132 let50) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let134 let115) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let135 True) => -- EVALUATE
fun lean_r41 : (Eq let136 let121) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let138 let133) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let141 let116) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let142 let116) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let143 let116) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let144 let116) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let145 let116) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let146 let38) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let147 let15) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let150 let149) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let151 let116) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let153 let152) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let155 let154) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let161 let116) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let162 let158) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let164 let91) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let165 let159) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let166 let160) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let171 let170) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let172 True) => -- EVALUATE
fun lean_r61 : (Eq let173 True) => -- EVALUATE
fun lean_r62 : (Eq let174 let59) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let175 let52) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let176 True) => -- EVALUATE
fun lean_a65 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a66 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a67 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a68 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a69 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a70 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a71 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a72 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a73 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a74 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a75 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a76 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a77 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a78 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a79 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a80 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a81 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a82 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a83 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a84 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a85 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x0x5fplus) x0x5fminus))))))))))) let5) =>
fun lean_a86 : let178 =>
fun lean_a87 : let179 =>
fun lean_a88 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd x3x5fminus let68)))))) let1) =>
fun lean_a89 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x7x5fminus let98)))))) let6) =>
fun lean_a90 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd x2x5fminus let180)))))) let1) =>
fun lean_a91 : let181 =>
fun lean_a92 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x4x5fminus) (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let22 let180)))))) let1) =>
fun lean_a93 : let129 =>
fun lean_a94 : let182 =>
fun lean_a95 : let183 =>
fun lean_a96 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let97 let163)) let1) =>
fun lean_a97 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x4x5fminus let69)))))))) let6) =>
fun lean_a98 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x1x5fplus) (binrel% HMul.hMul let24 x1x5fminus)))))))))) let6) =>
fun lean_a99 : let184 =>
fun lean_a100 : let185 =>
fun lean_a101 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x7x5fminus) (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let23 let180)))))) let6) =>
fun lean_a102 : let186 =>
fun lean_a103 : let187 =>
fun lean_a104 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let21)))) let1) => by
have lean_s0 : (Or let195 (Or let194 (Or let53 (Or let192 (Or let191 (Or let44 (Or let193 (Or let196 (Or let76 (Or let93 False)))))))))) :=
  (scope (fun lean_a105 : let88 =>
    (scope (fun lean_a106 : let113 =>
      (scope (fun lean_a107 : let52 =>
        (scope (fun lean_a108 : let189 =>
          (scope (fun lean_a109 : let190 =>
            (scope (fun lean_a110 : let30 =>
              (scope (fun lean_a111 : let188 =>
                (scope (fun lean_a112 : let152 =>
                  (scope (fun lean_a113 : let13 =>
                    (scope (fun lean_a114 : let38 =>
                      let lean_s0 := by timed flipCongrArg lean_r18 [GE.ge]
                      have lean_s1 : (Eq let1 let1) := by timed rfl
                      have lean_s2 : (Eq let187 let146) := by timed congr lean_s0 lean_s1
                      have lean_s3 : (Eq let187 let38) := by timed Eq.trans lean_s2 lean_r48
                      have lean_s4 : let38 := by timed eqResolve lean_a103 lean_s3
                      have lean_s5 : (Eq let38 let39) := by timed Eq.symm lean_r5
                      have lean_s6 : let39 := by timed eqResolve lean_s4 lean_s5
                      have lean_s7 : (Or let199 False) :=
                        (scope (fun lean_a115 : let39 =>
                          have lean_s7 : let135 := by timed trueElim lean_r40
                          have lean_s8 : let219 := by timed And.intro lean_s7 lean_a115
                          have lean_s9 : (Implies let219 let218) := by arithMulPos [let36, let5, let74], 0
                          have lean_s10 : let218 := by timed modusPonens lean_s8 lean_s9
                          have lean_s11 : let4 := by timed trueElim lean_r0
                          have lean_s12 : let13 := by timed eqResolve lean_a93 lean_r35
                          have lean_s13 : (Eq let13 let14) := by timed Eq.symm lean_r1
                          have lean_s14 : let14 := by timed eqResolve lean_s12 lean_s13
                          have lean_s15 : let129 := by intTightUb lean_s14
                          have lean_s16 : let217 := by timed And.intro lean_s11 lean_s15
                          have lean_s17 : (Implies let217 let216) := by arithMulPos [let11, let6, let3], 1
                          have lean_s18 : let216 := by timed modusPonens lean_s16 lean_s17
                          have lean_s19 : let17 := by timed trueElim lean_r2
                          let lean_s20 := by timed flipCongrArg lean_r24 [LE.le]
                          have lean_s21 : (Eq let179 let153) := by timed congr lean_s20 lean_s1
                          have lean_s22 : (Eq let179 let152) := by timed Eq.trans lean_s21 lean_r52
                          have lean_s23 : let152 := by timed eqResolve lean_a87 lean_s22
                          have lean_s24 : let215 := by timed And.intro lean_s19 lean_s23
                          have lean_s25 : (Implies let215 let214) := by arithMulNeg [let108, let1, let16], 3
                          have lean_s26 : let214 := by timed modusPonens lean_s24 lean_s25
                          let lean_s27 := by timed flipCongrArg lean_r41 [GE.ge]
                          have lean_s28 : (Eq let6 let6) := by timed rfl
                          have lean_s29 : (Eq let184 let188) := by timed congr lean_s27 lean_s28
                          have lean_s30 : let188 := by timed eqResolve lean_a99 lean_s29
                          have lean_s31 : let213 := by timed And.intro lean_s19 lean_s30
                          have lean_s32 : (Implies let213 let212) := by arithMulNeg [let121, let6, let16], 3
                          have lean_s33 : let212 := by timed modusPonens lean_s31 lean_s32
                          have lean_s34 : let19 := by timed trueElim lean_r3
                          let lean_s35 := by timed flipCongrArg lean_r14 [LE.le]
                          have lean_s36 : (Eq let178 let40) := by timed congr lean_s35 lean_s1
                          have lean_s37 : (Eq let178 let30) := by timed Eq.trans lean_s36 lean_r6
                          have lean_s38 : let30 := by timed eqResolve lean_a86 lean_s37
                          have lean_s39 : (Eq let30 let31) := by timed Eq.symm lean_r4
                          have lean_s40 : let31 := by timed eqResolve lean_s38 lean_s39
                          have lean_s41 : let40 := by intTightUb lean_s40
                          have lean_s42 : let211 := by timed And.intro lean_s34 lean_s41
                          have lean_s43 : (Implies let211 let210) := by arithMulPos [let28, let1, let18], 1
                          have lean_s44 : let210 := by timed modusPonens lean_s42 lean_s43
                          have lean_s45 : let43 := by timed trueElim lean_r7
                          let lean_s46 := by timed flipCongrArg lean_r62 [GE.ge]
                          have lean_s47 : (Eq let186 let190) := by timed congr lean_s46 lean_s1
                          have lean_s48 : let190 := by timed eqResolve lean_a102 lean_s47
                          have lean_s49 : let209 := by timed And.intro lean_s45 lean_s48
                          have lean_s50 : (Implies let209 let208) := by arithMulNeg [let59, let1, let42], 3
                          have lean_s51 : let208 := by timed modusPonens lean_s49 lean_s50
                          have lean_s52 : let176 := by timed trueElim lean_r64
                          let lean_s53 := by timed flipCongrArg lean_r29 [GE.ge]
                          have lean_s54 : (Eq let185 let189) := by timed congr lean_s53 lean_s1
                          have lean_s55 : let189 := by timed eqResolve lean_a100 lean_s54
                          have lean_s56 : let207 := by timed And.intro lean_s52 lean_s55
                          have lean_s57 : (Implies let207 let206) := by arithMulNeg [let118, let1, let125], 3
                          have lean_s58 : let206 := by timed modusPonens lean_s56 lean_s57
                          let lean_s59 := by timed flipCongrArg lean_r38 [LE.le]
                          have lean_s60 : (Eq let183 let130) := by timed congr lean_s59 lean_s28
                          have lean_s61 : (Eq let183 let52) := by timed Eq.trans lean_s60 lean_r36
                          have lean_s62 : let52 := by timed eqResolve lean_a95 lean_s61
                          have lean_s63 : (Eq let52 let175) := by timed Eq.symm lean_r63
                          have lean_s64 : let175 := by timed eqResolve lean_s62 lean_s63
                          have lean_s65 : let205 := by timed And.intro lean_s7 lean_s64
                          have lean_s66 : (Implies let205 let204) := by arithMulPos [let50, let1, let74], 0
                          have lean_s67 : let204 := by timed modusPonens lean_s65 lean_s66
                          have lean_s68 : let173 := by timed trueElim lean_r61
                          let lean_s69 := by timed flipCongrArg lean_r12 [LE.le]
                          have lean_s70 : (Eq let182 let114) := by timed congr lean_s69 lean_s1
                          have lean_s71 : (Eq let182 let113) := by timed Eq.trans lean_s70 lean_r27
                          have lean_s72 : let113 := by timed eqResolve lean_a94 lean_s71
                          have lean_s73 : let203 := by timed And.intro lean_s68 lean_s72
                          have lean_s74 : (Implies let203 let202) := by arithMulNeg [let112, let1, let140], 3
                          have lean_s75 : let202 := by timed modusPonens lean_s73 lean_s74
                          have lean_s76 : let172 := by timed trueElim lean_r60
                          let lean_s77 := by timed flipCongrArg lean_r56 [LE.le]
                          have lean_s78 : (Eq let5 let5) := by timed rfl
                          have lean_s79 : (Eq let181 let92) := by timed congr lean_s77 lean_s78
                          have lean_s80 : (Eq let181 let88) := by timed Eq.trans lean_s79 lean_r20
                          have lean_s81 : let88 := by timed eqResolve lean_a91 lean_s80
                          have lean_s82 : let201 := by timed And.intro lean_s76 lean_s81
                          have lean_s83 : (Implies let201 let200) := by arithMulNeg [let87, let6, let137], 3
                          have lean_s84 : let200 := by timed modusPonens lean_s82 lean_s83
                          have lean_s85 : let171 := by sumBounds [lean_s10, lean_s18, lean_s26, lean_s33, lean_s44, lean_s51, lean_s58, lean_s67, lean_s75, lean_s84]
                          let lean_s86 := by timed congrHAdd lean_r53 lean_r50
                          let lean_s87 := by timed congrHAdd lean_r16 lean_s86
                          let lean_s88 := by timed congrHAdd lean_r33 lean_s87
                          let lean_s89 := by timed congrHAdd lean_r10 lean_s88
                          let lean_s90 := by timed congrHAdd lean_r55 lean_s89
                          let lean_s91 := by timed congrHAdd lean_r30 lean_s90
                          let lean_s92 := by timed congrHAdd lean_r25 lean_s91
                          let lean_s93 := by timed congrHAdd lean_r57 lean_s92
                          have lean_s94 : (Eq let168 let161) := by timed congrHAdd lean_r58 lean_s93
                          have lean_s95 : (Eq let168 let116) := by timed Eq.trans lean_s94 lean_r54
                          let lean_s96 := by timed flipCongrArg lean_s95 [GE.ge]
                          let lean_s97 := by timed congrHAdd lean_r43 lean_r42
                          let lean_s98 := by timed congrHAdd lean_r44 lean_s97
                          let lean_s99 := by timed congrHAdd lean_r45 lean_s98
                          let lean_s100 := by timed congrHAdd lean_r46 lean_s99
                          let lean_s101 := by timed congrHAdd lean_r47 lean_s100
                          let lean_s102 := by timed congrHAdd lean_r49 lean_s101
                          let lean_s103 := by timed congrHAdd lean_r51 lean_s102
                          let lean_s104 := by timed congrHAdd lean_r15 lean_s103
                          have lean_s105 : (Eq let167 let134) := by timed congrHAdd lean_r32 lean_s104
                          have lean_s106 : (Eq let167 let115) := by timed Eq.trans lean_s105 lean_r39
                          have lean_s107 : (Eq let169 let117) := by timed congr lean_s96 lean_s106
                          have lean_s108 : (Eq let169 True) := by timed Eq.trans lean_s107 lean_r28
                          have lean_s109 : (Eq let170 let110) := by timed flipCongrArg lean_s108 [Not]
                          have lean_s110 : (Eq let170 False) := by timed Eq.trans lean_s109 lean_r26
                          have lean_s111 : (Eq let171 False) := by timed Eq.trans lean_r59 lean_s110
                          show False from by timed eqResolve lean_s85 lean_s111
                        ))
                      have lean_s8 : let199 := by liftOrNToNeg lean_s7
                      have lean_s9 : (Eq let199 let93) := by timed flipCongrArg lean_r5 [Not]
                      have lean_s10 : (Eq let199 let37) := by timed Eq.trans lean_s9 lean_r22
                      have lean_s11 : let37 := by timed eqResolve lean_s8 lean_s10
                      have lean_s12 : (Eq let37 let199) := by timed Eq.symm lean_s10
                      have lean_s13 : let199 := by timed eqResolve lean_s11 lean_s12
                      show False from by timed contradiction lean_s6 lean_s13
  ))))))))))))))))))))
have lean_s1 : (Not (And let88 (And let113 (And let52 (And let189 (And let190 (And let30 (And let188 (And let152 (And let13 let38)))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let198 := by timed flipNotAnd lean_s1 [let88, let113, let52, let189, let190, let30, let188, let152, let13, let38]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq let195 let195) := by timed rfl
let lean_s5 := by timed congr lean_s3 lean_s4
have lean_s6 : (Eq let194 let194) := by timed rfl
let lean_s7 := by timed congr lean_s3 lean_s6
have lean_s8 : let67 := by timed rfl
let lean_s9 := by timed flipCongrArg lean_s8 [Eq]
have lean_s10 : (Eq let54 let67) := by timed congr lean_s9 lean_r31
have lean_s11 : (Eq let54 True) := by timed Eq.trans lean_s10 lean_r13
have lean_s12 : (Eq let55 True) := by timed Eq.trans lean_r9 lean_s11
have lean_s13 : let55 := by timed trueElim lean_s12
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : (Eq let192 let192) := by timed rfl
let lean_s16 := by timed congr lean_s3 lean_s15
have lean_s17 : (Eq let191 let191) := by timed rfl
let lean_s18 := by timed congr lean_s3 lean_s17
have lean_s19 : let96 := by timed rfl
let lean_s20 := by timed flipCongrArg lean_s19 [Eq]
have lean_s21 : (Eq let61 let96) := by timed congr lean_s20 lean_r8
have lean_s22 : (Eq let61 True) := by timed Eq.trans lean_s21 lean_r23
have lean_s23 : (Eq let45 True) := by timed Eq.trans lean_r11 lean_s22
have lean_s24 : let45 := by timed trueElim lean_s23
let lean_s25 := by timed congr lean_s3 lean_s24
have lean_s26 : (Eq let193 let193) := by timed rfl
let lean_s27 := by timed congr lean_s3 lean_s26
have lean_s28 : (Eq let196 let196) := by timed rfl
let lean_s29 := by timed congr lean_s3 lean_s28
have lean_s30 : let84 := by timed rfl
let lean_s31 := by timed flipCongrArg lean_s30 [Eq]
have lean_s32 : (Eq let128 let84) := by timed congr lean_s31 lean_r17
have lean_s33 : (Eq let128 True) := by timed Eq.trans lean_s32 lean_r19
have lean_s34 : (Eq let77 True) := by timed Eq.trans lean_r34 lean_s33
have lean_s35 : let77 := by timed trueElim lean_s34
let lean_s36 := by timed congr lean_s3 lean_s35
have lean_s37 : let131 := by timed rfl
let lean_s38 := by timed flipCongrArg lean_s37 [Eq]
have lean_s39 : (Eq let94 let131) := by timed congr lean_s38 lean_r22
have lean_s40 : (Eq let94 True) := by timed Eq.trans lean_s39 lean_r37
have lean_s41 : (Eq let95 True) := by timed Eq.trans lean_r21 lean_s40
have lean_s42 : let95 := by timed trueElim lean_s41
let lean_s43 := by timed congr lean_s36 lean_s42
let lean_s44 := by timed congr lean_s29 lean_s43
let lean_s45 := by timed congr lean_s27 lean_s44
let lean_s46 := by timed congr lean_s25 lean_s45
let lean_s47 := by timed congr lean_s18 lean_s46
let lean_s48 := by timed congr lean_s16 lean_s47
let lean_s49 := by timed congr lean_s14 lean_s48
let lean_s50 := by timed congr lean_s7 lean_s49
have lean_s51 : (Eq let198 let197) := by timed congr lean_s5 lean_s50
have lean_s52 : let197 := by timed eqResolve lean_s2 lean_s51
have lean_s53 : (Or let29 (Or let12 (Or let51 (Or let37 (Or let196 (Or let195 (Or let194 (Or let193 (Or let192 let191))))))))) := by permutateOr lean_s52, [5, 8, 2, 9, 7, 0, 1, 6, 3, 4], (- 1)
let lean_s54 := by timed flipCongrArg lean_r18 [GE.ge]
have lean_s55 : (Eq let1 let1) := by timed rfl
have lean_s56 : (Eq let187 let146) := by timed congr lean_s54 lean_s55
have lean_s57 : (Eq let187 let38) := by timed Eq.trans lean_s56 lean_r48
have lean_s58 : let38 := by timed eqResolve lean_a103 lean_s57
let lean_s59 := by R1 lean_s53, lean_s58, let37, [(- 1), 0]
let lean_s60 := by timed flipCongrArg lean_r62 [GE.ge]
have lean_s61 : (Eq let186 let190) := by timed congr lean_s60 lean_s55
have lean_s62 : let190 := by timed eqResolve lean_a102 lean_s61
let lean_s63 := by R2 lean_s59, lean_s62, let190, [(- 1), 0]
let lean_s64 := by timed flipCongrArg lean_r29 [GE.ge]
have lean_s65 : (Eq let185 let189) := by timed congr lean_s64 lean_s55
have lean_s66 : let189 := by timed eqResolve lean_a100 lean_s65
let lean_s67 := by R2 lean_s63, lean_s66, let189, [(- 1), 0]
let lean_s68 := by timed flipCongrArg lean_r41 [GE.ge]
have lean_s69 : (Eq let6 let6) := by timed rfl
have lean_s70 : (Eq let184 let188) := by timed congr lean_s68 lean_s69
have lean_s71 : let188 := by timed eqResolve lean_a99 lean_s70
let lean_s72 := by R2 lean_s67, lean_s71, let188, [(- 1), 0]
let lean_s73 := by timed flipCongrArg lean_r38 [LE.le]
have lean_s74 : (Eq let183 let130) := by timed congr lean_s73 lean_s69
have lean_s75 : (Eq let183 let52) := by timed Eq.trans lean_s74 lean_r36
have lean_s76 : let52 := by timed eqResolve lean_a95 lean_s75
let lean_s77 := by R1 lean_s72, lean_s76, let51, [(- 1), 0]
let lean_s78 := by timed flipCongrArg lean_r12 [LE.le]
have lean_s79 : (Eq let182 let114) := by timed congr lean_s78 lean_s55
have lean_s80 : (Eq let182 let113) := by timed Eq.trans lean_s79 lean_r27
have lean_s81 : let113 := by timed eqResolve lean_a94 lean_s80
let lean_s82 := by R2 lean_s77, lean_s81, let113, [(- 1), 0]
have lean_s83 : let13 := by timed eqResolve lean_a93 lean_r35
let lean_s84 := by R1 lean_s82, lean_s83, let12, [(- 1), 0]
let lean_s85 := by timed flipCongrArg lean_r56 [LE.le]
have lean_s86 : (Eq let5 let5) := by timed rfl
have lean_s87 : (Eq let181 let92) := by timed congr lean_s85 lean_s86
have lean_s88 : (Eq let181 let88) := by timed Eq.trans lean_s87 lean_r20
have lean_s89 : let88 := by timed eqResolve lean_a91 lean_s88
let lean_s90 := by R2 lean_s84, lean_s89, let88, [(- 1), 0]
let lean_s91 := by timed flipCongrArg lean_r24 [LE.le]
have lean_s92 : (Eq let179 let153) := by timed congr lean_s91 lean_s55
have lean_s93 : (Eq let179 let152) := by timed Eq.trans lean_s92 lean_r52
have lean_s94 : let152 := by timed eqResolve lean_a87 lean_s93
let lean_s95 := by R2 lean_s90, lean_s94, let152, [(- 1), 0]
let lean_s96 := by timed flipCongrArg lean_r14 [LE.le]
have lean_s97 : (Eq let178 let40) := by timed congr lean_s96 lean_s55
have lean_s98 : (Eq let178 let30) := by timed Eq.trans lean_s97 lean_r6
have lean_s99 : let30 := by timed eqResolve lean_a86 lean_s98
exact (show False from by R1 lean_s95, lean_s99, let29, [0, 0])


