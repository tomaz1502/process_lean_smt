open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x1x5fplus : Int}
variable {x1x5fminus : Int}
variable {x7x5fplus : Int}
variable {x7x5fminus : Int}
variable {x6x5fplus : Int}
variable {x2x5fplus : Int}
variable {x5x5fminus : Int}
variable {x2x5fminus : Int}
variable {x2x5fplus : Int}
variable {x9x5fminus : Int}
variable {x8x5fminus : Int}
variable {x8x5fminus : Int}
variable {x3x5fplus : Int}
variable {x8x5fplus : Int}
variable {x6x5fminus : Int}
variable {x4x5fplus : Int}
variable {x0x5fplus : Int}
variable {x4x5fminus : Int}
variable {x0x5fplus : Int}
variable {x9x5fplus : Int}
variable {x6x5fplus : Int}
variable {x0x5fminus : Int}
variable {x8x5fplus : Int}
variable {x2x5fminus : Int}
variable {x7x5fminus : Int}
variable {x7x5fplus : Int}
variable {x5x5fplus : Int}
variable {x1x5fminus : Int}
variable {x3x5fminus : Int}
variable {x0x5fminus : Int}
variable {x9x5fplus : Int}
variable {x1x5fplus : Int}
variable {x6x5fminus : Int}
variable {x5x5fminus : Int}
variable {x5x5fplus : Int}
variable {x9x5fminus : Int}
variable {x4x5fminus : Int}
variable {x4x5fplus : Int}
variable {x3x5fminus : Int}
variable {x3x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 3)
  let let3 := (Int.ofNat 2)
  let let4 := (binrel% HDiv.hDiv let3 let2)
  let let5 := (binrel% GT.gt let4 let1)
  let let6 := (Int.ofNat 1)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% HMul.hMul let7 x1x5fplus)
  let let9 := (binrel% HAdd.hAdd let8 x1x5fminus)
  let let10 := (binrel% HMul.hMul let7 x7x5fminus)
  let let11 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 let9))
  let let12 := (binrel% GE.ge let11 let3)
  let let13 := (Not let12)
  let let14 := (binrel% LT.lt let11 let3)
  let let15 := (binrel% HMul.hMul let7 x8x5fplus)
  let let16 := (binrel% HAdd.hAdd let15 x8x5fminus)
  let let17 := (binrel% HMul.hMul let7 x6x5fplus)
  let let18 := (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fminus let16))
  let let19 := (binrel% HMul.hMul let7 x0x5fminus)
  let let20 := (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let19 let18))
  let let21 := (binrel% GE.ge let20 let6)
  let let22 := (Not let21)
  let let23 := (binrel% LT.lt let20 let6)
  let let24 := (binrel% HDiv.hDiv let6 let2)
  let let25 := (Neg.neg let24)
  let let26 := (binrel% LT.lt let25 let1)
  let let27 := (Rat.ofInt let20)
  let let28 := (Rat.ofInt 1)
  let let29 := (binrel% HMul.hMul let28 let20)
  let let30 := (binrel% HMul.hMul let7 x6x5fminus)
  let let31 := (binrel% HMul.hMul let7 x9x5fminus)
  let let32 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x6x5fplus let30)))
  let let33 := (binrel% GE.ge let32 let1)
  let let34 := (Not let33)
  let let35 := (binrel% LT.lt let32 let1)
  let let36 := (binrel% HMul.hMul let25 x1x5fminus)
  let let37 := (binrel% HMul.hMul let24 x1x5fplus)
  let let38 := (Neg.neg let4)
  let let39 := (binrel% HMul.hMul let24 x9x5fminus)
  let let40 := (binrel% HMul.hMul let25 x9x5fplus)
  let let41 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x4x5fminus) (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x0x5fplus) (binrel% HMul.hMul let25 x0x5fminus))))))))))
  let let42 := (binrel% HMul.hMul let7 x0x5fplus)
  let let43 := (binrel% HAdd.hAdd let42 x0x5fminus)
  let let44 := (binrel% HMul.hMul let7 x4x5fplus)
  let let45 := (Neg.neg let3)
  let let46 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x7x5fminus) (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x1x5fminus let43))))))))
  let let47 := (binrel% HMul.hMul let25 let46)
  let let48 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x1x5fplus) (binrel% HMul.hMul let4 x1x5fminus))))
  let let49 := (binrel% HMul.hMul let4 let11)
  let let50 := (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x4x5fminus) (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x8x5fplus) (binrel% HMul.hMul let24 x8x5fminus))))))))))
  let let51 := (binrel% HMul.hMul let7 x8x5fminus)
  let let52 := (binrel% HAdd.hAdd x8x5fplus let51)
  let let53 := (binrel% HMul.hMul let7 x2x5fplus)
  let let54 := (binrel% HMul.hMul let7 x4x5fminus)
  let let55 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let19 let52))))))))
  let let56 := (binrel% HMul.hMul let25 let55)
  let let57 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x0x5fminus let52))
  let let58 := (Rat.ofInt let57)
  let let59 := (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let19 let16))
  let let60 := (Neg.neg let28)
  let let61 := (binrel% HMul.hMul let60 let59)
  let let62 := (Not let22)
  let let63 := (Eq let21 let62)
  let let64 := (Eq let62 let21)
  let let65 := (Not let13)
  let let66 := (Eq let12 let65)
  let let67 := (Eq let65 let12)
  let let68 := (binrel% HMul.hMul let7 x2x5fminus)
  let let69 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let68 let18))))
  let let70 := (binrel% HAdd.hAdd x2x5fplus let68)
  let let71 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fminus let70))))))
  let let72 := (binrel% LT.lt let60 let1)
  let let73 := (Eq let12 let12)
  let let74 := (Not let34)
  let let75 := (Eq let74 let33)
  let let76 := (binrel% LE.le let20 let1)
  let let77 := (binrel% LE.le let32 let7)
  let let78 := (Rat.ofInt 0)
  let let79 := (binrel% LE.le let78 let25)
  let let80 := (Not let76)
  let let81 := (binrel% GT.gt let20 let1)
  let let82 := (Eq let81 let80)
  let let83 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 let52))))
  let let84 := (binrel% GE.ge let83 let1)
  let let85 := (binrel% GT.gt let28 let1)
  let let86 := (Eq let33 let33)
  let let87 := (binrel% LE.le let11 let6)
  let let88 := (Eq let21 let21)
  let let89 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 let43))
  let let90 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x6x5fplus) (binrel% HMul.hMul let38 x6x5fminus))))
  let let91 := (binrel% HMul.hMul let4 let32)
  let let92 := (binrel% GE.ge let59 let6)
  let let93 := (binrel% LE.le let57 let7)
  let let94 := (binrel% HMul.hMul let25 let1)
  let let95 := (Eq let33 let74)
  let let96 := (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let60 let78))))))
  let let97 := (binrel% HMul.hMul let4 let6)
  let let98 := (binrel% HMul.hMul let60 let6)
  let let99 := (binrel% HMul.hMul let25 let7)
  let let100 := (binrel% HMul.hMul let4 let7)
  let let101 := (binrel% HMul.hMul let28 let1)
  let let102 := (binrel% HAdd.hAdd x0x5fplus let19)
  let let103 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x1x5fminus let102))))))))
  let let104 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x8x5fplus) (binrel% HMul.hMul let25 x8x5fminus))))))))
  let let105 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let58 let104))))))
  let let106 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 let43))))
  let let107 := (binrel% HMul.hMul let25 let69)
  let let108 := (binrel% HMul.hMul let7 x1x5fminus)
  let let109 := (binrel% HAdd.hAdd x1x5fplus let108)
  let let110 := (binrel% HMul.hMul let7 x3x5fminus)
  let let111 := (binrel% HMul.hMul let7 x7x5fplus)
  let let112 := (binrel% HAdd.hAdd let53 x2x5fminus)
  let let113 := (binrel% HMul.hMul let7 x5x5fplus)
  let let114 := (binrel% HMul.hMul let3 x6x5fminus)
  let let115 := (binrel% HMul.hMul let45 x6x5fplus)
  let let116 := (binrel% HMul.hMul let45 x3x5fminus)
  let let117 := (binrel% HMul.hMul let3 x3x5fplus)
  let let118 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let68 let9))
  let let119 := (binrel% HMul.hMul let7 x3x5fplus)
  let let120 := (binrel% HMul.hMul let7 x5x5fminus)
  let let121 := (binrel% HMul.hMul let3 x4x5fminus)
  let let122 := (binrel% HMul.hMul let45 x4x5fplus)
  let let123 := (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x0x5fplus) (binrel% HMul.hMul let45 x0x5fminus))
  let let124 := (binrel% HAdd.hAdd x3x5fplus let110)
  let let125 := (binrel% LE.le let89 let7)
  let let126 := (binrel% GE.ge let103 let7)
  let let127 := (binrel% GE.ge let46 let7)
  let let128 := (binrel% GE.ge let71 let1)
  let let129 := (binrel% HAdd.hAdd let119 x3x5fminus)
  let let130 := (binrel% GE.ge let106 let1)
  let let131 := (binrel% GE.ge let55 let7)
  let let132 := (binrel% GE.ge let69 let1)
  let let133 := (Not let132)
  let let134 := (Not let127)
  let let135 := (Not let131)
  let let136 := (Not let92)
  let let137 := (Or let133 (Or let136 (Or let135 (Or let12 (Or let33 (Or let134 let21))))))
  let let138 := (Or let133 (Or let136 (Or let135 (Or let65 (Or let74 (Or let134 let62))))))
  let let139 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 let94))))))
  let let140 := (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let61 let107))))))
  let let141 := (binrel% LE.le let140 let139)
  let let142 := (binrel% LE.le let107 let94)
  let let143 := (And let26 let132)
  let let144 := (binrel% LE.le let61 let98)
  let let145 := (And let72 let92)
  let let146 := (binrel% LE.le let56 let99)
  let let147 := (And let26 let131)
  let let148 := (binrel% LE.le let49 let97)
  let let149 := (And let5 let87)
  let let150 := (binrel% LE.le let91 let100)
  let let151 := (And let5 let77)
  let let152 := (binrel% LE.le let47 let99)
  let let153 := (And let26 let127)
  let let154 := (binrel% LE.le let29 let101)
  let let155 := (And let85 let76)
(Eq let5 True) → (Eq let14 let13) → (Eq let23 let22) → (Eq let26 True) → (Eq let29 let27) → (Eq let35 let34) → (Eq let47 let41) → (Eq let49 let48) → (Eq let56 let50) → (Eq let61 let58) → (Eq let64 let63) → (Eq let67 let66) → let64 → (Eq let71 let69) → (Eq let72 True) → (Eq let73 True) → let75 → (Eq let76 let22) → (Eq let77 let34) → (Eq let79 False) → let82 → (Eq let84 let22) → (Eq let85 True) → (Eq let86 True) → (Eq let87 let13) → (Eq let88 True) → (Eq let89 let57) → (Eq let91 let90) → (Eq let93 let92) → (Eq let94 let78) → (Eq let75 let95) → let67 → (Eq let96 let25) → (Eq let97 let4) → (Eq let98 let60) → (Eq let99 let24) → (Eq let100 let38) → (Eq let101 let78) → (Eq let103 let55) → (Eq let105 let78) → (Eq let106 let83) → (Eq let107 let104) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 let109)))))))) let6) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let108 let43)))))))) let7) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x5x5fminus) (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus let112)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 let70)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 x5x5fminus))))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let116 let9)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 let118)))) let7) → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd x3x5fminus let102)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let120 let43)))))) let6) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let122 let121))))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x9x5fminus) (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 let112)))))) let7) → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 let9)))))) let6) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 let9)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let121 let43)))) let6) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x2x5fplus) (binrel% HMul.hMul let45 x2x5fminus)))))) let7) → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus let123)))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 let124)))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd x4x5fplus let54))))) let6) → (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let116 let123)))) let7) → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 let70)) let6) → let125 → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let120 let124)) let6) → let87 → let77 → let126 → let127 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let68 let43)))))))) let1) → let128 → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 let118)))) let7) → (binrel% GE.ge (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x2x5fminus let109)))))) let6) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus let129)))))) let1) → let130 → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x2x5fminus let102)))) let7) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 let129)) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 let102)) let6) → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 3)
  let let3 := (Int.ofNat 2)
  let let4 := (binrel% HDiv.hDiv let3 let2)
  let let5 := (binrel% GT.gt let4 let1)
  let let6 := (Int.ofNat 1)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% HMul.hMul let7 x1x5fplus)
  let let9 := (binrel% HAdd.hAdd let8 x1x5fminus)
  let let10 := (binrel% HMul.hMul let7 x7x5fminus)
  let let11 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 let9))
  let let12 := (binrel% GE.ge let11 let3)
  let let13 := (Not let12)
  let let14 := (binrel% LT.lt let11 let3)
  let let15 := (binrel% HMul.hMul let7 x8x5fplus)
  let let16 := (binrel% HAdd.hAdd let15 x8x5fminus)
  let let17 := (binrel% HMul.hMul let7 x6x5fplus)
  let let18 := (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fminus let16))
  let let19 := (binrel% HMul.hMul let7 x0x5fminus)
  let let20 := (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let19 let18))
  let let21 := (binrel% GE.ge let20 let6)
  let let22 := (Not let21)
  let let23 := (binrel% LT.lt let20 let6)
  let let24 := (binrel% HDiv.hDiv let6 let2)
  let let25 := (Neg.neg let24)
  let let26 := (binrel% LT.lt let25 let1)
  let let27 := (Rat.ofInt let20)
  let let28 := (Rat.ofInt 1)
  let let29 := (binrel% HMul.hMul let28 let20)
  let let30 := (binrel% HMul.hMul let7 x6x5fminus)
  let let31 := (binrel% HMul.hMul let7 x9x5fminus)
  let let32 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x6x5fplus let30)))
  let let33 := (binrel% GE.ge let32 let1)
  let let34 := (Not let33)
  let let35 := (binrel% LT.lt let32 let1)
  let let36 := (binrel% HMul.hMul let25 x1x5fminus)
  let let37 := (binrel% HMul.hMul let24 x1x5fplus)
  let let38 := (Neg.neg let4)
  let let39 := (binrel% HMul.hMul let24 x9x5fminus)
  let let40 := (binrel% HMul.hMul let25 x9x5fplus)
  let let41 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x4x5fminus) (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x0x5fplus) (binrel% HMul.hMul let25 x0x5fminus))))))))))
  let let42 := (binrel% HMul.hMul let7 x0x5fplus)
  let let43 := (binrel% HAdd.hAdd let42 x0x5fminus)
  let let44 := (binrel% HMul.hMul let7 x4x5fplus)
  let let45 := (Neg.neg let3)
  let let46 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x7x5fminus) (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x1x5fminus let43))))))))
  let let47 := (binrel% HMul.hMul let25 let46)
  let let48 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x1x5fplus) (binrel% HMul.hMul let4 x1x5fminus))))
  let let49 := (binrel% HMul.hMul let4 let11)
  let let50 := (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x4x5fminus) (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x8x5fplus) (binrel% HMul.hMul let24 x8x5fminus))))))))))
  let let51 := (binrel% HMul.hMul let7 x8x5fminus)
  let let52 := (binrel% HAdd.hAdd x8x5fplus let51)
  let let53 := (binrel% HMul.hMul let7 x2x5fplus)
  let let54 := (binrel% HMul.hMul let7 x4x5fminus)
  let let55 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let19 let52))))))))
  let let56 := (binrel% HMul.hMul let25 let55)
  let let57 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x0x5fminus let52))
  let let58 := (Rat.ofInt let57)
  let let59 := (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let19 let16))
  let let60 := (Neg.neg let28)
  let let61 := (binrel% HMul.hMul let60 let59)
  let let62 := (Not let22)
  let let63 := (Eq let21 let62)
  let let64 := (Eq let62 let21)
  let let65 := (Not let13)
  let let66 := (Eq let12 let65)
  let let67 := (Eq let65 let12)
  let let68 := (binrel% HMul.hMul let7 x2x5fminus)
  let let69 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let68 let18))))
  let let70 := (binrel% HAdd.hAdd x2x5fplus let68)
  let let71 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fminus let70))))))
  let let72 := (binrel% LT.lt let60 let1)
  let let73 := (Eq let12 let12)
  let let74 := (Not let34)
  let let75 := (Eq let74 let33)
  let let76 := (binrel% LE.le let20 let1)
  let let77 := (binrel% LE.le let32 let7)
  let let78 := (Rat.ofInt 0)
  let let79 := (binrel% LE.le let78 let25)
  let let80 := (Not let76)
  let let81 := (binrel% GT.gt let20 let1)
  let let82 := (Eq let81 let80)
  let let83 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 let52))))
  let let84 := (binrel% GE.ge let83 let1)
  let let85 := (binrel% GT.gt let28 let1)
  let let86 := (Eq let33 let33)
  let let87 := (binrel% LE.le let11 let6)
  let let88 := (Eq let21 let21)
  let let89 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 let43))
  let let90 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let38 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x6x5fplus) (binrel% HMul.hMul let38 x6x5fminus))))
  let let91 := (binrel% HMul.hMul let4 let32)
  let let92 := (binrel% GE.ge let59 let6)
  let let93 := (binrel% LE.le let57 let7)
  let let94 := (binrel% HMul.hMul let25 let1)
  let let95 := (Eq let33 let74)
  let let96 := (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let60 let78))))))
  let let97 := (binrel% HMul.hMul let4 let6)
  let let98 := (binrel% HMul.hMul let60 let6)
  let let99 := (binrel% HMul.hMul let25 let7)
  let let100 := (binrel% HMul.hMul let4 let7)
  let let101 := (binrel% HMul.hMul let28 let1)
  let let102 := (binrel% HAdd.hAdd x0x5fplus let19)
  let let103 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let8 (binrel% HAdd.hAdd x1x5fminus let102))))))))
  let let104 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let25 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x8x5fplus) (binrel% HMul.hMul let25 x8x5fminus))))))))
  let let105 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let58 let104))))))
  let let106 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 let43))))
  let let107 := (binrel% HMul.hMul let25 let69)
  let let108 := (binrel% HMul.hMul let7 x1x5fminus)
  let let109 := (binrel% HAdd.hAdd x1x5fplus let108)
  let let110 := (binrel% HMul.hMul let7 x3x5fminus)
  let let111 := (binrel% HMul.hMul let7 x7x5fplus)
  let let112 := (binrel% HAdd.hAdd let53 x2x5fminus)
  let let113 := (binrel% HMul.hMul let7 x5x5fplus)
  let let114 := (binrel% HMul.hMul let3 x6x5fminus)
  let let115 := (binrel% HMul.hMul let45 x6x5fplus)
  let let116 := (binrel% HMul.hMul let45 x3x5fminus)
  let let117 := (binrel% HMul.hMul let3 x3x5fplus)
  let let118 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let68 let9))
  let let119 := (binrel% HMul.hMul let7 x3x5fplus)
  let let120 := (binrel% HMul.hMul let7 x5x5fminus)
  let let121 := (binrel% HMul.hMul let3 x4x5fminus)
  let let122 := (binrel% HMul.hMul let45 x4x5fplus)
  let let123 := (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x0x5fplus) (binrel% HMul.hMul let45 x0x5fminus))
  let let124 := (binrel% HAdd.hAdd x3x5fplus let110)
  let let125 := (binrel% LE.le let89 let7)
  let let126 := (binrel% GE.ge let103 let7)
  let let127 := (binrel% GE.ge let46 let7)
  let let128 := (binrel% GE.ge let71 let1)
  let let129 := (binrel% HAdd.hAdd let119 x3x5fminus)
  let let130 := (binrel% GE.ge let106 let1)
  let let131 := (binrel% GE.ge let55 let7)
  let let132 := (binrel% GE.ge let69 let1)
  let let133 := (Not let132)
  let let134 := (Not let127)
  let let135 := (Not let131)
  let let136 := (Not let92)
  let let137 := (Or let133 (Or let136 (Or let135 (Or let12 (Or let33 (Or let134 let21))))))
  let let138 := (Or let133 (Or let136 (Or let135 (Or let65 (Or let74 (Or let134 let62))))))
  let let139 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let100 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 let94))))))
  let let140 := (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let61 let107))))))
  let let141 := (binrel% LE.le let140 let139)
  let let142 := (binrel% LE.le let107 let94)
  let let143 := (And let26 let132)
  let let144 := (binrel% LE.le let61 let98)
  let let145 := (And let72 let92)
  let let146 := (binrel% LE.le let56 let99)
  let let147 := (And let26 let131)
  let let148 := (binrel% LE.le let49 let97)
  let let149 := (And let5 let87)
  let let150 := (binrel% LE.le let91 let100)
  let let151 := (And let5 let77)
  let let152 := (binrel% LE.le let47 let99)
  let let153 := (And let26 let127)
  let let154 := (binrel% LE.le let29 let101)
  let let155 := (And let85 let76)
fun lean_r0 : (Eq let5 True) => -- EVALUATE
fun lean_r1 : (Eq let14 let13) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let23 let22) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let26 True) => -- EVALUATE
fun lean_r4 : (Eq let29 let27) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let35 let34) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let47 let41) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let49 let48) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let56 let50) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let61 let58) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let64 let63) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let67 let66) => -- THEORY_REWRITE_BOOL
fun lean_r12 : let64 => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let71 let69) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let72 True) => -- EVALUATE
fun lean_r15 : (Eq let73 True) => -- THEORY_REWRITE_BOOL
fun lean_r16 : let75 => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let76 let22) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let77 let34) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let79 False) => -- THEORY_REWRITE_ARITH
fun lean_r20 : let82 => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let84 let22) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let85 True) => -- EVALUATE
fun lean_r23 : (Eq let86 True) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let87 let13) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let88 True) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq let89 let57) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let91 let90) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let93 let92) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let94 let78) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let75 let95) => -- THEORY_REWRITE_BOOL
fun lean_r31 : let67 => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let96 let25) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let97 let4) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let98 let60) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let99 let24) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let100 let38) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let101 let78) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let103 let55) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let105 let78) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let106 let83) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let107 let104) => -- THEORY_REWRITE_ARITH
fun lean_a42 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a43 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a44 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a45 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a46 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a47 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a48 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a49 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a50 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a51 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a52 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a53 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a54 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a55 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a56 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a57 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a58 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a59 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a60 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a61 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a62 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 let109)))))))) let6) =>
fun lean_a63 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let108 let43)))))))) let7) =>
fun lean_a64 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x5x5fminus) (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus let112)))))) let1) =>
fun lean_a65 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 let70)))))) let1) =>
fun lean_a66 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 x5x5fminus))))))) let1) =>
fun lean_a67 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let116 let9)))))) let1) =>
fun lean_a68 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 let118)))) let7) =>
fun lean_a69 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd x3x5fminus let102)))))) let1) =>
fun lean_a70 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let120 let43)))))) let6) =>
fun lean_a71 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let122 let121))))))) let1) =>
fun lean_a72 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x9x5fminus) (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 let112)))))) let7) =>
fun lean_a73 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 let9)))))) let6) =>
fun lean_a74 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 let9)))))) let1) =>
fun lean_a75 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let121 let43)))) let6) =>
fun lean_a76 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x2x5fplus) (binrel% HMul.hMul let45 x2x5fminus)))))) let7) =>
fun lean_a77 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus let123)))) let1) =>
fun lean_a78 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 let124)))) let1) =>
fun lean_a79 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd x4x5fplus let54))))) let6) =>
fun lean_a80 : (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let116 let123)))) let7) =>
fun lean_a81 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 let70)) let6) =>
fun lean_a82 : let125 =>
fun lean_a83 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let120 let124)) let6) =>
fun lean_a84 : let87 =>
fun lean_a85 : let77 =>
fun lean_a86 : let126 =>
fun lean_a87 : let127 =>
fun lean_a88 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let68 let43)))))))) let1) =>
fun lean_a89 : let128 =>
fun lean_a90 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 let118)))) let7) =>
fun lean_a91 : (binrel% GE.ge (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let110 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x2x5fminus let109)))))) let6) =>
fun lean_a92 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd x4x5fminus let129)))))) let1) =>
fun lean_a93 : let130 =>
fun lean_a94 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x2x5fminus let102)))) let7) =>
fun lean_a95 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let31 let129)) let1) =>
fun lean_a96 : (binrel% GE.ge (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let54 let102)) let6) => by
have lean_s0 : (Or let133 (Or let136 (Or let135 (Or let65 (Or let74 (Or let134 (Or let62 False))))))) :=
  (scope (fun lean_a97 : let132 =>
    (scope (fun lean_a98 : let92 =>
      (scope (fun lean_a99 : let131 =>
        (scope (fun lean_a100 : let13 =>
          (scope (fun lean_a101 : let34 =>
            (scope (fun lean_a102 : let127 =>
              (scope (fun lean_a103 : let22 =>
                let lean_s0 := by timed flipCongrArg lean_r40 [GE.ge]
                have lean_s1 : (Eq let1 let1) := by timed rfl
                have lean_s2 : (Eq let130 let84) := by timed congr lean_s0 lean_s1
                have lean_s3 : (Eq let130 let22) := by timed Eq.trans lean_s2 lean_r21
                have lean_s4 : let22 := by timed eqResolve lean_a93 lean_s3
                have lean_s5 : (Eq let22 let23) := by timed Eq.symm lean_r2
                have lean_s6 : let23 := by timed eqResolve lean_s4 lean_s5
                have lean_s7 : let76 := by intTightUb lean_s6
                have lean_s8 : (Or let80 False) :=
                  (scope (fun lean_a103 : let76 =>
                    have lean_s8 : let85 := by timed trueElim lean_r22
                    have lean_s9 : let155 := by timed And.intro lean_s8 lean_a103
                    have lean_s10 : (Implies let155 let154) := by arithMulPos [let20, let1, let28], 1
                    have lean_s11 : let154 := by timed modusPonens lean_s9 lean_s10
                    have lean_s12 : let26 := by timed trueElim lean_r3
                    have lean_s13 : let153 := by timed And.intro lean_s12 lean_a102
                    have lean_s14 : (Implies let153 let152) := by arithMulNeg [let46, let7, let25], 3
                    have lean_s15 : let152 := by timed modusPonens lean_s13 lean_s14
                    have lean_s16 : let5 := by timed trueElim lean_r0
                    have lean_s17 : let34 := by timed eqResolve lean_a85 lean_r18
                    have lean_s18 : (Eq let34 let35) := by timed Eq.symm lean_r5
                    have lean_s19 : let35 := by timed eqResolve lean_s17 lean_s18
                    have lean_s20 : let77 := by intTightUb lean_s19
                    have lean_s21 : let151 := by timed And.intro lean_s16 lean_s20
                    have lean_s22 : (Implies let151 let150) := by arithMulPos [let32, let7, let4], 1
                    have lean_s23 : let150 := by timed modusPonens lean_s21 lean_s22
                    have lean_s24 : let13 := by timed eqResolve lean_a84 lean_r24
                    have lean_s25 : (Eq let13 let14) := by timed Eq.symm lean_r1
                    have lean_s26 : let14 := by timed eqResolve lean_s24 lean_s25
                    have lean_s27 : let87 := by intTightUb lean_s26
                    have lean_s28 : let149 := by timed And.intro lean_s16 lean_s27
                    have lean_s29 : (Implies let149 let148) := by arithMulPos [let11, let6, let4], 1
                    have lean_s30 : let148 := by timed modusPonens lean_s28 lean_s29
                    let lean_s31 := by timed flipCongrArg lean_r38 [GE.ge]
                    have lean_s32 : (Eq let7 let7) := by timed rfl
                    have lean_s33 : (Eq let126 let131) := by timed congr lean_s31 lean_s32
                    have lean_s34 : let131 := by timed eqResolve lean_a86 lean_s33
                    have lean_s35 : let147 := by timed And.intro lean_s12 lean_s34
                    have lean_s36 : (Implies let147 let146) := by arithMulNeg [let55, let7, let25], 3
                    have lean_s37 : let146 := by timed modusPonens lean_s35 lean_s36
                    have lean_s38 : let72 := by timed trueElim lean_r14
                    let lean_s39 := by timed flipCongrArg lean_r26 [LE.le]
                    have lean_s40 : (Eq let125 let93) := by timed congr lean_s39 lean_s32
                    have lean_s41 : (Eq let125 let92) := by timed Eq.trans lean_s40 lean_r28
                    have lean_s42 : let92 := by timed eqResolve lean_a82 lean_s41
                    have lean_s43 : let145 := by timed And.intro lean_s38 lean_s42
                    have lean_s44 : (Implies let145 let144) := by arithMulNeg [let59, let6, let60], 3
                    have lean_s45 : let144 := by timed modusPonens lean_s43 lean_s44
                    let lean_s46 := by timed flipCongrArg lean_r13 [GE.ge]
                    have lean_s47 : (Eq let128 let132) := by timed congr lean_s46 lean_s1
                    have lean_s48 : let132 := by timed eqResolve lean_a89 lean_s47
                    have lean_s49 : let143 := by timed And.intro lean_s12 lean_s48
                    have lean_s50 : (Implies let143 let142) := by arithMulNeg [let69, let1, let25], 3
                    have lean_s51 : let142 := by timed modusPonens lean_s49 lean_s50
                    have lean_s52 : let141 := by sumBounds [lean_s11, lean_s15, lean_s23, lean_s30, lean_s37, lean_s45, lean_s51]
                    let lean_s53 := by timed congrHAdd lean_r9 lean_r41
                    let lean_s54 := by timed congrHAdd lean_r8 lean_s53
                    let lean_s55 := by timed congrHAdd lean_r7 lean_s54
                    let lean_s56 := by timed congrHAdd lean_r27 lean_s55
                    let lean_s57 := by timed congrHAdd lean_r6 lean_s56
                    have lean_s58 : (Eq let140 let105) := by timed congrHAdd lean_r4 lean_s57
                    have lean_s59 : (Eq let140 let78) := by timed Eq.trans lean_s58 lean_r39
                    let lean_s60 := by timed flipCongrArg lean_s59 [LE.le]
                    let lean_s61 := by timed congrHAdd lean_r34 lean_r29
                    let lean_s62 := by timed congrHAdd lean_r35 lean_s61
                    let lean_s63 := by timed congrHAdd lean_r33 lean_s62
                    let lean_s64 := by timed congrHAdd lean_r36 lean_s63
                    let lean_s65 := by timed congrHAdd lean_r35 lean_s64
                    have lean_s66 : (Eq let139 let96) := by timed congrHAdd lean_r37 lean_s65
                    have lean_s67 : (Eq let139 let25) := by timed Eq.trans lean_s66 lean_r32
                    have lean_s68 : (Eq let141 let79) := by timed congr lean_s60 lean_s67
                    have lean_s69 : (Eq let141 False) := by timed Eq.trans lean_s68 lean_r19
                    show False from by timed eqResolve lean_s52 lean_s69
                  ))
                have lean_s9 : let80 := by liftOrNToNeg lean_s8
                have lean_s10 : (Eq let80 let62) := by timed flipCongrArg lean_r17 [Not]
                have lean_s11 : (Eq let80 let21) := by timed Eq.trans lean_s10 lean_r12
                have lean_s12 : (Eq let81 let21) := by timed Eq.trans lean_r20 lean_s11
                have lean_s13 : (Eq let21 let81) := by timed Eq.symm lean_s12
                have lean_s14 : (Eq let80 let81) := by timed Eq.trans lean_s11 lean_s13
                have lean_s15 : let81 := by timed eqResolve lean_s9 lean_s14
                have lean_s16 : (Eq let21 let80) := by timed Eq.symm lean_s11
                have lean_s17 : let82 := by timed Eq.trans lean_s12 lean_s16
                have lean_s18 : let80 := by timed eqResolve lean_s15 lean_s17
                show False from by timed contradiction lean_s7 lean_s18
  ))))))))))))))
have lean_s1 : (Not (And let132 (And let92 (And let131 (And let13 (And let34 (And let127 let22))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let138 := by timed flipNotAnd lean_s1 [let132, let92, let131, let13, let34, let127, let22]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq let133 let133) := by timed rfl
let lean_s5 := by timed congr lean_s3 lean_s4
have lean_s6 : (Eq let136 let136) := by timed rfl
let lean_s7 := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq let135 let135) := by timed rfl
let lean_s9 := by timed congr lean_s3 lean_s8
have lean_s10 : let73 := by timed rfl
let lean_s11 := by timed flipCongrArg lean_s10 [Eq]
have lean_s12 : (Eq let66 let73) := by timed congr lean_s11 lean_r31
have lean_s13 : (Eq let66 True) := by timed Eq.trans lean_s12 lean_r15
have lean_s14 : (Eq let67 True) := by timed Eq.trans lean_r11 lean_s13
have lean_s15 : let67 := by timed trueElim lean_s14
let lean_s16 := by timed congr lean_s3 lean_s15
have lean_s17 : let86 := by timed rfl
let lean_s18 := by timed flipCongrArg lean_s17 [Eq]
have lean_s19 : (Eq let95 let86) := by timed congr lean_s18 lean_r16
have lean_s20 : (Eq let95 True) := by timed Eq.trans lean_s19 lean_r23
have lean_s21 : (Eq let75 True) := by timed Eq.trans lean_r30 lean_s20
have lean_s22 : let75 := by timed trueElim lean_s21
let lean_s23 := by timed congr lean_s3 lean_s22
have lean_s24 : (Eq let134 let134) := by timed rfl
let lean_s25 := by timed congr lean_s3 lean_s24
have lean_s26 : let88 := by timed rfl
let lean_s27 := by timed flipCongrArg lean_s26 [Eq]
have lean_s28 : (Eq let63 let88) := by timed congr lean_s27 lean_r12
have lean_s29 : (Eq let63 True) := by timed Eq.trans lean_s28 lean_r25
have lean_s30 : (Eq let64 True) := by timed Eq.trans lean_r10 lean_s29
have lean_s31 : let64 := by timed trueElim lean_s30
let lean_s32 := by timed congr lean_s25 lean_s31
let lean_s33 := by timed congr lean_s23 lean_s32
let lean_s34 := by timed congr lean_s16 lean_s33
let lean_s35 := by timed congr lean_s9 lean_s34
let lean_s36 := by timed congr lean_s7 lean_s35
have lean_s37 : (Eq let138 let137) := by timed congr lean_s5 lean_s36
have lean_s38 : let137 := by timed eqResolve lean_s2 lean_s37
have lean_s39 : (Or let12 (Or let33 (Or let21 (Or let136 (Or let135 (Or let134 let133)))))) := by permutateOr lean_s38, [3, 4, 6, 1, 2, 5, 0], (- 1)
let lean_s40 := by timed flipCongrArg lean_r40 [GE.ge]
have lean_s41 : (Eq let1 let1) := by timed rfl
have lean_s42 : (Eq let130 let84) := by timed congr lean_s40 lean_s41
have lean_s43 : (Eq let130 let22) := by timed Eq.trans lean_s42 lean_r21
have lean_s44 : let22 := by timed eqResolve lean_a93 lean_s43
let lean_s45 := by R1 lean_s39, lean_s44, let21, [(- 1), 0]
let lean_s46 := by timed flipCongrArg lean_r13 [GE.ge]
have lean_s47 : (Eq let128 let132) := by timed congr lean_s46 lean_s41
have lean_s48 : let132 := by timed eqResolve lean_a89 lean_s47
let lean_s49 := by R2 lean_s45, lean_s48, let132, [(- 1), 0]
let lean_s50 := by R2 lean_s49, lean_a87, let127, [(- 1), 0]
let lean_s51 := by timed flipCongrArg lean_r38 [GE.ge]
have lean_s52 : (Eq let7 let7) := by timed rfl
have lean_s53 : (Eq let126 let131) := by timed congr lean_s51 lean_s52
have lean_s54 : let131 := by timed eqResolve lean_a86 lean_s53
let lean_s55 := by R2 lean_s50, lean_s54, let131, [(- 1), 0]
have lean_s56 : let34 := by timed eqResolve lean_a85 lean_r18
let lean_s57 := by R1 lean_s55, lean_s56, let33, [(- 1), 0]
have lean_s58 : let13 := by timed eqResolve lean_a84 lean_r24
let lean_s59 := by R1 lean_s57, lean_s58, let12, [(- 1), 0]
let lean_s60 := by timed flipCongrArg lean_r26 [LE.le]
have lean_s61 : (Eq let125 let93) := by timed congr lean_s60 lean_s52
have lean_s62 : (Eq let125 let92) := by timed Eq.trans lean_s61 lean_r28
have lean_s63 : let92 := by timed eqResolve lean_a82 lean_s62
exact (show False from by R2 lean_s59, lean_s63, let92, [0, 0])


