open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x8x5fplus : Int}
variable {x8x5fminus : Int}
variable {x6x5fplus : Int}
variable {x6x5fminus : Int}
variable {x4x5fplus : Int}
variable {x6x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x7x5fplus : Int}
variable {x7x5fminus : Int}
variable {x1x5fminus : Int}
variable {x2x5fplus : Int}
variable {x4x5fminus : Int}
variable {x2x5fminus : Int}
variable {x9x5fplus : Int}
variable {x9x5fminus : Int}
variable {x8x5fminus : Int}
variable {x6x5fplus : Int}
variable {x1x5fminus : Int}
variable {x8x5fplus : Int}
variable {x7x5fplus : Int}
variable {x3x5fminus : Int}
variable {x3x5fplus : Int}
variable {x0x5fminus : Int}
variable {x0x5fplus : Int}
variable {x5x5fminus : Int}
variable {x5x5fplus : Int}
variable {x1x5fplus : Int}
variable {x9x5fminus : Int}
variable {x9x5fplus : Int}
variable {x2x5fminus : Int}
variable {x2x5fplus : Int}
variable {x1x5fplus : Int}
variable {x7x5fminus : Int}

theorem th0 :
  let let1 := (Int.ofNat 1)
  let let2 := (Neg.neg let1)
  let let3 := (binrel% HMul.hMul let2 x4x5fplus)
  let let4 := (binrel% HMul.hMul let2 x5x5fplus)
  let let5 := (binrel% HMul.hMul let2 x9x5fminus)
  let let6 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let3 x4x5fminus)))))
  let let7 := (binrel% GE.ge let6 let1)
  let let8 := (Not let7)
  let let9 := (binrel% LT.lt let6 let1)
  let let10 := (binrel% HMul.hMul let2 x1x5fminus)
  let let11 := (binrel% HAdd.hAdd x1x5fplus let10)
  let let12 := (Int.ofNat 2)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HMul.hMul let13 x2x5fminus)
  let let15 := (binrel% HMul.hMul let12 x2x5fplus)
  let let16 := (binrel% HMul.hMul let2 x3x5fplus)
  let let17 := (binrel% HMul.hMul let2 x5x5fminus)
  let let18 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let14 let11))))))
  let let19 := (binrel% GE.ge let18 let1)
  let let20 := (Not let19)
  let let21 := (binrel% LT.lt let18 let1)
  let let22 := (binrel% HMul.hMul let2 x1x5fplus)
  let let23 := (binrel% HAdd.hAdd let22 x1x5fminus)
  let let24 := (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fminus let23))
  let let25 := (binrel% HMul.hMul let2 x7x5fminus)
  let let26 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 let24))))
  let let27 := (binrel% GE.ge let26 let1)
  let let28 := (Not let27)
  let let29 := (binrel% LT.lt let26 let1)
  let let30 := (Int.ofNat 0)
  let let31 := (Int.ofNat 5)
  let let32 := (binrel% HDiv.hDiv (Int.ofNat 19) let31)
  let let33 := (binrel% GT.gt let32 let30)
  let let34 := (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x5x5fminus let11))
  let let35 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 let34))))
  let let36 := (binrel% GE.ge let35 let1)
  let let37 := (Not let36)
  let let38 := (binrel% LT.lt let35 let1)
  let let39 := (Int.ofNat 15)
  let let40 := (binrel% HDiv.hDiv (Int.ofNat 34) let39)
  let let41 := (Neg.neg let40)
  let let42 := (binrel% LT.lt let41 let30)
  let let43 := (Not let37)
  let let44 := (Eq let43 let36)
  let let45 := (binrel% HMul.hMul let41 let1)
  let let46 := (Not let28)
  let let47 := (Eq let27 let46)
  let let48 := (Eq let46 let27)
  let let49 := (binrel% HMul.hMul let2 x0x5fminus)
  let let50 := (binrel% HAdd.hAdd x0x5fplus let49)
  let let51 := (binrel% HMul.hMul let2 x2x5fminus)
  let let52 := (binrel% HMul.hMul let2 x3x5fminus)
  let let53 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let51 let50))))
  let let54 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 let53))
  let let55 := (binrel% GE.ge let54 let1)
  let let56 := (Not let55)
  let let57 := (Not let56)
  let let58 := (Eq let57 let55)
  let let59 := (Not let20)
  let let60 := (Eq let19 let59)
  let let61 := (Eq let59 let19)
  let let62 := (Eq let19 let19)
  let let63 := (Not let8)
  let let64 := (Eq let63 let7)
  let let65 := (binrel% LE.le let6 let30)
  let let66 := (binrel% HDiv.hDiv (Int.ofNat 29) let39)
  let let67 := (Neg.neg let66)
  let let68 := (binrel% LT.lt let67 let30)
  let let69 := (Int.ofNat 3)
  let let70 := (binrel% HDiv.hDiv let1 let69)
  let let71 := (Neg.neg let70)
  let let72 := (binrel% HDiv.hDiv let12 let69)
  let let73 := (Neg.neg let72)
  let let74 := (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x0x5fplus) (binrel% HMul.hMul let71 x0x5fminus))))))))
  let let75 := (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x0x5fplus) x0x5fminus)
  let let76 := (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fminus let75))
  let let77 := (binrel% HMul.hMul let2 x6x5fminus)
  let let78 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x4x5fminus) let76))))
  let let79 := (binrel% HMul.hMul let71 let78)
  let let80 := (binrel% HMul.hMul let2 x2x5fplus)
  let let81 := (binrel% HMul.hMul let13 x5x5fminus)
  let let82 := (binrel% HMul.hMul let12 x5x5fplus)
  let let83 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let49 let23))))))))
  let let84 := (binrel% GE.ge let83 let1)
  let let85 := (Not let84)
  let let86 := (Not let85)
  let let87 := (Eq let84 let86)
  let let88 := (Eq let86 let84)
  let let89 := (Rat.ofInt 0)
  let let90 := (binrel% HDiv.hDiv (Int.ofNat 11) let39)
  let let91 := (binrel% HMul.hMul let90 let30)
  let let92 := (Eq let55 let55)
  let let93 := (binrel% LT.lt let54 let1)
  let let94 := (binrel% HMul.hMul let72 let1)
  let let95 := (Eq let27 let27)
  let let96 := (binrel% GT.gt let90 let30)
  let let97 := (binrel% HAdd.hAdd x9x5fplus let5)
  let let98 := (binrel% HSub.hSub x9x5fplus x9x5fminus)
  let let99 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 let24))))
  let let100 := (binrel% HDiv.hDiv let1 let31)
  let let101 := (binrel% HMul.hMul let100 let30)
  let let102 := (Eq let7 let63)
  let let103 := (binrel% HDiv.hDiv (Int.ofNat 58) let39)
  let let104 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let103) x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x0x5fplus) (binrel% HMul.hMul let66 x0x5fminus))))))))
  let let105 := (binrel% HMul.hMul let13 x7x5fminus)
  let let106 := (binrel% HMul.hMul let12 x7x5fplus)
  let let107 := (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x9x5fplus) (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 let50))))))
  let let108 := (binrel% HMul.hMul let67 let107)
  let let109 := (binrel% HDiv.hDiv let69 let31)
  let let110 := (Neg.neg let109)
  let let111 := (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x0x5fplus) (binrel% HMul.hMul let110 x0x5fminus))))))))
  let let112 := (binrel% HMul.hMul let109 let54)
  let let113 := (Eq let36 let43)
  let let114 := (binrel% HMul.hMul let32 let30)
  let let115 := (binrel% LE.le let35 let30)
  let let116 := (binrel% GT.gt let109 let30)
  let let117 := (Rat.ofInt 1)
  let let118 := (binrel% HMul.hMul let117 let30)
  let let119 := (Eq let36 let36)
  let let120 := (Eq let84 let84)
  let let121 := (binrel% HMul.hMul let109 let30)
  let let122 := (binrel% GT.gt let100 let30)
  let let123 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x1x5fminus let50))))))))
  let let124 := (binrel% GT.gt let117 let30)
  let let125 := (binrel% GE.ge let107 let2)
  let let126 := (binrel% HMul.hMul let2 x6x5fplus)
  let let127 := (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x6x5fminus let75))
  let let128 := (binrel% HMul.hMul let12 x7x5fminus)
  let let129 := (binrel% HMul.hMul let13 x7x5fplus)
  let let130 := (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 let127))))
  let let131 := (binrel% LE.le let130 let1)
  let let132 := (binrel% HMul.hMul let67 let2)
  let let133 := (binrel% GT.gt let72 let30)
  let let134 := (binrel% LE.le let18 let30)
  let let135 := (binrel% LT.lt let83 let1)
  let let136 := (binrel% HMul.hMul let71 let1)
  let let137 := (binrel% HDiv.hDiv (Int.ofNat 107) let39)
  let let138 := (Neg.neg let137)
  let let139 := (binrel% HMul.hMul let138 let30)
  let let140 := (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let139 let136)))))))))
  let let141 := (binrel% HMul.hMul let138 let97)
  let let142 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x6x5fminus let34))))
  let let143 := (binrel% HMul.hMul let41 let142)
  let let144 := (binrel% HMul.hMul let32 let35)
  let let145 := (binrel% HMul.hMul let90 let26)
  let let146 := (binrel% HMul.hMul let100 let18)
  let let147 := (binrel% HMul.hMul let72 let6)
  let let148 := (binrel% HMul.hMul let117 let83)
  let let149 := (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let141 let79)))))))))
  let let150 := (binrel% GE.ge let149 let140)
  let let151 := (Not let150)
  let let152 := (binrel% LT.lt let149 let140)
  let let153 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let128 let127))))
  let let154 := (binrel% HAdd.hAdd (binrel% HMul.hMul let138 x9x5fplus) (binrel% HMul.hMul let137 x9x5fminus))
  let let155 := (binrel% GE.ge let89 let89)
  let let156 := (Eq let7 let7)
  let let157 := (binrel% LE.le let26 let30)
  let let158 := (binrel% LT.lt let71 let30)
  let let159 := (binrel% LE.le let54 let30)
  let let160 := (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x1x5fplus) (binrel% HMul.hMul let40 x1x5fminus))))))))
  let let161 := (Neg.neg let32)
  let let162 := (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let161 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let161 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let161 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x1x5fplus) (binrel% HMul.hMul let161 x1x5fminus))))))))
  let let163 := (Neg.neg let90)
  let let164 := (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x1x5fplus) (binrel% HMul.hMul let90 x1x5fminus))))))))
  let let165 := (Neg.neg let100)
  let let166 := (binrel% HDiv.hDiv let12 let31)
  let let167 := (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let165 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let165 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let166 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let166) x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x1x5fplus) (binrel% HMul.hMul let165 x1x5fminus))))))))
  let let168 := (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x4x5fplus) (binrel% HMul.hMul let72 x4x5fminus))))))
  let let169 := (Rat.ofInt let83)
  let let170 := (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let162 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let154 let74)))))))))
  let let171 := (Eq let55 let57)
  let let172 := (binrel% LE.le let83 let30)
  let let173 := (Not let172)
  let let174 := (binrel% GT.gt let83 let30)
  let let175 := (Eq let174 let173)
  let let176 := (Not True)
  let let177 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 let34))))
  let let178 := (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let89 let71)))))))))
  let let179 := (binrel% LT.lt let138 let30)
  let let180 := (binrel% GE.ge let98 let30)
  let let181 := (binrel% HMul.hMul let2 x8x5fminus)
  let let182 := (binrel% HMul.hMul let2 x7x5fplus)
  let let183 := (binrel% LE.le let123 let30)
  let let184 := (binrel% LE.le let177 let30)
  let let185 := (binrel% LE.le let153 let1)
  let let186 := (binrel% LE.le let99 let30)
  let let187 := (binrel% HMul.hMul let2 x4x5fminus)
  let let188 := (binrel% HAdd.hAdd x2x5fplus let51)
  let let189 := (binrel% HAdd.hAdd x4x5fplus let187)
  let let190 := (binrel% HMul.hMul let2 x8x5fplus)
  let let191 := (binrel% GE.ge let142 let1)
  let let192 := (binrel% GE.ge let78 let1)
  let let193 := (binrel% GE.ge let97 let30)
  let let194 := (Not let192)
  let let195 := (Not let191)
  let let196 := (Not let125)
  let let197 := (Not let193)
  let let198 := (Or let194 (Or let197 (Or let196 (Or let55 (Or let195 (Or let36 (Or let27 (Or let19 (Or let7 let84)))))))))
  let let199 := (Or let194 (Or let197 (Or let196 (Or let57 (Or let195 (Or let43 (Or let46 (Or let59 (Or let63 let86)))))))))
  let let200 := (binrel% LE.le let79 let136)
  let let201 := (And let158 let192)
  let let202 := (binrel% LE.le let141 let139)
  let let203 := (And let179 let193)
  let let204 := (binrel% LE.le let108 let132)
  let let205 := (And let68 let125)
  let let206 := (binrel% LE.le let112 let121)
  let let207 := (And let116 let159)
  let let208 := (binrel% LE.le let143 let45)
  let let209 := (And let42 let191)
  let let210 := (binrel% LE.le let144 let114)
  let let211 := (And let33 let115)
  let let212 := (binrel% LE.le let145 let91)
  let let213 := (And let96 let157)
  let let214 := (binrel% LE.le let146 let101)
  let let215 := (And let122 let134)
  let let216 := (binrel% LT.lt let147 let94)
  let let217 := (And let133 let9)
  let let218 := (binrel% LE.le let148 let118)
  let let219 := (And let124 let172)
(Eq let9 let8) → (Eq let21 let20) → (Eq let29 let28) → (Eq let33 True) → (Eq let38 let37) → (Eq let42 True) → let44 → (Eq let45 let41) → (Eq let48 let47) → let58 → let48 → (Eq let61 let60) → (Eq let62 True) → let64 → (Eq let65 let8) → (Eq let68 True) → (Eq let79 let74) → (Eq let88 let87) → (Eq let91 let89) → (Eq let92 True) → (Eq let93 let56) → (Eq let94 let72) → (Eq let95 True) → (Eq let96 True) → (Eq let98 let97) → (Eq let99 let26) → (Eq let101 let89) → (Eq let64 let102) → (Eq let108 let104) → (Eq let112 let111) → (Eq let44 let113) → (Eq let114 let89) → (Eq let115 let37) → (Eq let116 True) → (Eq let118 let89) → (Eq let119 True) → (Eq let120 True) → (Eq let121 let89) → (Eq let122 True) → (Eq let123 let83) → (Eq let124 True) → let88 → (Eq let131 let125) → (Eq let132 let66) → (Eq let133 True) → (Eq let134 let20) → (Eq let135 let85) → (Eq let152 let151) → (Eq let153 let130) → (Eq let141 let154) → (Eq let155 True) → (Eq let156 True) → (Eq let157 let28) → (Eq let158 True) → (Eq let159 let56) → (Eq let170 let89) → (Eq let58 let171) → let175 → (Eq let172 let85) → (Eq let176 False) → (Eq let139 let89) → (Eq let136 let71) → (Eq let177 let35) → (Eq let143 let160) → (Eq let144 let162) → (Eq let145 let164) → (Eq let178 let89) → (Eq let146 let167) → (Eq let147 let168) → (Eq let148 let169) → let61 → (Eq let179 True) → (binrel% GE.ge x7x5fplus let30) → (binrel% GE.ge x7x5fminus let30) → (binrel% GE.ge x9x5fplus let30) → (binrel% GE.ge x9x5fminus let30) → (binrel% GE.ge x8x5fplus let30) → (binrel% GE.ge x8x5fminus let30) → (binrel% GE.ge x6x5fplus let30) → (binrel% GE.ge x6x5fminus let30) → (binrel% GE.ge x5x5fplus let30) → (binrel% GE.ge x5x5fminus let30) → (binrel% GE.ge x4x5fplus let30) → (binrel% GE.ge x4x5fminus let30) → (binrel% GE.ge x3x5fplus let30) → (binrel% GE.ge x3x5fminus let30) → (binrel% GE.ge x2x5fplus let30) → (binrel% GE.ge x2x5fminus let30) → (binrel% GE.ge x0x5fplus let30) → (binrel% GE.ge x0x5fminus let30) → (binrel% GE.ge x1x5fplus let30) → (binrel% GE.ge x1x5fminus let30) → (binrel% LE.le (binrel% HSub.hSub x7x5fplus x7x5fminus) let30) → let180 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let75)))))))))))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let10 let50)))))))))))) let30) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 let53)))) let30) → let183 → let184 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fminus let11)))))) let2) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let69) x2x5fminus) let75)))))) let30) → let134 → let185 → let186 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let187 (binrel% HAdd.hAdd x3x5fplus let52))))))) let30) → let159 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x0x5fplus) (binrel% HMul.hMul let13 x0x5fminus)))))) let30) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x6x5fminus let188)))) let30) → let65 → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 let75)) let30) → (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let187 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x3x5fplus) (binrel% HMul.hMul let12 x3x5fminus)))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 let189)) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let187 let188)))))))))) let30) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let50)))))))) let2) → let191 → let192 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let17 let189)))))) let30) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x5x5fminus let76)))) let30) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x6x5fminus let23)))) let30) → (binrel% GE.ge (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let17 let50)))) let2) → (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x6x5fminus) (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let51 let75)))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fminus let50)))) let30) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let16 x3x5fminus))))) let30) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus let25))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let15 let14))))) let30) → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let80 x2x5fminus))) let30) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x1x5fplus) (binrel% HMul.hMul let12 x1x5fminus)))) let2) → False :=
  let let1 := (Int.ofNat 1)
  let let2 := (Neg.neg let1)
  let let3 := (binrel% HMul.hMul let2 x4x5fplus)
  let let4 := (binrel% HMul.hMul let2 x5x5fplus)
  let let5 := (binrel% HMul.hMul let2 x9x5fminus)
  let let6 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let3 x4x5fminus)))))
  let let7 := (binrel% GE.ge let6 let1)
  let let8 := (Not let7)
  let let9 := (binrel% LT.lt let6 let1)
  let let10 := (binrel% HMul.hMul let2 x1x5fminus)
  let let11 := (binrel% HAdd.hAdd x1x5fplus let10)
  let let12 := (Int.ofNat 2)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HMul.hMul let13 x2x5fminus)
  let let15 := (binrel% HMul.hMul let12 x2x5fplus)
  let let16 := (binrel% HMul.hMul let2 x3x5fplus)
  let let17 := (binrel% HMul.hMul let2 x5x5fminus)
  let let18 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let14 let11))))))
  let let19 := (binrel% GE.ge let18 let1)
  let let20 := (Not let19)
  let let21 := (binrel% LT.lt let18 let1)
  let let22 := (binrel% HMul.hMul let2 x1x5fplus)
  let let23 := (binrel% HAdd.hAdd let22 x1x5fminus)
  let let24 := (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fminus let23))
  let let25 := (binrel% HMul.hMul let2 x7x5fminus)
  let let26 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 let24))))
  let let27 := (binrel% GE.ge let26 let1)
  let let28 := (Not let27)
  let let29 := (binrel% LT.lt let26 let1)
  let let30 := (Int.ofNat 0)
  let let31 := (Int.ofNat 5)
  let let32 := (binrel% HDiv.hDiv (Int.ofNat 19) let31)
  let let33 := (binrel% GT.gt let32 let30)
  let let34 := (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x5x5fminus let11))
  let let35 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 let34))))
  let let36 := (binrel% GE.ge let35 let1)
  let let37 := (Not let36)
  let let38 := (binrel% LT.lt let35 let1)
  let let39 := (Int.ofNat 15)
  let let40 := (binrel% HDiv.hDiv (Int.ofNat 34) let39)
  let let41 := (Neg.neg let40)
  let let42 := (binrel% LT.lt let41 let30)
  let let43 := (Not let37)
  let let44 := (Eq let43 let36)
  let let45 := (binrel% HMul.hMul let41 let1)
  let let46 := (Not let28)
  let let47 := (Eq let27 let46)
  let let48 := (Eq let46 let27)
  let let49 := (binrel% HMul.hMul let2 x0x5fminus)
  let let50 := (binrel% HAdd.hAdd x0x5fplus let49)
  let let51 := (binrel% HMul.hMul let2 x2x5fminus)
  let let52 := (binrel% HMul.hMul let2 x3x5fminus)
  let let53 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let51 let50))))
  let let54 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 let53))
  let let55 := (binrel% GE.ge let54 let1)
  let let56 := (Not let55)
  let let57 := (Not let56)
  let let58 := (Eq let57 let55)
  let let59 := (Not let20)
  let let60 := (Eq let19 let59)
  let let61 := (Eq let59 let19)
  let let62 := (Eq let19 let19)
  let let63 := (Not let8)
  let let64 := (Eq let63 let7)
  let let65 := (binrel% LE.le let6 let30)
  let let66 := (binrel% HDiv.hDiv (Int.ofNat 29) let39)
  let let67 := (Neg.neg let66)
  let let68 := (binrel% LT.lt let67 let30)
  let let69 := (Int.ofNat 3)
  let let70 := (binrel% HDiv.hDiv let1 let69)
  let let71 := (Neg.neg let70)
  let let72 := (binrel% HDiv.hDiv let12 let69)
  let let73 := (Neg.neg let72)
  let let74 := (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let71 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let70 x0x5fplus) (binrel% HMul.hMul let71 x0x5fminus))))))))
  let let75 := (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x0x5fplus) x0x5fminus)
  let let76 := (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fminus let75))
  let let77 := (binrel% HMul.hMul let2 x6x5fminus)
  let let78 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x4x5fminus) let76))))
  let let79 := (binrel% HMul.hMul let71 let78)
  let let80 := (binrel% HMul.hMul let2 x2x5fplus)
  let let81 := (binrel% HMul.hMul let13 x5x5fminus)
  let let82 := (binrel% HMul.hMul let12 x5x5fplus)
  let let83 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let49 let23))))))))
  let let84 := (binrel% GE.ge let83 let1)
  let let85 := (Not let84)
  let let86 := (Not let85)
  let let87 := (Eq let84 let86)
  let let88 := (Eq let86 let84)
  let let89 := (Rat.ofInt 0)
  let let90 := (binrel% HDiv.hDiv (Int.ofNat 11) let39)
  let let91 := (binrel% HMul.hMul let90 let30)
  let let92 := (Eq let55 let55)
  let let93 := (binrel% LT.lt let54 let1)
  let let94 := (binrel% HMul.hMul let72 let1)
  let let95 := (Eq let27 let27)
  let let96 := (binrel% GT.gt let90 let30)
  let let97 := (binrel% HAdd.hAdd x9x5fplus let5)
  let let98 := (binrel% HSub.hSub x9x5fplus x9x5fminus)
  let let99 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 let24))))
  let let100 := (binrel% HDiv.hDiv let1 let31)
  let let101 := (binrel% HMul.hMul let100 let30)
  let let102 := (Eq let7 let63)
  let let103 := (binrel% HDiv.hDiv (Int.ofNat 58) let39)
  let let104 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let103) x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x0x5fplus) (binrel% HMul.hMul let66 x0x5fminus))))))))
  let let105 := (binrel% HMul.hMul let13 x7x5fminus)
  let let106 := (binrel% HMul.hMul let12 x7x5fplus)
  let let107 := (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x9x5fplus) (binrel% HAdd.hAdd x9x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 let50))))))
  let let108 := (binrel% HMul.hMul let67 let107)
  let let109 := (binrel% HDiv.hDiv let69 let31)
  let let110 := (Neg.neg let109)
  let let111 := (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let109 x0x5fplus) (binrel% HMul.hMul let110 x0x5fminus))))))))
  let let112 := (binrel% HMul.hMul let109 let54)
  let let113 := (Eq let36 let43)
  let let114 := (binrel% HMul.hMul let32 let30)
  let let115 := (binrel% LE.le let35 let30)
  let let116 := (binrel% GT.gt let109 let30)
  let let117 := (Rat.ofInt 1)
  let let118 := (binrel% HMul.hMul let117 let30)
  let let119 := (Eq let36 let36)
  let let120 := (Eq let84 let84)
  let let121 := (binrel% HMul.hMul let109 let30)
  let let122 := (binrel% GT.gt let100 let30)
  let let123 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd x1x5fminus let50))))))))
  let let124 := (binrel% GT.gt let117 let30)
  let let125 := (binrel% GE.ge let107 let2)
  let let126 := (binrel% HMul.hMul let2 x6x5fplus)
  let let127 := (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x6x5fminus let75))
  let let128 := (binrel% HMul.hMul let12 x7x5fminus)
  let let129 := (binrel% HMul.hMul let13 x7x5fplus)
  let let130 := (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let128 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 let127))))
  let let131 := (binrel% LE.le let130 let1)
  let let132 := (binrel% HMul.hMul let67 let2)
  let let133 := (binrel% GT.gt let72 let30)
  let let134 := (binrel% LE.le let18 let30)
  let let135 := (binrel% LT.lt let83 let1)
  let let136 := (binrel% HMul.hMul let71 let1)
  let let137 := (binrel% HDiv.hDiv (Int.ofNat 107) let39)
  let let138 := (Neg.neg let137)
  let let139 := (binrel% HMul.hMul let138 let30)
  let let140 := (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let139 let136)))))))))
  let let141 := (binrel% HMul.hMul let138 let97)
  let let142 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x6x5fminus let34))))
  let let143 := (binrel% HMul.hMul let41 let142)
  let let144 := (binrel% HMul.hMul let32 let35)
  let let145 := (binrel% HMul.hMul let90 let26)
  let let146 := (binrel% HMul.hMul let100 let18)
  let let147 := (binrel% HMul.hMul let72 let6)
  let let148 := (binrel% HMul.hMul let117 let83)
  let let149 := (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let141 let79)))))))))
  let let150 := (binrel% GE.ge let149 let140)
  let let151 := (Not let150)
  let let152 := (binrel% LT.lt let149 let140)
  let let153 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd let128 let127))))
  let let154 := (binrel% HAdd.hAdd (binrel% HMul.hMul let138 x9x5fplus) (binrel% HMul.hMul let137 x9x5fminus))
  let let155 := (binrel% GE.ge let89 let89)
  let let156 := (Eq let7 let7)
  let let157 := (binrel% LE.le let26 let30)
  let let158 := (binrel% LT.lt let71 let30)
  let let159 := (binrel% LE.le let54 let30)
  let let160 := (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let40 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let41 x1x5fplus) (binrel% HMul.hMul let40 x1x5fminus))))))))
  let let161 := (Neg.neg let32)
  let let162 := (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let161 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let161 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let161 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let32 x1x5fplus) (binrel% HMul.hMul let161 x1x5fminus))))))))
  let let163 := (Neg.neg let90)
  let let164 := (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let90 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x1x5fplus) (binrel% HMul.hMul let90 x1x5fminus))))))))
  let let165 := (Neg.neg let100)
  let let166 := (binrel% HDiv.hDiv let12 let31)
  let let167 := (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let165 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let165 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let166 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let166) x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let100 x1x5fplus) (binrel% HMul.hMul let165 x1x5fminus))))))))
  let let168 := (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x4x5fplus) (binrel% HMul.hMul let72 x4x5fminus))))))
  let let169 := (Rat.ofInt let83)
  let let170 := (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let162 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let154 let74)))))))))
  let let171 := (Eq let55 let57)
  let let172 := (binrel% LE.le let83 let30)
  let let173 := (Not let172)
  let let174 := (binrel% GT.gt let83 let30)
  let let175 := (Eq let174 let173)
  let let176 := (Not True)
  let let177 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 let34))))
  let let178 := (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let89 let71)))))))))
  let let179 := (binrel% LT.lt let138 let30)
  let let180 := (binrel% GE.ge let98 let30)
  let let181 := (binrel% HMul.hMul let2 x8x5fminus)
  let let182 := (binrel% HMul.hMul let2 x7x5fplus)
  let let183 := (binrel% LE.le let123 let30)
  let let184 := (binrel% LE.le let177 let30)
  let let185 := (binrel% LE.le let153 let1)
  let let186 := (binrel% LE.le let99 let30)
  let let187 := (binrel% HMul.hMul let2 x4x5fminus)
  let let188 := (binrel% HAdd.hAdd x2x5fplus let51)
  let let189 := (binrel% HAdd.hAdd x4x5fplus let187)
  let let190 := (binrel% HMul.hMul let2 x8x5fplus)
  let let191 := (binrel% GE.ge let142 let1)
  let let192 := (binrel% GE.ge let78 let1)
  let let193 := (binrel% GE.ge let97 let30)
  let let194 := (Not let192)
  let let195 := (Not let191)
  let let196 := (Not let125)
  let let197 := (Not let193)
  let let198 := (Or let194 (Or let197 (Or let196 (Or let55 (Or let195 (Or let36 (Or let27 (Or let19 (Or let7 let84)))))))))
  let let199 := (Or let194 (Or let197 (Or let196 (Or let57 (Or let195 (Or let43 (Or let46 (Or let59 (Or let63 let86)))))))))
  let let200 := (binrel% LE.le let79 let136)
  let let201 := (And let158 let192)
  let let202 := (binrel% LE.le let141 let139)
  let let203 := (And let179 let193)
  let let204 := (binrel% LE.le let108 let132)
  let let205 := (And let68 let125)
  let let206 := (binrel% LE.le let112 let121)
  let let207 := (And let116 let159)
  let let208 := (binrel% LE.le let143 let45)
  let let209 := (And let42 let191)
  let let210 := (binrel% LE.le let144 let114)
  let let211 := (And let33 let115)
  let let212 := (binrel% LE.le let145 let91)
  let let213 := (And let96 let157)
  let let214 := (binrel% LE.le let146 let101)
  let let215 := (And let122 let134)
  let let216 := (binrel% LT.lt let147 let94)
  let let217 := (And let133 let9)
  let let218 := (binrel% LE.le let148 let118)
  let let219 := (And let124 let172)
fun lean_r0 : (Eq let9 let8) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let21 let20) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let29 let28) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let33 True) => -- EVALUATE
fun lean_r4 : (Eq let38 let37) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let42 True) => -- EVALUATE
fun lean_r6 : let44 => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq let45 let41) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let48 let47) => -- THEORY_REWRITE_BOOL
fun lean_r9 : let58 => -- THEORY_REWRITE_BOOL
fun lean_r10 : let48 => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let61 let60) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let62 True) => -- THEORY_REWRITE_BOOL
fun lean_r13 : let64 => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let65 let8) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let68 True) => -- EVALUATE
fun lean_r16 : (Eq let79 let74) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let88 let87) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let91 let89) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let92 True) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let93 let56) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let94 let72) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let95 True) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let96 True) => -- EVALUATE
fun lean_r24 : (Eq let98 let97) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let99 let26) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let101 let89) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let64 let102) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let108 let104) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let112 let111) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let44 let113) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let114 let89) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let115 let37) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let116 True) => -- EVALUATE
fun lean_r34 : (Eq let118 let89) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let119 True) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let120 True) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq let121 let89) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let122 True) => -- EVALUATE
fun lean_r39 : (Eq let123 let83) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let124 True) => -- EVALUATE
fun lean_r41 : let88 => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq let131 let125) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let132 let66) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let133 True) => -- EVALUATE
fun lean_r45 : (Eq let134 let20) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let135 let85) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let152 let151) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let153 let130) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let141 let154) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let155 True) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let156 True) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let157 let28) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let158 True) => -- EVALUATE
fun lean_r54 : (Eq let159 let56) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let170 let89) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let58 let171) => -- THEORY_REWRITE_BOOL
fun lean_r57 : let175 => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let172 let85) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let176 False) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let139 let89) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let136 let71) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let177 let35) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let143 let160) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let144 let162) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let145 let164) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let178 let89) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let146 let167) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let147 let168) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let148 let169) => -- THEORY_REWRITE_ARITH
fun lean_r70 : let61 => -- THEORY_REWRITE_BOOL
fun lean_r71 : (Eq let179 True) => -- EVALUATE
fun lean_a72 : (binrel% GE.ge x7x5fplus let30) =>
fun lean_a73 : (binrel% GE.ge x7x5fminus let30) =>
fun lean_a74 : (binrel% GE.ge x9x5fplus let30) =>
fun lean_a75 : (binrel% GE.ge x9x5fminus let30) =>
fun lean_a76 : (binrel% GE.ge x8x5fplus let30) =>
fun lean_a77 : (binrel% GE.ge x8x5fminus let30) =>
fun lean_a78 : (binrel% GE.ge x6x5fplus let30) =>
fun lean_a79 : (binrel% GE.ge x6x5fminus let30) =>
fun lean_a80 : (binrel% GE.ge x5x5fplus let30) =>
fun lean_a81 : (binrel% GE.ge x5x5fminus let30) =>
fun lean_a82 : (binrel% GE.ge x4x5fplus let30) =>
fun lean_a83 : (binrel% GE.ge x4x5fminus let30) =>
fun lean_a84 : (binrel% GE.ge x3x5fplus let30) =>
fun lean_a85 : (binrel% GE.ge x3x5fminus let30) =>
fun lean_a86 : (binrel% GE.ge x2x5fplus let30) =>
fun lean_a87 : (binrel% GE.ge x2x5fminus let30) =>
fun lean_a88 : (binrel% GE.ge x0x5fplus let30) =>
fun lean_a89 : (binrel% GE.ge x0x5fminus let30) =>
fun lean_a90 : (binrel% GE.ge x1x5fplus let30) =>
fun lean_a91 : (binrel% GE.ge x1x5fminus let30) =>
fun lean_a92 : (binrel% LE.le (binrel% HSub.hSub x7x5fplus x7x5fminus) let30) =>
fun lean_a93 : let180 =>
fun lean_a94 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let75)))))))))))))) let1) =>
fun lean_a95 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let10 let50)))))))))))) let30) =>
fun lean_a96 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 let53)))) let30) =>
fun lean_a97 : let183 =>
fun lean_a98 : let184 =>
fun lean_a99 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fminus let11)))))) let2) =>
fun lean_a100 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd (binrel% HMul.hMul let69 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let69) x2x5fminus) let75)))))) let30) =>
fun lean_a101 : let134 =>
fun lean_a102 : let185 =>
fun lean_a103 : let186 =>
fun lean_a104 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let187 (binrel% HAdd.hAdd x3x5fplus let52))))))) let30) =>
fun lean_a105 : let159 =>
fun lean_a106 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x0x5fplus) (binrel% HMul.hMul let13 x0x5fminus)))))) let30) =>
fun lean_a107 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x6x5fminus let188)))) let30) =>
fun lean_a108 : let65 =>
fun lean_a109 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 let75)) let30) =>
fun lean_a110 : (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let187 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x3x5fplus) (binrel% HMul.hMul let12 x3x5fminus)))) let1) =>
fun lean_a111 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 let189)) let1) =>
fun lean_a112 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let187 let188)))))))))) let30) =>
fun lean_a113 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let50)))))))) let2) =>
fun lean_a114 : let191 =>
fun lean_a115 : let192 =>
fun lean_a116 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let17 let189)))))) let30) =>
fun lean_a117 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd x5x5fminus let76)))) let30) =>
fun lean_a118 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd x6x5fminus let23)))) let30) =>
fun lean_a119 : (binrel% GE.ge (binrel% HAdd.hAdd let106 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let17 let50)))) let2) =>
fun lean_a120 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x6x5fminus) (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let51 let75)))) let1) =>
fun lean_a121 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fminus let50)))) let30) =>
fun lean_a122 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let16 x3x5fminus))))) let30) =>
fun lean_a123 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus let25))))) let1) =>
fun lean_a124 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let15 let14))))) let30) =>
fun lean_a125 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let80 x2x5fminus))) let30) =>
fun lean_a126 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x1x5fplus) (binrel% HMul.hMul let12 x1x5fminus)))) let2) => by
have lean_s0 : (Or let194 (Or let197 (Or let196 (Or let57 (Or let195 (Or let43 (Or let46 (Or let59 (Or let63 (Or let86 False)))))))))) :=
  (scope (fun lean_a127 : let192 =>
    (scope (fun lean_a128 : let193 =>
      (scope (fun lean_a129 : let125 =>
        (scope (fun lean_a130 : let56 =>
          (scope (fun lean_a131 : let191 =>
            (scope (fun lean_a132 : let37 =>
              (scope (fun lean_a133 : let28 =>
                (scope (fun lean_a134 : let20 =>
                  (scope (fun lean_a135 : let8 =>
                    (scope (fun lean_a136 : let85 =>
                      let lean_s0 := by timed flipCongrArg lean_r39 [LE.le]
                      have lean_s1 : (Eq let30 let30) := by timed rfl
                      have lean_s2 : (Eq let183 let172) := by timed congr lean_s0 lean_s1
                      have lean_s3 : (Eq let183 let85) := by timed Eq.trans lean_s2 lean_r58
                      have lean_s4 : let85 := by timed eqResolve lean_a97 lean_s3
                      have lean_s5 : (Eq let85 let135) := by timed Eq.symm lean_r46
                      have lean_s6 : let135 := by timed eqResolve lean_s4 lean_s5
                      have lean_s7 : let172 := by intTightUb lean_s6
                      have lean_s8 : (Or let173 False) :=
                        (scope (fun lean_a135 : let172 =>
                          have lean_s8 : let124 := by timed trueElim lean_r40
                          have lean_s9 : let219 := by timed And.intro lean_s8 lean_a135
                          have lean_s10 : (Implies let219 let218) := by arithMulPos [let83, let30, let117], 1
                          have lean_s11 : let218 := by timed modusPonens lean_s9 lean_s10
                          have lean_s12 : let133 := by timed trueElim lean_r44
                          have lean_s13 : let8 := by timed eqResolve lean_a108 lean_r14
                          have lean_s14 : (Eq let8 let9) := by timed Eq.symm lean_r0
                          have lean_s15 : let9 := by timed eqResolve lean_s13 lean_s14
                          have lean_s16 : let217 := by timed And.intro lean_s12 lean_s15
                          have lean_s17 : (Implies let217 let216) := by arithMulPos [let6, let1, let72], 0
                          have lean_s18 : let216 := by timed modusPonens lean_s16 lean_s17
                          have lean_s19 : let122 := by timed trueElim lean_r38
                          have lean_s20 : let20 := by timed eqResolve lean_a101 lean_r45
                          have lean_s21 : (Eq let20 let21) := by timed Eq.symm lean_r1
                          have lean_s22 : let21 := by timed eqResolve lean_s20 lean_s21
                          have lean_s23 : let134 := by intTightUb lean_s22
                          have lean_s24 : let215 := by timed And.intro lean_s19 lean_s23
                          have lean_s25 : (Implies let215 let214) := by arithMulPos [let18, let30, let100], 1
                          have lean_s26 : let214 := by timed modusPonens lean_s24 lean_s25
                          have lean_s27 : let96 := by timed trueElim lean_r23
                          let lean_s28 := by timed flipCongrArg lean_r25 [LE.le]
                          have lean_s29 : (Eq let186 let157) := by timed congr lean_s28 lean_s1
                          have lean_s30 : (Eq let186 let28) := by timed Eq.trans lean_s29 lean_r52
                          have lean_s31 : let28 := by timed eqResolve lean_a103 lean_s30
                          have lean_s32 : (Eq let28 let29) := by timed Eq.symm lean_r2
                          have lean_s33 : let29 := by timed eqResolve lean_s31 lean_s32
                          have lean_s34 : let157 := by intTightUb lean_s33
                          have lean_s35 : let213 := by timed And.intro lean_s27 lean_s34
                          have lean_s36 : (Implies let213 let212) := by arithMulPos [let26, let30, let90], 1
                          have lean_s37 : let212 := by timed modusPonens lean_s35 lean_s36
                          have lean_s38 : let33 := by timed trueElim lean_r3
                          let lean_s39 := by timed flipCongrArg lean_r62 [LE.le]
                          have lean_s40 : (Eq let184 let115) := by timed congr lean_s39 lean_s1
                          have lean_s41 : (Eq let184 let37) := by timed Eq.trans lean_s40 lean_r32
                          have lean_s42 : let37 := by timed eqResolve lean_a98 lean_s41
                          have lean_s43 : (Eq let37 let38) := by timed Eq.symm lean_r4
                          have lean_s44 : let38 := by timed eqResolve lean_s42 lean_s43
                          have lean_s45 : let115 := by intTightUb lean_s44
                          have lean_s46 : let211 := by timed And.intro lean_s38 lean_s45
                          have lean_s47 : (Implies let211 let210) := by arithMulPos [let35, let30, let32], 1
                          have lean_s48 : let210 := by timed modusPonens lean_s46 lean_s47
                          have lean_s49 : let42 := by timed trueElim lean_r5
                          have lean_s50 : let209 := by timed And.intro lean_s49 lean_a131
                          have lean_s51 : (Implies let209 let208) := by arithMulNeg [let142, let1, let41], 3
                          have lean_s52 : let208 := by timed modusPonens lean_s50 lean_s51
                          have lean_s53 : let116 := by timed trueElim lean_r33
                          have lean_s54 : let56 := by timed eqResolve lean_a105 lean_r54
                          have lean_s55 : (Eq let56 let93) := by timed Eq.symm lean_r20
                          have lean_s56 : let93 := by timed eqResolve lean_s54 lean_s55
                          have lean_s57 : let159 := by intTightUb lean_s56
                          have lean_s58 : let207 := by timed And.intro lean_s53 lean_s57
                          have lean_s59 : (Implies let207 let206) := by arithMulPos [let54, let30, let109], 1
                          have lean_s60 : let206 := by timed modusPonens lean_s58 lean_s59
                          have lean_s61 : let68 := by timed trueElim lean_r15
                          let lean_s62 := by timed flipCongrArg lean_r48 [LE.le]
                          have lean_s63 : (Eq let1 let1) := by timed rfl
                          have lean_s64 : (Eq let185 let131) := by timed congr lean_s62 lean_s63
                          have lean_s65 : (Eq let185 let125) := by timed Eq.trans lean_s64 lean_r42
                          have lean_s66 : let125 := by timed eqResolve lean_a102 lean_s65
                          have lean_s67 : let205 := by timed And.intro lean_s61 lean_s66
                          have lean_s68 : (Implies let205 let204) := by arithMulNeg [let107, let2, let67], 3
                          have lean_s69 : let204 := by timed modusPonens lean_s67 lean_s68
                          have lean_s70 : let179 := by timed trueElim lean_r71
                          let lean_s71 := by timed flipCongrArg lean_r24 [GE.ge]
                          have lean_s72 : (Eq let180 let193) := by timed congr lean_s71 lean_s1
                          have lean_s73 : let193 := by timed eqResolve lean_a93 lean_s72
                          have lean_s74 : let203 := by timed And.intro lean_s70 lean_s73
                          have lean_s75 : (Implies let203 let202) := by arithMulNeg [let97, let30, let138], 3
                          have lean_s76 : let202 := by timed modusPonens lean_s74 lean_s75
                          have lean_s77 : let158 := by timed trueElim lean_r53
                          have lean_s78 : let201 := by timed And.intro lean_s77 lean_a127
                          have lean_s79 : (Implies let201 let200) := by arithMulNeg [let78, let1, let71], 3
                          have lean_s80 : let200 := by timed modusPonens lean_s78 lean_s79
                          have lean_s81 : let152 := by sumBounds [lean_s11, lean_s18, lean_s26, lean_s37, lean_s48, lean_s52, lean_s60, lean_s69, lean_s76, lean_s80]
                          let lean_s82 := by timed congrHAdd lean_r49 lean_r16
                          let lean_s83 := by timed congrHAdd lean_r28 lean_s82
                          let lean_s84 := by timed congrHAdd lean_r29 lean_s83
                          let lean_s85 := by timed congrHAdd lean_r63 lean_s84
                          let lean_s86 := by timed congrHAdd lean_r64 lean_s85
                          let lean_s87 := by timed congrHAdd lean_r65 lean_s86
                          let lean_s88 := by timed congrHAdd lean_r67 lean_s87
                          let lean_s89 := by timed congrHAdd lean_r68 lean_s88
                          have lean_s90 : (Eq let149 let170) := by timed congrHAdd lean_r69 lean_s89
                          have lean_s91 : (Eq let149 let89) := by timed Eq.trans lean_s90 lean_r55
                          let lean_s92 := by timed flipCongrArg lean_s91 [GE.ge]
                          let lean_s93 := by timed congrHAdd lean_r60 lean_r61
                          let lean_s94 := by timed congrHAdd lean_r43 lean_s93
                          let lean_s95 := by timed congrHAdd lean_r37 lean_s94
                          let lean_s96 := by timed congrHAdd lean_r7 lean_s95
                          let lean_s97 := by timed congrHAdd lean_r31 lean_s96
                          let lean_s98 := by timed congrHAdd lean_r18 lean_s97
                          let lean_s99 := by timed congrHAdd lean_r26 lean_s98
                          let lean_s100 := by timed congrHAdd lean_r21 lean_s99
                          have lean_s101 : (Eq let140 let178) := by timed congrHAdd lean_r34 lean_s100
                          have lean_s102 : (Eq let140 let89) := by timed Eq.trans lean_s101 lean_r66
                          have lean_s103 : (Eq let150 let155) := by timed congr lean_s92 lean_s102
                          have lean_s104 : (Eq let150 True) := by timed Eq.trans lean_s103 lean_r50
                          have lean_s105 : (Eq let151 let176) := by timed flipCongrArg lean_s104 [Not]
                          have lean_s106 : (Eq let151 False) := by timed Eq.trans lean_s105 lean_r59
                          have lean_s107 : (Eq let152 False) := by timed Eq.trans lean_r47 lean_s106
                          show False from by timed eqResolve lean_s81 lean_s107
                        ))
                      have lean_s9 : let173 := by liftOrNToNeg lean_s8
                      have lean_s10 : (Eq let173 let86) := by timed flipCongrArg lean_r58 [Not]
                      have lean_s11 : (Eq let173 let84) := by timed Eq.trans lean_s10 lean_r41
                      have lean_s12 : (Eq let174 let84) := by timed Eq.trans lean_r57 lean_s11
                      have lean_s13 : (Eq let84 let174) := by timed Eq.symm lean_s12
                      have lean_s14 : (Eq let173 let174) := by timed Eq.trans lean_s11 lean_s13
                      have lean_s15 : let174 := by timed eqResolve lean_s9 lean_s14
                      have lean_s16 : (Eq let84 let173) := by timed Eq.symm lean_s11
                      have lean_s17 : let175 := by timed Eq.trans lean_s12 lean_s16
                      have lean_s18 : let173 := by timed eqResolve lean_s15 lean_s17
                      show False from by timed contradiction lean_s7 lean_s18
  ))))))))))))))))))))
have lean_s1 : (Not (And let192 (And let193 (And let125 (And let56 (And let191 (And let37 (And let28 (And let20 (And let8 let85)))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let199 := by timed flipNotAnd lean_s1 [let192, let193, let125, let56, let191, let37, let28, let20, let8, let85]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq let194 let194) := by timed rfl
let lean_s5 := by timed congr lean_s3 lean_s4
have lean_s6 : (Eq let197 let197) := by timed rfl
let lean_s7 := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq let196 let196) := by timed rfl
let lean_s9 := by timed congr lean_s3 lean_s8
have lean_s10 : let92 := by timed rfl
let lean_s11 := by timed flipCongrArg lean_s10 [Eq]
have lean_s12 : (Eq let171 let92) := by timed congr lean_s11 lean_r9
have lean_s13 : (Eq let171 True) := by timed Eq.trans lean_s12 lean_r19
have lean_s14 : (Eq let58 True) := by timed Eq.trans lean_r56 lean_s13
have lean_s15 : let58 := by timed trueElim lean_s14
let lean_s16 := by timed congr lean_s3 lean_s15
have lean_s17 : (Eq let195 let195) := by timed rfl
let lean_s18 := by timed congr lean_s3 lean_s17
have lean_s19 : let119 := by timed rfl
let lean_s20 := by timed flipCongrArg lean_s19 [Eq]
have lean_s21 : (Eq let113 let119) := by timed congr lean_s20 lean_r6
have lean_s22 : (Eq let113 True) := by timed Eq.trans lean_s21 lean_r35
have lean_s23 : (Eq let44 True) := by timed Eq.trans lean_r30 lean_s22
have lean_s24 : let44 := by timed trueElim lean_s23
let lean_s25 := by timed congr lean_s3 lean_s24
have lean_s26 : let95 := by timed rfl
let lean_s27 := by timed flipCongrArg lean_s26 [Eq]
have lean_s28 : (Eq let47 let95) := by timed congr lean_s27 lean_r10
have lean_s29 : (Eq let47 True) := by timed Eq.trans lean_s28 lean_r22
have lean_s30 : (Eq let48 True) := by timed Eq.trans lean_r8 lean_s29
have lean_s31 : let48 := by timed trueElim lean_s30
let lean_s32 := by timed congr lean_s3 lean_s31
have lean_s33 : let62 := by timed rfl
let lean_s34 := by timed flipCongrArg lean_s33 [Eq]
have lean_s35 : (Eq let60 let62) := by timed congr lean_s34 lean_r70
have lean_s36 : (Eq let60 True) := by timed Eq.trans lean_s35 lean_r12
have lean_s37 : (Eq let61 True) := by timed Eq.trans lean_r11 lean_s36
have lean_s38 : let61 := by timed trueElim lean_s37
let lean_s39 := by timed congr lean_s3 lean_s38
have lean_s40 : let156 := by timed rfl
let lean_s41 := by timed flipCongrArg lean_s40 [Eq]
have lean_s42 : (Eq let102 let156) := by timed congr lean_s41 lean_r13
have lean_s43 : (Eq let102 True) := by timed Eq.trans lean_s42 lean_r51
have lean_s44 : (Eq let64 True) := by timed Eq.trans lean_r27 lean_s43
have lean_s45 : let64 := by timed trueElim lean_s44
let lean_s46 := by timed congr lean_s3 lean_s45
have lean_s47 : let120 := by timed rfl
let lean_s48 := by timed flipCongrArg lean_s47 [Eq]
have lean_s49 : (Eq let87 let120) := by timed congr lean_s48 lean_r41
have lean_s50 : (Eq let87 True) := by timed Eq.trans lean_s49 lean_r36
have lean_s51 : (Eq let88 True) := by timed Eq.trans lean_r17 lean_s50
have lean_s52 : let88 := by timed trueElim lean_s51
let lean_s53 := by timed congr lean_s46 lean_s52
let lean_s54 := by timed congr lean_s39 lean_s53
let lean_s55 := by timed congr lean_s32 lean_s54
let lean_s56 := by timed congr lean_s25 lean_s55
let lean_s57 := by timed congr lean_s18 lean_s56
let lean_s58 := by timed congr lean_s16 lean_s57
let lean_s59 := by timed congr lean_s9 lean_s58
let lean_s60 := by timed congr lean_s7 lean_s59
have lean_s61 : (Eq let199 let198) := by timed congr lean_s5 lean_s60
have lean_s62 : let198 := by timed eqResolve lean_s2 lean_s61
have lean_s63 : (Or let84 (Or let36 (Or let19 (Or let27 (Or let55 (Or let7 (Or let197 (Or let196 (Or let195 let194))))))))) := by permutateOr lean_s62, [9, 5, 7, 6, 3, 8, 1, 2, 4, 0], (- 1)
let lean_s64 := by R2 lean_s63, lean_a115, let192, [(- 1), 0]
let lean_s65 := by R2 lean_s64, lean_a114, let191, [(- 1), 0]
have lean_s66 : let8 := by timed eqResolve lean_a108 lean_r14
let lean_s67 := by R1 lean_s65, lean_s66, let7, [(- 1), 0]
have lean_s68 : let56 := by timed eqResolve lean_a105 lean_r54
let lean_s69 := by R1 lean_s67, lean_s68, let55, [(- 1), 0]
let lean_s70 := by timed flipCongrArg lean_r25 [LE.le]
have lean_s71 : (Eq let30 let30) := by timed rfl
have lean_s72 : (Eq let186 let157) := by timed congr lean_s70 lean_s71
have lean_s73 : (Eq let186 let28) := by timed Eq.trans lean_s72 lean_r52
have lean_s74 : let28 := by timed eqResolve lean_a103 lean_s73
let lean_s75 := by R1 lean_s69, lean_s74, let27, [(- 1), 0]
let lean_s76 := by timed flipCongrArg lean_r48 [LE.le]
have lean_s77 : (Eq let1 let1) := by timed rfl
have lean_s78 : (Eq let185 let131) := by timed congr lean_s76 lean_s77
have lean_s79 : (Eq let185 let125) := by timed Eq.trans lean_s78 lean_r42
have lean_s80 : let125 := by timed eqResolve lean_a102 lean_s79
let lean_s81 := by R2 lean_s75, lean_s80, let125, [(- 1), 0]
have lean_s82 : let20 := by timed eqResolve lean_a101 lean_r45
let lean_s83 := by R1 lean_s81, lean_s82, let19, [(- 1), 0]
let lean_s84 := by timed flipCongrArg lean_r62 [LE.le]
have lean_s85 : (Eq let184 let115) := by timed congr lean_s84 lean_s71
have lean_s86 : (Eq let184 let37) := by timed Eq.trans lean_s85 lean_r32
have lean_s87 : let37 := by timed eqResolve lean_a98 lean_s86
let lean_s88 := by R1 lean_s83, lean_s87, let36, [(- 1), 0]
let lean_s89 := by timed flipCongrArg lean_r39 [LE.le]
have lean_s90 : (Eq let183 let172) := by timed congr lean_s89 lean_s71
have lean_s91 : (Eq let183 let85) := by timed Eq.trans lean_s90 lean_r58
have lean_s92 : let85 := by timed eqResolve lean_a97 lean_s91
let lean_s93 := by R1 lean_s88, lean_s92, let84, [(- 1), 0]
let lean_s94 := by timed flipCongrArg lean_r24 [GE.ge]
have lean_s95 : (Eq let180 let193) := by timed congr lean_s94 lean_s71
have lean_s96 : let193 := by timed eqResolve lean_a93 lean_s95
exact (show False from by R2 lean_s93, lean_s96, let193, [0, 0])


