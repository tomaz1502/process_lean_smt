open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x8x5fplus : Int}
variable {x8x5fminus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x7x5fplus : Int}
variable {x7x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x5x5fplus : Int}
variable {x4x5fminus : Int}
variable {x2x5fplus : Int}
variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x2x5fminus : Int}
variable {x5x5fplus : Int}
variable {x2x5fminus : Int}
variable {x1x5fminus : Int}
variable {x1x5fplus : Int}
variable {x6x5fminus : Int}
variable {x9x5fminus : Int}
variable {x9x5fplus : Int}
variable {x6x5fplus : Int}
variable {x9x5fplus : Int}
variable {x6x5fminus : Int}
variable {x4x5fplus : Int}
variable {x9x5fminus : Int}
variable {x7x5fplus : Int}
variable {x0x5fminus : Int}
variable {x2x5fplus : Int}
variable {x6x5fplus : Int}
variable {x0x5fplus : Int}
variable {x8x5fminus : Int}
variable {x8x5fplus : Int}
variable {x5x5fminus : Int}
variable {x1x5fminus : Int}
variable {x7x5fminus : Int}
variable {x1x5fplus : Int}
variable {x5x5fminus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (binrel% GT.gt let2 let1)
  let let4 := (Int.ofNat 3)
  let let5 := (Int.ofNat 1)
  let let6 := (binrel% HDiv.hDiv let5 let4)
  let let7 := (binrel% GT.gt let6 let1)
  let let8 := (Neg.neg let5)
  let let9 := (binrel% HMul.hMul let8 x5x5fminus)
  let let10 := (binrel% HAdd.hAdd x5x5fplus let9)
  let let11 := (binrel% HMul.hMul let8 x0x5fplus)
  let let12 := (binrel% HMul.hMul let8 x3x5fplus)
  let let13 := (binrel% HMul.hMul let8 x8x5fminus)
  let let14 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x0x5fminus let10))))))
  let let15 := (binrel% GE.ge let14 let5)
  let let16 := (Not let15)
  let let17 := (binrel% LT.lt let14 let5)
  let let18 := (Neg.neg let2)
  let let19 := (binrel% LT.lt let18 let1)
  let let20 := (binrel% HMul.hMul let18 let1)
  let let21 := (Int.ofNat 2)
  let let22 := (binrel% HDiv.hDiv let21 let4)
  let let23 := (binrel% HMul.hMul let22 let1)
  let let24 := (Neg.neg let6)
  let let25 := (binrel% HMul.hMul let24 let5)
  let let26 := (binrel% HMul.hMul let24 let1)
  let let27 := (binrel% HMul.hMul let6 let1)
  let let28 := (binrel% HMul.hMul let2 let8)
  let let29 := (binrel% HMul.hMul let18 let8)
  let let30 := (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let23 let20)))))))
  let let31 := (binrel% HAdd.hAdd x8x5fplus let13)
  let let32 := (binrel% HMul.hMul let18 let31)
  let let33 := (binrel% HMul.hMul let22 let14)
  let let34 := (binrel% HAdd.hAdd let11 x0x5fminus)
  let let35 := (binrel% HMul.hMul let8 x2x5fplus)
  let let36 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus let34))
  let let37 := (binrel% HMul.hMul let8 x4x5fplus)
  let let38 := (binrel% HMul.hMul let8 x1x5fminus)
  let let39 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus let36))))
  let let40 := (binrel% HMul.hMul let24 let39)
  let let41 := (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus let34))
  let let42 := (binrel% HMul.hMul let8 x4x5fminus)
  let let43 := (binrel% HMul.hMul let8 x8x5fplus)
  let let44 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 let41))))))
  let let45 := (binrel% HMul.hMul let24 let44)
  let let46 := (binrel% HAdd.hAdd x1x5fplus let38)
  let let47 := (binrel% HMul.hMul let22 let46)
  let let48 := (binrel% HMul.hMul let8 x3x5fminus)
  let let49 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus let10))))
  let let50 := (binrel% HMul.hMul let6 let49)
  let let51 := (binrel% HMul.hMul let8 x5x5fplus)
  let let52 := (binrel% HMul.hMul let8 x9x5fminus)
  let let53 := (binrel% HMul.hMul let8 x0x5fminus)
  let let54 := (binrel% HMul.hMul let8 x2x5fminus)
  let let55 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let51 x5x5fminus)))))))))
  let let56 := (binrel% HMul.hMul let2 let55)
  let let57 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x9x5fplus let52)))))))
  let let58 := (binrel% HMul.hMul let18 let57)
  let let59 := (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let33 let32)))))))
  let let60 := (binrel% GE.ge let59 let30)
  let let61 := (Not let60)
  let let62 := (binrel% LT.lt let59 let30)
  let let63 := (binrel% GE.ge let46 let5)
  let let64 := (Not let63)
  let let65 := (binrel% LT.lt let46 let5)
  let let66 := (Rat.ofInt (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x9x5fplus) x9x5fminus))))))))
  let let67 := (Rat.ofInt let55)
  let let68 := (Neg.neg let22)
  let let69 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x1x5fplus) (binrel% HMul.hMul let68 x1x5fminus))
  let let70 := (binrel% LT.lt let24 let1)
  let let71 := (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x0x5fplus) (binrel% HMul.hMul let24 x0x5fminus))
  let let72 := (binrel% HMul.hMul let6 x1x5fminus)
  let let73 := (binrel% HMul.hMul let24 x1x5fplus)
  let let74 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x2x5fminus) let71))))))
  let let75 := (Rat.ofInt (binrel% HAdd.hAdd let43 x8x5fminus))
  let let76 := (Rat.ofInt 0)
  let let77 := (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let76 let76)))))))
  let let78 := (binrel% HAdd.hAdd let35 x2x5fminus)
  let let79 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let78))))
  let let80 := (binrel% GE.ge let49 let1)
  let let81 := (Not let80)
  let let82 := (binrel% LE.le let49 let8)
  let let83 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x5x5fplus) (binrel% HMul.hMul let68 x5x5fminus))))))))
  let let84 := (binrel% HMul.hMul let24 x3x5fminus)
  let let85 := (binrel% HMul.hMul let6 x3x5fplus)
  let let86 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x4x5fminus) (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let84 let71))))))))
  let let87 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x5x5fplus) (binrel% HMul.hMul let24 x5x5fminus))))))
  let let88 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let83 let75)))))))
  let let89 := (binrel% HAdd.hAdd x0x5fplus let53)
  let let90 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 let89))
  let let91 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let90))
  let let92 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus let91))))
  let let93 := (Not True)
  let let94 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let41))))
  let let95 := (binrel% GT.gt let22 let1)
  let let96 := (binrel% LE.le let14 let1)
  let let97 := (binrel% GE.ge let55 let1)
  let let98 := (Not let97)
  let let99 := (binrel% LT.lt let55 let1)
  let let100 := (binrel% GE.ge let39 let5)
  let let101 := (binrel% HMul.hMul let8 x1x5fplus)
  let let102 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 let90))))
  let let103 := (binrel% LE.le let102 let8)
  let let104 := (Not let98)
  let let105 := (Eq let104 let97)
  let let106 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x1x5fminus let89))
  let let107 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 let106))))
  let let108 := (Not let16)
  let let109 := (Eq let108 let15)
  let let110 := (Not let81)
  let let111 := (Eq let110 let80)
  let let112 := (binrel% GE.ge let57 let8)
  let let113 := (Not let112)
  let let114 := (binrel% LT.lt let57 let8)
  let let115 := (binrel% GE.ge let44 let1)
  let let116 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let89))))))))
  let let117 := (binrel% LE.le let116 let1)
  let let118 := (binrel% HSub.hSub x8x5fplus x8x5fminus)
  let let119 := (binrel% LE.le let46 let1)
  let let120 := (Not let64)
  let let121 := (Eq let120 let63)
  let let122 := (Eq let97 let97)
  let let123 := (Eq let97 let104)
  let let124 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 let91))
  let let125 := (binrel% GE.ge let76 let24)
  let let126 := (Eq let80 let80)
  let let127 := (binrel% HSub.hSub x1x5fplus x1x5fminus)
  let let128 := (Eq let80 let110)
  let let129 := (Eq let63 let63)
  let let130 := (Eq let63 let120)
  let let131 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let106))))))
  let let132 := (Eq let15 let15)
  let let133 := (binrel% LT.lt let49 let1)
  let let134 := (binrel% LE.le let55 let8)
  let let135 := (Eq let15 let108)
  let let136 := (binrel% LE.le let127 let1)
  let let137 := (binrel% GE.ge let118 let1)
  let let138 := (binrel% HMul.hMul let8 x6x5fminus)
  let let139 := (binrel% HAdd.hAdd x2x5fplus let54)
  let let140 := (Neg.neg let21)
  let let141 := (binrel% LE.le let131 let1)
  let let142 := (binrel% LE.le let92 let8)
  let let143 := (binrel% HMul.hMul let8 x7x5fminus)
  let let144 := (binrel% HMul.hMul let140 x1x5fminus)
  let let145 := (binrel% HMul.hMul let21 x1x5fplus)
  let let146 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus let78))))
  let let147 := (binrel% HMul.hMul let140 x5x5fminus)
  let let148 := (binrel% HMul.hMul let21 x5x5fplus)
  let let149 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 let46))
  let let150 := (binrel% LE.le let107 let8)
  let let151 := (binrel% LE.le let94 let1)
  let let152 := (binrel% LE.le let79 let8)
  let let153 := (binrel% HAdd.hAdd let101 x1x5fminus)
  let let154 := (binrel% HAdd.hAdd x3x5fplus let48)
  let let155 := (binrel% HMul.hMul let8 x6x5fplus)
  let let156 := (binrel% GE.ge let124 let8)
  let let157 := (binrel% GE.ge let31 let1)
  let let158 := (Not let100)
  let let159 := (Not let115)
  let let160 := (Not let157)
  let let161 := (Or let160 (Or let15 (Or let158 (Or let159 (Or let63 (Or let80 (Or let97 let113)))))))
  let let162 := (Or let160 (Or let108 (Or let158 (Or let159 (Or let120 (Or let110 (Or let104 let113)))))))
  let let163 := (Or let113 False)
  let let164 := (binrel% LE.le let32 let20)
  let let165 := (And let19 let157)
  let let166 := (binrel% LE.le let33 let23)
  let let167 := (And let95 let96)
  let let168 := (binrel% LE.le let40 let25)
  let let169 := (And let70 let100)
  let let170 := (binrel% LE.le let45 let26)
  let let171 := (And let70 let115)
  let let172 := (binrel% LE.le let47 let23)
  let let173 := (And let95 let119)
  let let174 := (binrel% LT.lt let50 let27)
  let let175 := (And let7 let133)
  let let176 := (binrel% LE.le let56 let28)
  let let177 := (And let3 let134)
  let let178 := (binrel% LE.le let58 let29)
  let let179 := (And let19 let112)
(Eq let3 True) → (Eq let7 True) → (Eq let17 let16) → (Eq let19 True) → (Eq let62 let61) → (Eq let65 let64) → (Eq let58 let66) → (Eq let56 let67) → (Eq let47 let69) → (Eq let70 True) → (Eq let40 let74) → (Eq let32 let75) → (Eq let29 let2) → (Eq let27 let76) → (Eq let26 let76) → (Eq let77 let24) → (Eq let28 let18) → (Eq let79 let49) → (Eq let82 let81) → (Eq let88 let76) → (Eq let92 let55) → (Eq let33 let83) → (Eq let93 False) → (Eq let94 let14) → (Eq let95 True) → (Eq let96 let16) → (Eq let99 let98) → (Eq let103 let100) → let105 → (Eq let107 let102) → let109 → (Eq let23 let76) → let111 → (Eq let114 let113) → (Eq let117 let115) → (Eq let45 let86) → (Eq let118 let31) → (Eq let119 let64) → let121 → (Eq let122 True) → (Eq let105 let123) → (Eq let50 let87) → (Eq let124 let57) → (Eq let125 True) → (Eq let20 let76) → (Eq let126 True) → (Eq let25 let24) → (Eq let127 let46) → (Eq let111 let128) → (Eq let129 True) → (Eq let121 let130) → (Eq let131 let116) → (Eq let132 True) → (Eq let133 let81) → (Eq let134 let98) → (Eq let109 let135) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% LE.le (binrel% HSub.hSub x6x5fplus x6x5fminus) let1) → let136 → let137 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let36)))))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x7x5fplus) (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 let139)))))))))) let8) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus let46)))))))) let8) → let141 → let142 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let38 let89)))))))) let8) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x4x5fminus) let46)))))))) let5) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 let89)))))) let8) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 let146)) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let139)))))) let8) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 let149)))) let5) → let150 → let151 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 let146)) let1) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let148 let147))))) let8) → let152 → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 let153)) let1) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 let154)) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 let31)) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus let153)))))))))) let8) → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 let34)))))))) let5) → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 let34)))))))) let5) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus let139)))))))) let5) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x3x5fminus) (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 let153)))))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus let89)))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x1x5fplus) (binrel% HMul.hMul let21 x1x5fminus)))))))) let5) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 let106)))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let38 let34)))))) let8) → let156 → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 let154)))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let149)) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let155 x6x5fminus))) let1) → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (binrel% GT.gt let2 let1)
  let let4 := (Int.ofNat 3)
  let let5 := (Int.ofNat 1)
  let let6 := (binrel% HDiv.hDiv let5 let4)
  let let7 := (binrel% GT.gt let6 let1)
  let let8 := (Neg.neg let5)
  let let9 := (binrel% HMul.hMul let8 x5x5fminus)
  let let10 := (binrel% HAdd.hAdd x5x5fplus let9)
  let let11 := (binrel% HMul.hMul let8 x0x5fplus)
  let let12 := (binrel% HMul.hMul let8 x3x5fplus)
  let let13 := (binrel% HMul.hMul let8 x8x5fminus)
  let let14 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x0x5fminus let10))))))
  let let15 := (binrel% GE.ge let14 let5)
  let let16 := (Not let15)
  let let17 := (binrel% LT.lt let14 let5)
  let let18 := (Neg.neg let2)
  let let19 := (binrel% LT.lt let18 let1)
  let let20 := (binrel% HMul.hMul let18 let1)
  let let21 := (Int.ofNat 2)
  let let22 := (binrel% HDiv.hDiv let21 let4)
  let let23 := (binrel% HMul.hMul let22 let1)
  let let24 := (Neg.neg let6)
  let let25 := (binrel% HMul.hMul let24 let5)
  let let26 := (binrel% HMul.hMul let24 let1)
  let let27 := (binrel% HMul.hMul let6 let1)
  let let28 := (binrel% HMul.hMul let2 let8)
  let let29 := (binrel% HMul.hMul let18 let8)
  let let30 := (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let23 let20)))))))
  let let31 := (binrel% HAdd.hAdd x8x5fplus let13)
  let let32 := (binrel% HMul.hMul let18 let31)
  let let33 := (binrel% HMul.hMul let22 let14)
  let let34 := (binrel% HAdd.hAdd let11 x0x5fminus)
  let let35 := (binrel% HMul.hMul let8 x2x5fplus)
  let let36 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus let34))
  let let37 := (binrel% HMul.hMul let8 x4x5fplus)
  let let38 := (binrel% HMul.hMul let8 x1x5fminus)
  let let39 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus let36))))
  let let40 := (binrel% HMul.hMul let24 let39)
  let let41 := (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus let34))
  let let42 := (binrel% HMul.hMul let8 x4x5fminus)
  let let43 := (binrel% HMul.hMul let8 x8x5fplus)
  let let44 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 let41))))))
  let let45 := (binrel% HMul.hMul let24 let44)
  let let46 := (binrel% HAdd.hAdd x1x5fplus let38)
  let let47 := (binrel% HMul.hMul let22 let46)
  let let48 := (binrel% HMul.hMul let8 x3x5fminus)
  let let49 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus let10))))
  let let50 := (binrel% HMul.hMul let6 let49)
  let let51 := (binrel% HMul.hMul let8 x5x5fplus)
  let let52 := (binrel% HMul.hMul let8 x9x5fminus)
  let let53 := (binrel% HMul.hMul let8 x0x5fminus)
  let let54 := (binrel% HMul.hMul let8 x2x5fminus)
  let let55 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let51 x5x5fminus)))))))))
  let let56 := (binrel% HMul.hMul let2 let55)
  let let57 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd x9x5fplus let52)))))))
  let let58 := (binrel% HMul.hMul let18 let57)
  let let59 := (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let33 let32)))))))
  let let60 := (binrel% GE.ge let59 let30)
  let let61 := (Not let60)
  let let62 := (binrel% LT.lt let59 let30)
  let let63 := (binrel% GE.ge let46 let5)
  let let64 := (Not let63)
  let let65 := (binrel% LT.lt let46 let5)
  let let66 := (Rat.ofInt (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x9x5fplus) x9x5fminus))))))))
  let let67 := (Rat.ofInt let55)
  let let68 := (Neg.neg let22)
  let let69 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x1x5fplus) (binrel% HMul.hMul let68 x1x5fminus))
  let let70 := (binrel% LT.lt let24 let1)
  let let71 := (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x0x5fplus) (binrel% HMul.hMul let24 x0x5fminus))
  let let72 := (binrel% HMul.hMul let6 x1x5fminus)
  let let73 := (binrel% HMul.hMul let24 x1x5fplus)
  let let74 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x2x5fminus) let71))))))
  let let75 := (Rat.ofInt (binrel% HAdd.hAdd let43 x8x5fminus))
  let let76 := (Rat.ofInt 0)
  let let77 := (binrel% HAdd.hAdd let2 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let24 (binrel% HAdd.hAdd let76 let76)))))))
  let let78 := (binrel% HAdd.hAdd let35 x2x5fminus)
  let let79 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let78))))
  let let80 := (binrel% GE.ge let49 let1)
  let let81 := (Not let80)
  let let82 := (binrel% LE.le let49 let8)
  let let83 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x5x5fplus) (binrel% HMul.hMul let68 x5x5fminus))))))))
  let let84 := (binrel% HMul.hMul let24 x3x5fminus)
  let let85 := (binrel% HMul.hMul let6 x3x5fplus)
  let let86 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x4x5fminus) (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let84 let71))))))))
  let let87 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x5x5fplus) (binrel% HMul.hMul let24 x5x5fminus))))))
  let let88 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let83 let75)))))))
  let let89 := (binrel% HAdd.hAdd x0x5fplus let53)
  let let90 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 let89))
  let let91 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let90))
  let let92 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus let91))))
  let let93 := (Not True)
  let let94 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let41))))
  let let95 := (binrel% GT.gt let22 let1)
  let let96 := (binrel% LE.le let14 let1)
  let let97 := (binrel% GE.ge let55 let1)
  let let98 := (Not let97)
  let let99 := (binrel% LT.lt let55 let1)
  let let100 := (binrel% GE.ge let39 let5)
  let let101 := (binrel% HMul.hMul let8 x1x5fplus)
  let let102 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 let90))))
  let let103 := (binrel% LE.le let102 let8)
  let let104 := (Not let98)
  let let105 := (Eq let104 let97)
  let let106 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x1x5fminus let89))
  let let107 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 let106))))
  let let108 := (Not let16)
  let let109 := (Eq let108 let15)
  let let110 := (Not let81)
  let let111 := (Eq let110 let80)
  let let112 := (binrel% GE.ge let57 let8)
  let let113 := (Not let112)
  let let114 := (binrel% LT.lt let57 let8)
  let let115 := (binrel% GE.ge let44 let1)
  let let116 := (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let89))))))))
  let let117 := (binrel% LE.le let116 let1)
  let let118 := (binrel% HSub.hSub x8x5fplus x8x5fminus)
  let let119 := (binrel% LE.le let46 let1)
  let let120 := (Not let64)
  let let121 := (Eq let120 let63)
  let let122 := (Eq let97 let97)
  let let123 := (Eq let97 let104)
  let let124 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 let91))
  let let125 := (binrel% GE.ge let76 let24)
  let let126 := (Eq let80 let80)
  let let127 := (binrel% HSub.hSub x1x5fplus x1x5fminus)
  let let128 := (Eq let80 let110)
  let let129 := (Eq let63 let63)
  let let130 := (Eq let63 let120)
  let let131 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let106))))))
  let let132 := (Eq let15 let15)
  let let133 := (binrel% LT.lt let49 let1)
  let let134 := (binrel% LE.le let55 let8)
  let let135 := (Eq let15 let108)
  let let136 := (binrel% LE.le let127 let1)
  let let137 := (binrel% GE.ge let118 let1)
  let let138 := (binrel% HMul.hMul let8 x6x5fminus)
  let let139 := (binrel% HAdd.hAdd x2x5fplus let54)
  let let140 := (Neg.neg let21)
  let let141 := (binrel% LE.le let131 let1)
  let let142 := (binrel% LE.le let92 let8)
  let let143 := (binrel% HMul.hMul let8 x7x5fminus)
  let let144 := (binrel% HMul.hMul let140 x1x5fminus)
  let let145 := (binrel% HMul.hMul let21 x1x5fplus)
  let let146 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus let78))))
  let let147 := (binrel% HMul.hMul let140 x5x5fminus)
  let let148 := (binrel% HMul.hMul let21 x5x5fplus)
  let let149 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 let46))
  let let150 := (binrel% LE.le let107 let8)
  let let151 := (binrel% LE.le let94 let1)
  let let152 := (binrel% LE.le let79 let8)
  let let153 := (binrel% HAdd.hAdd let101 x1x5fminus)
  let let154 := (binrel% HAdd.hAdd x3x5fplus let48)
  let let155 := (binrel% HMul.hMul let8 x6x5fplus)
  let let156 := (binrel% GE.ge let124 let8)
  let let157 := (binrel% GE.ge let31 let1)
  let let158 := (Not let100)
  let let159 := (Not let115)
  let let160 := (Not let157)
  let let161 := (Or let160 (Or let15 (Or let158 (Or let159 (Or let63 (Or let80 (Or let97 let113)))))))
  let let162 := (Or let160 (Or let108 (Or let158 (Or let159 (Or let120 (Or let110 (Or let104 let113)))))))
  let let163 := (Or let113 False)
  let let164 := (binrel% LE.le let32 let20)
  let let165 := (And let19 let157)
  let let166 := (binrel% LE.le let33 let23)
  let let167 := (And let95 let96)
  let let168 := (binrel% LE.le let40 let25)
  let let169 := (And let70 let100)
  let let170 := (binrel% LE.le let45 let26)
  let let171 := (And let70 let115)
  let let172 := (binrel% LE.le let47 let23)
  let let173 := (And let95 let119)
  let let174 := (binrel% LT.lt let50 let27)
  let let175 := (And let7 let133)
  let let176 := (binrel% LE.le let56 let28)
  let let177 := (And let3 let134)
  let let178 := (binrel% LE.le let58 let29)
  let let179 := (And let19 let112)
fun lean_r0 : (Eq let3 True) => -- EVALUATE
fun lean_r1 : (Eq let7 True) => -- EVALUATE
fun lean_r2 : (Eq let17 let16) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let19 True) => -- EVALUATE
fun lean_r4 : (Eq let62 let61) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let65 let64) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let58 let66) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let56 let67) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let47 let69) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let70 True) => -- EVALUATE
fun lean_r10 : (Eq let40 let74) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let32 let75) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let29 let2) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let27 let76) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let26 let76) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let77 let24) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let28 let18) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let79 let49) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let82 let81) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let88 let76) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let92 let55) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let33 let83) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let93 False) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let94 let14) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let95 True) => -- EVALUATE
fun lean_r25 : (Eq let96 let16) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let99 let98) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let103 let100) => -- THEORY_REWRITE_ARITH
fun lean_r28 : let105 => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let107 let102) => -- THEORY_REWRITE_ARITH
fun lean_r30 : let109 => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let23 let76) => -- THEORY_REWRITE_ARITH
fun lean_r32 : let111 => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq let114 let113) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let117 let115) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let45 let86) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let118 let31) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let119 let64) => -- THEORY_REWRITE_ARITH
fun lean_r38 : let121 => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq let122 True) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let105 let123) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let50 let87) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let124 let57) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let125 True) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let20 let76) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let126 True) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let25 let24) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let127 let46) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let111 let128) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let129 True) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq let121 let130) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq let131 let116) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let132 True) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let133 let81) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let134 let98) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let109 let135) => -- THEORY_REWRITE_BOOL
fun lean_a56 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a57 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a58 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a59 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a60 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a61 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a62 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a63 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a64 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a65 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a66 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a67 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a68 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a69 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a70 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a71 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a72 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a73 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a74 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a75 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a76 : (binrel% LE.le (binrel% HSub.hSub x6x5fplus x6x5fminus) let1) =>
fun lean_a77 : let136 =>
fun lean_a78 : let137 =>
fun lean_a79 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let36)))))))) let1) =>
fun lean_a80 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let8 x7x5fplus) (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 let139)))))))))) let8) =>
fun lean_a81 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus let46)))))))) let8) =>
fun lean_a82 : let141 =>
fun lean_a83 : let142 =>
fun lean_a84 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let38 let89)))))))) let8) =>
fun lean_a85 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x4x5fminus) let46)))))))) let5) =>
fun lean_a86 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 let89)))))) let8) =>
fun lean_a87 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 let146)) let1) =>
fun lean_a88 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let139)))))) let8) =>
fun lean_a89 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 let149)))) let5) =>
fun lean_a90 : let150 =>
fun lean_a91 : let151 =>
fun lean_a92 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 let146)) let1) =>
fun lean_a93 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let148 let147))))) let8) =>
fun lean_a94 : let152 =>
fun lean_a95 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 let153)) let1) =>
fun lean_a96 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 let154)) let1) =>
fun lean_a97 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 let31)) let1) =>
fun lean_a98 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus let153)))))))))) let8) =>
fun lean_a99 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 let34)))))))) let5) =>
fun lean_a100 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let138 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let144 let34)))))))) let5) =>
fun lean_a101 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus let139)))))))) let5) =>
fun lean_a102 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x3x5fminus) (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let54 let153)))))))) let1) =>
fun lean_a103 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus let89)))))) let1) =>
fun lean_a104 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let140 x1x5fplus) (binrel% HMul.hMul let21 x1x5fminus)))))))) let5) =>
fun lean_a105 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 let106)))) let1) =>
fun lean_a106 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let38 let34)))))) let8) =>
fun lean_a107 : let156 =>
fun lean_a108 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let42 let154)))) let1) =>
fun lean_a109 : (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let9 let149)) let1) =>
fun lean_a110 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let155 x6x5fminus))) let1) => by
have lean_s0 : (Or let160 (Or let108 (Or let158 (Or let159 (Or let120 (Or let110 (Or let104 let163))))))) :=
  (scope (fun lean_a111 : let157 =>
    (scope (fun lean_a112 : let16 =>
      (scope (fun lean_a113 : let100 =>
        (scope (fun lean_a114 : let115 =>
          (scope (fun lean_a115 : let64 =>
            (scope (fun lean_a116 : let81 =>
              (scope (fun lean_a117 : let98 =>
                (scope (fun lean_a118 : let112 =>
                  let lean_s0 := by timed flipCongrArg lean_r42 [GE.ge]
                  have lean_s1 : (Eq let8 let8) := by timed rfl
                  have lean_s2 : (Eq let156 let112) := by timed congr lean_s0 lean_s1
                  have lean_s3 : let112 := by timed eqResolve lean_a107 lean_s2
                  have lean_s4 : let163 :=
                    (scope (fun lean_a119 : let112 =>
                      have lean_s4 : let19 := by timed trueElim lean_r3
                      have lean_s5 : let112 := by timed eqResolve lean_a107 lean_s2
                      have lean_s6 : let179 := by timed And.intro lean_s4 lean_s5
                      have lean_s7 : (Implies let179 let178) := by arithMulNeg [let57, let8, let18], 3
                      have lean_s8 : let178 := by timed modusPonens lean_s6 lean_s7
                      have lean_s9 : let3 := by timed trueElim lean_r0
                      let lean_s10 := by timed flipCongrArg lean_r20 [LE.le]
                      have lean_s11 : (Eq let142 let134) := by timed congr lean_s10 lean_s1
                      have lean_s12 : (Eq let142 let98) := by timed Eq.trans lean_s11 lean_r54
                      have lean_s13 : let98 := by timed eqResolve lean_a83 lean_s12
                      have lean_s14 : (Eq let98 let99) := by timed Eq.symm lean_r26
                      have lean_s15 : let99 := by timed eqResolve lean_s13 lean_s14
                      have lean_s16 : let134 := by intTightUb lean_s15
                      have lean_s17 : let177 := by timed And.intro lean_s9 lean_s16
                      have lean_s18 : (Implies let177 let176) := by arithMulPos [let55, let8, let2], 1
                      have lean_s19 : let176 := by timed modusPonens lean_s17 lean_s18
                      have lean_s20 : let7 := by timed trueElim lean_r1
                      let lean_s21 := by timed flipCongrArg lean_r17 [LE.le]
                      have lean_s22 : (Eq let152 let82) := by timed congr lean_s21 lean_s1
                      have lean_s23 : (Eq let152 let81) := by timed Eq.trans lean_s22 lean_r18
                      have lean_s24 : let81 := by timed eqResolve lean_a94 lean_s23
                      have lean_s25 : (Eq let81 let133) := by timed Eq.symm lean_r53
                      have lean_s26 : let133 := by timed eqResolve lean_s24 lean_s25
                      have lean_s27 : let175 := by timed And.intro lean_s20 lean_s26
                      have lean_s28 : (Implies let175 let174) := by arithMulPos [let49, let1, let6], 0
                      have lean_s29 : let174 := by timed modusPonens lean_s27 lean_s28
                      have lean_s30 : let95 := by timed trueElim lean_r24
                      let lean_s31 := by timed flipCongrArg lean_r47 [LE.le]
                      have lean_s32 : (Eq let1 let1) := by timed rfl
                      have lean_s33 : (Eq let136 let119) := by timed congr lean_s31 lean_s32
                      have lean_s34 : (Eq let136 let64) := by timed Eq.trans lean_s33 lean_r37
                      have lean_s35 : let64 := by timed eqResolve lean_a77 lean_s34
                      have lean_s36 : (Eq let64 let65) := by timed Eq.symm lean_r5
                      have lean_s37 : let65 := by timed eqResolve lean_s35 lean_s36
                      have lean_s38 : let119 := by intTightUb lean_s37
                      have lean_s39 : let173 := by timed And.intro lean_s30 lean_s38
                      have lean_s40 : (Implies let173 let172) := by arithMulPos [let46, let1, let22], 1
                      have lean_s41 : let172 := by timed modusPonens lean_s39 lean_s40
                      have lean_s42 : let70 := by timed trueElim lean_r9
                      let lean_s43 := by timed flipCongrArg lean_r51 [LE.le]
                      have lean_s44 : (Eq let141 let117) := by timed congr lean_s43 lean_s32
                      have lean_s45 : (Eq let141 let115) := by timed Eq.trans lean_s44 lean_r34
                      have lean_s46 : let115 := by timed eqResolve lean_a82 lean_s45
                      have lean_s47 : let171 := by timed And.intro lean_s42 lean_s46
                      have lean_s48 : (Implies let171 let170) := by arithMulNeg [let44, let1, let24], 3
                      have lean_s49 : let170 := by timed modusPonens lean_s47 lean_s48
                      let lean_s50 := by timed flipCongrArg lean_r29 [LE.le]
                      have lean_s51 : (Eq let150 let103) := by timed congr lean_s50 lean_s1
                      have lean_s52 : (Eq let150 let100) := by timed Eq.trans lean_s51 lean_r27
                      have lean_s53 : let100 := by timed eqResolve lean_a90 lean_s52
                      have lean_s54 : let169 := by timed And.intro lean_s42 lean_s53
                      have lean_s55 : (Implies let169 let168) := by arithMulNeg [let39, let5, let24], 3
                      have lean_s56 : let168 := by timed modusPonens lean_s54 lean_s55
                      let lean_s57 := by timed flipCongrArg lean_r23 [LE.le]
                      have lean_s58 : (Eq let151 let96) := by timed congr lean_s57 lean_s32
                      have lean_s59 : (Eq let151 let16) := by timed Eq.trans lean_s58 lean_r25
                      have lean_s60 : let16 := by timed eqResolve lean_a91 lean_s59
                      have lean_s61 : (Eq let16 let17) := by timed Eq.symm lean_r2
                      have lean_s62 : let17 := by timed eqResolve lean_s60 lean_s61
                      have lean_s63 : let96 := by intTightUb lean_s62
                      have lean_s64 : let167 := by timed And.intro lean_s30 lean_s63
                      have lean_s65 : (Implies let167 let166) := by arithMulPos [let14, let1, let22], 1
                      have lean_s66 : let166 := by timed modusPonens lean_s64 lean_s65
                      let lean_s67 := by timed flipCongrArg lean_r36 [GE.ge]
                      have lean_s68 : (Eq let137 let157) := by timed congr lean_s67 lean_s32
                      have lean_s69 : let157 := by timed eqResolve lean_a78 lean_s68
                      have lean_s70 : let165 := by timed And.intro lean_s4 lean_s69
                      have lean_s71 : (Implies let165 let164) := by arithMulNeg [let31, let1, let18], 3
                      have lean_s72 : let164 := by timed modusPonens lean_s70 lean_s71
                      have lean_s73 : let62 := by sumBounds [lean_s8, lean_s19, lean_s29, lean_s41, lean_s49, lean_s56, lean_s66, lean_s72]
                      let lean_s74 := by timed congrHAdd lean_r21 lean_r11
                      let lean_s75 := by timed congrHAdd lean_r10 lean_s74
                      let lean_s76 := by timed congrHAdd lean_r35 lean_s75
                      let lean_s77 := by timed congrHAdd lean_r8 lean_s76
                      let lean_s78 := by timed congrHAdd lean_r41 lean_s77
                      let lean_s79 := by timed congrHAdd lean_r7 lean_s78
                      have lean_s80 : (Eq let59 let88) := by timed congrHAdd lean_r6 lean_s79
                      have lean_s81 : (Eq let59 let76) := by timed Eq.trans lean_s80 lean_r19
                      let lean_s82 := by timed flipCongrArg lean_s81 [GE.ge]
                      let lean_s83 := by timed congrHAdd lean_r31 lean_r44
                      let lean_s84 := by timed congrHAdd lean_r46 lean_s83
                      let lean_s85 := by timed congrHAdd lean_r14 lean_s84
                      let lean_s86 := by timed congrHAdd lean_r31 lean_s85
                      let lean_s87 := by timed congrHAdd lean_r13 lean_s86
                      let lean_s88 := by timed congrHAdd lean_r16 lean_s87
                      have lean_s89 : (Eq let30 let77) := by timed congrHAdd lean_r12 lean_s88
                      have lean_s90 : (Eq let30 let24) := by timed Eq.trans lean_s89 lean_r15
                      have lean_s91 : (Eq let60 let125) := by timed congr lean_s82 lean_s90
                      have lean_s92 : (Eq let60 True) := by timed Eq.trans lean_s91 lean_r43
                      have lean_s93 : (Eq let61 let93) := by timed flipCongrArg lean_s92 [Not]
                      have lean_s94 : (Eq let61 False) := by timed Eq.trans lean_s93 lean_r22
                      have lean_s95 : (Eq let62 False) := by timed Eq.trans lean_r4 lean_s94
                      show False from by timed eqResolve lean_s73 lean_s95
                    ))
                  have lean_s5 : let113 := by liftOrNToNeg lean_s4
                  have lean_s6 : (Eq let113 let114) := by timed Eq.symm lean_r33
                  have lean_s7 : let114 := by timed eqResolve lean_s5 lean_s6
                  have lean_s8 : let113 := by timed eqResolve lean_s7 lean_r33
                  show False from by timed contradiction lean_s3 lean_s8
  ))))))))))))))))
have lean_s1 : (Not (And let157 (And let16 (And let100 (And let115 (And let64 (And let81 (And let98 let112)))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let162 := by timed flipNotAnd lean_s1 [let157, let16, let100, let115, let64, let81, let98, let112]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq let160 let160) := by timed rfl
let lean_s5 := by timed congr lean_s3 lean_s4
have lean_s6 : let132 := by timed rfl
let lean_s7 := by timed flipCongrArg lean_s6 [Eq]
have lean_s8 : (Eq let135 let132) := by timed congr lean_s7 lean_r30
have lean_s9 : (Eq let135 True) := by timed Eq.trans lean_s8 lean_r52
have lean_s10 : (Eq let109 True) := by timed Eq.trans lean_r55 lean_s9
have lean_s11 : let109 := by timed trueElim lean_s10
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq let158 let158) := by timed rfl
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : (Eq let159 let159) := by timed rfl
let lean_s16 := by timed congr lean_s3 lean_s15
have lean_s17 : let129 := by timed rfl
let lean_s18 := by timed flipCongrArg lean_s17 [Eq]
have lean_s19 : (Eq let130 let129) := by timed congr lean_s18 lean_r38
have lean_s20 : (Eq let130 True) := by timed Eq.trans lean_s19 lean_r49
have lean_s21 : (Eq let121 True) := by timed Eq.trans lean_r50 lean_s20
have lean_s22 : let121 := by timed trueElim lean_s21
let lean_s23 := by timed congr lean_s3 lean_s22
have lean_s24 : let126 := by timed rfl
let lean_s25 := by timed flipCongrArg lean_s24 [Eq]
have lean_s26 : (Eq let128 let126) := by timed congr lean_s25 lean_r32
have lean_s27 : (Eq let128 True) := by timed Eq.trans lean_s26 lean_r45
have lean_s28 : (Eq let111 True) := by timed Eq.trans lean_r48 lean_s27
have lean_s29 : let111 := by timed trueElim lean_s28
let lean_s30 := by timed congr lean_s3 lean_s29
have lean_s31 : let122 := by timed rfl
let lean_s32 := by timed flipCongrArg lean_s31 [Eq]
have lean_s33 : (Eq let123 let122) := by timed congr lean_s32 lean_r28
have lean_s34 : (Eq let123 True) := by timed Eq.trans lean_s33 lean_r39
have lean_s35 : (Eq let105 True) := by timed Eq.trans lean_r40 lean_s34
have lean_s36 : let105 := by timed trueElim lean_s35
let lean_s37 := by timed congr lean_s3 lean_s36
have lean_s38 : (Eq let113 let113) := by timed rfl
let lean_s39 := by timed congr lean_s37 lean_s38
let lean_s40 := by timed congr lean_s30 lean_s39
let lean_s41 := by timed congr lean_s23 lean_s40
let lean_s42 := by timed congr lean_s16 lean_s41
let lean_s43 := by timed congr lean_s14 lean_s42
let lean_s44 := by timed congr lean_s12 lean_s43
have lean_s45 : (Eq let162 let161) := by timed congr lean_s5 lean_s44
have lean_s46 : let161 := by timed eqResolve lean_s2 lean_s45
have lean_s47 : (Or let63 (Or let97 (Or let15 (Or let80 (Or let160 (Or let159 (Or let158 let113))))))) := by permutateOr lean_s46, [4, 6, 1, 5, 0, 3, 2, 7], (- 1)
let lean_s48 := by timed flipCongrArg lean_r42 [GE.ge]
have lean_s49 : (Eq let8 let8) := by timed rfl
have lean_s50 : (Eq let156 let112) := by timed congr lean_s48 lean_s49
have lean_s51 : let112 := by timed eqResolve lean_a107 lean_s50
let lean_s52 := by R2 lean_s47, lean_s51, let112, [(- 1), 0]
let lean_s53 := by timed flipCongrArg lean_r17 [LE.le]
have lean_s54 : (Eq let152 let82) := by timed congr lean_s53 lean_s49
have lean_s55 : (Eq let152 let81) := by timed Eq.trans lean_s54 lean_r18
have lean_s56 : let81 := by timed eqResolve lean_a94 lean_s55
let lean_s57 := by R1 lean_s52, lean_s56, let80, [(- 1), 0]
let lean_s58 := by timed flipCongrArg lean_r23 [LE.le]
have lean_s59 : (Eq let1 let1) := by timed rfl
have lean_s60 : (Eq let151 let96) := by timed congr lean_s58 lean_s59
have lean_s61 : (Eq let151 let16) := by timed Eq.trans lean_s60 lean_r25
have lean_s62 : let16 := by timed eqResolve lean_a91 lean_s61
let lean_s63 := by R1 lean_s57, lean_s62, let15, [(- 1), 0]
let lean_s64 := by timed flipCongrArg lean_r29 [LE.le]
have lean_s65 : (Eq let150 let103) := by timed congr lean_s64 lean_s49
have lean_s66 : (Eq let150 let100) := by timed Eq.trans lean_s65 lean_r27
have lean_s67 : let100 := by timed eqResolve lean_a90 lean_s66
let lean_s68 := by R2 lean_s63, lean_s67, let100, [(- 1), 0]
let lean_s69 := by timed flipCongrArg lean_r20 [LE.le]
have lean_s70 : (Eq let142 let134) := by timed congr lean_s69 lean_s49
have lean_s71 : (Eq let142 let98) := by timed Eq.trans lean_s70 lean_r54
have lean_s72 : let98 := by timed eqResolve lean_a83 lean_s71
let lean_s73 := by R1 lean_s68, lean_s72, let97, [(- 1), 0]
let lean_s74 := by timed flipCongrArg lean_r51 [LE.le]
have lean_s75 : (Eq let141 let117) := by timed congr lean_s74 lean_s59
have lean_s76 : (Eq let141 let115) := by timed Eq.trans lean_s75 lean_r34
have lean_s77 : let115 := by timed eqResolve lean_a82 lean_s76
let lean_s78 := by R2 lean_s73, lean_s77, let115, [(- 1), 0]
let lean_s79 := by timed flipCongrArg lean_r36 [GE.ge]
have lean_s80 : (Eq let137 let157) := by timed congr lean_s79 lean_s59
have lean_s81 : let157 := by timed eqResolve lean_a78 lean_s80
let lean_s82 := by R2 lean_s78, lean_s81, let157, [(- 1), 0]
let lean_s83 := by timed flipCongrArg lean_r47 [LE.le]
have lean_s84 : (Eq let136 let119) := by timed congr lean_s83 lean_s59
have lean_s85 : (Eq let136 let64) := by timed Eq.trans lean_s84 lean_r37
have lean_s86 : let64 := by timed eqResolve lean_a77 lean_s85
exact (show False from by R1 lean_s82, lean_s86, let63, [0, 0])


