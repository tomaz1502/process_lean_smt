open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x8x5fplus : Int}
variable {x8x5fminus : Int}
variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x6x5fplus : Int}
variable {x2x5fminus : Int}
variable {x2x5fminus : Int}
variable {x0x5fminus : Int}
variable {x6x5fminus : Int}
variable {x1x5fplus : Int}
variable {x6x5fminus : Int}
variable {x2x5fplus : Int}
variable {x7x5fminus : Int}
variable {x3x5fplus : Int}
variable {x9x5fminus : Int}
variable {x3x5fminus : Int}
variable {x0x5fplus : Int}
variable {x0x5fminus : Int}
variable {x1x5fplus : Int}
variable {x7x5fplus : Int}
variable {x6x5fplus : Int}
variable {x3x5fplus : Int}
variable {x7x5fminus : Int}
variable {x4x5fplus : Int}
variable {x9x5fplus : Int}
variable {x4x5fminus : Int}
variable {x0x5fplus : Int}
variable {x2x5fplus : Int}
variable {x9x5fminus : Int}
variable {x9x5fplus : Int}
variable {x3x5fminus : Int}
variable {x5x5fminus : Int}
variable {x1x5fminus : Int}
variable {x4x5fplus : Int}
variable {x5x5fplus : Int}
variable {x4x5fminus : Int}
variable {x8x5fminus : Int}
variable {x8x5fplus : Int}
variable {x7x5fplus : Int}
variable {x1x5fminus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 11)
  let let3 := (binrel% HDiv.hDiv (Int.ofNat 16) let2)
  let let4 := (Neg.neg let3)
  let let5 := (binrel% LT.lt let4 let1)
  let let6 := (binrel% HDiv.hDiv (Int.ofNat 18) let2)
  let let7 := (binrel% GT.gt let6 let1)
  let let8 := (Int.ofNat 1)
  let let9 := (Int.ofNat 2)
  let let10 := (binrel% HMul.hMul let9 x6x5fminus)
  let let11 := (Neg.neg let9)
  let let12 := (binrel% HMul.hMul let11 x6x5fplus)
  let let13 := (Neg.neg let8)
  let let14 := (binrel% HMul.hMul let13 x8x5fminus)
  let let15 := (binrel% HMul.hMul let13 x1x5fminus)
  let let16 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let12 let10)))))
  let let17 := (binrel% GE.ge let16 let8)
  let let18 := (Not let17)
  let let19 := (binrel% LT.lt let16 let8)
  let let20 := (binrel% HAdd.hAdd x1x5fplus let15)
  let let21 := (binrel% GE.ge let20 let8)
  let let22 := (Not let21)
  let let23 := (Not let22)
  let let24 := (Eq let23 let21)
  let let25 := (binrel% HMul.hMul let13 x3x5fminus)
  let let26 := (binrel% HAdd.hAdd x3x5fplus let25)
  let let27 := (binrel% HMul.hMul let13 x4x5fplus)
  let let28 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus let26))
  let let29 := (binrel% HMul.hMul let13 x5x5fplus)
  let let30 := (binrel% HMul.hMul let13 x7x5fminus)
  let let31 := (binrel% HMul.hMul let11 x1x5fminus)
  let let32 := (binrel% HMul.hMul let9 x1x5fplus)
  let let33 := (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus let28))))))))
  let let34 := (binrel% GE.ge let33 let1)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt let33 let1)
  let let37 := (binrel% HMul.hMul let13 x2x5fplus)
  let let38 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let37 x2x5fminus)))
  let let39 := (binrel% GE.ge let38 let13)
  let let40 := (binrel% HMul.hMul let13 x2x5fminus)
  let let41 := (binrel% HAdd.hAdd x2x5fplus let40)
  let let42 := (binrel% HMul.hMul let13 x1x5fplus)
  let let43 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x1x5fminus let41))
  let let44 := (binrel% LE.le let43 let8)
  let let45 := (Not let18)
  let let46 := (Eq let45 let17)
  let let47 := (Eq let17 let17)
  let let48 := (binrel% HMul.hMul let13 x9x5fminus)
  let let49 := (binrel% HMul.hMul let13 x3x5fplus)
  let let50 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x9x5fplus let48)))))))))
  let let51 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus let20))))))))
  let let52 := (binrel% GE.ge let50 let8)
  let let53 := (Not let52)
  let let54 := (Not let53)
  let let55 := (Eq let52 let54)
  let let56 := (Eq let54 let52)
  let let57 := (binrel% HMul.hMul let13 x6x5fminus)
  let let58 := (binrel% HMul.hMul let13 x4x5fminus)
  let let59 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x6x5fplus let57)))))))
  let let60 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 let26))))))
  let let61 := (binrel% HDiv.hDiv (Int.ofNat 52) let2)
  let let62 := (binrel% GT.gt let61 let1)
  let let63 := (Rat.ofInt 0)
  let let64 := (binrel% HDiv.hDiv (Int.ofNat 51) let2)
  let let65 := (Neg.neg let64)
  let let66 := (binrel% HMul.hMul let65 let1)
  let let67 := (Eq let52 let52)
  let let68 := (Neg.neg let61)
  let let69 := (binrel% HMul.hMul let61 let13)
  let let70 := (Eq let17 let45)
  let let71 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let13 x0x5fminus))
  let let72 := (binrel% HMul.hMul let11 x3x5fminus)
  let let73 := (binrel% HMul.hMul let9 x3x5fplus)
  let let74 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 let71))))
  let let75 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 let71))
  let let76 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 let75))
  let let77 := (binrel% LE.le let20 let1)
  let let78 := (Not True)
  let let79 := (binrel% LE.le let33 let13)
  let let80 := (Neg.neg (binrel% HDiv.hDiv let9 let2))
  let let81 := (binrel% HDiv.hDiv (Int.ofNat 70) let2)
  let let82 := (binrel% HDiv.hDiv (Int.ofNat 41) let2)
  let let83 := (Neg.neg let82)
  let let84 := (binrel% HDiv.hDiv (Int.ofNat 5) let2)
  let let85 := (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let63 let63))))))))))
  let let86 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let27 x4x5fminus)))
  let let87 := (binrel% GE.ge let86 let1)
  let let88 := (Not let87)
  let let89 := (binrel% LT.lt let86 let1)
  let let90 := (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x0x5fplus) x0x5fminus)
  let let91 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 let90))))))))
  let let92 := (binrel% GE.ge let91 let13)
  let let93 := (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus let71))
  let let94 := (binrel% HMul.hMul let13 x5x5fminus)
  let let95 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 let93))))))
  let let96 := (binrel% LE.le let95 let8)
  let let97 := (binrel% HSub.hSub x1x5fplus x1x5fminus)
  let let98 := (binrel% HAdd.hAdd let42 x1x5fminus)
  let let99 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let40 let98))
  let let100 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let32 let31)))))))))))
  let let101 := (Neg.neg let84)
  let let102 := (binrel% LT.lt let101 let1)
  let let103 := (binrel% HDiv.hDiv (Int.ofNat 10) let2)
  let let104 := (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x1x5fplus) (binrel% HMul.hMul (Neg.neg let103) x1x5fminus))
  let let105 := (binrel% HDiv.hDiv (Int.ofNat 35) let2)
  let let106 := (Neg.neg let105)
  let let107 := (Neg.neg let81)
  let let108 := (binrel% HAdd.hAdd (binrel% HMul.hMul let107 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let105 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let105 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let107 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let105 x0x5fplus) (binrel% HMul.hMul let106 x0x5fminus))))))))))
  let let109 := (binrel% HAdd.hAdd (binrel% HMul.hMul let107 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x2x5fplus) (binrel% HMul.hMul let107 x2x5fminus))))
  let let110 := (binrel% HDiv.hDiv (Int.ofNat 36) let2)
  let let111 := (Neg.neg let6)
  let let112 := (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let110) x6x5fplus) (binrel% HMul.hMul let110 x6x5fminus))))))
  let let113 := (binrel% HMul.hMul let84 x3x5fminus)
  let let114 := (binrel% HMul.hMul let101 x3x5fplus)
  let let115 := (binrel% HMul.hMul let84 x4x5fminus)
  let let116 := (binrel% HMul.hMul let101 x4x5fplus)
  let let117 := (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x6x5fplus) (binrel% HMul.hMul let84 x6x5fminus))))))))
  let let118 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x0x5fplus) (binrel% HMul.hMul let4 x0x5fminus))))))))))
  let let119 := (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x6x5fplus) (binrel% HMul.hMul let83 x6x5fminus))))))))
  let let120 := (binrel% HDiv.hDiv (Int.ofNat 104) let2)
  let let121 := (binrel% HAdd.hAdd (binrel% HMul.hMul let120 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let120) x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x3x5fplus) (binrel% HMul.hMul let68 x3x5fminus))))))))))))
  let let122 := (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x5x5fminus) (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x9x5fplus) (binrel% HMul.hMul let101 x9x5fminus))))))))))
  let let123 := (binrel% HDiv.hDiv (Int.ofNat 102) let2)
  let let124 := (binrel% HAdd.hAdd (binrel% HMul.hMul let65 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let64 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let123) x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let65 x0x5fplus) (binrel% HMul.hMul let64 x0x5fminus))))))
  let let125 := (binrel% HMul.hMul let13 x7x5fplus)
  let let126 := (Rat.ofInt (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x4x5fplus let58))))
  let let127 := (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 let104))))))))))
  let let128 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x1x5fminus let71))))))))
  let let129 := (binrel% GT.gt let103 let1)
  let let130 := (binrel% LE.le let50 let1)
  let let131 := (binrel% LT.lt let83 let1)
  let let132 := (binrel% LE.le let16 let1)
  let let133 := (binrel% LT.lt let50 let8)
  let let134 := (binrel% HMul.hMul let101 let59)
  let let135 := (Eq let34 let34)
  let let136 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let10 let20))))
  let let137 := (binrel% LT.lt let106 let1)
  let let138 := (Neg.neg (Rat.ofInt 1))
  let let139 := (binrel% HMul.hMul let138 let1)
  let let140 := (Eq let21 let21)
  let let141 := (binrel% HMul.hMul let65 let74)
  let let142 := (binrel% HMul.hMul let101 let1)
  let let143 := (binrel% HMul.hMul let13 x6x5fplus)
  let let144 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let143 x6x5fminus)))))))
  let let145 := (binrel% HAdd.hAdd let49 x3x5fminus)
  let let146 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus let145))))))
  let let147 := (binrel% HMul.hMul let6 let16)
  let let148 := (binrel% GE.ge let63 let80)
  let let149 := (binrel% HMul.hMul let11 x2x5fminus)
  let let150 := (binrel% HMul.hMul let9 x2x5fplus)
  let let151 := (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let149 let90))
  let let152 := (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x8x5fminus) (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus let151))))))
  let let153 := (binrel% HMul.hMul let106 let152)
  let let154 := (binrel% GT.gt let84 let1)
  let let155 := (binrel% HMul.hMul let4 let91)
  let let156 := (Not let35)
  let let157 := (Eq let156 let34)
  let let158 := (binrel% HMul.hMul let103 let1)
  let let159 := (Eq let34 let156)
  let let160 := (binrel% HMul.hMul let83 let144)
  let let161 := (binrel% HMul.hMul let106 let1)
  let let162 := (binrel% HMul.hMul let103 let20)
  let let163 := (binrel% LT.lt let65 let1)
  let let164 := (binrel% HMul.hMul let84 let50)
  let let165 := (binrel% HMul.hMul let6 let1)
  let let166 := (binrel% HMul.hMul let107 let38)
  let let167 := (binrel% HMul.hMul let84 let8)
  let let168 := (binrel% HMul.hMul let107 let13)
  let let169 := (binrel% HMul.hMul let61 let33)
  let let170 := (binrel% HMul.hMul let4 let13)
  let let171 := (binrel% HMul.hMul let138 let86)
  let let172 := (binrel% LT.lt let138 let1)
  let let173 := (binrel% HMul.hMul let83 let8)
  let let174 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let161 let158))))))))))
  let let175 := (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let153 let162))))))))))
  let let176 := (binrel% GE.ge let175 let174)
  let let177 := (Not let176)
  let let178 := (binrel% LT.lt let175 let174)
  let let179 := (Eq let21 let23)
  let let180 := (binrel% LT.lt let20 let8)
  let let181 := (binrel% LT.lt let107 let1)
  let let182 := (binrel% LE.le let97 let1)
  let let183 := (binrel% LE.le let100 let13)
  let let184 := (binrel% LE.le let51 let1)
  let let185 := (binrel% LE.le let128 let8)
  let let186 := (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x2x5fminus let98))
  let let187 := (binrel% LE.le let136 let1)
  let let188 := (binrel% LE.le let99 let8)
  let let189 := (binrel% GE.ge let152 let1)
  let let190 := (binrel% GE.ge let146 let8)
  let let191 := (binrel% GE.ge let60 let1)
  let let192 := (binrel% GE.ge let76 let1)
  let let193 := (binrel% GE.ge let144 let8)
  let let194 := (binrel% GE.ge let59 let1)
  let let195 := (binrel% GE.ge let74 let1)
  let let196 := (Not let195)
  let let197 := (Or let196 let88)
  let let198 := (Not let194)
  let let199 := (Not let193)
  let let200 := (Not let189)
  let let201 := (Not let39)
  let let202 := (Not let92)
  let let203 := (Or let21 (Or let200 (Or let201 (Or let17 (Or let198 (Or let202 (Or let199 (Or let34 (Or let52 let197)))))))))
  let let204 := (Or let23 (Or let200 (Or let201 (Or let45 (Or let198 (Or let202 (Or let199 (Or let156 (Or let54 let197)))))))))
  let let205 := (Or let88 False)
  let let206 := (binrel% LE.le let162 let158)
  let let207 := (And let129 let77)
  let let208 := (binrel% LE.le let153 let161)
  let let209 := (And let137 let189)
  let let210 := (binrel% LE.le let166 let168)
  let let211 := (And let181 let39)
  let let212 := (binrel% LE.le let147 let165)
  let let213 := (And let7 let132)
  let let214 := (binrel% LE.le let134 let142)
  let let215 := (And let102 let194)
  let let216 := (binrel% LE.le let155 let170)
  let let217 := (And let5 let92)
  let let218 := (binrel% LE.le let160 let173)
  let let219 := (And let131 let193)
  let let220 := (binrel% LE.le let169 let69)
  let let221 := (And let62 let79)
  let let222 := (binrel% LT.lt let164 let167)
  let let223 := (And let154 let133)
  let let224 := (binrel% LE.le let141 let66)
  let let225 := (And let163 let195)
  let let226 := (binrel% LE.le let171 let139)
  let let227 := (And let172 let87)
(Eq let5 True) → (Eq let7 True) → (Eq let19 let18) → let24 → (Eq let36 let35) → (Eq let44 let39) → let46 → (Eq let47 True) → (Eq let51 let50) → (Eq let56 let55) → (Eq let60 let59) → (Eq let62 True) → let56 → (Eq let66 let63) → (Eq let67 True) → (Eq let69 let68) → (Eq let46 let70) → (Eq let76 let74) → (Eq let77 let22) → (Eq let78 False) → (Eq let79 let35) → (Eq let85 let80) → (Eq let89 let88) → (Eq let96 let92) → (Eq let97 let20) → (Eq let99 let43) → (Eq let100 let33) → (Eq let102 True) → (Eq let127 let63) → (Eq let128 let95) → (Eq let129 True) → (Eq let130 let53) → (Eq let131 True) → (Eq let132 let18) → (Eq let133 let53) → (Eq let134 let117) → (Eq let135 True) → (Eq let136 let16) → (Eq let137 True) → (Eq let139 let63) → (Eq let140 True) → (Eq let141 let124) → (Eq let142 let63) → (Eq let146 let144) → (Eq let147 let112) → (Eq let148 True) → (Eq let153 let108) → (Eq let154 True) → (Eq let155 let118) → let157 → (Eq let158 let63) → (Eq let157 let159) → (Eq let160 let119) → (Eq let161 let63) → (Eq let162 let104) → (Eq let163 True) → (Eq let164 let122) → (Eq let165 let63) → (Eq let166 let109) → (Eq let167 let84) → (Eq let168 let81) → (Eq let169 let121) → (Eq let170 let3) → (Eq let171 let126) → (Eq let172 True) → (Eq let173 let83) → (Eq let178 let177) → (Eq let24 let179) → (Eq let180 let22) → (Eq let181 True) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → let182 → let183 → let184 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x2x5fminus let75)))))) let8) → let185 → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x5x5fminus) (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus let186)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 let186)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus let41)))))) let8) → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 let28)) let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 let86)) let8) → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let150 let149))))) let8) → let187 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x5x5fplus let94))) let1) → let188 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x8x5fplus) (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 let186)))))))))) let8) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x1x5fminus let90)))))))))) let1) → let189 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 let71)))))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x6x5fminus) (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let40 let90)))))))) let13) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let94 let151)))) let13) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus let98)))))) let13) → let190 → let191 → let192 → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 let93)) let8) → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 let41)) let8) → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 let20)) let8) → (binrel% GE.ge (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 let145)) let1) → let87 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 11)
  let let3 := (binrel% HDiv.hDiv (Int.ofNat 16) let2)
  let let4 := (Neg.neg let3)
  let let5 := (binrel% LT.lt let4 let1)
  let let6 := (binrel% HDiv.hDiv (Int.ofNat 18) let2)
  let let7 := (binrel% GT.gt let6 let1)
  let let8 := (Int.ofNat 1)
  let let9 := (Int.ofNat 2)
  let let10 := (binrel% HMul.hMul let9 x6x5fminus)
  let let11 := (Neg.neg let9)
  let let12 := (binrel% HMul.hMul let11 x6x5fplus)
  let let13 := (Neg.neg let8)
  let let14 := (binrel% HMul.hMul let13 x8x5fminus)
  let let15 := (binrel% HMul.hMul let13 x1x5fminus)
  let let16 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let12 let10)))))
  let let17 := (binrel% GE.ge let16 let8)
  let let18 := (Not let17)
  let let19 := (binrel% LT.lt let16 let8)
  let let20 := (binrel% HAdd.hAdd x1x5fplus let15)
  let let21 := (binrel% GE.ge let20 let8)
  let let22 := (Not let21)
  let let23 := (Not let22)
  let let24 := (Eq let23 let21)
  let let25 := (binrel% HMul.hMul let13 x3x5fminus)
  let let26 := (binrel% HAdd.hAdd x3x5fplus let25)
  let let27 := (binrel% HMul.hMul let13 x4x5fplus)
  let let28 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus let26))
  let let29 := (binrel% HMul.hMul let13 x5x5fplus)
  let let30 := (binrel% HMul.hMul let13 x7x5fminus)
  let let31 := (binrel% HMul.hMul let11 x1x5fminus)
  let let32 := (binrel% HMul.hMul let9 x1x5fplus)
  let let33 := (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let31 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus let28))))))))
  let let34 := (binrel% GE.ge let33 let1)
  let let35 := (Not let34)
  let let36 := (binrel% LT.lt let33 let1)
  let let37 := (binrel% HMul.hMul let13 x2x5fplus)
  let let38 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let37 x2x5fminus)))
  let let39 := (binrel% GE.ge let38 let13)
  let let40 := (binrel% HMul.hMul let13 x2x5fminus)
  let let41 := (binrel% HAdd.hAdd x2x5fplus let40)
  let let42 := (binrel% HMul.hMul let13 x1x5fplus)
  let let43 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x1x5fminus let41))
  let let44 := (binrel% LE.le let43 let8)
  let let45 := (Not let18)
  let let46 := (Eq let45 let17)
  let let47 := (Eq let17 let17)
  let let48 := (binrel% HMul.hMul let13 x9x5fminus)
  let let49 := (binrel% HMul.hMul let13 x3x5fplus)
  let let50 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x9x5fplus let48)))))))))
  let let51 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus let20))))))))
  let let52 := (binrel% GE.ge let50 let8)
  let let53 := (Not let52)
  let let54 := (Not let53)
  let let55 := (Eq let52 let54)
  let let56 := (Eq let54 let52)
  let let57 := (binrel% HMul.hMul let13 x6x5fminus)
  let let58 := (binrel% HMul.hMul let13 x4x5fminus)
  let let59 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x6x5fplus let57)))))))
  let let60 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 let26))))))
  let let61 := (binrel% HDiv.hDiv (Int.ofNat 52) let2)
  let let62 := (binrel% GT.gt let61 let1)
  let let63 := (Rat.ofInt 0)
  let let64 := (binrel% HDiv.hDiv (Int.ofNat 51) let2)
  let let65 := (Neg.neg let64)
  let let66 := (binrel% HMul.hMul let65 let1)
  let let67 := (Eq let52 let52)
  let let68 := (Neg.neg let61)
  let let69 := (binrel% HMul.hMul let61 let13)
  let let70 := (Eq let17 let45)
  let let71 := (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let13 x0x5fminus))
  let let72 := (binrel% HMul.hMul let11 x3x5fminus)
  let let73 := (binrel% HMul.hMul let9 x3x5fplus)
  let let74 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 let71))))
  let let75 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 let71))
  let let76 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 let75))
  let let77 := (binrel% LE.le let20 let1)
  let let78 := (Not True)
  let let79 := (binrel% LE.le let33 let13)
  let let80 := (Neg.neg (binrel% HDiv.hDiv let9 let2))
  let let81 := (binrel% HDiv.hDiv (Int.ofNat 70) let2)
  let let82 := (binrel% HDiv.hDiv (Int.ofNat 41) let2)
  let let83 := (Neg.neg let82)
  let let84 := (binrel% HDiv.hDiv (Int.ofNat 5) let2)
  let let85 := (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let3 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd let63 let63))))))))))
  let let86 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let27 x4x5fminus)))
  let let87 := (binrel% GE.ge let86 let1)
  let let88 := (Not let87)
  let let89 := (binrel% LT.lt let86 let1)
  let let90 := (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x0x5fplus) x0x5fminus)
  let let91 := (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 let90))))))))
  let let92 := (binrel% GE.ge let91 let13)
  let let93 := (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus let71))
  let let94 := (binrel% HMul.hMul let13 x5x5fminus)
  let let95 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 let93))))))
  let let96 := (binrel% LE.le let95 let8)
  let let97 := (binrel% HSub.hSub x1x5fplus x1x5fminus)
  let let98 := (binrel% HAdd.hAdd let42 x1x5fminus)
  let let99 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let40 let98))
  let let100 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let32 let31)))))))))))
  let let101 := (Neg.neg let84)
  let let102 := (binrel% LT.lt let101 let1)
  let let103 := (binrel% HDiv.hDiv (Int.ofNat 10) let2)
  let let104 := (binrel% HAdd.hAdd (binrel% HMul.hMul let103 x1x5fplus) (binrel% HMul.hMul (Neg.neg let103) x1x5fminus))
  let let105 := (binrel% HDiv.hDiv (Int.ofNat 35) let2)
  let let106 := (Neg.neg let105)
  let let107 := (Neg.neg let81)
  let let108 := (binrel% HAdd.hAdd (binrel% HMul.hMul let107 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let105 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let105 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let106 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let107 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let105 x0x5fplus) (binrel% HMul.hMul let106 x0x5fminus))))))))))
  let let109 := (binrel% HAdd.hAdd (binrel% HMul.hMul let107 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let81 x2x5fplus) (binrel% HMul.hMul let107 x2x5fminus))))
  let let110 := (binrel% HDiv.hDiv (Int.ofNat 36) let2)
  let let111 := (Neg.neg let6)
  let let112 := (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let110) x6x5fplus) (binrel% HMul.hMul let110 x6x5fminus))))))
  let let113 := (binrel% HMul.hMul let84 x3x5fminus)
  let let114 := (binrel% HMul.hMul let101 x3x5fplus)
  let let115 := (binrel% HMul.hMul let84 x4x5fminus)
  let let116 := (binrel% HMul.hMul let101 x4x5fplus)
  let let117 := (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x6x5fplus) (binrel% HMul.hMul let84 x6x5fminus))))))))
  let let118 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 x0x5fplus) (binrel% HMul.hMul let4 x0x5fminus))))))))))
  let let119 := (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let83 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let82 x6x5fplus) (binrel% HMul.hMul let83 x6x5fminus))))))))
  let let120 := (binrel% HDiv.hDiv (Int.ofNat 104) let2)
  let let121 := (binrel% HAdd.hAdd (binrel% HMul.hMul let120 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let120) x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let68 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x3x5fplus) (binrel% HMul.hMul let68 x3x5fminus))))))))))))
  let let122 := (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let101 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x5x5fminus) (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let115 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd (binrel% HMul.hMul let84 x9x5fplus) (binrel% HMul.hMul let101 x9x5fminus))))))))))
  let let123 := (binrel% HDiv.hDiv (Int.ofNat 102) let2)
  let let124 := (binrel% HAdd.hAdd (binrel% HMul.hMul let65 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let64 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let123) x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let123 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let65 x0x5fplus) (binrel% HMul.hMul let64 x0x5fminus))))))
  let let125 := (binrel% HMul.hMul let13 x7x5fplus)
  let let126 := (Rat.ofInt (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x4x5fplus let58))))
  let let127 := (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let119 (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let112 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 let104))))))))))
  let let128 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x1x5fminus let71))))))))
  let let129 := (binrel% GT.gt let103 let1)
  let let130 := (binrel% LE.le let50 let1)
  let let131 := (binrel% LT.lt let83 let1)
  let let132 := (binrel% LE.le let16 let1)
  let let133 := (binrel% LT.lt let50 let8)
  let let134 := (binrel% HMul.hMul let101 let59)
  let let135 := (Eq let34 let34)
  let let136 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let10 let20))))
  let let137 := (binrel% LT.lt let106 let1)
  let let138 := (Neg.neg (Rat.ofInt 1))
  let let139 := (binrel% HMul.hMul let138 let1)
  let let140 := (Eq let21 let21)
  let let141 := (binrel% HMul.hMul let65 let74)
  let let142 := (binrel% HMul.hMul let101 let1)
  let let143 := (binrel% HMul.hMul let13 x6x5fplus)
  let let144 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let143 x6x5fminus)))))))
  let let145 := (binrel% HAdd.hAdd let49 x3x5fminus)
  let let146 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus let145))))))
  let let147 := (binrel% HMul.hMul let6 let16)
  let let148 := (binrel% GE.ge let63 let80)
  let let149 := (binrel% HMul.hMul let11 x2x5fminus)
  let let150 := (binrel% HMul.hMul let9 x2x5fplus)
  let let151 := (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let149 let90))
  let let152 := (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x8x5fminus) (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus let151))))))
  let let153 := (binrel% HMul.hMul let106 let152)
  let let154 := (binrel% GT.gt let84 let1)
  let let155 := (binrel% HMul.hMul let4 let91)
  let let156 := (Not let35)
  let let157 := (Eq let156 let34)
  let let158 := (binrel% HMul.hMul let103 let1)
  let let159 := (Eq let34 let156)
  let let160 := (binrel% HMul.hMul let83 let144)
  let let161 := (binrel% HMul.hMul let106 let1)
  let let162 := (binrel% HMul.hMul let103 let20)
  let let163 := (binrel% LT.lt let65 let1)
  let let164 := (binrel% HMul.hMul let84 let50)
  let let165 := (binrel% HMul.hMul let6 let1)
  let let166 := (binrel% HMul.hMul let107 let38)
  let let167 := (binrel% HMul.hMul let84 let8)
  let let168 := (binrel% HMul.hMul let107 let13)
  let let169 := (binrel% HMul.hMul let61 let33)
  let let170 := (binrel% HMul.hMul let4 let13)
  let let171 := (binrel% HMul.hMul let138 let86)
  let let172 := (binrel% LT.lt let138 let1)
  let let173 := (binrel% HMul.hMul let83 let8)
  let let174 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let165 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let161 let158))))))))))
  let let175 := (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let153 let162))))))))))
  let let176 := (binrel% GE.ge let175 let174)
  let let177 := (Not let176)
  let let178 := (binrel% LT.lt let175 let174)
  let let179 := (Eq let21 let23)
  let let180 := (binrel% LT.lt let20 let8)
  let let181 := (binrel% LT.lt let107 let1)
  let let182 := (binrel% LE.le let97 let1)
  let let183 := (binrel% LE.le let100 let13)
  let let184 := (binrel% LE.le let51 let1)
  let let185 := (binrel% LE.le let128 let8)
  let let186 := (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x2x5fminus let98))
  let let187 := (binrel% LE.le let136 let1)
  let let188 := (binrel% LE.le let99 let8)
  let let189 := (binrel% GE.ge let152 let1)
  let let190 := (binrel% GE.ge let146 let8)
  let let191 := (binrel% GE.ge let60 let1)
  let let192 := (binrel% GE.ge let76 let1)
  let let193 := (binrel% GE.ge let144 let8)
  let let194 := (binrel% GE.ge let59 let1)
  let let195 := (binrel% GE.ge let74 let1)
  let let196 := (Not let195)
  let let197 := (Or let196 let88)
  let let198 := (Not let194)
  let let199 := (Not let193)
  let let200 := (Not let189)
  let let201 := (Not let39)
  let let202 := (Not let92)
  let let203 := (Or let21 (Or let200 (Or let201 (Or let17 (Or let198 (Or let202 (Or let199 (Or let34 (Or let52 let197)))))))))
  let let204 := (Or let23 (Or let200 (Or let201 (Or let45 (Or let198 (Or let202 (Or let199 (Or let156 (Or let54 let197)))))))))
  let let205 := (Or let88 False)
  let let206 := (binrel% LE.le let162 let158)
  let let207 := (And let129 let77)
  let let208 := (binrel% LE.le let153 let161)
  let let209 := (And let137 let189)
  let let210 := (binrel% LE.le let166 let168)
  let let211 := (And let181 let39)
  let let212 := (binrel% LE.le let147 let165)
  let let213 := (And let7 let132)
  let let214 := (binrel% LE.le let134 let142)
  let let215 := (And let102 let194)
  let let216 := (binrel% LE.le let155 let170)
  let let217 := (And let5 let92)
  let let218 := (binrel% LE.le let160 let173)
  let let219 := (And let131 let193)
  let let220 := (binrel% LE.le let169 let69)
  let let221 := (And let62 let79)
  let let222 := (binrel% LT.lt let164 let167)
  let let223 := (And let154 let133)
  let let224 := (binrel% LE.le let141 let66)
  let let225 := (And let163 let195)
  let let226 := (binrel% LE.le let171 let139)
  let let227 := (And let172 let87)
fun lean_r0 : (Eq let5 True) => -- EVALUATE
fun lean_r1 : (Eq let7 True) => -- EVALUATE
fun lean_r2 : (Eq let19 let18) => -- THEORY_REWRITE_ARITH
fun lean_r3 : let24 => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq let36 let35) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let44 let39) => -- THEORY_REWRITE_ARITH
fun lean_r6 : let46 => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq let47 True) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let51 let50) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let56 let55) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq let60 let59) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let62 True) => -- EVALUATE
fun lean_r12 : let56 => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let66 let63) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let67 True) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let69 let68) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let46 let70) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let76 let74) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let77 let22) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let78 False) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let79 let35) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let85 let80) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let89 let88) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let96 let92) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let97 let20) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let99 let43) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let100 let33) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let102 True) => -- EVALUATE
fun lean_r28 : (Eq let127 let63) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let128 let95) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let129 True) => -- EVALUATE
fun lean_r31 : (Eq let130 let53) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let131 True) => -- EVALUATE
fun lean_r33 : (Eq let132 let18) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let133 let53) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let134 let117) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let135 True) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq let136 let16) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let137 True) => -- EVALUATE
fun lean_r39 : (Eq let139 let63) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let140 True) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let141 let124) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let142 let63) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let146 let144) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let147 let112) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let148 True) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let153 let108) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let154 True) => -- EVALUATE
fun lean_r48 : (Eq let155 let118) => -- THEORY_REWRITE_ARITH
fun lean_r49 : let157 => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq let158 let63) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let157 let159) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let160 let119) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let161 let63) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let162 let104) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let163 True) => -- EVALUATE
fun lean_r56 : (Eq let164 let122) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let165 let63) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let166 let109) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let167 let84) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let168 let81) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let169 let121) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let170 let3) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let171 let126) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let172 True) => -- EVALUATE
fun lean_r65 : (Eq let173 let83) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let178 let177) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let24 let179) => -- THEORY_REWRITE_BOOL
fun lean_r68 : (Eq let180 let22) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let181 True) => -- EVALUATE
fun lean_a70 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a71 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a72 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a73 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a74 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a75 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a76 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a77 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a78 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a79 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a80 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a81 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a82 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a83 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a84 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a85 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a86 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a87 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a88 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a89 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a90 : let182 =>
fun lean_a91 : let183 =>
fun lean_a92 : let184 =>
fun lean_a93 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x2x5fminus let75)))))) let8) =>
fun lean_a94 : let185 =>
fun lean_a95 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x5x5fminus) (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus let186)))))) let1) =>
fun lean_a96 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 let186)))))) let1) =>
fun lean_a97 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus let41)))))) let8) =>
fun lean_a98 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 let28)) let1) =>
fun lean_a99 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 let86)) let8) =>
fun lean_a100 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let94 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let150 let149))))) let8) =>
fun lean_a101 : let187 =>
fun lean_a102 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x5x5fplus let94))) let1) =>
fun lean_a103 : let188 =>
fun lean_a104 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x8x5fplus) (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 let186)))))))))) let8) =>
fun lean_a105 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd x1x5fminus let90)))))))))) let1) =>
fun lean_a106 : let189 =>
fun lean_a107 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let25 let71)))))))) let1) =>
fun lean_a108 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let9 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 x6x5fminus) (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let40 let90)))))))) let13) =>
fun lean_a109 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let94 let151)))) let13) =>
fun lean_a110 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x5x5fminus let98)))))) let13) =>
fun lean_a111 : let190 =>
fun lean_a112 : let191 =>
fun lean_a113 : let192 =>
fun lean_a114 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 let93)) let8) =>
fun lean_a115 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 let41)) let8) =>
fun lean_a116 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let57 let20)) let8) =>
fun lean_a117 : (binrel% GE.ge (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let58 let145)) let1) =>
fun lean_a118 : let87 => by
have lean_s0 : (Or let23 (Or let200 (Or let201 (Or let45 (Or let198 (Or let202 (Or let199 (Or let156 (Or let54 (Or let196 let205)))))))))) :=
  (scope (fun lean_a119 : let22 =>
    (scope (fun lean_a120 : let189 =>
      (scope (fun lean_a121 : let39 =>
        (scope (fun lean_a122 : let18 =>
          (scope (fun lean_a123 : let194 =>
            (scope (fun lean_a124 : let92 =>
              (scope (fun lean_a125 : let193 =>
                (scope (fun lean_a126 : let35 =>
                  (scope (fun lean_a127 : let53 =>
                    (scope (fun lean_a128 : let195 =>
                      (scope (fun lean_a129 : let87 =>
                        have lean_s0 : let205 :=
                          (scope (fun lean_a128 : let87 =>
                            have lean_s0 : let172 := by timed trueElim lean_r64
                            have lean_s1 : let227 := by timed And.intro lean_s0 lean_a128
                            have lean_s2 : (Implies let227 let226) := by arithMulNeg [let86, let1, let138], 3
                            have lean_s3 : let226 := by timed modusPonens lean_s1 lean_s2
                            have lean_s4 : let163 := by timed trueElim lean_r55
                            let lean_s5 := by timed flipCongrArg lean_r17 [GE.ge]
                            have lean_s6 : (Eq let1 let1) := by timed rfl
                            have lean_s7 : (Eq let192 let195) := by timed congr lean_s5 lean_s6
                            have lean_s8 : let195 := by timed eqResolve lean_a113 lean_s7
                            have lean_s9 : let225 := by timed And.intro lean_s4 lean_s8
                            have lean_s10 : (Implies let225 let224) := by arithMulNeg [let74, let1, let65], 3
                            have lean_s11 : let224 := by timed modusPonens lean_s9 lean_s10
                            have lean_s12 : let154 := by timed trueElim lean_r47
                            let lean_s13 := by timed flipCongrArg lean_r8 [LE.le]
                            have lean_s14 : (Eq let184 let130) := by timed congr lean_s13 lean_s6
                            have lean_s15 : (Eq let184 let53) := by timed Eq.trans lean_s14 lean_r31
                            have lean_s16 : let53 := by timed eqResolve lean_a92 lean_s15
                            have lean_s17 : (Eq let53 let133) := by timed Eq.symm lean_r34
                            have lean_s18 : let133 := by timed eqResolve lean_s16 lean_s17
                            have lean_s19 : let223 := by timed And.intro lean_s12 lean_s18
                            have lean_s20 : (Implies let223 let222) := by arithMulPos [let50, let8, let84], 0
                            have lean_s21 : let222 := by timed modusPonens lean_s19 lean_s20
                            have lean_s22 : let62 := by timed trueElim lean_r11
                            let lean_s23 := by timed flipCongrArg lean_r26 [LE.le]
                            have lean_s24 : (Eq let13 let13) := by timed rfl
                            have lean_s25 : (Eq let183 let79) := by timed congr lean_s23 lean_s24
                            have lean_s26 : (Eq let183 let35) := by timed Eq.trans lean_s25 lean_r20
                            have lean_s27 : let35 := by timed eqResolve lean_a91 lean_s26
                            have lean_s28 : (Eq let35 let36) := by timed Eq.symm lean_r4
                            have lean_s29 : let36 := by timed eqResolve lean_s27 lean_s28
                            have lean_s30 : let79 := by intTightUb lean_s29
                            have lean_s31 : let221 := by timed And.intro lean_s22 lean_s30
                            have lean_s32 : (Implies let221 let220) := by arithMulPos [let33, let13, let61], 1
                            have lean_s33 : let220 := by timed modusPonens lean_s31 lean_s32
                            have lean_s34 : let131 := by timed trueElim lean_r32
                            let lean_s35 := by timed flipCongrArg lean_r43 [GE.ge]
                            have lean_s36 : (Eq let8 let8) := by timed rfl
                            have lean_s37 : (Eq let190 let193) := by timed congr lean_s35 lean_s36
                            have lean_s38 : let193 := by timed eqResolve lean_a111 lean_s37
                            have lean_s39 : let219 := by timed And.intro lean_s34 lean_s38
                            have lean_s40 : (Implies let219 let218) := by arithMulNeg [let144, let8, let83], 3
                            have lean_s41 : let218 := by timed modusPonens lean_s39 lean_s40
                            have lean_s42 : let5 := by timed trueElim lean_r0
                            let lean_s43 := by timed flipCongrArg lean_r29 [LE.le]
                            have lean_s44 : (Eq let185 let96) := by timed congr lean_s43 lean_s36
                            have lean_s45 : (Eq let185 let92) := by timed Eq.trans lean_s44 lean_r23
                            have lean_s46 : let92 := by timed eqResolve lean_a94 lean_s45
                            have lean_s47 : let217 := by timed And.intro lean_s42 lean_s46
                            have lean_s48 : (Implies let217 let216) := by arithMulNeg [let91, let13, let4], 3
                            have lean_s49 : let216 := by timed modusPonens lean_s47 lean_s48
                            have lean_s50 : let102 := by timed trueElim lean_r27
                            let lean_s51 := by timed flipCongrArg lean_r10 [GE.ge]
                            have lean_s52 : (Eq let191 let194) := by timed congr lean_s51 lean_s6
                            have lean_s53 : let194 := by timed eqResolve lean_a112 lean_s52
                            have lean_s54 : let215 := by timed And.intro lean_s50 lean_s53
                            have lean_s55 : (Implies let215 let214) := by arithMulNeg [let59, let1, let101], 3
                            have lean_s56 : let214 := by timed modusPonens lean_s54 lean_s55
                            have lean_s57 : let7 := by timed trueElim lean_r1
                            let lean_s58 := by timed flipCongrArg lean_r37 [LE.le]
                            have lean_s59 : (Eq let187 let132) := by timed congr lean_s58 lean_s6
                            have lean_s60 : (Eq let187 let18) := by timed Eq.trans lean_s59 lean_r33
                            have lean_s61 : let18 := by timed eqResolve lean_a101 lean_s60
                            have lean_s62 : (Eq let18 let19) := by timed Eq.symm lean_r2
                            have lean_s63 : let19 := by timed eqResolve lean_s61 lean_s62
                            have lean_s64 : let132 := by intTightUb lean_s63
                            have lean_s65 : let213 := by timed And.intro lean_s57 lean_s64
                            have lean_s66 : (Implies let213 let212) := by arithMulPos [let16, let1, let6], 1
                            have lean_s67 : let212 := by timed modusPonens lean_s65 lean_s66
                            have lean_s68 : let181 := by timed trueElim lean_r69
                            let lean_s69 := by timed flipCongrArg lean_r25 [LE.le]
                            have lean_s70 : (Eq let188 let44) := by timed congr lean_s69 lean_s36
                            have lean_s71 : (Eq let188 let39) := by timed Eq.trans lean_s70 lean_r5
                            have lean_s72 : let39 := by timed eqResolve lean_a103 lean_s71
                            have lean_s73 : let211 := by timed And.intro lean_s68 lean_s72
                            have lean_s74 : (Implies let211 let210) := by arithMulNeg [let38, let13, let107], 3
                            have lean_s75 : let210 := by timed modusPonens lean_s73 lean_s74
                            have lean_s76 : let137 := by timed trueElim lean_r38
                            have lean_s77 : let209 := by timed And.intro lean_s76 lean_a120
                            have lean_s78 : (Implies let209 let208) := by arithMulNeg [let152, let1, let106], 3
                            have lean_s79 : let208 := by timed modusPonens lean_s77 lean_s78
                            have lean_s80 : let129 := by timed trueElim lean_r30
                            let lean_s81 := by timed flipCongrArg lean_r24 [LE.le]
                            have lean_s82 : (Eq let182 let77) := by timed congr lean_s81 lean_s6
                            have lean_s83 : (Eq let182 let22) := by timed Eq.trans lean_s82 lean_r18
                            have lean_s84 : let22 := by timed eqResolve lean_a90 lean_s83
                            have lean_s85 : (Eq let22 let180) := by timed Eq.symm lean_r68
                            have lean_s86 : let180 := by timed eqResolve lean_s84 lean_s85
                            have lean_s87 : let77 := by intTightUb lean_s86
                            have lean_s88 : let207 := by timed And.intro lean_s80 lean_s87
                            have lean_s89 : (Implies let207 let206) := by arithMulPos [let20, let1, let103], 1
                            have lean_s90 : let206 := by timed modusPonens lean_s88 lean_s89
                            have lean_s91 : let178 := by sumBounds [lean_s3, lean_s11, lean_s21, lean_s33, lean_s41, lean_s49, lean_s56, lean_s67, lean_s75, lean_s79, lean_s90]
                            let lean_s92 := by timed congrHAdd lean_r46 lean_r54
                            let lean_s93 := by timed congrHAdd lean_r58 lean_s92
                            let lean_s94 := by timed congrHAdd lean_r44 lean_s93
                            let lean_s95 := by timed congrHAdd lean_r35 lean_s94
                            let lean_s96 := by timed congrHAdd lean_r48 lean_s95
                            let lean_s97 := by timed congrHAdd lean_r52 lean_s96
                            let lean_s98 := by timed congrHAdd lean_r61 lean_s97
                            let lean_s99 := by timed congrHAdd lean_r56 lean_s98
                            let lean_s100 := by timed congrHAdd lean_r41 lean_s99
                            have lean_s101 : (Eq let175 let127) := by timed congrHAdd lean_r63 lean_s100
                            have lean_s102 : (Eq let175 let63) := by timed Eq.trans lean_s101 lean_r28
                            let lean_s103 := by timed flipCongrArg lean_s102 [GE.ge]
                            let lean_s104 := by timed congrHAdd lean_r53 lean_r50
                            let lean_s105 := by timed congrHAdd lean_r60 lean_s104
                            let lean_s106 := by timed congrHAdd lean_r57 lean_s105
                            let lean_s107 := by timed congrHAdd lean_r42 lean_s106
                            let lean_s108 := by timed congrHAdd lean_r62 lean_s107
                            let lean_s109 := by timed congrHAdd lean_r65 lean_s108
                            let lean_s110 := by timed congrHAdd lean_r15 lean_s109
                            let lean_s111 := by timed congrHAdd lean_r59 lean_s110
                            let lean_s112 := by timed congrHAdd lean_r13 lean_s111
                            have lean_s113 : (Eq let174 let85) := by timed congrHAdd lean_r39 lean_s112
                            have lean_s114 : (Eq let174 let80) := by timed Eq.trans lean_s113 lean_r21
                            have lean_s115 : (Eq let176 let148) := by timed congr lean_s103 lean_s114
                            have lean_s116 : (Eq let176 True) := by timed Eq.trans lean_s115 lean_r45
                            have lean_s117 : (Eq let177 let78) := by timed flipCongrArg lean_s116 [Not]
                            have lean_s118 : (Eq let177 False) := by timed Eq.trans lean_s117 lean_r19
                            have lean_s119 : (Eq let178 False) := by timed Eq.trans lean_r66 lean_s118
                            show False from by timed eqResolve lean_s91 lean_s119
                          ))
                        have lean_s1 : let88 := by liftOrNToNeg lean_s0
                        have lean_s2 : (Eq let88 let89) := by timed Eq.symm lean_r22
                        have lean_s3 : let89 := by timed eqResolve lean_s1 lean_s2
                        have lean_s4 : let88 := by timed eqResolve lean_s3 lean_r22
                        show False from by timed contradiction lean_a129 lean_s4
  ))))))))))))))))))))))
have lean_s1 : (Not (And let22 (And let189 (And let39 (And let18 (And let194 (And let92 (And let193 (And let35 (And let53 (And let195 let87))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let204 := by timed flipNotAnd lean_s1 [let22, let189, let39, let18, let194, let92, let193, let35, let53, let195, let87]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let140 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let179 let140) := by timed congr lean_s5 lean_r3
have lean_s7 : (Eq let179 True) := by timed Eq.trans lean_s6 lean_r40
have lean_s8 : (Eq let24 True) := by timed Eq.trans lean_r67 lean_s7
have lean_s9 : let24 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq let200 let200) := by timed rfl
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq let201 let201) := by timed rfl
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : let47 := by timed rfl
let lean_s16 := by timed flipCongrArg lean_s15 [Eq]
have lean_s17 : (Eq let70 let47) := by timed congr lean_s16 lean_r6
have lean_s18 : (Eq let70 True) := by timed Eq.trans lean_s17 lean_r7
have lean_s19 : (Eq let46 True) := by timed Eq.trans lean_r16 lean_s18
have lean_s20 : let46 := by timed trueElim lean_s19
let lean_s21 := by timed congr lean_s3 lean_s20
have lean_s22 : (Eq let198 let198) := by timed rfl
let lean_s23 := by timed congr lean_s3 lean_s22
have lean_s24 : (Eq let202 let202) := by timed rfl
let lean_s25 := by timed congr lean_s3 lean_s24
have lean_s26 : (Eq let199 let199) := by timed rfl
let lean_s27 := by timed congr lean_s3 lean_s26
have lean_s28 : let135 := by timed rfl
let lean_s29 := by timed flipCongrArg lean_s28 [Eq]
have lean_s30 : (Eq let159 let135) := by timed congr lean_s29 lean_r49
have lean_s31 : (Eq let159 True) := by timed Eq.trans lean_s30 lean_r36
have lean_s32 : (Eq let157 True) := by timed Eq.trans lean_r51 lean_s31
have lean_s33 : let157 := by timed trueElim lean_s32
let lean_s34 := by timed congr lean_s3 lean_s33
have lean_s35 : let67 := by timed rfl
let lean_s36 := by timed flipCongrArg lean_s35 [Eq]
have lean_s37 : (Eq let55 let67) := by timed congr lean_s36 lean_r12
have lean_s38 : (Eq let55 True) := by timed Eq.trans lean_s37 lean_r14
have lean_s39 : (Eq let56 True) := by timed Eq.trans lean_r9 lean_s38
have lean_s40 : let56 := by timed trueElim lean_s39
let lean_s41 := by timed congr lean_s3 lean_s40
have lean_s42 : (Eq let196 let196) := by timed rfl
let lean_s43 := by timed congr lean_s3 lean_s42
have lean_s44 : (Eq let88 let88) := by timed rfl
let lean_s45 := by timed congr lean_s43 lean_s44
let lean_s46 := by timed congr lean_s41 lean_s45
let lean_s47 := by timed congr lean_s34 lean_s46
let lean_s48 := by timed congr lean_s27 lean_s47
let lean_s49 := by timed congr lean_s25 lean_s48
let lean_s50 := by timed congr lean_s23 lean_s49
let lean_s51 := by timed congr lean_s21 lean_s50
let lean_s52 := by timed congr lean_s14 lean_s51
let lean_s53 := by timed congr lean_s12 lean_s52
have lean_s54 : (Eq let204 let203) := by timed congr lean_s10 lean_s53
have lean_s55 : let203 := by timed eqResolve lean_s2 lean_s54
have lean_s56 : (Or let21 (Or let34 (Or let52 (Or let17 (Or let202 (Or let201 (Or let200 (Or let199 (Or let198 let197))))))))) := by permutateOr lean_s55, [0, 7, 8, 3, 5, 2, 1, 6, 4, 9, 10], (- 1)
let lean_s57 := by R2 lean_s56, lean_a118, let87, [(- 1), 0]
let lean_s58 := by timed flipCongrArg lean_r17 [GE.ge]
have lean_s59 : (Eq let1 let1) := by timed rfl
have lean_s60 : (Eq let192 let195) := by timed congr lean_s58 lean_s59
have lean_s61 : let195 := by timed eqResolve lean_a113 lean_s60
let lean_s62 := by R2 lean_s57, lean_s61, let195, [(- 1), 0]
let lean_s63 := by timed flipCongrArg lean_r10 [GE.ge]
have lean_s64 : (Eq let191 let194) := by timed congr lean_s63 lean_s59
have lean_s65 : let194 := by timed eqResolve lean_a112 lean_s64
let lean_s66 := by R2 lean_s62, lean_s65, let194, [(- 1), 0]
let lean_s67 := by timed flipCongrArg lean_r43 [GE.ge]
have lean_s68 : (Eq let8 let8) := by timed rfl
have lean_s69 : (Eq let190 let193) := by timed congr lean_s67 lean_s68
have lean_s70 : let193 := by timed eqResolve lean_a111 lean_s69
let lean_s71 := by R2 lean_s66, lean_s70, let193, [(- 1), 0]
let lean_s72 := by R2 lean_s71, lean_a106, let189, [(- 1), 0]
let lean_s73 := by timed flipCongrArg lean_r25 [LE.le]
have lean_s74 : (Eq let188 let44) := by timed congr lean_s73 lean_s68
have lean_s75 : (Eq let188 let39) := by timed Eq.trans lean_s74 lean_r5
have lean_s76 : let39 := by timed eqResolve lean_a103 lean_s75
let lean_s77 := by R2 lean_s72, lean_s76, let39, [(- 1), 0]
let lean_s78 := by timed flipCongrArg lean_r37 [LE.le]
have lean_s79 : (Eq let187 let132) := by timed congr lean_s78 lean_s59
have lean_s80 : (Eq let187 let18) := by timed Eq.trans lean_s79 lean_r33
have lean_s81 : let18 := by timed eqResolve lean_a101 lean_s80
let lean_s82 := by R1 lean_s77, lean_s81, let17, [(- 1), 0]
let lean_s83 := by timed flipCongrArg lean_r29 [LE.le]
have lean_s84 : (Eq let185 let96) := by timed congr lean_s83 lean_s68
have lean_s85 : (Eq let185 let92) := by timed Eq.trans lean_s84 lean_r23
have lean_s86 : let92 := by timed eqResolve lean_a94 lean_s85
let lean_s87 := by R2 lean_s82, lean_s86, let92, [(- 1), 0]
let lean_s88 := by timed flipCongrArg lean_r8 [LE.le]
have lean_s89 : (Eq let184 let130) := by timed congr lean_s88 lean_s59
have lean_s90 : (Eq let184 let53) := by timed Eq.trans lean_s89 lean_r31
have lean_s91 : let53 := by timed eqResolve lean_a92 lean_s90
let lean_s92 := by R1 lean_s87, lean_s91, let52, [(- 1), 0]
let lean_s93 := by timed flipCongrArg lean_r26 [LE.le]
have lean_s94 : (Eq let13 let13) := by timed rfl
have lean_s95 : (Eq let183 let79) := by timed congr lean_s93 lean_s94
have lean_s96 : (Eq let183 let35) := by timed Eq.trans lean_s95 lean_r20
have lean_s97 : let35 := by timed eqResolve lean_a91 lean_s96
let lean_s98 := by R1 lean_s92, lean_s97, let34, [(- 1), 0]
let lean_s99 := by timed flipCongrArg lean_r24 [LE.le]
have lean_s100 : (Eq let182 let77) := by timed congr lean_s99 lean_s59
have lean_s101 : (Eq let182 let22) := by timed Eq.trans lean_s100 lean_r18
have lean_s102 : let22 := by timed eqResolve lean_a90 lean_s101
exact (show False from by R1 lean_s98, lean_s102, let21, [0, 0])


