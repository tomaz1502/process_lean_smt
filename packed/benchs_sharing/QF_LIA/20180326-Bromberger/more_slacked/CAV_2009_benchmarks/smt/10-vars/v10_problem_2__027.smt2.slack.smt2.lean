open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x2x5fplus : Int}
variable {x2x5fminus : Int}
variable {x1x5fplus : Int}
variable {x1x5fminus : Int}
variable {x7x5fplus : Int}
variable {x7x5fminus : Int}
variable {x6x5fplus : Int}
variable {x9x5fminus : Int}
variable {x7x5fminus : Int}
variable {x8x5fminus : Int}
variable {x6x5fplus : Int}
variable {x6x5fminus : Int}
variable {x3x5fminus : Int}
variable {x8x5fplus : Int}
variable {x5x5fplus : Int}
variable {x7x5fplus : Int}
variable {x5x5fminus : Int}
variable {x3x5fplus : Int}
variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x0x5fminus : Int}
variable {x0x5fplus : Int}
variable {x9x5fplus : Int}
variable {x0x5fminus : Int}
variable {x0x5fplus : Int}
variable {x9x5fplus : Int}
variable {x1x5fminus : Int}
variable {x1x5fplus : Int}
variable {x2x5fminus : Int}
variable {x4x5fminus : Int}
variable {x9x5fminus : Int}
variable {x2x5fplus : Int}
variable {x8x5fminus : Int}
variable {x8x5fplus : Int}
variable {x6x5fminus : Int}
variable {x5x5fminus : Int}
variable {x5x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (binrel% GT.gt let2 let1)
  let let4 := (Int.ofNat 22)
  let let5 := (binrel% HDiv.hDiv (Int.ofNat 15) let4)
  let let6 := (binrel% GT.gt let5 let1)
  let let7 := (Int.ofNat 1)
  let let8 := (Neg.neg let7)
  let let9 := (binrel% HMul.hMul let8 x2x5fminus)
  let let10 := (binrel% HAdd.hAdd x2x5fplus let9)
  let let11 := (binrel% HMul.hMul let8 x3x5fplus)
  let let12 := (binrel% HMul.hMul let8 x4x5fminus)
  let let13 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus let10))))
  let let14 := (binrel% HMul.hMul let8 x1x5fminus)
  let let15 := (binrel% HMul.hMul let8 x9x5fminus)
  let let16 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let14 let13))))
  let let17 := (binrel% GE.ge let16 let7)
  let let18 := (Not let17)
  let let19 := (binrel% LT.lt let16 let7)
  let let20 := (Int.ofNat 11)
  let let21 := (binrel% HDiv.hDiv (Int.ofNat 48) let20)
  let let22 := (binrel% GT.gt let21 let1)
  let let23 := (binrel% HMul.hMul let8 x6x5fminus)
  let let24 := (binrel% HAdd.hAdd x6x5fplus let23)
  let let25 := (binrel% HMul.hMul let8 x1x5fplus)
  let let26 := (binrel% HMul.hMul let8 x7x5fminus)
  let let27 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x1x5fminus let24))))))
  let let28 := (binrel% GE.ge let27 let7)
  let let29 := (Not let28)
  let let30 := (binrel% LT.lt let27 let7)
  let let31 := (binrel% HDiv.hDiv (Int.ofNat 25) let20)
  let let32 := (binrel% GT.gt let31 let1)
  let let33 := (binrel% HMul.hMul let8 x4x5fplus)
  let let34 := (Int.ofNat 2)
  let let35 := (binrel% HMul.hMul let34 x7x5fminus)
  let let36 := (Neg.neg let34)
  let let37 := (binrel% HMul.hMul let36 x7x5fplus)
  let let38 := (binrel% HMul.hMul let8 x8x5fminus)
  let let39 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus let24))))))
  let let40 := (binrel% GE.ge let39 let1)
  let let41 := (Not let40)
  let let42 := (binrel% LT.lt let39 let1)
  let let43 := (binrel% HDiv.hDiv (Int.ofNat 5) let4)
  let let44 := (Neg.neg let43)
  let let45 := (binrel% LT.lt let44 let1)
  let let46 := (binrel% HDiv.hDiv (Int.ofNat 27) let20)
  let let47 := (binrel% GT.gt let46 let1)
  let let48 := (binrel% HMul.hMul let8 x6x5fplus)
  let let49 := (binrel% HMul.hMul let36 x5x5fminus)
  let let50 := (binrel% HMul.hMul let34 x5x5fplus)
  let let51 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let48 x6x5fminus)))))))
  let let52 := (binrel% GE.ge let51 let7)
  let let53 := (Not let52)
  let let54 := (binrel% LT.lt let51 let7)
  let let55 := (binrel% HDiv.hDiv (Int.ofNat 57) let4)
  let let56 := (Neg.neg let55)
  let let57 := (binrel% LT.lt let56 let1)
  let let58 := (binrel% HDiv.hDiv (Int.ofNat 35) let4)
  let let59 := (Neg.neg let58)
  let let60 := (binrel% LT.lt let59 let1)
  let let61 := (binrel% HDiv.hDiv (Int.ofNat 37) let20)
  let let62 := (binrel% HMul.hMul let61 let34)
  let let63 := (binrel% HMul.hMul let59 let7)
  let let64 := (binrel% HMul.hMul let56 let7)
  let let65 := (binrel% HMul.hMul let46 let1)
  let let66 := (binrel% HDiv.hDiv (Int.ofNat 43) let20)
  let let67 := (Neg.neg let66)
  let let68 := (binrel% HMul.hMul let67 let7)
  let let69 := (binrel% HMul.hMul let44 let7)
  let let70 := (binrel% HMul.hMul let31 let1)
  let let71 := (binrel% HMul.hMul let21 let1)
  let let72 := (binrel% HDiv.hDiv (Int.ofNat 111) let4)
  let let73 := (Neg.neg let72)
  let let74 := (binrel% HMul.hMul let73 let1)
  let let75 := (binrel% HMul.hMul let5 let7)
  let let76 := (binrel% HMul.hMul let2 let1)
  let let77 := (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let63 let62))))))))))
  let let78 := (binrel% HMul.hMul let8 x5x5fplus)
  let let79 := (binrel% HAdd.hAdd let78 x5x5fminus)
  let let80 := (binrel% HMul.hMul let8 x2x5fplus)
  let let81 := (binrel% HMul.hMul let8 x7x5fplus)
  let let82 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let79))))))))
  let let83 := (binrel% HMul.hMul let61 let82)
  let let84 := (binrel% HMul.hMul let8 x0x5fplus)
  let let85 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus let24))))))))
  let let86 := (binrel% HMul.hMul let59 let85)
  let let87 := (binrel% HMul.hMul let8 x3x5fminus)
  let let88 := (binrel% HMul.hMul let8 x0x5fminus)
  let let89 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5x5fminus let24))))))))))))
  let let90 := (binrel% HMul.hMul let56 let89)
  let let91 := (binrel% HMul.hMul let46 let51)
  let let92 := (binrel% HMul.hMul let8 x5x5fminus)
  let let93 := (binrel% HAdd.hAdd x5x5fplus let92)
  let let94 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x1x5fminus let93))))))
  let let95 := (binrel% HMul.hMul let67 let94)
  let let96 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let93))))))
  let let97 := (binrel% HMul.hMul let44 let96)
  let let98 := (binrel% HMul.hMul let31 let39)
  let let99 := (binrel% HMul.hMul let21 let27)
  let let100 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let11 x3x5fminus)))))
  let let101 := (binrel% HMul.hMul let73 let100)
  let let102 := (binrel% HMul.hMul let5 let16)
  let let103 := (binrel% HAdd.hAdd let33 x4x5fminus)
  let let104 := (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let88 let103))
  let let105 := (binrel% HMul.hMul let2 let104)
  let let106 := (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let86 let83))))))))))
  let let107 := (binrel% GE.ge let106 let77)
  let let108 := (Not let107)
  let let109 := (binrel% LT.lt let106 let77)
  let let110 := (Neg.neg let5)
  let let111 := (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x2x5fplus) (binrel% HMul.hMul let110 x2x5fminus))))))))))
  let let112 := (Eq let28 let28)
  let let113 := (Not let41)
  let let114 := (Eq let40 let113)
  let let115 := (Eq let113 let40)
  let let116 := (Not let18)
  let let117 := (Eq let17 let116)
  let let118 := (Eq let116 let17)
  let let119 := (binrel% HDiv.hDiv (Int.ofNat 74) let20)
  let let120 := (binrel% LT.lt let67 let1)
  let let121 := (binrel% HAdd.hAdd let84 x0x5fminus)
  let let122 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus let121))))))))
  let let123 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 10) let20))
  let let124 := (Rat.ofInt 0)
  let let125 := (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let59 let119))))))))))
  let let126 := (Neg.neg let21)
  let let127 := (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x6x5fplus) (binrel% HMul.hMul let126 x6x5fminus))))))))
  let let128 := (binrel% GE.ge let104 let1)
  let let129 := (Eq let128 let128)
  let let130 := (binrel% HAdd.hAdd x4x5fplus let12)
  let let131 := (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd x0x5fminus let130))
  let let132 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 let121))
  let let133 := (Not let29)
  let let134 := (Eq let28 let133)
  let let135 := (Eq let133 let28)
  let let136 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let49 let10))))))
  let let137 := (Not let128)
  let let138 := (Not let137)
  let let139 := (Eq let128 let138)
  let let140 := (Eq let138 let128)
  let let141 := (Not let53)
  let let142 := (Eq let52 let141)
  let let143 := (Eq let141 let52)
  let let144 := (binrel% LE.le let16 let1)
  let let145 := (binrel% HAdd.hAdd x1x5fplus let14)
  let let146 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let9 let145))))))))
  let let147 := (binrel% GE.ge let82 let34)
  let let148 := (Not let147)
  let let149 := (binrel% LE.le let82 let7)
  let let150 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let145))))))
  let let151 := (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x3x5fplus) (binrel% HMul.hMul let73 x3x5fminus))))))
  let let152 := (binrel% HAdd.hAdd let25 x1x5fminus)
  let let153 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 let152))))))
  let let154 := (Eq let52 let52)
  let let155 := (binrel% GE.ge let131 let7)
  let let156 := (binrel% GT.gt let61 let1)
  let let157 := (binrel% LT.lt let104 let1)
  let let158 := (binrel% LT.lt let73 let1)
  let let159 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 let103))))))
  let let160 := (Rat.ofInt let104)
  let let161 := (binrel% LE.le let51 let1)
  let let162 := (Not True)
  let let163 := (binrel% HAdd.hAdd x0x5fplus let88)
  let let164 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let87 let163))))))))))))
  let let165 := (Eq let40 let40)
  let let166 := (Eq let17 let17)
  let let167 := (Neg.neg let31)
  let let168 := (binrel% HDiv.hDiv (Int.ofNat 50) let20)
  let let169 := (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let167 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let168) x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let168 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let167 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x6x5fplus) (binrel% HMul.hMul let167 x6x5fminus))))))))
  let let170 := (binrel% LE.le let27 let1)
  let let171 := (binrel% LT.lt let82 let34)
  let let172 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 let152))))))
  let let173 := (Eq let147 let147)
  let let174 := (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x6x5fplus) (binrel% HMul.hMul let58 x6x5fminus))))))))))
  let let175 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let80 x2x5fminus)))))))))
  let let176 := (Not let148)
  let let177 := (Eq let147 let176)
  let let178 := (Eq let176 let147)
  let let179 := (binrel% GE.ge let124 let123)
  let let180 := (Neg.neg let61)
  let let181 := (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let180 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let180 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let180 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let180 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let180 x5x5fplus) (binrel% HMul.hMul let61 x5x5fminus))))))))))
  let let182 := (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x6x5fplus) (binrel% HMul.hMul let55 x6x5fminus))))))))))))))
  let let183 := (Neg.neg let46)
  let let184 := (binrel% HDiv.hDiv (Int.ofNat 54) let20)
  let let185 := (binrel% HAdd.hAdd (binrel% HMul.hMul let46 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let183 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let46 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let183 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let184 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let184) x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let183 x6x5fplus) (binrel% HMul.hMul let46 x6x5fminus))))))))
  let let186 := (binrel% HDiv.hDiv (Int.ofNat 86) let20)
  let let187 := (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let186 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let186) x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x5x5fplus) (binrel% HMul.hMul let66 x5x5fminus))))))))
  let let188 := (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x5x5fplus) (binrel% HMul.hMul let43 x5x5fminus))))))))
  let let189 := (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd let187 (binrel% HAdd.hAdd let185 (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd let174 let181))))))))))
  let let190 := (binrel% LE.le let39 let8)
  let let191 := (binrel% HMul.hMul let8 x8x5fplus)
  let let192 := (binrel% LE.le let146 let1)
  let let193 := (binrel% LE.le let175 let7)
  let let194 := (binrel% LE.le let159 let8)
  let let195 := (binrel% LE.le let153 let1)
  let let196 := (binrel% LE.le let136 let1)
  let let197 := (binrel% HAdd.hAdd x3x5fplus let87)
  let let198 := (binrel% GE.ge let164 let7)
  let let199 := (binrel% GE.ge let122 let7)
  let let200 := (binrel% GE.ge let172 let7)
  let let201 := (binrel% GE.ge let150 let7)
  let let202 := (Int.ofNat 3)
  let let203 := (binrel% GE.ge let100 let1)
  let let204 := (binrel% GE.ge let132 let7)
  let let205 := (binrel% GE.ge let89 let7)
  let let206 := (binrel% GE.ge let85 let7)
  let let207 := (binrel% GE.ge let94 let7)
  let let208 := (binrel% GE.ge let96 let7)
  let let209 := (Not let203)
  let let210 := (Not let208)
  let let211 := (Not let207)
  let let212 := (Not let206)
  let let213 := (Not let205)
  let let214 := (Or let147 (Or let212 (Or let213 (Or let52 (Or let211 (Or let210 (Or let40 (Or let28 (Or let209 (Or let17 let128))))))))))
  let let215 := (Or let176 (Or let212 (Or let213 (Or let141 (Or let211 (Or let210 (Or let113 (Or let133 (Or let209 (Or let116 let138))))))))))
  let let216 := (Not let157)
  let let217 := (binrel% LT.lt let83 let62)
  let let218 := (And let156 let171)
  let let219 := (binrel% LE.le let86 let63)
  let let220 := (And let60 let206)
  let let221 := (binrel% LE.le let90 let64)
  let let222 := (And let57 let205)
  let let223 := (binrel% LE.le let91 let65)
  let let224 := (And let47 let161)
  let let225 := (binrel% LE.le let95 let68)
  let let226 := (And let120 let207)
  let let227 := (binrel% LE.le let97 let69)
  let let228 := (And let45 let208)
  let let229 := (binrel% LT.lt let98 let70)
  let let230 := (And let32 let42)
  let let231 := (binrel% LE.le let99 let71)
  let let232 := (And let22 let170)
  let let233 := (binrel% LE.le let101 let74)
  let let234 := (And let158 let203)
  let let235 := (binrel% LT.lt let102 let75)
  let let236 := (And let6 let19)
  let let237 := (binrel% LT.lt let105 let76)
  let let238 := (And let3 let157)
(Eq let3 True) → (Eq let6 True) → (Eq let19 let18) → (Eq let22 True) → (Eq let30 let29) → (Eq let32 True) → (Eq let42 let41) → (Eq let45 True) → (Eq let47 True) → (Eq let54 let53) → (Eq let57 True) → (Eq let60 True) → (Eq let109 let108) → (Eq let102 let111) → (Eq let112 True) → (Eq let115 let114) → (Eq let118 let117) → (Eq let62 let119) → (Eq let120 True) → let115 → (Eq let122 let85) → (Eq let125 let123) → let118 → (Eq let99 let127) → (Eq let129 True) → (Eq let132 let131) → (Eq let135 let134) → (Eq let136 let51) → (Eq let140 let139) → (Eq let143 let142) → (Eq let144 let18) → (Eq let65 let124) → (Eq let146 let16) → (Eq let69 let44) → (Eq let149 let148) → (Eq let150 let96) → (Eq let101 let151) → (Eq let153 let27) → (Eq let154 True) → (Eq let155 let137) → (Eq let156 True) → let140 → let143 → (Eq let157 let137) → (Eq let158 True) → (Eq let159 let39) → (Eq let105 let160) → (Eq let161 let53) → let135 → (Eq let68 let67) → (Eq let162 False) → (Eq let164 let89) → (Eq let165 True) → (Eq let166 True) → (Eq let98 let169) → (Eq let170 let29) → (Eq let171 let148) → (Eq let172 let94) → (Eq let76 let124) → (Eq let173 True) → (Eq let86 let174) → (Eq let175 let82) → (Eq let178 let177) → (Eq let179 True) → (Eq let63 let59) → (Eq let64 let56) → (Eq let70 let124) → (Eq let71 let124) → (Eq let74 let124) → (Eq let75 let5) → (Eq let189 let124) → let178 → (Eq let83 let181) → (Eq let90 let182) → (Eq let190 let41) → (Eq let91 let185) → (Eq let95 let187) → (Eq let97 let188) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let14 let163)))))))) let7) → let192 → let193 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x0x5fplus) (binrel% HMul.hMul let34 x0x5fminus)))))))))) let7) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x1x5fplus) (binrel% HMul.hMul let34 x1x5fminus)))))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let87 let121)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 let145)))))) let8) → let194 → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x6x5fminus) (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let163)))))) let7) → let195 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x6x5fminus let79)))))) let8) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x2x5fplus) (binrel% HMul.hMul let36 x2x5fminus)))))))) let1) → let196 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus let197)))))) let8) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 let197)))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x2x5fminus) let152)))) let8) → let198 → (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x8x5fminus) (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 let13)))) let1) → let199 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x1x5fminus let163)))))))) let8) → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x5x5fminus) (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x3x5fplus) (binrel% HMul.hMul let34 x3x5fminus)))))))) let8) → let200 → let201 → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 let10)))))) let8) → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd (binrel% HMul.hMul let202 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let202) x6x5fminus) (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus let145)))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus let145)))) let1) → let203 → (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 let130)))) let7) → (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x3x5fminus) let121)) let8) → let204 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (binrel% GT.gt let2 let1)
  let let4 := (Int.ofNat 22)
  let let5 := (binrel% HDiv.hDiv (Int.ofNat 15) let4)
  let let6 := (binrel% GT.gt let5 let1)
  let let7 := (Int.ofNat 1)
  let let8 := (Neg.neg let7)
  let let9 := (binrel% HMul.hMul let8 x2x5fminus)
  let let10 := (binrel% HAdd.hAdd x2x5fplus let9)
  let let11 := (binrel% HMul.hMul let8 x3x5fplus)
  let let12 := (binrel% HMul.hMul let8 x4x5fminus)
  let let13 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus let10))))
  let let14 := (binrel% HMul.hMul let8 x1x5fminus)
  let let15 := (binrel% HMul.hMul let8 x9x5fminus)
  let let16 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let14 let13))))
  let let17 := (binrel% GE.ge let16 let7)
  let let18 := (Not let17)
  let let19 := (binrel% LT.lt let16 let7)
  let let20 := (Int.ofNat 11)
  let let21 := (binrel% HDiv.hDiv (Int.ofNat 48) let20)
  let let22 := (binrel% GT.gt let21 let1)
  let let23 := (binrel% HMul.hMul let8 x6x5fminus)
  let let24 := (binrel% HAdd.hAdd x6x5fplus let23)
  let let25 := (binrel% HMul.hMul let8 x1x5fplus)
  let let26 := (binrel% HMul.hMul let8 x7x5fminus)
  let let27 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x1x5fminus let24))))))
  let let28 := (binrel% GE.ge let27 let7)
  let let29 := (Not let28)
  let let30 := (binrel% LT.lt let27 let7)
  let let31 := (binrel% HDiv.hDiv (Int.ofNat 25) let20)
  let let32 := (binrel% GT.gt let31 let1)
  let let33 := (binrel% HMul.hMul let8 x4x5fplus)
  let let34 := (Int.ofNat 2)
  let let35 := (binrel% HMul.hMul let34 x7x5fminus)
  let let36 := (Neg.neg let34)
  let let37 := (binrel% HMul.hMul let36 x7x5fplus)
  let let38 := (binrel% HMul.hMul let8 x8x5fminus)
  let let39 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus let24))))))
  let let40 := (binrel% GE.ge let39 let1)
  let let41 := (Not let40)
  let let42 := (binrel% LT.lt let39 let1)
  let let43 := (binrel% HDiv.hDiv (Int.ofNat 5) let4)
  let let44 := (Neg.neg let43)
  let let45 := (binrel% LT.lt let44 let1)
  let let46 := (binrel% HDiv.hDiv (Int.ofNat 27) let20)
  let let47 := (binrel% GT.gt let46 let1)
  let let48 := (binrel% HMul.hMul let8 x6x5fplus)
  let let49 := (binrel% HMul.hMul let36 x5x5fminus)
  let let50 := (binrel% HMul.hMul let34 x5x5fplus)
  let let51 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let9 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let48 x6x5fminus)))))))
  let let52 := (binrel% GE.ge let51 let7)
  let let53 := (Not let52)
  let let54 := (binrel% LT.lt let51 let7)
  let let55 := (binrel% HDiv.hDiv (Int.ofNat 57) let4)
  let let56 := (Neg.neg let55)
  let let57 := (binrel% LT.lt let56 let1)
  let let58 := (binrel% HDiv.hDiv (Int.ofNat 35) let4)
  let let59 := (Neg.neg let58)
  let let60 := (binrel% LT.lt let59 let1)
  let let61 := (binrel% HDiv.hDiv (Int.ofNat 37) let20)
  let let62 := (binrel% HMul.hMul let61 let34)
  let let63 := (binrel% HMul.hMul let59 let7)
  let let64 := (binrel% HMul.hMul let56 let7)
  let let65 := (binrel% HMul.hMul let46 let1)
  let let66 := (binrel% HDiv.hDiv (Int.ofNat 43) let20)
  let let67 := (Neg.neg let66)
  let let68 := (binrel% HMul.hMul let67 let7)
  let let69 := (binrel% HMul.hMul let44 let7)
  let let70 := (binrel% HMul.hMul let31 let1)
  let let71 := (binrel% HMul.hMul let21 let1)
  let let72 := (binrel% HDiv.hDiv (Int.ofNat 111) let4)
  let let73 := (Neg.neg let72)
  let let74 := (binrel% HMul.hMul let73 let1)
  let let75 := (binrel% HMul.hMul let5 let7)
  let let76 := (binrel% HMul.hMul let2 let1)
  let let77 := (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let63 let62))))))))))
  let let78 := (binrel% HMul.hMul let8 x5x5fplus)
  let let79 := (binrel% HAdd.hAdd let78 x5x5fminus)
  let let80 := (binrel% HMul.hMul let8 x2x5fplus)
  let let81 := (binrel% HMul.hMul let8 x7x5fplus)
  let let82 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let79))))))))
  let let83 := (binrel% HMul.hMul let61 let82)
  let let84 := (binrel% HMul.hMul let8 x0x5fplus)
  let let85 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd x0x5fminus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus let24))))))))
  let let86 := (binrel% HMul.hMul let59 let85)
  let let87 := (binrel% HMul.hMul let8 x3x5fminus)
  let let88 := (binrel% HMul.hMul let8 x0x5fminus)
  let let89 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5x5fminus let24))))))))))))
  let let90 := (binrel% HMul.hMul let56 let89)
  let let91 := (binrel% HMul.hMul let46 let51)
  let let92 := (binrel% HMul.hMul let8 x5x5fminus)
  let let93 := (binrel% HAdd.hAdd x5x5fplus let92)
  let let94 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x1x5fminus let93))))))
  let let95 := (binrel% HMul.hMul let67 let94)
  let let96 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let93))))))
  let let97 := (binrel% HMul.hMul let44 let96)
  let let98 := (binrel% HMul.hMul let31 let39)
  let let99 := (binrel% HMul.hMul let21 let27)
  let let100 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let11 x3x5fminus)))))
  let let101 := (binrel% HMul.hMul let73 let100)
  let let102 := (binrel% HMul.hMul let5 let16)
  let let103 := (binrel% HAdd.hAdd let33 x4x5fminus)
  let let104 := (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let88 let103))
  let let105 := (binrel% HMul.hMul let2 let104)
  let let106 := (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let101 (binrel% HAdd.hAdd let99 (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let97 (binrel% HAdd.hAdd let95 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let86 let83))))))))))
  let let107 := (binrel% GE.ge let106 let77)
  let let108 := (Not let107)
  let let109 := (binrel% LT.lt let106 let77)
  let let110 := (Neg.neg let5)
  let let111 := (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let110 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x2x5fplus) (binrel% HMul.hMul let110 x2x5fminus))))))))))
  let let112 := (Eq let28 let28)
  let let113 := (Not let41)
  let let114 := (Eq let40 let113)
  let let115 := (Eq let113 let40)
  let let116 := (Not let18)
  let let117 := (Eq let17 let116)
  let let118 := (Eq let116 let17)
  let let119 := (binrel% HDiv.hDiv (Int.ofNat 74) let20)
  let let120 := (binrel% LT.lt let67 let1)
  let let121 := (binrel% HAdd.hAdd let84 x0x5fminus)
  let let122 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus let121))))))))
  let let123 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 10) let20))
  let let124 := (Rat.ofInt 0)
  let let125 := (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let5 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let44 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let59 let119))))))))))
  let let126 := (Neg.neg let21)
  let let127 := (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let126 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let21 x6x5fplus) (binrel% HMul.hMul let126 x6x5fminus))))))))
  let let128 := (binrel% GE.ge let104 let1)
  let let129 := (Eq let128 let128)
  let let130 := (binrel% HAdd.hAdd x4x5fplus let12)
  let let131 := (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd x0x5fminus let130))
  let let132 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 let121))
  let let133 := (Not let29)
  let let134 := (Eq let28 let133)
  let let135 := (Eq let133 let28)
  let let136 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let49 let10))))))
  let let137 := (Not let128)
  let let138 := (Not let137)
  let let139 := (Eq let128 let138)
  let let140 := (Eq let138 let128)
  let let141 := (Not let53)
  let let142 := (Eq let52 let141)
  let let143 := (Eq let141 let52)
  let let144 := (binrel% LE.le let16 let1)
  let let145 := (binrel% HAdd.hAdd x1x5fplus let14)
  let let146 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let9 let145))))))))
  let let147 := (binrel% GE.ge let82 let34)
  let let148 := (Not let147)
  let let149 := (binrel% LE.le let82 let7)
  let let150 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let145))))))
  let let151 := (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let73 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let72 x3x5fplus) (binrel% HMul.hMul let73 x3x5fminus))))))
  let let152 := (binrel% HAdd.hAdd let25 x1x5fminus)
  let let153 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 let152))))))
  let let154 := (Eq let52 let52)
  let let155 := (binrel% GE.ge let131 let7)
  let let156 := (binrel% GT.gt let61 let1)
  let let157 := (binrel% LT.lt let104 let1)
  let let158 := (binrel% LT.lt let73 let1)
  let let159 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 let103))))))
  let let160 := (Rat.ofInt let104)
  let let161 := (binrel% LE.le let51 let1)
  let let162 := (Not True)
  let let163 := (binrel% HAdd.hAdd x0x5fplus let88)
  let let164 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let87 let163))))))))))))
  let let165 := (Eq let40 let40)
  let let166 := (Eq let17 let17)
  let let167 := (Neg.neg let31)
  let let168 := (binrel% HDiv.hDiv (Int.ofNat 50) let20)
  let let169 := (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let167 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let168) x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let168 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let167 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 x6x5fplus) (binrel% HMul.hMul let167 x6x5fminus))))))))
  let let170 := (binrel% LE.le let27 let1)
  let let171 := (binrel% LT.lt let82 let34)
  let let172 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 let152))))))
  let let173 := (Eq let147 let147)
  let let174 := (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let58 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let59 x6x5fplus) (binrel% HMul.hMul let58 x6x5fminus))))))))))
  let let175 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd let80 x2x5fminus)))))))))
  let let176 := (Not let148)
  let let177 := (Eq let147 let176)
  let let178 := (Eq let176 let147)
  let let179 := (binrel% GE.ge let124 let123)
  let let180 := (Neg.neg let61)
  let let181 := (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let180 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let180 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let180 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let180 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let180 x5x5fplus) (binrel% HMul.hMul let61 x5x5fminus))))))))))
  let let182 := (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x0x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let55 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x6x5fplus) (binrel% HMul.hMul let55 x6x5fminus))))))))))))))
  let let183 := (Neg.neg let46)
  let let184 := (binrel% HDiv.hDiv (Int.ofNat 54) let20)
  let let185 := (binrel% HAdd.hAdd (binrel% HMul.hMul let46 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let183 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let46 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let183 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let184 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let184) x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let183 x6x5fplus) (binrel% HMul.hMul let46 x6x5fminus))))))))
  let let186 := (binrel% HDiv.hDiv (Int.ofNat 86) let20)
  let let187 := (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let186 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let186) x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let66 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 x5x5fplus) (binrel% HMul.hMul let66 x5x5fminus))))))))
  let let188 := (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let43 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 x5x5fplus) (binrel% HMul.hMul let43 x5x5fminus))))))))
  let let189 := (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let111 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let127 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd let187 (binrel% HAdd.hAdd let185 (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd let174 let181))))))))))
  let let190 := (binrel% LE.le let39 let8)
  let let191 := (binrel% HMul.hMul let8 x8x5fplus)
  let let192 := (binrel% LE.le let146 let1)
  let let193 := (binrel% LE.le let175 let7)
  let let194 := (binrel% LE.le let159 let8)
  let let195 := (binrel% LE.le let153 let1)
  let let196 := (binrel% LE.le let136 let1)
  let let197 := (binrel% HAdd.hAdd x3x5fplus let87)
  let let198 := (binrel% GE.ge let164 let7)
  let let199 := (binrel% GE.ge let122 let7)
  let let200 := (binrel% GE.ge let172 let7)
  let let201 := (binrel% GE.ge let150 let7)
  let let202 := (Int.ofNat 3)
  let let203 := (binrel% GE.ge let100 let1)
  let let204 := (binrel% GE.ge let132 let7)
  let let205 := (binrel% GE.ge let89 let7)
  let let206 := (binrel% GE.ge let85 let7)
  let let207 := (binrel% GE.ge let94 let7)
  let let208 := (binrel% GE.ge let96 let7)
  let let209 := (Not let203)
  let let210 := (Not let208)
  let let211 := (Not let207)
  let let212 := (Not let206)
  let let213 := (Not let205)
  let let214 := (Or let147 (Or let212 (Or let213 (Or let52 (Or let211 (Or let210 (Or let40 (Or let28 (Or let209 (Or let17 let128))))))))))
  let let215 := (Or let176 (Or let212 (Or let213 (Or let141 (Or let211 (Or let210 (Or let113 (Or let133 (Or let209 (Or let116 let138))))))))))
  let let216 := (Not let157)
  let let217 := (binrel% LT.lt let83 let62)
  let let218 := (And let156 let171)
  let let219 := (binrel% LE.le let86 let63)
  let let220 := (And let60 let206)
  let let221 := (binrel% LE.le let90 let64)
  let let222 := (And let57 let205)
  let let223 := (binrel% LE.le let91 let65)
  let let224 := (And let47 let161)
  let let225 := (binrel% LE.le let95 let68)
  let let226 := (And let120 let207)
  let let227 := (binrel% LE.le let97 let69)
  let let228 := (And let45 let208)
  let let229 := (binrel% LT.lt let98 let70)
  let let230 := (And let32 let42)
  let let231 := (binrel% LE.le let99 let71)
  let let232 := (And let22 let170)
  let let233 := (binrel% LE.le let101 let74)
  let let234 := (And let158 let203)
  let let235 := (binrel% LT.lt let102 let75)
  let let236 := (And let6 let19)
  let let237 := (binrel% LT.lt let105 let76)
  let let238 := (And let3 let157)
fun lean_r0 : (Eq let3 True) => -- EVALUATE
fun lean_r1 : (Eq let6 True) => -- EVALUATE
fun lean_r2 : (Eq let19 let18) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let22 True) => -- EVALUATE
fun lean_r4 : (Eq let30 let29) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let32 True) => -- EVALUATE
fun lean_r6 : (Eq let42 let41) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let45 True) => -- EVALUATE
fun lean_r8 : (Eq let47 True) => -- EVALUATE
fun lean_r9 : (Eq let54 let53) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let57 True) => -- EVALUATE
fun lean_r11 : (Eq let60 True) => -- EVALUATE
fun lean_r12 : (Eq let109 let108) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let102 let111) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let112 True) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let115 let114) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq let118 let117) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let62 let119) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let120 True) => -- EVALUATE
fun lean_r19 : let115 => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let122 let85) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let125 let123) => -- THEORY_REWRITE_ARITH
fun lean_r22 : let118 => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let99 let127) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let129 True) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq let132 let131) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let135 let134) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let136 let51) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let140 let139) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let143 let142) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq let144 let18) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let65 let124) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let146 let16) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let69 let44) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let149 let148) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let150 let96) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let101 let151) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let153 let27) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let154 True) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq let155 let137) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let156 True) => -- EVALUATE
fun lean_r41 : let140 => -- THEORY_REWRITE_BOOL
fun lean_r42 : let143 => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let157 let137) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let158 True) => -- EVALUATE
fun lean_r45 : (Eq let159 let39) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let105 let160) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let161 let53) => -- THEORY_REWRITE_ARITH
fun lean_r48 : let135 => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let68 let67) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let162 False) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq let164 let89) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let165 True) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let166 True) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let98 let169) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let170 let29) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let171 let148) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let172 let94) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let76 let124) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let173 True) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let86 let174) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let175 let82) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let178 let177) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let179 True) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let63 let59) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let64 let56) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let70 let124) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let71 let124) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let74 let124) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let75 let5) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let189 let124) => -- THEORY_REWRITE_ARITH
fun lean_r71 : let178 => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let83 let181) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let90 let182) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let190 let41) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let91 let185) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let95 let187) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let97 let188) => -- THEORY_REWRITE_ARITH
fun lean_a78 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a79 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a80 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a81 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a82 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a83 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a84 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a85 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a86 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a87 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a88 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a89 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a90 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a91 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a92 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a93 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a94 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a95 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a96 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a97 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a98 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let14 let163)))))))) let7) =>
fun lean_a99 : let192 =>
fun lean_a100 : let193 =>
fun lean_a101 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x0x5fplus) (binrel% HMul.hMul let34 x0x5fminus)))))))))) let7) =>
fun lean_a102 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x1x5fplus) (binrel% HMul.hMul let34 x1x5fminus)))))))) let1) =>
fun lean_a103 : (binrel% LE.le (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let87 let121)))))) let1) =>
fun lean_a104 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 let145)))))) let8) =>
fun lean_a105 : let194 =>
fun lean_a106 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x6x5fminus) (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x2x5fminus let163)))))) let7) =>
fun lean_a107 : let195 =>
fun lean_a108 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x6x5fminus let79)))))) let8) =>
fun lean_a109 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x2x5fplus) (binrel% HMul.hMul let36 x2x5fminus)))))))) let1) =>
fun lean_a110 : let196 =>
fun lean_a111 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus let197)))))) let8) =>
fun lean_a112 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 let197)))) let1) =>
fun lean_a113 : (binrel% LE.le (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x2x5fminus) let152)))) let8) =>
fun lean_a114 : let198 =>
fun lean_a115 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x8x5fminus) (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 let13)))) let1) =>
fun lean_a116 : let199 =>
fun lean_a117 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let81 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 (binrel% HAdd.hAdd let25 (binrel% HAdd.hAdd x1x5fminus let163)))))))) let8) =>
fun lean_a118 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x5x5fminus) (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x3x5fplus) (binrel% HMul.hMul let34 x3x5fminus)))))))) let8) =>
fun lean_a119 : let200 =>
fun lean_a120 : let201 =>
fun lean_a121 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let12 let10)))))) let8) =>
fun lean_a122 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd (binrel% HMul.hMul let202 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let202) x6x5fminus) (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd x4x5fminus let145)))))) let1) =>
fun lean_a123 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x3x5fminus let145)))) let1) =>
fun lean_a124 : let203 =>
fun lean_a125 : (binrel% GE.ge (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let92 let130)))) let7) =>
fun lean_a126 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul let34 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let36 x3x5fminus) let121)) let8) =>
fun lean_a127 : let204 => by
have lean_s0 : (Or let176 (Or let212 (Or let213 (Or let141 (Or let211 (Or let210 (Or let113 (Or let133 (Or let209 (Or let116 (Or let138 False))))))))))) :=
  (scope (fun lean_a128 : let148 =>
    (scope (fun lean_a129 : let206 =>
      (scope (fun lean_a130 : let205 =>
        (scope (fun lean_a131 : let53 =>
          (scope (fun lean_a132 : let207 =>
            (scope (fun lean_a133 : let208 =>
              (scope (fun lean_a134 : let41 =>
                (scope (fun lean_a135 : let29 =>
                  (scope (fun lean_a136 : let203 =>
                    (scope (fun lean_a137 : let18 =>
                      (scope (fun lean_a138 : let137 =>
                        let lean_s0 := by timed flipCongrArg lean_r25 [GE.ge]
                        have lean_s1 : (Eq let7 let7) := by timed rfl
                        have lean_s2 : (Eq let204 let155) := by timed congr lean_s0 lean_s1
                        have lean_s3 : (Eq let204 let137) := by timed Eq.trans lean_s2 lean_r39
                        have lean_s4 : let137 := by timed eqResolve lean_a127 lean_s3
                        have lean_s5 : (Eq let137 let157) := by timed Eq.symm lean_r43
                        have lean_s6 : let157 := by timed eqResolve lean_s4 lean_s5
                        have lean_s7 : (Or let216 False) :=
                          (scope (fun lean_a138 : let157 =>
                            have lean_s7 : let3 := by timed trueElim lean_r0
                            have lean_s8 : let238 := by timed And.intro lean_s7 lean_a138
                            have lean_s9 : (Implies let238 let237) := by arithMulPos [let104, let1, let2], 0
                            have lean_s10 : let237 := by timed modusPonens lean_s8 lean_s9
                            have lean_s11 : let6 := by timed trueElim lean_r1
                            let lean_s12 := by timed flipCongrArg lean_r32 [LE.le]
                            have lean_s13 : (Eq let1 let1) := by timed rfl
                            have lean_s14 : (Eq let192 let144) := by timed congr lean_s12 lean_s13
                            have lean_s15 : (Eq let192 let18) := by timed Eq.trans lean_s14 lean_r30
                            have lean_s16 : let18 := by timed eqResolve lean_a99 lean_s15
                            have lean_s17 : (Eq let18 let19) := by timed Eq.symm lean_r2
                            have lean_s18 : let19 := by timed eqResolve lean_s16 lean_s17
                            have lean_s19 : let236 := by timed And.intro lean_s11 lean_s18
                            have lean_s20 : (Implies let236 let235) := by arithMulPos [let16, let7, let5], 0
                            have lean_s21 : let235 := by timed modusPonens lean_s19 lean_s20
                            have lean_s22 : let158 := by timed trueElim lean_r44
                            have lean_s23 : let234 := by timed And.intro lean_s22 lean_a136
                            have lean_s24 : (Implies let234 let233) := by arithMulNeg [let100, let1, let73], 3
                            have lean_s25 : let233 := by timed modusPonens lean_s23 lean_s24
                            have lean_s26 : let22 := by timed trueElim lean_r3
                            let lean_s27 := by timed flipCongrArg lean_r37 [LE.le]
                            have lean_s28 : (Eq let195 let170) := by timed congr lean_s27 lean_s13
                            have lean_s29 : (Eq let195 let29) := by timed Eq.trans lean_s28 lean_r55
                            have lean_s30 : let29 := by timed eqResolve lean_a107 lean_s29
                            have lean_s31 : (Eq let29 let30) := by timed Eq.symm lean_r4
                            have lean_s32 : let30 := by timed eqResolve lean_s30 lean_s31
                            have lean_s33 : let170 := by intTightUb lean_s32
                            have lean_s34 : let232 := by timed And.intro lean_s26 lean_s33
                            have lean_s35 : (Implies let232 let231) := by arithMulPos [let27, let1, let21], 1
                            have lean_s36 : let231 := by timed modusPonens lean_s34 lean_s35
                            have lean_s37 : let32 := by timed trueElim lean_r5
                            let lean_s38 := by timed flipCongrArg lean_r45 [LE.le]
                            have lean_s39 : (Eq let8 let8) := by timed rfl
                            have lean_s40 : (Eq let194 let190) := by timed congr lean_s38 lean_s39
                            have lean_s41 : (Eq let194 let41) := by timed Eq.trans lean_s40 lean_r74
                            have lean_s42 : let41 := by timed eqResolve lean_a105 lean_s41
                            have lean_s43 : (Eq let41 let42) := by timed Eq.symm lean_r6
                            have lean_s44 : let42 := by timed eqResolve lean_s42 lean_s43
                            have lean_s45 : let230 := by timed And.intro lean_s37 lean_s44
                            have lean_s46 : (Implies let230 let229) := by arithMulPos [let39, let1, let31], 0
                            have lean_s47 : let229 := by timed modusPonens lean_s45 lean_s46
                            have lean_s48 : let45 := by timed trueElim lean_r7
                            let lean_s49 := by timed flipCongrArg lean_r35 [GE.ge]
                            have lean_s50 : (Eq let201 let208) := by timed congr lean_s49 lean_s1
                            have lean_s51 : let208 := by timed eqResolve lean_a120 lean_s50
                            have lean_s52 : let228 := by timed And.intro lean_s48 lean_s51
                            have lean_s53 : (Implies let228 let227) := by arithMulNeg [let96, let7, let44], 3
                            have lean_s54 : let227 := by timed modusPonens lean_s52 lean_s53
                            have lean_s55 : let120 := by timed trueElim lean_r18
                            let lean_s56 := by timed flipCongrArg lean_r57 [GE.ge]
                            have lean_s57 : (Eq let200 let207) := by timed congr lean_s56 lean_s1
                            have lean_s58 : let207 := by timed eqResolve lean_a119 lean_s57
                            have lean_s59 : let226 := by timed And.intro lean_s55 lean_s58
                            have lean_s60 : (Implies let226 let225) := by arithMulNeg [let94, let7, let67], 3
                            have lean_s61 : let225 := by timed modusPonens lean_s59 lean_s60
                            have lean_s62 : let47 := by timed trueElim lean_r8
                            let lean_s63 := by timed flipCongrArg lean_r27 [LE.le]
                            have lean_s64 : (Eq let196 let161) := by timed congr lean_s63 lean_s13
                            have lean_s65 : (Eq let196 let53) := by timed Eq.trans lean_s64 lean_r47
                            have lean_s66 : let53 := by timed eqResolve lean_a110 lean_s65
                            have lean_s67 : (Eq let53 let54) := by timed Eq.symm lean_r9
                            have lean_s68 : let54 := by timed eqResolve lean_s66 lean_s67
                            have lean_s69 : let161 := by intTightUb lean_s68
                            have lean_s70 : let224 := by timed And.intro lean_s62 lean_s69
                            have lean_s71 : (Implies let224 let223) := by arithMulPos [let51, let1, let46], 1
                            have lean_s72 : let223 := by timed modusPonens lean_s70 lean_s71
                            have lean_s73 : let57 := by timed trueElim lean_r10
                            let lean_s74 := by timed flipCongrArg lean_r51 [GE.ge]
                            have lean_s75 : (Eq let198 let205) := by timed congr lean_s74 lean_s1
                            have lean_s76 : let205 := by timed eqResolve lean_a114 lean_s75
                            have lean_s77 : let222 := by timed And.intro lean_s73 lean_s76
                            have lean_s78 : (Implies let222 let221) := by arithMulNeg [let89, let7, let56], 3
                            have lean_s79 : let221 := by timed modusPonens lean_s77 lean_s78
                            have lean_s80 : let60 := by timed trueElim lean_r11
                            let lean_s81 := by timed flipCongrArg lean_r20 [GE.ge]
                            have lean_s82 : (Eq let199 let206) := by timed congr lean_s81 lean_s1
                            have lean_s83 : let206 := by timed eqResolve lean_a116 lean_s82
                            have lean_s84 : let220 := by timed And.intro lean_s80 lean_s83
                            have lean_s85 : (Implies let220 let219) := by arithMulNeg [let85, let7, let59], 3
                            have lean_s86 : let219 := by timed modusPonens lean_s84 lean_s85
                            have lean_s87 : let156 := by timed trueElim lean_r40
                            let lean_s88 := by timed flipCongrArg lean_r61 [LE.le]
                            have lean_s89 : (Eq let193 let149) := by timed congr lean_s88 lean_s1
                            have lean_s90 : (Eq let193 let148) := by timed Eq.trans lean_s89 lean_r34
                            have lean_s91 : let148 := by timed eqResolve lean_a100 lean_s90
                            have lean_s92 : (Eq let148 let171) := by timed Eq.symm lean_r56
                            have lean_s93 : let171 := by timed eqResolve lean_s91 lean_s92
                            have lean_s94 : let218 := by timed And.intro lean_s87 lean_s93
                            have lean_s95 : (Implies let218 let217) := by arithMulPos [let82, let34, let61], 0
                            have lean_s96 : let217 := by timed modusPonens lean_s94 lean_s95
                            have lean_s97 : let109 := by sumBounds [lean_s10, lean_s21, lean_s25, lean_s36, lean_s47, lean_s54, lean_s61, lean_s72, lean_s79, lean_s86, lean_s96]
                            let lean_s98 := by timed congrHAdd lean_r60 lean_r72
                            let lean_s99 := by timed congrHAdd lean_r73 lean_s98
                            let lean_s100 := by timed congrHAdd lean_r75 lean_s99
                            let lean_s101 := by timed congrHAdd lean_r76 lean_s100
                            let lean_s102 := by timed congrHAdd lean_r77 lean_s101
                            let lean_s103 := by timed congrHAdd lean_r54 lean_s102
                            let lean_s104 := by timed congrHAdd lean_r23 lean_s103
                            let lean_s105 := by timed congrHAdd lean_r36 lean_s104
                            let lean_s106 := by timed congrHAdd lean_r13 lean_s105
                            have lean_s107 : (Eq let106 let189) := by timed congrHAdd lean_r46 lean_s106
                            have lean_s108 : (Eq let106 let124) := by timed Eq.trans lean_s107 lean_r70
                            let lean_s109 := by timed flipCongrArg lean_s108 [GE.ge]
                            let lean_s110 := by timed congrHAdd lean_r64 lean_r17
                            let lean_s111 := by timed congrHAdd lean_r65 lean_s110
                            let lean_s112 := by timed congrHAdd lean_r31 lean_s111
                            let lean_s113 := by timed congrHAdd lean_r49 lean_s112
                            let lean_s114 := by timed congrHAdd lean_r33 lean_s113
                            let lean_s115 := by timed congrHAdd lean_r66 lean_s114
                            let lean_s116 := by timed congrHAdd lean_r67 lean_s115
                            let lean_s117 := by timed congrHAdd lean_r68 lean_s116
                            let lean_s118 := by timed congrHAdd lean_r69 lean_s117
                            have lean_s119 : (Eq let77 let125) := by timed congrHAdd lean_r58 lean_s118
                            have lean_s120 : (Eq let77 let123) := by timed Eq.trans lean_s119 lean_r21
                            have lean_s121 : (Eq let107 let179) := by timed congr lean_s109 lean_s120
                            have lean_s122 : (Eq let107 True) := by timed Eq.trans lean_s121 lean_r63
                            have lean_s123 : (Eq let108 let162) := by timed flipCongrArg lean_s122 [Not]
                            have lean_s124 : (Eq let108 False) := by timed Eq.trans lean_s123 lean_r50
                            have lean_s125 : (Eq let109 False) := by timed Eq.trans lean_r12 lean_s124
                            show False from by timed eqResolve lean_s97 lean_s125
                          ))
                        have lean_s8 : let216 := by liftOrNToNeg lean_s7
                        have lean_s9 : (Eq let216 let138) := by timed flipCongrArg lean_r43 [Not]
                        have lean_s10 : (Eq let216 let128) := by timed Eq.trans lean_s9 lean_r41
                        have lean_s11 : let128 := by timed eqResolve lean_s8 lean_s10
                        have lean_s12 : (Eq let128 let216) := by timed Eq.symm lean_s10
                        have lean_s13 : let216 := by timed eqResolve lean_s11 lean_s12
                        show False from by timed contradiction lean_s6 lean_s13
  ))))))))))))))))))))))
have lean_s1 : (Not (And let148 (And let206 (And let205 (And let53 (And let207 (And let208 (And let41 (And let29 (And let203 (And let18 let137))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let215 := by timed flipNotAnd lean_s1 [let148, let206, let205, let53, let207, let208, let41, let29, let203, let18, let137]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let173 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let177 let173) := by timed congr lean_s5 lean_r71
have lean_s7 : (Eq let177 True) := by timed Eq.trans lean_s6 lean_r59
have lean_s8 : (Eq let178 True) := by timed Eq.trans lean_r62 lean_s7
have lean_s9 : let178 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq let212 let212) := by timed rfl
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq let213 let213) := by timed rfl
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : let154 := by timed rfl
let lean_s16 := by timed flipCongrArg lean_s15 [Eq]
have lean_s17 : (Eq let142 let154) := by timed congr lean_s16 lean_r42
have lean_s18 : (Eq let142 True) := by timed Eq.trans lean_s17 lean_r38
have lean_s19 : (Eq let143 True) := by timed Eq.trans lean_r29 lean_s18
have lean_s20 : let143 := by timed trueElim lean_s19
let lean_s21 := by timed congr lean_s3 lean_s20
have lean_s22 : (Eq let211 let211) := by timed rfl
let lean_s23 := by timed congr lean_s3 lean_s22
have lean_s24 : (Eq let210 let210) := by timed rfl
let lean_s25 := by timed congr lean_s3 lean_s24
have lean_s26 : let165 := by timed rfl
let lean_s27 := by timed flipCongrArg lean_s26 [Eq]
have lean_s28 : (Eq let114 let165) := by timed congr lean_s27 lean_r19
have lean_s29 : (Eq let114 True) := by timed Eq.trans lean_s28 lean_r52
have lean_s30 : (Eq let115 True) := by timed Eq.trans lean_r15 lean_s29
have lean_s31 : let115 := by timed trueElim lean_s30
let lean_s32 := by timed congr lean_s3 lean_s31
have lean_s33 : let112 := by timed rfl
let lean_s34 := by timed flipCongrArg lean_s33 [Eq]
have lean_s35 : (Eq let134 let112) := by timed congr lean_s34 lean_r48
have lean_s36 : (Eq let134 True) := by timed Eq.trans lean_s35 lean_r14
have lean_s37 : (Eq let135 True) := by timed Eq.trans lean_r26 lean_s36
have lean_s38 : let135 := by timed trueElim lean_s37
let lean_s39 := by timed congr lean_s3 lean_s38
have lean_s40 : (Eq let209 let209) := by timed rfl
let lean_s41 := by timed congr lean_s3 lean_s40
have lean_s42 : let166 := by timed rfl
let lean_s43 := by timed flipCongrArg lean_s42 [Eq]
have lean_s44 : (Eq let117 let166) := by timed congr lean_s43 lean_r22
have lean_s45 : (Eq let117 True) := by timed Eq.trans lean_s44 lean_r53
have lean_s46 : (Eq let118 True) := by timed Eq.trans lean_r16 lean_s45
have lean_s47 : let118 := by timed trueElim lean_s46
let lean_s48 := by timed congr lean_s3 lean_s47
have lean_s49 : let129 := by timed rfl
let lean_s50 := by timed flipCongrArg lean_s49 [Eq]
have lean_s51 : (Eq let139 let129) := by timed congr lean_s50 lean_r41
have lean_s52 : (Eq let139 True) := by timed Eq.trans lean_s51 lean_r24
have lean_s53 : (Eq let140 True) := by timed Eq.trans lean_r28 lean_s52
have lean_s54 : let140 := by timed trueElim lean_s53
let lean_s55 := by timed congr lean_s48 lean_s54
let lean_s56 := by timed congr lean_s41 lean_s55
let lean_s57 := by timed congr lean_s39 lean_s56
let lean_s58 := by timed congr lean_s32 lean_s57
let lean_s59 := by timed congr lean_s25 lean_s58
let lean_s60 := by timed congr lean_s23 lean_s59
let lean_s61 := by timed congr lean_s21 lean_s60
let lean_s62 := by timed congr lean_s14 lean_s61
let lean_s63 := by timed congr lean_s12 lean_s62
have lean_s64 : (Eq let215 let214) := by timed congr lean_s10 lean_s63
have lean_s65 : let214 := by timed eqResolve lean_s2 lean_s64
have lean_s66 : (Or let17 (Or let147 (Or let40 (Or let28 (Or let52 (Or let128 (Or let213 (Or let212 (Or let211 (Or let210 let209)))))))))) := by permutateOr lean_s65, [9, 0, 6, 7, 3, 10, 2, 1, 4, 5, 8], (- 1)
let lean_s67 := by timed flipCongrArg lean_r25 [GE.ge]
have lean_s68 : (Eq let7 let7) := by timed rfl
have lean_s69 : (Eq let204 let155) := by timed congr lean_s67 lean_s68
have lean_s70 : (Eq let204 let137) := by timed Eq.trans lean_s69 lean_r39
have lean_s71 : let137 := by timed eqResolve lean_a127 lean_s70
let lean_s72 := by R1 lean_s66, lean_s71, let128, [(- 1), 0]
let lean_s73 := by R2 lean_s72, lean_a124, let203, [(- 1), 0]
let lean_s74 := by timed flipCongrArg lean_r35 [GE.ge]
have lean_s75 : (Eq let201 let208) := by timed congr lean_s74 lean_s68
have lean_s76 : let208 := by timed eqResolve lean_a120 lean_s75
let lean_s77 := by R2 lean_s73, lean_s76, let208, [(- 1), 0]
let lean_s78 := by timed flipCongrArg lean_r57 [GE.ge]
have lean_s79 : (Eq let200 let207) := by timed congr lean_s78 lean_s68
have lean_s80 : let207 := by timed eqResolve lean_a119 lean_s79
let lean_s81 := by R2 lean_s77, lean_s80, let207, [(- 1), 0]
let lean_s82 := by timed flipCongrArg lean_r20 [GE.ge]
have lean_s83 : (Eq let199 let206) := by timed congr lean_s82 lean_s68
have lean_s84 : let206 := by timed eqResolve lean_a116 lean_s83
let lean_s85 := by R2 lean_s81, lean_s84, let206, [(- 1), 0]
let lean_s86 := by timed flipCongrArg lean_r51 [GE.ge]
have lean_s87 : (Eq let198 let205) := by timed congr lean_s86 lean_s68
have lean_s88 : let205 := by timed eqResolve lean_a114 lean_s87
let lean_s89 := by R2 lean_s85, lean_s88, let205, [(- 1), 0]
let lean_s90 := by timed flipCongrArg lean_r27 [LE.le]
have lean_s91 : (Eq let1 let1) := by timed rfl
have lean_s92 : (Eq let196 let161) := by timed congr lean_s90 lean_s91
have lean_s93 : (Eq let196 let53) := by timed Eq.trans lean_s92 lean_r47
have lean_s94 : let53 := by timed eqResolve lean_a110 lean_s93
let lean_s95 := by R1 lean_s89, lean_s94, let52, [(- 1), 0]
let lean_s96 := by timed flipCongrArg lean_r37 [LE.le]
have lean_s97 : (Eq let195 let170) := by timed congr lean_s96 lean_s91
have lean_s98 : (Eq let195 let29) := by timed Eq.trans lean_s97 lean_r55
have lean_s99 : let29 := by timed eqResolve lean_a107 lean_s98
let lean_s100 := by R1 lean_s95, lean_s99, let28, [(- 1), 0]
let lean_s101 := by timed flipCongrArg lean_r45 [LE.le]
have lean_s102 : (Eq let8 let8) := by timed rfl
have lean_s103 : (Eq let194 let190) := by timed congr lean_s101 lean_s102
have lean_s104 : (Eq let194 let41) := by timed Eq.trans lean_s103 lean_r74
have lean_s105 : let41 := by timed eqResolve lean_a105 lean_s104
let lean_s106 := by R1 lean_s100, lean_s105, let40, [(- 1), 0]
let lean_s107 := by timed flipCongrArg lean_r61 [LE.le]
have lean_s108 : (Eq let193 let149) := by timed congr lean_s107 lean_s68
have lean_s109 : (Eq let193 let148) := by timed Eq.trans lean_s108 lean_r34
have lean_s110 : let148 := by timed eqResolve lean_a100 lean_s109
let lean_s111 := by R1 lean_s106, lean_s110, let147, [(- 1), 0]
let lean_s112 := by timed flipCongrArg lean_r32 [LE.le]
have lean_s113 : (Eq let192 let144) := by timed congr lean_s112 lean_s91
have lean_s114 : (Eq let192 let18) := by timed Eq.trans lean_s113 lean_r30
have lean_s115 : let18 := by timed eqResolve lean_a99 lean_s114
exact (show False from by R1 lean_s111, lean_s115, let17, [0, 0])


