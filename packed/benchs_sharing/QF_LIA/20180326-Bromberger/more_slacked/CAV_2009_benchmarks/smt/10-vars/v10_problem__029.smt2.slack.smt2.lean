open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x8x5fplus : Int}
variable {x8x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x7x5fplus : Int}
variable {x6x5fminus : Int}
variable {x7x5fminus : Int}
variable {x9x5fminus : Int}
variable {x7x5fplus : Int}
variable {x1x5fplus : Int}
variable {x6x5fplus : Int}
variable {x9x5fplus : Int}
variable {x7x5fminus : Int}
variable {x2x5fplus : Int}
variable {x6x5fminus : Int}
variable {x2x5fminus : Int}
variable {x1x5fplus : Int}
variable {x1x5fminus : Int}
variable {x5x5fplus : Int}
variable {x5x5fplus : Int}
variable {x2x5fminus : Int}
variable {x0x5fminus : Int}
variable {x5x5fminus : Int}
variable {x3x5fplus : Int}
variable {x6x5fplus : Int}
variable {x3x5fminus : Int}
variable {x9x5fplus : Int}
variable {x9x5fminus : Int}
variable {x4x5fminus : Int}
variable {x4x5fplus : Int}
variable {x1x5fminus : Int}
variable {x0x5fplus : Int}
variable {x8x5fminus : Int}
variable {x8x5fplus : Int}
variable {x2x5fplus : Int}
variable {x0x5fminus : Int}
variable {x5x5fminus : Int}
variable {x0x5fplus : Int}
variable {x3x5fminus : Int}
variable {x3x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 2)
  let let3 := (Int.ofNat 1)
  let let4 := (binrel% HDiv.hDiv let3 let2)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% LT.lt let5 let1)
  let let7 := (binrel% HDiv.hDiv (Int.ofNat 5) let2)
  let let8 := (binrel% GT.gt let7 let1)
  let let9 := (Neg.neg let3)
  let let10 := (binrel% HMul.hMul let9 x9x5fplus)
  let let11 := (binrel% HAdd.hAdd let10 x9x5fminus)
  let let12 := (binrel% HMul.hMul let9 x2x5fminus)
  let let13 := (binrel% HMul.hMul let9 x3x5fplus)
  let let14 := (Neg.neg let2)
  let let15 := (binrel% HMul.hMul let14 x4x5fminus)
  let let16 := (binrel% HMul.hMul let2 x4x5fplus)
  let let17 := (binrel% HMul.hMul let9 x7x5fminus)
  let let18 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 let11))))))))
  let let19 := (binrel% GE.ge let18 let1)
  let let20 := (Not let19)
  let let21 := (binrel% LT.lt let18 let1)
  let let22 := (binrel% HDiv.hDiv (Int.ofNat 3) let2)
  let let23 := (Neg.neg let22)
  let let24 := (binrel% LT.lt let23 let1)
  let let25 := (binrel% GT.gt let22 let1)
  let let26 := (binrel% HMul.hMul let9 x6x5fplus)
  let let27 := (binrel% HAdd.hAdd let26 x6x5fminus)
  let let28 := (binrel% HMul.hMul let9 x8x5fminus)
  let let29 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 let27))))
  let let30 := (binrel% GE.ge let29 let1)
  let let31 := (Not let30)
  let let32 := (binrel% LT.lt let29 let1)
  let let33 := (binrel% GT.gt let4 let1)
  let let34 := (Eq let30 let30)
  let let35 := (binrel% HMul.hMul let9 x5x5fminus)
  let let36 := (binrel% HAdd.hAdd x5x5fplus let35)
  let let37 := (binrel% GE.ge let36 let1)
  let let38 := (Not let37)
  let let39 := (Not let38)
  let let40 := (Eq let37 let39)
  let let41 := (Eq let39 let37)
  let let42 := (Not let20)
  let let43 := (Eq let42 let19)
  let let44 := (binrel% HMul.hMul let22 let9)
  let let45 := (binrel% HMul.hMul let9 x9x5fminus)
  let let46 := (binrel% HAdd.hAdd x9x5fplus let45)
  let let47 := (binrel% HMul.hMul let9 x2x5fplus)
  let let48 := (binrel% HMul.hMul let9 x3x5fminus)
  let let49 := (binrel% HMul.hMul let2 x4x5fminus)
  let let50 := (binrel% HMul.hMul let14 x4x5fplus)
  let let51 := (binrel% HMul.hMul let9 x7x5fplus)
  let let52 := (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus let46))))))))
  let let53 := (binrel% HAdd.hAdd let47 x2x5fminus)
  let let54 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let53))))))))
  let let55 := (binrel% HMul.hMul let9 x6x5fminus)
  let let56 := (binrel% HAdd.hAdd x6x5fplus let55)
  let let57 := (binrel% HMul.hMul let9 x1x5fplus)
  let let58 := (binrel% HMul.hMul let9 x5x5fplus)
  let let59 := (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x1x5fminus let56))))))))
  let let60 := (binrel% HAdd.hAdd let57 x1x5fminus)
  let let61 := (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus let60))
  let let62 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus let61))))))
  let let63 := (Not True)
  let let64 := (Rat.ofInt 1)
  let let65 := (Neg.neg let64)
  let let66 := (binrel% LT.lt let65 let1)
  let let67 := (Neg.neg let7)
  let let68 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x5x5fplus) (binrel% HMul.hMul let67 x5x5fminus))
  let let69 := (binrel% HMul.hMul let7 let36)
  let let70 := (Eq let37 let37)
  let let71 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let56))))
  let let72 := (binrel% HAdd.hAdd x3x5fplus let48)
  let let73 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 let72))))
  let let74 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x2x5fplus let12)))))
  let let75 := (binrel% HMul.hMul let14 x9x5fminus)
  let let76 := (binrel% HMul.hMul let2 x9x5fplus)
  let let77 := (binrel% HMul.hMul let9 x4x5fplus)
  let let78 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let76 let75)))))))))))
  let let79 := (binrel% GE.ge let78 let1)
  let let80 := (Not let79)
  let let81 := (binrel% LE.le let78 let9)
  let let82 := (binrel% LE.le let36 let9)
  let let83 := (Eq let19 let42)
  let let84 := (binrel% HSub.hSub x5x5fplus x5x5fminus)
  let let85 := (binrel% HMul.hMul let9 x0x5fplus)
  let let86 := (binrel% HMul.hMul let9 x4x5fminus)
  let let87 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x0x5fminus let11))))))))
  let let88 := (binrel% GE.ge let87 let9)
  let let89 := (binrel% HMul.hMul let9 x0x5fminus)
  let let90 := (binrel% HMul.hMul let9 x8x5fplus)
  let let91 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let89 let46))))))))
  let let92 := (binrel% LE.le let91 let3)
  let let93 := (binrel% HMul.hMul let23 let9)
  let let94 := (binrel% GE.ge let52 let3)
  let let95 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x0x5fminus let56))))
  let let96 := (binrel% GE.ge let95 let1)
  let let97 := (Not let96)
  let let98 := (binrel% LE.le let95 let9)
  let let99 := (Eq let19 let19)
  let let100 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x1x5fminus let46))))))
  let let101 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 let60))))))
  let let102 := (Rat.ofInt 0)
  let let103 := (binrel% HMul.hMul let4 let1)
  let let104 := (binrel% LT.lt let36 let1)
  let let105 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x9x5fminus let27))))))))
  let let106 := (binrel% GE.ge let105 let1)
  let let107 := (binrel% HMul.hMul let9 x1x5fminus)
  let let108 := (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 let56))))))))
  let let109 := (binrel% LE.le let108 let1)
  let let110 := (binrel% HAdd.hAdd x1x5fplus let107)
  let let111 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus let110))))
  let let112 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus let111))))
  let let113 := (Not let31)
  let let114 := (Eq let113 let30)
  let let115 := (binrel% HAdd.hAdd x0x5fplus let89)
  let let116 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus let115))))))))
  let let117 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let85 x0x5fminus)))))
  let let118 := (binrel% LE.le let29 let9)
  let let119 := (Eq let30 let113)
  let let120 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x6x5fplus) (binrel% HMul.hMul let5 x6x5fminus))
  let let121 := (binrel% HMul.hMul let5 x9x5fminus)
  let let122 := (binrel% HMul.hMul let4 x9x5fplus)
  let let123 := (binrel% HMul.hMul let4 x7x5fminus)
  let let124 := (binrel% HMul.hMul let5 x7x5fplus)
  let let125 := (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x5x5fminus) (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x1x5fminus) (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let121 let120))))))))
  let let126 := (binrel% HMul.hMul let5 let105)
  let let127 := (Not let80)
  let let128 := (Eq let127 let79)
  let let129 := (binrel% HMul.hMul let4 x4x5fminus)
  let let130 := (binrel% HMul.hMul let5 x4x5fplus)
  let let131 := (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x8x5fminus) (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x0x5fminus) (binrel% HAdd.hAdd let122 let121)))))))))
  let let132 := (binrel% HMul.hMul let5 let87)
  let let133 := (Eq let79 let127)
  let let134 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x0x5fminus) let120))))
  let let135 := (binrel% HMul.hMul let4 let95)
  let let136 := (binrel% GE.ge let71 let9)
  let let137 := (Not let136)
  let let138 := (binrel% LT.lt let71 let9)
  let let139 := (Eq let79 let79)
  let let140 := (binrel% GE.ge let102 let65)
  let let141 := (Rat.ofInt (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x3x5fminus let27)))))
  let let142 := (binrel% HMul.hMul let65 let71)
  let let143 := (binrel% LT.lt let78 let1)
  let let144 := (binrel% HMul.hMul let23 let1)
  let let145 := (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus let61))))))))
  let let146 := (binrel% HMul.hMul let5 x7x5fminus)
  let let147 := (binrel% HMul.hMul let4 x7x5fplus)
  let let148 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x8x5fminus) (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x1x5fminus) (binrel% HAdd.hAdd x9x5fplus let45)))))))))))
  let let149 := (binrel% HMul.hMul let23 x2x5fminus)
  let let150 := (binrel% HMul.hMul let22 x2x5fplus)
  let let151 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x8x5fminus) (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x6x5fplus) (binrel% HMul.hMul let22 x6x5fminus))))))
  let let152 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x3x5fminus) (binrel% HAdd.hAdd let150 let149)))))))))
  let let153 := (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x9x5fplus) (binrel% HMul.hMul let4 x9x5fminus))))))))))
  let let154 := (binrel% HMul.hMul let22 x2x5fminus)
  let let155 := (binrel% HMul.hMul let23 x2x5fplus)
  let let156 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x4x5fminus) (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x9x5fplus) (binrel% HMul.hMul let22 x9x5fminus))))))))
  let let157 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x7x5fminus) (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x6x5fplus) (binrel% HMul.hMul let23 x6x5fminus))))))))))
  let let158 := (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let151 let148))))))))))
  let let159 := (Eq let96 let96)
  let let160 := (binrel% HMul.hMul let7 let9)
  let let161 := (binrel% HMul.hMul let5 let1)
  let let162 := (Not let97)
  let let163 := (Eq let162 let96)
  let let164 := (binrel% HMul.hMul let5 let9)
  let let165 := (Eq let96 let162)
  let let166 := (binrel% HMul.hMul let65 let9)
  let let167 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let107 let27))))))))
  let let168 := (binrel% GE.ge let167 let1)
  let let169 := (binrel% LE.le let59 let1)
  let let170 := (binrel% HMul.hMul let4 let78)
  let let171 := (binrel% HMul.hMul let22 let29)
  let let172 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x3x5fminus let53))))))))
  let let173 := (binrel% HMul.hMul let23 let172)
  let let174 := (binrel% LT.lt let95 let1)
  let let175 := (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let23 let102))))))))))
  let let176 := (binrel% HMul.hMul let4 let18)
  let let177 := (binrel% HMul.hMul let23 let100)
  let let178 := (binrel% HMul.hMul let23 let167)
  let let179 := (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let44 let103))))))))))
  let let180 := (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let178 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let176 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let171 let170))))))))))
  let let181 := (binrel% GE.ge let180 let179)
  let let182 := (Not let181)
  let let183 := (binrel% LT.lt let180 let179)
  let let184 := (binrel% LE.le let84 let9)
  let let185 := (binrel% LE.le let145 let9)
  let let186 := (binrel% LE.le let112 let1)
  let let187 := (binrel% LE.le let62 let1)
  let let188 := (binrel% LE.le let116 let3)
  let let189 := (binrel% HMul.hMul let2 x6x5fminus)
  let let190 := (binrel% HMul.hMul let14 x6x5fplus)
  let let191 := (binrel% LE.le let117 let9)
  let let192 := (binrel% LE.le let74 let9)
  let let193 := (binrel% GE.ge let172 let1)
  let let194 := (binrel% GE.ge let54 let3)
  let let195 := (binrel% GE.ge let101 let9)
  let let196 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let60))
  let let197 := (binrel% GE.ge let73 let9)
  let let198 := (binrel% GE.ge let100 let9)
  let let199 := (Not let198)
  let let200 := (Not let193)
  let let201 := (Not let88)
  let let202 := (Not let168)
  let let203 := (Not let106)
  let let204 := (Or let79 (Or let30 (Or let200 (Or let19 (Or let199 (Or let202 (Or let37 (Or let203 (Or let201 (Or let96 let137))))))))))
  let let205 := (Or let127 (Or let113 (Or let200 (Or let42 (Or let199 (Or let202 (Or let39 (Or let203 (Or let201 (Or let162 let137))))))))))
  let let206 := (Or let137 False)
  let let207 := (binrel% LT.lt let170 let103)
  let let208 := (And let33 let143)
  let let209 := (binrel% LE.le let171 let44)
  let let210 := (And let25 let118)
  let let211 := (binrel% LE.le let173 let144)
  let let212 := (And let24 let193)
  let let213 := (binrel% LT.lt let176 let103)
  let let214 := (And let33 let21)
  let let215 := (binrel% LE.le let177 let93)
  let let216 := (And let24 let198)
  let let217 := (binrel% LE.le let178 let144)
  let let218 := (And let24 let168)
  let let219 := (binrel% LE.le let69 let160)
  let let220 := (And let8 let82)
  let let221 := (binrel% LE.le let126 let161)
  let let222 := (And let6 let106)
  let let223 := (binrel% LE.le let132 let164)
  let let224 := (And let6 let88)
  let let225 := (binrel% LT.lt let135 let103)
  let let226 := (And let33 let174)
  let let227 := (binrel% LE.le let142 let166)
  let let228 := (And let66 let136)
(Eq let6 True) → (Eq let8 True) → (Eq let21 let20) → (Eq let24 True) → (Eq let25 True) → (Eq let32 let31) → (Eq let33 True) → (Eq let34 True) → (Eq let41 let40) → let43 → (Eq let44 let23) → (Eq let54 let52) → (Eq let62 let59) → (Eq let63 False) → (Eq let66 True) → (Eq let69 let68) → (Eq let70 True) → (Eq let73 let71) → (Eq let74 let29) → (Eq let81 let80) → let41 → (Eq let82 let38) → (Eq let43 let83) → (Eq let84 let36) → (Eq let92 let88) → (Eq let93 let22) → (Eq let94 let20) → (Eq let98 let97) → (Eq let99 True) → (Eq let101 let100) → (Eq let103 let102) → (Eq let104 let38) → (Eq let109 let106) → (Eq let112 let108) → let114 → (Eq let116 let91) → (Eq let117 let95) → (Eq let118 let31) → (Eq let114 let119) → (Eq let126 let125) → let128 → (Eq let132 let131) → (Eq let128 let133) → (Eq let135 let134) → (Eq let138 let137) → (Eq let139 True) → (Eq let140 True) → (Eq let142 let141) → (Eq let143 let80) → (Eq let144 let102) → (Eq let145 let78) → (Eq let158 let102) → (Eq let159 True) → (Eq let160 let67) → (Eq let161 let102) → let163 → (Eq let164 let4) → (Eq let163 let165) → (Eq let166 let64) → (Eq let169 let168) → (Eq let170 let148) → (Eq let171 let151) → (Eq let173 let152) → (Eq let174 let97) → (Eq let175 let65) → (Eq let176 let153) → (Eq let177 let156) → (Eq let178 let157) → (Eq let183 let182) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% LE.le (binrel% HSub.hSub x8x5fplus x8x5fminus) let9) → let184 → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x0x5fplus) (binrel% HMul.hMul let14 x0x5fminus)))))))))))) let9) → let185 → let186 → let187 → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus let110)))))))) let9) → let188 → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let107 let115)))))))) let3) → (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 let115)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 let53)))))) let9) → (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus let115)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x2x5fminus) let60)))))) let3) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus let53)))))) let3) → let191 → (binrel% LE.le let111 let1) → let192 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 let72)) let1) → (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 let27)) let9) → (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x3x5fminus) let110)) let1) → let193 → let194 → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus let60)))))) let1) → let195 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let16 let15))))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fminus let196)))) let1) → let197 → (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 let196)) let3) → (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x2x5fminus) let110)))) let9) → (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let13 x3x5fminus))) let1) → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 2)
  let let3 := (Int.ofNat 1)
  let let4 := (binrel% HDiv.hDiv let3 let2)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% LT.lt let5 let1)
  let let7 := (binrel% HDiv.hDiv (Int.ofNat 5) let2)
  let let8 := (binrel% GT.gt let7 let1)
  let let9 := (Neg.neg let3)
  let let10 := (binrel% HMul.hMul let9 x9x5fplus)
  let let11 := (binrel% HAdd.hAdd let10 x9x5fminus)
  let let12 := (binrel% HMul.hMul let9 x2x5fminus)
  let let13 := (binrel% HMul.hMul let9 x3x5fplus)
  let let14 := (Neg.neg let2)
  let let15 := (binrel% HMul.hMul let14 x4x5fminus)
  let let16 := (binrel% HMul.hMul let2 x4x5fplus)
  let let17 := (binrel% HMul.hMul let9 x7x5fminus)
  let let18 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 let11))))))))
  let let19 := (binrel% GE.ge let18 let1)
  let let20 := (Not let19)
  let let21 := (binrel% LT.lt let18 let1)
  let let22 := (binrel% HDiv.hDiv (Int.ofNat 3) let2)
  let let23 := (Neg.neg let22)
  let let24 := (binrel% LT.lt let23 let1)
  let let25 := (binrel% GT.gt let22 let1)
  let let26 := (binrel% HMul.hMul let9 x6x5fplus)
  let let27 := (binrel% HAdd.hAdd let26 x6x5fminus)
  let let28 := (binrel% HMul.hMul let9 x8x5fminus)
  let let29 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 let27))))
  let let30 := (binrel% GE.ge let29 let1)
  let let31 := (Not let30)
  let let32 := (binrel% LT.lt let29 let1)
  let let33 := (binrel% GT.gt let4 let1)
  let let34 := (Eq let30 let30)
  let let35 := (binrel% HMul.hMul let9 x5x5fminus)
  let let36 := (binrel% HAdd.hAdd x5x5fplus let35)
  let let37 := (binrel% GE.ge let36 let1)
  let let38 := (Not let37)
  let let39 := (Not let38)
  let let40 := (Eq let37 let39)
  let let41 := (Eq let39 let37)
  let let42 := (Not let20)
  let let43 := (Eq let42 let19)
  let let44 := (binrel% HMul.hMul let22 let9)
  let let45 := (binrel% HMul.hMul let9 x9x5fminus)
  let let46 := (binrel% HAdd.hAdd x9x5fplus let45)
  let let47 := (binrel% HMul.hMul let9 x2x5fplus)
  let let48 := (binrel% HMul.hMul let9 x3x5fminus)
  let let49 := (binrel% HMul.hMul let2 x4x5fminus)
  let let50 := (binrel% HMul.hMul let14 x4x5fplus)
  let let51 := (binrel% HMul.hMul let9 x7x5fplus)
  let let52 := (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus let46))))))))
  let let53 := (binrel% HAdd.hAdd let47 x2x5fminus)
  let let54 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let53))))))))
  let let55 := (binrel% HMul.hMul let9 x6x5fminus)
  let let56 := (binrel% HAdd.hAdd x6x5fplus let55)
  let let57 := (binrel% HMul.hMul let9 x1x5fplus)
  let let58 := (binrel% HMul.hMul let9 x5x5fplus)
  let let59 := (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x1x5fminus let56))))))))
  let let60 := (binrel% HAdd.hAdd let57 x1x5fminus)
  let let61 := (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus let60))
  let let62 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus let61))))))
  let let63 := (Not True)
  let let64 := (Rat.ofInt 1)
  let let65 := (Neg.neg let64)
  let let66 := (binrel% LT.lt let65 let1)
  let let67 := (Neg.neg let7)
  let let68 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x5x5fplus) (binrel% HMul.hMul let67 x5x5fminus))
  let let69 := (binrel% HMul.hMul let7 let36)
  let let70 := (Eq let37 let37)
  let let71 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let56))))
  let let72 := (binrel% HAdd.hAdd x3x5fplus let48)
  let let73 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 let72))))
  let let74 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fminus (binrel% HAdd.hAdd x2x5fplus let12)))))
  let let75 := (binrel% HMul.hMul let14 x9x5fminus)
  let let76 := (binrel% HMul.hMul let2 x9x5fplus)
  let let77 := (binrel% HMul.hMul let9 x4x5fplus)
  let let78 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let76 let75)))))))))))
  let let79 := (binrel% GE.ge let78 let1)
  let let80 := (Not let79)
  let let81 := (binrel% LE.le let78 let9)
  let let82 := (binrel% LE.le let36 let9)
  let let83 := (Eq let19 let42)
  let let84 := (binrel% HSub.hSub x5x5fplus x5x5fminus)
  let let85 := (binrel% HMul.hMul let9 x0x5fplus)
  let let86 := (binrel% HMul.hMul let9 x4x5fminus)
  let let87 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x0x5fminus let11))))))))
  let let88 := (binrel% GE.ge let87 let9)
  let let89 := (binrel% HMul.hMul let9 x0x5fminus)
  let let90 := (binrel% HMul.hMul let9 x8x5fplus)
  let let91 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HAdd.hAdd let89 let46))))))))
  let let92 := (binrel% LE.le let91 let3)
  let let93 := (binrel% HMul.hMul let23 let9)
  let let94 := (binrel% GE.ge let52 let3)
  let let95 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd x0x5fminus let56))))
  let let96 := (binrel% GE.ge let95 let1)
  let let97 := (Not let96)
  let let98 := (binrel% LE.le let95 let9)
  let let99 := (Eq let19 let19)
  let let100 := (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x1x5fminus let46))))))
  let let101 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 let60))))))
  let let102 := (Rat.ofInt 0)
  let let103 := (binrel% HMul.hMul let4 let1)
  let let104 := (binrel% LT.lt let36 let1)
  let let105 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd x9x5fminus let27))))))))
  let let106 := (binrel% GE.ge let105 let1)
  let let107 := (binrel% HMul.hMul let9 x1x5fminus)
  let let108 := (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let107 (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 let56))))))))
  let let109 := (binrel% LE.le let108 let1)
  let let110 := (binrel% HAdd.hAdd x1x5fplus let107)
  let let111 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus let110))))
  let let112 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus let111))))
  let let113 := (Not let31)
  let let114 := (Eq let113 let30)
  let let115 := (binrel% HAdd.hAdd x0x5fplus let89)
  let let116 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus let115))))))))
  let let117 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let85 x0x5fminus)))))
  let let118 := (binrel% LE.le let29 let9)
  let let119 := (Eq let30 let113)
  let let120 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x6x5fplus) (binrel% HMul.hMul let5 x6x5fminus))
  let let121 := (binrel% HMul.hMul let5 x9x5fminus)
  let let122 := (binrel% HMul.hMul let4 x9x5fplus)
  let let123 := (binrel% HMul.hMul let4 x7x5fminus)
  let let124 := (binrel% HMul.hMul let5 x7x5fplus)
  let let125 := (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x5x5fminus) (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x1x5fminus) (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd let121 let120))))))))
  let let126 := (binrel% HMul.hMul let5 let105)
  let let127 := (Not let80)
  let let128 := (Eq let127 let79)
  let let129 := (binrel% HMul.hMul let4 x4x5fminus)
  let let130 := (binrel% HMul.hMul let5 x4x5fplus)
  let let131 := (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x8x5fminus) (binrel% HAdd.hAdd let124 (binrel% HAdd.hAdd let123 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x0x5fminus) (binrel% HAdd.hAdd let122 let121)))))))))
  let let132 := (binrel% HMul.hMul let5 let87)
  let let133 := (Eq let79 let127)
  let let134 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x0x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x0x5fminus) let120))))
  let let135 := (binrel% HMul.hMul let4 let95)
  let let136 := (binrel% GE.ge let71 let9)
  let let137 := (Not let136)
  let let138 := (binrel% LT.lt let71 let9)
  let let139 := (Eq let79 let79)
  let let140 := (binrel% GE.ge let102 let65)
  let let141 := (Rat.ofInt (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x3x5fminus let27)))))
  let let142 := (binrel% HMul.hMul let65 let71)
  let let143 := (binrel% LT.lt let78 let1)
  let let144 := (binrel% HMul.hMul let23 let1)
  let let145 := (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus let61))))))))
  let let146 := (binrel% HMul.hMul let5 x7x5fminus)
  let let147 := (binrel% HMul.hMul let4 x7x5fplus)
  let let148 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x8x5fminus) (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let129 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x1x5fminus) (binrel% HAdd.hAdd x9x5fplus let45)))))))))))
  let let149 := (binrel% HMul.hMul let23 x2x5fminus)
  let let150 := (binrel% HMul.hMul let22 x2x5fplus)
  let let151 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x8x5fminus) (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x6x5fplus) (binrel% HMul.hMul let22 x6x5fminus))))))
  let let152 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x4x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x3x5fminus) (binrel% HAdd.hAdd let150 let149)))))))))
  let let153 := (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let146 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let4 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 x9x5fplus) (binrel% HMul.hMul let4 x9x5fminus))))))))))
  let let154 := (binrel% HMul.hMul let22 x2x5fminus)
  let let155 := (binrel% HMul.hMul let23 x2x5fplus)
  let let156 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x4x5fminus) (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x9x5fplus) (binrel% HMul.hMul let22 x9x5fminus))))))))
  let let157 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x7x5fminus) (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 x6x5fplus) (binrel% HMul.hMul let23 x6x5fminus))))))))))
  let let158 := (binrel% HAdd.hAdd let141 (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let125 (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let153 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let151 let148))))))))))
  let let159 := (Eq let96 let96)
  let let160 := (binrel% HMul.hMul let7 let9)
  let let161 := (binrel% HMul.hMul let5 let1)
  let let162 := (Not let97)
  let let163 := (Eq let162 let96)
  let let164 := (binrel% HMul.hMul let5 let9)
  let let165 := (Eq let96 let162)
  let let166 := (binrel% HMul.hMul let65 let9)
  let let167 := (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let107 let27))))))))
  let let168 := (binrel% GE.ge let167 let1)
  let let169 := (binrel% LE.le let59 let1)
  let let170 := (binrel% HMul.hMul let4 let78)
  let let171 := (binrel% HMul.hMul let22 let29)
  let let172 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x3x5fminus let53))))))))
  let let173 := (binrel% HMul.hMul let23 let172)
  let let174 := (binrel% LT.lt let95 let1)
  let let175 := (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let4 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let23 let102))))))))))
  let let176 := (binrel% HMul.hMul let4 let18)
  let let177 := (binrel% HMul.hMul let23 let100)
  let let178 := (binrel% HMul.hMul let23 let167)
  let let179 := (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let164 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let144 (binrel% HAdd.hAdd let44 let103))))))))))
  let let180 := (binrel% HAdd.hAdd let142 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd let69 (binrel% HAdd.hAdd let178 (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let176 (binrel% HAdd.hAdd let173 (binrel% HAdd.hAdd let171 let170))))))))))
  let let181 := (binrel% GE.ge let180 let179)
  let let182 := (Not let181)
  let let183 := (binrel% LT.lt let180 let179)
  let let184 := (binrel% LE.le let84 let9)
  let let185 := (binrel% LE.le let145 let9)
  let let186 := (binrel% LE.le let112 let1)
  let let187 := (binrel% LE.le let62 let1)
  let let188 := (binrel% LE.le let116 let3)
  let let189 := (binrel% HMul.hMul let2 x6x5fminus)
  let let190 := (binrel% HMul.hMul let14 x6x5fplus)
  let let191 := (binrel% LE.le let117 let9)
  let let192 := (binrel% LE.le let74 let9)
  let let193 := (binrel% GE.ge let172 let1)
  let let194 := (binrel% GE.ge let54 let3)
  let let195 := (binrel% GE.ge let101 let9)
  let let196 := (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 let60))
  let let197 := (binrel% GE.ge let73 let9)
  let let198 := (binrel% GE.ge let100 let9)
  let let199 := (Not let198)
  let let200 := (Not let193)
  let let201 := (Not let88)
  let let202 := (Not let168)
  let let203 := (Not let106)
  let let204 := (Or let79 (Or let30 (Or let200 (Or let19 (Or let199 (Or let202 (Or let37 (Or let203 (Or let201 (Or let96 let137))))))))))
  let let205 := (Or let127 (Or let113 (Or let200 (Or let42 (Or let199 (Or let202 (Or let39 (Or let203 (Or let201 (Or let162 let137))))))))))
  let let206 := (Or let137 False)
  let let207 := (binrel% LT.lt let170 let103)
  let let208 := (And let33 let143)
  let let209 := (binrel% LE.le let171 let44)
  let let210 := (And let25 let118)
  let let211 := (binrel% LE.le let173 let144)
  let let212 := (And let24 let193)
  let let213 := (binrel% LT.lt let176 let103)
  let let214 := (And let33 let21)
  let let215 := (binrel% LE.le let177 let93)
  let let216 := (And let24 let198)
  let let217 := (binrel% LE.le let178 let144)
  let let218 := (And let24 let168)
  let let219 := (binrel% LE.le let69 let160)
  let let220 := (And let8 let82)
  let let221 := (binrel% LE.le let126 let161)
  let let222 := (And let6 let106)
  let let223 := (binrel% LE.le let132 let164)
  let let224 := (And let6 let88)
  let let225 := (binrel% LT.lt let135 let103)
  let let226 := (And let33 let174)
  let let227 := (binrel% LE.le let142 let166)
  let let228 := (And let66 let136)
fun lean_r0 : (Eq let6 True) => -- EVALUATE
fun lean_r1 : (Eq let8 True) => -- EVALUATE
fun lean_r2 : (Eq let21 let20) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let24 True) => -- EVALUATE
fun lean_r4 : (Eq let25 True) => -- EVALUATE
fun lean_r5 : (Eq let32 let31) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let33 True) => -- EVALUATE
fun lean_r7 : (Eq let34 True) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let41 let40) => -- THEORY_REWRITE_BOOL
fun lean_r9 : let43 => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq let44 let23) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let54 let52) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let62 let59) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let63 False) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let66 True) => -- EVALUATE
fun lean_r15 : (Eq let69 let68) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let70 True) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let73 let71) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let74 let29) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let81 let80) => -- THEORY_REWRITE_ARITH
fun lean_r20 : let41 => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq let82 let38) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let43 let83) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let84 let36) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let92 let88) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let93 let22) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let94 let20) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let98 let97) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let99 True) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let101 let100) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let103 let102) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let104 let38) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let109 let106) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let112 let108) => -- THEORY_REWRITE_ARITH
fun lean_r34 : let114 => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let116 let91) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let117 let95) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let118 let31) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let114 let119) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq let126 let125) => -- THEORY_REWRITE_ARITH
fun lean_r40 : let128 => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let132 let131) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let128 let133) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let135 let134) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let138 let137) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let139 True) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let140 True) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let142 let141) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let143 let80) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let144 let102) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let145 let78) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let158 let102) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let159 True) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let160 let67) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let161 let102) => -- THEORY_REWRITE_ARITH
fun lean_r55 : let163 => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq let164 let4) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let163 let165) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq let166 let64) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let169 let168) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let170 let148) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let171 let151) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let173 let152) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let174 let97) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let175 let65) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let176 let153) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let177 let156) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let178 let157) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let183 let182) => -- THEORY_REWRITE_ARITH
fun lean_a69 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a70 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a71 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a72 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a73 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a74 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a75 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a76 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a77 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a78 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a79 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a80 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a81 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a82 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a83 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a84 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a85 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a86 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a87 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a88 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a89 : (binrel% LE.le (binrel% HSub.hSub x8x5fplus x8x5fminus) let9) =>
fun lean_a90 : let184 =>
fun lean_a91 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x0x5fplus) (binrel% HMul.hMul let14 x0x5fminus)))))))))))) let9) =>
fun lean_a92 : let185 =>
fun lean_a93 : let186 =>
fun lean_a94 : let187 =>
fun lean_a95 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus let110)))))))) let9) =>
fun lean_a96 : let188 =>
fun lean_a97 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let107 let115)))))))) let3) =>
fun lean_a98 : (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let13 (binrel% HAdd.hAdd x3x5fminus (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let12 let115)))))) let1) =>
fun lean_a99 : (binrel% LE.le (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 let53)))))) let9) =>
fun lean_a100 : (binrel% LE.le (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd x2x5fminus let115)))))) let1) =>
fun lean_a101 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x2x5fminus) let60)))))) let3) =>
fun lean_a102 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd x4x5fminus let53)))))) let3) =>
fun lean_a103 : let191 =>
fun lean_a104 : (binrel% LE.le let111 let1) =>
fun lean_a105 : let192 =>
fun lean_a106 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 let72)) let1) =>
fun lean_a107 : (binrel% LE.le (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 let27)) let9) =>
fun lean_a108 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x3x5fminus) let110)) let1) =>
fun lean_a109 : let193 =>
fun lean_a110 : let194 =>
fun lean_a111 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd x5x5fminus let60)))))) let1) =>
fun lean_a112 : let195 =>
fun lean_a113 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let16 let15))))))) let1) =>
fun lean_a114 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd x6x5fminus let196)))) let1) =>
fun lean_a115 : let197 =>
fun lean_a116 : (binrel% GE.ge (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let17 let196)) let3) =>
fun lean_a117 : (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd (binrel% HMul.hMul let14 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let2 x2x5fminus) let110)))) let9) =>
fun lean_a118 : (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let13 x3x5fminus))) let1) => by
have lean_s0 : (Or let127 (Or let113 (Or let200 (Or let42 (Or let199 (Or let202 (Or let39 (Or let203 (Or let201 (Or let162 let206)))))))))) :=
  (scope (fun lean_a119 : let80 =>
    (scope (fun lean_a120 : let31 =>
      (scope (fun lean_a121 : let193 =>
        (scope (fun lean_a122 : let20 =>
          (scope (fun lean_a123 : let198 =>
            (scope (fun lean_a124 : let168 =>
              (scope (fun lean_a125 : let38 =>
                (scope (fun lean_a126 : let106 =>
                  (scope (fun lean_a127 : let88 =>
                    (scope (fun lean_a128 : let97 =>
                      (scope (fun lean_a129 : let136 =>
                        let lean_s0 := by timed flipCongrArg lean_r17 [GE.ge]
                        have lean_s1 : (Eq let9 let9) := by timed rfl
                        have lean_s2 : (Eq let197 let136) := by timed congr lean_s0 lean_s1
                        have lean_s3 : let136 := by timed eqResolve lean_a115 lean_s2
                        have lean_s4 : let206 :=
                          (scope (fun lean_a129 : let136 =>
                            have lean_s4 : let66 := by timed trueElim lean_r14
                            have lean_s5 : let136 := by timed eqResolve lean_a115 lean_s2
                            have lean_s6 : let228 := by timed And.intro lean_s4 lean_s5
                            have lean_s7 : (Implies let228 let227) := by arithMulNeg [let71, let9, let65], 3
                            have lean_s8 : let227 := by timed modusPonens lean_s6 lean_s7
                            have lean_s9 : let33 := by timed trueElim lean_r6
                            let lean_s10 := by timed flipCongrArg lean_r36 [LE.le]
                            have lean_s11 : (Eq let191 let98) := by timed congr lean_s10 lean_s1
                            have lean_s12 : (Eq let191 let97) := by timed Eq.trans lean_s11 lean_r27
                            have lean_s13 : let97 := by timed eqResolve lean_a103 lean_s12
                            have lean_s14 : (Eq let97 let174) := by timed Eq.symm lean_r63
                            have lean_s15 : let174 := by timed eqResolve lean_s13 lean_s14
                            have lean_s16 : let226 := by timed And.intro lean_s9 lean_s15
                            have lean_s17 : (Implies let226 let225) := by arithMulPos [let95, let1, let4], 0
                            have lean_s18 : let225 := by timed modusPonens lean_s16 lean_s17
                            have lean_s19 : let6 := by timed trueElim lean_r0
                            let lean_s20 := by timed flipCongrArg lean_r35 [LE.le]
                            have lean_s21 : (Eq let3 let3) := by timed rfl
                            have lean_s22 : (Eq let188 let92) := by timed congr lean_s20 lean_s21
                            have lean_s23 : (Eq let188 let88) := by timed Eq.trans lean_s22 lean_r24
                            have lean_s24 : let88 := by timed eqResolve lean_a96 lean_s23
                            have lean_s25 : let224 := by timed And.intro lean_s19 lean_s24
                            have lean_s26 : (Implies let224 let223) := by arithMulNeg [let87, let9, let5], 3
                            have lean_s27 : let223 := by timed modusPonens lean_s25 lean_s26
                            let lean_s28 := by timed flipCongrArg lean_r33 [LE.le]
                            have lean_s29 : (Eq let1 let1) := by timed rfl
                            have lean_s30 : (Eq let186 let109) := by timed congr lean_s28 lean_s29
                            have lean_s31 : (Eq let186 let106) := by timed Eq.trans lean_s30 lean_r32
                            have lean_s32 : let106 := by timed eqResolve lean_a93 lean_s31
                            have lean_s33 : let222 := by timed And.intro lean_s19 lean_s32
                            have lean_s34 : (Implies let222 let221) := by arithMulNeg [let105, let1, let5], 3
                            have lean_s35 : let221 := by timed modusPonens lean_s33 lean_s34
                            have lean_s36 : let8 := by timed trueElim lean_r1
                            let lean_s37 := by timed flipCongrArg lean_r23 [LE.le]
                            have lean_s38 : (Eq let184 let82) := by timed congr lean_s37 lean_s1
                            have lean_s39 : (Eq let184 let38) := by timed Eq.trans lean_s38 lean_r21
                            have lean_s40 : let38 := by timed eqResolve lean_a90 lean_s39
                            have lean_s41 : (Eq let38 let104) := by timed Eq.symm lean_r31
                            have lean_s42 : let104 := by timed eqResolve lean_s40 lean_s41
                            have lean_s43 : let82 := by intTightUb lean_s42
                            have lean_s44 : let220 := by timed And.intro lean_s36 lean_s43
                            have lean_s45 : (Implies let220 let219) := by arithMulPos [let36, let9, let7], 1
                            have lean_s46 : let219 := by timed modusPonens lean_s44 lean_s45
                            have lean_s47 : let24 := by timed trueElim lean_r3
                            let lean_s48 := by timed flipCongrArg lean_r12 [LE.le]
                            have lean_s49 : (Eq let187 let169) := by timed congr lean_s48 lean_s29
                            have lean_s50 : (Eq let187 let168) := by timed Eq.trans lean_s49 lean_r59
                            have lean_s51 : let168 := by timed eqResolve lean_a94 lean_s50
                            have lean_s52 : let218 := by timed And.intro lean_s47 lean_s51
                            have lean_s53 : (Implies let218 let217) := by arithMulNeg [let167, let1, let23], 3
                            have lean_s54 : let217 := by timed modusPonens lean_s52 lean_s53
                            let lean_s55 := by timed flipCongrArg lean_r29 [GE.ge]
                            have lean_s56 : (Eq let195 let198) := by timed congr lean_s55 lean_s1
                            have lean_s57 : let198 := by timed eqResolve lean_a112 lean_s56
                            have lean_s58 : let216 := by timed And.intro lean_s47 lean_s57
                            have lean_s59 : (Implies let216 let215) := by arithMulNeg [let100, let9, let23], 3
                            have lean_s60 : let215 := by timed modusPonens lean_s58 lean_s59
                            let lean_s61 := by timed flipCongrArg lean_r11 [GE.ge]
                            have lean_s62 : (Eq let194 let94) := by timed congr lean_s61 lean_s21
                            have lean_s63 : (Eq let194 let20) := by timed Eq.trans lean_s62 lean_r26
                            have lean_s64 : let20 := by timed eqResolve lean_a110 lean_s63
                            have lean_s65 : (Eq let20 let21) := by timed Eq.symm lean_r2
                            have lean_s66 : let21 := by timed eqResolve lean_s64 lean_s65
                            have lean_s67 : let214 := by timed And.intro lean_s9 lean_s66
                            have lean_s68 : (Implies let214 let213) := by arithMulPos [let18, let1, let4], 0
                            have lean_s69 : let213 := by timed modusPonens lean_s67 lean_s68
                            have lean_s70 : let212 := by timed And.intro lean_s47 lean_a121
                            have lean_s71 : (Implies let212 let211) := by arithMulNeg [let172, let1, let23], 3
                            have lean_s72 : let211 := by timed modusPonens lean_s70 lean_s71
                            have lean_s73 : let25 := by timed trueElim lean_r4
                            let lean_s74 := by timed flipCongrArg lean_r18 [LE.le]
                            have lean_s75 : (Eq let192 let118) := by timed congr lean_s74 lean_s1
                            have lean_s76 : (Eq let192 let31) := by timed Eq.trans lean_s75 lean_r37
                            have lean_s77 : let31 := by timed eqResolve lean_a105 lean_s76
                            have lean_s78 : (Eq let31 let32) := by timed Eq.symm lean_r5
                            have lean_s79 : let32 := by timed eqResolve lean_s77 lean_s78
                            have lean_s80 : let118 := by intTightUb lean_s79
                            have lean_s81 : let210 := by timed And.intro lean_s73 lean_s80
                            have lean_s82 : (Implies let210 let209) := by arithMulPos [let29, let9, let22], 1
                            have lean_s83 : let209 := by timed modusPonens lean_s81 lean_s82
                            let lean_s84 := by timed flipCongrArg lean_r50 [LE.le]
                            have lean_s85 : (Eq let185 let81) := by timed congr lean_s84 lean_s1
                            have lean_s86 : (Eq let185 let80) := by timed Eq.trans lean_s85 lean_r19
                            have lean_s87 : let80 := by timed eqResolve lean_a92 lean_s86
                            have lean_s88 : (Eq let80 let143) := by timed Eq.symm lean_r48
                            have lean_s89 : let143 := by timed eqResolve lean_s87 lean_s88
                            have lean_s90 : let208 := by timed And.intro lean_s9 lean_s89
                            have lean_s91 : (Implies let208 let207) := by arithMulPos [let78, let1, let4], 0
                            have lean_s92 : let207 := by timed modusPonens lean_s90 lean_s91
                            have lean_s93 : let183 := by sumBounds [lean_s8, lean_s18, lean_s27, lean_s35, lean_s46, lean_s54, lean_s60, lean_s69, lean_s72, lean_s83, lean_s92]
                            let lean_s94 := by timed congrHAdd lean_r61 lean_r60
                            let lean_s95 := by timed congrHAdd lean_r62 lean_s94
                            let lean_s96 := by timed congrHAdd lean_r65 lean_s95
                            let lean_s97 := by timed congrHAdd lean_r66 lean_s96
                            let lean_s98 := by timed congrHAdd lean_r67 lean_s97
                            let lean_s99 := by timed congrHAdd lean_r15 lean_s98
                            let lean_s100 := by timed congrHAdd lean_r39 lean_s99
                            let lean_s101 := by timed congrHAdd lean_r41 lean_s100
                            let lean_s102 := by timed congrHAdd lean_r43 lean_s101
                            have lean_s103 : (Eq let180 let158) := by timed congrHAdd lean_r47 lean_s102
                            have lean_s104 : (Eq let180 let102) := by timed Eq.trans lean_s103 lean_r51
                            let lean_s105 := by timed flipCongrArg lean_s104 [GE.ge]
                            let lean_s106 := by timed congrHAdd lean_r10 lean_r30
                            let lean_s107 := by timed congrHAdd lean_r49 lean_s106
                            let lean_s108 := by timed congrHAdd lean_r30 lean_s107
                            let lean_s109 := by timed congrHAdd lean_r25 lean_s108
                            let lean_s110 := by timed congrHAdd lean_r49 lean_s109
                            let lean_s111 := by timed congrHAdd lean_r53 lean_s110
                            let lean_s112 := by timed congrHAdd lean_r54 lean_s111
                            let lean_s113 := by timed congrHAdd lean_r56 lean_s112
                            let lean_s114 := by timed congrHAdd lean_r30 lean_s113
                            have lean_s115 : (Eq let179 let175) := by timed congrHAdd lean_r58 lean_s114
                            have lean_s116 : (Eq let179 let65) := by timed Eq.trans lean_s115 lean_r64
                            have lean_s117 : (Eq let181 let140) := by timed congr lean_s105 lean_s116
                            have lean_s118 : (Eq let181 True) := by timed Eq.trans lean_s117 lean_r46
                            have lean_s119 : (Eq let182 let63) := by timed flipCongrArg lean_s118 [Not]
                            have lean_s120 : (Eq let182 False) := by timed Eq.trans lean_s119 lean_r13
                            have lean_s121 : (Eq let183 False) := by timed Eq.trans lean_r68 lean_s120
                            show False from by timed eqResolve lean_s93 lean_s121
                          ))
                        have lean_s5 : let137 := by liftOrNToNeg lean_s4
                        have lean_s6 : (Eq let137 let138) := by timed Eq.symm lean_r44
                        have lean_s7 : let138 := by timed eqResolve lean_s5 lean_s6
                        have lean_s8 : let137 := by timed eqResolve lean_s7 lean_r44
                        show False from by timed contradiction lean_s3 lean_s8
  ))))))))))))))))))))))
have lean_s1 : (Not (And let80 (And let31 (And let193 (And let20 (And let198 (And let168 (And let38 (And let106 (And let88 (And let97 let136))))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let205 := by timed flipNotAnd lean_s1 [let80, let31, let193, let20, let198, let168, let38, let106, let88, let97, let136]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let139 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let133 let139) := by timed congr lean_s5 lean_r40
have lean_s7 : (Eq let133 True) := by timed Eq.trans lean_s6 lean_r45
have lean_s8 : (Eq let128 True) := by timed Eq.trans lean_r42 lean_s7
have lean_s9 : let128 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let34 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let119 let34) := by timed congr lean_s12 lean_r34
have lean_s14 : (Eq let119 True) := by timed Eq.trans lean_s13 lean_r7
have lean_s15 : (Eq let114 True) := by timed Eq.trans lean_r38 lean_s14
have lean_s16 : let114 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : (Eq let200 let200) := by timed rfl
let lean_s19 := by timed congr lean_s3 lean_s18
have lean_s20 : let99 := by timed rfl
let lean_s21 := by timed flipCongrArg lean_s20 [Eq]
have lean_s22 : (Eq let83 let99) := by timed congr lean_s21 lean_r9
have lean_s23 : (Eq let83 True) := by timed Eq.trans lean_s22 lean_r28
have lean_s24 : (Eq let43 True) := by timed Eq.trans lean_r22 lean_s23
have lean_s25 : let43 := by timed trueElim lean_s24
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : (Eq let199 let199) := by timed rfl
let lean_s28 := by timed congr lean_s3 lean_s27
have lean_s29 : (Eq let202 let202) := by timed rfl
let lean_s30 := by timed congr lean_s3 lean_s29
have lean_s31 : let70 := by timed rfl
let lean_s32 := by timed flipCongrArg lean_s31 [Eq]
have lean_s33 : (Eq let40 let70) := by timed congr lean_s32 lean_r20
have lean_s34 : (Eq let40 True) := by timed Eq.trans lean_s33 lean_r16
have lean_s35 : (Eq let41 True) := by timed Eq.trans lean_r8 lean_s34
have lean_s36 : let41 := by timed trueElim lean_s35
let lean_s37 := by timed congr lean_s3 lean_s36
have lean_s38 : (Eq let203 let203) := by timed rfl
let lean_s39 := by timed congr lean_s3 lean_s38
have lean_s40 : (Eq let201 let201) := by timed rfl
let lean_s41 := by timed congr lean_s3 lean_s40
have lean_s42 : let159 := by timed rfl
let lean_s43 := by timed flipCongrArg lean_s42 [Eq]
have lean_s44 : (Eq let165 let159) := by timed congr lean_s43 lean_r55
have lean_s45 : (Eq let165 True) := by timed Eq.trans lean_s44 lean_r52
have lean_s46 : (Eq let163 True) := by timed Eq.trans lean_r57 lean_s45
have lean_s47 : let163 := by timed trueElim lean_s46
let lean_s48 := by timed congr lean_s3 lean_s47
have lean_s49 : (Eq let137 let137) := by timed rfl
let lean_s50 := by timed congr lean_s48 lean_s49
let lean_s51 := by timed congr lean_s41 lean_s50
let lean_s52 := by timed congr lean_s39 lean_s51
let lean_s53 := by timed congr lean_s37 lean_s52
let lean_s54 := by timed congr lean_s30 lean_s53
let lean_s55 := by timed congr lean_s28 lean_s54
let lean_s56 := by timed congr lean_s26 lean_s55
let lean_s57 := by timed congr lean_s19 lean_s56
let lean_s58 := by timed congr lean_s17 lean_s57
have lean_s59 : (Eq let205 let204) := by timed congr lean_s10 lean_s58
have lean_s60 : let204 := by timed eqResolve lean_s2 lean_s59
have lean_s61 : (Or let37 (Or let79 (Or let96 (Or let30 (Or let19 (Or let203 (Or let202 (Or let201 (Or let200 (Or let199 let137)))))))))) := by permutateOr lean_s60, [6, 0, 9, 1, 3, 7, 5, 8, 2, 4, 10], (- 1)
let lean_s62 := by timed flipCongrArg lean_r17 [GE.ge]
have lean_s63 : (Eq let9 let9) := by timed rfl
have lean_s64 : (Eq let197 let136) := by timed congr lean_s62 lean_s63
have lean_s65 : let136 := by timed eqResolve lean_a115 lean_s64
let lean_s66 := by R2 lean_s61, lean_s65, let136, [(- 1), 0]
let lean_s67 := by timed flipCongrArg lean_r29 [GE.ge]
have lean_s68 : (Eq let195 let198) := by timed congr lean_s67 lean_s63
have lean_s69 : let198 := by timed eqResolve lean_a112 lean_s68
let lean_s70 := by R2 lean_s66, lean_s69, let198, [(- 1), 0]
let lean_s71 := by timed flipCongrArg lean_r11 [GE.ge]
have lean_s72 : (Eq let3 let3) := by timed rfl
have lean_s73 : (Eq let194 let94) := by timed congr lean_s71 lean_s72
have lean_s74 : (Eq let194 let20) := by timed Eq.trans lean_s73 lean_r26
have lean_s75 : let20 := by timed eqResolve lean_a110 lean_s74
let lean_s76 := by R1 lean_s70, lean_s75, let19, [(- 1), 0]
let lean_s77 := by R2 lean_s76, lean_a109, let193, [(- 1), 0]
let lean_s78 := by timed flipCongrArg lean_r18 [LE.le]
have lean_s79 : (Eq let192 let118) := by timed congr lean_s78 lean_s63
have lean_s80 : (Eq let192 let31) := by timed Eq.trans lean_s79 lean_r37
have lean_s81 : let31 := by timed eqResolve lean_a105 lean_s80
let lean_s82 := by R1 lean_s77, lean_s81, let30, [(- 1), 0]
let lean_s83 := by timed flipCongrArg lean_r36 [LE.le]
have lean_s84 : (Eq let191 let98) := by timed congr lean_s83 lean_s63
have lean_s85 : (Eq let191 let97) := by timed Eq.trans lean_s84 lean_r27
have lean_s86 : let97 := by timed eqResolve lean_a103 lean_s85
let lean_s87 := by R1 lean_s82, lean_s86, let96, [(- 1), 0]
let lean_s88 := by timed flipCongrArg lean_r35 [LE.le]
have lean_s89 : (Eq let188 let92) := by timed congr lean_s88 lean_s72
have lean_s90 : (Eq let188 let88) := by timed Eq.trans lean_s89 lean_r24
have lean_s91 : let88 := by timed eqResolve lean_a96 lean_s90
let lean_s92 := by R2 lean_s87, lean_s91, let88, [(- 1), 0]
let lean_s93 := by timed flipCongrArg lean_r12 [LE.le]
have lean_s94 : (Eq let1 let1) := by timed rfl
have lean_s95 : (Eq let187 let169) := by timed congr lean_s93 lean_s94
have lean_s96 : (Eq let187 let168) := by timed Eq.trans lean_s95 lean_r59
have lean_s97 : let168 := by timed eqResolve lean_a94 lean_s96
let lean_s98 := by R2 lean_s92, lean_s97, let168, [(- 1), 0]
let lean_s99 := by timed flipCongrArg lean_r33 [LE.le]
have lean_s100 : (Eq let186 let109) := by timed congr lean_s99 lean_s94
have lean_s101 : (Eq let186 let106) := by timed Eq.trans lean_s100 lean_r32
have lean_s102 : let106 := by timed eqResolve lean_a93 lean_s101
let lean_s103 := by R2 lean_s98, lean_s102, let106, [(- 1), 0]
let lean_s104 := by timed flipCongrArg lean_r50 [LE.le]
have lean_s105 : (Eq let185 let81) := by timed congr lean_s104 lean_s63
have lean_s106 : (Eq let185 let80) := by timed Eq.trans lean_s105 lean_r19
have lean_s107 : let80 := by timed eqResolve lean_a92 lean_s106
let lean_s108 := by R1 lean_s103, lean_s107, let79, [(- 1), 0]
let lean_s109 := by timed flipCongrArg lean_r23 [LE.le]
have lean_s110 : (Eq let184 let82) := by timed congr lean_s109 lean_s63
have lean_s111 : (Eq let184 let38) := by timed Eq.trans lean_s110 lean_r21
have lean_s112 : let38 := by timed eqResolve lean_a90 lean_s111
exact (show False from by R1 lean_s108, lean_s112, let37, [0, 0])


