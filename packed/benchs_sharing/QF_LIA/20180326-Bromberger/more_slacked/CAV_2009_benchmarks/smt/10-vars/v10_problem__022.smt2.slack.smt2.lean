open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x2x5fplus : Int}
variable {x2x5fminus : Int}
variable {x6x5fplus : Int}
variable {x6x5fminus : Int}
variable {x9x5fplus : Int}
variable {x9x5fminus : Int}
variable {x7x5fplus : Int}
variable {x7x5fminus : Int}
variable {x5x5fplus : Int}
variable {x5x5fminus : Int}
variable {x4x5fplus : Int}
variable {x5x5fminus : Int}
variable {x4x5fplus : Int}
variable {x4x5fminus : Int}
variable {x1x5fplus : Int}
variable {x1x5fminus : Int}
variable {x7x5fminus : Int}
variable {x0x5fplus : Int}
variable {x8x5fplus : Int}
variable {x8x5fminus : Int}
variable {x3x5fplus : Int}
variable {x3x5fplus : Int}
variable {x3x5fminus : Int}
variable {x0x5fplus : Int}
variable {x4x5fminus : Int}
variable {x5x5fplus : Int}
variable {x8x5fminus : Int}
variable {x0x5fminus : Int}
variable {x7x5fplus : Int}
variable {x9x5fminus : Int}
variable {x6x5fminus : Int}
variable {x9x5fplus : Int}
variable {x3x5fminus : Int}
variable {x0x5fminus : Int}
variable {x6x5fplus : Int}
variable {x8x5fplus : Int}
variable {x2x5fminus : Int}
variable {x2x5fplus : Int}
variable {x1x5fminus : Int}
variable {x1x5fplus : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (binrel% GT.gt let2 let1)
  let let4 := (Int.ofNat 8)
  let let5 := (Int.ofNat 17)
  let let6 := (binrel% HDiv.hDiv let5 let4)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% LT.lt let7 let1)
  let let9 := (Int.ofNat 1)
  let let10 := (Neg.neg let9)
  let let11 := (binrel% HMul.hMul let10 x7x5fplus)
  let let12 := (Int.ofNat 2)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HMul.hMul let13 x1x5fminus)
  let let15 := (binrel% HMul.hMul let12 x1x5fplus)
  let let16 := (binrel% HMul.hMul let10 x6x5fminus)
  let let17 := (binrel% HMul.hMul let10 x8x5fminus)
  let let18 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let11 x7x5fminus)))))))
  let let19 := (binrel% GE.ge let18 let9)
  let let20 := (Not let19)
  let let21 := (binrel% LT.lt let18 let9)
  let let22 := (Int.ofNat 13)
  let let23 := (binrel% HDiv.hDiv let22 let4)
  let let24 := (Neg.neg let23)
  let let25 := (binrel% LT.lt let24 let1)
  let let26 := (binrel% GT.gt let23 let1)
  let let27 := (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x0x5fplus) x0x5fminus)
  let let28 := (binrel% HMul.hMul let10 x3x5fminus)
  let let29 := (binrel% HMul.hMul let10 x7x5fminus)
  let let30 := (binrel% HMul.hMul let10 x2x5fminus)
  let let31 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 let27))))))))
  let let32 := (binrel% GE.ge let31 let12)
  let let33 := (Not let32)
  let let34 := (binrel% LT.lt let31 let12)
  let let35 := (binrel% HAdd.hAdd x3x5fplus let28)
  let let36 := (binrel% HMul.hMul let10 x2x5fplus)
  let let37 := (binrel% HMul.hMul let10 x5x5fplus)
  let let38 := (binrel% HMul.hMul let13 x9x5fminus)
  let let39 := (binrel% HMul.hMul let12 x9x5fplus)
  let let40 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x2x5fminus let35))))))
  let let41 := (binrel% GE.ge let40 let9)
  let let42 := (Not let41)
  let let43 := (binrel% LT.lt let40 let9)
  let let44 := (Int.ofNat 4)
  let let45 := (binrel% HDiv.hDiv let22 let44)
  let let46 := (Neg.neg let45)
  let let47 := (binrel% LT.lt let46 let1)
  let let48 := (binrel% HMul.hMul let10 x9x5fminus)
  let let49 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let14 let35))))
  let let50 := (binrel% GE.ge let49 let1)
  let let51 := (Not let50)
  let let52 := (binrel% LT.lt let49 let1)
  let let53 := (Int.ofNat 5)
  let let54 := (binrel% HDiv.hDiv let53 let44)
  let let55 := (binrel% HMul.hMul let54 let1)
  let let56 := (binrel% HDiv.hDiv let9 let12)
  let let57 := (binrel% HMul.hMul let56 let10)
  let let58 := (binrel% HMul.hMul let46 let9)
  let let59 := (binrel% HMul.hMul let56 let9)
  let let60 := (Int.ofNat 21)
  let let61 := (binrel% HDiv.hDiv let60 let4)
  let let62 := (binrel% HMul.hMul let61 let9)
  let let63 := (binrel% HMul.hMul let23 let9)
  let let64 := (binrel% HMul.hMul let24 let1)
  let let65 := (binrel% HMul.hMul let23 let1)
  let let66 := (binrel% HMul.hMul let7 let1)
  let let67 := (binrel% HMul.hMul let2 let10)
  let let68 := (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let57 let55)))))))))
  let let69 := (binrel% HMul.hMul let54 let49)
  let let70 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 x5x5fminus)))
  let let71 := (binrel% HMul.hMul let56 let70)
  let let72 := (binrel% HMul.hMul let13 x3x5fminus)
  let let73 := (binrel% HMul.hMul let12 x3x5fplus)
  let let74 := (binrel% HMul.hMul let10 x1x5fplus)
  let let75 := (binrel% HMul.hMul let10 x5x5fminus)
  let let76 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let73 let72)))))))
  let let77 := (binrel% HMul.hMul let46 let76)
  let let78 := (binrel% HMul.hMul let56 let40)
  let let79 := (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x1x5fplus) (binrel% HMul.hMul let12 x1x5fminus))
  let let80 := (binrel% HMul.hMul let10 x8x5fplus)
  let let81 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 let79))))))
  let let82 := (binrel% HMul.hMul let61 let81)
  let let83 := (binrel% HMul.hMul let23 let31)
  let let84 := (binrel% HMul.hMul let10 x1x5fminus)
  let let85 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let84 let27))))))
  let let86 := (binrel% HMul.hMul let24 let85)
  let let87 := (binrel% HMul.hMul let23 let18)
  let let88 := (binrel% HMul.hMul let10 x3x5fplus)
  let let89 := (binrel% HAdd.hAdd let88 x3x5fminus)
  let let90 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let84 let89))))))
  let let91 := (binrel% HMul.hMul let7 let90)
  let let92 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let35))))
  let let93 := (binrel% HMul.hMul let2 let92)
  let let94 := (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let71 let69)))))))))
  let let95 := (binrel% GE.ge let94 let68)
  let let96 := (Not let95)
  let let97 := (binrel% LT.lt let94 let68)
  let let98 := (Rat.ofInt let92)
  let let99 := (Not let33)
  let let100 := (Eq let32 let99)
  let let101 := (Eq let99 let32)
  let let102 := (Eq let32 let32)
  let let103 := (binrel% LE.le let40 let1)
  let let104 := (binrel% GE.ge let81 let12)
  let let105 := (Not let104)
  let let106 := (Not let105)
  let let107 := (Eq let106 let104)
  let let108 := (Not let20)
  let let109 := (Eq let108 let19)
  let let110 := (Eq let104 let104)
  let let111 := (binrel% LE.le let49 let10)
  let let112 := (Eq let19 let19)
  let let113 := (binrel% HAdd.hAdd let74 x1x5fminus)
  let let114 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 let113))))))
  let let115 := (Not let42)
  let let116 := (Eq let115 let41)
  let let117 := (binrel% GE.ge let70 let1)
  let let118 := (Not let117)
  let let119 := (binrel% LT.lt let70 let1)
  let let120 := (binrel% GE.ge let92 let1)
  let let121 := (Not let120)
  let let122 := (Not let121)
  let let123 := (Eq let122 let120)
  let let124 := (Eq let120 let120)
  let let125 := (binrel% LT.lt let81 let12)
  let let126 := (binrel% LE.le let31 let9)
  let let127 := (binrel% LT.lt let92 let1)
  let let128 := (binrel% HAdd.hAdd x2x5fplus let30)
  let let129 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 let128))))
  let let130 := (binrel% LE.le let18 let1)
  let let131 := (Rat.ofInt 0)
  let let132 := (Neg.neg let56)
  let let133 := (Neg.neg let2)
  let let134 := (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let132 let131)))))))))
  let let135 := (Eq let104 let106)
  let let136 := (Not True)
  let let137 := (Eq let19 let108)
  let let138 := (binrel% HAdd.hAdd let15 let14)
  let let139 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 let138))))))
  let let140 := (binrel% LE.le let70 let10)
  let let141 := (Not let51)
  let let142 := (Eq let50 let141)
  let let143 := (Eq let141 let50)
  let let144 := (Eq let41 let115)
  let let145 := (binrel% GT.gt let56 let1)
  let let146 := (Eq let120 let122)
  let let147 := (binrel% LE.le let81 let9)
  let let148 := (binrel% HMul.hMul let46 x1x5fminus)
  let let149 := (binrel% HMul.hMul let45 x1x5fplus)
  let let150 := (binrel% HMul.hMul let24 x6x5fminus)
  let let151 := (binrel% HMul.hMul let23 x6x5fplus)
  let let152 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x8x5fminus) (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x7x5fplus) (binrel% HMul.hMul let23 x7x5fminus))))))))
  let let153 := (binrel% HAdd.hAdd x1x5fplus let84)
  let let154 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let153))
  let let155 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd x3x5fminus let154))))
  let let156 := (binrel% GT.gt let54 let1)
  let let157 := (Eq let117 let117)
  let let158 := (Not let118)
  let let159 := (Eq let158 let117)
  let let160 := (Eq let41 let41)
  let let161 := (binrel% GE.ge let131 let131)
  let let162 := (Neg.neg let54)
  let let163 := (binrel% HDiv.hDiv let53 let12)
  let let164 := (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let163) x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x3x5fplus) (binrel% HMul.hMul let162 x3x5fminus))))))
  let let165 := (Eq let117 let158)
  let let166 := (binrel% HAdd.hAdd let36 x2x5fminus)
  let let167 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 let166))))))
  let let168 := (binrel% HMul.hMul let56 x5x5fminus)
  let let169 := (binrel% HMul.hMul let132 x5x5fplus)
  let let170 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let169 let168)))
  let let171 := (Eq let50 let50)
  let let172 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let27))))))))
  let let173 := (binrel% GT.gt let61 let1)
  let let174 := (binrel% HDiv.hDiv let22 let12)
  let let175 := (binrel% HAdd.hAdd (binrel% HMul.hMul let46 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let46 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x5x5fminus) (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let174) x3x5fplus) (binrel% HMul.hMul let174 x3x5fminus))))))))
  let let176 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd (binrel% HMul.hMul let132 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x3x5fplus) (binrel% HMul.hMul let132 x3x5fminus))))))))
  let let177 := (binrel% HDiv.hDiv let60 let44)
  let let178 := (Neg.neg let61)
  let let179 := (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let178 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let178 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let178 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let177) x1x5fplus) (binrel% HMul.hMul let177 x1x5fminus))))))))
  let let180 := (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x0x5fplus) (binrel% HMul.hMul let23 x0x5fminus))))))))))
  let let181 := (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x0x5fplus) (binrel% HMul.hMul let24 x0x5fminus))))))))
  let let182 := (binrel% HDiv.hDiv let5 let44)
  let let183 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let182) x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let182 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x3x5fplus) (binrel% HMul.hMul let7 x3x5fminus))))))))
  let let184 := (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let183 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let179 (binrel% HAdd.hAdd let176 (binrel% HAdd.hAdd let175 (binrel% HAdd.hAdd let170 let164)))))))))
  let let185 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 let138))))
  let let186 := (binrel% LE.le let92 let10)
  let let187 := (Not let186)
  let let188 := (binrel% GT.gt let92 let10)
  let let189 := (Eq let188 let187)
  let let190 := (binrel% HMul.hMul let10 x4x5fplus)
  let let191 := (binrel% LE.le let172 let9)
  let let192 := (binrel% LE.le let139 let1)
  let let193 := (binrel% LE.le let167 let1)
  let let194 := (binrel% HMul.hMul let10 x4x5fminus)
  let let195 := (binrel% LE.le let185 let10)
  let let196 := (binrel% LE.le let129 let10)
  let let197 := (binrel% GE.ge let155 let1)
  let let198 := (binrel% GE.ge let114 let9)
  let let199 := (binrel% GE.ge let85 let1)
  let let200 := (binrel% GE.ge let90 let1)
  let let201 := (binrel% GE.ge let76 let9)
  let let202 := (Not let199)
  let let203 := (Not let201)
  let let204 := (Not let200)
  let let205 := (Or let50 (Or let117 (Or let203 (Or let41 (Or let104 (Or let32 (Or let202 (Or let19 (Or let204 let120)))))))))
  let let206 := (Or let141 (Or let158 (Or let203 (Or let115 (Or let106 (Or let99 (Or let202 (Or let108 (Or let204 let122)))))))))
  let let207 := (binrel% LT.lt let69 let55)
  let let208 := (And let156 let52)
  let let209 := (binrel% LE.le let71 let57)
  let let210 := (And let145 let140)
  let let211 := (binrel% LE.le let77 let58)
  let let212 := (And let47 let201)
  let let213 := (binrel% LT.lt let78 let59)
  let let214 := (And let145 let43)
  let let215 := (binrel% LE.le let82 let62)
  let let216 := (And let173 let147)
  let let217 := (binrel% LE.le let83 let63)
  let let218 := (And let26 let126)
  let let219 := (binrel% LE.le let86 let64)
  let let220 := (And let25 let199)
  let let221 := (binrel% LE.le let87 let65)
  let let222 := (And let26 let130)
  let let223 := (binrel% LE.le let91 let66)
  let let224 := (And let8 let200)
  let let225 := (binrel% LE.le let93 let67)
  let let226 := (And let3 let186)
(Eq let3 True) → (Eq let8 True) → (Eq let21 let20) → (Eq let25 True) → (Eq let26 True) → (Eq let34 let33) → (Eq let43 let42) → (Eq let47 True) → (Eq let52 let51) → (Eq let97 let96) → (Eq let93 let98) → (Eq let59 let56) → (Eq let101 let100) → let101 → (Eq let102 True) → (Eq let103 let42) → let107 → let109 → (Eq let110 True) → (Eq let111 let51) → (Eq let112 True) → (Eq let114 let76) → let116 → (Eq let119 let118) → (Eq let62 let61) → let123 → (Eq let124 True) → (Eq let125 let105) → (Eq let126 let33) → (Eq let127 let121) → (Eq let129 let92) → (Eq let130 let20) → (Eq let134 let131) → (Eq let107 let135) → (Eq let136 False) → (Eq let109 let137) → (Eq let139 let18) → (Eq let140 let118) → (Eq let143 let142) → (Eq let116 let144) → (Eq let145 True) → (Eq let63 let23) → (Eq let123 let146) → (Eq let147 let105) → (Eq let87 let152) → (Eq let155 let90) → (Eq let65 let131) → (Eq let156 True) → (Eq let55 let131) → (Eq let58 let46) → (Eq let157 True) → (Eq let66 let131) → let159 → (Eq let160 True) → (Eq let67 let133) → (Eq let161 True) → (Eq let69 let164) → (Eq let159 let165) → (Eq let167 let40) → (Eq let71 let170) → (Eq let171 True) → (Eq let172 let31) → let143 → (Eq let57 let132) → (Eq let64 let131) → (Eq let173 True) → (Eq let184 let131) → (Eq let77 let175) → (Eq let78 let176) → (Eq let82 let179) → (Eq let83 let180) → (Eq let185 let49) → (Eq let86 let181) → (Eq let186 let121) → let189 → (Eq let91 let183) → (binrel% GE.ge x9x5fplus let1) → (binrel% GE.ge x9x5fminus let1) → (binrel% GE.ge x8x5fplus let1) → (binrel% GE.ge x8x5fminus let1) → (binrel% GE.ge x6x5fplus let1) → (binrel% GE.ge x6x5fminus let1) → (binrel% GE.ge x5x5fplus let1) → (binrel% GE.ge x5x5fminus let1) → (binrel% GE.ge x4x5fplus let1) → (binrel% GE.ge x4x5fminus let1) → (binrel% GE.ge x2x5fplus let1) → (binrel% GE.ge x2x5fminus let1) → (binrel% GE.ge x1x5fplus let1) → (binrel% GE.ge x1x5fminus let1) → (binrel% GE.ge x7x5fplus let1) → (binrel% GE.ge x7x5fminus let1) → (binrel% GE.ge x3x5fplus let1) → (binrel% GE.ge x3x5fminus let1) → (binrel% GE.ge x0x5fplus let1) → (binrel% GE.ge x0x5fminus let1) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd x4x5fminus let154)))))))))) let10) → let191 → let192 → let193 → let147 → (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x2x5fminus) let113)))))) let1) → (binrel% LE.le (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x4x5fminus) let153)))) let1) → (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let194 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd x3x5fminus let128)))) let9) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let10 x0x5fminus)))))) let1) → let195 → (binrel% LE.le (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 let154)) let9) → (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let190 x4x5fminus))))) let9) → let196 → let140 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x8x5fminus) (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let194 let89)))))))) let9) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x3x5fminus) (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x1x5fminus let27)))))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let194 let166)))))) let1) → let197 → let198 → let199 → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 let89)))))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd x3x5fminus let153)))))) let9) → (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x7x5fminus let138)))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let194 let79)))) let1) → (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd x3x5fminus let27)))) let1) → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (binrel% GT.gt let2 let1)
  let let4 := (Int.ofNat 8)
  let let5 := (Int.ofNat 17)
  let let6 := (binrel% HDiv.hDiv let5 let4)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% LT.lt let7 let1)
  let let9 := (Int.ofNat 1)
  let let10 := (Neg.neg let9)
  let let11 := (binrel% HMul.hMul let10 x7x5fplus)
  let let12 := (Int.ofNat 2)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HMul.hMul let13 x1x5fminus)
  let let15 := (binrel% HMul.hMul let12 x1x5fplus)
  let let16 := (binrel% HMul.hMul let10 x6x5fminus)
  let let17 := (binrel% HMul.hMul let10 x8x5fminus)
  let let18 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let14 (binrel% HAdd.hAdd let11 x7x5fminus)))))))
  let let19 := (binrel% GE.ge let18 let9)
  let let20 := (Not let19)
  let let21 := (binrel% LT.lt let18 let9)
  let let22 := (Int.ofNat 13)
  let let23 := (binrel% HDiv.hDiv let22 let4)
  let let24 := (Neg.neg let23)
  let let25 := (binrel% LT.lt let24 let1)
  let let26 := (binrel% GT.gt let23 let1)
  let let27 := (binrel% HAdd.hAdd (binrel% HMul.hMul let10 x0x5fplus) x0x5fminus)
  let let28 := (binrel% HMul.hMul let10 x3x5fminus)
  let let29 := (binrel% HMul.hMul let10 x7x5fminus)
  let let30 := (binrel% HMul.hMul let10 x2x5fminus)
  let let31 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 let27))))))))
  let let32 := (binrel% GE.ge let31 let12)
  let let33 := (Not let32)
  let let34 := (binrel% LT.lt let31 let12)
  let let35 := (binrel% HAdd.hAdd x3x5fplus let28)
  let let36 := (binrel% HMul.hMul let10 x2x5fplus)
  let let37 := (binrel% HMul.hMul let10 x5x5fplus)
  let let38 := (binrel% HMul.hMul let13 x9x5fminus)
  let let39 := (binrel% HMul.hMul let12 x9x5fplus)
  let let40 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd x2x5fminus let35))))))
  let let41 := (binrel% GE.ge let40 let9)
  let let42 := (Not let41)
  let let43 := (binrel% LT.lt let40 let9)
  let let44 := (Int.ofNat 4)
  let let45 := (binrel% HDiv.hDiv let22 let44)
  let let46 := (Neg.neg let45)
  let let47 := (binrel% LT.lt let46 let1)
  let let48 := (binrel% HMul.hMul let10 x9x5fminus)
  let let49 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd let14 let35))))
  let let50 := (binrel% GE.ge let49 let1)
  let let51 := (Not let50)
  let let52 := (binrel% LT.lt let49 let1)
  let let53 := (Int.ofNat 5)
  let let54 := (binrel% HDiv.hDiv let53 let44)
  let let55 := (binrel% HMul.hMul let54 let1)
  let let56 := (binrel% HDiv.hDiv let9 let12)
  let let57 := (binrel% HMul.hMul let56 let10)
  let let58 := (binrel% HMul.hMul let46 let9)
  let let59 := (binrel% HMul.hMul let56 let9)
  let let60 := (Int.ofNat 21)
  let let61 := (binrel% HDiv.hDiv let60 let4)
  let let62 := (binrel% HMul.hMul let61 let9)
  let let63 := (binrel% HMul.hMul let23 let9)
  let let64 := (binrel% HMul.hMul let24 let1)
  let let65 := (binrel% HMul.hMul let23 let1)
  let let66 := (binrel% HMul.hMul let7 let1)
  let let67 := (binrel% HMul.hMul let2 let10)
  let let68 := (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let62 (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let58 (binrel% HAdd.hAdd let57 let55)))))))))
  let let69 := (binrel% HMul.hMul let54 let49)
  let let70 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 x5x5fminus)))
  let let71 := (binrel% HMul.hMul let56 let70)
  let let72 := (binrel% HMul.hMul let13 x3x5fminus)
  let let73 := (binrel% HMul.hMul let12 x3x5fplus)
  let let74 := (binrel% HMul.hMul let10 x1x5fplus)
  let let75 := (binrel% HMul.hMul let10 x5x5fminus)
  let let76 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x1x5fminus (binrel% HAdd.hAdd let73 let72)))))))
  let let77 := (binrel% HMul.hMul let46 let76)
  let let78 := (binrel% HMul.hMul let56 let40)
  let let79 := (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x1x5fplus) (binrel% HMul.hMul let12 x1x5fminus))
  let let80 := (binrel% HMul.hMul let10 x8x5fplus)
  let let81 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 let79))))))
  let let82 := (binrel% HMul.hMul let61 let81)
  let let83 := (binrel% HMul.hMul let23 let31)
  let let84 := (binrel% HMul.hMul let10 x1x5fminus)
  let let85 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let84 let27))))))
  let let86 := (binrel% HMul.hMul let24 let85)
  let let87 := (binrel% HMul.hMul let23 let18)
  let let88 := (binrel% HMul.hMul let10 x3x5fplus)
  let let89 := (binrel% HAdd.hAdd let88 x3x5fminus)
  let let90 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd x1x5fplus (binrel% HAdd.hAdd let84 let89))))))
  let let91 := (binrel% HMul.hMul let7 let90)
  let let92 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let35))))
  let let93 := (binrel% HMul.hMul let2 let92)
  let let94 := (binrel% HAdd.hAdd let93 (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let87 (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let71 let69)))))))))
  let let95 := (binrel% GE.ge let94 let68)
  let let96 := (Not let95)
  let let97 := (binrel% LT.lt let94 let68)
  let let98 := (Rat.ofInt let92)
  let let99 := (Not let33)
  let let100 := (Eq let32 let99)
  let let101 := (Eq let99 let32)
  let let102 := (Eq let32 let32)
  let let103 := (binrel% LE.le let40 let1)
  let let104 := (binrel% GE.ge let81 let12)
  let let105 := (Not let104)
  let let106 := (Not let105)
  let let107 := (Eq let106 let104)
  let let108 := (Not let20)
  let let109 := (Eq let108 let19)
  let let110 := (Eq let104 let104)
  let let111 := (binrel% LE.le let49 let10)
  let let112 := (Eq let19 let19)
  let let113 := (binrel% HAdd.hAdd let74 x1x5fminus)
  let let114 := (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 let113))))))
  let let115 := (Not let42)
  let let116 := (Eq let115 let41)
  let let117 := (binrel% GE.ge let70 let1)
  let let118 := (Not let117)
  let let119 := (binrel% LT.lt let70 let1)
  let let120 := (binrel% GE.ge let92 let1)
  let let121 := (Not let120)
  let let122 := (Not let121)
  let let123 := (Eq let122 let120)
  let let124 := (Eq let120 let120)
  let let125 := (binrel% LT.lt let81 let12)
  let let126 := (binrel% LE.le let31 let9)
  let let127 := (binrel% LT.lt let92 let1)
  let let128 := (binrel% HAdd.hAdd x2x5fplus let30)
  let let129 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 let128))))
  let let130 := (binrel% LE.le let18 let1)
  let let131 := (Rat.ofInt 0)
  let let132 := (Neg.neg let56)
  let let133 := (Neg.neg let2)
  let let134 := (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let23 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let132 let131)))))))))
  let let135 := (Eq let104 let106)
  let let136 := (Not True)
  let let137 := (Eq let19 let108)
  let let138 := (binrel% HAdd.hAdd let15 let14)
  let let139 := (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x7x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 let138))))))
  let let140 := (binrel% LE.le let70 let10)
  let let141 := (Not let51)
  let let142 := (Eq let50 let141)
  let let143 := (Eq let141 let50)
  let let144 := (Eq let41 let115)
  let let145 := (binrel% GT.gt let56 let1)
  let let146 := (Eq let120 let122)
  let let147 := (binrel% LE.le let81 let9)
  let let148 := (binrel% HMul.hMul let46 x1x5fminus)
  let let149 := (binrel% HMul.hMul let45 x1x5fplus)
  let let150 := (binrel% HMul.hMul let24 x6x5fminus)
  let let151 := (binrel% HMul.hMul let23 x6x5fplus)
  let let152 := (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x8x5fminus) (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x7x5fplus) (binrel% HMul.hMul let23 x7x5fminus))))))))
  let let153 := (binrel% HAdd.hAdd x1x5fplus let84)
  let let154 := (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let153))
  let let155 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd x3x5fminus let154))))
  let let156 := (binrel% GT.gt let54 let1)
  let let157 := (Eq let117 let117)
  let let158 := (Not let118)
  let let159 := (Eq let158 let117)
  let let160 := (Eq let41 let41)
  let let161 := (binrel% GE.ge let131 let131)
  let let162 := (Neg.neg let54)
  let let163 := (binrel% HDiv.hDiv let53 let12)
  let let164 := (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let162 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let163 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let163) x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 x3x5fplus) (binrel% HMul.hMul let162 x3x5fminus))))))
  let let165 := (Eq let117 let158)
  let let166 := (binrel% HAdd.hAdd let36 x2x5fminus)
  let let167 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 let166))))))
  let let168 := (binrel% HMul.hMul let56 x5x5fminus)
  let let169 := (binrel% HMul.hMul let132 x5x5fplus)
  let let170 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let169 let168)))
  let let171 := (Eq let50 let50)
  let let172 := (binrel% HAdd.hAdd x7x5fplus (binrel% HAdd.hAdd let29 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd x2x5fplus (binrel% HAdd.hAdd let30 let27))))))))
  let let173 := (binrel% GT.gt let61 let1)
  let let174 := (binrel% HDiv.hDiv let22 let12)
  let let175 := (binrel% HAdd.hAdd (binrel% HMul.hMul let46 x6x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x6x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let46 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let45 x5x5fminus) (binrel% HAdd.hAdd let149 (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let174) x3x5fplus) (binrel% HMul.hMul let174 x3x5fminus))))))))
  let let176 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd (binrel% HMul.hMul let132 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let56 x3x5fplus) (binrel% HMul.hMul let132 x3x5fminus))))))))
  let let177 := (binrel% HDiv.hDiv let60 let44)
  let let178 := (Neg.neg let61)
  let let179 := (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let178 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let178 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x8x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let61 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let178 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let177) x1x5fplus) (binrel% HMul.hMul let177 x1x5fminus))))))))
  let let180 := (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let150 (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x7x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x7x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x3x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x0x5fplus) (binrel% HMul.hMul let23 x0x5fminus))))))))))
  let let181 := (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x5x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x5x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let24 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let23 x0x5fplus) (binrel% HMul.hMul let24 x0x5fminus))))))))
  let let182 := (binrel% HDiv.hDiv let5 let44)
  let let183 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg let182) x9x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let182 x9x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x2x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let7 x1x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x1x5fminus) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 x3x5fplus) (binrel% HMul.hMul let7 x3x5fminus))))))))
  let let184 := (binrel% HAdd.hAdd let98 (binrel% HAdd.hAdd let183 (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let180 (binrel% HAdd.hAdd let179 (binrel% HAdd.hAdd let176 (binrel% HAdd.hAdd let175 (binrel% HAdd.hAdd let170 let164)))))))))
  let let185 := (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 let138))))
  let let186 := (binrel% LE.le let92 let10)
  let let187 := (Not let186)
  let let188 := (binrel% GT.gt let92 let10)
  let let189 := (Eq let188 let187)
  let let190 := (binrel% HMul.hMul let10 x4x5fplus)
  let let191 := (binrel% LE.le let172 let9)
  let let192 := (binrel% LE.le let139 let1)
  let let193 := (binrel% LE.le let167 let1)
  let let194 := (binrel% HMul.hMul let10 x4x5fminus)
  let let195 := (binrel% LE.le let185 let10)
  let let196 := (binrel% LE.le let129 let10)
  let let197 := (binrel% GE.ge let155 let1)
  let let198 := (binrel% GE.ge let114 let9)
  let let199 := (binrel% GE.ge let85 let1)
  let let200 := (binrel% GE.ge let90 let1)
  let let201 := (binrel% GE.ge let76 let9)
  let let202 := (Not let199)
  let let203 := (Not let201)
  let let204 := (Not let200)
  let let205 := (Or let50 (Or let117 (Or let203 (Or let41 (Or let104 (Or let32 (Or let202 (Or let19 (Or let204 let120)))))))))
  let let206 := (Or let141 (Or let158 (Or let203 (Or let115 (Or let106 (Or let99 (Or let202 (Or let108 (Or let204 let122)))))))))
  let let207 := (binrel% LT.lt let69 let55)
  let let208 := (And let156 let52)
  let let209 := (binrel% LE.le let71 let57)
  let let210 := (And let145 let140)
  let let211 := (binrel% LE.le let77 let58)
  let let212 := (And let47 let201)
  let let213 := (binrel% LT.lt let78 let59)
  let let214 := (And let145 let43)
  let let215 := (binrel% LE.le let82 let62)
  let let216 := (And let173 let147)
  let let217 := (binrel% LE.le let83 let63)
  let let218 := (And let26 let126)
  let let219 := (binrel% LE.le let86 let64)
  let let220 := (And let25 let199)
  let let221 := (binrel% LE.le let87 let65)
  let let222 := (And let26 let130)
  let let223 := (binrel% LE.le let91 let66)
  let let224 := (And let8 let200)
  let let225 := (binrel% LE.le let93 let67)
  let let226 := (And let3 let186)
fun lean_r0 : (Eq let3 True) => -- EVALUATE
fun lean_r1 : (Eq let8 True) => -- EVALUATE
fun lean_r2 : (Eq let21 let20) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let25 True) => -- EVALUATE
fun lean_r4 : (Eq let26 True) => -- EVALUATE
fun lean_r5 : (Eq let34 let33) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let43 let42) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let47 True) => -- EVALUATE
fun lean_r8 : (Eq let52 let51) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let97 let96) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let93 let98) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let59 let56) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let101 let100) => -- THEORY_REWRITE_BOOL
fun lean_r13 : let101 => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let102 True) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let103 let42) => -- THEORY_REWRITE_ARITH
fun lean_r16 : let107 => -- THEORY_REWRITE_BOOL
fun lean_r17 : let109 => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let110 True) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let111 let51) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let112 True) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq let114 let76) => -- THEORY_REWRITE_ARITH
fun lean_r22 : let116 => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let119 let118) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let62 let61) => -- THEORY_REWRITE_ARITH
fun lean_r25 : let123 => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq let124 True) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let125 let105) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let126 let33) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let127 let121) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let129 let92) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let130 let20) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let134 let131) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let107 let135) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let136 False) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let109 let137) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let139 let18) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let140 let118) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let143 let142) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq let116 let144) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let145 True) => -- EVALUATE
fun lean_r41 : (Eq let63 let23) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let123 let146) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let147 let105) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let87 let152) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let155 let90) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let65 let131) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let156 True) => -- EVALUATE
fun lean_r48 : (Eq let55 let131) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let58 let46) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let157 True) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq let66 let131) => -- THEORY_REWRITE_ARITH
fun lean_r52 : let159 => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let160 True) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let67 let133) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let161 True) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let69 let164) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let159 let165) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq let167 let40) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let71 let170) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let171 True) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq let172 let31) => -- THEORY_REWRITE_ARITH
fun lean_r62 : let143 => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let57 let132) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let64 let131) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let173 True) => -- EVALUATE
fun lean_r66 : (Eq let184 let131) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let77 let175) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let78 let176) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let82 let179) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let83 let180) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let185 let49) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let86 let181) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let186 let121) => -- THEORY_REWRITE_ARITH
fun lean_r74 : let189 => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let91 let183) => -- THEORY_REWRITE_ARITH
fun lean_a76 : (binrel% GE.ge x9x5fplus let1) =>
fun lean_a77 : (binrel% GE.ge x9x5fminus let1) =>
fun lean_a78 : (binrel% GE.ge x8x5fplus let1) =>
fun lean_a79 : (binrel% GE.ge x8x5fminus let1) =>
fun lean_a80 : (binrel% GE.ge x6x5fplus let1) =>
fun lean_a81 : (binrel% GE.ge x6x5fminus let1) =>
fun lean_a82 : (binrel% GE.ge x5x5fplus let1) =>
fun lean_a83 : (binrel% GE.ge x5x5fminus let1) =>
fun lean_a84 : (binrel% GE.ge x4x5fplus let1) =>
fun lean_a85 : (binrel% GE.ge x4x5fminus let1) =>
fun lean_a86 : (binrel% GE.ge x2x5fplus let1) =>
fun lean_a87 : (binrel% GE.ge x2x5fminus let1) =>
fun lean_a88 : (binrel% GE.ge x1x5fplus let1) =>
fun lean_a89 : (binrel% GE.ge x1x5fminus let1) =>
fun lean_a90 : (binrel% GE.ge x7x5fplus let1) =>
fun lean_a91 : (binrel% GE.ge x7x5fminus let1) =>
fun lean_a92 : (binrel% GE.ge x3x5fplus let1) =>
fun lean_a93 : (binrel% GE.ge x3x5fminus let1) =>
fun lean_a94 : (binrel% GE.ge x0x5fplus let1) =>
fun lean_a95 : (binrel% GE.ge x0x5fminus let1) =>
fun lean_a96 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd x8x5fminus (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd x4x5fminus let154)))))))))) let10) =>
fun lean_a97 : let191 =>
fun lean_a98 : let192 =>
fun lean_a99 : let193 =>
fun lean_a100 : let147 =>
fun lean_a101 : (binrel% LE.le (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x3x5fplus (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x2x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x2x5fminus) let113)))))) let1) =>
fun lean_a102 : (binrel% LE.le (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x4x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x4x5fminus) let153)))) let1) =>
fun lean_a103 : (binrel% LE.le (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let194 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd x3x5fminus let128)))) let9) =>
fun lean_a104 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd x5x5fminus (binrel% HAdd.hAdd x0x5fplus (binrel% HMul.hMul let10 x0x5fminus)))))) let1) =>
fun lean_a105 : let195 =>
fun lean_a106 : (binrel% LE.le (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd let38 let154)) let9) =>
fun lean_a107 : (binrel% LE.le (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let190 x4x5fminus))))) let9) =>
fun lean_a108 : let196 =>
fun lean_a109 : let140 =>
fun lean_a110 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x8x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x8x5fminus) (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let194 let89)))))))) let9) =>
fun lean_a111 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd x4x5fminus (binrel% HAdd.hAdd (binrel% HMul.hMul let13 x3x5fplus) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 x3x5fminus) (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd x1x5fminus let27)))))))) let1) =>
fun lean_a112 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let194 let166)))))) let1) =>
fun lean_a113 : let197 =>
fun lean_a114 : let198 =>
fun lean_a115 : let199 =>
fun lean_a116 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x6x5fplus (binrel% HAdd.hAdd let16 let89)))))) let1) =>
fun lean_a117 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd x3x5fminus let153)))))) let9) =>
fun lean_a118 : (binrel% GE.ge (binrel% HAdd.hAdd x9x5fplus (binrel% HAdd.hAdd let48 (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd x7x5fminus let138)))) let1) =>
fun lean_a119 : (binrel% GE.ge (binrel% HAdd.hAdd x5x5fplus (binrel% HAdd.hAdd let75 (binrel% HAdd.hAdd x4x5fplus (binrel% HAdd.hAdd let194 let79)))) let1) =>
fun lean_a120 : (binrel% GE.ge (binrel% HAdd.hAdd x8x5fplus (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let88 (binrel% HAdd.hAdd x3x5fminus let27)))) let1) => by
have lean_s0 : (Or let141 (Or let158 (Or let203 (Or let115 (Or let106 (Or let99 (Or let202 (Or let108 (Or let204 (Or let122 False)))))))))) :=
  (scope (fun lean_a121 : let51 =>
    (scope (fun lean_a122 : let118 =>
      (scope (fun lean_a123 : let201 =>
        (scope (fun lean_a124 : let42 =>
          (scope (fun lean_a125 : let105 =>
            (scope (fun lean_a126 : let33 =>
              (scope (fun lean_a127 : let199 =>
                (scope (fun lean_a128 : let20 =>
                  (scope (fun lean_a129 : let200 =>
                    (scope (fun lean_a130 : let121 =>
                      let lean_s0 := by timed flipCongrArg lean_r30 [LE.le]
                      have lean_s1 : (Eq let10 let10) := by timed rfl
                      have lean_s2 : (Eq let196 let186) := by timed congr lean_s0 lean_s1
                      have lean_s3 : (Eq let196 let121) := by timed Eq.trans lean_s2 lean_r73
                      have lean_s4 : let121 := by timed eqResolve lean_a108 lean_s3
                      have lean_s5 : (Eq let121 let127) := by timed Eq.symm lean_r29
                      have lean_s6 : let127 := by timed eqResolve lean_s4 lean_s5
                      have lean_s7 : let186 := by intTightUb lean_s6
                      have lean_s8 : (Or let187 False) :=
                        (scope (fun lean_a130 : let186 =>
                          have lean_s8 : let3 := by timed trueElim lean_r0
                          have lean_s9 : let226 := by timed And.intro lean_s8 lean_a130
                          have lean_s10 : (Implies let226 let225) := by arithMulPos [let92, let10, let2], 1
                          have lean_s11 : let225 := by timed modusPonens lean_s9 lean_s10
                          have lean_s12 : let8 := by timed trueElim lean_r1
                          let lean_s13 := by timed flipCongrArg lean_r45 [GE.ge]
                          have lean_s14 : (Eq let1 let1) := by timed rfl
                          have lean_s15 : (Eq let197 let200) := by timed congr lean_s13 lean_s14
                          have lean_s16 : let200 := by timed eqResolve lean_a113 lean_s15
                          have lean_s17 : let224 := by timed And.intro lean_s12 lean_s16
                          have lean_s18 : (Implies let224 let223) := by arithMulNeg [let90, let1, let7], 3
                          have lean_s19 : let223 := by timed modusPonens lean_s17 lean_s18
                          have lean_s20 : let26 := by timed trueElim lean_r4
                          let lean_s21 := by timed flipCongrArg lean_r36 [LE.le]
                          have lean_s22 : (Eq let192 let130) := by timed congr lean_s21 lean_s14
                          have lean_s23 : (Eq let192 let20) := by timed Eq.trans lean_s22 lean_r31
                          have lean_s24 : let20 := by timed eqResolve lean_a98 lean_s23
                          have lean_s25 : (Eq let20 let21) := by timed Eq.symm lean_r2
                          have lean_s26 : let21 := by timed eqResolve lean_s24 lean_s25
                          have lean_s27 : let130 := by intTightUb lean_s26
                          have lean_s28 : let222 := by timed And.intro lean_s20 lean_s27
                          have lean_s29 : (Implies let222 let221) := by arithMulPos [let18, let1, let23], 1
                          have lean_s30 : let221 := by timed modusPonens lean_s28 lean_s29
                          have lean_s31 : let25 := by timed trueElim lean_r3
                          have lean_s32 : let220 := by timed And.intro lean_s31 lean_a127
                          have lean_s33 : (Implies let220 let219) := by arithMulNeg [let85, let1, let24], 3
                          have lean_s34 : let219 := by timed modusPonens lean_s32 lean_s33
                          let lean_s35 := by timed flipCongrArg lean_r61 [LE.le]
                          have lean_s36 : (Eq let9 let9) := by timed rfl
                          have lean_s37 : (Eq let191 let126) := by timed congr lean_s35 lean_s36
                          have lean_s38 : (Eq let191 let33) := by timed Eq.trans lean_s37 lean_r28
                          have lean_s39 : let33 := by timed eqResolve lean_a97 lean_s38
                          have lean_s40 : (Eq let33 let34) := by timed Eq.symm lean_r5
                          have lean_s41 : let34 := by timed eqResolve lean_s39 lean_s40
                          have lean_s42 : let126 := by intTightUb lean_s41
                          have lean_s43 : let218 := by timed And.intro lean_s20 lean_s42
                          have lean_s44 : (Implies let218 let217) := by arithMulPos [let31, let9, let23], 1
                          have lean_s45 : let217 := by timed modusPonens lean_s43 lean_s44
                          have lean_s46 : let173 := by timed trueElim lean_r65
                          have lean_s47 : let105 := by timed eqResolve lean_a100 lean_r43
                          have lean_s48 : (Eq let105 let125) := by timed Eq.symm lean_r27
                          have lean_s49 : let125 := by timed eqResolve lean_s47 lean_s48
                          have lean_s50 : let147 := by intTightUb lean_s49
                          have lean_s51 : let216 := by timed And.intro lean_s46 lean_s50
                          have lean_s52 : (Implies let216 let215) := by arithMulPos [let81, let9, let61], 1
                          have lean_s53 : let215 := by timed modusPonens lean_s51 lean_s52
                          have lean_s54 : let145 := by timed trueElim lean_r40
                          let lean_s55 := by timed flipCongrArg lean_r58 [LE.le]
                          have lean_s56 : (Eq let193 let103) := by timed congr lean_s55 lean_s14
                          have lean_s57 : (Eq let193 let42) := by timed Eq.trans lean_s56 lean_r15
                          have lean_s58 : let42 := by timed eqResolve lean_a99 lean_s57
                          have lean_s59 : (Eq let42 let43) := by timed Eq.symm lean_r6
                          have lean_s60 : let43 := by timed eqResolve lean_s58 lean_s59
                          have lean_s61 : let214 := by timed And.intro lean_s54 lean_s60
                          have lean_s62 : (Implies let214 let213) := by arithMulPos [let40, let9, let56], 0
                          have lean_s63 : let213 := by timed modusPonens lean_s61 lean_s62
                          have lean_s64 : let47 := by timed trueElim lean_r7
                          let lean_s65 := by timed flipCongrArg lean_r21 [GE.ge]
                          have lean_s66 : (Eq let198 let201) := by timed congr lean_s65 lean_s36
                          have lean_s67 : let201 := by timed eqResolve lean_a114 lean_s66
                          have lean_s68 : let212 := by timed And.intro lean_s64 lean_s67
                          have lean_s69 : (Implies let212 let211) := by arithMulNeg [let76, let9, let46], 3
                          have lean_s70 : let211 := by timed modusPonens lean_s68 lean_s69
                          have lean_s71 : let118 := by timed eqResolve lean_a109 lean_r37
                          have lean_s72 : (Eq let118 let119) := by timed Eq.symm lean_r23
                          have lean_s73 : let119 := by timed eqResolve lean_s71 lean_s72
                          have lean_s74 : let140 := by intTightUb lean_s73
                          have lean_s75 : let210 := by timed And.intro lean_s54 lean_s74
                          have lean_s76 : (Implies let210 let209) := by arithMulPos [let70, let10, let56], 1
                          have lean_s77 : let209 := by timed modusPonens lean_s75 lean_s76
                          have lean_s78 : let156 := by timed trueElim lean_r47
                          let lean_s79 := by timed flipCongrArg lean_r71 [LE.le]
                          have lean_s80 : (Eq let195 let111) := by timed congr lean_s79 lean_s1
                          have lean_s81 : (Eq let195 let51) := by timed Eq.trans lean_s80 lean_r19
                          have lean_s82 : let51 := by timed eqResolve lean_a105 lean_s81
                          have lean_s83 : (Eq let51 let52) := by timed Eq.symm lean_r8
                          have lean_s84 : let52 := by timed eqResolve lean_s82 lean_s83
                          have lean_s85 : let208 := by timed And.intro lean_s78 lean_s84
                          have lean_s86 : (Implies let208 let207) := by arithMulPos [let49, let1, let54], 0
                          have lean_s87 : let207 := by timed modusPonens lean_s85 lean_s86
                          have lean_s88 : let97 := by sumBounds [lean_s11, lean_s19, lean_s30, lean_s34, lean_s45, lean_s53, lean_s63, lean_s70, lean_s77, lean_s87]
                          let lean_s89 := by timed congrHAdd lean_r59 lean_r56
                          let lean_s90 := by timed congrHAdd lean_r67 lean_s89
                          let lean_s91 := by timed congrHAdd lean_r68 lean_s90
                          let lean_s92 := by timed congrHAdd lean_r69 lean_s91
                          let lean_s93 := by timed congrHAdd lean_r70 lean_s92
                          let lean_s94 := by timed congrHAdd lean_r72 lean_s93
                          let lean_s95 := by timed congrHAdd lean_r44 lean_s94
                          let lean_s96 := by timed congrHAdd lean_r75 lean_s95
                          have lean_s97 : (Eq let94 let184) := by timed congrHAdd lean_r10 lean_s96
                          have lean_s98 : (Eq let94 let131) := by timed Eq.trans lean_s97 lean_r66
                          let lean_s99 := by timed flipCongrArg lean_s98 [GE.ge]
                          let lean_s100 := by timed congrHAdd lean_r63 lean_r48
                          let lean_s101 := by timed congrHAdd lean_r49 lean_s100
                          let lean_s102 := by timed congrHAdd lean_r11 lean_s101
                          let lean_s103 := by timed congrHAdd lean_r24 lean_s102
                          let lean_s104 := by timed congrHAdd lean_r41 lean_s103
                          let lean_s105 := by timed congrHAdd lean_r64 lean_s104
                          let lean_s106 := by timed congrHAdd lean_r46 lean_s105
                          let lean_s107 := by timed congrHAdd lean_r51 lean_s106
                          have lean_s108 : (Eq let68 let134) := by timed congrHAdd lean_r54 lean_s107
                          have lean_s109 : (Eq let68 let131) := by timed Eq.trans lean_s108 lean_r32
                          have lean_s110 : (Eq let95 let161) := by timed congr lean_s99 lean_s109
                          have lean_s111 : (Eq let95 True) := by timed Eq.trans lean_s110 lean_r55
                          have lean_s112 : (Eq let96 let136) := by timed flipCongrArg lean_s111 [Not]
                          have lean_s113 : (Eq let96 False) := by timed Eq.trans lean_s112 lean_r34
                          have lean_s114 : (Eq let97 False) := by timed Eq.trans lean_r9 lean_s113
                          show False from by timed eqResolve lean_s88 lean_s114
                        ))
                      have lean_s9 : let187 := by liftOrNToNeg lean_s8
                      have lean_s10 : (Eq let187 let122) := by timed flipCongrArg lean_r73 [Not]
                      have lean_s11 : (Eq let187 let120) := by timed Eq.trans lean_s10 lean_r25
                      have lean_s12 : (Eq let188 let120) := by timed Eq.trans lean_r74 lean_s11
                      have lean_s13 : (Eq let120 let188) := by timed Eq.symm lean_s12
                      have lean_s14 : (Eq let187 let188) := by timed Eq.trans lean_s11 lean_s13
                      have lean_s15 : let188 := by timed eqResolve lean_s9 lean_s14
                      have lean_s16 : (Eq let120 let187) := by timed Eq.symm lean_s11
                      have lean_s17 : let189 := by timed Eq.trans lean_s12 lean_s16
                      have lean_s18 : let187 := by timed eqResolve lean_s15 lean_s17
                      show False from by timed contradiction lean_s7 lean_s18
  ))))))))))))))))))))
have lean_s1 : (Not (And let51 (And let118 (And let201 (And let42 (And let105 (And let33 (And let199 (And let20 (And let200 let121)))))))))) := by liftOrNToNeg lean_s0
have lean_s2 : let206 := by timed flipNotAnd lean_s1 [let51, let118, let201, let42, let105, let33, let199, let20, let200, let121]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let171 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let142 let171) := by timed congr lean_s5 lean_r62
have lean_s7 : (Eq let142 True) := by timed Eq.trans lean_s6 lean_r60
have lean_s8 : (Eq let143 True) := by timed Eq.trans lean_r38 lean_s7
have lean_s9 : let143 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let157 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let165 let157) := by timed congr lean_s12 lean_r52
have lean_s14 : (Eq let165 True) := by timed Eq.trans lean_s13 lean_r50
have lean_s15 : (Eq let159 True) := by timed Eq.trans lean_r57 lean_s14
have lean_s16 : let159 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : (Eq let203 let203) := by timed rfl
let lean_s19 := by timed congr lean_s3 lean_s18
have lean_s20 : let160 := by timed rfl
let lean_s21 := by timed flipCongrArg lean_s20 [Eq]
have lean_s22 : (Eq let144 let160) := by timed congr lean_s21 lean_r22
have lean_s23 : (Eq let144 True) := by timed Eq.trans lean_s22 lean_r53
have lean_s24 : (Eq let116 True) := by timed Eq.trans lean_r39 lean_s23
have lean_s25 : let116 := by timed trueElim lean_s24
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : let110 := by timed rfl
let lean_s28 := by timed flipCongrArg lean_s27 [Eq]
have lean_s29 : (Eq let135 let110) := by timed congr lean_s28 lean_r16
have lean_s30 : (Eq let135 True) := by timed Eq.trans lean_s29 lean_r18
have lean_s31 : (Eq let107 True) := by timed Eq.trans lean_r33 lean_s30
have lean_s32 : let107 := by timed trueElim lean_s31
let lean_s33 := by timed congr lean_s3 lean_s32
have lean_s34 : let102 := by timed rfl
let lean_s35 := by timed flipCongrArg lean_s34 [Eq]
have lean_s36 : (Eq let100 let102) := by timed congr lean_s35 lean_r13
have lean_s37 : (Eq let100 True) := by timed Eq.trans lean_s36 lean_r14
have lean_s38 : (Eq let101 True) := by timed Eq.trans lean_r12 lean_s37
have lean_s39 : let101 := by timed trueElim lean_s38
let lean_s40 := by timed congr lean_s3 lean_s39
have lean_s41 : (Eq let202 let202) := by timed rfl
let lean_s42 := by timed congr lean_s3 lean_s41
have lean_s43 : let112 := by timed rfl
let lean_s44 := by timed flipCongrArg lean_s43 [Eq]
have lean_s45 : (Eq let137 let112) := by timed congr lean_s44 lean_r17
have lean_s46 : (Eq let137 True) := by timed Eq.trans lean_s45 lean_r20
have lean_s47 : (Eq let109 True) := by timed Eq.trans lean_r35 lean_s46
have lean_s48 : let109 := by timed trueElim lean_s47
let lean_s49 := by timed congr lean_s3 lean_s48
have lean_s50 : (Eq let204 let204) := by timed rfl
let lean_s51 := by timed congr lean_s3 lean_s50
have lean_s52 : let124 := by timed rfl
let lean_s53 := by timed flipCongrArg lean_s52 [Eq]
have lean_s54 : (Eq let146 let124) := by timed congr lean_s53 lean_r25
have lean_s55 : (Eq let146 True) := by timed Eq.trans lean_s54 lean_r26
have lean_s56 : (Eq let123 True) := by timed Eq.trans lean_r42 lean_s55
have lean_s57 : let123 := by timed trueElim lean_s56
let lean_s58 := by timed congr lean_s51 lean_s57
let lean_s59 := by timed congr lean_s49 lean_s58
let lean_s60 := by timed congr lean_s42 lean_s59
let lean_s61 := by timed congr lean_s40 lean_s60
let lean_s62 := by timed congr lean_s33 lean_s61
let lean_s63 := by timed congr lean_s26 lean_s62
let lean_s64 := by timed congr lean_s19 lean_s63
let lean_s65 := by timed congr lean_s17 lean_s64
have lean_s66 : (Eq let206 let205) := by timed congr lean_s10 lean_s65
have lean_s67 : let205 := by timed eqResolve lean_s2 lean_s66
have lean_s68 : (Or let32 (Or let19 (Or let41 (Or let104 (Or let50 (Or let120 (Or let117 (Or let204 (Or let203 let202))))))))) := by permutateOr lean_s67, [5, 7, 3, 4, 0, 9, 1, 8, 2, 6], (- 1)
let lean_s69 := by R2 lean_s68, lean_a115, let199, [(- 1), 0]
let lean_s70 := by timed flipCongrArg lean_r21 [GE.ge]
have lean_s71 : (Eq let9 let9) := by timed rfl
have lean_s72 : (Eq let198 let201) := by timed congr lean_s70 lean_s71
have lean_s73 : let201 := by timed eqResolve lean_a114 lean_s72
let lean_s74 := by R2 lean_s69, lean_s73, let201, [(- 1), 0]
let lean_s75 := by timed flipCongrArg lean_r45 [GE.ge]
have lean_s76 : (Eq let1 let1) := by timed rfl
have lean_s77 : (Eq let197 let200) := by timed congr lean_s75 lean_s76
have lean_s78 : let200 := by timed eqResolve lean_a113 lean_s77
let lean_s79 := by R2 lean_s74, lean_s78, let200, [(- 1), 0]
have lean_s80 : let118 := by timed eqResolve lean_a109 lean_r37
let lean_s81 := by R1 lean_s79, lean_s80, let117, [(- 1), 0]
let lean_s82 := by timed flipCongrArg lean_r30 [LE.le]
have lean_s83 : (Eq let10 let10) := by timed rfl
have lean_s84 : (Eq let196 let186) := by timed congr lean_s82 lean_s83
have lean_s85 : (Eq let196 let121) := by timed Eq.trans lean_s84 lean_r73
have lean_s86 : let121 := by timed eqResolve lean_a108 lean_s85
let lean_s87 := by R1 lean_s81, lean_s86, let120, [(- 1), 0]
let lean_s88 := by timed flipCongrArg lean_r71 [LE.le]
have lean_s89 : (Eq let195 let111) := by timed congr lean_s88 lean_s83
have lean_s90 : (Eq let195 let51) := by timed Eq.trans lean_s89 lean_r19
have lean_s91 : let51 := by timed eqResolve lean_a105 lean_s90
let lean_s92 := by R1 lean_s87, lean_s91, let50, [(- 1), 0]
have lean_s93 : let105 := by timed eqResolve lean_a100 lean_r43
let lean_s94 := by R1 lean_s92, lean_s93, let104, [(- 1), 0]
let lean_s95 := by timed flipCongrArg lean_r58 [LE.le]
have lean_s96 : (Eq let193 let103) := by timed congr lean_s95 lean_s76
have lean_s97 : (Eq let193 let42) := by timed Eq.trans lean_s96 lean_r15
have lean_s98 : let42 := by timed eqResolve lean_a99 lean_s97
let lean_s99 := by R1 lean_s94, lean_s98, let41, [(- 1), 0]
let lean_s100 := by timed flipCongrArg lean_r36 [LE.le]
have lean_s101 : (Eq let192 let130) := by timed congr lean_s100 lean_s76
have lean_s102 : (Eq let192 let20) := by timed Eq.trans lean_s101 lean_r31
have lean_s103 : let20 := by timed eqResolve lean_a98 lean_s102
let lean_s104 := by R1 lean_s99, lean_s103, let19, [(- 1), 0]
let lean_s105 := by timed flipCongrArg lean_r61 [LE.le]
have lean_s106 : (Eq let191 let126) := by timed congr lean_s105 lean_s71
have lean_s107 : (Eq let191 let33) := by timed Eq.trans lean_s106 lean_r28
have lean_s108 : let33 := by timed eqResolve lean_a97 lean_s107
exact (show False from by R1 lean_s104, lean_s108, let32, [0, 0])


