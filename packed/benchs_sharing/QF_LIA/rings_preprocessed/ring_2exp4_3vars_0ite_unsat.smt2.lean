open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {v2 : Int}
variable {v1 : Int}
variable {ox5f2 : Int}
variable {sx5f2 : Int}
variable {v0 : Int}
variable {sx5f3 : Int}
variable {ox5f3 : Int}
variable {sx5f1 : Int}
variable {sx5f0 : Int}
variable {ox5f0 : Int}
variable {sx5f0 : Int}
variable {sx5f1 : Int}
variable {ox5f3 : Int}
variable {sx5f2 : Int}
variable {ox5f2 : Int}
variable {v0 : Int}
variable {v1 : Int}
variable {sx5f3 : Int}
variable {ox5f0 : Int}
variable {v2 : Int}
variable {ox5f1 : Int}
variable {ox5f1 : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (Int.ofNat 2)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HAdd.hAdd sx5f0 (binrel% HAdd.hAdd ox5f0 (binrel% HAdd.hAdd sx5f1 (binrel% HAdd.hAdd ox5f1 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 sx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 ox5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 sx5f3) (binrel% HMul.hMul let3 ox5f3))))))))
  let let7 := (binrel% GE.ge let6 let1)
  let let8 := (binrel% GE.ge let6 let2)
  let let9 := (Not let8)
  let let10 := (Not (And let9 let7))
  let let11 := (Int.ofNat 17)
  let let12 := (Int.ofNat 16)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HMul.hMul let13 sx5f3)
  let let15 := (Int.ofNat 32)
  let let16 := (Neg.neg let15)
  let let17 := (binrel% HMul.hMul let16 ox5f2)
  let let18 := (binrel% HMul.hMul let16 sx5f2)
  let let19 := (Int.ofNat 4)
  let let20 := (binrel% HMul.hMul let19 v2)
  let let21 := (binrel% HMul.hMul let4 v1)
  let let22 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 let14)))))
  let let23 := (binrel% GE.ge let22 let11)
  let let24 := (Not (binrel% GE.ge ox5f3 let4))
  let let25 := (And let24 (binrel% GE.ge ox5f3 let2))
  let let26 := (Eq let25 let23)
  let let27 := (binrel% HMul.hMul let13 ox5f3)
  let let28 := (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let14 let27)))
  let let29 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 let28)))
  let let30 := (binrel% GE.ge let29 let12)
  let let31 := (Not let30)
  let let32 := (binrel% GE.ge let29 let1)
  let let33 := (binrel% GE.ge ox5f3 let1)
  let let34 := (Int.ofNat 9)
  let let35 := (binrel% HMul.hMul let13 ox5f2)
  let let36 := (binrel% HMul.hMul let13 sx5f2)
  let let37 := (binrel% HMul.hMul let4 v2)
  let let38 := (binrel% HAdd.hAdd v1 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 let35)))
  let let39 := (binrel% GE.ge let38 let34)
  let let40 := (binrel% GE.ge sx5f3 let2)
  let let41 := (Eq let40 let39)
  let let42 := (Int.ofNat 8)
  let let43 := (Neg.neg let42)
  let let44 := (binrel% HMul.hMul let43 sx5f3)
  let let45 := (binrel% HAdd.hAdd v1 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let35 let44))))
  let let46 := (binrel% GE.ge let45 let42)
  let let47 := (Not let46)
  let let48 := (binrel% GE.ge let45 let1)
  let let49 := (binrel% GE.ge sx5f3 let1)
  let let50 := (binrel% GE.ge sx5f3 let4)
  let let51 := (Not let50)
  let let52 := (binrel% HAdd.hAdd v1 (binrel% HAdd.hAdd let37 let36))
  let let53 := (binrel% GE.ge let52 let11)
  let let54 := (Not (binrel% GE.ge ox5f2 let4))
  let let55 := (And let54 (binrel% GE.ge ox5f2 let2))
  let let56 := (Eq let55 let53)
  let let57 := (binrel% GE.ge let38 let12)
  let let58 := (Not let57)
  let let59 := (binrel% GE.ge let38 let1)
  let let60 := (binrel% GE.ge ox5f2 let1)
  let let61 := (binrel% GE.ge v2 let34)
  let let62 := (binrel% GE.ge sx5f2 let2)
  let let63 := (Eq let62 let61)
  let let64 := (binrel% HMul.hMul let43 sx5f2)
  let let65 := (binrel% HAdd.hAdd v2 let64)
  let let66 := (binrel% GE.ge let65 let42)
  let let67 := (Not let66)
  let let68 := (binrel% GE.ge let65 let1)
  let let69 := (binrel% GE.ge sx5f2 let1)
  let let70 := (binrel% GE.ge sx5f2 let4)
  let let71 := (Not let70)
  let let72 := (binrel% HMul.hMul let13 sx5f1)
  let let73 := (binrel% HMul.hMul let13 ox5f0)
  let let74 := (binrel% HMul.hMul let13 sx5f0)
  let let75 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let73 let72)))))
  let let76 := (binrel% GE.ge let75 let11)
  let let77 := (Not (binrel% GE.ge ox5f1 let4))
  let let78 := (And let77 (binrel% GE.ge ox5f1 let2))
  let let79 := (Eq let78 let76)
  let let80 := (binrel% HMul.hMul let13 ox5f1)
  let let81 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 let80))))))
  let let82 := (binrel% GE.ge let81 let12)
  let let83 := (Not let82)
  let let84 := (binrel% GE.ge let81 let1)
  let let85 := (binrel% GE.ge ox5f1 let1)
  let let86 := (binrel% GE.ge v2 (Int.ofNat 5))
  let let87 := (binrel% GE.ge sx5f1 let2)
  let let88 := (Eq let87 let86)
  let let89 := (Neg.neg let19)
  let let90 := (binrel% HMul.hMul let89 sx5f1)
  let let91 := (binrel% HAdd.hAdd v2 let90)
  let let92 := (binrel% GE.ge let91 let19)
  let let93 := (Not let92)
  let let94 := (binrel% GE.ge let91 let1)
  let let95 := (binrel% GE.ge sx5f1 let1)
  let let96 := (binrel% GE.ge sx5f1 let19)
  let let97 := (Not let96)
  let let98 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 let74))
  let let99 := (binrel% GE.ge let98 let11)
  let let100 := (Not (binrel% GE.ge ox5f0 let4))
  let let101 := (And let100 (binrel% GE.ge ox5f0 let2))
  let let102 := (Eq let101 let99)
  let let103 := (binrel% HAdd.hAdd let74 let73)
  let let104 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 let103))
  let let105 := (binrel% GE.ge let104 let12)
  let let106 := (Not let105)
  let let107 := (binrel% GE.ge let104 let1)
  let let108 := (binrel% GE.ge ox5f0 let1)
  let let109 := (binrel% GE.ge v1 let34)
  let let110 := (binrel% GE.ge sx5f0 let2)
  let let111 := (Eq let110 let109)
  let let112 := (binrel% HMul.hMul let43 sx5f0)
  let let113 := (binrel% HAdd.hAdd v1 let112)
  let let114 := (binrel% GE.ge let113 let42)
  let let115 := (Not let114)
  let let116 := (binrel% GE.ge let113 let1)
  let let117 := (binrel% GE.ge sx5f0 let1)
  let let118 := (binrel% GE.ge sx5f0 let4)
  let let119 := (Not let118)
  let let120 := (binrel% GE.ge v2 let12)
  let let121 := (Not let120)
  let let122 := (binrel% GE.ge v2 let1)
  let let123 := (binrel% GE.ge v1 let12)
  let let124 := (Not let123)
  let let125 := (binrel% GE.ge v1 let1)
  let let126 := (binrel% GE.ge v0 let12)
  let let127 := (Not let126)
  let let128 := (binrel% GE.ge v0 let1)
  let let129 := (And let128 (And let127 (And let125 (And let124 (And let122 (And let121 (And let119 (And let117 (And let116 (And let115 (And let111 (And let108 (And let100 (And let107 (And let106 (And let102 (And let97 (And let95 (And let94 (And let93 (And let88 (And let85 (And let77 (And let84 (And let83 (And let79 (And let71 (And let69 (And let68 (And let67 (And let63 (And let60 (And let54 (And let59 (And let58 (And let56 (And let51 (And let49 (And let48 (And let47 (And let41 (And let33 (And let24 (And let32 (And let31 (And let26 let10))))))))))))))))))))))))))))))))))))))))))))))
  let let130 := (binrel% HMul.hMul let4 ox5f2)
  let let131 := (binrel% HMul.hMul let4 sx5f2)
  let let132 := (binrel% HMul.hMul let3 ox5f1)
  let let133 := (binrel% HMul.hMul let3 sx5f1)
  let let134 := (binrel% HMul.hMul let3 ox5f0)
  let let135 := (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd sx5f3 ox5f3))))))
  let let136 := (Eq sx5f0 let135)
  let let137 := (Not let136)
  let let138 := (Eq ox5f3 let2)
  let let139 := (Eq let138 let23)
  let let140 := (Eq ox5f2 let2)
  let let141 := (Eq let140 let53)
  let let142 := (Eq ox5f1 let2)
  let let143 := (Eq let142 let76)
  let let144 := (Eq ox5f0 let2)
  let let145 := (Eq let144 let99)
  let let146 := (And let128 (And let127 (And let125 (And let124 (And let122 (And let121 (And let119 (And let117 (And let116 (And let115 (And let111 (And let108 (And let100 (And let107 (And let106 (And let145 (And let97 (And let95 (And let94 (And let93 (And let88 (And let85 (And let77 (And let84 (And let83 (And let143 (And let71 (And let69 (And let68 (And let67 (And let63 (And let60 (And let54 (And let59 (And let58 (And let141 (And let51 (And let49 (And let48 (And let47 (And let41 (And let33 (And let24 (And let32 (And let31 (And let139 let137))))))))))))))))))))))))))))))))))))))))))))))
  let let147 := (Rat.ofInt 16)
  let let148 := (Neg.neg let147)
  let let149 := (binrel% LT.lt let148 let1)
  let let150 := (Rat.ofInt 1)
  let let151 := (Neg.neg let150)
  let let152 := (binrel% HMul.hMul let151 let1)
  let let153 := (binrel% HMul.hMul let148 let2)
  let let154 := (binrel% HMul.hMul let150 let12)
  let let155 := (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let153 let152))
  let let156 := (binrel% HMul.hMul let151 let81)
  let let157 := (binrel% HMul.hMul let148 let6)
  let let158 := (binrel% HMul.hMul let150 let29)
  let let159 := (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let157 let156))
  let let160 := (binrel% GE.ge let159 let155)
  let let161 := (Not let160)
  let let162 := (binrel% LT.lt let159 let155)
  let let163 := (binrel% HAdd.hAdd (binrel% HMul.hMul let15 sx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 ox5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 sx5f3) (binrel% HMul.hMul let12 ox5f3))))
  let let164 := (Rat.ofInt (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let80 let163)))))
  let let165 := (binrel% HMul.hMul let12 ox5f1)
  let let166 := (binrel% HMul.hMul let12 sx5f1)
  let let167 := (binrel% HMul.hMul let12 ox5f0)
  let let168 := (binrel% HMul.hMul let12 sx5f0)
  let let169 := (binrel% HMul.hMul let89 v2)
  let let170 := (binrel% HMul.hMul let5 v1)
  let let171 := (binrel% HMul.hMul let3 v0)
  let let172 := (Rat.ofInt (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let166 let165)))))))
  let let173 := (Rat.ofInt 0)
  let let174 := (Rat.ofInt let29)
  let let175 := (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let164 let172))
  let let176 := (Not let31)
  let let177 := (Eq let176 let30)
  let let178 := (Eq let30 let30)
  let let179 := (Not let9)
  let let180 := (Eq let8 let179)
  let let181 := (Eq let179 let8)
  let let182 := (binrel% GT.gt let147 let1)
  let let183 := (binrel% LT.lt let151 let1)
  let let184 := (binrel% HMul.hMul let147 let3)
  let let185 := (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let184 let152))
  let let186 := (binrel% HMul.hMul let151 let29)
  let let187 := (binrel% HMul.hMul let147 let6)
  let let188 := (binrel% HMul.hMul let150 let81)
  let let189 := (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd let187 let186))
  let let190 := (binrel% GE.ge let189 let185)
  let let191 := (Not let190)
  let let192 := (binrel% LT.lt let189 let185)
  let let193 := (Rat.ofInt let81)
  let let194 := (Rat.ofInt (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 let163))))
  let let195 := (Rat.ofInt (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let165 let28)))))
  let let196 := (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let195 let194))
  let let197 := (Not let109)
  let let198 := (binrel% LE.le v1 let42)
  let let199 := (binrel% LE.le let12 let38)
  let let200 := (Eq let53 let140)
  let let201 := (binrel% LE.le let1 let45)
  let let202 := (binrel% LE.le let1 v0)
  let let203 := (binrel% LE.le let42 let45)
  let let204 := (binrel% HAdd.hAdd let64 v2)
  let let205 := (binrel% HMul.hMul v2 let4)
  let let206 := (binrel% HAdd.hAdd let112 v1)
  let let207 := (binrel% LE.le let2 sx5f3)
  let let208 := (binrel% LE.le let1 let113)
  let let209 := (Not let53)
  let let210 := (binrel% LE.le let52 let12)
  let let211 := (Eq let30 let176)
  let let212 := (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let14 v0)))))
  let let213 := (binrel% HAdd.hAdd let27 let212)
  let let214 := (binrel% HMul.hMul ox5f2 let13)
  let let215 := (binrel% HMul.hMul sx5f2 let13)
  let let216 := (binrel% HAdd.hAdd let215 (binrel% HAdd.hAdd let205 (binrel% HAdd.hAdd v1 let214)))
  let let217 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let215 let205) v1)
  let let218 := (binrel% HAdd.hAdd let217 let214)
  let let219 := (binrel% LE.le let42 let65)
  let let220 := (Not let86)
  let let221 := (Not let220)
  let let222 := (binrel% LE.le let42 let113)
  let let223 := (Not let39)
  let let224 := (binrel% LE.le let38 let42)
  let let225 := (Not let223)
  let let226 := (binrel% LE.le let1 let38)
  let let227 := (binrel% LE.le let1 let104)
  let let228 := (Not let7)
  let let229 := (Not let228)
  let let230 := (Eq let7 let229)
  let let231 := (Eq let229 let7)
  let let232 := (Neg.neg ox5f0)
  let let233 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd v1 let35)))
  let let234 := (binrel% HMul.hMul let3 sx5f0)
  let let235 := (binrel% HAdd.hAdd let234 let135)
  let let236 := (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd sx5f3 (binrel% HAdd.hAdd ox5f3 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let234 (binrel% HAdd.hAdd let134 let132)))))))
  let let237 := (binrel% HAdd.hAdd let215 (binrel% HAdd.hAdd let205 v1))
  let let238 := (binrel% HAdd.hAdd let44 let233)
  let let239 := (binrel% LE.le let1 let91)
  let let240 := (binrel% HMul.hMul sx5f2 let4)
  let let241 := (binrel% LE.le let1 ox5f2)
  let let242 := (binrel% HMul.hMul sx5f3 let13)
  let let243 := (binrel% HMul.hMul sx5f3 let43)
  let let244 := (binrel% HAdd.hAdd let243 let216)
  let let245 := (binrel% HAdd.hAdd let243 let218)
  let let246 := (Eq let99 let144)
  let let247 := (Not let209)
  let let248 := (binrel% HMul.hMul ox5f2 let16)
  let let249 := (binrel% HMul.hMul v1 let4)
  let let250 := (binrel% HMul.hMul v2 let19)
  let let251 := (binrel% HMul.hMul sx5f2 let16)
  let let252 := (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let250 (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let248 (binrel% HAdd.hAdd let242 v0)))))
  let let253 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let251 let250) let249) let248) let242) v0)
  let let254 := (Eq let99 let101)
  let let255 := (Eq let235 let1)
  let let256 := (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let148 let173))
  let let257 := (binrel% LE.le let1 ox5f3)
  let let258 := (Neg.neg ox5f1)
  let let259 := (Neg.neg sx5f1)
  let let260 := (Eq let8 let8)
  let let261 := (Eq let53 let55)
  let let262 := (Eq let23 let25)
  let let263 := (binrel% LE.le let12 v2)
  let let264 := (binrel% HMul.hMul ox5f3 let13)
  let let265 := (Not let23)
  let let266 := (Not let265)
  let let267 := (binrel% LE.le let1 sx5f3)
  let let268 := (binrel% LE.le let1 let29)
  let let269 := (Not let83)
  let let270 := (Eq let82 let269)
  let let271 := (Eq let269 let82)
  let let272 := (Not let61)
  let let273 := (Not let272)
  let let274 := (Not let197)
  let let275 := (binrel% LE.le let22 let12)
  let let276 := (binrel% LE.le let12 let29)
  let let277 := (binrel% LE.le let1 ox5f0)
  let let278 := (binrel% LE.le ox5f2 let2)
  let let279 := (binrel% LE.le ox5f0 let2)
  let let280 := (binrel% HMul.hMul ox5f2 let4)
  let let281 := (Eq let23 let138)
  let let282 := (binrel% LE.le let2 sx5f2)
  let let283 := (binrel% LE.le v2 let42)
  let let284 := (binrel% LE.le let2 sx5f0)
  let let285 := (Neg.neg sx5f0)
  let let286 := (binrel% HAdd.hAdd let280 (binrel% HAdd.hAdd let240 (binrel% HAdd.hAdd sx5f3 (binrel% HAdd.hAdd ox5f3 (binrel% HAdd.hAdd let259 (binrel% HAdd.hAdd let285 (binrel% HAdd.hAdd let232 let258)))))))
  let let287 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let280 let240) sx5f3) ox5f3) let259) let285) let232) let258)
  let let288 := (binrel% LE.le let1 let81)
  let let289 := (Eq let76 let78)
  let let290 := (binrel% HAdd.hAdd let264 let252)
  let let291 := (binrel% HAdd.hAdd let264 let253)
  let let292 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let37 v1))
  let let293 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let72 let103))))
  let let294 := (binrel% HAdd.hAdd let80 let293)
  let let295 := (binrel% LT.lt let29 let12)
  let let296 := (binrel% LE.le ox5f3 let2)
  let let297 := (binrel% HMul.hMul sx5f2 let43)
  let let298 := (binrel% GT.gt let150 let1)
  let let299 := (binrel% LE.le let1 let65)
  let let300 := (binrel% HAdd.hAdd let90 v2)
  let let301 := (binrel% LE.le let1 sx5f0)
  let let302 := (binrel% LE.le let1 sx5f2)
  let let303 := (binrel% HMul.hMul sx5f1 let89)
  let let304 := (binrel% LE.le let4 sx5f0)
  let let305 := (Eq let76 let142)
  let let306 := (Not let76)
  let let307 := (Not let306)
  let let308 := (binrel% LE.le let75 let12)
  let let309 := (binrel% HMul.hMul ox5f0 let13)
  let let310 := (binrel% HMul.hMul sx5f0 let13)
  let let311 := (binrel% LE.le let12 let104)
  let let312 := (binrel% HMul.hMul sx5f1 let13)
  let let313 := (binrel% HAdd.hAdd let310 let309)
  let let314 := (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let250 (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let312 let313))))
  let let315 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let249 let250) v0) let312) let310) let309)
  let let316 := (Eq let7 let7)
  let let317 := (binrel% LE.le let12 let81)
  let let318 := (binrel% HMul.hMul ox5f1 let13)
  let let319 := (binrel% HAdd.hAdd let318 let314)
  let let320 := (binrel% HAdd.hAdd let318 let315)
  let let321 := (binrel% LE.le let1 ox5f1)
  let let322 := (binrel% LE.le ox5f1 let2)
  let let323 := (binrel% LT.lt let81 let12)
  let let324 := (binrel% LE.le v2 let19)
  let let325 := (binrel% LE.le let2 sx5f1)
  let let326 := (binrel% LE.le let19 let91)
  let let327 := (binrel% GE.ge let173 let173)
  let let328 := (binrel% LE.le let1 sx5f1)
  let let329 := (binrel% LE.le let19 sx5f1)
  let let330 := (binrel% LE.le let1 v1)
  let let331 := (Not let99)
  let let332 := (Not let331)
  let let333 := (binrel% LE.le let98 let12)
  let let334 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd v0 let74))
  let let335 := (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd v0 let310))
  let let336 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let249 v0) let310)
  let let337 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd v0 let103))
  let let338 := (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd v0 let313))
  let let339 := (binrel% HAdd.hAdd let336 let309)
  let let340 := (binrel% LT.lt let6 let1)
  let let341 := (binrel% HMul.hMul sx5f0 let43)
  let let342 := (binrel% LE.le let4 sx5f2)
  let let343 := (binrel% LE.le let1 v2)
  let let344 := (binrel% LE.le let12 v1)
  let let345 := (binrel% LE.le let12 v0)
  let let346 := (Eq let287 let1)
  let let347 := (Not let346)
  let let348 := (binrel% LE.le let253 let12)
  let let349 := (Not let348)
  let let350 := (Eq let349 let138)
  let let351 := (binrel% LE.le let12 let291)
  let let352 := (Not let351)
  let let353 := (binrel% LE.le let1 let291)
  let let354 := (binrel% LE.le let218 let42)
  let let355 := (Not let354)
  let let356 := (Eq let207 let355)
  let let357 := (binrel% LE.le let42 let245)
  let let358 := (Not let357)
  let let359 := (binrel% LE.le let1 let245)
  let let360 := (binrel% LE.le let4 sx5f3)
  let let361 := (Not let360)
  let let362 := (binrel% LE.le let217 let12)
  let let363 := (Not let362)
  let let364 := (Eq let363 let140)
  let let365 := (binrel% LE.le let12 let218)
  let let366 := (Not let365)
  let let367 := (binrel% LE.le let1 let218)
  let let368 := (Not let283)
  let let369 := (Eq let282 let368)
  let let370 := (binrel% HAdd.hAdd let297 v2)
  let let371 := (binrel% LE.le let42 let370)
  let let372 := (Not let371)
  let let373 := (binrel% LE.le let1 let370)
  let let374 := (Not let342)
  let let375 := (binrel% LE.le let315 let12)
  let let376 := (Not let375)
  let let377 := (Eq let376 let142)
  let let378 := (binrel% LE.le let12 let320)
  let let379 := (Not let378)
  let let380 := (binrel% LE.le let1 let320)
  let let381 := (Not let324)
  let let382 := (Eq let325 let381)
  let let383 := (binrel% HAdd.hAdd let303 v2)
  let let384 := (binrel% LE.le let19 let383)
  let let385 := (Not let384)
  let let386 := (binrel% LE.le let1 let383)
  let let387 := (Not let329)
  let let388 := (binrel% LE.le let336 let12)
  let let389 := (Not let388)
  let let390 := (Eq let389 let144)
  let let391 := (binrel% LE.le let12 let339)
  let let392 := (Not let391)
  let let393 := (binrel% LE.le let1 let339)
  let let394 := (Not let198)
  let let395 := (Eq let284 let394)
  let let396 := (binrel% HAdd.hAdd let341 v1)
  let let397 := (binrel% LE.le let42 let396)
  let let398 := (Not let397)
  let let399 := (binrel% LE.le let1 let396)
  let let400 := (Not let304)
  let let401 := (Not let263)
  let let402 := (Not let344)
  let let403 := (Not let345)
  let let404 := (And let202 (And let403 (And let330 (And let402 (And let343 (And let401 (And let400 (And let301 (And let399 (And let398 (And let395 (And let277 (And let279 (And let393 (And let392 (And let390 (And let387 (And let328 (And let386 (And let385 (And let382 (And let321 (And let322 (And let380 (And let379 (And let377 (And let374 (And let302 (And let373 (And let372 (And let369 (And let241 (And let278 (And let367 (And let366 (And let364 (And let361 (And let267 (And let359 (And let358 (And let356 (And let257 (And let296 (And let353 (And let352 (And let350 let347))))))))))))))))))))))))))))))))))))))))))))))
  let let405 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And let202 let403) (And let330 let402)) (And let343 let401)) (And let400 let301)) (And let399 let398)) let395) (And let277 let279)) (And let393 let392)) let390) (And let387 let328)) (And let386 let385)) let382) (And let321 let322)) (And let380 let379)) let377) (And let374 let302)) (And let373 let372)) let369) (And let241 let278)) (And let367 let366)) let364) (And let361 let267)) (And let359 let358)) let356) (And let257 let296)) (And let353 let352)) let350) let347)
  let let406 := (Eq let82 let82)
  let let407 := (Not True)
  let let408 := (And let128 (And let127 (And let125 (And let124 (And let122 (And let121 (And let119 (And let117 (And let116 (And let115 (And let111 (And let108 (And let100 (And let107 (And let106 (And let254 (And let97 (And let95 (And let94 (And let93 (And let88 (And let85 (And let77 (And let84 (And let83 (And let289 (And let71 (And let69 (And let68 (And let67 (And let63 (And let60 (And let54 (And let59 (And let58 (And let261 (And let51 (And let49 (And let48 (And let47 (And let41 (And let33 (And let24 (And let32 (And let31 (And let262 let10))))))))))))))))))))))))))))))))))))))))))))))
  let let409 := (Eq And And)
  let let410 := (Not let32)
  let let411 := (Or let410 (Or let7 let82))
  let let412 := (Or let410 (Or let229 let269))
  let let413 := (Eq Or Or)
  let let414 := (Not let323)
  let let415 := (binrel% LE.le let186 let152)
  let let416 := (And let183 let32)
  let let417 := (binrel% LE.le let187 let184)
  let let418 := (binrel% LE.le let6 let3)
  let let419 := (And let182 let418)
  let let420 := (binrel% LT.lt let188 let154)
  let let421 := (And let298 let323)
  let let422 := (Or let8 let228)
  let let423 := (Or let179 let228)
  let let424 := (Not let84)
  let let425 := (Or let424 (Or let9 let30))
  let let426 := (Or let424 (Or let9 let176))
  let let427 := (Not let295)
  let let428 := (binrel% LE.le let156 let152)
  let let429 := (And let183 let84)
  let let430 := (binrel% LE.le let157 let153)
  let let431 := (And let149 let8)
  let let432 := (binrel% LT.lt let158 let154)
  let let433 := (And let298 let295)
(Eq let146 let129) → (Eq let149 True) → (Eq let162 let161) → (Eq let157 let164) → (Eq let156 let172) → (Eq let175 let173) → (Eq let153 let148) → let177 → (Eq let178 True) → (Eq let181 let180) → let181 → (Eq let182 True) → (Eq let183 True) → (Eq let192 let191) → (Eq let188 let193) → (Eq let196 let173) → (Eq let198 let197) → (Eq let199 let57) → (Eq let200 let141) → (Eq let201 let48) → (Eq let202 let128) → (Eq let203 let46) → (Eq let204 let65) → (Eq let205 let37) → (Eq let206 let113) → (Eq let207 let40) → (Eq let208 let116) → (Eq let210 let209) → (Eq let177 let211) → (Eq let213 let29) → (Eq let218 let216) → (Eq let219 let66) → (Eq let221 let86) → (Eq let222 let114) → (Eq let215 let36) → (Eq let214 let35) → (Eq let224 let223) → (Eq let225 let39) → (Eq let187 let195) → (Eq let226 let59) → (Eq let186 let194) → (Eq let227 let107) → (Eq let231 let230) → (Eq let232 let134) → (Eq let233 let38) → (Eq let236 let235) → (Eq let217 let237) → (Eq let238 let45) → (Eq let239 let94) → (Eq let240 let131) → (Eq let241 let60) → (Eq let242 let14) → (Eq let245 let244) → (Eq let246 let145) → (Eq let247 let53) → (Eq let253 let252) → (Eq let102 let254) → (Eq let250 let20) → (Eq let255 let136) → (Eq let256 let173) → (Eq let257 let33) → (Eq let258 let132) → (Eq let259 let133) → (Eq let260 True) → (Eq let56 let261) → (Eq let26 let262) → (Eq let263 let120) → (Eq let264 let27) → (Eq let266 let23) → (Eq let267 let49) → (Eq let249 let21) → (Eq let268 let32) → (Eq let271 let270) → (Eq let273 let61) → (Eq let274 let109) → (Eq let275 let265) → (Eq let276 let30) → (Eq let212 let22) → (Eq let277 let108) → (Eq let278 let54) → (Eq let279 let100) → (Eq let251 let18) → (Eq let280 let130) → (Eq let281 let139) → (Eq let282 let62) → (Eq let283 let272) → (Eq let284 let110) → (Eq let243 let44) → (Eq let287 let286) → (Eq let288 let84) → (Eq let79 let289) → (Eq let248 let17) → (Eq let291 let290) → (Eq let292 let52) → (Eq let285 let234) → (Eq let294 let81) → (Eq let295 let31) → (Eq let296 let24) → (Eq let297 let64) → (Eq let298 True) → (Eq let299 let68) → (Eq let300 let91) → (Eq let301 let117) → (Eq let302 let69) → (Eq let158 let174) → (Eq let303 let90) → (Eq let304 let118) → (Eq let305 let143) → (Eq let307 let76) → (Eq let308 let306) → (Eq let293 let75) → (Eq let184 let148) → (Eq let309 let73) → (Eq let310 let74) → (Eq let311 let105) → (Eq let312 let72) → (Eq let315 let314) → (Eq let316 True) → (Eq let317 let82) → (Eq let318 let80) → (Eq let320 let319) → (Eq let321 let85) → (Eq let322 let77) → (Eq let323 let83) → (Eq let324 let220) → (Eq let325 let87) → (Eq let326 let92) → (Eq let327 True) → (Eq let328 let95) → (Eq let329 let96) → (Eq let330 let125) → (Eq let332 let99) → (Eq let333 let331) → (Eq let334 let98) → (Eq let336 let335) → (Eq let337 let104) → (Eq let339 let338) → (Eq let340 let228) → (Eq let341 let112) → (Eq let342 let70) → (Eq let343 let122) → (Eq let344 let123) → (Eq let345 let126) → (Eq let405 let404) → (Eq let406 True) → let271 → let231 → (Eq let407 False) → (Eq let360 let50) → (Eq let152 let173) → (Eq let154 let147) → let405 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (Int.ofNat 2)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HAdd.hAdd sx5f0 (binrel% HAdd.hAdd ox5f0 (binrel% HAdd.hAdd sx5f1 (binrel% HAdd.hAdd ox5f1 (binrel% HAdd.hAdd (binrel% HMul.hMul let5 sx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let5 ox5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 sx5f3) (binrel% HMul.hMul let3 ox5f3))))))))
  let let7 := (binrel% GE.ge let6 let1)
  let let8 := (binrel% GE.ge let6 let2)
  let let9 := (Not let8)
  let let10 := (Not (And let9 let7))
  let let11 := (Int.ofNat 17)
  let let12 := (Int.ofNat 16)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HMul.hMul let13 sx5f3)
  let let15 := (Int.ofNat 32)
  let let16 := (Neg.neg let15)
  let let17 := (binrel% HMul.hMul let16 ox5f2)
  let let18 := (binrel% HMul.hMul let16 sx5f2)
  let let19 := (Int.ofNat 4)
  let let20 := (binrel% HMul.hMul let19 v2)
  let let21 := (binrel% HMul.hMul let4 v1)
  let let22 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 let14)))))
  let let23 := (binrel% GE.ge let22 let11)
  let let24 := (Not (binrel% GE.ge ox5f3 let4))
  let let25 := (And let24 (binrel% GE.ge ox5f3 let2))
  let let26 := (Eq let25 let23)
  let let27 := (binrel% HMul.hMul let13 ox5f3)
  let let28 := (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let14 let27)))
  let let29 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 let28)))
  let let30 := (binrel% GE.ge let29 let12)
  let let31 := (Not let30)
  let let32 := (binrel% GE.ge let29 let1)
  let let33 := (binrel% GE.ge ox5f3 let1)
  let let34 := (Int.ofNat 9)
  let let35 := (binrel% HMul.hMul let13 ox5f2)
  let let36 := (binrel% HMul.hMul let13 sx5f2)
  let let37 := (binrel% HMul.hMul let4 v2)
  let let38 := (binrel% HAdd.hAdd v1 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 let35)))
  let let39 := (binrel% GE.ge let38 let34)
  let let40 := (binrel% GE.ge sx5f3 let2)
  let let41 := (Eq let40 let39)
  let let42 := (Int.ofNat 8)
  let let43 := (Neg.neg let42)
  let let44 := (binrel% HMul.hMul let43 sx5f3)
  let let45 := (binrel% HAdd.hAdd v1 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let35 let44))))
  let let46 := (binrel% GE.ge let45 let42)
  let let47 := (Not let46)
  let let48 := (binrel% GE.ge let45 let1)
  let let49 := (binrel% GE.ge sx5f3 let1)
  let let50 := (binrel% GE.ge sx5f3 let4)
  let let51 := (Not let50)
  let let52 := (binrel% HAdd.hAdd v1 (binrel% HAdd.hAdd let37 let36))
  let let53 := (binrel% GE.ge let52 let11)
  let let54 := (Not (binrel% GE.ge ox5f2 let4))
  let let55 := (And let54 (binrel% GE.ge ox5f2 let2))
  let let56 := (Eq let55 let53)
  let let57 := (binrel% GE.ge let38 let12)
  let let58 := (Not let57)
  let let59 := (binrel% GE.ge let38 let1)
  let let60 := (binrel% GE.ge ox5f2 let1)
  let let61 := (binrel% GE.ge v2 let34)
  let let62 := (binrel% GE.ge sx5f2 let2)
  let let63 := (Eq let62 let61)
  let let64 := (binrel% HMul.hMul let43 sx5f2)
  let let65 := (binrel% HAdd.hAdd v2 let64)
  let let66 := (binrel% GE.ge let65 let42)
  let let67 := (Not let66)
  let let68 := (binrel% GE.ge let65 let1)
  let let69 := (binrel% GE.ge sx5f2 let1)
  let let70 := (binrel% GE.ge sx5f2 let4)
  let let71 := (Not let70)
  let let72 := (binrel% HMul.hMul let13 sx5f1)
  let let73 := (binrel% HMul.hMul let13 ox5f0)
  let let74 := (binrel% HMul.hMul let13 sx5f0)
  let let75 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let73 let72)))))
  let let76 := (binrel% GE.ge let75 let11)
  let let77 := (Not (binrel% GE.ge ox5f1 let4))
  let let78 := (And let77 (binrel% GE.ge ox5f1 let2))
  let let79 := (Eq let78 let76)
  let let80 := (binrel% HMul.hMul let13 ox5f1)
  let let81 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 let80))))))
  let let82 := (binrel% GE.ge let81 let12)
  let let83 := (Not let82)
  let let84 := (binrel% GE.ge let81 let1)
  let let85 := (binrel% GE.ge ox5f1 let1)
  let let86 := (binrel% GE.ge v2 (Int.ofNat 5))
  let let87 := (binrel% GE.ge sx5f1 let2)
  let let88 := (Eq let87 let86)
  let let89 := (Neg.neg let19)
  let let90 := (binrel% HMul.hMul let89 sx5f1)
  let let91 := (binrel% HAdd.hAdd v2 let90)
  let let92 := (binrel% GE.ge let91 let19)
  let let93 := (Not let92)
  let let94 := (binrel% GE.ge let91 let1)
  let let95 := (binrel% GE.ge sx5f1 let1)
  let let96 := (binrel% GE.ge sx5f1 let19)
  let let97 := (Not let96)
  let let98 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 let74))
  let let99 := (binrel% GE.ge let98 let11)
  let let100 := (Not (binrel% GE.ge ox5f0 let4))
  let let101 := (And let100 (binrel% GE.ge ox5f0 let2))
  let let102 := (Eq let101 let99)
  let let103 := (binrel% HAdd.hAdd let74 let73)
  let let104 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let21 let103))
  let let105 := (binrel% GE.ge let104 let12)
  let let106 := (Not let105)
  let let107 := (binrel% GE.ge let104 let1)
  let let108 := (binrel% GE.ge ox5f0 let1)
  let let109 := (binrel% GE.ge v1 let34)
  let let110 := (binrel% GE.ge sx5f0 let2)
  let let111 := (Eq let110 let109)
  let let112 := (binrel% HMul.hMul let43 sx5f0)
  let let113 := (binrel% HAdd.hAdd v1 let112)
  let let114 := (binrel% GE.ge let113 let42)
  let let115 := (Not let114)
  let let116 := (binrel% GE.ge let113 let1)
  let let117 := (binrel% GE.ge sx5f0 let1)
  let let118 := (binrel% GE.ge sx5f0 let4)
  let let119 := (Not let118)
  let let120 := (binrel% GE.ge v2 let12)
  let let121 := (Not let120)
  let let122 := (binrel% GE.ge v2 let1)
  let let123 := (binrel% GE.ge v1 let12)
  let let124 := (Not let123)
  let let125 := (binrel% GE.ge v1 let1)
  let let126 := (binrel% GE.ge v0 let12)
  let let127 := (Not let126)
  let let128 := (binrel% GE.ge v0 let1)
  let let129 := (And let128 (And let127 (And let125 (And let124 (And let122 (And let121 (And let119 (And let117 (And let116 (And let115 (And let111 (And let108 (And let100 (And let107 (And let106 (And let102 (And let97 (And let95 (And let94 (And let93 (And let88 (And let85 (And let77 (And let84 (And let83 (And let79 (And let71 (And let69 (And let68 (And let67 (And let63 (And let60 (And let54 (And let59 (And let58 (And let56 (And let51 (And let49 (And let48 (And let47 (And let41 (And let33 (And let24 (And let32 (And let31 (And let26 let10))))))))))))))))))))))))))))))))))))))))))))))
  let let130 := (binrel% HMul.hMul let4 ox5f2)
  let let131 := (binrel% HMul.hMul let4 sx5f2)
  let let132 := (binrel% HMul.hMul let3 ox5f1)
  let let133 := (binrel% HMul.hMul let3 sx5f1)
  let let134 := (binrel% HMul.hMul let3 ox5f0)
  let let135 := (binrel% HAdd.hAdd let134 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let132 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd sx5f3 ox5f3))))))
  let let136 := (Eq sx5f0 let135)
  let let137 := (Not let136)
  let let138 := (Eq ox5f3 let2)
  let let139 := (Eq let138 let23)
  let let140 := (Eq ox5f2 let2)
  let let141 := (Eq let140 let53)
  let let142 := (Eq ox5f1 let2)
  let let143 := (Eq let142 let76)
  let let144 := (Eq ox5f0 let2)
  let let145 := (Eq let144 let99)
  let let146 := (And let128 (And let127 (And let125 (And let124 (And let122 (And let121 (And let119 (And let117 (And let116 (And let115 (And let111 (And let108 (And let100 (And let107 (And let106 (And let145 (And let97 (And let95 (And let94 (And let93 (And let88 (And let85 (And let77 (And let84 (And let83 (And let143 (And let71 (And let69 (And let68 (And let67 (And let63 (And let60 (And let54 (And let59 (And let58 (And let141 (And let51 (And let49 (And let48 (And let47 (And let41 (And let33 (And let24 (And let32 (And let31 (And let139 let137))))))))))))))))))))))))))))))))))))))))))))))
  let let147 := (Rat.ofInt 16)
  let let148 := (Neg.neg let147)
  let let149 := (binrel% LT.lt let148 let1)
  let let150 := (Rat.ofInt 1)
  let let151 := (Neg.neg let150)
  let let152 := (binrel% HMul.hMul let151 let1)
  let let153 := (binrel% HMul.hMul let148 let2)
  let let154 := (binrel% HMul.hMul let150 let12)
  let let155 := (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let153 let152))
  let let156 := (binrel% HMul.hMul let151 let81)
  let let157 := (binrel% HMul.hMul let148 let6)
  let let158 := (binrel% HMul.hMul let150 let29)
  let let159 := (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let157 let156))
  let let160 := (binrel% GE.ge let159 let155)
  let let161 := (Not let160)
  let let162 := (binrel% LT.lt let159 let155)
  let let163 := (binrel% HAdd.hAdd (binrel% HMul.hMul let15 sx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let15 ox5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let12 sx5f3) (binrel% HMul.hMul let12 ox5f3))))
  let let164 := (Rat.ofInt (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let72 (binrel% HAdd.hAdd let80 let163)))))
  let let165 := (binrel% HMul.hMul let12 ox5f1)
  let let166 := (binrel% HMul.hMul let12 sx5f1)
  let let167 := (binrel% HMul.hMul let12 ox5f0)
  let let168 := (binrel% HMul.hMul let12 sx5f0)
  let let169 := (binrel% HMul.hMul let89 v2)
  let let170 := (binrel% HMul.hMul let5 v1)
  let let171 := (binrel% HMul.hMul let3 v0)
  let let172 := (Rat.ofInt (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let166 let165)))))))
  let let173 := (Rat.ofInt 0)
  let let174 := (Rat.ofInt let29)
  let let175 := (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let164 let172))
  let let176 := (Not let31)
  let let177 := (Eq let176 let30)
  let let178 := (Eq let30 let30)
  let let179 := (Not let9)
  let let180 := (Eq let8 let179)
  let let181 := (Eq let179 let8)
  let let182 := (binrel% GT.gt let147 let1)
  let let183 := (binrel% LT.lt let151 let1)
  let let184 := (binrel% HMul.hMul let147 let3)
  let let185 := (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let184 let152))
  let let186 := (binrel% HMul.hMul let151 let29)
  let let187 := (binrel% HMul.hMul let147 let6)
  let let188 := (binrel% HMul.hMul let150 let81)
  let let189 := (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd let187 let186))
  let let190 := (binrel% GE.ge let189 let185)
  let let191 := (Not let190)
  let let192 := (binrel% LT.lt let189 let185)
  let let193 := (Rat.ofInt let81)
  let let194 := (Rat.ofInt (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let170 (binrel% HAdd.hAdd let169 let163))))
  let let195 := (Rat.ofInt (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let167 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let165 let28)))))
  let let196 := (binrel% HAdd.hAdd let193 (binrel% HAdd.hAdd let195 let194))
  let let197 := (Not let109)
  let let198 := (binrel% LE.le v1 let42)
  let let199 := (binrel% LE.le let12 let38)
  let let200 := (Eq let53 let140)
  let let201 := (binrel% LE.le let1 let45)
  let let202 := (binrel% LE.le let1 v0)
  let let203 := (binrel% LE.le let42 let45)
  let let204 := (binrel% HAdd.hAdd let64 v2)
  let let205 := (binrel% HMul.hMul v2 let4)
  let let206 := (binrel% HAdd.hAdd let112 v1)
  let let207 := (binrel% LE.le let2 sx5f3)
  let let208 := (binrel% LE.le let1 let113)
  let let209 := (Not let53)
  let let210 := (binrel% LE.le let52 let12)
  let let211 := (Eq let30 let176)
  let let212 := (binrel% HAdd.hAdd let18 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let17 (binrel% HAdd.hAdd let14 v0)))))
  let let213 := (binrel% HAdd.hAdd let27 let212)
  let let214 := (binrel% HMul.hMul ox5f2 let13)
  let let215 := (binrel% HMul.hMul sx5f2 let13)
  let let216 := (binrel% HAdd.hAdd let215 (binrel% HAdd.hAdd let205 (binrel% HAdd.hAdd v1 let214)))
  let let217 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let215 let205) v1)
  let let218 := (binrel% HAdd.hAdd let217 let214)
  let let219 := (binrel% LE.le let42 let65)
  let let220 := (Not let86)
  let let221 := (Not let220)
  let let222 := (binrel% LE.le let42 let113)
  let let223 := (Not let39)
  let let224 := (binrel% LE.le let38 let42)
  let let225 := (Not let223)
  let let226 := (binrel% LE.le let1 let38)
  let let227 := (binrel% LE.le let1 let104)
  let let228 := (Not let7)
  let let229 := (Not let228)
  let let230 := (Eq let7 let229)
  let let231 := (Eq let229 let7)
  let let232 := (Neg.neg ox5f0)
  let let233 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd v1 let35)))
  let let234 := (binrel% HMul.hMul let3 sx5f0)
  let let235 := (binrel% HAdd.hAdd let234 let135)
  let let236 := (binrel% HAdd.hAdd let130 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd sx5f3 (binrel% HAdd.hAdd ox5f3 (binrel% HAdd.hAdd let133 (binrel% HAdd.hAdd let234 (binrel% HAdd.hAdd let134 let132)))))))
  let let237 := (binrel% HAdd.hAdd let215 (binrel% HAdd.hAdd let205 v1))
  let let238 := (binrel% HAdd.hAdd let44 let233)
  let let239 := (binrel% LE.le let1 let91)
  let let240 := (binrel% HMul.hMul sx5f2 let4)
  let let241 := (binrel% LE.le let1 ox5f2)
  let let242 := (binrel% HMul.hMul sx5f3 let13)
  let let243 := (binrel% HMul.hMul sx5f3 let43)
  let let244 := (binrel% HAdd.hAdd let243 let216)
  let let245 := (binrel% HAdd.hAdd let243 let218)
  let let246 := (Eq let99 let144)
  let let247 := (Not let209)
  let let248 := (binrel% HMul.hMul ox5f2 let16)
  let let249 := (binrel% HMul.hMul v1 let4)
  let let250 := (binrel% HMul.hMul v2 let19)
  let let251 := (binrel% HMul.hMul sx5f2 let16)
  let let252 := (binrel% HAdd.hAdd let251 (binrel% HAdd.hAdd let250 (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let248 (binrel% HAdd.hAdd let242 v0)))))
  let let253 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let251 let250) let249) let248) let242) v0)
  let let254 := (Eq let99 let101)
  let let255 := (Eq let235 let1)
  let let256 := (binrel% HAdd.hAdd let147 (binrel% HAdd.hAdd let148 let173))
  let let257 := (binrel% LE.le let1 ox5f3)
  let let258 := (Neg.neg ox5f1)
  let let259 := (Neg.neg sx5f1)
  let let260 := (Eq let8 let8)
  let let261 := (Eq let53 let55)
  let let262 := (Eq let23 let25)
  let let263 := (binrel% LE.le let12 v2)
  let let264 := (binrel% HMul.hMul ox5f3 let13)
  let let265 := (Not let23)
  let let266 := (Not let265)
  let let267 := (binrel% LE.le let1 sx5f3)
  let let268 := (binrel% LE.le let1 let29)
  let let269 := (Not let83)
  let let270 := (Eq let82 let269)
  let let271 := (Eq let269 let82)
  let let272 := (Not let61)
  let let273 := (Not let272)
  let let274 := (Not let197)
  let let275 := (binrel% LE.le let22 let12)
  let let276 := (binrel% LE.le let12 let29)
  let let277 := (binrel% LE.le let1 ox5f0)
  let let278 := (binrel% LE.le ox5f2 let2)
  let let279 := (binrel% LE.le ox5f0 let2)
  let let280 := (binrel% HMul.hMul ox5f2 let4)
  let let281 := (Eq let23 let138)
  let let282 := (binrel% LE.le let2 sx5f2)
  let let283 := (binrel% LE.le v2 let42)
  let let284 := (binrel% LE.le let2 sx5f0)
  let let285 := (Neg.neg sx5f0)
  let let286 := (binrel% HAdd.hAdd let280 (binrel% HAdd.hAdd let240 (binrel% HAdd.hAdd sx5f3 (binrel% HAdd.hAdd ox5f3 (binrel% HAdd.hAdd let259 (binrel% HAdd.hAdd let285 (binrel% HAdd.hAdd let232 let258)))))))
  let let287 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let280 let240) sx5f3) ox5f3) let259) let285) let232) let258)
  let let288 := (binrel% LE.le let1 let81)
  let let289 := (Eq let76 let78)
  let let290 := (binrel% HAdd.hAdd let264 let252)
  let let291 := (binrel% HAdd.hAdd let264 let253)
  let let292 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let37 v1))
  let let293 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let72 let103))))
  let let294 := (binrel% HAdd.hAdd let80 let293)
  let let295 := (binrel% LT.lt let29 let12)
  let let296 := (binrel% LE.le ox5f3 let2)
  let let297 := (binrel% HMul.hMul sx5f2 let43)
  let let298 := (binrel% GT.gt let150 let1)
  let let299 := (binrel% LE.le let1 let65)
  let let300 := (binrel% HAdd.hAdd let90 v2)
  let let301 := (binrel% LE.le let1 sx5f0)
  let let302 := (binrel% LE.le let1 sx5f2)
  let let303 := (binrel% HMul.hMul sx5f1 let89)
  let let304 := (binrel% LE.le let4 sx5f0)
  let let305 := (Eq let76 let142)
  let let306 := (Not let76)
  let let307 := (Not let306)
  let let308 := (binrel% LE.le let75 let12)
  let let309 := (binrel% HMul.hMul ox5f0 let13)
  let let310 := (binrel% HMul.hMul sx5f0 let13)
  let let311 := (binrel% LE.le let12 let104)
  let let312 := (binrel% HMul.hMul sx5f1 let13)
  let let313 := (binrel% HAdd.hAdd let310 let309)
  let let314 := (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let250 (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let312 let313))))
  let let315 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd let249 let250) v0) let312) let310) let309)
  let let316 := (Eq let7 let7)
  let let317 := (binrel% LE.le let12 let81)
  let let318 := (binrel% HMul.hMul ox5f1 let13)
  let let319 := (binrel% HAdd.hAdd let318 let314)
  let let320 := (binrel% HAdd.hAdd let318 let315)
  let let321 := (binrel% LE.le let1 ox5f1)
  let let322 := (binrel% LE.le ox5f1 let2)
  let let323 := (binrel% LT.lt let81 let12)
  let let324 := (binrel% LE.le v2 let19)
  let let325 := (binrel% LE.le let2 sx5f1)
  let let326 := (binrel% LE.le let19 let91)
  let let327 := (binrel% GE.ge let173 let173)
  let let328 := (binrel% LE.le let1 sx5f1)
  let let329 := (binrel% LE.le let19 sx5f1)
  let let330 := (binrel% LE.le let1 v1)
  let let331 := (Not let99)
  let let332 := (Not let331)
  let let333 := (binrel% LE.le let98 let12)
  let let334 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd v0 let74))
  let let335 := (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd v0 let310))
  let let336 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let249 v0) let310)
  let let337 := (binrel% HAdd.hAdd let21 (binrel% HAdd.hAdd v0 let103))
  let let338 := (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd v0 let313))
  let let339 := (binrel% HAdd.hAdd let336 let309)
  let let340 := (binrel% LT.lt let6 let1)
  let let341 := (binrel% HMul.hMul sx5f0 let43)
  let let342 := (binrel% LE.le let4 sx5f2)
  let let343 := (binrel% LE.le let1 v2)
  let let344 := (binrel% LE.le let12 v1)
  let let345 := (binrel% LE.le let12 v0)
  let let346 := (Eq let287 let1)
  let let347 := (Not let346)
  let let348 := (binrel% LE.le let253 let12)
  let let349 := (Not let348)
  let let350 := (Eq let349 let138)
  let let351 := (binrel% LE.le let12 let291)
  let let352 := (Not let351)
  let let353 := (binrel% LE.le let1 let291)
  let let354 := (binrel% LE.le let218 let42)
  let let355 := (Not let354)
  let let356 := (Eq let207 let355)
  let let357 := (binrel% LE.le let42 let245)
  let let358 := (Not let357)
  let let359 := (binrel% LE.le let1 let245)
  let let360 := (binrel% LE.le let4 sx5f3)
  let let361 := (Not let360)
  let let362 := (binrel% LE.le let217 let12)
  let let363 := (Not let362)
  let let364 := (Eq let363 let140)
  let let365 := (binrel% LE.le let12 let218)
  let let366 := (Not let365)
  let let367 := (binrel% LE.le let1 let218)
  let let368 := (Not let283)
  let let369 := (Eq let282 let368)
  let let370 := (binrel% HAdd.hAdd let297 v2)
  let let371 := (binrel% LE.le let42 let370)
  let let372 := (Not let371)
  let let373 := (binrel% LE.le let1 let370)
  let let374 := (Not let342)
  let let375 := (binrel% LE.le let315 let12)
  let let376 := (Not let375)
  let let377 := (Eq let376 let142)
  let let378 := (binrel% LE.le let12 let320)
  let let379 := (Not let378)
  let let380 := (binrel% LE.le let1 let320)
  let let381 := (Not let324)
  let let382 := (Eq let325 let381)
  let let383 := (binrel% HAdd.hAdd let303 v2)
  let let384 := (binrel% LE.le let19 let383)
  let let385 := (Not let384)
  let let386 := (binrel% LE.le let1 let383)
  let let387 := (Not let329)
  let let388 := (binrel% LE.le let336 let12)
  let let389 := (Not let388)
  let let390 := (Eq let389 let144)
  let let391 := (binrel% LE.le let12 let339)
  let let392 := (Not let391)
  let let393 := (binrel% LE.le let1 let339)
  let let394 := (Not let198)
  let let395 := (Eq let284 let394)
  let let396 := (binrel% HAdd.hAdd let341 v1)
  let let397 := (binrel% LE.le let42 let396)
  let let398 := (Not let397)
  let let399 := (binrel% LE.le let1 let396)
  let let400 := (Not let304)
  let let401 := (Not let263)
  let let402 := (Not let344)
  let let403 := (Not let345)
  let let404 := (And let202 (And let403 (And let330 (And let402 (And let343 (And let401 (And let400 (And let301 (And let399 (And let398 (And let395 (And let277 (And let279 (And let393 (And let392 (And let390 (And let387 (And let328 (And let386 (And let385 (And let382 (And let321 (And let322 (And let380 (And let379 (And let377 (And let374 (And let302 (And let373 (And let372 (And let369 (And let241 (And let278 (And let367 (And let366 (And let364 (And let361 (And let267 (And let359 (And let358 (And let356 (And let257 (And let296 (And let353 (And let352 (And let350 let347))))))))))))))))))))))))))))))))))))))))))))))
  let let405 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And let202 let403) (And let330 let402)) (And let343 let401)) (And let400 let301)) (And let399 let398)) let395) (And let277 let279)) (And let393 let392)) let390) (And let387 let328)) (And let386 let385)) let382) (And let321 let322)) (And let380 let379)) let377) (And let374 let302)) (And let373 let372)) let369) (And let241 let278)) (And let367 let366)) let364) (And let361 let267)) (And let359 let358)) let356) (And let257 let296)) (And let353 let352)) let350) let347)
  let let406 := (Eq let82 let82)
  let let407 := (Not True)
  let let408 := (And let128 (And let127 (And let125 (And let124 (And let122 (And let121 (And let119 (And let117 (And let116 (And let115 (And let111 (And let108 (And let100 (And let107 (And let106 (And let254 (And let97 (And let95 (And let94 (And let93 (And let88 (And let85 (And let77 (And let84 (And let83 (And let289 (And let71 (And let69 (And let68 (And let67 (And let63 (And let60 (And let54 (And let59 (And let58 (And let261 (And let51 (And let49 (And let48 (And let47 (And let41 (And let33 (And let24 (And let32 (And let31 (And let262 let10))))))))))))))))))))))))))))))))))))))))))))))
  let let409 := (Eq And And)
  let let410 := (Not let32)
  let let411 := (Or let410 (Or let7 let82))
  let let412 := (Or let410 (Or let229 let269))
  let let413 := (Eq Or Or)
  let let414 := (Not let323)
  let let415 := (binrel% LE.le let186 let152)
  let let416 := (And let183 let32)
  let let417 := (binrel% LE.le let187 let184)
  let let418 := (binrel% LE.le let6 let3)
  let let419 := (And let182 let418)
  let let420 := (binrel% LT.lt let188 let154)
  let let421 := (And let298 let323)
  let let422 := (Or let8 let228)
  let let423 := (Or let179 let228)
  let let424 := (Not let84)
  let let425 := (Or let424 (Or let9 let30))
  let let426 := (Or let424 (Or let9 let176))
  let let427 := (Not let295)
  let let428 := (binrel% LE.le let156 let152)
  let let429 := (And let183 let84)
  let let430 := (binrel% LE.le let157 let153)
  let let431 := (And let149 let8)
  let let432 := (binrel% LT.lt let158 let154)
  let let433 := (And let298 let295)
fun lean_h0 : (Eq let146 let129) => -- PREPROCESS
fun lean_r1 : (Eq let149 True) => -- EVALUATE
fun lean_r2 : (Eq let162 let161) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let157 let164) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let156 let172) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let175 let173) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let153 let148) => -- THEORY_REWRITE_ARITH
fun lean_r7 : let177 => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let178 True) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let181 let180) => -- THEORY_REWRITE_BOOL
fun lean_r10 : let181 => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let182 True) => -- EVALUATE
fun lean_r12 : (Eq let183 True) => -- EVALUATE
fun lean_r13 : (Eq let192 let191) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let188 let193) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let196 let173) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let198 let197) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let199 let57) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let200 let141) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let201 let48) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let202 let128) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let203 let46) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let204 let65) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let205 let37) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let206 let113) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let207 let40) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let208 let116) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let210 let209) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let177 let211) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let213 let29) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let218 let216) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let219 let66) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let221 let86) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq let222 let114) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let215 let36) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let214 let35) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let224 let223) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let225 let39) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq let187 let195) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let226 let59) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let186 let194) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let227 let107) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let231 let230) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let232 let134) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let233 let38) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let236 let235) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let217 let237) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let238 let45) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let239 let94) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let240 let131) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let241 let60) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let242 let14) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let245 let244) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let246 let145) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let247 let53) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq let253 let252) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let102 let254) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq let250 let20) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let255 let136) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let256 let173) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let257 let33) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let258 let132) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let259 let133) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let260 True) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq let56 let261) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq let26 let262) => -- THEORY_REWRITE_BOOL
fun lean_r66 : (Eq let263 let120) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let264 let27) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let266 let23) => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq let267 let49) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let249 let21) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let268 let32) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let271 let270) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let273 let61) => -- THEORY_REWRITE_BOOL
fun lean_r74 : (Eq let274 let109) => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq let275 let265) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let276 let30) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let212 let22) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let277 let108) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let278 let54) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let279 let100) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let251 let18) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let280 let130) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let281 let139) => -- THEORY_REWRITE_BOOL
fun lean_r84 : (Eq let282 let62) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let283 let272) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let284 let110) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let243 let44) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let287 let286) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let288 let84) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let79 let289) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq let248 let17) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let291 let290) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let292 let52) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let285 let234) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let294 let81) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let295 let31) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let296 let24) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let297 let64) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let298 True) => -- EVALUATE
fun lean_r100 : (Eq let299 let68) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let300 let91) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let301 let117) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let302 let69) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let158 let174) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let303 let90) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let304 let118) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let305 let143) => -- THEORY_REWRITE_BOOL
fun lean_r108 : (Eq let307 let76) => -- THEORY_REWRITE_BOOL
fun lean_r109 : (Eq let308 let306) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let293 let75) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let184 let148) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let309 let73) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let310 let74) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let311 let105) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let312 let72) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let315 let314) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let316 True) => -- THEORY_REWRITE_BOOL
fun lean_r118 : (Eq let317 let82) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let318 let80) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let320 let319) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let321 let85) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let322 let77) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let323 let83) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let324 let220) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let325 let87) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let326 let92) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let327 True) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let328 let95) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let329 let96) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq let330 let125) => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq let332 let99) => -- THEORY_REWRITE_BOOL
fun lean_r132 : (Eq let333 let331) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let334 let98) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let336 let335) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let337 let104) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let339 let338) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let340 let228) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let341 let112) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let342 let70) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let343 let122) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let344 let123) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq let345 let126) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let405 let404) => -- THEORY_REWRITE_BOOL
fun lean_r144 : (Eq let406 True) => -- THEORY_REWRITE_BOOL
fun lean_r145 : let271 => -- THEORY_REWRITE_BOOL
fun lean_r146 : let231 => -- THEORY_REWRITE_BOOL
fun lean_r147 : (Eq let407 False) => -- THEORY_REWRITE_BOOL
fun lean_r148 : (Eq let360 let50) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let152 let173) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let154 let147) => -- THEORY_REWRITE_ARITH
fun lean_a151 : let405 => by
have lean_s0 : (Or let424 (Or let9 (Or let176 False))) :=
  (scope (fun lean_a152 : let84 =>
    (scope (fun lean_a153 : let8 =>
      (scope (fun lean_a154 : let31 =>
        have lean_s0 : (Eq let31 let295) := by timed Eq.symm lean_r96
        have lean_s1 : let295 := by timed eqResolve lean_a154 lean_s0
        have lean_s2 : (Or let427 False) :=
          (scope (fun lean_a155 : let295 =>
            have lean_s2 : let298 := by timed trueElim lean_r99
            have lean_s3 : let433 := by timed And.intro lean_s2 lean_a155
            have lean_s4 : (Implies let433 let432) := by arithMulPos [let29, let12, let150], 0
            have lean_s5 : let432 := by timed modusPonens lean_s3 lean_s4
            have lean_s6 : let149 := by timed trueElim lean_r1
            have lean_s7 : let431 := by timed And.intro lean_s6 lean_a153
            have lean_s8 : (Implies let431 let430) := by arithMulNeg [let6, let2, let148], 3
            have lean_s9 : let430 := by timed modusPonens lean_s7 lean_s8
            have lean_s10 : let183 := by timed trueElim lean_r12
            have lean_s11 : let429 := by timed And.intro lean_s10 lean_a152
            have lean_s12 : (Implies let429 let428) := by arithMulNeg [let81, let1, let151], 3
            have lean_s13 : let428 := by timed modusPonens lean_s11 lean_s12
            have lean_s14 : let162 := by sumBounds [lean_s5, lean_s9, lean_s13]
            let lean_s15 := by timed congrHAdd lean_r3 lean_r4
            have lean_s16 : (Eq let159 let175) := by timed congrHAdd lean_r104 lean_s15
            have lean_s17 : (Eq let159 let173) := by timed Eq.trans lean_s16 lean_r5
            let lean_s18 := by timed flipCongrArg lean_s17 [GE.ge]
            let lean_s19 := by timed congrHAdd lean_r6 lean_r149
            have lean_s20 : (Eq let155 let256) := by timed congrHAdd lean_r150 lean_s19
            have lean_s21 : (Eq let155 let173) := by timed Eq.trans lean_s20 lean_r59
            have lean_s22 : (Eq let160 let327) := by timed congr lean_s18 lean_s21
            have lean_s23 : (Eq let160 True) := by timed Eq.trans lean_s22 lean_r127
            have lean_s24 : (Eq let161 let407) := by timed flipCongrArg lean_s23 [Not]
            have lean_s25 : (Eq let161 False) := by timed Eq.trans lean_s24 lean_r147
            have lean_s26 : (Eq let162 False) := by timed Eq.trans lean_r2 lean_s25
            show False from by timed eqResolve lean_s14 lean_s26
          ))
        have lean_s3 : let427 := by liftOrNToNeg lean_s2
        have lean_s4 : (Eq let427 let176) := by timed flipCongrArg lean_r96 [Not]
        have lean_s5 : (Eq let427 let30) := by timed Eq.trans lean_s4 lean_r7
        have lean_s6 : let30 := by timed eqResolve lean_s3 lean_s5
        have lean_s7 : (Eq let30 let427) := by timed Eq.symm lean_s5
        have lean_s8 : let427 := by timed eqResolve lean_s6 lean_s7
        show False from by timed contradiction lean_s1 lean_s8
  ))))))
have lean_s1 : (Not (And let84 (And let8 let31))) := by liftOrNToNeg lean_s0
have lean_s2 : let426 := by timed flipNotAnd lean_s1 [let84, let8, let31]
have lean_s3 : let413 := by timed rfl
have lean_s4 : (Eq let424 let424) := by timed rfl
let lean_s5 := by timed congr lean_s3 lean_s4
have lean_s6 : (Eq let9 let9) := by timed rfl
let lean_s7 := by timed congr lean_s3 lean_s6
have lean_s8 : let178 := by timed rfl
let lean_s9 := by timed flipCongrArg lean_s8 [Eq]
have lean_s10 : (Eq let211 let178) := by timed congr lean_s9 lean_r7
have lean_s11 : (Eq let211 True) := by timed Eq.trans lean_s10 lean_r8
have lean_s12 : (Eq let177 True) := by timed Eq.trans lean_r28 lean_s11
have lean_s13 : let177 := by timed trueElim lean_s12
let lean_s14 := by timed congr lean_s7 lean_s13
have lean_s15 : (Eq let426 let425) := by timed congr lean_s5 lean_s14
have lean_s16 : let425 := by timed eqResolve lean_s2 lean_s15
have lean_s17 : (Or let30 (Or let9 let424)) := by permutateOr lean_s16, [2, 1, 0], (- 1)
have lean_s18 : let409 := by timed rfl
let lean_s19 := by timed congr lean_s18 lean_r20
have lean_s20 : (Eq let403 let127) := by timed flipCongrArg lean_r142 [Not]
let lean_s21 := by timed congr lean_s18 lean_s20
let lean_s22 := by timed congr lean_s18 lean_r130
have lean_s23 : (Eq let402 let124) := by timed flipCongrArg lean_r141 [Not]
let lean_s24 := by timed congr lean_s18 lean_s23
let lean_s25 := by timed congr lean_s18 lean_r140
have lean_s26 : (Eq let401 let121) := by timed flipCongrArg lean_r66 [Not]
let lean_s27 := by timed congr lean_s18 lean_s26
have lean_s28 : (Eq let400 let119) := by timed flipCongrArg lean_r106 [Not]
let lean_s29 := by timed congr lean_s18 lean_s28
let lean_s30 := by timed congr lean_s18 lean_r102
have lean_s31 : (Eq let1 let1) := by timed rfl
let lean_s32 := by timed flipCongrArg lean_s31 [LE.le]
let lean_s33 := by timed flipCongrArg lean_r138 [HAdd.hAdd]
have lean_s34 : (Eq v1 v1) := by timed rfl
have lean_s35 : (Eq let396 let206) := by timed congr lean_s33 lean_s34
have lean_s36 : (Eq let396 let113) := by timed Eq.trans lean_s35 lean_r24
have lean_s37 : (Eq let399 let208) := by timed congr lean_s32 lean_s36
have lean_s38 : (Eq let399 let116) := by timed Eq.trans lean_s37 lean_r26
let lean_s39 := by timed congr lean_s18 lean_s38
have lean_s40 : (Eq let42 let42) := by timed rfl
let lean_s41 := by timed flipCongrArg lean_s40 [LE.le]
have lean_s42 : (Eq let397 let222) := by timed congr lean_s41 lean_s36
have lean_s43 : (Eq let397 let114) := by timed Eq.trans lean_s42 lean_r33
have lean_s44 : (Eq let398 let115) := by timed flipCongrArg lean_s43 [Not]
let lean_s45 := by timed congr lean_s18 lean_s44
let lean_s46 := by timed flipCongrArg lean_r86 [Eq]
have lean_s47 : (Eq let394 let274) := by timed flipCongrArg lean_r16 [Not]
have lean_s48 : (Eq let394 let109) := by timed Eq.trans lean_s47 lean_r74
have lean_s49 : (Eq let395 let111) := by timed congr lean_s46 lean_s48
let lean_s50 := by timed congr lean_s18 lean_s49
let lean_s51 := by timed congr lean_s18 lean_r78
let lean_s52 := by timed congr lean_s18 lean_r80
let lean_s53 := by timed flipCongrArg lean_s31 [LE.le]
have lean_s54 : (Eq v0 v0) := by timed rfl
let lean_s55 := by timed congrHAdd lean_r113 lean_r112
let lean_s56 := by timed congrHAdd lean_s54 lean_s55
have lean_s57 : (Eq let338 let337) := by timed congrHAdd lean_r70 lean_s56
have lean_s58 : (Eq let338 let104) := by timed Eq.trans lean_s57 lean_r135
have lean_s59 : (Eq let339 let104) := by timed Eq.trans lean_r136 lean_s58
have lean_s60 : (Eq let393 let227) := by timed congr lean_s53 lean_s59
have lean_s61 : (Eq let393 let107) := by timed Eq.trans lean_s60 lean_r41
let lean_s62 := by timed congr lean_s18 lean_s61
have lean_s63 : (Eq let12 let12) := by timed rfl
let lean_s64 := by timed flipCongrArg lean_s63 [LE.le]
have lean_s65 : (Eq let391 let311) := by timed congr lean_s64 lean_s59
have lean_s66 : (Eq let391 let105) := by timed Eq.trans lean_s65 lean_r114
have lean_s67 : (Eq let392 let106) := by timed flipCongrArg lean_s66 [Not]
let lean_s68 := by timed congr lean_s18 lean_s67
let lean_s69 := by timed congrHAdd lean_s54 lean_r113
have lean_s70 : (Eq let335 let334) := by timed congrHAdd lean_r70 lean_s69
have lean_s71 : (Eq let335 let98) := by timed Eq.trans lean_s70 lean_r133
have lean_s72 : (Eq let336 let98) := by timed Eq.trans lean_r134 lean_s71
let lean_s73 := by timed flipCongrArg lean_s72 [LE.le]
have lean_s74 : (Eq let388 let333) := by timed congr lean_s73 lean_s63
have lean_s75 : (Eq let388 let331) := by timed Eq.trans lean_s74 lean_r132
have lean_s76 : (Eq let389 let332) := by timed flipCongrArg lean_s75 [Not]
have lean_s77 : (Eq let389 let99) := by timed Eq.trans lean_s76 lean_r131
let lean_s78 := by timed flipCongrArg lean_s77 [Eq]
have lean_s79 : (Eq let144 let144) := by timed rfl
have lean_s80 : (Eq let390 let246) := by timed congr lean_s78 lean_s79
have lean_s81 : (Eq let390 let145) := by timed Eq.trans lean_s80 lean_r53
let lean_s82 := by timed congr lean_s18 lean_s81
have lean_s83 : (Eq let387 let97) := by timed flipCongrArg lean_r129 [Not]
let lean_s84 := by timed congr lean_s18 lean_s83
let lean_s85 := by timed congr lean_s18 lean_r128
let lean_s86 := by timed flipCongrArg lean_s31 [LE.le]
let lean_s87 := by timed flipCongrArg lean_r105 [HAdd.hAdd]
have lean_s88 : (Eq v2 v2) := by timed rfl
have lean_s89 : (Eq let383 let300) := by timed congr lean_s87 lean_s88
have lean_s90 : (Eq let383 let91) := by timed Eq.trans lean_s89 lean_r101
have lean_s91 : (Eq let386 let239) := by timed congr lean_s86 lean_s90
have lean_s92 : (Eq let386 let94) := by timed Eq.trans lean_s91 lean_r48
let lean_s93 := by timed congr lean_s18 lean_s92
have lean_s94 : (Eq let19 let19) := by timed rfl
let lean_s95 := by timed flipCongrArg lean_s94 [LE.le]
have lean_s96 : (Eq let384 let326) := by timed congr lean_s95 lean_s90
have lean_s97 : (Eq let384 let92) := by timed Eq.trans lean_s96 lean_r126
have lean_s98 : (Eq let385 let93) := by timed flipCongrArg lean_s97 [Not]
let lean_s99 := by timed congr lean_s18 lean_s98
let lean_s100 := by timed flipCongrArg lean_r125 [Eq]
have lean_s101 : (Eq let381 let221) := by timed flipCongrArg lean_r124 [Not]
have lean_s102 : (Eq let381 let86) := by timed Eq.trans lean_s101 lean_r32
have lean_s103 : (Eq let382 let88) := by timed congr lean_s100 lean_s102
let lean_s104 := by timed congr lean_s18 lean_s103
let lean_s105 := by timed congr lean_s18 lean_r121
let lean_s106 := by timed congr lean_s18 lean_r122
let lean_s107 := by timed flipCongrArg lean_s31 [LE.le]
let lean_s108 := by timed congrHAdd lean_r113 lean_r112
let lean_s109 := by timed congrHAdd lean_r115 lean_s108
let lean_s110 := by timed congrHAdd lean_s54 lean_s109
let lean_s111 := by timed congrHAdd lean_r57 lean_s110
let lean_s112 := by timed congrHAdd lean_r70 lean_s111
have lean_s113 : (Eq let319 let294) := by timed congrHAdd lean_r119 lean_s112
have lean_s114 : (Eq let319 let81) := by timed Eq.trans lean_s113 lean_r95
have lean_s115 : (Eq let320 let81) := by timed Eq.trans lean_r120 lean_s114
have lean_s116 : (Eq let380 let288) := by timed congr lean_s107 lean_s115
have lean_s117 : (Eq let380 let84) := by timed Eq.trans lean_s116 lean_r89
let lean_s118 := by timed congr lean_s18 lean_s117
let lean_s119 := by timed flipCongrArg lean_s63 [LE.le]
have lean_s120 : (Eq let378 let317) := by timed congr lean_s119 lean_s115
have lean_s121 : (Eq let378 let82) := by timed Eq.trans lean_s120 lean_r118
have lean_s122 : (Eq let379 let83) := by timed flipCongrArg lean_s121 [Not]
let lean_s123 := by timed congr lean_s18 lean_s122
let lean_s124 := by timed congrHAdd lean_r113 lean_r112
let lean_s125 := by timed congrHAdd lean_r115 lean_s124
let lean_s126 := by timed congrHAdd lean_s54 lean_s125
let lean_s127 := by timed congrHAdd lean_r57 lean_s126
have lean_s128 : (Eq let314 let293) := by timed congrHAdd lean_r70 lean_s127
have lean_s129 : (Eq let314 let75) := by timed Eq.trans lean_s128 lean_r110
have lean_s130 : (Eq let315 let75) := by timed Eq.trans lean_r116 lean_s129
let lean_s131 := by timed flipCongrArg lean_s130 [LE.le]
have lean_s132 : (Eq let375 let308) := by timed congr lean_s131 lean_s63
have lean_s133 : (Eq let375 let306) := by timed Eq.trans lean_s132 lean_r109
have lean_s134 : (Eq let376 let307) := by timed flipCongrArg lean_s133 [Not]
have lean_s135 : (Eq let376 let76) := by timed Eq.trans lean_s134 lean_r108
let lean_s136 := by timed flipCongrArg lean_s135 [Eq]
have lean_s137 : (Eq let142 let142) := by timed rfl
have lean_s138 : (Eq let377 let305) := by timed congr lean_s136 lean_s137
have lean_s139 : (Eq let377 let143) := by timed Eq.trans lean_s138 lean_r107
let lean_s140 := by timed congr lean_s18 lean_s139
have lean_s141 : (Eq let374 let71) := by timed flipCongrArg lean_r139 [Not]
let lean_s142 := by timed congr lean_s18 lean_s141
let lean_s143 := by timed congr lean_s18 lean_r103
let lean_s144 := by timed flipCongrArg lean_s31 [LE.le]
let lean_s145 := by timed flipCongrArg lean_r98 [HAdd.hAdd]
have lean_s146 : (Eq let370 let204) := by timed congr lean_s145 lean_s88
have lean_s147 : (Eq let370 let65) := by timed Eq.trans lean_s146 lean_r22
have lean_s148 : (Eq let373 let299) := by timed congr lean_s144 lean_s147
have lean_s149 : (Eq let373 let68) := by timed Eq.trans lean_s148 lean_r100
let lean_s150 := by timed congr lean_s18 lean_s149
let lean_s151 := by timed flipCongrArg lean_s40 [LE.le]
have lean_s152 : (Eq let371 let219) := by timed congr lean_s151 lean_s147
have lean_s153 : (Eq let371 let66) := by timed Eq.trans lean_s152 lean_r31
have lean_s154 : (Eq let372 let67) := by timed flipCongrArg lean_s153 [Not]
let lean_s155 := by timed congr lean_s18 lean_s154
let lean_s156 := by timed flipCongrArg lean_r84 [Eq]
have lean_s157 : (Eq let368 let273) := by timed flipCongrArg lean_r85 [Not]
have lean_s158 : (Eq let368 let61) := by timed Eq.trans lean_s157 lean_r73
have lean_s159 : (Eq let369 let63) := by timed congr lean_s156 lean_s158
let lean_s160 := by timed congr lean_s18 lean_s159
let lean_s161 := by timed congr lean_s18 lean_r50
let lean_s162 := by timed congr lean_s18 lean_r79
let lean_s163 := by timed flipCongrArg lean_s31 [LE.le]
let lean_s164 := by timed congrHAdd lean_s34 lean_r35
let lean_s165 := by timed congrHAdd lean_r23 lean_s164
have lean_s166 : (Eq let216 let233) := by timed congrHAdd lean_r34 lean_s165
have lean_s167 : (Eq let216 let38) := by timed Eq.trans lean_s166 lean_r44
have lean_s168 : (Eq let218 let38) := by timed Eq.trans lean_r30 lean_s167
have lean_s169 : (Eq let367 let226) := by timed congr lean_s163 lean_s168
have lean_s170 : (Eq let367 let59) := by timed Eq.trans lean_s169 lean_r39
let lean_s171 := by timed congr lean_s18 lean_s170
let lean_s172 := by timed flipCongrArg lean_s63 [LE.le]
have lean_s173 : (Eq let365 let199) := by timed congr lean_s172 lean_s168
have lean_s174 : (Eq let365 let57) := by timed Eq.trans lean_s173 lean_r17
have lean_s175 : (Eq let366 let58) := by timed flipCongrArg lean_s174 [Not]
let lean_s176 := by timed congr lean_s18 lean_s175
let lean_s177 := by timed congrHAdd lean_r23 lean_s34
have lean_s178 : (Eq let237 let292) := by timed congrHAdd lean_r34 lean_s177
have lean_s179 : (Eq let237 let52) := by timed Eq.trans lean_s178 lean_r93
have lean_s180 : (Eq let217 let52) := by timed Eq.trans lean_r46 lean_s179
let lean_s181 := by timed flipCongrArg lean_s180 [LE.le]
have lean_s182 : (Eq let362 let210) := by timed congr lean_s181 lean_s63
have lean_s183 : (Eq let362 let209) := by timed Eq.trans lean_s182 lean_r27
have lean_s184 : (Eq let363 let247) := by timed flipCongrArg lean_s183 [Not]
have lean_s185 : (Eq let363 let53) := by timed Eq.trans lean_s184 lean_r54
let lean_s186 := by timed flipCongrArg lean_s185 [Eq]
have lean_s187 : (Eq let140 let140) := by timed rfl
have lean_s188 : (Eq let364 let200) := by timed congr lean_s186 lean_s187
have lean_s189 : (Eq let364 let141) := by timed Eq.trans lean_s188 lean_r18
let lean_s190 := by timed congr lean_s18 lean_s189
have lean_s191 : (Eq let361 let51) := by timed flipCongrArg lean_r148 [Not]
let lean_s192 := by timed congr lean_s18 lean_s191
let lean_s193 := by timed congr lean_s18 lean_r69
let lean_s194 := by timed flipCongrArg lean_s31 [LE.le]
let lean_s195 := by timed congrHAdd lean_s34 lean_r35
let lean_s196 := by timed congrHAdd lean_r23 lean_s195
let lean_s197 := by timed congrHAdd lean_r34 lean_s196
have lean_s198 : (Eq let244 let238) := by timed congrHAdd lean_r87 lean_s197
have lean_s199 : (Eq let244 let45) := by timed Eq.trans lean_s198 lean_r47
have lean_s200 : (Eq let245 let45) := by timed Eq.trans lean_r52 lean_s199
have lean_s201 : (Eq let359 let201) := by timed congr lean_s194 lean_s200
have lean_s202 : (Eq let359 let48) := by timed Eq.trans lean_s201 lean_r19
let lean_s203 := by timed congr lean_s18 lean_s202
let lean_s204 := by timed flipCongrArg lean_s40 [LE.le]
have lean_s205 : (Eq let357 let203) := by timed congr lean_s204 lean_s200
have lean_s206 : (Eq let357 let46) := by timed Eq.trans lean_s205 lean_r21
have lean_s207 : (Eq let358 let47) := by timed flipCongrArg lean_s206 [Not]
let lean_s208 := by timed congr lean_s18 lean_s207
let lean_s209 := by timed flipCongrArg lean_r25 [Eq]
let lean_s210 := by timed flipCongrArg lean_s168 [LE.le]
have lean_s211 : (Eq let354 let224) := by timed congr lean_s210 lean_s40
have lean_s212 : (Eq let354 let223) := by timed Eq.trans lean_s211 lean_r36
have lean_s213 : (Eq let355 let225) := by timed flipCongrArg lean_s212 [Not]
have lean_s214 : (Eq let355 let39) := by timed Eq.trans lean_s213 lean_r37
have lean_s215 : (Eq let356 let41) := by timed congr lean_s209 lean_s214
let lean_s216 := by timed congr lean_s18 lean_s215
let lean_s217 := by timed congr lean_s18 lean_r60
let lean_s218 := by timed congr lean_s18 lean_r97
let lean_s219 := by timed flipCongrArg lean_s31 [LE.le]
let lean_s220 := by timed congrHAdd lean_r51 lean_s54
let lean_s221 := by timed congrHAdd lean_r91 lean_s220
let lean_s222 := by timed congrHAdd lean_r70 lean_s221
let lean_s223 := by timed congrHAdd lean_r57 lean_s222
let lean_s224 := by timed congrHAdd lean_r81 lean_s223
have lean_s225 : (Eq let290 let213) := by timed congrHAdd lean_r67 lean_s224
have lean_s226 : (Eq let290 let29) := by timed Eq.trans lean_s225 lean_r29
have lean_s227 : (Eq let291 let29) := by timed Eq.trans lean_r92 lean_s226
have lean_s228 : (Eq let353 let268) := by timed congr lean_s219 lean_s227
have lean_s229 : (Eq let353 let32) := by timed Eq.trans lean_s228 lean_r71
let lean_s230 := by timed congr lean_s18 lean_s229
let lean_s231 := by timed flipCongrArg lean_s63 [LE.le]
have lean_s232 : (Eq let351 let276) := by timed congr lean_s231 lean_s227
have lean_s233 : (Eq let351 let30) := by timed Eq.trans lean_s232 lean_r76
have lean_s234 : (Eq let352 let31) := by timed flipCongrArg lean_s233 [Not]
let lean_s235 := by timed congr lean_s18 lean_s234
let lean_s236 := by timed congrHAdd lean_r51 lean_s54
let lean_s237 := by timed congrHAdd lean_r91 lean_s236
let lean_s238 := by timed congrHAdd lean_r70 lean_s237
let lean_s239 := by timed congrHAdd lean_r57 lean_s238
have lean_s240 : (Eq let252 let212) := by timed congrHAdd lean_r81 lean_s239
have lean_s241 : (Eq let252 let22) := by timed Eq.trans lean_s240 lean_r77
have lean_s242 : (Eq let253 let22) := by timed Eq.trans lean_r55 lean_s241
let lean_s243 := by timed flipCongrArg lean_s242 [LE.le]
have lean_s244 : (Eq let348 let275) := by timed congr lean_s243 lean_s63
have lean_s245 : (Eq let348 let265) := by timed Eq.trans lean_s244 lean_r75
have lean_s246 : (Eq let349 let266) := by timed flipCongrArg lean_s245 [Not]
have lean_s247 : (Eq let349 let23) := by timed Eq.trans lean_s246 lean_r68
let lean_s248 := by timed flipCongrArg lean_s247 [Eq]
have lean_s249 : (Eq let138 let138) := by timed rfl
have lean_s250 : (Eq let350 let281) := by timed congr lean_s248 lean_s249
have lean_s251 : (Eq let350 let139) := by timed Eq.trans lean_s250 lean_r83
let lean_s252 := by timed congr lean_s18 lean_s251
have lean_s253 : (Eq sx5f3 sx5f3) := by timed rfl
have lean_s254 : (Eq ox5f3 ox5f3) := by timed rfl
let lean_s255 := by timed congrHAdd lean_r43 lean_r61
let lean_s256 := by timed congrHAdd lean_r94 lean_s255
let lean_s257 := by timed congrHAdd lean_r62 lean_s256
let lean_s258 := by timed congrHAdd lean_s254 lean_s257
let lean_s259 := by timed congrHAdd lean_s253 lean_s258
let lean_s260 := by timed congrHAdd lean_r49 lean_s259
have lean_s261 : (Eq let286 let236) := by timed congrHAdd lean_r82 lean_s260
have lean_s262 : (Eq let286 let235) := by timed Eq.trans lean_s261 lean_r45
have lean_s263 : (Eq let287 let235) := by timed Eq.trans lean_r88 lean_s262
let lean_s264 := by timed flipCongrArg lean_s263 [Eq]
have lean_s265 : (Eq let346 let255) := by timed congr lean_s264 lean_s31
have lean_s266 : (Eq let346 let136) := by timed Eq.trans lean_s265 lean_r58
have lean_s267 : (Eq let347 let137) := by timed flipCongrArg lean_s266 [Not]
let lean_s268 := by timed congr lean_s252 lean_s267
let lean_s269 := by timed congr lean_s235 lean_s268
let lean_s270 := by timed congr lean_s230 lean_s269
let lean_s271 := by timed congr lean_s218 lean_s270
let lean_s272 := by timed congr lean_s217 lean_s271
let lean_s273 := by timed congr lean_s216 lean_s272
let lean_s274 := by timed congr lean_s208 lean_s273
let lean_s275 := by timed congr lean_s203 lean_s274
let lean_s276 := by timed congr lean_s193 lean_s275
let lean_s277 := by timed congr lean_s192 lean_s276
let lean_s278 := by timed congr lean_s190 lean_s277
let lean_s279 := by timed congr lean_s176 lean_s278
let lean_s280 := by timed congr lean_s171 lean_s279
let lean_s281 := by timed congr lean_s162 lean_s280
let lean_s282 := by timed congr lean_s161 lean_s281
let lean_s283 := by timed congr lean_s160 lean_s282
let lean_s284 := by timed congr lean_s155 lean_s283
let lean_s285 := by timed congr lean_s150 lean_s284
let lean_s286 := by timed congr lean_s143 lean_s285
let lean_s287 := by timed congr lean_s142 lean_s286
let lean_s288 := by timed congr lean_s140 lean_s287
let lean_s289 := by timed congr lean_s123 lean_s288
let lean_s290 := by timed congr lean_s118 lean_s289
let lean_s291 := by timed congr lean_s106 lean_s290
let lean_s292 := by timed congr lean_s105 lean_s291
let lean_s293 := by timed congr lean_s104 lean_s292
let lean_s294 := by timed congr lean_s99 lean_s293
let lean_s295 := by timed congr lean_s93 lean_s294
let lean_s296 := by timed congr lean_s85 lean_s295
let lean_s297 := by timed congr lean_s84 lean_s296
let lean_s298 := by timed congr lean_s82 lean_s297
let lean_s299 := by timed congr lean_s68 lean_s298
let lean_s300 := by timed congr lean_s62 lean_s299
let lean_s301 := by timed congr lean_s52 lean_s300
let lean_s302 := by timed congr lean_s51 lean_s301
let lean_s303 := by timed congr lean_s50 lean_s302
let lean_s304 := by timed congr lean_s45 lean_s303
let lean_s305 := by timed congr lean_s39 lean_s304
let lean_s306 := by timed congr lean_s30 lean_s305
let lean_s307 := by timed congr lean_s29 lean_s306
let lean_s308 := by timed congr lean_s27 lean_s307
let lean_s309 := by timed congr lean_s25 lean_s308
let lean_s310 := by timed congr lean_s24 lean_s309
let lean_s311 := by timed congr lean_s22 lean_s310
let lean_s312 := by timed congr lean_s21 lean_s311
have lean_s313 : (Eq let404 let146) := by timed congr lean_s19 lean_s312
have lean_s314 : (Eq let405 let146) := by timed Eq.trans lean_r143 lean_s313
let lean_s315 := by timed Eq.trans lean_s314 lean_h0
have lean_s316 : let409 := by timed rfl
have lean_s317 : (Eq let128 let128) := by timed rfl
let lean_s318 := by timed congr lean_s316 lean_s317
have lean_s319 : (Eq let127 let127) := by timed rfl
let lean_s320 := by timed congr lean_s316 lean_s319
have lean_s321 : (Eq let125 let125) := by timed rfl
let lean_s322 := by timed congr lean_s316 lean_s321
have lean_s323 : (Eq let124 let124) := by timed rfl
let lean_s324 := by timed congr lean_s316 lean_s323
have lean_s325 : (Eq let122 let122) := by timed rfl
let lean_s326 := by timed congr lean_s316 lean_s325
have lean_s327 : (Eq let121 let121) := by timed rfl
let lean_s328 := by timed congr lean_s316 lean_s327
have lean_s329 : (Eq let119 let119) := by timed rfl
let lean_s330 := by timed congr lean_s316 lean_s329
have lean_s331 : (Eq let117 let117) := by timed rfl
let lean_s332 := by timed congr lean_s316 lean_s331
have lean_s333 : (Eq let116 let116) := by timed rfl
let lean_s334 := by timed congr lean_s316 lean_s333
have lean_s335 : (Eq let115 let115) := by timed rfl
let lean_s336 := by timed congr lean_s316 lean_s335
have lean_s337 : (Eq let111 let111) := by timed rfl
let lean_s338 := by timed congr lean_s316 lean_s337
have lean_s339 : (Eq let108 let108) := by timed rfl
let lean_s340 := by timed congr lean_s316 lean_s339
have lean_s341 : (Eq let100 let100) := by timed rfl
let lean_s342 := by timed congr lean_s316 lean_s341
have lean_s343 : (Eq let107 let107) := by timed rfl
let lean_s344 := by timed congr lean_s316 lean_s343
have lean_s345 : (Eq let106 let106) := by timed rfl
let lean_s346 := by timed congr lean_s316 lean_s345
let lean_s347 := by timed congr lean_s316 lean_r56
have lean_s348 : (Eq let97 let97) := by timed rfl
let lean_s349 := by timed congr lean_s316 lean_s348
have lean_s350 : (Eq let95 let95) := by timed rfl
let lean_s351 := by timed congr lean_s316 lean_s350
have lean_s352 : (Eq let94 let94) := by timed rfl
let lean_s353 := by timed congr lean_s316 lean_s352
have lean_s354 : (Eq let93 let93) := by timed rfl
let lean_s355 := by timed congr lean_s316 lean_s354
have lean_s356 : (Eq let88 let88) := by timed rfl
let lean_s357 := by timed congr lean_s316 lean_s356
have lean_s358 : (Eq let85 let85) := by timed rfl
let lean_s359 := by timed congr lean_s316 lean_s358
have lean_s360 : (Eq let77 let77) := by timed rfl
let lean_s361 := by timed congr lean_s316 lean_s360
have lean_s362 : (Eq let84 let84) := by timed rfl
let lean_s363 := by timed congr lean_s316 lean_s362
have lean_s364 : (Eq let83 let83) := by timed rfl
let lean_s365 := by timed congr lean_s316 lean_s364
let lean_s366 := by timed congr lean_s316 lean_r90
have lean_s367 : (Eq let71 let71) := by timed rfl
let lean_s368 := by timed congr lean_s316 lean_s367
have lean_s369 : (Eq let69 let69) := by timed rfl
let lean_s370 := by timed congr lean_s316 lean_s369
have lean_s371 : (Eq let68 let68) := by timed rfl
let lean_s372 := by timed congr lean_s316 lean_s371
have lean_s373 : (Eq let67 let67) := by timed rfl
let lean_s374 := by timed congr lean_s316 lean_s373
have lean_s375 : (Eq let63 let63) := by timed rfl
let lean_s376 := by timed congr lean_s316 lean_s375
have lean_s377 : (Eq let60 let60) := by timed rfl
let lean_s378 := by timed congr lean_s316 lean_s377
have lean_s379 : (Eq let54 let54) := by timed rfl
let lean_s380 := by timed congr lean_s316 lean_s379
have lean_s381 : (Eq let59 let59) := by timed rfl
let lean_s382 := by timed congr lean_s316 lean_s381
have lean_s383 : (Eq let58 let58) := by timed rfl
let lean_s384 := by timed congr lean_s316 lean_s383
let lean_s385 := by timed congr lean_s316 lean_r64
have lean_s386 : (Eq let51 let51) := by timed rfl
let lean_s387 := by timed congr lean_s316 lean_s386
have lean_s388 : (Eq let49 let49) := by timed rfl
let lean_s389 := by timed congr lean_s316 lean_s388
have lean_s390 : (Eq let48 let48) := by timed rfl
let lean_s391 := by timed congr lean_s316 lean_s390
have lean_s392 : (Eq let47 let47) := by timed rfl
let lean_s393 := by timed congr lean_s316 lean_s392
have lean_s394 : (Eq let41 let41) := by timed rfl
let lean_s395 := by timed congr lean_s316 lean_s394
have lean_s396 : (Eq let33 let33) := by timed rfl
let lean_s397 := by timed congr lean_s316 lean_s396
have lean_s398 : (Eq let24 let24) := by timed rfl
let lean_s399 := by timed congr lean_s316 lean_s398
have lean_s400 : (Eq let32 let32) := by timed rfl
let lean_s401 := by timed congr lean_s316 lean_s400
have lean_s402 : (Eq let31 let31) := by timed rfl
let lean_s403 := by timed congr lean_s316 lean_s402
let lean_s404 := by timed congr lean_s316 lean_r65
have lean_s405 : (Eq let10 let10) := by timed rfl
let lean_s406 := by timed congr lean_s404 lean_s405
let lean_s407 := by timed congr lean_s403 lean_s406
let lean_s408 := by timed congr lean_s401 lean_s407
let lean_s409 := by timed congr lean_s399 lean_s408
let lean_s410 := by timed congr lean_s397 lean_s409
let lean_s411 := by timed congr lean_s395 lean_s410
let lean_s412 := by timed congr lean_s393 lean_s411
let lean_s413 := by timed congr lean_s391 lean_s412
let lean_s414 := by timed congr lean_s389 lean_s413
let lean_s415 := by timed congr lean_s387 lean_s414
let lean_s416 := by timed congr lean_s385 lean_s415
let lean_s417 := by timed congr lean_s384 lean_s416
let lean_s418 := by timed congr lean_s382 lean_s417
let lean_s419 := by timed congr lean_s380 lean_s418
let lean_s420 := by timed congr lean_s378 lean_s419
let lean_s421 := by timed congr lean_s376 lean_s420
let lean_s422 := by timed congr lean_s374 lean_s421
let lean_s423 := by timed congr lean_s372 lean_s422
let lean_s424 := by timed congr lean_s370 lean_s423
let lean_s425 := by timed congr lean_s368 lean_s424
let lean_s426 := by timed congr lean_s366 lean_s425
let lean_s427 := by timed congr lean_s365 lean_s426
let lean_s428 := by timed congr lean_s363 lean_s427
let lean_s429 := by timed congr lean_s361 lean_s428
let lean_s430 := by timed congr lean_s359 lean_s429
let lean_s431 := by timed congr lean_s357 lean_s430
let lean_s432 := by timed congr lean_s355 lean_s431
let lean_s433 := by timed congr lean_s353 lean_s432
let lean_s434 := by timed congr lean_s351 lean_s433
let lean_s435 := by timed congr lean_s349 lean_s434
let lean_s436 := by timed congr lean_s347 lean_s435
let lean_s437 := by timed congr lean_s346 lean_s436
let lean_s438 := by timed congr lean_s344 lean_s437
let lean_s439 := by timed congr lean_s342 lean_s438
let lean_s440 := by timed congr lean_s340 lean_s439
let lean_s441 := by timed congr lean_s338 lean_s440
let lean_s442 := by timed congr lean_s336 lean_s441
let lean_s443 := by timed congr lean_s334 lean_s442
let lean_s444 := by timed congr lean_s332 lean_s443
let lean_s445 := by timed congr lean_s330 lean_s444
let lean_s446 := by timed congr lean_s328 lean_s445
let lean_s447 := by timed congr lean_s326 lean_s446
let lean_s448 := by timed congr lean_s324 lean_s447
let lean_s449 := by timed congr lean_s322 lean_s448
let lean_s450 := by timed congr lean_s320 lean_s449
have lean_s451 : (Eq let129 let408) := by timed congr lean_s318 lean_s450
have lean_s452 : (Eq let405 let408) := by timed Eq.trans lean_s315 lean_s451
have lean_s453 : let408 := by timed eqResolve lean_a151 lean_s452
have lean_s454 : let10 := by andElim lean_s453, 46
have lean_s455 : let423 := by timed flipNotAnd lean_s454 [let9, let7]
have lean_s456 : let260 := by timed rfl
let lean_s457 := by timed flipCongrArg lean_s456 [Eq]
have lean_s458 : (Eq let180 let260) := by timed congr lean_s457 lean_r10
have lean_s459 : (Eq let180 True) := by timed Eq.trans lean_s458 lean_r63
have lean_s460 : (Eq let181 True) := by timed Eq.trans lean_r9 lean_s459
have lean_s461 : let181 := by timed trueElim lean_s460
let lean_s462 := by timed flipCongrArg lean_s461 [Or]
have lean_s463 : (Eq let228 let228) := by timed rfl
have lean_s464 : (Eq let423 let422) := by timed congr lean_s462 lean_s463
have lean_s465 : let422 := by timed eqResolve lean_s455 lean_s464
have lean_s466 : (Or let410 (Or let229 (Or let269 False))) :=
  (scope (fun lean_a156 : let32 =>
    (scope (fun lean_a157 : let228 =>
      (scope (fun lean_a158 : let83 =>
        have lean_s466 : (Eq let83 let323) := by timed Eq.symm lean_r123
        have lean_s467 : let323 := by timed eqResolve lean_a158 lean_s466
        have lean_s468 : (Or let414 False) :=
          (scope (fun lean_a159 : let323 =>
            have lean_s468 : let298 := by timed trueElim lean_r99
            have lean_s469 : let421 := by timed And.intro lean_s468 lean_a159
            have lean_s470 : (Implies let421 let420) := by arithMulPos [let81, let12, let150], 0
            have lean_s471 : let420 := by timed modusPonens lean_s469 lean_s470
            have lean_s472 : let182 := by timed trueElim lean_r11
            have lean_s473 : (Eq let228 let340) := by timed Eq.symm lean_r137
            have lean_s474 : let340 := by timed eqResolve lean_a157 lean_s473
            have lean_s475 : let418 := by intTightUb lean_s474
            have lean_s476 : let419 := by timed And.intro lean_s472 lean_s475
            have lean_s477 : (Implies let419 let417) := by arithMulPos [let6, let3, let147], 1
            have lean_s478 : let417 := by timed modusPonens lean_s476 lean_s477
            have lean_s479 : let183 := by timed trueElim lean_r12
            have lean_s480 : let416 := by timed And.intro lean_s479 lean_a156
            have lean_s481 : (Implies let416 let415) := by arithMulNeg [let29, let1, let151], 3
            have lean_s482 : let415 := by timed modusPonens lean_s480 lean_s481
            have lean_s483 : let192 := by sumBounds [lean_s471, lean_s478, lean_s482]
            let lean_s484 := by timed congrHAdd lean_r38 lean_r40
            have lean_s485 : (Eq let189 let196) := by timed congrHAdd lean_r14 lean_s484
            have lean_s486 : (Eq let189 let173) := by timed Eq.trans lean_s485 lean_r15
            let lean_s487 := by timed flipCongrArg lean_s486 [GE.ge]
            let lean_s488 := by timed congrHAdd lean_r111 lean_r149
            have lean_s489 : (Eq let185 let256) := by timed congrHAdd lean_r150 lean_s488
            have lean_s490 : (Eq let185 let173) := by timed Eq.trans lean_s489 lean_r59
            have lean_s491 : (Eq let190 let327) := by timed congr lean_s487 lean_s490
            have lean_s492 : (Eq let190 True) := by timed Eq.trans lean_s491 lean_r127
            have lean_s493 : (Eq let191 let407) := by timed flipCongrArg lean_s492 [Not]
            have lean_s494 : (Eq let191 False) := by timed Eq.trans lean_s493 lean_r147
            have lean_s495 : (Eq let192 False) := by timed Eq.trans lean_r13 lean_s494
            show False from by timed eqResolve lean_s483 lean_s495
          ))
        have lean_s469 : let414 := by liftOrNToNeg lean_s468
        have lean_s470 : (Eq let414 let269) := by timed flipCongrArg lean_r123 [Not]
        have lean_s471 : (Eq let414 let82) := by timed Eq.trans lean_s470 lean_r145
        have lean_s472 : let82 := by timed eqResolve lean_s469 lean_s471
        have lean_s473 : (Eq let82 let414) := by timed Eq.symm lean_s471
        have lean_s474 : let414 := by timed eqResolve lean_s472 lean_s473
        show False from by timed contradiction lean_s467 lean_s474
  ))))))
have lean_s467 : (Not (And let32 (And let228 let83))) := by liftOrNToNeg lean_s466
have lean_s468 : let412 := by timed flipNotAnd lean_s467 [let32, let228, let83]
have lean_s469 : let413 := by timed rfl
have lean_s470 : (Eq let410 let410) := by timed rfl
let lean_s471 := by timed congr lean_s469 lean_s470
have lean_s472 : let316 := by timed rfl
let lean_s473 := by timed flipCongrArg lean_s472 [Eq]
have lean_s474 : (Eq let230 let316) := by timed congr lean_s473 lean_r146
have lean_s475 : (Eq let230 True) := by timed Eq.trans lean_s474 lean_r117
have lean_s476 : (Eq let231 True) := by timed Eq.trans lean_r42 lean_s475
have lean_s477 : let231 := by timed trueElim lean_s476
let lean_s478 := by timed congr lean_s469 lean_s477
have lean_s479 : let406 := by timed rfl
let lean_s480 := by timed flipCongrArg lean_s479 [Eq]
have lean_s481 : (Eq let270 let406) := by timed congr lean_s480 lean_r145
have lean_s482 : (Eq let270 True) := by timed Eq.trans lean_s481 lean_r144
have lean_s483 : (Eq let271 True) := by timed Eq.trans lean_r72 lean_s482
have lean_s484 : let271 := by timed trueElim lean_s483
let lean_s485 := by timed congr lean_s478 lean_s484
have lean_s486 : (Eq let412 let411) := by timed congr lean_s471 lean_s485
have lean_s487 : let411 := by timed eqResolve lean_s468 lean_s486
have lean_s488 : (Or let82 (Or let7 let410)) := by permutateOr lean_s487, [2, 1, 0], (- 1)
have lean_s489 : let83 := by andElim lean_s453, 24
let lean_s490 := by R1 lean_s488, lean_s489, let82, [(- 1), 0]
have lean_s491 : let32 := by andElim lean_s453, 43
have lean_s492 : let7 := by R2 lean_s490, lean_s491, let32, [(- 1), 0]
have lean_s493 : let8 := by R2 lean_s465, lean_s492, let7, [(- 1), 0]
let lean_s494 := by R2 lean_s17, lean_s493, let8, [(- 1), 0]
have lean_s495 : let31 := by andElim lean_s453, 44
let lean_s496 := by R1 lean_s494, lean_s495, let30, [(- 1), 0]
have lean_s497 : let84 := by andElim lean_s453, 23
exact (show False from by R2 lean_s496, lean_s497, let84, [0, 0])


