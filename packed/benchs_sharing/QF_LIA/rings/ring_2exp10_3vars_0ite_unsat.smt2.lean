open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {ox5f3 : Int}
variable {sx5f3 : Int}
variable {sx5f2 : Int}
variable {sx5f1 : Int}
variable {ox5f0 : Int}
variable {sx5f0 : Int}
variable {v2 : Int}
variable {v0 : Int}
variable {v1 : Int}
variable {ox5f1 : Int}
variable {v2 : Int}
variable {ox5f0 : Int}
variable {ox5f2 : Int}
variable {sx5f1 : Int}
variable {ox5f1 : Int}
variable {v1 : Int}
variable {sx5f2 : Int}
variable {sx5f0 : Int}
variable {v0 : Int}
variable {ox5f2 : Int}
variable {sx5f3 : Int}
variable {ox5f3 : Int}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (binrel% GE.ge v0 let1)
  let let3 := (Int.ofNat 1024)
  let let4 := (Not (binrel% GE.ge v0 let3))
  let let5 := (binrel% GE.ge v1 let1)
  let let6 := (Not (binrel% GE.ge v1 let3))
  let let7 := (binrel% GE.ge v2 let1)
  let let8 := (Not (binrel% GE.ge v2 let3))
  let let9 := (binrel% GE.ge sx5f0 let1)
  let let10 := (Int.ofNat 2)
  let let11 := (Not (binrel% GE.ge sx5f0 let10))
  let let12 := (Int.ofNat 512)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HAdd.hAdd v1 (binrel% HMul.hMul let13 sx5f0))
  let let15 := (binrel% GE.ge let14 let1)
  let let16 := (binrel% GE.ge let14 let12)
  let let17 := (Not let16)
  let let18 := (Int.ofNat 513)
  let let19 := (binrel% GE.ge v1 let18)
  let let20 := (Int.ofNat 1)
  let let21 := (binrel% GE.ge sx5f0 let20)
  let let22 := (Eq let21 let19)
  let let23 := (binrel% GE.ge ox5f0 let1)
  let let24 := (Not (binrel% GE.ge ox5f0 let10))
  let let25 := (Neg.neg let3)
  let let26 := (binrel% HMul.hMul let25 ox5f0)
  let let27 := (binrel% HMul.hMul let25 sx5f0)
  let let28 := (binrel% HMul.hMul let10 v1)
  let let29 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 let26)))
  let let30 := (binrel% GE.ge let29 let1)
  let let31 := (binrel% GE.ge let29 let3)
  let let32 := (Not let31)
  let let33 := (And let32 (And let30 (And let24 (And let23 (And let22 (And let17 (And let15 (And let11 (And let9 (And let8 (And let7 (And let6 (And let5 (And let4 let2))))))))))))))
  let let34 := (Int.ofNat 1025)
  let let35 := (binrel% HAdd.hAdd let28 let27)
  let let36 := (binrel% HAdd.hAdd v0 let35)
  let let37 := (binrel% GE.ge let36 let34)
  let let38 := (And let24 (binrel% GE.ge ox5f0 let20))
  let let39 := (Eq let38 let37)
  let let40 := (binrel% GE.ge sx5f1 let1)
  let let41 := (Int.ofNat 4)
  let let42 := (Not (binrel% GE.ge sx5f1 let41))
  let let43 := (Int.ofNat 256)
  let let44 := (binrel% HAdd.hAdd v2 (binrel% HMul.hMul (Neg.neg let43) sx5f1))
  let let45 := (binrel% GE.ge let44 let1)
  let let46 := (binrel% GE.ge let44 let43)
  let let47 := (Not let46)
  let let48 := (binrel% GE.ge v2 (Int.ofNat 257))
  let let49 := (binrel% GE.ge sx5f1 let20)
  let let50 := (Eq let49 let48)
  let let51 := (binrel% GE.ge ox5f1 let1)
  let let52 := (Not (binrel% GE.ge ox5f1 let10))
  let let53 := (binrel% HMul.hMul let25 ox5f1)
  let let54 := (binrel% HMul.hMul let25 sx5f1)
  let let55 := (binrel% HMul.hMul let41 v2)
  let let56 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let54 let53))))))
  let let57 := (binrel% GE.ge let56 let1)
  let let58 := (binrel% GE.ge let56 let3)
  let let59 := (Not let58)
  let let60 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 let54)))))
  let let61 := (binrel% GE.ge let60 let34)
  let let62 := (And let52 (binrel% GE.ge ox5f1 let20))
  let let63 := (Eq let62 let61)
  let let64 := (binrel% GE.ge sx5f2 let1)
  let let65 := (Not (binrel% GE.ge sx5f2 let10))
  let let66 := (binrel% HAdd.hAdd v2 (binrel% HMul.hMul let13 sx5f2))
  let let67 := (binrel% GE.ge let66 let1)
  let let68 := (binrel% GE.ge let66 let12)
  let let69 := (Not let68)
  let let70 := (binrel% GE.ge v2 let18)
  let let71 := (binrel% GE.ge sx5f2 let20)
  let let72 := (Eq let71 let70)
  let let73 := (binrel% GE.ge ox5f2 let1)
  let let74 := (Not (binrel% GE.ge ox5f2 let10))
  let let75 := (binrel% HMul.hMul let25 ox5f2)
  let let76 := (binrel% HMul.hMul let25 sx5f2)
  let let77 := (binrel% HMul.hMul let10 v2)
  let let78 := (binrel% HAdd.hAdd v1 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let76 let75)))
  let let79 := (binrel% GE.ge let78 let1)
  let let80 := (binrel% GE.ge let78 let3)
  let let81 := (Not let80)
  let let82 := (binrel% HAdd.hAdd let77 let76)
  let let83 := (binrel% HAdd.hAdd v1 let82)
  let let84 := (binrel% GE.ge let83 let34)
  let let85 := (And let74 (binrel% GE.ge ox5f2 let20))
  let let86 := (Eq let85 let84)
  let let87 := (binrel% GE.ge sx5f3 let1)
  let let88 := (Not (binrel% GE.ge sx5f3 let10))
  let let89 := (binrel% HAdd.hAdd v1 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HMul.hMul let13 sx5f3)))))
  let let90 := (binrel% GE.ge let89 let1)
  let let91 := (binrel% GE.ge let89 let12)
  let let92 := (Not let91)
  let let93 := (binrel% GE.ge let78 let18)
  let let94 := (binrel% GE.ge sx5f3 let20)
  let let95 := (Eq let94 let93)
  let let96 := (binrel% GE.ge ox5f3 let1)
  let let97 := (Not (binrel% GE.ge ox5f3 let10))
  let let98 := (binrel% HMul.hMul let25 ox5f3)
  let let99 := (binrel% HMul.hMul let25 sx5f3)
  let let100 := (Int.ofNat 2048)
  let let101 := (Neg.neg let100)
  let let102 := (binrel% HMul.hMul let101 ox5f2)
  let let103 := (binrel% HMul.hMul let101 sx5f2)
  let let104 := (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let99 let98)))
  let let105 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let55 let104)))
  let let106 := (binrel% GE.ge let105 let1)
  let let107 := (binrel% GE.ge let105 let3)
  let let108 := (Not let107)
  let let109 := (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 let99))))
  let let110 := (binrel% HAdd.hAdd v0 let109)
  let let111 := (binrel% GE.ge let110 let34)
  let let112 := (And let97 (binrel% GE.ge ox5f3 let20))
  let let113 := (Eq let112 let111)
  let let114 := (Neg.neg let20)
  let let115 := (Neg.neg let10)
  let let116 := (binrel% HAdd.hAdd sx5f0 (binrel% HAdd.hAdd ox5f0 (binrel% HAdd.hAdd sx5f1 (binrel% HAdd.hAdd ox5f1 (binrel% HAdd.hAdd (binrel% HMul.hMul let115 sx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 ox5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let114 sx5f3) (binrel% HMul.hMul let114 ox5f3))))))))
  let let117 := (binrel% GE.ge let116 let1)
  let let118 := (binrel% GE.ge let116 let20)
  let let119 := (Not let118)
  let let120 := (Not (And let119 let117))
  let let121 := (And let120 (And let113 (And let108 (And let106 (And let97 (And let96 (And let95 (And let92 (And let90 (And let88 (And let87 (And let86 (And let81 (And let79 (And let74 (And let73 (And let72 (And let69 (And let67 (And let65 (And let64 (And let63 (And let59 (And let57 (And let52 (And let51 (And let50 (And let47 (And let45 (And let42 (And let40 (And let39 let33))))))))))))))))))))))))))))))))
  let let122 := (Eq ox5f0 let20)
  let let123 := (Eq let122 let37)
  let let124 := (Eq ox5f1 let20)
  let let125 := (Eq let124 let61)
  let let126 := (Eq ox5f2 let20)
  let let127 := (Eq let126 let84)
  let let128 := (Eq ox5f3 let20)
  let let129 := (Eq let128 let111)
  let let130 := (Eq sx5f0 (binrel% HAdd.hAdd (binrel% HMul.hMul let114 ox5f0) (binrel% HAdd.hAdd (binrel% HMul.hMul let114 sx5f1) (binrel% HAdd.hAdd (binrel% HMul.hMul let114 ox5f1) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 sx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 ox5f2) (binrel% HAdd.hAdd sx5f3 ox5f3)))))))
  let let131 := (Not let130)
  let let132 := (And let131 (And let129 (And let108 (And let106 (And let97 (And let96 (And let95 (And let92 (And let90 (And let88 (And let87 (And let127 (And let81 (And let79 (And let74 (And let73 (And let72 (And let69 (And let67 (And let65 (And let64 (And let125 (And let59 (And let57 (And let52 (And let51 (And let50 (And let47 (And let45 (And let42 (And let40 (And let123 let33))))))))))))))))))))))))))))))))
  let let133 := (Rat.ofInt 1)
  let let134 := (Neg.neg let133)
  let let135 := (binrel% HMul.hMul let134 let1)
  let let136 := (Rat.ofInt 1024)
  let let137 := (Neg.neg let136)
  let let138 := (binrel% HMul.hMul let137 let20)
  let let139 := (binrel% HMul.hMul let133 let3)
  let let140 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let138 let135))
  let let141 := (binrel% HMul.hMul let134 let56)
  let let142 := (binrel% HMul.hMul let137 let116)
  let let143 := (binrel% HMul.hMul let133 let105)
  let let144 := (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let142 let141))
  let let145 := (binrel% GE.ge let144 let140)
  let let146 := (Not let145)
  let let147 := (binrel% LT.lt let144 let140)
  let let148 := (Rat.ofInt let105)
  let let149 := (binrel% HMul.hMul let3 ox5f3)
  let let150 := (binrel% HMul.hMul let3 sx5f3)
  let let151 := (binrel% HMul.hMul let100 ox5f2)
  let let152 := (binrel% HMul.hMul let100 sx5f2)
  let let153 := (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let150 let149)))
  let let154 := (Rat.ofInt (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let53 let153)))))
  let let155 := (binrel% HMul.hMul let3 ox5f1)
  let let156 := (binrel% HMul.hMul let3 sx5f1)
  let let157 := (binrel% HMul.hMul let3 ox5f0)
  let let158 := (binrel% HMul.hMul let3 sx5f0)
  let let159 := (binrel% HMul.hMul (Neg.neg let41) v2)
  let let160 := (binrel% HMul.hMul let115 v1)
  let let161 := (binrel% HMul.hMul let114 v0)
  let let162 := (Rat.ofInt (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let156 let155)))))))
  let let163 := (Rat.ofInt 0)
  let let164 := (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let154 let162))
  let let165 := (binrel% LT.lt let105 let3)
  let let166 := (Not let108)
  let let167 := (Eq let107 let166)
  let let168 := (Eq let166 let107)
  let let169 := (Eq let107 let107)
  let let170 := (Not let119)
  let let171 := (Eq let170 let118)
  let let172 := (binrel% LT.lt let134 let1)
  let let173 := (binrel% HMul.hMul let136 let114)
  let let174 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let173 let135))
  let let175 := (binrel% HMul.hMul let134 let105)
  let let176 := (binrel% HMul.hMul let136 let116)
  let let177 := (binrel% HMul.hMul let133 let56)
  let let178 := (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let176 let175))
  let let179 := (binrel% GE.ge let178 let174)
  let let180 := (Not let179)
  let let181 := (binrel% LT.lt let178 let174)
  let let182 := (Rat.ofInt let56)
  let let183 := (Rat.ofInt (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let159 let153))))
  let let184 := (Rat.ofInt (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let155 let104)))))
  let let185 := (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd let184 let183))
  let let186 := (Not let117)
  let let187 := (Not let186)
  let let188 := (Eq let117 let187)
  let let189 := (Eq let187 let117)
  let let190 := (binrel% HMul.hMul sx5f3 let3)
  let let191 := (binrel% HSub.hSub let55 let152)
  let let192 := (binrel% HAdd.hAdd let191 let28)
  let let193 := (binrel% HSub.hSub let192 let151)
  let let194 := (binrel% HSub.hSub let193 let190)
  let let195 := (binrel% GE.ge let194 let3)
  let let196 := (Not let195)
  let let197 := (binrel% LT.lt let194 let3)
  let let198 := (Not let61)
  let let199 := (Not let198)
  let let200 := (Eq let61 let124)
  let let201 := (binrel% HMul.hMul sx5f0 let3)
  let let202 := (binrel% HMul.hMul let114 let201)
  let let203 := (binrel% HMul.hMul v1 let10)
  let let204 := (binrel% HAdd.hAdd let203 let202)
  let let205 := (binrel% HSub.hSub let203 let201)
  let let206 := (Not True)
  let let207 := (binrel% HMul.hMul ox5f1 let3)
  let let208 := (binrel% HMul.hMul let114 let207)
  let let209 := (binrel% HMul.hMul ox5f0 let3)
  let let210 := (binrel% HAdd.hAdd let205 v0)
  let let211 := (binrel% HSub.hSub let210 let209)
  let let212 := (binrel% HMul.hMul sx5f1 let3)
  let let213 := (binrel% HMul.hMul v2 let41)
  let let214 := (binrel% HSub.hSub let213 let212)
  let let215 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let211 let208))
  let let216 := (binrel% HAdd.hAdd let214 let211)
  let let217 := (binrel% HAdd.hAdd let216 let208)
  let let218 := (binrel% HSub.hSub let216 let207)
  let let219 := (Not let111)
  let let220 := (Not let219)
  let let221 := (binrel% LE.le let1 let56)
  let let222 := (binrel% HMul.hMul ox5f3 let3)
  let let223 := (binrel% LE.le let213 let3)
  let let224 := (Not let223)
  let let225 := (binrel% GT.gt let213 let3)
  let let226 := (binrel% LT.lt v1 let3)
  let let227 := (binrel% LE.le let1 let29)
  let let228 := (binrel% HMul.hMul let3 sx5f2)
  let let229 := (binrel% HMul.hMul let114 let228)
  let let230 := (binrel% LE.le ox5f3 let20)
  let let231 := (binrel% GE.ge let214 let3)
  let let232 := (Not let231)
  let let233 := (binrel% LT.lt let214 let3)
  let let234 := (binrel% LE.le ox5f0 let20)
  let let235 := (binrel% HMul.hMul let114 let212)
  let let236 := (binrel% HAdd.hAdd let213 let235)
  let let237 := (Not let19)
  let let238 := (Not let237)
  let let239 := (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd v1 let75))
  let let240 := (binrel% GE.ge let163 let163)
  let let241 := (binrel% HMul.hMul let114 let152)
  let let242 := (binrel% HAdd.hAdd let55 let241)
  let let243 := (binrel% HMul.hMul let114 let190)
  let let244 := (binrel% HAdd.hAdd let193 let243)
  let let245 := (Not let48)
  let let246 := (Not let245)
  let let247 := (binrel% LE.le let1 sx5f1)
  let let248 := (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let137 let163))
  let let249 := (binrel% GE.ge let35 let3)
  let let250 := (binrel% HMul.hMul let114 let151)
  let let251 := (binrel% HAdd.hAdd let192 let250)
  let let252 := (Not let37)
  let let253 := (Not let252)
  let let254 := (binrel% LE.le let1 let78)
  let let255 := (binrel% HMul.hMul v2 let10)
  let let256 := (binrel% LE.le let255 let3)
  let let257 := (Not let256)
  let let258 := (binrel% GT.gt let255 let3)
  let let259 := (binrel% LE.le let203 let3)
  let let260 := (Not let259)
  let let261 := (binrel% GT.gt let203 let3)
  let let262 := (binrel% LE.le let1 let82)
  let let263 := (Eq let37 let38)
  let let264 := (binrel% LE.le let1 sx5f0)
  let let265 := (binrel% HMul.hMul sx5f2 let3)
  let let266 := (binrel% HSub.hSub let255 let265)
  let let267 := (binrel% GE.ge let266 let3)
  let let268 := (Not let267)
  let let269 := (binrel% LT.lt let266 let3)
  let let270 := (Eq let111 let112)
  let let271 := (binrel% LE.le let60 let3)
  let let272 := (Eq let19 let21)
  let let273 := (binrel% HMul.hMul let114 let158)
  let let274 := (binrel% GT.gt let133 let1)
  let let275 := (Eq let111 let128)
  let let276 := (binrel% GE.ge let205 let3)
  let let277 := (Not let276)
  let let278 := (binrel% LT.lt let205 let3)
  let let279 := (binrel% HMul.hMul let3 ox5f2)
  let let280 := (binrel% HMul.hMul ox5f2 let3)
  let let281 := (Eq let84 let85)
  let let282 := (binrel% HMul.hMul let114 let155)
  let let283 := (binrel% LE.le ox5f2 let20)
  let let284 := (binrel% LE.le let210 let3)
  let let285 := (Not let284)
  let let286 := (binrel% GT.gt let210 let3)
  let let287 := (binrel% GE.ge let218 let3)
  let let288 := (Not let287)
  let let289 := (binrel% LT.lt let218 let3)
  let let290 := (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let28 let250))
  let let291 := (binrel% LT.lt sx5f0 let10)
  let let292 := (binrel% LE.le let36 let3)
  let let293 := (binrel% LE.le let55 let3)
  let let294 := (binrel% LT.lt v0 let3)
  let let295 := (binrel% LT.lt v2 let3)
  let let296 := (binrel% GE.ge let211 let3)
  let let297 := (Not let296)
  let let298 := (binrel% LT.lt let211 let3)
  let let299 := (binrel% LE.le let28 let3)
  let let300 := (binrel% LE.le let1 ox5f0)
  let let301 := (binrel% HAdd.hAdd let55 let54)
  let let302 := (binrel% HAdd.hAdd let301 (binrel% HAdd.hAdd let29 let53))
  let let303 := (Not let70)
  let let304 := (binrel% LE.le let77 let3)
  let let305 := (binrel% LT.lt sx5f1 let41)
  let let306 := (And let294 let2)
  let let307 := (binrel% LE.le let1 let205)
  let let308 := (Eq let261 let21)
  let let309 := (binrel% LE.le let1 let211)
  let let310 := (Eq let286 let122)
  let let311 := (binrel% LE.le let1 let214)
  let let312 := (Eq let225 let49)
  let let313 := (binrel% LE.le let1 ox5f1)
  let let314 := (binrel% LE.le ox5f1 let20)
  let let315 := (binrel% LE.le let1 let218)
  let let316 := (binrel% GT.gt let216 let3)
  let let317 := (Eq let316 let124)
  let let318 := (binrel% LE.le let1 sx5f2)
  let let319 := (binrel% LT.lt sx5f2 let10)
  let let320 := (binrel% LE.le let1 let266)
  let let321 := (Eq let258 let71)
  let let322 := (binrel% LE.le let1 ox5f2)
  let let323 := (binrel% HAdd.hAdd let266 v1)
  let let324 := (binrel% HSub.hSub let323 let280)
  let let325 := (binrel% LE.le let1 let324)
  let let326 := (binrel% LT.lt let324 let3)
  let let327 := (binrel% GT.gt let323 let3)
  let let328 := (Eq let327 let126)
  let let329 := (binrel% LE.le let1 sx5f3)
  let let330 := (binrel% LT.lt sx5f3 let10)
  let let331 := (binrel% LE.le let1 let194)
  let let332 := (binrel% GT.gt let193 let3)
  let let333 := (Eq let332 let94)
  let let334 := (binrel% LE.le let1 ox5f3)
  let let335 := (binrel% HAdd.hAdd let194 v0)
  let let336 := (binrel% HSub.hSub let335 let222)
  let let337 := (binrel% LE.le let1 let336)
  let let338 := (binrel% LT.lt let336 let3)
  let let339 := (binrel% GT.gt let335 let3)
  let let340 := (Eq let339 let128)
  let let341 := (Eq let336 let218)
  let let342 := (Not let341)
  let let343 := (And let342 (And let340 (And let338 (And let337 (And let230 (And let334 (And let333 (And let197 (And let331 (And let330 (And let329 (And let328 (And let326 (And let325 (And let283 (And let322 (And let321 (And let269 (And let320 (And let319 (And let318 (And let317 (And let289 (And let315 (And let314 (And let313 (And let312 (And let233 (And let311 (And let305 (And let247 (And let310 (And let298 (And let309 (And let234 (And let300 (And let308 (And let278 (And let307 (And let291 (And let264 (And let295 (And let7 (And let226 (And let5 let306)))))))))))))))))))))))))))))))))))))))))))))
  let let344 := (And let342 (And let340 (And (And let338 let337) (And (And let230 let334) (And let333 (And (And let197 let331) (And (And let330 let329) (And let328 (And (And let326 let325) (And (And let283 let322) (And let321 (And (And let269 let320) (And (And let319 let318) (And let317 (And (And let289 let315) (And (And let314 let313) (And let312 (And (And let233 let311) (And (And let305 let247) (And let310 (And (And let298 let309) (And (And let234 let300) (And let308 (And (And let278 let307) (And (And let291 let264) (And (And let295 let7) (And (And let226 let5) let306)))))))))))))))))))))))))))
  let let345 := (binrel% LE.le let335 let3)
  let let346 := (Not let345)
  let let347 := (binrel% HAdd.hAdd let35 v0)
  let let348 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd v0 let26))
  let let349 := (binrel% LT.lt let116 let1)
  let let350 := (binrel% HMul.hMul let114 let209)
  let let351 := (binrel% HAdd.hAdd let205 (binrel% HAdd.hAdd v0 let350))
  let let352 := (binrel% HAdd.hAdd let210 let350)
  let let353 := (binrel% HAdd.hAdd let301 let29)
  let let354 := (binrel% LE.le let216 let3)
  let let355 := (Not let354)
  let let356 := (Not let93)
  let let357 := (Not let356)
  let let358 := (binrel% LE.le let323 let3)
  let let359 := (Not let358)
  let let360 := (binrel% HMul.hMul let114 let265)
  let let361 := (binrel% HAdd.hAdd let255 let360)
  let let362 := (binrel% GE.ge let82 let3)
  let let363 := (binrel% HMul.hMul let114 let157)
  let let364 := (Eq let70 let71)
  let let365 := (binrel% HMul.hMul let114 let149)
  let let366 := (binrel% GT.gt let136 let1)
  let let367 := (Not let303)
  let let368 := (Eq let37 let122)
  let let369 := (Eq let61 let62)
  let let370 := (binrel% HMul.hMul let114 let279)
  let let371 := (binrel% LE.le let1 let301)
  let let372 := (binrel% HMul.hMul let114 let280)
  let let373 := (binrel% HAdd.hAdd let266 (binrel% HAdd.hAdd v1 let372))
  let let374 := (binrel% HAdd.hAdd let323 let372)
  let let375 := (binrel% GE.ge let109 let3)
  let let376 := (binrel% HMul.hMul let114 let156)
  let let377 := (binrel% GE.ge let324 let3)
  let let378 := (Not let377)
  let let379 := (Eq let84 let126)
  let let380 := (Not let59)
  let let381 := (Eq let58 let380)
  let let382 := (Eq let380 let58)
  let let383 := (Not let84)
  let let384 := (binrel% LE.le let83 let3)
  let let385 := (binrel% GE.ge let301 let3)
  let let386 := (Eq let48 let49)
  let let387 := (binrel% HAdd.hAdd let82 v1)
  let let388 := (binrel% LE.le let1 let109)
  let let389 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd v0 let98))
  let let390 := (binrel% LT.lt let56 let3)
  let let391 := (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let103 let102)))
  let let392 := (binrel% HAdd.hAdd let391 let99)
  let let393 := (binrel% LE.le let1 let35)
  let let394 := (binrel% HMul.hMul let114 let150)
  let let395 := (binrel% HAdd.hAdd let55 let103)
  let let396 := (binrel% HAdd.hAdd let395 (binrel% HAdd.hAdd let28 let102))
  let let397 := (binrel% LT.lt let137 let1)
  let let398 := (Eq let93 let94)
  let let399 := (binrel% LE.le let391 let3)
  let let400 := (binrel% LE.le let193 let3)
  let let401 := (Not let400)
  let let402 := (Not let383)
  let let403 := (Eq let58 let58)
  let let404 := (binrel% LE.le let1 let105)
  let let405 := (binrel% HMul.hMul let114 let222)
  let let406 := (binrel% HAdd.hAdd let194 (binrel% HAdd.hAdd v0 let405))
  let let407 := (binrel% HAdd.hAdd let335 let405)
  let let408 := (binrel% GE.ge let336 let3)
  let let409 := (Not let408)
  let let410 := (Eq let118 let118)
  let let411 := (binrel% LE.le let110 let3)
  let let412 := (Eq let118 let170)
  let let413 := (binrel% HAdd.hAdd let109 v0)
  let let414 := (Eq let105 let56)
  let let415 := (Eq let117 let117)
  let let416 := (And let120 (And let270 (And let108 (And let106 (And let97 (And let96 (And let95 (And let92 (And let90 (And let88 (And let87 (And let281 (And let81 (And let79 (And let74 (And let73 (And let72 (And let69 (And let67 (And let65 (And let64 (And let369 (And let59 (And let57 (And let52 (And let51 (And let50 (And let47 (And let45 (And let42 (And let40 (And let263 let33))))))))))))))))))))))))))))))))
  let let417 := (Eq And And)
  let let418 := (Not let106)
  let let419 := (Or let418 (Or let117 let58))
  let let420 := (Or let418 (Or let187 let380))
  let let421 := (Eq Or Or)
  let let422 := (Not let390)
  let let423 := (binrel% LE.le let175 let135)
  let let424 := (And let172 let106)
  let let425 := (binrel% LE.le let176 let173)
  let let426 := (binrel% LE.le let116 let114)
  let let427 := (And let366 let426)
  let let428 := (binrel% LT.lt let177 let139)
  let let429 := (And let274 let390)
  let let430 := (Or let118 let186)
  let let431 := (Or let170 let186)
  let let432 := (Not let57)
  let let433 := (Or let432 (Or let119 let107))
  let let434 := (Or let432 (Or let119 let166))
  let let435 := (Not let165)
  let let436 := (binrel% LE.le let141 let135)
  let let437 := (And let172 let57)
  let let438 := (binrel% LE.le let142 let138)
  let let439 := (And let397 let118)
  let let440 := (binrel% LT.lt let143 let139)
  let let441 := (And let274 let165)
(Eq let132 let121) → (Eq let147 let146) → (Eq let143 let148) → (Eq let142 let154) → (Eq let141 let162) → (Eq let164 let163) → (Eq let165 let108) → (Eq let168 let167) → let168 → (Eq let169 True) → let171 → (Eq let172 True) → (Eq let181 let180) → (Eq let177 let182) → (Eq let185 let163) → (Eq let189 let188) → let189 → (Eq let173 let137) → (Eq let197 let196) → (Eq let135 let163) → (Eq let199 let61) → (Eq let200 let125) → (Eq let205 let204) → (Eq let206 False) → (Eq let217 let215) → (Eq let218 let217) → (Eq let203 let28) → (Eq let220 let111) → (Eq let221 let57) → (Eq let222 let149) → (Eq let225 let224) → (Eq let226 let6) → (Eq let207 let155) → (Eq let176 let184) → (Eq let227 let30) → (Eq let175 let183) → (Eq let229 let76) → (Eq let230 let97) → (Eq let233 let232) → (Eq let234 let24) → (Eq let214 let236) → (Eq let213 let55) → (Eq let238 let19) → (Eq let239 let78) → (Eq let240 True) → (Eq let191 let242) → (Eq let194 let244) → (Eq let246 let48) → (Eq let247 let40) → (Eq let248 let163) → (Eq let249 let16) → (Eq let193 let251) → (Eq let253 let37) → (Eq let254 let79) → (Eq let258 let257) → (Eq let201 let158) → (Eq let261 let260) → (Eq let262 let67) → (Eq let39 let263) → (Eq let264 let9) → (Eq let269 let268) → (Eq let113 let270) → (Eq let139 let136) → (Eq let271 let198) → (Eq let272 let22) → (Eq let273 let27) → (Eq let274 True) → (Eq let275 let129) → (Eq let278 let277) → (Eq let280 let279) → (Eq let86 let281) → (Eq let282 let53) → (Eq let283 let74) → (Eq let286 let285) → (Eq let289 let288) → (Eq let251 let290) → (Eq let291 let11) → (Eq let292 let252) → (Eq let138 let137) → (Eq let293 let245) → (Eq let294 let4) → (Eq let295 let8) → (Eq let212 let156) → (Eq let298 let297) → (Eq let299 let237) → (Eq let300 let23) → (Eq let302 let56) → (Eq let304 let303) → (Eq let305 let42) → (Eq let344 let343) → (Eq let339 let346) → (Eq let347 let36) → (Eq let348 let29) → (Eq let330 let88) → (Eq let313 let51) → (Eq let349 let186) → (Eq let352 let351) → (Eq let353 let60) → (Eq let316 let355) → (Eq let319 let65) → (Eq let318 let64) → (Eq let357 let93) → (Eq let265 let228) → (Eq let255 let77) → (Eq let327 let359) → (Eq let266 let361) → (Eq let329 let87) → (Eq let362 let68) → (Eq let363 let26) → (Eq let364 let72) → (Eq let365 let98) → (Eq let366 True) → (Eq let211 let352) → (Eq let367 let70) → (Eq let368 let123) → (Eq let63 let369) → (Eq let322 let73) → (Eq let370 let75) → (Eq let371 let45) → (Eq let374 let373) → (Eq let375 let91) → (Eq let324 let374) → (Eq let376 let54) → (Eq let326 let378) → (Eq let379 let127) → (Eq let382 let381) → (Eq let384 let383) → (Eq let334 let96) → (Eq let385 let46) → let382 → (Eq let386 let50) → (Eq let387 let83) → (Eq let388 let90) → (Eq let389 let105) → (Eq let390 let59) → (Eq let314 let52) → (Eq let392 let109) → (Eq let393 let15) → (Eq let394 let99) → (Eq let190 let150) → (Eq let396 let391) → (Eq let250 let102) → (Eq let397 True) → (Eq let241 let103) → (Eq let398 let95) → (Eq let399 let356) → (Eq let332 let401) → (Eq let402 let84) → (Eq let403 True) → (Eq let404 let106) → (Eq let209 let157) → (Eq let407 let406) → (Eq let336 let407) → (Eq let338 let409) → (Eq let410 True) → (Eq let411 let219) → (Eq let171 let412) → (Eq let413 let110) → (Eq let414 let130) → (Eq let415 True) → let344 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (binrel% GE.ge v0 let1)
  let let3 := (Int.ofNat 1024)
  let let4 := (Not (binrel% GE.ge v0 let3))
  let let5 := (binrel% GE.ge v1 let1)
  let let6 := (Not (binrel% GE.ge v1 let3))
  let let7 := (binrel% GE.ge v2 let1)
  let let8 := (Not (binrel% GE.ge v2 let3))
  let let9 := (binrel% GE.ge sx5f0 let1)
  let let10 := (Int.ofNat 2)
  let let11 := (Not (binrel% GE.ge sx5f0 let10))
  let let12 := (Int.ofNat 512)
  let let13 := (Neg.neg let12)
  let let14 := (binrel% HAdd.hAdd v1 (binrel% HMul.hMul let13 sx5f0))
  let let15 := (binrel% GE.ge let14 let1)
  let let16 := (binrel% GE.ge let14 let12)
  let let17 := (Not let16)
  let let18 := (Int.ofNat 513)
  let let19 := (binrel% GE.ge v1 let18)
  let let20 := (Int.ofNat 1)
  let let21 := (binrel% GE.ge sx5f0 let20)
  let let22 := (Eq let21 let19)
  let let23 := (binrel% GE.ge ox5f0 let1)
  let let24 := (Not (binrel% GE.ge ox5f0 let10))
  let let25 := (Neg.neg let3)
  let let26 := (binrel% HMul.hMul let25 ox5f0)
  let let27 := (binrel% HMul.hMul let25 sx5f0)
  let let28 := (binrel% HMul.hMul let10 v1)
  let let29 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let27 let26)))
  let let30 := (binrel% GE.ge let29 let1)
  let let31 := (binrel% GE.ge let29 let3)
  let let32 := (Not let31)
  let let33 := (And let32 (And let30 (And let24 (And let23 (And let22 (And let17 (And let15 (And let11 (And let9 (And let8 (And let7 (And let6 (And let5 (And let4 let2))))))))))))))
  let let34 := (Int.ofNat 1025)
  let let35 := (binrel% HAdd.hAdd let28 let27)
  let let36 := (binrel% HAdd.hAdd v0 let35)
  let let37 := (binrel% GE.ge let36 let34)
  let let38 := (And let24 (binrel% GE.ge ox5f0 let20))
  let let39 := (Eq let38 let37)
  let let40 := (binrel% GE.ge sx5f1 let1)
  let let41 := (Int.ofNat 4)
  let let42 := (Not (binrel% GE.ge sx5f1 let41))
  let let43 := (Int.ofNat 256)
  let let44 := (binrel% HAdd.hAdd v2 (binrel% HMul.hMul (Neg.neg let43) sx5f1))
  let let45 := (binrel% GE.ge let44 let1)
  let let46 := (binrel% GE.ge let44 let43)
  let let47 := (Not let46)
  let let48 := (binrel% GE.ge v2 (Int.ofNat 257))
  let let49 := (binrel% GE.ge sx5f1 let20)
  let let50 := (Eq let49 let48)
  let let51 := (binrel% GE.ge ox5f1 let1)
  let let52 := (Not (binrel% GE.ge ox5f1 let10))
  let let53 := (binrel% HMul.hMul let25 ox5f1)
  let let54 := (binrel% HMul.hMul let25 sx5f1)
  let let55 := (binrel% HMul.hMul let41 v2)
  let let56 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let54 let53))))))
  let let57 := (binrel% GE.ge let56 let1)
  let let58 := (binrel% GE.ge let56 let3)
  let let59 := (Not let58)
  let let60 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 let54)))))
  let let61 := (binrel% GE.ge let60 let34)
  let let62 := (And let52 (binrel% GE.ge ox5f1 let20))
  let let63 := (Eq let62 let61)
  let let64 := (binrel% GE.ge sx5f2 let1)
  let let65 := (Not (binrel% GE.ge sx5f2 let10))
  let let66 := (binrel% HAdd.hAdd v2 (binrel% HMul.hMul let13 sx5f2))
  let let67 := (binrel% GE.ge let66 let1)
  let let68 := (binrel% GE.ge let66 let12)
  let let69 := (Not let68)
  let let70 := (binrel% GE.ge v2 let18)
  let let71 := (binrel% GE.ge sx5f2 let20)
  let let72 := (Eq let71 let70)
  let let73 := (binrel% GE.ge ox5f2 let1)
  let let74 := (Not (binrel% GE.ge ox5f2 let10))
  let let75 := (binrel% HMul.hMul let25 ox5f2)
  let let76 := (binrel% HMul.hMul let25 sx5f2)
  let let77 := (binrel% HMul.hMul let10 v2)
  let let78 := (binrel% HAdd.hAdd v1 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let76 let75)))
  let let79 := (binrel% GE.ge let78 let1)
  let let80 := (binrel% GE.ge let78 let3)
  let let81 := (Not let80)
  let let82 := (binrel% HAdd.hAdd let77 let76)
  let let83 := (binrel% HAdd.hAdd v1 let82)
  let let84 := (binrel% GE.ge let83 let34)
  let let85 := (And let74 (binrel% GE.ge ox5f2 let20))
  let let86 := (Eq let85 let84)
  let let87 := (binrel% GE.ge sx5f3 let1)
  let let88 := (Not (binrel% GE.ge sx5f3 let10))
  let let89 := (binrel% HAdd.hAdd v1 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let76 (binrel% HAdd.hAdd let75 (binrel% HMul.hMul let13 sx5f3)))))
  let let90 := (binrel% GE.ge let89 let1)
  let let91 := (binrel% GE.ge let89 let12)
  let let92 := (Not let91)
  let let93 := (binrel% GE.ge let78 let18)
  let let94 := (binrel% GE.ge sx5f3 let20)
  let let95 := (Eq let94 let93)
  let let96 := (binrel% GE.ge ox5f3 let1)
  let let97 := (Not (binrel% GE.ge ox5f3 let10))
  let let98 := (binrel% HMul.hMul let25 ox5f3)
  let let99 := (binrel% HMul.hMul let25 sx5f3)
  let let100 := (Int.ofNat 2048)
  let let101 := (Neg.neg let100)
  let let102 := (binrel% HMul.hMul let101 ox5f2)
  let let103 := (binrel% HMul.hMul let101 sx5f2)
  let let104 := (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 (binrel% HAdd.hAdd let99 let98)))
  let let105 := (binrel% HAdd.hAdd v0 (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let55 let104)))
  let let106 := (binrel% GE.ge let105 let1)
  let let107 := (binrel% GE.ge let105 let3)
  let let108 := (Not let107)
  let let109 := (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let103 (binrel% HAdd.hAdd let102 let99))))
  let let110 := (binrel% HAdd.hAdd v0 let109)
  let let111 := (binrel% GE.ge let110 let34)
  let let112 := (And let97 (binrel% GE.ge ox5f3 let20))
  let let113 := (Eq let112 let111)
  let let114 := (Neg.neg let20)
  let let115 := (Neg.neg let10)
  let let116 := (binrel% HAdd.hAdd sx5f0 (binrel% HAdd.hAdd ox5f0 (binrel% HAdd.hAdd sx5f1 (binrel% HAdd.hAdd ox5f1 (binrel% HAdd.hAdd (binrel% HMul.hMul let115 sx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let115 ox5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let114 sx5f3) (binrel% HMul.hMul let114 ox5f3))))))))
  let let117 := (binrel% GE.ge let116 let1)
  let let118 := (binrel% GE.ge let116 let20)
  let let119 := (Not let118)
  let let120 := (Not (And let119 let117))
  let let121 := (And let120 (And let113 (And let108 (And let106 (And let97 (And let96 (And let95 (And let92 (And let90 (And let88 (And let87 (And let86 (And let81 (And let79 (And let74 (And let73 (And let72 (And let69 (And let67 (And let65 (And let64 (And let63 (And let59 (And let57 (And let52 (And let51 (And let50 (And let47 (And let45 (And let42 (And let40 (And let39 let33))))))))))))))))))))))))))))))))
  let let122 := (Eq ox5f0 let20)
  let let123 := (Eq let122 let37)
  let let124 := (Eq ox5f1 let20)
  let let125 := (Eq let124 let61)
  let let126 := (Eq ox5f2 let20)
  let let127 := (Eq let126 let84)
  let let128 := (Eq ox5f3 let20)
  let let129 := (Eq let128 let111)
  let let130 := (Eq sx5f0 (binrel% HAdd.hAdd (binrel% HMul.hMul let114 ox5f0) (binrel% HAdd.hAdd (binrel% HMul.hMul let114 sx5f1) (binrel% HAdd.hAdd (binrel% HMul.hMul let114 ox5f1) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 sx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 ox5f2) (binrel% HAdd.hAdd sx5f3 ox5f3)))))))
  let let131 := (Not let130)
  let let132 := (And let131 (And let129 (And let108 (And let106 (And let97 (And let96 (And let95 (And let92 (And let90 (And let88 (And let87 (And let127 (And let81 (And let79 (And let74 (And let73 (And let72 (And let69 (And let67 (And let65 (And let64 (And let125 (And let59 (And let57 (And let52 (And let51 (And let50 (And let47 (And let45 (And let42 (And let40 (And let123 let33))))))))))))))))))))))))))))))))
  let let133 := (Rat.ofInt 1)
  let let134 := (Neg.neg let133)
  let let135 := (binrel% HMul.hMul let134 let1)
  let let136 := (Rat.ofInt 1024)
  let let137 := (Neg.neg let136)
  let let138 := (binrel% HMul.hMul let137 let20)
  let let139 := (binrel% HMul.hMul let133 let3)
  let let140 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let138 let135))
  let let141 := (binrel% HMul.hMul let134 let56)
  let let142 := (binrel% HMul.hMul let137 let116)
  let let143 := (binrel% HMul.hMul let133 let105)
  let let144 := (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let142 let141))
  let let145 := (binrel% GE.ge let144 let140)
  let let146 := (Not let145)
  let let147 := (binrel% LT.lt let144 let140)
  let let148 := (Rat.ofInt let105)
  let let149 := (binrel% HMul.hMul let3 ox5f3)
  let let150 := (binrel% HMul.hMul let3 sx5f3)
  let let151 := (binrel% HMul.hMul let100 ox5f2)
  let let152 := (binrel% HMul.hMul let100 sx5f2)
  let let153 := (binrel% HAdd.hAdd let152 (binrel% HAdd.hAdd let151 (binrel% HAdd.hAdd let150 let149)))
  let let154 := (Rat.ofInt (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let26 (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let53 let153)))))
  let let155 := (binrel% HMul.hMul let3 ox5f1)
  let let156 := (binrel% HMul.hMul let3 sx5f1)
  let let157 := (binrel% HMul.hMul let3 ox5f0)
  let let158 := (binrel% HMul.hMul let3 sx5f0)
  let let159 := (binrel% HMul.hMul (Neg.neg let41) v2)
  let let160 := (binrel% HMul.hMul let115 v1)
  let let161 := (binrel% HMul.hMul let114 v0)
  let let162 := (Rat.ofInt (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let156 let155)))))))
  let let163 := (Rat.ofInt 0)
  let let164 := (binrel% HAdd.hAdd let148 (binrel% HAdd.hAdd let154 let162))
  let let165 := (binrel% LT.lt let105 let3)
  let let166 := (Not let108)
  let let167 := (Eq let107 let166)
  let let168 := (Eq let166 let107)
  let let169 := (Eq let107 let107)
  let let170 := (Not let119)
  let let171 := (Eq let170 let118)
  let let172 := (binrel% LT.lt let134 let1)
  let let173 := (binrel% HMul.hMul let136 let114)
  let let174 := (binrel% HAdd.hAdd let139 (binrel% HAdd.hAdd let173 let135))
  let let175 := (binrel% HMul.hMul let134 let105)
  let let176 := (binrel% HMul.hMul let136 let116)
  let let177 := (binrel% HMul.hMul let133 let56)
  let let178 := (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let176 let175))
  let let179 := (binrel% GE.ge let178 let174)
  let let180 := (Not let179)
  let let181 := (binrel% LT.lt let178 let174)
  let let182 := (Rat.ofInt let56)
  let let183 := (Rat.ofInt (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let160 (binrel% HAdd.hAdd let159 let153))))
  let let184 := (Rat.ofInt (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let156 (binrel% HAdd.hAdd let155 let104)))))
  let let185 := (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd let184 let183))
  let let186 := (Not let117)
  let let187 := (Not let186)
  let let188 := (Eq let117 let187)
  let let189 := (Eq let187 let117)
  let let190 := (binrel% HMul.hMul sx5f3 let3)
  let let191 := (binrel% HSub.hSub let55 let152)
  let let192 := (binrel% HAdd.hAdd let191 let28)
  let let193 := (binrel% HSub.hSub let192 let151)
  let let194 := (binrel% HSub.hSub let193 let190)
  let let195 := (binrel% GE.ge let194 let3)
  let let196 := (Not let195)
  let let197 := (binrel% LT.lt let194 let3)
  let let198 := (Not let61)
  let let199 := (Not let198)
  let let200 := (Eq let61 let124)
  let let201 := (binrel% HMul.hMul sx5f0 let3)
  let let202 := (binrel% HMul.hMul let114 let201)
  let let203 := (binrel% HMul.hMul v1 let10)
  let let204 := (binrel% HAdd.hAdd let203 let202)
  let let205 := (binrel% HSub.hSub let203 let201)
  let let206 := (Not True)
  let let207 := (binrel% HMul.hMul ox5f1 let3)
  let let208 := (binrel% HMul.hMul let114 let207)
  let let209 := (binrel% HMul.hMul ox5f0 let3)
  let let210 := (binrel% HAdd.hAdd let205 v0)
  let let211 := (binrel% HSub.hSub let210 let209)
  let let212 := (binrel% HMul.hMul sx5f1 let3)
  let let213 := (binrel% HMul.hMul v2 let41)
  let let214 := (binrel% HSub.hSub let213 let212)
  let let215 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let211 let208))
  let let216 := (binrel% HAdd.hAdd let214 let211)
  let let217 := (binrel% HAdd.hAdd let216 let208)
  let let218 := (binrel% HSub.hSub let216 let207)
  let let219 := (Not let111)
  let let220 := (Not let219)
  let let221 := (binrel% LE.le let1 let56)
  let let222 := (binrel% HMul.hMul ox5f3 let3)
  let let223 := (binrel% LE.le let213 let3)
  let let224 := (Not let223)
  let let225 := (binrel% GT.gt let213 let3)
  let let226 := (binrel% LT.lt v1 let3)
  let let227 := (binrel% LE.le let1 let29)
  let let228 := (binrel% HMul.hMul let3 sx5f2)
  let let229 := (binrel% HMul.hMul let114 let228)
  let let230 := (binrel% LE.le ox5f3 let20)
  let let231 := (binrel% GE.ge let214 let3)
  let let232 := (Not let231)
  let let233 := (binrel% LT.lt let214 let3)
  let let234 := (binrel% LE.le ox5f0 let20)
  let let235 := (binrel% HMul.hMul let114 let212)
  let let236 := (binrel% HAdd.hAdd let213 let235)
  let let237 := (Not let19)
  let let238 := (Not let237)
  let let239 := (binrel% HAdd.hAdd let82 (binrel% HAdd.hAdd v1 let75))
  let let240 := (binrel% GE.ge let163 let163)
  let let241 := (binrel% HMul.hMul let114 let152)
  let let242 := (binrel% HAdd.hAdd let55 let241)
  let let243 := (binrel% HMul.hMul let114 let190)
  let let244 := (binrel% HAdd.hAdd let193 let243)
  let let245 := (Not let48)
  let let246 := (Not let245)
  let let247 := (binrel% LE.le let1 sx5f1)
  let let248 := (binrel% HAdd.hAdd let136 (binrel% HAdd.hAdd let137 let163))
  let let249 := (binrel% GE.ge let35 let3)
  let let250 := (binrel% HMul.hMul let114 let151)
  let let251 := (binrel% HAdd.hAdd let192 let250)
  let let252 := (Not let37)
  let let253 := (Not let252)
  let let254 := (binrel% LE.le let1 let78)
  let let255 := (binrel% HMul.hMul v2 let10)
  let let256 := (binrel% LE.le let255 let3)
  let let257 := (Not let256)
  let let258 := (binrel% GT.gt let255 let3)
  let let259 := (binrel% LE.le let203 let3)
  let let260 := (Not let259)
  let let261 := (binrel% GT.gt let203 let3)
  let let262 := (binrel% LE.le let1 let82)
  let let263 := (Eq let37 let38)
  let let264 := (binrel% LE.le let1 sx5f0)
  let let265 := (binrel% HMul.hMul sx5f2 let3)
  let let266 := (binrel% HSub.hSub let255 let265)
  let let267 := (binrel% GE.ge let266 let3)
  let let268 := (Not let267)
  let let269 := (binrel% LT.lt let266 let3)
  let let270 := (Eq let111 let112)
  let let271 := (binrel% LE.le let60 let3)
  let let272 := (Eq let19 let21)
  let let273 := (binrel% HMul.hMul let114 let158)
  let let274 := (binrel% GT.gt let133 let1)
  let let275 := (Eq let111 let128)
  let let276 := (binrel% GE.ge let205 let3)
  let let277 := (Not let276)
  let let278 := (binrel% LT.lt let205 let3)
  let let279 := (binrel% HMul.hMul let3 ox5f2)
  let let280 := (binrel% HMul.hMul ox5f2 let3)
  let let281 := (Eq let84 let85)
  let let282 := (binrel% HMul.hMul let114 let155)
  let let283 := (binrel% LE.le ox5f2 let20)
  let let284 := (binrel% LE.le let210 let3)
  let let285 := (Not let284)
  let let286 := (binrel% GT.gt let210 let3)
  let let287 := (binrel% GE.ge let218 let3)
  let let288 := (Not let287)
  let let289 := (binrel% LT.lt let218 let3)
  let let290 := (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd let28 let250))
  let let291 := (binrel% LT.lt sx5f0 let10)
  let let292 := (binrel% LE.le let36 let3)
  let let293 := (binrel% LE.le let55 let3)
  let let294 := (binrel% LT.lt v0 let3)
  let let295 := (binrel% LT.lt v2 let3)
  let let296 := (binrel% GE.ge let211 let3)
  let let297 := (Not let296)
  let let298 := (binrel% LT.lt let211 let3)
  let let299 := (binrel% LE.le let28 let3)
  let let300 := (binrel% LE.le let1 ox5f0)
  let let301 := (binrel% HAdd.hAdd let55 let54)
  let let302 := (binrel% HAdd.hAdd let301 (binrel% HAdd.hAdd let29 let53))
  let let303 := (Not let70)
  let let304 := (binrel% LE.le let77 let3)
  let let305 := (binrel% LT.lt sx5f1 let41)
  let let306 := (And let294 let2)
  let let307 := (binrel% LE.le let1 let205)
  let let308 := (Eq let261 let21)
  let let309 := (binrel% LE.le let1 let211)
  let let310 := (Eq let286 let122)
  let let311 := (binrel% LE.le let1 let214)
  let let312 := (Eq let225 let49)
  let let313 := (binrel% LE.le let1 ox5f1)
  let let314 := (binrel% LE.le ox5f1 let20)
  let let315 := (binrel% LE.le let1 let218)
  let let316 := (binrel% GT.gt let216 let3)
  let let317 := (Eq let316 let124)
  let let318 := (binrel% LE.le let1 sx5f2)
  let let319 := (binrel% LT.lt sx5f2 let10)
  let let320 := (binrel% LE.le let1 let266)
  let let321 := (Eq let258 let71)
  let let322 := (binrel% LE.le let1 ox5f2)
  let let323 := (binrel% HAdd.hAdd let266 v1)
  let let324 := (binrel% HSub.hSub let323 let280)
  let let325 := (binrel% LE.le let1 let324)
  let let326 := (binrel% LT.lt let324 let3)
  let let327 := (binrel% GT.gt let323 let3)
  let let328 := (Eq let327 let126)
  let let329 := (binrel% LE.le let1 sx5f3)
  let let330 := (binrel% LT.lt sx5f3 let10)
  let let331 := (binrel% LE.le let1 let194)
  let let332 := (binrel% GT.gt let193 let3)
  let let333 := (Eq let332 let94)
  let let334 := (binrel% LE.le let1 ox5f3)
  let let335 := (binrel% HAdd.hAdd let194 v0)
  let let336 := (binrel% HSub.hSub let335 let222)
  let let337 := (binrel% LE.le let1 let336)
  let let338 := (binrel% LT.lt let336 let3)
  let let339 := (binrel% GT.gt let335 let3)
  let let340 := (Eq let339 let128)
  let let341 := (Eq let336 let218)
  let let342 := (Not let341)
  let let343 := (And let342 (And let340 (And let338 (And let337 (And let230 (And let334 (And let333 (And let197 (And let331 (And let330 (And let329 (And let328 (And let326 (And let325 (And let283 (And let322 (And let321 (And let269 (And let320 (And let319 (And let318 (And let317 (And let289 (And let315 (And let314 (And let313 (And let312 (And let233 (And let311 (And let305 (And let247 (And let310 (And let298 (And let309 (And let234 (And let300 (And let308 (And let278 (And let307 (And let291 (And let264 (And let295 (And let7 (And let226 (And let5 let306)))))))))))))))))))))))))))))))))))))))))))))
  let let344 := (And let342 (And let340 (And (And let338 let337) (And (And let230 let334) (And let333 (And (And let197 let331) (And (And let330 let329) (And let328 (And (And let326 let325) (And (And let283 let322) (And let321 (And (And let269 let320) (And (And let319 let318) (And let317 (And (And let289 let315) (And (And let314 let313) (And let312 (And (And let233 let311) (And (And let305 let247) (And let310 (And (And let298 let309) (And (And let234 let300) (And let308 (And (And let278 let307) (And (And let291 let264) (And (And let295 let7) (And (And let226 let5) let306)))))))))))))))))))))))))))
  let let345 := (binrel% LE.le let335 let3)
  let let346 := (Not let345)
  let let347 := (binrel% HAdd.hAdd let35 v0)
  let let348 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd v0 let26))
  let let349 := (binrel% LT.lt let116 let1)
  let let350 := (binrel% HMul.hMul let114 let209)
  let let351 := (binrel% HAdd.hAdd let205 (binrel% HAdd.hAdd v0 let350))
  let let352 := (binrel% HAdd.hAdd let210 let350)
  let let353 := (binrel% HAdd.hAdd let301 let29)
  let let354 := (binrel% LE.le let216 let3)
  let let355 := (Not let354)
  let let356 := (Not let93)
  let let357 := (Not let356)
  let let358 := (binrel% LE.le let323 let3)
  let let359 := (Not let358)
  let let360 := (binrel% HMul.hMul let114 let265)
  let let361 := (binrel% HAdd.hAdd let255 let360)
  let let362 := (binrel% GE.ge let82 let3)
  let let363 := (binrel% HMul.hMul let114 let157)
  let let364 := (Eq let70 let71)
  let let365 := (binrel% HMul.hMul let114 let149)
  let let366 := (binrel% GT.gt let136 let1)
  let let367 := (Not let303)
  let let368 := (Eq let37 let122)
  let let369 := (Eq let61 let62)
  let let370 := (binrel% HMul.hMul let114 let279)
  let let371 := (binrel% LE.le let1 let301)
  let let372 := (binrel% HMul.hMul let114 let280)
  let let373 := (binrel% HAdd.hAdd let266 (binrel% HAdd.hAdd v1 let372))
  let let374 := (binrel% HAdd.hAdd let323 let372)
  let let375 := (binrel% GE.ge let109 let3)
  let let376 := (binrel% HMul.hMul let114 let156)
  let let377 := (binrel% GE.ge let324 let3)
  let let378 := (Not let377)
  let let379 := (Eq let84 let126)
  let let380 := (Not let59)
  let let381 := (Eq let58 let380)
  let let382 := (Eq let380 let58)
  let let383 := (Not let84)
  let let384 := (binrel% LE.le let83 let3)
  let let385 := (binrel% GE.ge let301 let3)
  let let386 := (Eq let48 let49)
  let let387 := (binrel% HAdd.hAdd let82 v1)
  let let388 := (binrel% LE.le let1 let109)
  let let389 := (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd v0 let98))
  let let390 := (binrel% LT.lt let56 let3)
  let let391 := (binrel% HAdd.hAdd let28 (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let103 let102)))
  let let392 := (binrel% HAdd.hAdd let391 let99)
  let let393 := (binrel% LE.le let1 let35)
  let let394 := (binrel% HMul.hMul let114 let150)
  let let395 := (binrel% HAdd.hAdd let55 let103)
  let let396 := (binrel% HAdd.hAdd let395 (binrel% HAdd.hAdd let28 let102))
  let let397 := (binrel% LT.lt let137 let1)
  let let398 := (Eq let93 let94)
  let let399 := (binrel% LE.le let391 let3)
  let let400 := (binrel% LE.le let193 let3)
  let let401 := (Not let400)
  let let402 := (Not let383)
  let let403 := (Eq let58 let58)
  let let404 := (binrel% LE.le let1 let105)
  let let405 := (binrel% HMul.hMul let114 let222)
  let let406 := (binrel% HAdd.hAdd let194 (binrel% HAdd.hAdd v0 let405))
  let let407 := (binrel% HAdd.hAdd let335 let405)
  let let408 := (binrel% GE.ge let336 let3)
  let let409 := (Not let408)
  let let410 := (Eq let118 let118)
  let let411 := (binrel% LE.le let110 let3)
  let let412 := (Eq let118 let170)
  let let413 := (binrel% HAdd.hAdd let109 v0)
  let let414 := (Eq let105 let56)
  let let415 := (Eq let117 let117)
  let let416 := (And let120 (And let270 (And let108 (And let106 (And let97 (And let96 (And let95 (And let92 (And let90 (And let88 (And let87 (And let281 (And let81 (And let79 (And let74 (And let73 (And let72 (And let69 (And let67 (And let65 (And let64 (And let369 (And let59 (And let57 (And let52 (And let51 (And let50 (And let47 (And let45 (And let42 (And let40 (And let263 let33))))))))))))))))))))))))))))))))
  let let417 := (Eq And And)
  let let418 := (Not let106)
  let let419 := (Or let418 (Or let117 let58))
  let let420 := (Or let418 (Or let187 let380))
  let let421 := (Eq Or Or)
  let let422 := (Not let390)
  let let423 := (binrel% LE.le let175 let135)
  let let424 := (And let172 let106)
  let let425 := (binrel% LE.le let176 let173)
  let let426 := (binrel% LE.le let116 let114)
  let let427 := (And let366 let426)
  let let428 := (binrel% LT.lt let177 let139)
  let let429 := (And let274 let390)
  let let430 := (Or let118 let186)
  let let431 := (Or let170 let186)
  let let432 := (Not let57)
  let let433 := (Or let432 (Or let119 let107))
  let let434 := (Or let432 (Or let119 let166))
  let let435 := (Not let165)
  let let436 := (binrel% LE.le let141 let135)
  let let437 := (And let172 let57)
  let let438 := (binrel% LE.le let142 let138)
  let let439 := (And let397 let118)
  let let440 := (binrel% LT.lt let143 let139)
  let let441 := (And let274 let165)
fun lean_h0 : (Eq let132 let121) => -- PREPROCESS
fun lean_r1 : (Eq let147 let146) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let143 let148) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let142 let154) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let141 let162) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let164 let163) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let165 let108) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let168 let167) => -- THEORY_REWRITE_BOOL
fun lean_r8 : let168 => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let169 True) => -- THEORY_REWRITE_BOOL
fun lean_r10 : let171 => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let172 True) => -- EVALUATE
fun lean_r12 : (Eq let181 let180) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let177 let182) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let185 let163) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let189 let188) => -- THEORY_REWRITE_BOOL
fun lean_r16 : let189 => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let173 let137) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let197 let196) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let135 let163) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let199 let61) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq let200 let125) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq let205 let204) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let206 False) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let217 let215) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let218 let217) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let203 let28) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let220 let111) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let221 let57) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let222 let149) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let225 let224) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let226 let6) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let207 let155) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let176 let184) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let227 let30) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let175 let183) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let229 let76) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let230 let97) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let233 let232) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let234 let24) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let214 let236) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let213 let55) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let238 let19) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let239 let78) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let240 True) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let191 let242) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let194 let244) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let246 let48) => -- THEORY_REWRITE_BOOL
fun lean_r48 : (Eq let247 let40) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let248 let163) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let249 let16) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let193 let251) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let253 let37) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let254 let79) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let258 let257) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let201 let158) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let261 let260) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let262 let67) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let39 let263) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let264 let9) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let269 let268) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let113 let270) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq let139 let136) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let271 let198) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let272 let22) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq let273 let27) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let274 True) => -- EVALUATE
fun lean_r67 : (Eq let275 let129) => -- THEORY_REWRITE_BOOL
fun lean_r68 : (Eq let278 let277) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let280 let279) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let86 let281) => -- THEORY_REWRITE_BOOL
fun lean_r71 : (Eq let282 let53) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let283 let74) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let286 let285) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let289 let288) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let251 let290) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let291 let11) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let292 let252) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let138 let137) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let293 let245) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let294 let4) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let295 let8) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let212 let156) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let298 let297) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let299 let237) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let300 let23) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let302 let56) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let304 let303) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let305 let42) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let344 let343) => -- THEORY_REWRITE_BOOL
fun lean_r90 : (Eq let339 let346) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let347 let36) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let348 let29) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let330 let88) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let313 let51) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let349 let186) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let352 let351) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let353 let60) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let316 let355) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let319 let65) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let318 let64) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let357 let93) => -- THEORY_REWRITE_BOOL
fun lean_r102 : (Eq let265 let228) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let255 let77) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let327 let359) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let266 let361) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let329 let87) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let362 let68) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let363 let26) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let364 let72) => -- THEORY_REWRITE_BOOL
fun lean_r110 : (Eq let365 let98) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let366 True) => -- EVALUATE
fun lean_r112 : (Eq let211 let352) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let367 let70) => -- THEORY_REWRITE_BOOL
fun lean_r114 : (Eq let368 let123) => -- THEORY_REWRITE_BOOL
fun lean_r115 : (Eq let63 let369) => -- THEORY_REWRITE_BOOL
fun lean_r116 : (Eq let322 let73) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let370 let75) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq let371 let45) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let374 let373) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let375 let91) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let324 let374) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let376 let54) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let326 let378) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let379 let127) => -- THEORY_REWRITE_BOOL
fun lean_r125 : (Eq let382 let381) => -- THEORY_REWRITE_BOOL
fun lean_r126 : (Eq let384 let383) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let334 let96) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let385 let46) => -- THEORY_REWRITE_ARITH
fun lean_r129 : let382 => -- THEORY_REWRITE_BOOL
fun lean_r130 : (Eq let386 let50) => -- THEORY_REWRITE_BOOL
fun lean_r131 : (Eq let387 let83) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let388 let90) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let389 let105) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let390 let59) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let314 let52) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let392 let109) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let393 let15) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let394 let99) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let190 let150) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let396 let391) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let250 let102) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq let397 True) => -- EVALUATE
fun lean_r143 : (Eq let241 let103) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let398 let95) => -- THEORY_REWRITE_BOOL
fun lean_r145 : (Eq let399 let356) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq let332 let401) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq let402 let84) => -- THEORY_REWRITE_BOOL
fun lean_r148 : (Eq let403 True) => -- THEORY_REWRITE_BOOL
fun lean_r149 : (Eq let404 let106) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let209 let157) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let407 let406) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq let336 let407) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq let338 let409) => -- THEORY_REWRITE_ARITH
fun lean_r154 : (Eq let410 True) => -- THEORY_REWRITE_BOOL
fun lean_r155 : (Eq let411 let219) => -- THEORY_REWRITE_ARITH
fun lean_r156 : (Eq let171 let412) => -- THEORY_REWRITE_BOOL
fun lean_r157 : (Eq let413 let110) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq let414 let130) => -- THEORY_REWRITE_ARITH
fun lean_r159 : (Eq let415 True) => -- THEORY_REWRITE_BOOL
fun lean_a160 : let344 => by
have lean_s0 : (Or let432 (Or let119 (Or let166 False))) :=
  (scope (fun lean_a161 : let57 =>
    (scope (fun lean_a162 : let118 =>
      (scope (fun lean_a163 : let108 =>
        have lean_s0 : (Eq let108 let165) := by timed Eq.symm lean_r6
        have lean_s1 : let165 := by timed eqResolve lean_a163 lean_s0
        have lean_s2 : (Or let435 False) :=
          (scope (fun lean_a164 : let165 =>
            have lean_s2 : let274 := by timed trueElim lean_r66
            have lean_s3 : let441 := by timed And.intro lean_s2 lean_a164
            have lean_s4 : (Implies let441 let440) := by arithMulPos [let105, let3, let133], 0
            have lean_s5 : let440 := by timed modusPonens lean_s3 lean_s4
            have lean_s6 : let397 := by timed trueElim lean_r142
            have lean_s7 : let439 := by timed And.intro lean_s6 lean_a162
            have lean_s8 : (Implies let439 let438) := by arithMulNeg [let116, let20, let137], 3
            have lean_s9 : let438 := by timed modusPonens lean_s7 lean_s8
            have lean_s10 : let172 := by timed trueElim lean_r11
            have lean_s11 : let437 := by timed And.intro lean_s10 lean_a161
            have lean_s12 : (Implies let437 let436) := by arithMulNeg [let56, let1, let134], 3
            have lean_s13 : let436 := by timed modusPonens lean_s11 lean_s12
            have lean_s14 : let147 := by sumBounds [lean_s5, lean_s9, lean_s13]
            let lean_s15 := by timed congrHAdd lean_r3 lean_r4
            have lean_s16 : (Eq let144 let164) := by timed congrHAdd lean_r2 lean_s15
            have lean_s17 : (Eq let144 let163) := by timed Eq.trans lean_s16 lean_r5
            let lean_s18 := by timed flipCongrArg lean_s17 [GE.ge]
            let lean_s19 := by timed congrHAdd lean_r78 lean_r19
            have lean_s20 : (Eq let140 let248) := by timed congrHAdd lean_r62 lean_s19
            have lean_s21 : (Eq let140 let163) := by timed Eq.trans lean_s20 lean_r49
            have lean_s22 : (Eq let145 let240) := by timed congr lean_s18 lean_s21
            have lean_s23 : (Eq let145 True) := by timed Eq.trans lean_s22 lean_r44
            have lean_s24 : (Eq let146 let206) := by timed flipCongrArg lean_s23 [Not]
            have lean_s25 : (Eq let146 False) := by timed Eq.trans lean_s24 lean_r23
            have lean_s26 : (Eq let147 False) := by timed Eq.trans lean_r1 lean_s25
            show False from by timed eqResolve lean_s14 lean_s26
          ))
        have lean_s3 : let435 := by liftOrNToNeg lean_s2
        have lean_s4 : (Eq let435 let166) := by timed flipCongrArg lean_r6 [Not]
        have lean_s5 : (Eq let435 let107) := by timed Eq.trans lean_s4 lean_r8
        have lean_s6 : let107 := by timed eqResolve lean_s3 lean_s5
        have lean_s7 : (Eq let107 let435) := by timed Eq.symm lean_s5
        have lean_s8 : let435 := by timed eqResolve lean_s6 lean_s7
        show False from by timed contradiction lean_s1 lean_s8
  ))))))
have lean_s1 : (Not (And let57 (And let118 let108))) := by liftOrNToNeg lean_s0
have lean_s2 : let434 := by timed flipNotAnd lean_s1 [let57, let118, let108]
have lean_s3 : let421 := by timed rfl
have lean_s4 : (Eq let432 let432) := by timed rfl
let lean_s5 := by timed congr lean_s3 lean_s4
have lean_s6 : (Eq let119 let119) := by timed rfl
let lean_s7 := by timed congr lean_s3 lean_s6
have lean_s8 : let169 := by timed rfl
let lean_s9 := by timed flipCongrArg lean_s8 [Eq]
have lean_s10 : (Eq let167 let169) := by timed congr lean_s9 lean_r8
have lean_s11 : (Eq let167 True) := by timed Eq.trans lean_s10 lean_r9
have lean_s12 : (Eq let168 True) := by timed Eq.trans lean_r7 lean_s11
have lean_s13 : let168 := by timed trueElim lean_s12
let lean_s14 := by timed congr lean_s7 lean_s13
have lean_s15 : (Eq let434 let433) := by timed congr lean_s5 lean_s14
have lean_s16 : let433 := by timed eqResolve lean_s2 lean_s15
have lean_s17 : (Or let107 (Or let119 let432)) := by permutateOr lean_s16, [2, 1, 0], (- 1)
have lean_s18 : let417 := by timed rfl
have lean_s19 : (Eq let55 let55) := by timed rfl
let lean_s20 := by timed flipCongrArg lean_s19 [HAdd.hAdd]
have lean_s21 : (Eq let242 let395) := by timed congr lean_s20 lean_r143
have lean_s22 : (Eq let191 let395) := by timed Eq.trans lean_r45 lean_s21
have lean_s23 : (Eq let28 let28) := by timed rfl
let lean_s24 := by timed congrHAdd lean_s23 lean_r141
have lean_s25 : (Eq let290 let396) := by timed congrHAdd lean_s22 lean_s24
have lean_s26 : (Eq let290 let391) := by timed Eq.trans lean_s25 lean_r140
have lean_s27 : (Eq let251 let391) := by timed Eq.trans lean_r75 lean_s26
have lean_s28 : (Eq let193 let391) := by timed Eq.trans lean_r51 lean_s27
let lean_s29 := by timed flipCongrArg lean_s28 [HAdd.hAdd]
have lean_s30 : (Eq let114 let114) := by timed rfl
let lean_s31 := by timed flipCongrArg lean_s30 [HMul.hMul]
have lean_s32 : (Eq let243 let394) := by timed congr lean_s31 lean_r139
have lean_s33 : (Eq let243 let99) := by timed Eq.trans lean_s32 lean_r138
have lean_s34 : (Eq let244 let392) := by timed congr lean_s29 lean_s33
have lean_s35 : (Eq let244 let109) := by timed Eq.trans lean_s34 lean_r136
have lean_s36 : (Eq let194 let109) := by timed Eq.trans lean_r46 lean_s35
have lean_s37 : (Eq v0 v0) := by timed rfl
let lean_s38 := by timed flipCongrArg lean_s30 [HMul.hMul]
have lean_s39 : (Eq let405 let365) := by timed congr lean_s38 lean_r29
have lean_s40 : (Eq let405 let98) := by timed Eq.trans lean_s39 lean_r110
let lean_s41 := by timed congrHAdd lean_s37 lean_s40
have lean_s42 : (Eq let406 let389) := by timed congrHAdd lean_s36 lean_s41
have lean_s43 : (Eq let406 let105) := by timed Eq.trans lean_s42 lean_r133
have lean_s44 : (Eq let407 let105) := by timed Eq.trans lean_r151 lean_s43
have lean_s45 : (Eq let336 let105) := by timed Eq.trans lean_r152 lean_s44
let lean_s46 := by timed flipCongrArg lean_s45 [Eq]
let lean_s47 := by timed flipCongrArg lean_r41 [HAdd.hAdd]
let lean_s48 := by timed flipCongrArg lean_s30 [HMul.hMul]
have lean_s49 : (Eq let235 let376) := by timed congr lean_s48 lean_r82
have lean_s50 : (Eq let235 let54) := by timed Eq.trans lean_s49 lean_r122
have lean_s51 : (Eq let236 let301) := by timed congr lean_s47 lean_s50
have lean_s52 : (Eq let214 let301) := by timed Eq.trans lean_r40 lean_s51
let lean_s53 := by timed flipCongrArg lean_r26 [HAdd.hAdd]
let lean_s54 := by timed flipCongrArg lean_s30 [HMul.hMul]
have lean_s55 : (Eq let202 let273) := by timed congr lean_s54 lean_r55
have lean_s56 : (Eq let202 let27) := by timed Eq.trans lean_s55 lean_r65
have lean_s57 : (Eq let204 let35) := by timed congr lean_s53 lean_s56
have lean_s58 : (Eq let205 let35) := by timed Eq.trans lean_r22 lean_s57
let lean_s59 := by timed flipCongrArg lean_s30 [HMul.hMul]
have lean_s60 : (Eq let350 let363) := by timed congr lean_s59 lean_r150
have lean_s61 : (Eq let350 let26) := by timed Eq.trans lean_s60 lean_r108
let lean_s62 := by timed congrHAdd lean_s37 lean_s61
have lean_s63 : (Eq let351 let348) := by timed congrHAdd lean_s58 lean_s62
have lean_s64 : (Eq let351 let29) := by timed Eq.trans lean_s63 lean_r92
have lean_s65 : (Eq let352 let29) := by timed Eq.trans lean_r96 lean_s64
have lean_s66 : (Eq let211 let29) := by timed Eq.trans lean_r112 lean_s65
let lean_s67 := by timed flipCongrArg lean_s30 [HMul.hMul]
have lean_s68 : (Eq let208 let282) := by timed congr lean_s67 lean_r32
have lean_s69 : (Eq let208 let53) := by timed Eq.trans lean_s68 lean_r71
let lean_s70 := by timed congrHAdd lean_s66 lean_s69
have lean_s71 : (Eq let215 let302) := by timed congrHAdd lean_s52 lean_s70
have lean_s72 : (Eq let215 let56) := by timed Eq.trans lean_s71 lean_r86
have lean_s73 : (Eq let217 let56) := by timed Eq.trans lean_r24 lean_s72
have lean_s74 : (Eq let218 let56) := by timed Eq.trans lean_r25 lean_s73
have lean_s75 : (Eq let341 let414) := by timed congr lean_s46 lean_s74
have lean_s76 : (Eq let341 let130) := by timed Eq.trans lean_s75 lean_r158
have lean_s77 : (Eq let342 let131) := by timed flipCongrArg lean_s76 [Not]
let lean_s78 := by timed congr lean_s18 lean_s77
let lean_s79 := by timed flipCongrArg lean_s36 [HAdd.hAdd]
have lean_s80 : (Eq let335 let413) := by timed congr lean_s79 lean_s37
have lean_s81 : (Eq let335 let110) := by timed Eq.trans lean_s80 lean_r157
let lean_s82 := by timed flipCongrArg lean_s81 [LE.le]
have lean_s83 : (Eq let3 let3) := by timed rfl
have lean_s84 : (Eq let345 let411) := by timed congr lean_s82 lean_s83
have lean_s85 : (Eq let345 let219) := by timed Eq.trans lean_s84 lean_r155
have lean_s86 : (Eq let346 let220) := by timed flipCongrArg lean_s85 [Not]
have lean_s87 : (Eq let346 let111) := by timed Eq.trans lean_s86 lean_r27
have lean_s88 : (Eq let339 let111) := by timed Eq.trans lean_r90 lean_s87
let lean_s89 := by timed flipCongrArg lean_s88 [Eq]
have lean_s90 : (Eq let128 let128) := by timed rfl
have lean_s91 : (Eq let340 let275) := by timed congr lean_s89 lean_s90
have lean_s92 : (Eq let340 let129) := by timed Eq.trans lean_s91 lean_r67
let lean_s93 := by timed congr lean_s18 lean_s92
let lean_s94 := by timed flipCongrArg lean_s45 [GE.ge]
have lean_s95 : (Eq let408 let107) := by timed congr lean_s94 lean_s83
have lean_s96 : (Eq let409 let108) := by timed flipCongrArg lean_s95 [Not]
have lean_s97 : (Eq let338 let108) := by timed Eq.trans lean_r153 lean_s96
let lean_s98 := by timed congr lean_s18 lean_s97
have lean_s99 : (Eq let1 let1) := by timed rfl
let lean_s100 := by timed flipCongrArg lean_s99 [LE.le]
have lean_s101 : (Eq let337 let404) := by timed congr lean_s100 lean_s45
have lean_s102 : (Eq let337 let106) := by timed Eq.trans lean_s101 lean_r149
let lean_s103 := by timed congr lean_s18 lean_s102
let lean_s104 := by timed congr lean_s18 lean_r37
let lean_s105 := by timed congr lean_s18 lean_r127
let lean_s106 := by timed flipCongrArg lean_s28 [LE.le]
have lean_s107 : (Eq let400 let399) := by timed congr lean_s106 lean_s83
have lean_s108 : (Eq let400 let356) := by timed Eq.trans lean_s107 lean_r145
have lean_s109 : (Eq let401 let357) := by timed flipCongrArg lean_s108 [Not]
have lean_s110 : (Eq let401 let93) := by timed Eq.trans lean_s109 lean_r101
have lean_s111 : (Eq let332 let93) := by timed Eq.trans lean_r146 lean_s110
let lean_s112 := by timed flipCongrArg lean_s111 [Eq]
have lean_s113 : (Eq let94 let94) := by timed rfl
have lean_s114 : (Eq let333 let398) := by timed congr lean_s112 lean_s113
have lean_s115 : (Eq let333 let95) := by timed Eq.trans lean_s114 lean_r144
let lean_s116 := by timed congr lean_s18 lean_s115
let lean_s117 := by timed flipCongrArg lean_s36 [GE.ge]
have lean_s118 : (Eq let195 let375) := by timed congr lean_s117 lean_s83
have lean_s119 : (Eq let195 let91) := by timed Eq.trans lean_s118 lean_r120
have lean_s120 : (Eq let196 let92) := by timed flipCongrArg lean_s119 [Not]
have lean_s121 : (Eq let197 let92) := by timed Eq.trans lean_r18 lean_s120
let lean_s122 := by timed congr lean_s18 lean_s121
let lean_s123 := by timed flipCongrArg lean_s99 [LE.le]
have lean_s124 : (Eq let331 let388) := by timed congr lean_s123 lean_s36
have lean_s125 : (Eq let331 let90) := by timed Eq.trans lean_s124 lean_r132
let lean_s126 := by timed congr lean_s18 lean_s125
let lean_s127 := by timed congr lean_s18 lean_r93
let lean_s128 := by timed congr lean_s18 lean_r106
let lean_s129 := by timed flipCongrArg lean_r103 [HAdd.hAdd]
let lean_s130 := by timed flipCongrArg lean_s30 [HMul.hMul]
have lean_s131 : (Eq let360 let229) := by timed congr lean_s130 lean_r102
have lean_s132 : (Eq let360 let76) := by timed Eq.trans lean_s131 lean_r36
have lean_s133 : (Eq let361 let82) := by timed congr lean_s129 lean_s132
have lean_s134 : (Eq let266 let82) := by timed Eq.trans lean_r105 lean_s133
let lean_s135 := by timed flipCongrArg lean_s134 [HAdd.hAdd]
have lean_s136 : (Eq v1 v1) := by timed rfl
have lean_s137 : (Eq let323 let387) := by timed congr lean_s135 lean_s136
have lean_s138 : (Eq let323 let83) := by timed Eq.trans lean_s137 lean_r131
let lean_s139 := by timed flipCongrArg lean_s138 [LE.le]
have lean_s140 : (Eq let358 let384) := by timed congr lean_s139 lean_s83
have lean_s141 : (Eq let358 let383) := by timed Eq.trans lean_s140 lean_r126
have lean_s142 : (Eq let359 let402) := by timed flipCongrArg lean_s141 [Not]
have lean_s143 : (Eq let359 let84) := by timed Eq.trans lean_s142 lean_r147
have lean_s144 : (Eq let327 let84) := by timed Eq.trans lean_r104 lean_s143
let lean_s145 := by timed flipCongrArg lean_s144 [Eq]
have lean_s146 : (Eq let126 let126) := by timed rfl
have lean_s147 : (Eq let328 let379) := by timed congr lean_s145 lean_s146
have lean_s148 : (Eq let328 let127) := by timed Eq.trans lean_s147 lean_r124
let lean_s149 := by timed congr lean_s18 lean_s148
let lean_s150 := by timed flipCongrArg lean_s30 [HMul.hMul]
have lean_s151 : (Eq let372 let370) := by timed congr lean_s150 lean_r69
have lean_s152 : (Eq let372 let75) := by timed Eq.trans lean_s151 lean_r117
let lean_s153 := by timed congrHAdd lean_s136 lean_s152
have lean_s154 : (Eq let373 let239) := by timed congrHAdd lean_s134 lean_s153
have lean_s155 : (Eq let373 let78) := by timed Eq.trans lean_s154 lean_r43
have lean_s156 : (Eq let374 let78) := by timed Eq.trans lean_r119 lean_s155
have lean_s157 : (Eq let324 let78) := by timed Eq.trans lean_r121 lean_s156
let lean_s158 := by timed flipCongrArg lean_s157 [GE.ge]
have lean_s159 : (Eq let377 let80) := by timed congr lean_s158 lean_s83
have lean_s160 : (Eq let378 let81) := by timed flipCongrArg lean_s159 [Not]
have lean_s161 : (Eq let326 let81) := by timed Eq.trans lean_r123 lean_s160
let lean_s162 := by timed congr lean_s18 lean_s161
let lean_s163 := by timed flipCongrArg lean_s99 [LE.le]
have lean_s164 : (Eq let325 let254) := by timed congr lean_s163 lean_s157
have lean_s165 : (Eq let325 let79) := by timed Eq.trans lean_s164 lean_r53
let lean_s166 := by timed congr lean_s18 lean_s165
let lean_s167 := by timed congr lean_s18 lean_r72
let lean_s168 := by timed congr lean_s18 lean_r116
let lean_s169 := by timed flipCongrArg lean_r103 [LE.le]
have lean_s170 : (Eq let256 let304) := by timed congr lean_s169 lean_s83
have lean_s171 : (Eq let256 let303) := by timed Eq.trans lean_s170 lean_r87
have lean_s172 : (Eq let257 let367) := by timed flipCongrArg lean_s171 [Not]
have lean_s173 : (Eq let257 let70) := by timed Eq.trans lean_s172 lean_r113
have lean_s174 : (Eq let258 let70) := by timed Eq.trans lean_r54 lean_s173
let lean_s175 := by timed flipCongrArg lean_s174 [Eq]
have lean_s176 : (Eq let71 let71) := by timed rfl
have lean_s177 : (Eq let321 let364) := by timed congr lean_s175 lean_s176
have lean_s178 : (Eq let321 let72) := by timed Eq.trans lean_s177 lean_r109
let lean_s179 := by timed congr lean_s18 lean_s178
let lean_s180 := by timed flipCongrArg lean_s134 [GE.ge]
have lean_s181 : (Eq let267 let362) := by timed congr lean_s180 lean_s83
have lean_s182 : (Eq let267 let68) := by timed Eq.trans lean_s181 lean_r107
have lean_s183 : (Eq let268 let69) := by timed flipCongrArg lean_s182 [Not]
have lean_s184 : (Eq let269 let69) := by timed Eq.trans lean_r60 lean_s183
let lean_s185 := by timed congr lean_s18 lean_s184
let lean_s186 := by timed flipCongrArg lean_s99 [LE.le]
have lean_s187 : (Eq let320 let262) := by timed congr lean_s186 lean_s134
have lean_s188 : (Eq let320 let67) := by timed Eq.trans lean_s187 lean_r57
let lean_s189 := by timed congr lean_s18 lean_s188
let lean_s190 := by timed congr lean_s18 lean_r99
let lean_s191 := by timed congr lean_s18 lean_r100
let lean_s192 := by timed flipCongrArg lean_s52 [HAdd.hAdd]
have lean_s193 : (Eq let216 let353) := by timed congr lean_s192 lean_s66
have lean_s194 : (Eq let216 let60) := by timed Eq.trans lean_s193 lean_r97
let lean_s195 := by timed flipCongrArg lean_s194 [LE.le]
have lean_s196 : (Eq let354 let271) := by timed congr lean_s195 lean_s83
have lean_s197 : (Eq let354 let198) := by timed Eq.trans lean_s196 lean_r63
have lean_s198 : (Eq let355 let199) := by timed flipCongrArg lean_s197 [Not]
have lean_s199 : (Eq let355 let61) := by timed Eq.trans lean_s198 lean_r20
have lean_s200 : (Eq let316 let61) := by timed Eq.trans lean_r98 lean_s199
let lean_s201 := by timed flipCongrArg lean_s200 [Eq]
have lean_s202 : (Eq let124 let124) := by timed rfl
have lean_s203 : (Eq let317 let200) := by timed congr lean_s201 lean_s202
have lean_s204 : (Eq let317 let125) := by timed Eq.trans lean_s203 lean_r21
let lean_s205 := by timed congr lean_s18 lean_s204
let lean_s206 := by timed flipCongrArg lean_s74 [GE.ge]
have lean_s207 : (Eq let287 let58) := by timed congr lean_s206 lean_s83
have lean_s208 : (Eq let288 let59) := by timed flipCongrArg lean_s207 [Not]
have lean_s209 : (Eq let289 let59) := by timed Eq.trans lean_r74 lean_s208
let lean_s210 := by timed congr lean_s18 lean_s209
let lean_s211 := by timed flipCongrArg lean_s99 [LE.le]
have lean_s212 : (Eq let315 let221) := by timed congr lean_s211 lean_s74
have lean_s213 : (Eq let315 let57) := by timed Eq.trans lean_s212 lean_r28
let lean_s214 := by timed congr lean_s18 lean_s213
let lean_s215 := by timed congr lean_s18 lean_r135
let lean_s216 := by timed congr lean_s18 lean_r94
let lean_s217 := by timed flipCongrArg lean_r41 [LE.le]
have lean_s218 : (Eq let223 let293) := by timed congr lean_s217 lean_s83
have lean_s219 : (Eq let223 let245) := by timed Eq.trans lean_s218 lean_r79
have lean_s220 : (Eq let224 let246) := by timed flipCongrArg lean_s219 [Not]
have lean_s221 : (Eq let224 let48) := by timed Eq.trans lean_s220 lean_r47
have lean_s222 : (Eq let225 let48) := by timed Eq.trans lean_r30 lean_s221
let lean_s223 := by timed flipCongrArg lean_s222 [Eq]
have lean_s224 : (Eq let49 let49) := by timed rfl
have lean_s225 : (Eq let312 let386) := by timed congr lean_s223 lean_s224
have lean_s226 : (Eq let312 let50) := by timed Eq.trans lean_s225 lean_r130
let lean_s227 := by timed congr lean_s18 lean_s226
let lean_s228 := by timed flipCongrArg lean_s52 [GE.ge]
have lean_s229 : (Eq let231 let385) := by timed congr lean_s228 lean_s83
have lean_s230 : (Eq let231 let46) := by timed Eq.trans lean_s229 lean_r128
have lean_s231 : (Eq let232 let47) := by timed flipCongrArg lean_s230 [Not]
have lean_s232 : (Eq let233 let47) := by timed Eq.trans lean_r38 lean_s231
let lean_s233 := by timed congr lean_s18 lean_s232
let lean_s234 := by timed flipCongrArg lean_s99 [LE.le]
have lean_s235 : (Eq let311 let371) := by timed congr lean_s234 lean_s52
have lean_s236 : (Eq let311 let45) := by timed Eq.trans lean_s235 lean_r118
let lean_s237 := by timed congr lean_s18 lean_s236
let lean_s238 := by timed congr lean_s18 lean_r88
let lean_s239 := by timed congr lean_s18 lean_r48
let lean_s240 := by timed flipCongrArg lean_s58 [HAdd.hAdd]
have lean_s241 : (Eq let210 let347) := by timed congr lean_s240 lean_s37
have lean_s242 : (Eq let210 let36) := by timed Eq.trans lean_s241 lean_r91
let lean_s243 := by timed flipCongrArg lean_s242 [LE.le]
have lean_s244 : (Eq let284 let292) := by timed congr lean_s243 lean_s83
have lean_s245 : (Eq let284 let252) := by timed Eq.trans lean_s244 lean_r77
have lean_s246 : (Eq let285 let253) := by timed flipCongrArg lean_s245 [Not]
have lean_s247 : (Eq let285 let37) := by timed Eq.trans lean_s246 lean_r52
have lean_s248 : (Eq let286 let37) := by timed Eq.trans lean_r73 lean_s247
let lean_s249 := by timed flipCongrArg lean_s248 [Eq]
have lean_s250 : (Eq let122 let122) := by timed rfl
have lean_s251 : (Eq let310 let368) := by timed congr lean_s249 lean_s250
have lean_s252 : (Eq let310 let123) := by timed Eq.trans lean_s251 lean_r114
let lean_s253 := by timed congr lean_s18 lean_s252
let lean_s254 := by timed flipCongrArg lean_s66 [GE.ge]
have lean_s255 : (Eq let296 let31) := by timed congr lean_s254 lean_s83
have lean_s256 : (Eq let297 let32) := by timed flipCongrArg lean_s255 [Not]
have lean_s257 : (Eq let298 let32) := by timed Eq.trans lean_r83 lean_s256
let lean_s258 := by timed congr lean_s18 lean_s257
let lean_s259 := by timed flipCongrArg lean_s99 [LE.le]
have lean_s260 : (Eq let309 let227) := by timed congr lean_s259 lean_s66
have lean_s261 : (Eq let309 let30) := by timed Eq.trans lean_s260 lean_r34
let lean_s262 := by timed congr lean_s18 lean_s261
let lean_s263 := by timed congr lean_s18 lean_r39
let lean_s264 := by timed congr lean_s18 lean_r85
let lean_s265 := by timed flipCongrArg lean_r26 [LE.le]
have lean_s266 : (Eq let259 let299) := by timed congr lean_s265 lean_s83
have lean_s267 : (Eq let259 let237) := by timed Eq.trans lean_s266 lean_r84
have lean_s268 : (Eq let260 let238) := by timed flipCongrArg lean_s267 [Not]
have lean_s269 : (Eq let260 let19) := by timed Eq.trans lean_s268 lean_r42
have lean_s270 : (Eq let261 let19) := by timed Eq.trans lean_r56 lean_s269
let lean_s271 := by timed flipCongrArg lean_s270 [Eq]
have lean_s272 : (Eq let21 let21) := by timed rfl
have lean_s273 : (Eq let308 let272) := by timed congr lean_s271 lean_s272
have lean_s274 : (Eq let308 let22) := by timed Eq.trans lean_s273 lean_r64
let lean_s275 := by timed congr lean_s18 lean_s274
let lean_s276 := by timed flipCongrArg lean_s58 [GE.ge]
have lean_s277 : (Eq let276 let249) := by timed congr lean_s276 lean_s83
have lean_s278 : (Eq let276 let16) := by timed Eq.trans lean_s277 lean_r50
have lean_s279 : (Eq let277 let17) := by timed flipCongrArg lean_s278 [Not]
have lean_s280 : (Eq let278 let17) := by timed Eq.trans lean_r68 lean_s279
let lean_s281 := by timed congr lean_s18 lean_s280
let lean_s282 := by timed flipCongrArg lean_s99 [LE.le]
have lean_s283 : (Eq let307 let393) := by timed congr lean_s282 lean_s58
have lean_s284 : (Eq let307 let15) := by timed Eq.trans lean_s283 lean_r137
let lean_s285 := by timed congr lean_s18 lean_s284
let lean_s286 := by timed congr lean_s18 lean_r76
let lean_s287 := by timed congr lean_s18 lean_r59
let lean_s288 := by timed congr lean_s18 lean_r81
have lean_s289 : (Eq let7 let7) := by timed rfl
let lean_s290 := by timed congr lean_s18 lean_s289
let lean_s291 := by timed congr lean_s18 lean_r31
have lean_s292 : (Eq let5 let5) := by timed rfl
let lean_s293 := by timed congr lean_s18 lean_s292
let lean_s294 := by timed congr lean_s18 lean_r80
have lean_s295 : (Eq let2 let2) := by timed rfl
let lean_s296 := by timed congr lean_s294 lean_s295
let lean_s297 := by timed congr lean_s293 lean_s296
let lean_s298 := by timed congr lean_s291 lean_s297
let lean_s299 := by timed congr lean_s290 lean_s298
let lean_s300 := by timed congr lean_s288 lean_s299
let lean_s301 := by timed congr lean_s287 lean_s300
let lean_s302 := by timed congr lean_s286 lean_s301
let lean_s303 := by timed congr lean_s285 lean_s302
let lean_s304 := by timed congr lean_s281 lean_s303
let lean_s305 := by timed congr lean_s275 lean_s304
let lean_s306 := by timed congr lean_s264 lean_s305
let lean_s307 := by timed congr lean_s263 lean_s306
let lean_s308 := by timed congr lean_s262 lean_s307
let lean_s309 := by timed congr lean_s258 lean_s308
let lean_s310 := by timed congr lean_s253 lean_s309
let lean_s311 := by timed congr lean_s239 lean_s310
let lean_s312 := by timed congr lean_s238 lean_s311
let lean_s313 := by timed congr lean_s237 lean_s312
let lean_s314 := by timed congr lean_s233 lean_s313
let lean_s315 := by timed congr lean_s227 lean_s314
let lean_s316 := by timed congr lean_s216 lean_s315
let lean_s317 := by timed congr lean_s215 lean_s316
let lean_s318 := by timed congr lean_s214 lean_s317
let lean_s319 := by timed congr lean_s210 lean_s318
let lean_s320 := by timed congr lean_s205 lean_s319
let lean_s321 := by timed congr lean_s191 lean_s320
let lean_s322 := by timed congr lean_s190 lean_s321
let lean_s323 := by timed congr lean_s189 lean_s322
let lean_s324 := by timed congr lean_s185 lean_s323
let lean_s325 := by timed congr lean_s179 lean_s324
let lean_s326 := by timed congr lean_s168 lean_s325
let lean_s327 := by timed congr lean_s167 lean_s326
let lean_s328 := by timed congr lean_s166 lean_s327
let lean_s329 := by timed congr lean_s162 lean_s328
let lean_s330 := by timed congr lean_s149 lean_s329
let lean_s331 := by timed congr lean_s128 lean_s330
let lean_s332 := by timed congr lean_s127 lean_s331
let lean_s333 := by timed congr lean_s126 lean_s332
let lean_s334 := by timed congr lean_s122 lean_s333
let lean_s335 := by timed congr lean_s116 lean_s334
let lean_s336 := by timed congr lean_s105 lean_s335
let lean_s337 := by timed congr lean_s104 lean_s336
let lean_s338 := by timed congr lean_s103 lean_s337
let lean_s339 := by timed congr lean_s98 lean_s338
let lean_s340 := by timed congr lean_s93 lean_s339
have lean_s341 : (Eq let343 let132) := by timed congr lean_s78 lean_s340
have lean_s342 : (Eq let344 let132) := by timed Eq.trans lean_r89 lean_s341
let lean_s343 := by timed Eq.trans lean_s342 lean_h0
have lean_s344 : let417 := by timed rfl
have lean_s345 : (Eq let120 let120) := by timed rfl
let lean_s346 := by timed congr lean_s344 lean_s345
let lean_s347 := by timed congr lean_s344 lean_r61
have lean_s348 : (Eq let108 let108) := by timed rfl
let lean_s349 := by timed congr lean_s344 lean_s348
have lean_s350 : (Eq let106 let106) := by timed rfl
let lean_s351 := by timed congr lean_s344 lean_s350
have lean_s352 : (Eq let97 let97) := by timed rfl
let lean_s353 := by timed congr lean_s344 lean_s352
have lean_s354 : (Eq let96 let96) := by timed rfl
let lean_s355 := by timed congr lean_s344 lean_s354
have lean_s356 : (Eq let95 let95) := by timed rfl
let lean_s357 := by timed congr lean_s344 lean_s356
have lean_s358 : (Eq let92 let92) := by timed rfl
let lean_s359 := by timed congr lean_s344 lean_s358
have lean_s360 : (Eq let90 let90) := by timed rfl
let lean_s361 := by timed congr lean_s344 lean_s360
have lean_s362 : (Eq let88 let88) := by timed rfl
let lean_s363 := by timed congr lean_s344 lean_s362
have lean_s364 : (Eq let87 let87) := by timed rfl
let lean_s365 := by timed congr lean_s344 lean_s364
let lean_s366 := by timed congr lean_s344 lean_r70
have lean_s367 : (Eq let81 let81) := by timed rfl
let lean_s368 := by timed congr lean_s344 lean_s367
have lean_s369 : (Eq let79 let79) := by timed rfl
let lean_s370 := by timed congr lean_s344 lean_s369
have lean_s371 : (Eq let74 let74) := by timed rfl
let lean_s372 := by timed congr lean_s344 lean_s371
have lean_s373 : (Eq let73 let73) := by timed rfl
let lean_s374 := by timed congr lean_s344 lean_s373
have lean_s375 : (Eq let72 let72) := by timed rfl
let lean_s376 := by timed congr lean_s344 lean_s375
have lean_s377 : (Eq let69 let69) := by timed rfl
let lean_s378 := by timed congr lean_s344 lean_s377
have lean_s379 : (Eq let67 let67) := by timed rfl
let lean_s380 := by timed congr lean_s344 lean_s379
have lean_s381 : (Eq let65 let65) := by timed rfl
let lean_s382 := by timed congr lean_s344 lean_s381
have lean_s383 : (Eq let64 let64) := by timed rfl
let lean_s384 := by timed congr lean_s344 lean_s383
let lean_s385 := by timed congr lean_s344 lean_r115
have lean_s386 : (Eq let59 let59) := by timed rfl
let lean_s387 := by timed congr lean_s344 lean_s386
have lean_s388 : (Eq let57 let57) := by timed rfl
let lean_s389 := by timed congr lean_s344 lean_s388
have lean_s390 : (Eq let52 let52) := by timed rfl
let lean_s391 := by timed congr lean_s344 lean_s390
have lean_s392 : (Eq let51 let51) := by timed rfl
let lean_s393 := by timed congr lean_s344 lean_s392
have lean_s394 : (Eq let50 let50) := by timed rfl
let lean_s395 := by timed congr lean_s344 lean_s394
have lean_s396 : (Eq let47 let47) := by timed rfl
let lean_s397 := by timed congr lean_s344 lean_s396
have lean_s398 : (Eq let45 let45) := by timed rfl
let lean_s399 := by timed congr lean_s344 lean_s398
have lean_s400 : (Eq let42 let42) := by timed rfl
let lean_s401 := by timed congr lean_s344 lean_s400
have lean_s402 : (Eq let40 let40) := by timed rfl
let lean_s403 := by timed congr lean_s344 lean_s402
let lean_s404 := by timed congr lean_s344 lean_r58
have lean_s405 : (Eq let32 let32) := by timed rfl
let lean_s406 := by timed congr lean_s344 lean_s405
have lean_s407 : (Eq let30 let30) := by timed rfl
let lean_s408 := by timed congr lean_s344 lean_s407
have lean_s409 : (Eq let24 let24) := by timed rfl
let lean_s410 := by timed congr lean_s344 lean_s409
have lean_s411 : (Eq let23 let23) := by timed rfl
let lean_s412 := by timed congr lean_s344 lean_s411
have lean_s413 : (Eq let22 let22) := by timed rfl
let lean_s414 := by timed congr lean_s344 lean_s413
have lean_s415 : (Eq let17 let17) := by timed rfl
let lean_s416 := by timed congr lean_s344 lean_s415
have lean_s417 : (Eq let15 let15) := by timed rfl
let lean_s418 := by timed congr lean_s344 lean_s417
have lean_s419 : (Eq let11 let11) := by timed rfl
let lean_s420 := by timed congr lean_s344 lean_s419
have lean_s421 : (Eq let9 let9) := by timed rfl
let lean_s422 := by timed congr lean_s344 lean_s421
have lean_s423 : (Eq let8 let8) := by timed rfl
let lean_s424 := by timed congr lean_s344 lean_s423
let lean_s425 := by timed congr lean_s344 lean_s289
have lean_s426 : (Eq let6 let6) := by timed rfl
let lean_s427 := by timed congr lean_s344 lean_s426
let lean_s428 := by timed congr lean_s344 lean_s292
have lean_s429 : (Eq let4 let4) := by timed rfl
let lean_s430 := by timed congr lean_s344 lean_s429
let lean_s431 := by timed congr lean_s430 lean_s295
let lean_s432 := by timed congr lean_s428 lean_s431
let lean_s433 := by timed congr lean_s427 lean_s432
let lean_s434 := by timed congr lean_s425 lean_s433
let lean_s435 := by timed congr lean_s424 lean_s434
let lean_s436 := by timed congr lean_s422 lean_s435
let lean_s437 := by timed congr lean_s420 lean_s436
let lean_s438 := by timed congr lean_s418 lean_s437
let lean_s439 := by timed congr lean_s416 lean_s438
let lean_s440 := by timed congr lean_s414 lean_s439
let lean_s441 := by timed congr lean_s412 lean_s440
let lean_s442 := by timed congr lean_s410 lean_s441
let lean_s443 := by timed congr lean_s408 lean_s442
let lean_s444 := by timed congr lean_s406 lean_s443
let lean_s445 := by timed congr lean_s404 lean_s444
let lean_s446 := by timed congr lean_s403 lean_s445
let lean_s447 := by timed congr lean_s401 lean_s446
let lean_s448 := by timed congr lean_s399 lean_s447
let lean_s449 := by timed congr lean_s397 lean_s448
let lean_s450 := by timed congr lean_s395 lean_s449
let lean_s451 := by timed congr lean_s393 lean_s450
let lean_s452 := by timed congr lean_s391 lean_s451
let lean_s453 := by timed congr lean_s389 lean_s452
let lean_s454 := by timed congr lean_s387 lean_s453
let lean_s455 := by timed congr lean_s385 lean_s454
let lean_s456 := by timed congr lean_s384 lean_s455
let lean_s457 := by timed congr lean_s382 lean_s456
let lean_s458 := by timed congr lean_s380 lean_s457
let lean_s459 := by timed congr lean_s378 lean_s458
let lean_s460 := by timed congr lean_s376 lean_s459
let lean_s461 := by timed congr lean_s374 lean_s460
let lean_s462 := by timed congr lean_s372 lean_s461
let lean_s463 := by timed congr lean_s370 lean_s462
let lean_s464 := by timed congr lean_s368 lean_s463
let lean_s465 := by timed congr lean_s366 lean_s464
let lean_s466 := by timed congr lean_s365 lean_s465
let lean_s467 := by timed congr lean_s363 lean_s466
let lean_s468 := by timed congr lean_s361 lean_s467
let lean_s469 := by timed congr lean_s359 lean_s468
let lean_s470 := by timed congr lean_s357 lean_s469
let lean_s471 := by timed congr lean_s355 lean_s470
let lean_s472 := by timed congr lean_s353 lean_s471
let lean_s473 := by timed congr lean_s351 lean_s472
let lean_s474 := by timed congr lean_s349 lean_s473
let lean_s475 := by timed congr lean_s347 lean_s474
have lean_s476 : (Eq let121 let416) := by timed congr lean_s346 lean_s475
have lean_s477 : (Eq let344 let416) := by timed Eq.trans lean_s343 lean_s476
have lean_s478 : let416 := by timed eqResolve lean_a160 lean_s477
have lean_s479 : let120 := by andElim lean_s478, 0
have lean_s480 : let431 := by timed flipNotAnd lean_s479 [let119, let117]
have lean_s481 : let410 := by timed rfl
let lean_s482 := by timed flipCongrArg lean_s481 [Eq]
have lean_s483 : (Eq let412 let410) := by timed congr lean_s482 lean_r10
have lean_s484 : (Eq let412 True) := by timed Eq.trans lean_s483 lean_r154
have lean_s485 : (Eq let171 True) := by timed Eq.trans lean_r156 lean_s484
have lean_s486 : let171 := by timed trueElim lean_s485
let lean_s487 := by timed flipCongrArg lean_s486 [Or]
have lean_s488 : (Eq let186 let186) := by timed rfl
have lean_s489 : (Eq let431 let430) := by timed congr lean_s487 lean_s488
have lean_s490 : let430 := by timed eqResolve lean_s480 lean_s489
have lean_s491 : (Or let418 (Or let187 (Or let380 False))) :=
  (scope (fun lean_a165 : let106 =>
    (scope (fun lean_a166 : let186 =>
      (scope (fun lean_a167 : let59 =>
        have lean_s491 : (Eq let59 let390) := by timed Eq.symm lean_r134
        have lean_s492 : let390 := by timed eqResolve lean_a167 lean_s491
        have lean_s493 : (Or let422 False) :=
          (scope (fun lean_a168 : let390 =>
            have lean_s493 : let274 := by timed trueElim lean_r66
            have lean_s494 : let429 := by timed And.intro lean_s493 lean_a168
            have lean_s495 : (Implies let429 let428) := by arithMulPos [let56, let3, let133], 0
            have lean_s496 : let428 := by timed modusPonens lean_s494 lean_s495
            have lean_s497 : let366 := by timed trueElim lean_r111
            have lean_s498 : (Eq let186 let349) := by timed Eq.symm lean_r95
            have lean_s499 : let349 := by timed eqResolve lean_a166 lean_s498
            have lean_s500 : let426 := by intTightUb lean_s499
            have lean_s501 : let427 := by timed And.intro lean_s497 lean_s500
            have lean_s502 : (Implies let427 let425) := by arithMulPos [let116, let114, let136], 1
            have lean_s503 : let425 := by timed modusPonens lean_s501 lean_s502
            have lean_s504 : let172 := by timed trueElim lean_r11
            have lean_s505 : let424 := by timed And.intro lean_s504 lean_a165
            have lean_s506 : (Implies let424 let423) := by arithMulNeg [let105, let1, let134], 3
            have lean_s507 : let423 := by timed modusPonens lean_s505 lean_s506
            have lean_s508 : let181 := by sumBounds [lean_s496, lean_s503, lean_s507]
            let lean_s509 := by timed congrHAdd lean_r33 lean_r35
            have lean_s510 : (Eq let178 let185) := by timed congrHAdd lean_r13 lean_s509
            have lean_s511 : (Eq let178 let163) := by timed Eq.trans lean_s510 lean_r14
            let lean_s512 := by timed flipCongrArg lean_s511 [GE.ge]
            let lean_s513 := by timed congrHAdd lean_r17 lean_r19
            have lean_s514 : (Eq let174 let248) := by timed congrHAdd lean_r62 lean_s513
            have lean_s515 : (Eq let174 let163) := by timed Eq.trans lean_s514 lean_r49
            have lean_s516 : (Eq let179 let240) := by timed congr lean_s512 lean_s515
            have lean_s517 : (Eq let179 True) := by timed Eq.trans lean_s516 lean_r44
            have lean_s518 : (Eq let180 let206) := by timed flipCongrArg lean_s517 [Not]
            have lean_s519 : (Eq let180 False) := by timed Eq.trans lean_s518 lean_r23
            have lean_s520 : (Eq let181 False) := by timed Eq.trans lean_r12 lean_s519
            show False from by timed eqResolve lean_s508 lean_s520
          ))
        have lean_s494 : let422 := by liftOrNToNeg lean_s493
        have lean_s495 : (Eq let422 let380) := by timed flipCongrArg lean_r134 [Not]
        have lean_s496 : (Eq let422 let58) := by timed Eq.trans lean_s495 lean_r129
        have lean_s497 : let58 := by timed eqResolve lean_s494 lean_s496
        have lean_s498 : (Eq let58 let422) := by timed Eq.symm lean_s496
        have lean_s499 : let422 := by timed eqResolve lean_s497 lean_s498
        show False from by timed contradiction lean_s492 lean_s499
  ))))))
have lean_s492 : (Not (And let106 (And let186 let59))) := by liftOrNToNeg lean_s491
have lean_s493 : let420 := by timed flipNotAnd lean_s492 [let106, let186, let59]
have lean_s494 : let421 := by timed rfl
have lean_s495 : (Eq let418 let418) := by timed rfl
let lean_s496 := by timed congr lean_s494 lean_s495
have lean_s497 : let415 := by timed rfl
let lean_s498 := by timed flipCongrArg lean_s497 [Eq]
have lean_s499 : (Eq let188 let415) := by timed congr lean_s498 lean_r16
have lean_s500 : (Eq let188 True) := by timed Eq.trans lean_s499 lean_r159
have lean_s501 : (Eq let189 True) := by timed Eq.trans lean_r15 lean_s500
have lean_s502 : let189 := by timed trueElim lean_s501
let lean_s503 := by timed congr lean_s494 lean_s502
have lean_s504 : let403 := by timed rfl
let lean_s505 := by timed flipCongrArg lean_s504 [Eq]
have lean_s506 : (Eq let381 let403) := by timed congr lean_s505 lean_r129
have lean_s507 : (Eq let381 True) := by timed Eq.trans lean_s506 lean_r148
have lean_s508 : (Eq let382 True) := by timed Eq.trans lean_r125 lean_s507
have lean_s509 : let382 := by timed trueElim lean_s508
let lean_s510 := by timed congr lean_s503 lean_s509
have lean_s511 : (Eq let420 let419) := by timed congr lean_s496 lean_s510
have lean_s512 : let419 := by timed eqResolve lean_s493 lean_s511
have lean_s513 : (Or let58 (Or let117 let418)) := by permutateOr lean_s512, [2, 1, 0], (- 1)
have lean_s514 : let59 := by andElim lean_s478, 22
let lean_s515 := by R1 lean_s513, lean_s514, let58, [(- 1), 0]
have lean_s516 : let106 := by andElim lean_s478, 3
have lean_s517 : let117 := by R2 lean_s515, lean_s516, let106, [(- 1), 0]
have lean_s518 : let118 := by R2 lean_s490, lean_s517, let117, [(- 1), 0]
let lean_s519 := by R2 lean_s17, lean_s518, let118, [(- 1), 0]
have lean_s520 : let57 := by andElim lean_s478, 23
let lean_s521 := by R2 lean_s519, lean_s520, let57, [(- 1), 0]
have lean_s522 : let108 := by andElim lean_s478, 2
exact (show False from by R1 lean_s521, lean_s522, let107, [0, 0])


