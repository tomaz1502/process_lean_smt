open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x2 : Rat}
variable {x3 : Rat}
variable {x1 : Rat}
variable {x6 : Rat}
variable {x4 : Rat}
variable {x1 : Rat}
variable {x2 : Rat}
variable {x5 : Rat}
variable {x3 : Rat}
variable {x4 : Rat}
variable {x5 : Rat}
variable {x6 : Rat}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% GE.ge (binrel% HMul.hMul let3 x6) let1)
  let let5 := (Int.ofNat 2000)
  let let6 := (binrel% HAdd.hAdd x5 (binrel% HMul.hMul let5 x6))
  let let7 := (binrel% GE.ge let6 let1)
  let let8 := (binrel% HMul.hMul (Neg.neg let5) x6)
  let let9 := (binrel% HMul.hMul let3 x5)
  let let10 := (binrel% GE.ge (binrel% HAdd.hAdd let9 let8) let1)
  let let11 := (And let10 let7)
  let let12 := (Int.ofNat 3000)
  let let13 := (binrel% HAdd.hAdd x5 (binrel% HMul.hMul let12 x6))
  let let14 := (binrel% GE.ge let13 let1)
  let let15 := (binrel% HMul.hMul (Neg.neg let12) x6)
  let let16 := (binrel% GE.ge (binrel% HAdd.hAdd let9 let15) let1)
  let let17 := (And let16 let14)
  let let18 := (Or let17 let11)
  let let19 := (Int.ofNat 8000)
  let let20 := (binrel% HAdd.hAdd x4 (binrel% HMul.hMul let19 x5))
  let let21 := (binrel% GE.ge let20 let1)
  let let22 := (binrel% HMul.hMul (Neg.neg let19) x5)
  let let23 := (binrel% HMul.hMul let3 x4)
  let let24 := (binrel% GE.ge (binrel% HAdd.hAdd let23 let22) let1)
  let let25 := (And let24 let21)
  let let26 := (Int.ofNat 40000)
  let let27 := (binrel% HAdd.hAdd x4 (binrel% HMul.hMul let26 x5))
  let let28 := (binrel% GE.ge let27 let1)
  let let29 := (binrel% HMul.hMul (Neg.neg let26) x5)
  let let30 := (binrel% GE.ge (binrel% HAdd.hAdd let23 let29) let1)
  let let31 := (And let30 let28)
  let let32 := (Or let31 let25)
  let let33 := (Int.ofNat 800000)
  let let34 := (binrel% HAdd.hAdd x3 (binrel% HMul.hMul (Neg.neg let33) x4))
  let let35 := (binrel% GE.ge let34 let1)
  let let36 := (binrel% HMul.hMul let33 x4)
  let let37 := (binrel% HMul.hMul let3 x3)
  let let38 := (binrel% HAdd.hAdd let37 let36)
  let let39 := (binrel% GE.ge let38 let1)
  let let40 := (And let39 let35)
  let let41 := (Int.ofNat 400000)
  let let42 := (binrel% HAdd.hAdd x3 (binrel% HMul.hMul (Neg.neg let41) x4))
  let let43 := (binrel% GE.ge let42 let1)
  let let44 := (binrel% HMul.hMul let41 x4)
  let let45 := (binrel% HAdd.hAdd let37 let44)
  let let46 := (binrel% GE.ge let45 let1)
  let let47 := (And let46 let43)
  let let48 := (Or let47 let40)
  let let49 := (Int.ofNat 199900)
  let let50 := (binrel% HMul.hMul (Neg.neg let49) x3)
  let let51 := (binrel% HAdd.hAdd x2 let50)
  let let52 := (binrel% GE.ge let51 let1)
  let let53 := (binrel% HMul.hMul let49 x3)
  let let54 := (binrel% HMul.hMul let3 x2)
  let let55 := (binrel% HAdd.hAdd let54 let53)
  let let56 := (binrel% GE.ge let55 let1)
  let let57 := (And let56 let52)
  let let58 := (Int.ofNat 100310)
  let let59 := (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg let58) x3))
  let let60 := (binrel% GE.ge let59 let1)
  let let61 := (binrel% HMul.hMul let58 x3)
  let let62 := (binrel% GE.ge (binrel% HAdd.hAdd let54 let61) let1)
  let let63 := (And let62 let60)
  let let64 := (Or let63 let57)
  let let65 := (Int.ofNat 10003)
  let let66 := (binrel% HAdd.hAdd x1 (binrel% HMul.hMul (Neg.neg let65) x2))
  let let67 := (binrel% GE.ge let66 let1)
  let let68 := (binrel% HMul.hMul let65 x2)
  let let69 := (binrel% HMul.hMul let3 x1)
  let let70 := (binrel% GE.ge (binrel% HAdd.hAdd let69 let68) let1)
  let let71 := (And let70 let67)
  let let72 := (Int.ofNat 120030)
  let let73 := (binrel% HMul.hMul (Neg.neg let72) x2)
  let let74 := (binrel% HAdd.hAdd x1 let73)
  let let75 := (binrel% GE.ge let74 let1)
  let let76 := (binrel% HMul.hMul let72 x2)
  let let77 := (binrel% HAdd.hAdd let69 let76)
  let let78 := (binrel% GE.ge let77 let1)
  let let79 := (And let78 let75)
  let let80 := (Or let79 let71)
  let let81 := (binrel% HDiv.hDiv let2 (Int.ofNat 100002))
  let let82 := (binrel% GE.ge x1 let81)
  let let83 := (Neg.neg let81)
  let let84 := (binrel% GE.ge let69 let83)
  let let85 := (And let84 let82)
  let let86 := (binrel% HDiv.hDiv let2 (Int.ofNat 100000))
  let let87 := (binrel% GE.ge x1 let86)
  let let88 := (Neg.neg let86)
  let let89 := (binrel% GE.ge let69 let88)
  let let90 := (And let89 let87)
  let let91 := (Or let90 let85)
  let let92 := (And let91 (And let80 (And let64 (And let48 (And let32 (And let18 let4))))))
  let let93 := (Eq x5 let8)
  let let94 := (Eq x5 let15)
  let let95 := (Or let94 let93)
  let let96 := (Eq x4 let22)
  let let97 := (Eq x4 let29)
  let let98 := (Or let97 let96)
  let let99 := (Eq x3 let36)
  let let100 := (Eq x3 let44)
  let let101 := (Or let100 let99)
  let let102 := (Eq x2 let53)
  let let103 := (Eq x2 let61)
  let let104 := (Or let103 let102)
  let let105 := (Eq x1 let68)
  let let106 := (Eq x1 let76)
  let let107 := (Or let106 let105)
  let let108 := (Eq x1 let81)
  let let109 := (Eq x1 let86)
  let let110 := (Or let109 let108)
  let let111 := (And let110 (And let107 (And let104 (And let101 (And let98 (And let95 let4))))))
  let let112 := (Neg.neg (binrel% HDiv.hDiv let65 let72))
  let let113 := (binrel% LT.lt let112 let1)
  let let114 := (Int.ofNat 110027)
  let let115 := (Neg.neg (binrel% HDiv.hDiv let114 let72))
  let let116 := (binrel% LT.lt let115 let1)
  let let117 := (Rat.ofInt 1)
  let let118 := (binrel% HMul.hMul let117 let66)
  let let119 := (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x1) let68)
  let let120 := (binrel% HMul.hMul let112 let74)
  let let121 := (Rat.ofInt 0)
  let let122 := (binrel% HMul.hMul let112 let121)
  let let123 := (Neg.neg (binrel% HDiv.hDiv let114 (Int.ofNat 12003240060)))
  let let124 := (binrel% HMul.hMul let115 let81)
  let let125 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 let123))
  let let126 := (binrel% LE.le let66 let121)
  let let127 := (Not let126)
  let let128 := (binrel% GT.gt let66 let121)
  let let129 := (Eq let128 let127)
  let let130 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 1919558150395200000000)))
  let let131 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let130 let121))))))
  let let132 := (Int.ofNat 80000000)
  let let133 := (binrel% HMul.hMul let132 x6)
  let let134 := (binrel% HAdd.hAdd let29 (binrel% HMul.hMul (Neg.neg let132) x6))
  let let135 := (binrel% HAdd.hAdd let134 let133)
  let let136 := (binrel% HDiv.hDiv let2 (Int.ofNat 159920000000))
  let let137 := (binrel% HDiv.hDiv let2 (Int.ofNat 19195197600000000))
  let let138 := (binrel% HAdd.hAdd (binrel% HMul.hMul let137 x1) (binrel% HMul.hMul (Neg.neg let136) x2))
  let let139 := (Neg.neg let137)
  let let140 := (binrel% HMul.hMul let139 x1)
  let let141 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let138 let135))
  let let142 := (binrel% HDiv.hDiv let2 let33)
  let let143 := (binrel% HAdd.hAdd (binrel% HMul.hMul let136 x2) (binrel% HMul.hMul (Neg.neg let142) x3))
  let let144 := (binrel% HMul.hMul let142 x3)
  let let145 := (binrel% HAdd.hAdd let144 let23)
  let let146 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let143 let141)))
  let let147 := (binrel% HMul.hMul let139 let81)
  let let148 := (binrel% HAdd.hAdd let121 let121)
  let let149 := (binrel% HAdd.hAdd let121 let148)
  let let150 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let130 let149))))
  let let151 := (binrel% LE.le let121 let130)
  let let152 := (Int.ofNat 79960000000)
  let let153 := (binrel% HDiv.hDiv let2 let152)
  let let154 := (binrel% HDiv.hDiv let2 (Int.ofNat 9597598800000000))
  let let155 := (binrel% HAdd.hAdd (binrel% HMul.hMul let154 x1) (binrel% HMul.hMul (Neg.neg let153) x2))
  let let156 := (Neg.neg let154)
  let let157 := (binrel% HMul.hMul let156 x1)
  let let158 := (binrel% HDiv.hDiv let2 let41)
  let let159 := (binrel% HAdd.hAdd (binrel% HMul.hMul let153 x2) (binrel% HMul.hMul (Neg.neg let158) x3))
  let let160 := (binrel% HMul.hMul let158 x3)
  let let161 := (binrel% HAdd.hAdd let160 let23)
  let let162 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let155 let135)))))
  let let163 := (binrel% GT.gt let158 let1)
  let let164 := (binrel% GT.gt let153 let1)
  let let165 := (binrel% LT.lt let156 let1)
  let let166 := (binrel% HMul.hMul let153 let51)
  let let167 := (Int.ofNat 16000000)
  let let168 := (binrel% HAdd.hAdd let22 (binrel% HMul.hMul (Neg.neg let167) x6))
  let let169 := (binrel% HMul.hMul let167 x6)
  let let170 := (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let157 let155))))))
  let let171 := (binrel% HMul.hMul let158 let121)
  let let172 := (binrel% HMul.hMul let153 let121)
  let let173 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 959779075197600000000)))
  let let174 := (binrel% HMul.hMul let156 let81)
  let let175 := (binrel% HMul.hMul let154 let121)
  let let176 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let173 let121))))))
  let let177 := (binrel% LE.le let121 let173)
  let let178 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 5000100000)))
  let let179 := (binrel% HAdd.hAdd let81 let88)
  let let180 := (Rat.ofInt 100310)
  let let181 := (binrel% HMul.hMul let180 let121)
  let let182 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 4798895375988000)))
  let let183 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let182 let148)))
  let let184 := (binrel% HDiv.hDiv let2 let65)
  let let185 := (Neg.neg let184)
  let let186 := (binrel% LT.lt let185 let1)
  let let187 := (binrel% HAdd.hAdd let34 let38)
  let let188 := (binrel% GT.gt let184 let1)
  let let189 := (Rat.ofInt 199900)
  let let190 := (binrel% GT.gt let189 let1)
  let let191 := (binrel% LE.le let42 let121)
  let let192 := (binrel% HDiv.hDiv let2 let5)
  let let193 := (Neg.neg let117)
  let let194 := (binrel% HMul.hMul let193 let192)
  let let195 := (binrel% HDiv.hDiv let193 (Rat.ofInt 2000))
  let let196 := (binrel% GE.ge let42 let121)
  let let197 := (binrel% GE.ge let13 let121)
  let let198 := (Not let197)
  let let199 := (binrel% LT.lt let13 let121)
  let let200 := (binrel% HAdd.hAdd let74 let77)
  let let201 := (Rat.ofInt 40000)
  let let202 := (Neg.neg let201)
  let let203 := (binrel% HMul.hMul let202 let6)
  let let204 := (Rat.ofInt 79960000000)
  let let205 := (binrel% HMul.hMul let204 let121)
  let let206 := (Rat.ofInt 6396800000000000)
  let let207 := (binrel% HMul.hMul let206 let121)
  let let208 := (Neg.neg (Rat.ofInt 9595200000000000))
  let let209 := (binrel% HMul.hMul let208 let121)
  let let210 := (binrel% HMul.hMul let189 let121)
  let let211 := (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd let209 (binrel% HAdd.hAdd let207 let205)))
  let let212 := (binrel% HMul.hMul let184 let121)
  let let213 := (binrel% HMul.hMul let185 let86)
  let let214 := (binrel% HMul.hMul let117 let121)
  let let215 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let213 (binrel% HAdd.hAdd let212 let211)))
  let let216 := (binrel% HMul.hMul let204 let27)
  let let217 := (binrel% HMul.hMul let206 let13)
  let let218 := (binrel% HMul.hMul let208 let6)
  let let219 := (binrel% HMul.hMul let189 let42)
  let let220 := (binrel% HAdd.hAdd let219 (binrel% HAdd.hAdd let218 (binrel% HAdd.hAdd let217 let216)))
  let let221 := (binrel% HMul.hMul let184 let66)
  let let222 := (binrel% HMul.hMul let185 x1)
  let let223 := (binrel% HMul.hMul let117 let51)
  let let224 := (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let222 (binrel% HAdd.hAdd let221 let220)))
  let let225 := (binrel% GE.ge let224 let215)
  let let226 := (Not let225)
  let let227 := (binrel% LT.lt let224 let215)
  let let228 := (binrel% HMul.hMul let193 let121)
  let let229 := (binrel% HAdd.hAdd let214 let228)
  let let230 := (binrel% HMul.hMul let193 let51)
  let let231 := (binrel% HAdd.hAdd let223 let230)
  let let232 := (binrel% GE.ge let231 let229)
  let let233 := (Not let232)
  let let234 := (binrel% LT.lt let231 let229)
  let let235 := (Int.ofNat 1000300000)
  let let236 := (Neg.neg (binrel% HDiv.hDiv let2 let235))
  let let237 := (Neg.neg (Rat.ofInt 48000000000))
  let let238 := (binrel% LT.lt let237 let1)
  let let239 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 12003000000)))
  let let240 := (binrel% HAdd.hAdd let121 let149)
  let let241 := (binrel% HAdd.hAdd let121 let240)
  let let242 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let239 let241))
  let let243 := (binrel% HDiv.hDiv let72 let65)
  let let244 := (binrel% GT.gt let243 let1)
  let let245 := (binrel% HAdd.hAdd let140 let138)
  let let246 := (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 let245)))))
  let let247 := (Not let14)
  let let248 := (Not let247)
  let let249 := (binrel% HDiv.hDiv let2 let12)
  let let250 := (Neg.neg let249)
  let let251 := (binrel% HMul.hMul let193 let249)
  let let252 := (Eq let251 let250)
  let let253 := (Int.ofNat 40124000000)
  let let254 := (binrel% HMul.hMul let253 x4)
  let let255 := (binrel% HAdd.hAdd let254 (binrel% HMul.hMul (Int.ofNat 320992000000000) x5))
  let let256 := (Rat.ofInt 40124000000)
  let let257 := (binrel% HMul.hMul let256 let20)
  let let258 := (Int.ofNat 9959)
  let let259 := (binrel% HDiv.hDiv let258 (Int.ofNat 1204020930))
  let let260 := (Neg.neg let259)
  let let261 := (binrel% LT.lt let260 let1)
  let let262 := (binrel% GE.ge let6 let121)
  let let263 := (binrel% GT.gt let259 let1)
  let let264 := (Int.ofNat 10031)
  let let265 := (binrel% HDiv.hDiv (Int.ofNat 19990) let264)
  let let266 := (binrel% GT.gt let265 let1)
  let let267 := (binrel% HDiv.hDiv let2 let49)
  let let268 := (binrel% HDiv.hDiv let117 let189)
  let let269 := (Int.ofNat 96000000000000)
  let let270 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 32000000000) x5) (binrel% HMul.hMul let269 x6))
  let let271 := (Rat.ofInt 32000000000)
  let let272 := (binrel% HMul.hMul let271 let13)
  let let273 := (binrel% HAdd.hAdd (binrel% HMul.hMul let259 x1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv let258 let264)) x2))
  let let274 := (binrel% HMul.hMul let259 let74)
  let let275 := (binrel% HMul.hMul let115 x1)
  let let276 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let119 let275))
  let let277 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let236 let241))
  let let278 := (Rat.ofInt 16000000)
  let let279 := (binrel% GT.gt let278 let1)
  let let280 := (Rat.ofInt 400000)
  let let281 := (binrel% HDiv.hDiv let117 let280)
  let let282 := (binrel% HMul.hMul let256 let121)
  let let283 := (Rat.ofInt 3209920000000000)
  let let284 := (binrel% HMul.hMul let283 let121)
  let let285 := (Neg.neg (Rat.ofInt 4814880000000000))
  let let286 := (binrel% HMul.hMul let285 let121)
  let let287 := (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let286 (binrel% HAdd.hAdd let284 let282)))
  let let288 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let213 (binrel% HAdd.hAdd let212 let287)))
  let let289 := (binrel% HMul.hMul let256 let27)
  let let290 := (binrel% HMul.hMul let283 let13)
  let let291 := (binrel% HMul.hMul let285 let6)
  let let292 := (binrel% HMul.hMul let180 let42)
  let let293 := (binrel% HAdd.hAdd let292 (binrel% HAdd.hAdd let291 (binrel% HAdd.hAdd let290 let289)))
  let let294 := (binrel% HMul.hMul let117 let59)
  let let295 := (binrel% HAdd.hAdd let294 (binrel% HAdd.hAdd let222 (binrel% HAdd.hAdd let221 let293)))
  let let296 := (binrel% GE.ge let295 let288)
  let let297 := (Not let296)
  let let298 := (binrel% LT.lt let295 let288)
  let let299 := (Int.ofNat 19190400000000000000)
  let let300 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 9595200000000000)) x5) (binrel% HMul.hMul (Neg.neg let299) x6))
  let let301 := (binrel% HAdd.hAdd let53 (binrel% HMul.hMul (Neg.neg let152) x4))
  let let302 := (Int.ofNat 2)
  let let303 := (Neg.neg (binrel% HDiv.hDiv let2 let302))
  let let304 := (binrel% LT.lt let303 let1)
  let let305 := (Neg.neg (binrel% HDiv.hDiv let258 (Int.ofNat 120404501041860)))
  let let306 := (binrel% HMul.hMul let260 let81)
  let let307 := (binrel% HDiv.hDiv let2 let26)
  let let308 := (binrel% HMul.hMul let193 let307)
  let let309 := (binrel% HDiv.hDiv let193 let201)
  let let310 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 6396800000000000) x5) (binrel% HMul.hMul let299 x6))
  let let311 := (binrel% HMul.hMul let158 let42)
  let let312 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let305 let148))
  let let313 := (binrel% HMul.hMul let154 let74)
  let let314 := (binrel% LE.le let121 let305)
  let let315 := (Rat.ofInt 80000000)
  let let316 := (binrel% GT.gt let315 let1)
  let let317 := (binrel% GE.ge let51 let121)
  let let318 := (Not let317)
  let let319 := (binrel% LT.lt let51 let121)
  let let320 := (binrel% HMul.hMul let136 let121)
  let let321 := (binrel% HDiv.hDiv let117 (Rat.ofInt 800000))
  let let322 := (binrel% LE.le let51 let121)
  let let323 := (binrel% GT.gt let204 let1)
  let let324 := (binrel% HMul.hMul let117 let20)
  let let325 := (binrel% HMul.hMul let152 x4)
  let let326 := (binrel% HAdd.hAdd let325 (binrel% HMul.hMul (Int.ofNat 639680000000000) x5))
  let let327 := (binrel% HMul.hMul let204 let20)
  let let328 := (Not let78)
  let let329 := (Not let328)
  let let330 := (Int.ofNat 3838080000000000000)
  let let331 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1919040000000000)) x5) (binrel% HMul.hMul (Neg.neg let330) x6))
  let let332 := (Neg.neg (Rat.ofInt 1919040000000000))
  let let333 := (binrel% HMul.hMul let332 let6)
  let let334 := (Not let52)
  let let335 := (Not let334)
  let let336 := (binrel% HAdd.hAdd let44 (binrel% HMul.hMul (Int.ofNat 16000000000) x5))
  let let337 := (binrel% HMul.hMul let280 let27)
  let let338 := (Not let46)
  let let339 := (Not let338)
  let let340 := (binrel% HMul.hMul let278 let121)
  let let341 := (binrel% HMul.hMul let237 let121)
  let let342 := (binrel% HMul.hMul let271 let121)
  let let343 := (binrel% HMul.hMul let280 let121)
  let let344 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let343 (binrel% HAdd.hAdd let342 let341))))
  let let345 := (binrel% HMul.hMul let237 let6)
  let let346 := (binrel% HMul.hMul let193 let42)
  let let347 := (binrel% HMul.hMul let117 let34)
  let let348 := (binrel% HAdd.hAdd let347 (binrel% HAdd.hAdd let346 (binrel% HAdd.hAdd let337 (binrel% HAdd.hAdd let272 let345))))
  let let349 := (binrel% GE.ge let348 let344)
  let let350 := (Not let349)
  let let351 := (binrel% LT.lt let348 let344)
  let let352 := (binrel% LE.le let121 let178)
  let let353 := (Neg.neg (binrel% HDiv.hDiv let114 let65))
  let let354 := (binrel% LT.lt let353 let1)
  let let355 := (binrel% GE.ge let121 let236)
  let let356 := (binrel% HDiv.hDiv let2 (Int.ofNat 399800))
  let let357 := (binrel% GT.gt let356 let1)
  let let358 := (binrel% HMul.hMul let243 let121)
  let let359 := (Neg.neg (binrel% HDiv.hDiv let114 let235))
  let let360 := (binrel% HMul.hMul let353 let86)
  let let361 := (binrel% HDiv.hDiv let2 let19)
  let let362 := (binrel% HMul.hMul let193 let361)
  let let363 := (Rat.ofInt 8000)
  let let364 := (binrel% HDiv.hDiv let193 let363)
  let let365 := (binrel% GE.ge let34 let121)
  let let366 := (binrel% HAdd.hAdd let325 (binrel% HMul.hMul (Int.ofNat 3198400000000000) x5))
  let let367 := (binrel% HAdd.hAdd let301 (binrel% HAdd.hAdd let300 (binrel% HAdd.hAdd let310 let366)))
  let let368 := (binrel% HMul.hMul let184 x1)
  let let369 := (binrel% HAdd.hAdd let368 let54)
  let let370 := (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let222 (binrel% HAdd.hAdd let369 let367)))
  let let371 := (Not let84)
  let let372 := (Not let371)
  let let373 := (binrel% GT.gt let117 let1)
  let let374 := (binrel% LE.le let74 let121)
  let let375 := (binrel% HAdd.hAdd let254 (binrel% HMul.hMul (Int.ofNat 1604960000000000) x5))
  let let376 := (Not let35)
  let let377 := (Not let376)
  let let378 := (Neg.neg let192)
  let let379 := (binrel% HMul.hMul let378 x5)
  let let380 := (Eq x6 let379)
  let let381 := (binrel% HDiv.hDiv let117 (Rat.ofInt 100002))
  let let382 := (binrel% HMul.hMul let193 x1)
  let let383 := (binrel% GE.ge let74 let121)
  let let384 := (Not let383)
  let let385 := (binrel% LT.lt let74 let121)
  let let386 := (binrel% LE.le x1 let81)
  let let387 := (binrel% LE.le let121 let182)
  let let388 := (binrel% HMul.hMul let315 let121)
  let let389 := (binrel% HMul.hMul let193 let86)
  let let390 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 1919519760000000000000)))
  let let391 := (binrel% HMul.hMul let139 let86)
  let let392 := (binrel% HDiv.hDiv let2 let72)
  let let393 := (binrel% HMul.hMul let392 x1)
  let let394 := (Eq x2 let393)
  let let395 := (binrel% LT.lt let193 let1)
  let let396 := (Not let82)
  let let397 := (Not let396)
  let let398 := (binrel% HMul.hMul let303 x3)
  let let399 := (binrel% HAdd.hAdd (binrel% HMul.hMul let356 x2) let398)
  let let400 := (binrel% HMul.hMul let356 let51)
  let let401 := (binrel% HDiv.hDiv let2 let58)
  let let402 := (binrel% HMul.hMul let401 x2)
  let let403 := (Eq x3 let402)
  let let404 := (Int.ofNat 9629760000000000000)
  let let405 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3209920000000000) x5) (binrel% HMul.hMul let404 x6))
  let let406 := (Not let39)
  let let407 := (Not let406)
  let let408 := (Neg.neg let361)
  let let409 := (Eq let362 let408)
  let let410 := (Not let196)
  let let411 := (binrel% LT.lt let42 let121)
  let let412 := (binrel% LE.le let27 let121)
  let let413 := (binrel% HMul.hMul let278 x6)
  let let414 := (binrel% HDiv.hDiv let2 (Int.ofNat 47987994000))
  let let415 := (Neg.neg let414)
  let let416 := (binrel% LT.lt let415 let1)
  let let417 := (Neg.neg (Rat.ofInt 962976000000000))
  let let418 := (binrel% LT.lt let417 let1)
  let let419 := (Not let322)
  let let420 := (binrel% GT.gt let51 let121)
  let let421 := (binrel% HMul.hMul let193 let74)
  let let422 := (Not True)
  let let423 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let173 let149))))
  let let424 := (Rat.ofInt 1279360000000000)
  let let425 := (binrel% GT.gt let424 let1)
  let let426 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 let359))
  let let427 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let239 let240)))
  let let428 := (Int.ofNat 19200000000000)
  let let429 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 9600000000)) x5) (binrel% HMul.hMul (Neg.neg let428) x6))
  let let430 := (Neg.neg (Rat.ofInt 9600000000))
  let let431 := (binrel% HMul.hMul let430 let6)
  let let432 := (binrel% LT.lt let208 let1)
  let let433 := (binrel% LT.lt let139 let1)
  let let434 := (binrel% HAdd.hAdd (binrel% HMul.hMul let243 x1) let73)
  let let435 := (binrel% HMul.hMul let243 let66)
  let let436 := (binrel% HMul.hMul let193 let81)
  let let437 := (binrel% HAdd.hAdd (binrel% HMul.hMul let265 x2) let50)
  let let438 := (binrel% HMul.hMul let260 x1)
  let let439 := (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let438 (binrel% HAdd.hAdd let273 let437)))
  let let440 := (Neg.neg let307)
  let let441 := (binrel% HMul.hMul let440 x4)
  let let442 := (Eq x5 let441)
  let let443 := (binrel% GT.gt let142 let1)
  let let444 := (binrel% HMul.hMul let142 let121)
  let let445 := (binrel% HMul.hMul let117 let81)
  let let446 := (binrel% HDiv.hDiv let193 (Rat.ofInt 3000))
  let let447 := (binrel% GT.gt let256 let1)
  let let448 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4814880000000000)) x5) (binrel% HMul.hMul (Neg.neg let404) x6))
  let let449 := (binrel% HAdd.hAdd let61 (binrel% HMul.hMul (Neg.neg let253) x4))
  let let450 := (binrel% LE.le let121 let359)
  let let451 := (binrel% HMul.hMul let117 x1)
  let let452 := (Eq let194 let378)
  let let453 := (binrel% HMul.hMul let424 let121)
  let let454 := (binrel% HMul.hMul let332 let121)
  let let455 := (binrel% HMul.hMul let392 let121)
  let let456 := (Neg.neg let392)
  let let457 := (binrel% HMul.hMul let456 let86)
  let let458 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let457 (binrel% HAdd.hAdd let455 (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd let205 (binrel% HAdd.hAdd let454 let453))))))
  let let459 := (binrel% HMul.hMul let424 let13)
  let let460 := (binrel% HMul.hMul let392 let74)
  let let461 := (binrel% HMul.hMul let456 x1)
  let let462 := (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let461 (binrel% HAdd.hAdd let460 (binrel% HAdd.hAdd let219 (binrel% HAdd.hAdd let327 (binrel% HAdd.hAdd let333 let459))))))
  let let463 := (binrel% GE.ge let462 let458)
  let let464 := (Not let463)
  let let465 := (binrel% LT.lt let462 let458)
  let let466 := (Eq x4 let160)
  let let467 := (binrel% HAdd.hAdd let445 let436)
  let let468 := (binrel% HAdd.hAdd let451 let382)
  let let469 := (binrel% GE.ge let468 let467)
  let let470 := (Not let469)
  let let471 := (binrel% LT.lt let468 let467)
  let let472 := (Eq x4 let144)
  let let473 := (binrel% HAdd.hAdd let393 let54)
  let let474 := (binrel% HAdd.hAdd let449 (binrel% HAdd.hAdd let448 (binrel% HAdd.hAdd let405 let375)))
  let let475 := (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let222 (binrel% HAdd.hAdd let369 let474)))
  let let476 := (binrel% HMul.hMul let267 x2)
  let let477 := (Eq x3 let476)
  let let478 := (binrel% HAdd.hAdd let81 let83)
  let let479 := (binrel% HMul.hMul let117 let74)
  let let480 := (binrel% HAdd.hAdd x1 let69)
  let let481 := (binrel% HDiv.hDiv let117 let180)
  let let482 := (binrel% HMul.hMul let250 x5)
  let let483 := (Eq x6 let482)
  let let484 := (binrel% HDiv.hDiv let117 (Rat.ofInt 10003))
  let let485 := (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let473 (binrel% HAdd.hAdd let461 let367)))
  let let486 := (binrel% GT.gt let154 let1)
  let let487 := (binrel% HMul.hMul let408 x4)
  let let488 := (Eq x5 let487)
  let let489 := (binrel% LT.lt x1 let81)
  let let490 := (binrel% GE.ge let121 let239)
  let let491 := (binrel% HDiv.hDiv let117 (Rat.ofInt 100000))
  let let492 := (binrel% LE.le let34 let121)
  let let493 := (Eq let308 let440)
  let let494 := (binrel% GT.gt let137 let1)
  let let495 := (Not let75)
  let let496 := (Not let495)
  let let497 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1279360000000000) x5) (binrel% HMul.hMul let330 x6))
  let let498 := (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let145 let245)))))
  let let499 := (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let461 (binrel% HAdd.hAdd let473 (binrel% HAdd.hAdd let301 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let331 let497))))))
  let let500 := (binrel% GT.gt let280 let1)
  let let501 := (binrel% HMul.hMul let265 let59)
  let let502 := (binrel% LE.le let59 let121)
  let let503 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 48000000000)) x5) (binrel% HMul.hMul (Neg.neg let269) x6))
  let let504 := (binrel% HAdd.hAdd let479 let421)
  let let505 := (binrel% GE.ge let504 let229)
  let let506 := (Not let505)
  let let507 := (binrel% LT.lt let504 let229)
  let let508 := (Eq x2 let368)
  let let509 := (Not let7)
  let let510 := (Not let509)
  let let511 := (Not let386)
  let let512 := (binrel% GT.gt x1 let81)
  let let513 := (binrel% GT.gt let283 let1)
  let let514 := (binrel% HMul.hMul let117 let42)
  let let515 := (binrel% HAdd.hAdd let514 let346)
  let let516 := (binrel% GE.ge let515 let229)
  let let517 := (Not let516)
  let let518 := (binrel% LT.lt let515 let229)
  let let519 := (Neg.neg let363)
  let let520 := (binrel% HMul.hMul let519 let6)
  let let521 := (Rat.ofInt 641984000000000)
  let let522 := (binrel% HMul.hMul let521 let121)
  let let523 := (Not let374)
  let let524 := (binrel% GT.gt let74 let121)
  let let525 := (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let473 (binrel% HAdd.hAdd let461 let474)))
  let let526 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let455 (binrel% HAdd.hAdd let457 let287)))
  let let527 := (binrel% HAdd.hAdd let294 (binrel% HAdd.hAdd let460 (binrel% HAdd.hAdd let461 let293)))
  let let528 := (binrel% GE.ge let527 let526)
  let let529 := (Not let528)
  let let530 := (binrel% LT.lt let527 let526)
  let let531 := (binrel% HDiv.hDiv let2 (Int.ofNat 1000))
  let let532 := (Neg.neg let531)
  let let533 := (binrel% LT.lt let532 let1)
  let let534 := (binrel% LT.lt let456 let1)
  let let535 := (binrel% LE.le let121 let123)
  let let536 := (binrel% GT.gt let392 let1)
  let let537 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let455 (binrel% HAdd.hAdd let457 let211)))
  let let538 := (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let460 (binrel% HAdd.hAdd let461 let220)))
  let let539 := (binrel% GE.ge let538 let537)
  let let540 := (Not let539)
  let let541 := (binrel% LT.lt let538 let537)
  let let542 := (Not let43)
  let let543 := (Not let542)
  let let544 := (binrel% HMul.hMul let519 let121)
  let let545 := (binrel% HAdd.hAdd let42 let45)
  let let546 := (binrel% HMul.hMul let417 let121)
  let let547 := (binrel% GT.gt let414 let1)
  let let548 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let145 let141)))
  let let549 := (Not let56)
  let let550 := (Not let549)
  let let551 := (Not let191)
  let let552 := (binrel% GT.gt let42 let121)
  let let553 := (binrel% LE.le x6 let121)
  let let554 := (binrel% GE.ge let121 let121)
  let let555 := (binrel% HAdd.hAdd let44 (binrel% HMul.hMul (Int.ofNat 3200000000) x5))
  let let556 := (binrel% HMul.hMul let280 let20)
  let let557 := (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let336 (binrel% HAdd.hAdd let270 let503))))
  let let558 := (binrel% GT.gt let271 let1)
  let let559 := (binrel% LT.lt let285 let1)
  let let560 := (Not let492)
  let let561 := (binrel% GT.gt let34 let121)
  let let562 := (Eq let561 let560)
  let let563 := (binrel% HMul.hMul let117 x6)
  let let564 := (binrel% HMul.hMul let430 let121)
  let let565 := (binrel% HMul.hMul let532 let121)
  let let566 := (binrel% HAdd.hAdd (binrel% HMul.hMul let532 x5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 3)) x6))
  let let567 := (binrel% HMul.hMul let532 let13)
  let let568 := (Rat.ofInt 6400000000)
  let let569 := (binrel% HMul.hMul let568 let121)
  let let570 := (binrel% GT.gt let206 let1)
  let let571 := (binrel% GT.gt let521 let1)
  let let572 := (binrel% HMul.hMul let531 let121)
  let let573 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 6400000000) x5) (binrel% HMul.hMul let428 x6))
  let let574 := (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let573 (binrel% HAdd.hAdd let429 let555))))
  let let575 := (binrel% HMul.hMul let568 let13)
  let let576 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let569 (binrel% HAdd.hAdd let564 let343))))
  let let577 := (binrel% HAdd.hAdd let347 (binrel% HAdd.hAdd let346 (binrel% HAdd.hAdd let575 (binrel% HAdd.hAdd let431 let556))))
  let let578 := (binrel% GE.ge let577 let576)
  let let579 := (Not let578)
  let let580 := (binrel% LT.lt let577 let576)
  let let581 := (binrel% LE.le let20 let121)
  let let582 := (binrel% LT.lt let430 let1)
  let let583 := (binrel% GT.gt let531 let1)
  let let584 := (binrel% GT.gt let568 let1)
  let let585 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let239 let148)))))
  let let586 := (binrel% HAdd.hAdd let51 let55)
  let let587 := (Int.ofNat 1925952000000000000)
  let let588 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 641984000000000) x5) (binrel% HMul.hMul let587 x6))
  let let589 := (binrel% HMul.hMul let521 let13)
  let let590 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 962976000000000)) x5) (binrel% HMul.hMul (Neg.neg let587) x6))
  let let591 := (binrel% HMul.hMul let417 let6)
  let let592 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let282 (binrel% HAdd.hAdd let455 (binrel% HAdd.hAdd let457 (binrel% HAdd.hAdd let546 let522))))))
  let let593 := (binrel% HAdd.hAdd let294 (binrel% HAdd.hAdd let292 (binrel% HAdd.hAdd let257 (binrel% HAdd.hAdd let460 (binrel% HAdd.hAdd let461 (binrel% HAdd.hAdd let591 let589))))))
  let let594 := (binrel% GE.ge let593 let592)
  let let595 := (Not let594)
  let let596 := (binrel% LT.lt let593 let592)
  let let597 := (binrel% GT.gt let180 let1)
  let let598 := (binrel% HMul.hMul let265 let121)
  let let599 := (binrel% HMul.hMul let415 let81)
  let let600 := (binrel% HMul.hMul let259 let121)
  let let601 := (binrel% HMul.hMul let356 let121)
  let let602 := (binrel% LT.lt let332 let1)
  let let603 := (binrel% HAdd.hAdd (binrel% HMul.hMul let531 x5) (binrel% HMul.hMul let302 x6))
  let let604 := (binrel% HAdd.hAdd let603 (binrel% HAdd.hAdd let566 x6))
  let let605 := (binrel% HMul.hMul let531 let6)
  let let606 := (binrel% HAdd.hAdd let572 (binrel% HAdd.hAdd let565 let214))
  let let607 := (binrel% HAdd.hAdd let605 (binrel% HAdd.hAdd let567 let563))
  let let608 := (binrel% GE.ge let607 let606)
  let let609 := (Not let608)
  let let610 := (binrel% LT.lt let607 let606)
  let let611 := (Not let262)
  let let612 := (binrel% LT.lt let6 let121)
  let let613 := (binrel% LE.le let121 let390)
  let let614 := (binrel% HMul.hMul let353 x1)
  let let615 := (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let434 let614))
  let let616 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let390 let149))))
  let let617 := (binrel% HMul.hMul let202 let121)
  let let618 := (binrel% HMul.hMul let137 let121)
  let let619 := (binrel% HMul.hMul let315 x6)
  let let620 := (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let449 (binrel% HAdd.hAdd let255 (binrel% HAdd.hAdd let473 (binrel% HAdd.hAdd let461 (binrel% HAdd.hAdd let590 let588))))))
  let let621 := (binrel% HMul.hMul let137 let74)
  let let622 := (binrel% HMul.hMul let142 let34)
  let let623 := (binrel% HDiv.hDiv let117 (Rat.ofInt 120030))
  let let624 := (binrel% HMul.hMul let193 let34)
  let let625 := (binrel% HAdd.hAdd let347 let624)
  let let626 := (binrel% GE.ge let625 let229)
  let let627 := (Not let626)
  let let628 := (binrel% LT.lt let625 let229)
  let let629 := (binrel% HMul.hMul let136 let51)
  let let630 := (binrel% HMul.hMul let117 let27)
  let let631 := (binrel% LT.lt let202 let1)
  let let632 := (binrel% GT.gt let136 let1)
  let let633 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let390 let121))))))
  let let634 := (binrel% LT.lt let519 let1)
  let let635 := (Not let365)
  let let636 := (binrel% LT.lt let34 let121)
  let let637 := (binrel% HMul.hMul let303 let121)
  let let638 := (binrel% HMul.hMul let414 let121)
  let let639 := (binrel% HAdd.hAdd let398 let44)
  let let640 := (binrel% HAdd.hAdd (binrel% HMul.hMul let414 x1) (binrel% HMul.hMul (Neg.neg let356) x2))
  let let641 := (binrel% HMul.hMul let415 x1)
  let let642 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let399 (binrel% HAdd.hAdd let641 (binrel% HAdd.hAdd let640 let639))))
  let let643 := (binrel% HMul.hMul let303 let34)
  let let644 := (binrel% HMul.hMul let414 let74)
  let let645 := (binrel% HMul.hMul let195 x5)
  let let646 := (Eq x6 let645)
  let let647 := (binrel% HMul.hMul let446 x5)
  let let648 := (Eq x6 let647)
  let let649 := (Or let648 let646)
  let let650 := (binrel% HMul.hMul let364 x4)
  let let651 := (Eq x5 let650)
  let let652 := (binrel% HMul.hMul let309 x4)
  let let653 := (Eq x5 let652)
  let let654 := (Or let653 let651)
  let let655 := (binrel% HMul.hMul let321 x3)
  let let656 := (Eq x4 let655)
  let let657 := (binrel% HMul.hMul let281 x3)
  let let658 := (Eq x4 let657)
  let let659 := (Or let658 let656)
  let let660 := (binrel% HMul.hMul let268 x2)
  let let661 := (Eq x3 let660)
  let let662 := (binrel% HMul.hMul let481 x2)
  let let663 := (Eq x3 let662)
  let let664 := (Or let663 let661)
  let let665 := (binrel% HMul.hMul let484 x1)
  let let666 := (Eq x2 let665)
  let let667 := (binrel% HMul.hMul let623 x1)
  let let668 := (Eq x2 let667)
  let let669 := (Or let668 let666)
  let let670 := (Eq x1 let381)
  let let671 := (Eq x1 let491)
  let let672 := (Or let671 let670)
  let let673 := (And let672 (And let669 (And let664 (And let659 (And let654 (And let649 let553))))))
  let let674 := (Not let90)
  let let675 := (Not let87)
  let let676 := (Or let82 let84)
  let let677 := (Or let397 let372)
  let let678 := (binrel% LT.lt let382 let436)
  let let679 := (And let395 let512)
  let let680 := (binrel% LT.lt let451 let445)
  let let681 := (And let373 let489)
  let let682 := (Not let85)
  let let683 := (Not let79)
  let let684 := (Or let78 let75)
  let let685 := (Or let329 let496)
  let let686 := (binrel% LT.lt let421 let228)
  let let687 := (And let395 let524)
  let let688 := (binrel% LT.lt let479 let214)
  let let689 := (And let373 let385)
  let let690 := (Not let70)
  let let691 := (Or let495 let690)
  let let692 := (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let358 let360))
  let let693 := (binrel% HAdd.hAdd let421 (binrel% HAdd.hAdd let435 let614))
  let let694 := (binrel% LE.le let693 let692)
  let let695 := (binrel% LE.le let614 let360)
  let let696 := (And let354 let87)
  let let697 := (binrel% LE.le let435 let358)
  let let698 := (And let244 let126)
  let let699 := (Eq let70 let126)
  let let700 := (binrel% LE.le let421 let228)
  let let701 := (And let395 let383)
  let let702 := (Eq let75 let383)
  let let703 := (Not let71)
  let let704 := (Or let396 let328)
  let let705 := (Not let57)
  let let706 := (Or let56 let52)
  let let707 := (Or let550 let335)
  let let708 := (binrel% LT.lt let230 let228)
  let let709 := (And let395 let420)
  let let710 := (binrel% LT.lt let223 let214)
  let let711 := (And let373 let319)
  let let712 := (Eq let334 let319)
  let let713 := (Not let63)
  let let714 := (Not let62)
  let let715 := (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let306 (binrel% HAdd.hAdd let600 let598)))
  let let716 := (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let438 (binrel% HAdd.hAdd let274 let501)))
  let let717 := (binrel% LE.le let716 let715)
  let let718 := (binrel% LE.le let501 let598)
  let let719 := (And let266 let502)
  let let720 := (Eq let62 let502)
  let let721 := (binrel% LE.le let274 let600)
  let let722 := (And let263 let374)
  let let723 := (Eq let78 let374)
  let let724 := (binrel% LE.le let438 let306)
  let let725 := (And let261 let82)
  let let726 := (binrel% LE.le let230 let228)
  let let727 := (And let395 let317)
  let let728 := (Or let549 let406)
  let let729 := (Or let675 let328)
  let let730 := (Not let30)
  let let731 := (Or let14 (Or let675 let730))
  let let732 := (Or let338 let730)
  let let733 := (Or let338 (Or let730 let14))
  let let734 := (Not let17)
  let let735 := (Not let11)
  let let736 := (Or let730 let509)
  let let737 := (Or let338 let736)
  let let738 := (Or let14 (Or let675 (Or let690 let737)))
  let let739 := (Or let549 let737)
  let let740 := (Or let730 let549)
  let let741 := (Or let338 (Or let509 (Or let14 let740)))
  let let742 := (Or let675 (Or let690 let741))
  let let743 := (Or let338 (Or let509 (Or let248 let740)))
  let let744 := (Or let675 (Or let690 let743))
  let let745 := (Eq Or Or)
  let let746 := (Eq let509 let509)
  let let747 := (And let46 (And let7 (And let247 (And let30 let56))))
  let let748 := (Or let549 False)
  let let749 := (Or let338 (Or let509 (Or let248 (Or let730 let748))))
  let let750 := (binrel% LE.le let216 let205)
  let let751 := (And let323 let412)
  let let752 := (Implies let751 let750)
  let let753 := (Eq let30 let412)
  let let754 := (binrel% LT.lt let217 let207)
  let let755 := (And let570 let199)
  let let756 := (Implies let755 let754)
  let let757 := (Eq let247 let199)
  let let758 := (binrel% LE.le let218 let209)
  let let759 := (And let432 let262)
  let let760 := (Implies let759 let758)
  let let761 := (Eq let7 let262)
  let let762 := (binrel% LE.le let219 let210)
  let let763 := (And let190 let191)
  let let764 := (Implies let763 let762)
  let let765 := (Eq let46 let191)
  let let766 := (binrel% LE.le let221 let212)
  let let767 := (And let188 let126)
  let let768 := (Implies let767 let766)
  let let769 := (binrel% LE.le let222 let213)
  let let770 := (And let186 let87)
  let let771 := (Implies let770 let769)
  let let772 := (binrel% LE.le let223 let214)
  let let773 := (And let373 let322)
  let let774 := (Implies let773 let772)
  let let775 := (Eq let56 let322)
  let let776 := (Or let714 let737)
  let let777 := (Or let730 let714)
  let let778 := (Or let338 (Or let509 (Or let14 let777)))
  let let779 := (Or let675 (Or let690 let778))
  let let780 := (Or let338 (Or let509 (Or let248 let777)))
  let let781 := (Or let675 (Or let690 let780))
  let let782 := (And let46 (And let7 (And let247 (And let30 let62))))
  let let783 := (Or let714 False)
  let let784 := (Or let338 (Or let509 (Or let248 (Or let730 let783))))
  let let785 := (binrel% LE.le let289 let282)
  let let786 := (And let447 let412)
  let let787 := (Implies let786 let785)
  let let788 := (binrel% LT.lt let290 let284)
  let let789 := (And let513 let199)
  let let790 := (Implies let789 let788)
  let let791 := (binrel% LE.le let291 let286)
  let let792 := (And let559 let262)
  let let793 := (Implies let792 let791)
  let let794 := (binrel% LE.le let292 let181)
  let let795 := (And let597 let191)
  let let796 := (Implies let795 let794)
  let let797 := (binrel% LE.le let294 let214)
  let let798 := (And let373 let502)
  let let799 := (Implies let798 let797)
  let let800 := (Or let14 (Or let675 (Or let328 let737)))
  let let801 := (Or let328 (Or let675 let778))
  let let802 := (Or let328 (Or let675 let780))
  let let803 := (binrel% LE.le let461 let457)
  let let804 := (And let534 let87)
  let let805 := (Implies let804 let803)
  let let806 := (binrel% LE.le let460 let455)
  let let807 := (And let536 let374)
  let let808 := (Implies let807 let806)
  let let809 := (Or let328 (Or let675 let741))
  let let810 := (Or let328 (Or let675 let743))
  let let811 := (Or let46 (Or let46 let14))
  let let812 := (Not let47)
  let let813 := (Or let46 let43)
  let let814 := (Or let339 let543)
  let let815 := (binrel% LT.lt let346 let228)
  let let816 := (And let395 let552)
  let let817 := (Eq let338 let552)
  let let818 := (binrel% LT.lt let514 let214)
  let let819 := (And let373 let411)
  let let820 := (Or let509 let406)
  let let821 := (Or let542 (Or let730 (Or let14 let820)))
  let let822 := (Or let542 (Or let730 (Or let248 let820)))
  let let823 := (Eq let406 let406)
  let let824 := (Eq let542 let542)
  let let825 := (Or let406 False)
  let let826 := (binrel% LE.le let345 let341)
  let let827 := (And let238 let262)
  let let828 := (binrel% LT.lt let272 let342)
  let let829 := (And let558 let199)
  let let830 := (binrel% LE.le let337 let343)
  let let831 := (And let500 let412)
  let let832 := (binrel% LE.le let346 let228)
  let let833 := (And let395 let196)
  let let834 := (Implies let833 let832)
  let let835 := (Eq let43 let196)
  let let836 := (binrel% LE.le let347 let214)
  let let837 := (And let373 let492)
  let let838 := (Implies let837 let836)
  let let839 := (Eq let39 let492)
  let let840 := (Not let40)
  let let841 := (Not let31)
  let let842 := (Not let25)
  let let843 := (Not let24)
  let let844 := (Or let328 let843)
  let let845 := (Or let675 let844)
  let let846 := (Or let843 let509)
  let let847 := (Or let542 let406)
  let let848 := (Or let843 (Or let509 (Or let14 let847)))
  let let849 := (Or let843 (Or let509 (Or let248 let847)))
  let let850 := (Eq let843 let843)
  let let851 := (Eq let406 let561)
  let let852 := (binrel% LE.le let556 let343)
  let let853 := (And let500 let581)
  let let854 := (Eq let24 let581)
  let let855 := (binrel% LE.le let431 let564)
  let let856 := (And let582 let262)
  let let857 := (binrel% LT.lt let575 let569)
  let let858 := (And let584 let199)
  let let859 := (Or let338 let846)
  let let860 := (Or let14 (Or let675 (Or let328 let859)))
  let let861 := (Or let338 (Or let843 (Or let328 (Or let675 (Or let509 (Or let14 let714))))))
  let let862 := (Or let338 (Or let843 (Or let328 (Or let675 (Or let509 (Or let248 let714))))))
  let let863 := (binrel% LT.lt let589 let522)
  let let864 := (And let571 let199)
  let let865 := (binrel% LE.le let591 let546)
  let let866 := (And let418 let262)
  let let867 := (binrel% LE.le let257 let282)
  let let868 := (And let447 let581)
  let let869 := (Or let675 (Or let328 (Or let338 (Or let843 (Or let509 (Or let14 let549))))))
  let let870 := (Or let675 (Or let328 (Or let338 (Or let843 (Or let509 (Or let248 let549))))))
  let let871 := (binrel% LT.lt let459 let453)
  let let872 := (And let425 let199)
  let let873 := (binrel% LE.le let333 let454)
  let let874 := (And let602 let262)
  let let875 := (binrel% LE.le let327 let205)
  let let876 := (And let323 let581)
  let let877 := (Not let4)
  let let878 := (Or let247 (Or let877 let7))
  let let879 := (Or let247 (Or let877 let510))
  let let880 := (binrel% LE.le let563 let214)
  let let881 := (And let373 let553)
  let let882 := (Eq let4 let553)
  let let883 := (binrel% LE.le let567 let565)
  let let884 := (And let533 let197)
  let let885 := (binrel% LT.lt let605 let572)
  let let886 := (And let583 let612)
  let let887 := (Or let328 (Or let549 (Or let406 let509)))
  let let888 := (Or let675 let887)
  let let889 := (Or let509 let877)
  let let890 := (Or let730 let889)
  let let891 := (Or let328 (Or let549 (Or let406 let890)))
  let let892 := (Or let328 (Or let509 (Or let877 let730)))
  let let893 := (And let78 (And let7 (And let4 let30)))
  let let894 := (Or let328 (Or let509 (Or let877 (Or let730 False))))
  let let895 := (binrel% HAdd.hAdd let617 let388)
  let let896 := (binrel% HAdd.hAdd let618 let895)
  let let897 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let320 (binrel% HAdd.hAdd let444 (binrel% HAdd.hAdd let391 let896))))
  let let898 := (binrel% HAdd.hAdd let203 let619)
  let let899 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let621 let898))
  let let900 := (binrel% HAdd.hAdd let630 (binrel% HAdd.hAdd let629 (binrel% HAdd.hAdd let622 let899)))
  let let901 := (binrel% LE.le let900 let897)
  let let902 := (binrel% LE.le let619 let388)
  let let903 := (And let316 let553)
  let let904 := (Implies let903 let902)
  let let905 := (binrel% LE.le let203 let617)
  let let906 := (And let631 let262)
  let let907 := (Implies let906 let905)
  let let908 := (binrel% LE.le let621 let618)
  let let909 := (And let494 let374)
  let let910 := (Implies let909 let908)
  let let911 := (binrel% LE.le let140 let391)
  let let912 := (And let433 let87)
  let let913 := (Implies let912 let911)
  let let914 := (binrel% LE.le let622 let444)
  let let915 := (And let443 let492)
  let let916 := (Implies let915 let914)
  let let917 := (binrel% LE.le let629 let320)
  let let918 := (And let632 let322)
  let let919 := (Implies let918 let917)
  let let920 := (binrel% LE.le let630 let214)
  let let921 := (And let373 let412)
  let let922 := (Implies let921 let920)
  let let923 := (Or let843 let889)
  let let924 := (Or let328 (Or let549 (Or let406 let923)))
  let let925 := (And let78 let24)
  let let926 := (Or let328 (Or let843 False))
  let let927 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let320 (binrel% HAdd.hAdd let340 (binrel% HAdd.hAdd let544 (binrel% HAdd.hAdd let444 (binrel% HAdd.hAdd let391 let618))))))
  let let928 := (binrel% HAdd.hAdd let140 let621)
  let let929 := (binrel% HAdd.hAdd let324 (binrel% HAdd.hAdd let629 (binrel% HAdd.hAdd let413 (binrel% HAdd.hAdd let520 (binrel% HAdd.hAdd let622 let928)))))
  let let930 := (binrel% LE.le let929 let927)
  let let931 := (binrel% LE.le let520 let544)
  let let932 := (And let634 let262)
  let let933 := (Implies let932 let931)
  let let934 := (binrel% LE.le let413 let340)
  let let935 := (And let279 let553)
  let let936 := (Implies let935 let934)
  let let937 := (binrel% LE.le let324 let214)
  let let938 := (And let373 let581)
  let let939 := (Implies let938 let937)
  let let940 := (Or let39 let35)
  let let941 := (Or let407 let377)
  let let942 := (binrel% LT.lt let624 let228)
  let let943 := (And let395 let561)
  let let944 := (binrel% LT.lt let347 let214)
  let let945 := (And let373 let636)
  let let946 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let601 (binrel% HAdd.hAdd let599 (binrel% HAdd.hAdd let638 let637))))
  let let947 := (binrel% HAdd.hAdd let514 (binrel% HAdd.hAdd let400 (binrel% HAdd.hAdd let641 (binrel% HAdd.hAdd let644 let643))))
  let let948 := (binrel% LE.le let947 let946)
  let let949 := (binrel% LE.le let643 let637)
  let let950 := (And let304 let365)
  let let951 := (binrel% LE.le let644 let638)
  let let952 := (And let547 let374)
  let let953 := (binrel% LE.le let641 let599)
  let let954 := (And let416 let82)
  let let955 := (binrel% LE.le let400 let601)
  let let956 := (And let357 let322)
  let let957 := (binrel% LE.le let514 let214)
  let let958 := (And let373 let191)
  let let959 := (binrel% HAdd.hAdd let445 let389)
  let let960 := (binrel% LE.le let468 let959)
  let let961 := (binrel% LE.le let382 let389)
  let let962 := (And let395 let87)
  let let963 := (binrel% LE.le let451 let445)
  let let964 := (And let373 let386)
  let let965 := (Or let509 let328)
  let let966 := (Or let338 let509)
  let let967 := (Or let328 (Or let549 let966))
  let let968 := (Or let549 (Or let877 (Or let509 (Or let396 let844))))
  let let969 := (And let56 (And let4 (And let7 (And let82 let925))))
  let let970 := (Or let549 (Or let877 (Or let509 (Or let396 let926))))
  let let971 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let340 (binrel% HAdd.hAdd let544 (binrel% HAdd.hAdd let174 let175))))))
  let let972 := (binrel% HAdd.hAdd let324 (binrel% HAdd.hAdd let311 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let413 (binrel% HAdd.hAdd let520 (binrel% HAdd.hAdd let157 let313))))))
  let let973 := (binrel% LE.le let972 let971)
  let let974 := (binrel% LE.le let313 let175)
  let let975 := (And let486 let374)
  let let976 := (Implies let975 let974)
  let let977 := (binrel% LE.le let157 let174)
  let let978 := (And let165 let82)
  let let979 := (Implies let978 let977)
  let let980 := (binrel% LE.le let166 let172)
  let let981 := (And let164 let322)
  let let982 := (Implies let981 let980)
  let let983 := (binrel% LE.le let311 let171)
  let let984 := (And let163 let191)
  let let985 := (Implies let984 let983)
  let let986 := (Or let549 (Or let396 let892))
  let let987 := (And let56 (And let82 let893))
  let let988 := (Or let549 (Or let396 let894))
  let let989 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let175 let895)))))
  let let990 := (binrel% HAdd.hAdd let630 (binrel% HAdd.hAdd let311 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let313 let898)))))
  let let991 := (binrel% LE.le let990 let989)
  let let992 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let444 (binrel% HAdd.hAdd let320 (binrel% HAdd.hAdd let147 let896))))
  let let993 := (binrel% HAdd.hAdd let630 (binrel% HAdd.hAdd let622 (binrel% HAdd.hAdd let629 let899)))
  let let994 := (binrel% LE.le let993 let992)
  let let995 := (binrel% LE.le let140 let147)
  let let996 := (And let433 let82)
  let let997 := (Implies let996 let995)
  let let998 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let444 (binrel% HAdd.hAdd let320 (binrel% HAdd.hAdd let340 (binrel% HAdd.hAdd let544 (binrel% HAdd.hAdd let147 let618))))))
  let let999 := (binrel% HAdd.hAdd let324 (binrel% HAdd.hAdd let622 (binrel% HAdd.hAdd let629 (binrel% HAdd.hAdd let413 (binrel% HAdd.hAdd let520 let928)))))
  let let1000 := (binrel% LE.le let999 let998)
  let let1001 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let122 let124))
  let let1002 := (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let120 let275))
  let let1003 := (binrel% LE.le let1002 let1001)
  let let1004 := (binrel% LE.le let275 let124)
  let let1005 := (And let116 let82)
  let let1006 := (binrel% LE.le let120 let122)
  let let1007 := (And let113 let383)
  let let1008 := (binrel% LE.le let118 let214)
  let let1009 := (And let373 let126)
(Eq let111 let92) → (Eq let113 True) → (Eq let116 True) → (Eq let118 let66) → (Eq let120 let119) → (Eq let122 let121) → (Eq let124 let123) → (Eq let125 let123) → let129 → (Eq let131 let130) → (Eq let146 let121) → (Eq let147 let130) → (Eq let150 let130) → (Eq let151 False) → (Eq let162 let121) → (Eq let163 True) → (Eq let164 True) → (Eq let165 True) → (Eq let166 let159) → (Eq let170 let121) → (Eq let171 let121) → (Eq let172 let121) → (Eq let174 let173) → (Eq let175 let121) → (Eq let176 let173) → (Eq let177 False) → (Eq let179 let178) → (Eq let181 let121) → (Eq let183 let182) → (Eq let186 True) → (Eq let187 let121) → (Eq let188 True) → (Eq let190 True) → (Eq let191 let46) → (Eq let195 let194) → (Eq let196 let43) → (Eq let199 let198) → (Eq let200 let121) → (Eq let197 let14) → (Eq let203 let134) → (Eq let227 let226) → (Eq let234 let233) → (Eq let213 let236) → (Eq let238 True) → (Eq let242 let239) → (Eq let212 let121) → (Eq let210 let121) → (Eq let244 True) → (Eq let246 let121) → (Eq let248 let14) → let252 → (Eq let257 let255) → (Eq let261 True) → (Eq let262 let7) → (Eq let263 True) → (Eq let266 True) → (Eq let268 let267) → (Eq let272 let270) → (Eq let274 let273) → (Eq let276 let121) → (Eq let277 let236) → (Eq let279 True) → (Eq let281 let158) → (Eq let298 let297) → (Eq let218 let300) → (Eq let219 let301) → (Eq let304 True) → (Eq let306 let305) → (Eq let286 let121) → (Eq let309 let308) → (Eq let294 let59) → (Eq let217 let310) → (Eq let311 let161) → (Eq let312 let305) → (Eq let313 let155) → (Eq let314 False) → (Eq let316 True) → (Eq let319 let318) → (Eq let320 let121) → (Eq let321 let142) → (Eq let322 let56) → (Eq let323 True) → (Eq let324 let20) → (Eq let223 let51) → (Eq let327 let326) → (Eq let230 let55) → (Eq let329 let78) → (Eq let333 let331) → (Eq let335 let52) → (Eq let205 let121) → (Eq let337 let336) → (Eq let339 let46) → (Eq let126 let70) → (Eq let209 let121) → (Eq let340 let121) → (Eq let351 let350) → (Eq let352 False) → (Eq let354 True) → (Eq let355 True) → (Eq let357 True) → (Eq let358 let121) → (Eq let360 let359) → (Eq let364 let362) → (Eq let365 let35) → (Eq let370 let121) → (Eq let372 let84) → (Eq let373 True) → (Eq let282 let121) → (Eq let374 let78) → (Eq let289 let375) → (Eq let377 let35) → (Eq let380 let93) → (Eq let381 let81) → (Eq let382 let69) → (Eq let385 let384) → (Eq let386 let84) → (Eq let207 let121) → (Eq let387 False) → (Eq let193 let193) → (Eq let388 let121) → (Eq let389 let88) → (Eq let391 let390) → (Eq let394 let106) → (Eq let395 True) → (Eq let397 let82) → (Eq let400 let399) → (Eq let284 let121) → (Eq let403 let103) → (Eq let290 let405) → (Eq let407 let39) → let409 → (Eq let411 let410) → (Eq let412 let30) → (Eq let413 let169) → (Eq let416 True) → (Eq let418 True) → (Eq let420 let419) → (Eq let148 let121) → (Eq let421 let77) → (Eq let422 False) → (Eq let423 let173) → (Eq let425 True) → (Eq let426 let359) → (Eq let427 let239) → (Eq let431 let429) → (Eq let432 True) → (Eq let433 True) → (Eq let435 let434) → (Eq let436 let83) → (Eq let439 let121) → (Eq let442 let97) → (Eq let443 True) → (Eq let317 let52) → (Eq let444 let121) → (Eq let445 let81) → (Eq let446 let251) → (Eq let447 True) → (Eq let291 let448) → (Eq let216 let366) → (Eq let292 let449) → (Eq let450 False) → (Eq let451 x1) → let452 → (Eq let465 let464) → (Eq let466 let100) → (Eq let471 let470) → (Eq let221 let369) → (Eq let472 let99) → (Eq let460 let473) → (Eq let475 let121) → (Eq let477 let102) → (Eq let478 let121) → (Eq let228 let121) → (Eq let479 let74) → (Eq let480 let121) → (Eq let481 let401) → (Eq let483 let94) → (Eq let484 let184) → (Eq let485 let121) → (Eq let486 True) → (Eq let488 let96) → (Eq let489 let396) → (Eq let490 True) → (Eq let491 let86) → (Eq let492 let39) → let493 → (Eq let341 let121) → (Eq let494 True) → (Eq let496 let75) → (Eq let459 let497) → (Eq let498 let121) → (Eq let499 let121) → (Eq let500 True) → (Eq let501 let437) → (Eq let214 let121) → (Eq let502 let62) → (Eq let345 let503) → (Eq let507 let506) → (Eq let508 let105) → (Eq let510 let7) → (Eq let512 let511) → (Eq let383 let75) → (Eq let513 True) → (Eq let518 let517) → (Eq let520 let168) → (Eq let522 let121) → (Eq let524 let523) → (Eq let457 let239) → (Eq let455 let121) → (Eq let525 let121) → (Eq let342 let121) → (Eq let530 let529) → (Eq let533 True) → (Eq let534 True) → (Eq let535 False) → (Eq let536 True) → (Eq let541 let540) → (Eq let543 let43) → (Eq let347 let34) → (Eq let544 let121) → (Eq let545 let121) → (Eq let546 let121) → (Eq let346 let45) → (Eq let547 True) → (Eq let548 let121) → (Eq let514 let42) → (Eq let550 let56) → (Eq let552 let551) → (Eq let553 let4) → (Eq let241 let121) → (Eq let343 let121) → (Eq let554 True) → (Eq let556 let555) → (Eq let557 let121) → (Eq let558 True) → (Eq let559 True) → let562 → (Eq let563 x6) → (Eq let564 let121) → (Eq let565 let121) → (Eq let567 let566) → (Eq let569 let121) → (Eq let570 True) → (Eq let571 True) → (Eq let572 let121) → (Eq let574 let121) → (Eq let575 let573) → (Eq let580 let579) → (Eq let581 let24) → (Eq let582 True) → (Eq let583 True) → (Eq let584 True) → (Eq let585 let239) → (Eq let586 let121) → (Eq let589 let588) → (Eq let591 let590) → (Eq let596 let595) → (Eq let597 True) → (Eq let149 let121) → (Eq let598 let121) → (Eq let453 let121) → (Eq let599 let182) → (Eq let600 let121) → (Eq let454 let121) → (Eq let601 let121) → (Eq let602 True) → (Eq let604 let121) → (Eq let605 let603) → (Eq let610 let609) → (Eq let612 let611) → (Eq let613 False) → (Eq let615 let121) → (Eq let616 let390) → (Eq let617 let121) → (Eq let618 let121) → (Eq let619 let133) → (Eq let620 let121) → (Eq let621 let138) → (Eq let622 let145) → (Eq let623 let392) → (Eq let628 let627) → (Eq let629 let143) → (Eq let630 let27) → (Eq let631 True) → (Eq let632 True) → (Eq let633 let390) → (Eq let634 True) → (Eq let624 let38) → (Eq let636 let635) → (Eq let637 let121) → (Eq let638 let121) → (Eq let642 let121) → (Eq let643 let639) → (Eq let644 let640) → let673 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 1)
  let let3 := (Neg.neg let2)
  let let4 := (binrel% GE.ge (binrel% HMul.hMul let3 x6) let1)
  let let5 := (Int.ofNat 2000)
  let let6 := (binrel% HAdd.hAdd x5 (binrel% HMul.hMul let5 x6))
  let let7 := (binrel% GE.ge let6 let1)
  let let8 := (binrel% HMul.hMul (Neg.neg let5) x6)
  let let9 := (binrel% HMul.hMul let3 x5)
  let let10 := (binrel% GE.ge (binrel% HAdd.hAdd let9 let8) let1)
  let let11 := (And let10 let7)
  let let12 := (Int.ofNat 3000)
  let let13 := (binrel% HAdd.hAdd x5 (binrel% HMul.hMul let12 x6))
  let let14 := (binrel% GE.ge let13 let1)
  let let15 := (binrel% HMul.hMul (Neg.neg let12) x6)
  let let16 := (binrel% GE.ge (binrel% HAdd.hAdd let9 let15) let1)
  let let17 := (And let16 let14)
  let let18 := (Or let17 let11)
  let let19 := (Int.ofNat 8000)
  let let20 := (binrel% HAdd.hAdd x4 (binrel% HMul.hMul let19 x5))
  let let21 := (binrel% GE.ge let20 let1)
  let let22 := (binrel% HMul.hMul (Neg.neg let19) x5)
  let let23 := (binrel% HMul.hMul let3 x4)
  let let24 := (binrel% GE.ge (binrel% HAdd.hAdd let23 let22) let1)
  let let25 := (And let24 let21)
  let let26 := (Int.ofNat 40000)
  let let27 := (binrel% HAdd.hAdd x4 (binrel% HMul.hMul let26 x5))
  let let28 := (binrel% GE.ge let27 let1)
  let let29 := (binrel% HMul.hMul (Neg.neg let26) x5)
  let let30 := (binrel% GE.ge (binrel% HAdd.hAdd let23 let29) let1)
  let let31 := (And let30 let28)
  let let32 := (Or let31 let25)
  let let33 := (Int.ofNat 800000)
  let let34 := (binrel% HAdd.hAdd x3 (binrel% HMul.hMul (Neg.neg let33) x4))
  let let35 := (binrel% GE.ge let34 let1)
  let let36 := (binrel% HMul.hMul let33 x4)
  let let37 := (binrel% HMul.hMul let3 x3)
  let let38 := (binrel% HAdd.hAdd let37 let36)
  let let39 := (binrel% GE.ge let38 let1)
  let let40 := (And let39 let35)
  let let41 := (Int.ofNat 400000)
  let let42 := (binrel% HAdd.hAdd x3 (binrel% HMul.hMul (Neg.neg let41) x4))
  let let43 := (binrel% GE.ge let42 let1)
  let let44 := (binrel% HMul.hMul let41 x4)
  let let45 := (binrel% HAdd.hAdd let37 let44)
  let let46 := (binrel% GE.ge let45 let1)
  let let47 := (And let46 let43)
  let let48 := (Or let47 let40)
  let let49 := (Int.ofNat 199900)
  let let50 := (binrel% HMul.hMul (Neg.neg let49) x3)
  let let51 := (binrel% HAdd.hAdd x2 let50)
  let let52 := (binrel% GE.ge let51 let1)
  let let53 := (binrel% HMul.hMul let49 x3)
  let let54 := (binrel% HMul.hMul let3 x2)
  let let55 := (binrel% HAdd.hAdd let54 let53)
  let let56 := (binrel% GE.ge let55 let1)
  let let57 := (And let56 let52)
  let let58 := (Int.ofNat 100310)
  let let59 := (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg let58) x3))
  let let60 := (binrel% GE.ge let59 let1)
  let let61 := (binrel% HMul.hMul let58 x3)
  let let62 := (binrel% GE.ge (binrel% HAdd.hAdd let54 let61) let1)
  let let63 := (And let62 let60)
  let let64 := (Or let63 let57)
  let let65 := (Int.ofNat 10003)
  let let66 := (binrel% HAdd.hAdd x1 (binrel% HMul.hMul (Neg.neg let65) x2))
  let let67 := (binrel% GE.ge let66 let1)
  let let68 := (binrel% HMul.hMul let65 x2)
  let let69 := (binrel% HMul.hMul let3 x1)
  let let70 := (binrel% GE.ge (binrel% HAdd.hAdd let69 let68) let1)
  let let71 := (And let70 let67)
  let let72 := (Int.ofNat 120030)
  let let73 := (binrel% HMul.hMul (Neg.neg let72) x2)
  let let74 := (binrel% HAdd.hAdd x1 let73)
  let let75 := (binrel% GE.ge let74 let1)
  let let76 := (binrel% HMul.hMul let72 x2)
  let let77 := (binrel% HAdd.hAdd let69 let76)
  let let78 := (binrel% GE.ge let77 let1)
  let let79 := (And let78 let75)
  let let80 := (Or let79 let71)
  let let81 := (binrel% HDiv.hDiv let2 (Int.ofNat 100002))
  let let82 := (binrel% GE.ge x1 let81)
  let let83 := (Neg.neg let81)
  let let84 := (binrel% GE.ge let69 let83)
  let let85 := (And let84 let82)
  let let86 := (binrel% HDiv.hDiv let2 (Int.ofNat 100000))
  let let87 := (binrel% GE.ge x1 let86)
  let let88 := (Neg.neg let86)
  let let89 := (binrel% GE.ge let69 let88)
  let let90 := (And let89 let87)
  let let91 := (Or let90 let85)
  let let92 := (And let91 (And let80 (And let64 (And let48 (And let32 (And let18 let4))))))
  let let93 := (Eq x5 let8)
  let let94 := (Eq x5 let15)
  let let95 := (Or let94 let93)
  let let96 := (Eq x4 let22)
  let let97 := (Eq x4 let29)
  let let98 := (Or let97 let96)
  let let99 := (Eq x3 let36)
  let let100 := (Eq x3 let44)
  let let101 := (Or let100 let99)
  let let102 := (Eq x2 let53)
  let let103 := (Eq x2 let61)
  let let104 := (Or let103 let102)
  let let105 := (Eq x1 let68)
  let let106 := (Eq x1 let76)
  let let107 := (Or let106 let105)
  let let108 := (Eq x1 let81)
  let let109 := (Eq x1 let86)
  let let110 := (Or let109 let108)
  let let111 := (And let110 (And let107 (And let104 (And let101 (And let98 (And let95 let4))))))
  let let112 := (Neg.neg (binrel% HDiv.hDiv let65 let72))
  let let113 := (binrel% LT.lt let112 let1)
  let let114 := (Int.ofNat 110027)
  let let115 := (Neg.neg (binrel% HDiv.hDiv let114 let72))
  let let116 := (binrel% LT.lt let115 let1)
  let let117 := (Rat.ofInt 1)
  let let118 := (binrel% HMul.hMul let117 let66)
  let let119 := (binrel% HAdd.hAdd (binrel% HMul.hMul let112 x1) let68)
  let let120 := (binrel% HMul.hMul let112 let74)
  let let121 := (Rat.ofInt 0)
  let let122 := (binrel% HMul.hMul let112 let121)
  let let123 := (Neg.neg (binrel% HDiv.hDiv let114 (Int.ofNat 12003240060)))
  let let124 := (binrel% HMul.hMul let115 let81)
  let let125 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 let123))
  let let126 := (binrel% LE.le let66 let121)
  let let127 := (Not let126)
  let let128 := (binrel% GT.gt let66 let121)
  let let129 := (Eq let128 let127)
  let let130 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 1919558150395200000000)))
  let let131 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let130 let121))))))
  let let132 := (Int.ofNat 80000000)
  let let133 := (binrel% HMul.hMul let132 x6)
  let let134 := (binrel% HAdd.hAdd let29 (binrel% HMul.hMul (Neg.neg let132) x6))
  let let135 := (binrel% HAdd.hAdd let134 let133)
  let let136 := (binrel% HDiv.hDiv let2 (Int.ofNat 159920000000))
  let let137 := (binrel% HDiv.hDiv let2 (Int.ofNat 19195197600000000))
  let let138 := (binrel% HAdd.hAdd (binrel% HMul.hMul let137 x1) (binrel% HMul.hMul (Neg.neg let136) x2))
  let let139 := (Neg.neg let137)
  let let140 := (binrel% HMul.hMul let139 x1)
  let let141 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let138 let135))
  let let142 := (binrel% HDiv.hDiv let2 let33)
  let let143 := (binrel% HAdd.hAdd (binrel% HMul.hMul let136 x2) (binrel% HMul.hMul (Neg.neg let142) x3))
  let let144 := (binrel% HMul.hMul let142 x3)
  let let145 := (binrel% HAdd.hAdd let144 let23)
  let let146 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let143 let141)))
  let let147 := (binrel% HMul.hMul let139 let81)
  let let148 := (binrel% HAdd.hAdd let121 let121)
  let let149 := (binrel% HAdd.hAdd let121 let148)
  let let150 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let130 let149))))
  let let151 := (binrel% LE.le let121 let130)
  let let152 := (Int.ofNat 79960000000)
  let let153 := (binrel% HDiv.hDiv let2 let152)
  let let154 := (binrel% HDiv.hDiv let2 (Int.ofNat 9597598800000000))
  let let155 := (binrel% HAdd.hAdd (binrel% HMul.hMul let154 x1) (binrel% HMul.hMul (Neg.neg let153) x2))
  let let156 := (Neg.neg let154)
  let let157 := (binrel% HMul.hMul let156 x1)
  let let158 := (binrel% HDiv.hDiv let2 let41)
  let let159 := (binrel% HAdd.hAdd (binrel% HMul.hMul let153 x2) (binrel% HMul.hMul (Neg.neg let158) x3))
  let let160 := (binrel% HMul.hMul let158 x3)
  let let161 := (binrel% HAdd.hAdd let160 let23)
  let let162 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let155 let135)))))
  let let163 := (binrel% GT.gt let158 let1)
  let let164 := (binrel% GT.gt let153 let1)
  let let165 := (binrel% LT.lt let156 let1)
  let let166 := (binrel% HMul.hMul let153 let51)
  let let167 := (Int.ofNat 16000000)
  let let168 := (binrel% HAdd.hAdd let22 (binrel% HMul.hMul (Neg.neg let167) x6))
  let let169 := (binrel% HMul.hMul let167 x6)
  let let170 := (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let157 let155))))))
  let let171 := (binrel% HMul.hMul let158 let121)
  let let172 := (binrel% HMul.hMul let153 let121)
  let let173 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 959779075197600000000)))
  let let174 := (binrel% HMul.hMul let156 let81)
  let let175 := (binrel% HMul.hMul let154 let121)
  let let176 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let173 let121))))))
  let let177 := (binrel% LE.le let121 let173)
  let let178 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 5000100000)))
  let let179 := (binrel% HAdd.hAdd let81 let88)
  let let180 := (Rat.ofInt 100310)
  let let181 := (binrel% HMul.hMul let180 let121)
  let let182 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 4798895375988000)))
  let let183 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let182 let148)))
  let let184 := (binrel% HDiv.hDiv let2 let65)
  let let185 := (Neg.neg let184)
  let let186 := (binrel% LT.lt let185 let1)
  let let187 := (binrel% HAdd.hAdd let34 let38)
  let let188 := (binrel% GT.gt let184 let1)
  let let189 := (Rat.ofInt 199900)
  let let190 := (binrel% GT.gt let189 let1)
  let let191 := (binrel% LE.le let42 let121)
  let let192 := (binrel% HDiv.hDiv let2 let5)
  let let193 := (Neg.neg let117)
  let let194 := (binrel% HMul.hMul let193 let192)
  let let195 := (binrel% HDiv.hDiv let193 (Rat.ofInt 2000))
  let let196 := (binrel% GE.ge let42 let121)
  let let197 := (binrel% GE.ge let13 let121)
  let let198 := (Not let197)
  let let199 := (binrel% LT.lt let13 let121)
  let let200 := (binrel% HAdd.hAdd let74 let77)
  let let201 := (Rat.ofInt 40000)
  let let202 := (Neg.neg let201)
  let let203 := (binrel% HMul.hMul let202 let6)
  let let204 := (Rat.ofInt 79960000000)
  let let205 := (binrel% HMul.hMul let204 let121)
  let let206 := (Rat.ofInt 6396800000000000)
  let let207 := (binrel% HMul.hMul let206 let121)
  let let208 := (Neg.neg (Rat.ofInt 9595200000000000))
  let let209 := (binrel% HMul.hMul let208 let121)
  let let210 := (binrel% HMul.hMul let189 let121)
  let let211 := (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd let209 (binrel% HAdd.hAdd let207 let205)))
  let let212 := (binrel% HMul.hMul let184 let121)
  let let213 := (binrel% HMul.hMul let185 let86)
  let let214 := (binrel% HMul.hMul let117 let121)
  let let215 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let213 (binrel% HAdd.hAdd let212 let211)))
  let let216 := (binrel% HMul.hMul let204 let27)
  let let217 := (binrel% HMul.hMul let206 let13)
  let let218 := (binrel% HMul.hMul let208 let6)
  let let219 := (binrel% HMul.hMul let189 let42)
  let let220 := (binrel% HAdd.hAdd let219 (binrel% HAdd.hAdd let218 (binrel% HAdd.hAdd let217 let216)))
  let let221 := (binrel% HMul.hMul let184 let66)
  let let222 := (binrel% HMul.hMul let185 x1)
  let let223 := (binrel% HMul.hMul let117 let51)
  let let224 := (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let222 (binrel% HAdd.hAdd let221 let220)))
  let let225 := (binrel% GE.ge let224 let215)
  let let226 := (Not let225)
  let let227 := (binrel% LT.lt let224 let215)
  let let228 := (binrel% HMul.hMul let193 let121)
  let let229 := (binrel% HAdd.hAdd let214 let228)
  let let230 := (binrel% HMul.hMul let193 let51)
  let let231 := (binrel% HAdd.hAdd let223 let230)
  let let232 := (binrel% GE.ge let231 let229)
  let let233 := (Not let232)
  let let234 := (binrel% LT.lt let231 let229)
  let let235 := (Int.ofNat 1000300000)
  let let236 := (Neg.neg (binrel% HDiv.hDiv let2 let235))
  let let237 := (Neg.neg (Rat.ofInt 48000000000))
  let let238 := (binrel% LT.lt let237 let1)
  let let239 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 12003000000)))
  let let240 := (binrel% HAdd.hAdd let121 let149)
  let let241 := (binrel% HAdd.hAdd let121 let240)
  let let242 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let239 let241))
  let let243 := (binrel% HDiv.hDiv let72 let65)
  let let244 := (binrel% GT.gt let243 let1)
  let let245 := (binrel% HAdd.hAdd let140 let138)
  let let246 := (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let145 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 let245)))))
  let let247 := (Not let14)
  let let248 := (Not let247)
  let let249 := (binrel% HDiv.hDiv let2 let12)
  let let250 := (Neg.neg let249)
  let let251 := (binrel% HMul.hMul let193 let249)
  let let252 := (Eq let251 let250)
  let let253 := (Int.ofNat 40124000000)
  let let254 := (binrel% HMul.hMul let253 x4)
  let let255 := (binrel% HAdd.hAdd let254 (binrel% HMul.hMul (Int.ofNat 320992000000000) x5))
  let let256 := (Rat.ofInt 40124000000)
  let let257 := (binrel% HMul.hMul let256 let20)
  let let258 := (Int.ofNat 9959)
  let let259 := (binrel% HDiv.hDiv let258 (Int.ofNat 1204020930))
  let let260 := (Neg.neg let259)
  let let261 := (binrel% LT.lt let260 let1)
  let let262 := (binrel% GE.ge let6 let121)
  let let263 := (binrel% GT.gt let259 let1)
  let let264 := (Int.ofNat 10031)
  let let265 := (binrel% HDiv.hDiv (Int.ofNat 19990) let264)
  let let266 := (binrel% GT.gt let265 let1)
  let let267 := (binrel% HDiv.hDiv let2 let49)
  let let268 := (binrel% HDiv.hDiv let117 let189)
  let let269 := (Int.ofNat 96000000000000)
  let let270 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 32000000000) x5) (binrel% HMul.hMul let269 x6))
  let let271 := (Rat.ofInt 32000000000)
  let let272 := (binrel% HMul.hMul let271 let13)
  let let273 := (binrel% HAdd.hAdd (binrel% HMul.hMul let259 x1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv let258 let264)) x2))
  let let274 := (binrel% HMul.hMul let259 let74)
  let let275 := (binrel% HMul.hMul let115 x1)
  let let276 := (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let119 let275))
  let let277 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let236 let241))
  let let278 := (Rat.ofInt 16000000)
  let let279 := (binrel% GT.gt let278 let1)
  let let280 := (Rat.ofInt 400000)
  let let281 := (binrel% HDiv.hDiv let117 let280)
  let let282 := (binrel% HMul.hMul let256 let121)
  let let283 := (Rat.ofInt 3209920000000000)
  let let284 := (binrel% HMul.hMul let283 let121)
  let let285 := (Neg.neg (Rat.ofInt 4814880000000000))
  let let286 := (binrel% HMul.hMul let285 let121)
  let let287 := (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let286 (binrel% HAdd.hAdd let284 let282)))
  let let288 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let213 (binrel% HAdd.hAdd let212 let287)))
  let let289 := (binrel% HMul.hMul let256 let27)
  let let290 := (binrel% HMul.hMul let283 let13)
  let let291 := (binrel% HMul.hMul let285 let6)
  let let292 := (binrel% HMul.hMul let180 let42)
  let let293 := (binrel% HAdd.hAdd let292 (binrel% HAdd.hAdd let291 (binrel% HAdd.hAdd let290 let289)))
  let let294 := (binrel% HMul.hMul let117 let59)
  let let295 := (binrel% HAdd.hAdd let294 (binrel% HAdd.hAdd let222 (binrel% HAdd.hAdd let221 let293)))
  let let296 := (binrel% GE.ge let295 let288)
  let let297 := (Not let296)
  let let298 := (binrel% LT.lt let295 let288)
  let let299 := (Int.ofNat 19190400000000000000)
  let let300 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 9595200000000000)) x5) (binrel% HMul.hMul (Neg.neg let299) x6))
  let let301 := (binrel% HAdd.hAdd let53 (binrel% HMul.hMul (Neg.neg let152) x4))
  let let302 := (Int.ofNat 2)
  let let303 := (Neg.neg (binrel% HDiv.hDiv let2 let302))
  let let304 := (binrel% LT.lt let303 let1)
  let let305 := (Neg.neg (binrel% HDiv.hDiv let258 (Int.ofNat 120404501041860)))
  let let306 := (binrel% HMul.hMul let260 let81)
  let let307 := (binrel% HDiv.hDiv let2 let26)
  let let308 := (binrel% HMul.hMul let193 let307)
  let let309 := (binrel% HDiv.hDiv let193 let201)
  let let310 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 6396800000000000) x5) (binrel% HMul.hMul let299 x6))
  let let311 := (binrel% HMul.hMul let158 let42)
  let let312 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let305 let148))
  let let313 := (binrel% HMul.hMul let154 let74)
  let let314 := (binrel% LE.le let121 let305)
  let let315 := (Rat.ofInt 80000000)
  let let316 := (binrel% GT.gt let315 let1)
  let let317 := (binrel% GE.ge let51 let121)
  let let318 := (Not let317)
  let let319 := (binrel% LT.lt let51 let121)
  let let320 := (binrel% HMul.hMul let136 let121)
  let let321 := (binrel% HDiv.hDiv let117 (Rat.ofInt 800000))
  let let322 := (binrel% LE.le let51 let121)
  let let323 := (binrel% GT.gt let204 let1)
  let let324 := (binrel% HMul.hMul let117 let20)
  let let325 := (binrel% HMul.hMul let152 x4)
  let let326 := (binrel% HAdd.hAdd let325 (binrel% HMul.hMul (Int.ofNat 639680000000000) x5))
  let let327 := (binrel% HMul.hMul let204 let20)
  let let328 := (Not let78)
  let let329 := (Not let328)
  let let330 := (Int.ofNat 3838080000000000000)
  let let331 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1919040000000000)) x5) (binrel% HMul.hMul (Neg.neg let330) x6))
  let let332 := (Neg.neg (Rat.ofInt 1919040000000000))
  let let333 := (binrel% HMul.hMul let332 let6)
  let let334 := (Not let52)
  let let335 := (Not let334)
  let let336 := (binrel% HAdd.hAdd let44 (binrel% HMul.hMul (Int.ofNat 16000000000) x5))
  let let337 := (binrel% HMul.hMul let280 let27)
  let let338 := (Not let46)
  let let339 := (Not let338)
  let let340 := (binrel% HMul.hMul let278 let121)
  let let341 := (binrel% HMul.hMul let237 let121)
  let let342 := (binrel% HMul.hMul let271 let121)
  let let343 := (binrel% HMul.hMul let280 let121)
  let let344 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let343 (binrel% HAdd.hAdd let342 let341))))
  let let345 := (binrel% HMul.hMul let237 let6)
  let let346 := (binrel% HMul.hMul let193 let42)
  let let347 := (binrel% HMul.hMul let117 let34)
  let let348 := (binrel% HAdd.hAdd let347 (binrel% HAdd.hAdd let346 (binrel% HAdd.hAdd let337 (binrel% HAdd.hAdd let272 let345))))
  let let349 := (binrel% GE.ge let348 let344)
  let let350 := (Not let349)
  let let351 := (binrel% LT.lt let348 let344)
  let let352 := (binrel% LE.le let121 let178)
  let let353 := (Neg.neg (binrel% HDiv.hDiv let114 let65))
  let let354 := (binrel% LT.lt let353 let1)
  let let355 := (binrel% GE.ge let121 let236)
  let let356 := (binrel% HDiv.hDiv let2 (Int.ofNat 399800))
  let let357 := (binrel% GT.gt let356 let1)
  let let358 := (binrel% HMul.hMul let243 let121)
  let let359 := (Neg.neg (binrel% HDiv.hDiv let114 let235))
  let let360 := (binrel% HMul.hMul let353 let86)
  let let361 := (binrel% HDiv.hDiv let2 let19)
  let let362 := (binrel% HMul.hMul let193 let361)
  let let363 := (Rat.ofInt 8000)
  let let364 := (binrel% HDiv.hDiv let193 let363)
  let let365 := (binrel% GE.ge let34 let121)
  let let366 := (binrel% HAdd.hAdd let325 (binrel% HMul.hMul (Int.ofNat 3198400000000000) x5))
  let let367 := (binrel% HAdd.hAdd let301 (binrel% HAdd.hAdd let300 (binrel% HAdd.hAdd let310 let366)))
  let let368 := (binrel% HMul.hMul let184 x1)
  let let369 := (binrel% HAdd.hAdd let368 let54)
  let let370 := (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let222 (binrel% HAdd.hAdd let369 let367)))
  let let371 := (Not let84)
  let let372 := (Not let371)
  let let373 := (binrel% GT.gt let117 let1)
  let let374 := (binrel% LE.le let74 let121)
  let let375 := (binrel% HAdd.hAdd let254 (binrel% HMul.hMul (Int.ofNat 1604960000000000) x5))
  let let376 := (Not let35)
  let let377 := (Not let376)
  let let378 := (Neg.neg let192)
  let let379 := (binrel% HMul.hMul let378 x5)
  let let380 := (Eq x6 let379)
  let let381 := (binrel% HDiv.hDiv let117 (Rat.ofInt 100002))
  let let382 := (binrel% HMul.hMul let193 x1)
  let let383 := (binrel% GE.ge let74 let121)
  let let384 := (Not let383)
  let let385 := (binrel% LT.lt let74 let121)
  let let386 := (binrel% LE.le x1 let81)
  let let387 := (binrel% LE.le let121 let182)
  let let388 := (binrel% HMul.hMul let315 let121)
  let let389 := (binrel% HMul.hMul let193 let86)
  let let390 := (Neg.neg (binrel% HDiv.hDiv let2 (Int.ofNat 1919519760000000000000)))
  let let391 := (binrel% HMul.hMul let139 let86)
  let let392 := (binrel% HDiv.hDiv let2 let72)
  let let393 := (binrel% HMul.hMul let392 x1)
  let let394 := (Eq x2 let393)
  let let395 := (binrel% LT.lt let193 let1)
  let let396 := (Not let82)
  let let397 := (Not let396)
  let let398 := (binrel% HMul.hMul let303 x3)
  let let399 := (binrel% HAdd.hAdd (binrel% HMul.hMul let356 x2) let398)
  let let400 := (binrel% HMul.hMul let356 let51)
  let let401 := (binrel% HDiv.hDiv let2 let58)
  let let402 := (binrel% HMul.hMul let401 x2)
  let let403 := (Eq x3 let402)
  let let404 := (Int.ofNat 9629760000000000000)
  let let405 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3209920000000000) x5) (binrel% HMul.hMul let404 x6))
  let let406 := (Not let39)
  let let407 := (Not let406)
  let let408 := (Neg.neg let361)
  let let409 := (Eq let362 let408)
  let let410 := (Not let196)
  let let411 := (binrel% LT.lt let42 let121)
  let let412 := (binrel% LE.le let27 let121)
  let let413 := (binrel% HMul.hMul let278 x6)
  let let414 := (binrel% HDiv.hDiv let2 (Int.ofNat 47987994000))
  let let415 := (Neg.neg let414)
  let let416 := (binrel% LT.lt let415 let1)
  let let417 := (Neg.neg (Rat.ofInt 962976000000000))
  let let418 := (binrel% LT.lt let417 let1)
  let let419 := (Not let322)
  let let420 := (binrel% GT.gt let51 let121)
  let let421 := (binrel% HMul.hMul let193 let74)
  let let422 := (Not True)
  let let423 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let173 let149))))
  let let424 := (Rat.ofInt 1279360000000000)
  let let425 := (binrel% GT.gt let424 let1)
  let let426 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 let359))
  let let427 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let239 let240)))
  let let428 := (Int.ofNat 19200000000000)
  let let429 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 9600000000)) x5) (binrel% HMul.hMul (Neg.neg let428) x6))
  let let430 := (Neg.neg (Rat.ofInt 9600000000))
  let let431 := (binrel% HMul.hMul let430 let6)
  let let432 := (binrel% LT.lt let208 let1)
  let let433 := (binrel% LT.lt let139 let1)
  let let434 := (binrel% HAdd.hAdd (binrel% HMul.hMul let243 x1) let73)
  let let435 := (binrel% HMul.hMul let243 let66)
  let let436 := (binrel% HMul.hMul let193 let81)
  let let437 := (binrel% HAdd.hAdd (binrel% HMul.hMul let265 x2) let50)
  let let438 := (binrel% HMul.hMul let260 x1)
  let let439 := (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let438 (binrel% HAdd.hAdd let273 let437)))
  let let440 := (Neg.neg let307)
  let let441 := (binrel% HMul.hMul let440 x4)
  let let442 := (Eq x5 let441)
  let let443 := (binrel% GT.gt let142 let1)
  let let444 := (binrel% HMul.hMul let142 let121)
  let let445 := (binrel% HMul.hMul let117 let81)
  let let446 := (binrel% HDiv.hDiv let193 (Rat.ofInt 3000))
  let let447 := (binrel% GT.gt let256 let1)
  let let448 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4814880000000000)) x5) (binrel% HMul.hMul (Neg.neg let404) x6))
  let let449 := (binrel% HAdd.hAdd let61 (binrel% HMul.hMul (Neg.neg let253) x4))
  let let450 := (binrel% LE.le let121 let359)
  let let451 := (binrel% HMul.hMul let117 x1)
  let let452 := (Eq let194 let378)
  let let453 := (binrel% HMul.hMul let424 let121)
  let let454 := (binrel% HMul.hMul let332 let121)
  let let455 := (binrel% HMul.hMul let392 let121)
  let let456 := (Neg.neg let392)
  let let457 := (binrel% HMul.hMul let456 let86)
  let let458 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let457 (binrel% HAdd.hAdd let455 (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd let205 (binrel% HAdd.hAdd let454 let453))))))
  let let459 := (binrel% HMul.hMul let424 let13)
  let let460 := (binrel% HMul.hMul let392 let74)
  let let461 := (binrel% HMul.hMul let456 x1)
  let let462 := (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let461 (binrel% HAdd.hAdd let460 (binrel% HAdd.hAdd let219 (binrel% HAdd.hAdd let327 (binrel% HAdd.hAdd let333 let459))))))
  let let463 := (binrel% GE.ge let462 let458)
  let let464 := (Not let463)
  let let465 := (binrel% LT.lt let462 let458)
  let let466 := (Eq x4 let160)
  let let467 := (binrel% HAdd.hAdd let445 let436)
  let let468 := (binrel% HAdd.hAdd let451 let382)
  let let469 := (binrel% GE.ge let468 let467)
  let let470 := (Not let469)
  let let471 := (binrel% LT.lt let468 let467)
  let let472 := (Eq x4 let144)
  let let473 := (binrel% HAdd.hAdd let393 let54)
  let let474 := (binrel% HAdd.hAdd let449 (binrel% HAdd.hAdd let448 (binrel% HAdd.hAdd let405 let375)))
  let let475 := (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let222 (binrel% HAdd.hAdd let369 let474)))
  let let476 := (binrel% HMul.hMul let267 x2)
  let let477 := (Eq x3 let476)
  let let478 := (binrel% HAdd.hAdd let81 let83)
  let let479 := (binrel% HMul.hMul let117 let74)
  let let480 := (binrel% HAdd.hAdd x1 let69)
  let let481 := (binrel% HDiv.hDiv let117 let180)
  let let482 := (binrel% HMul.hMul let250 x5)
  let let483 := (Eq x6 let482)
  let let484 := (binrel% HDiv.hDiv let117 (Rat.ofInt 10003))
  let let485 := (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let473 (binrel% HAdd.hAdd let461 let367)))
  let let486 := (binrel% GT.gt let154 let1)
  let let487 := (binrel% HMul.hMul let408 x4)
  let let488 := (Eq x5 let487)
  let let489 := (binrel% LT.lt x1 let81)
  let let490 := (binrel% GE.ge let121 let239)
  let let491 := (binrel% HDiv.hDiv let117 (Rat.ofInt 100000))
  let let492 := (binrel% LE.le let34 let121)
  let let493 := (Eq let308 let440)
  let let494 := (binrel% GT.gt let137 let1)
  let let495 := (Not let75)
  let let496 := (Not let495)
  let let497 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1279360000000000) x5) (binrel% HMul.hMul let330 x6))
  let let498 := (binrel% HAdd.hAdd let20 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let169 (binrel% HAdd.hAdd let168 (binrel% HAdd.hAdd let145 let245)))))
  let let499 := (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let461 (binrel% HAdd.hAdd let473 (binrel% HAdd.hAdd let301 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let331 let497))))))
  let let500 := (binrel% GT.gt let280 let1)
  let let501 := (binrel% HMul.hMul let265 let59)
  let let502 := (binrel% LE.le let59 let121)
  let let503 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 48000000000)) x5) (binrel% HMul.hMul (Neg.neg let269) x6))
  let let504 := (binrel% HAdd.hAdd let479 let421)
  let let505 := (binrel% GE.ge let504 let229)
  let let506 := (Not let505)
  let let507 := (binrel% LT.lt let504 let229)
  let let508 := (Eq x2 let368)
  let let509 := (Not let7)
  let let510 := (Not let509)
  let let511 := (Not let386)
  let let512 := (binrel% GT.gt x1 let81)
  let let513 := (binrel% GT.gt let283 let1)
  let let514 := (binrel% HMul.hMul let117 let42)
  let let515 := (binrel% HAdd.hAdd let514 let346)
  let let516 := (binrel% GE.ge let515 let229)
  let let517 := (Not let516)
  let let518 := (binrel% LT.lt let515 let229)
  let let519 := (Neg.neg let363)
  let let520 := (binrel% HMul.hMul let519 let6)
  let let521 := (Rat.ofInt 641984000000000)
  let let522 := (binrel% HMul.hMul let521 let121)
  let let523 := (Not let374)
  let let524 := (binrel% GT.gt let74 let121)
  let let525 := (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let473 (binrel% HAdd.hAdd let461 let474)))
  let let526 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let455 (binrel% HAdd.hAdd let457 let287)))
  let let527 := (binrel% HAdd.hAdd let294 (binrel% HAdd.hAdd let460 (binrel% HAdd.hAdd let461 let293)))
  let let528 := (binrel% GE.ge let527 let526)
  let let529 := (Not let528)
  let let530 := (binrel% LT.lt let527 let526)
  let let531 := (binrel% HDiv.hDiv let2 (Int.ofNat 1000))
  let let532 := (Neg.neg let531)
  let let533 := (binrel% LT.lt let532 let1)
  let let534 := (binrel% LT.lt let456 let1)
  let let535 := (binrel% LE.le let121 let123)
  let let536 := (binrel% GT.gt let392 let1)
  let let537 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let455 (binrel% HAdd.hAdd let457 let211)))
  let let538 := (binrel% HAdd.hAdd let223 (binrel% HAdd.hAdd let460 (binrel% HAdd.hAdd let461 let220)))
  let let539 := (binrel% GE.ge let538 let537)
  let let540 := (Not let539)
  let let541 := (binrel% LT.lt let538 let537)
  let let542 := (Not let43)
  let let543 := (Not let542)
  let let544 := (binrel% HMul.hMul let519 let121)
  let let545 := (binrel% HAdd.hAdd let42 let45)
  let let546 := (binrel% HMul.hMul let417 let121)
  let let547 := (binrel% GT.gt let414 let1)
  let let548 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd let145 let141)))
  let let549 := (Not let56)
  let let550 := (Not let549)
  let let551 := (Not let191)
  let let552 := (binrel% GT.gt let42 let121)
  let let553 := (binrel% LE.le x6 let121)
  let let554 := (binrel% GE.ge let121 let121)
  let let555 := (binrel% HAdd.hAdd let44 (binrel% HMul.hMul (Int.ofNat 3200000000) x5))
  let let556 := (binrel% HMul.hMul let280 let20)
  let let557 := (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let336 (binrel% HAdd.hAdd let270 let503))))
  let let558 := (binrel% GT.gt let271 let1)
  let let559 := (binrel% LT.lt let285 let1)
  let let560 := (Not let492)
  let let561 := (binrel% GT.gt let34 let121)
  let let562 := (Eq let561 let560)
  let let563 := (binrel% HMul.hMul let117 x6)
  let let564 := (binrel% HMul.hMul let430 let121)
  let let565 := (binrel% HMul.hMul let532 let121)
  let let566 := (binrel% HAdd.hAdd (binrel% HMul.hMul let532 x5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 3)) x6))
  let let567 := (binrel% HMul.hMul let532 let13)
  let let568 := (Rat.ofInt 6400000000)
  let let569 := (binrel% HMul.hMul let568 let121)
  let let570 := (binrel% GT.gt let206 let1)
  let let571 := (binrel% GT.gt let521 let1)
  let let572 := (binrel% HMul.hMul let531 let121)
  let let573 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 6400000000) x5) (binrel% HMul.hMul let428 x6))
  let let574 := (binrel% HAdd.hAdd let34 (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let573 (binrel% HAdd.hAdd let429 let555))))
  let let575 := (binrel% HMul.hMul let568 let13)
  let let576 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let569 (binrel% HAdd.hAdd let564 let343))))
  let let577 := (binrel% HAdd.hAdd let347 (binrel% HAdd.hAdd let346 (binrel% HAdd.hAdd let575 (binrel% HAdd.hAdd let431 let556))))
  let let578 := (binrel% GE.ge let577 let576)
  let let579 := (Not let578)
  let let580 := (binrel% LT.lt let577 let576)
  let let581 := (binrel% LE.le let20 let121)
  let let582 := (binrel% LT.lt let430 let1)
  let let583 := (binrel% GT.gt let531 let1)
  let let584 := (binrel% GT.gt let568 let1)
  let let585 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let239 let148)))))
  let let586 := (binrel% HAdd.hAdd let51 let55)
  let let587 := (Int.ofNat 1925952000000000000)
  let let588 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 641984000000000) x5) (binrel% HMul.hMul let587 x6))
  let let589 := (binrel% HMul.hMul let521 let13)
  let let590 := (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 962976000000000)) x5) (binrel% HMul.hMul (Neg.neg let587) x6))
  let let591 := (binrel% HMul.hMul let417 let6)
  let let592 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let181 (binrel% HAdd.hAdd let282 (binrel% HAdd.hAdd let455 (binrel% HAdd.hAdd let457 (binrel% HAdd.hAdd let546 let522))))))
  let let593 := (binrel% HAdd.hAdd let294 (binrel% HAdd.hAdd let292 (binrel% HAdd.hAdd let257 (binrel% HAdd.hAdd let460 (binrel% HAdd.hAdd let461 (binrel% HAdd.hAdd let591 let589))))))
  let let594 := (binrel% GE.ge let593 let592)
  let let595 := (Not let594)
  let let596 := (binrel% LT.lt let593 let592)
  let let597 := (binrel% GT.gt let180 let1)
  let let598 := (binrel% HMul.hMul let265 let121)
  let let599 := (binrel% HMul.hMul let415 let81)
  let let600 := (binrel% HMul.hMul let259 let121)
  let let601 := (binrel% HMul.hMul let356 let121)
  let let602 := (binrel% LT.lt let332 let1)
  let let603 := (binrel% HAdd.hAdd (binrel% HMul.hMul let531 x5) (binrel% HMul.hMul let302 x6))
  let let604 := (binrel% HAdd.hAdd let603 (binrel% HAdd.hAdd let566 x6))
  let let605 := (binrel% HMul.hMul let531 let6)
  let let606 := (binrel% HAdd.hAdd let572 (binrel% HAdd.hAdd let565 let214))
  let let607 := (binrel% HAdd.hAdd let605 (binrel% HAdd.hAdd let567 let563))
  let let608 := (binrel% GE.ge let607 let606)
  let let609 := (Not let608)
  let let610 := (binrel% LT.lt let607 let606)
  let let611 := (Not let262)
  let let612 := (binrel% LT.lt let6 let121)
  let let613 := (binrel% LE.le let121 let390)
  let let614 := (binrel% HMul.hMul let353 x1)
  let let615 := (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let434 let614))
  let let616 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let390 let149))))
  let let617 := (binrel% HMul.hMul let202 let121)
  let let618 := (binrel% HMul.hMul let137 let121)
  let let619 := (binrel% HMul.hMul let315 x6)
  let let620 := (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let449 (binrel% HAdd.hAdd let255 (binrel% HAdd.hAdd let473 (binrel% HAdd.hAdd let461 (binrel% HAdd.hAdd let590 let588))))))
  let let621 := (binrel% HMul.hMul let137 let74)
  let let622 := (binrel% HMul.hMul let142 let34)
  let let623 := (binrel% HDiv.hDiv let117 (Rat.ofInt 120030))
  let let624 := (binrel% HMul.hMul let193 let34)
  let let625 := (binrel% HAdd.hAdd let347 let624)
  let let626 := (binrel% GE.ge let625 let229)
  let let627 := (Not let626)
  let let628 := (binrel% LT.lt let625 let229)
  let let629 := (binrel% HMul.hMul let136 let51)
  let let630 := (binrel% HMul.hMul let117 let27)
  let let631 := (binrel% LT.lt let202 let1)
  let let632 := (binrel% GT.gt let136 let1)
  let let633 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let390 let121))))))
  let let634 := (binrel% LT.lt let519 let1)
  let let635 := (Not let365)
  let let636 := (binrel% LT.lt let34 let121)
  let let637 := (binrel% HMul.hMul let303 let121)
  let let638 := (binrel% HMul.hMul let414 let121)
  let let639 := (binrel% HAdd.hAdd let398 let44)
  let let640 := (binrel% HAdd.hAdd (binrel% HMul.hMul let414 x1) (binrel% HMul.hMul (Neg.neg let356) x2))
  let let641 := (binrel% HMul.hMul let415 x1)
  let let642 := (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let399 (binrel% HAdd.hAdd let641 (binrel% HAdd.hAdd let640 let639))))
  let let643 := (binrel% HMul.hMul let303 let34)
  let let644 := (binrel% HMul.hMul let414 let74)
  let let645 := (binrel% HMul.hMul let195 x5)
  let let646 := (Eq x6 let645)
  let let647 := (binrel% HMul.hMul let446 x5)
  let let648 := (Eq x6 let647)
  let let649 := (Or let648 let646)
  let let650 := (binrel% HMul.hMul let364 x4)
  let let651 := (Eq x5 let650)
  let let652 := (binrel% HMul.hMul let309 x4)
  let let653 := (Eq x5 let652)
  let let654 := (Or let653 let651)
  let let655 := (binrel% HMul.hMul let321 x3)
  let let656 := (Eq x4 let655)
  let let657 := (binrel% HMul.hMul let281 x3)
  let let658 := (Eq x4 let657)
  let let659 := (Or let658 let656)
  let let660 := (binrel% HMul.hMul let268 x2)
  let let661 := (Eq x3 let660)
  let let662 := (binrel% HMul.hMul let481 x2)
  let let663 := (Eq x3 let662)
  let let664 := (Or let663 let661)
  let let665 := (binrel% HMul.hMul let484 x1)
  let let666 := (Eq x2 let665)
  let let667 := (binrel% HMul.hMul let623 x1)
  let let668 := (Eq x2 let667)
  let let669 := (Or let668 let666)
  let let670 := (Eq x1 let381)
  let let671 := (Eq x1 let491)
  let let672 := (Or let671 let670)
  let let673 := (And let672 (And let669 (And let664 (And let659 (And let654 (And let649 let553))))))
  let let674 := (Not let90)
  let let675 := (Not let87)
  let let676 := (Or let82 let84)
  let let677 := (Or let397 let372)
  let let678 := (binrel% LT.lt let382 let436)
  let let679 := (And let395 let512)
  let let680 := (binrel% LT.lt let451 let445)
  let let681 := (And let373 let489)
  let let682 := (Not let85)
  let let683 := (Not let79)
  let let684 := (Or let78 let75)
  let let685 := (Or let329 let496)
  let let686 := (binrel% LT.lt let421 let228)
  let let687 := (And let395 let524)
  let let688 := (binrel% LT.lt let479 let214)
  let let689 := (And let373 let385)
  let let690 := (Not let70)
  let let691 := (Or let495 let690)
  let let692 := (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let358 let360))
  let let693 := (binrel% HAdd.hAdd let421 (binrel% HAdd.hAdd let435 let614))
  let let694 := (binrel% LE.le let693 let692)
  let let695 := (binrel% LE.le let614 let360)
  let let696 := (And let354 let87)
  let let697 := (binrel% LE.le let435 let358)
  let let698 := (And let244 let126)
  let let699 := (Eq let70 let126)
  let let700 := (binrel% LE.le let421 let228)
  let let701 := (And let395 let383)
  let let702 := (Eq let75 let383)
  let let703 := (Not let71)
  let let704 := (Or let396 let328)
  let let705 := (Not let57)
  let let706 := (Or let56 let52)
  let let707 := (Or let550 let335)
  let let708 := (binrel% LT.lt let230 let228)
  let let709 := (And let395 let420)
  let let710 := (binrel% LT.lt let223 let214)
  let let711 := (And let373 let319)
  let let712 := (Eq let334 let319)
  let let713 := (Not let63)
  let let714 := (Not let62)
  let let715 := (binrel% HAdd.hAdd let228 (binrel% HAdd.hAdd let306 (binrel% HAdd.hAdd let600 let598)))
  let let716 := (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let438 (binrel% HAdd.hAdd let274 let501)))
  let let717 := (binrel% LE.le let716 let715)
  let let718 := (binrel% LE.le let501 let598)
  let let719 := (And let266 let502)
  let let720 := (Eq let62 let502)
  let let721 := (binrel% LE.le let274 let600)
  let let722 := (And let263 let374)
  let let723 := (Eq let78 let374)
  let let724 := (binrel% LE.le let438 let306)
  let let725 := (And let261 let82)
  let let726 := (binrel% LE.le let230 let228)
  let let727 := (And let395 let317)
  let let728 := (Or let549 let406)
  let let729 := (Or let675 let328)
  let let730 := (Not let30)
  let let731 := (Or let14 (Or let675 let730))
  let let732 := (Or let338 let730)
  let let733 := (Or let338 (Or let730 let14))
  let let734 := (Not let17)
  let let735 := (Not let11)
  let let736 := (Or let730 let509)
  let let737 := (Or let338 let736)
  let let738 := (Or let14 (Or let675 (Or let690 let737)))
  let let739 := (Or let549 let737)
  let let740 := (Or let730 let549)
  let let741 := (Or let338 (Or let509 (Or let14 let740)))
  let let742 := (Or let675 (Or let690 let741))
  let let743 := (Or let338 (Or let509 (Or let248 let740)))
  let let744 := (Or let675 (Or let690 let743))
  let let745 := (Eq Or Or)
  let let746 := (Eq let509 let509)
  let let747 := (And let46 (And let7 (And let247 (And let30 let56))))
  let let748 := (Or let549 False)
  let let749 := (Or let338 (Or let509 (Or let248 (Or let730 let748))))
  let let750 := (binrel% LE.le let216 let205)
  let let751 := (And let323 let412)
  let let752 := (Implies let751 let750)
  let let753 := (Eq let30 let412)
  let let754 := (binrel% LT.lt let217 let207)
  let let755 := (And let570 let199)
  let let756 := (Implies let755 let754)
  let let757 := (Eq let247 let199)
  let let758 := (binrel% LE.le let218 let209)
  let let759 := (And let432 let262)
  let let760 := (Implies let759 let758)
  let let761 := (Eq let7 let262)
  let let762 := (binrel% LE.le let219 let210)
  let let763 := (And let190 let191)
  let let764 := (Implies let763 let762)
  let let765 := (Eq let46 let191)
  let let766 := (binrel% LE.le let221 let212)
  let let767 := (And let188 let126)
  let let768 := (Implies let767 let766)
  let let769 := (binrel% LE.le let222 let213)
  let let770 := (And let186 let87)
  let let771 := (Implies let770 let769)
  let let772 := (binrel% LE.le let223 let214)
  let let773 := (And let373 let322)
  let let774 := (Implies let773 let772)
  let let775 := (Eq let56 let322)
  let let776 := (Or let714 let737)
  let let777 := (Or let730 let714)
  let let778 := (Or let338 (Or let509 (Or let14 let777)))
  let let779 := (Or let675 (Or let690 let778))
  let let780 := (Or let338 (Or let509 (Or let248 let777)))
  let let781 := (Or let675 (Or let690 let780))
  let let782 := (And let46 (And let7 (And let247 (And let30 let62))))
  let let783 := (Or let714 False)
  let let784 := (Or let338 (Or let509 (Or let248 (Or let730 let783))))
  let let785 := (binrel% LE.le let289 let282)
  let let786 := (And let447 let412)
  let let787 := (Implies let786 let785)
  let let788 := (binrel% LT.lt let290 let284)
  let let789 := (And let513 let199)
  let let790 := (Implies let789 let788)
  let let791 := (binrel% LE.le let291 let286)
  let let792 := (And let559 let262)
  let let793 := (Implies let792 let791)
  let let794 := (binrel% LE.le let292 let181)
  let let795 := (And let597 let191)
  let let796 := (Implies let795 let794)
  let let797 := (binrel% LE.le let294 let214)
  let let798 := (And let373 let502)
  let let799 := (Implies let798 let797)
  let let800 := (Or let14 (Or let675 (Or let328 let737)))
  let let801 := (Or let328 (Or let675 let778))
  let let802 := (Or let328 (Or let675 let780))
  let let803 := (binrel% LE.le let461 let457)
  let let804 := (And let534 let87)
  let let805 := (Implies let804 let803)
  let let806 := (binrel% LE.le let460 let455)
  let let807 := (And let536 let374)
  let let808 := (Implies let807 let806)
  let let809 := (Or let328 (Or let675 let741))
  let let810 := (Or let328 (Or let675 let743))
  let let811 := (Or let46 (Or let46 let14))
  let let812 := (Not let47)
  let let813 := (Or let46 let43)
  let let814 := (Or let339 let543)
  let let815 := (binrel% LT.lt let346 let228)
  let let816 := (And let395 let552)
  let let817 := (Eq let338 let552)
  let let818 := (binrel% LT.lt let514 let214)
  let let819 := (And let373 let411)
  let let820 := (Or let509 let406)
  let let821 := (Or let542 (Or let730 (Or let14 let820)))
  let let822 := (Or let542 (Or let730 (Or let248 let820)))
  let let823 := (Eq let406 let406)
  let let824 := (Eq let542 let542)
  let let825 := (Or let406 False)
  let let826 := (binrel% LE.le let345 let341)
  let let827 := (And let238 let262)
  let let828 := (binrel% LT.lt let272 let342)
  let let829 := (And let558 let199)
  let let830 := (binrel% LE.le let337 let343)
  let let831 := (And let500 let412)
  let let832 := (binrel% LE.le let346 let228)
  let let833 := (And let395 let196)
  let let834 := (Implies let833 let832)
  let let835 := (Eq let43 let196)
  let let836 := (binrel% LE.le let347 let214)
  let let837 := (And let373 let492)
  let let838 := (Implies let837 let836)
  let let839 := (Eq let39 let492)
  let let840 := (Not let40)
  let let841 := (Not let31)
  let let842 := (Not let25)
  let let843 := (Not let24)
  let let844 := (Or let328 let843)
  let let845 := (Or let675 let844)
  let let846 := (Or let843 let509)
  let let847 := (Or let542 let406)
  let let848 := (Or let843 (Or let509 (Or let14 let847)))
  let let849 := (Or let843 (Or let509 (Or let248 let847)))
  let let850 := (Eq let843 let843)
  let let851 := (Eq let406 let561)
  let let852 := (binrel% LE.le let556 let343)
  let let853 := (And let500 let581)
  let let854 := (Eq let24 let581)
  let let855 := (binrel% LE.le let431 let564)
  let let856 := (And let582 let262)
  let let857 := (binrel% LT.lt let575 let569)
  let let858 := (And let584 let199)
  let let859 := (Or let338 let846)
  let let860 := (Or let14 (Or let675 (Or let328 let859)))
  let let861 := (Or let338 (Or let843 (Or let328 (Or let675 (Or let509 (Or let14 let714))))))
  let let862 := (Or let338 (Or let843 (Or let328 (Or let675 (Or let509 (Or let248 let714))))))
  let let863 := (binrel% LT.lt let589 let522)
  let let864 := (And let571 let199)
  let let865 := (binrel% LE.le let591 let546)
  let let866 := (And let418 let262)
  let let867 := (binrel% LE.le let257 let282)
  let let868 := (And let447 let581)
  let let869 := (Or let675 (Or let328 (Or let338 (Or let843 (Or let509 (Or let14 let549))))))
  let let870 := (Or let675 (Or let328 (Or let338 (Or let843 (Or let509 (Or let248 let549))))))
  let let871 := (binrel% LT.lt let459 let453)
  let let872 := (And let425 let199)
  let let873 := (binrel% LE.le let333 let454)
  let let874 := (And let602 let262)
  let let875 := (binrel% LE.le let327 let205)
  let let876 := (And let323 let581)
  let let877 := (Not let4)
  let let878 := (Or let247 (Or let877 let7))
  let let879 := (Or let247 (Or let877 let510))
  let let880 := (binrel% LE.le let563 let214)
  let let881 := (And let373 let553)
  let let882 := (Eq let4 let553)
  let let883 := (binrel% LE.le let567 let565)
  let let884 := (And let533 let197)
  let let885 := (binrel% LT.lt let605 let572)
  let let886 := (And let583 let612)
  let let887 := (Or let328 (Or let549 (Or let406 let509)))
  let let888 := (Or let675 let887)
  let let889 := (Or let509 let877)
  let let890 := (Or let730 let889)
  let let891 := (Or let328 (Or let549 (Or let406 let890)))
  let let892 := (Or let328 (Or let509 (Or let877 let730)))
  let let893 := (And let78 (And let7 (And let4 let30)))
  let let894 := (Or let328 (Or let509 (Or let877 (Or let730 False))))
  let let895 := (binrel% HAdd.hAdd let617 let388)
  let let896 := (binrel% HAdd.hAdd let618 let895)
  let let897 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let320 (binrel% HAdd.hAdd let444 (binrel% HAdd.hAdd let391 let896))))
  let let898 := (binrel% HAdd.hAdd let203 let619)
  let let899 := (binrel% HAdd.hAdd let140 (binrel% HAdd.hAdd let621 let898))
  let let900 := (binrel% HAdd.hAdd let630 (binrel% HAdd.hAdd let629 (binrel% HAdd.hAdd let622 let899)))
  let let901 := (binrel% LE.le let900 let897)
  let let902 := (binrel% LE.le let619 let388)
  let let903 := (And let316 let553)
  let let904 := (Implies let903 let902)
  let let905 := (binrel% LE.le let203 let617)
  let let906 := (And let631 let262)
  let let907 := (Implies let906 let905)
  let let908 := (binrel% LE.le let621 let618)
  let let909 := (And let494 let374)
  let let910 := (Implies let909 let908)
  let let911 := (binrel% LE.le let140 let391)
  let let912 := (And let433 let87)
  let let913 := (Implies let912 let911)
  let let914 := (binrel% LE.le let622 let444)
  let let915 := (And let443 let492)
  let let916 := (Implies let915 let914)
  let let917 := (binrel% LE.le let629 let320)
  let let918 := (And let632 let322)
  let let919 := (Implies let918 let917)
  let let920 := (binrel% LE.le let630 let214)
  let let921 := (And let373 let412)
  let let922 := (Implies let921 let920)
  let let923 := (Or let843 let889)
  let let924 := (Or let328 (Or let549 (Or let406 let923)))
  let let925 := (And let78 let24)
  let let926 := (Or let328 (Or let843 False))
  let let927 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let320 (binrel% HAdd.hAdd let340 (binrel% HAdd.hAdd let544 (binrel% HAdd.hAdd let444 (binrel% HAdd.hAdd let391 let618))))))
  let let928 := (binrel% HAdd.hAdd let140 let621)
  let let929 := (binrel% HAdd.hAdd let324 (binrel% HAdd.hAdd let629 (binrel% HAdd.hAdd let413 (binrel% HAdd.hAdd let520 (binrel% HAdd.hAdd let622 let928)))))
  let let930 := (binrel% LE.le let929 let927)
  let let931 := (binrel% LE.le let520 let544)
  let let932 := (And let634 let262)
  let let933 := (Implies let932 let931)
  let let934 := (binrel% LE.le let413 let340)
  let let935 := (And let279 let553)
  let let936 := (Implies let935 let934)
  let let937 := (binrel% LE.le let324 let214)
  let let938 := (And let373 let581)
  let let939 := (Implies let938 let937)
  let let940 := (Or let39 let35)
  let let941 := (Or let407 let377)
  let let942 := (binrel% LT.lt let624 let228)
  let let943 := (And let395 let561)
  let let944 := (binrel% LT.lt let347 let214)
  let let945 := (And let373 let636)
  let let946 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let601 (binrel% HAdd.hAdd let599 (binrel% HAdd.hAdd let638 let637))))
  let let947 := (binrel% HAdd.hAdd let514 (binrel% HAdd.hAdd let400 (binrel% HAdd.hAdd let641 (binrel% HAdd.hAdd let644 let643))))
  let let948 := (binrel% LE.le let947 let946)
  let let949 := (binrel% LE.le let643 let637)
  let let950 := (And let304 let365)
  let let951 := (binrel% LE.le let644 let638)
  let let952 := (And let547 let374)
  let let953 := (binrel% LE.le let641 let599)
  let let954 := (And let416 let82)
  let let955 := (binrel% LE.le let400 let601)
  let let956 := (And let357 let322)
  let let957 := (binrel% LE.le let514 let214)
  let let958 := (And let373 let191)
  let let959 := (binrel% HAdd.hAdd let445 let389)
  let let960 := (binrel% LE.le let468 let959)
  let let961 := (binrel% LE.le let382 let389)
  let let962 := (And let395 let87)
  let let963 := (binrel% LE.le let451 let445)
  let let964 := (And let373 let386)
  let let965 := (Or let509 let328)
  let let966 := (Or let338 let509)
  let let967 := (Or let328 (Or let549 let966))
  let let968 := (Or let549 (Or let877 (Or let509 (Or let396 let844))))
  let let969 := (And let56 (And let4 (And let7 (And let82 let925))))
  let let970 := (Or let549 (Or let877 (Or let509 (Or let396 let926))))
  let let971 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let340 (binrel% HAdd.hAdd let544 (binrel% HAdd.hAdd let174 let175))))))
  let let972 := (binrel% HAdd.hAdd let324 (binrel% HAdd.hAdd let311 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let413 (binrel% HAdd.hAdd let520 (binrel% HAdd.hAdd let157 let313))))))
  let let973 := (binrel% LE.le let972 let971)
  let let974 := (binrel% LE.le let313 let175)
  let let975 := (And let486 let374)
  let let976 := (Implies let975 let974)
  let let977 := (binrel% LE.le let157 let174)
  let let978 := (And let165 let82)
  let let979 := (Implies let978 let977)
  let let980 := (binrel% LE.le let166 let172)
  let let981 := (And let164 let322)
  let let982 := (Implies let981 let980)
  let let983 := (binrel% LE.le let311 let171)
  let let984 := (And let163 let191)
  let let985 := (Implies let984 let983)
  let let986 := (Or let549 (Or let396 let892))
  let let987 := (And let56 (And let82 let893))
  let let988 := (Or let549 (Or let396 let894))
  let let989 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let172 (binrel% HAdd.hAdd let174 (binrel% HAdd.hAdd let175 let895)))))
  let let990 := (binrel% HAdd.hAdd let630 (binrel% HAdd.hAdd let311 (binrel% HAdd.hAdd let166 (binrel% HAdd.hAdd let157 (binrel% HAdd.hAdd let313 let898)))))
  let let991 := (binrel% LE.le let990 let989)
  let let992 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let444 (binrel% HAdd.hAdd let320 (binrel% HAdd.hAdd let147 let896))))
  let let993 := (binrel% HAdd.hAdd let630 (binrel% HAdd.hAdd let622 (binrel% HAdd.hAdd let629 let899)))
  let let994 := (binrel% LE.le let993 let992)
  let let995 := (binrel% LE.le let140 let147)
  let let996 := (And let433 let82)
  let let997 := (Implies let996 let995)
  let let998 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let444 (binrel% HAdd.hAdd let320 (binrel% HAdd.hAdd let340 (binrel% HAdd.hAdd let544 (binrel% HAdd.hAdd let147 let618))))))
  let let999 := (binrel% HAdd.hAdd let324 (binrel% HAdd.hAdd let622 (binrel% HAdd.hAdd let629 (binrel% HAdd.hAdd let413 (binrel% HAdd.hAdd let520 let928)))))
  let let1000 := (binrel% LE.le let999 let998)
  let let1001 := (binrel% HAdd.hAdd let214 (binrel% HAdd.hAdd let122 let124))
  let let1002 := (binrel% HAdd.hAdd let118 (binrel% HAdd.hAdd let120 let275))
  let let1003 := (binrel% LE.le let1002 let1001)
  let let1004 := (binrel% LE.le let275 let124)
  let let1005 := (And let116 let82)
  let let1006 := (binrel% LE.le let120 let122)
  let let1007 := (And let113 let383)
  let let1008 := (binrel% LE.le let118 let214)
  let let1009 := (And let373 let126)
fun lean_h0 : (Eq let111 let92) => -- PREPROCESS
fun lean_r1 : (Eq let113 True) => -- EVALUATE
fun lean_r2 : (Eq let116 True) => -- EVALUATE
fun lean_r3 : (Eq let118 let66) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let120 let119) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let122 let121) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let124 let123) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let125 let123) => -- THEORY_REWRITE_ARITH
fun lean_r8 : let129 => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let131 let130) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let146 let121) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let147 let130) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let150 let130) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let151 False) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let162 let121) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let163 True) => -- EVALUATE
fun lean_r16 : (Eq let164 True) => -- EVALUATE
fun lean_r17 : (Eq let165 True) => -- EVALUATE
fun lean_r18 : (Eq let166 let159) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let170 let121) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let171 let121) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let172 let121) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let174 let173) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let175 let121) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let176 let173) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let177 False) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let179 let178) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let181 let121) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let183 let182) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let186 True) => -- EVALUATE
fun lean_r30 : (Eq let187 let121) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let188 True) => -- EVALUATE
fun lean_r32 : (Eq let190 True) => -- EVALUATE
fun lean_r33 : (Eq let191 let46) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let195 let194) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let196 let43) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let199 let198) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let200 let121) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let197 let14) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let203 let134) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let227 let226) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let234 let233) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let213 let236) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let238 True) => -- EVALUATE
fun lean_r44 : (Eq let242 let239) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let212 let121) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let210 let121) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let244 True) => -- EVALUATE
fun lean_r48 : (Eq let246 let121) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let248 let14) => -- THEORY_REWRITE_BOOL
fun lean_r50 : let252 => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let257 let255) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let261 True) => -- EVALUATE
fun lean_r53 : (Eq let262 let7) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let263 True) => -- EVALUATE
fun lean_r55 : (Eq let266 True) => -- EVALUATE
fun lean_r56 : (Eq let268 let267) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let272 let270) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let274 let273) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let276 let121) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let277 let236) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let279 True) => -- EVALUATE
fun lean_r62 : (Eq let281 let158) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let298 let297) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let218 let300) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let219 let301) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let304 True) => -- EVALUATE
fun lean_r67 : (Eq let306 let305) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let286 let121) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let309 let308) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let294 let59) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let217 let310) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let311 let161) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let312 let305) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let313 let155) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let314 False) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let316 True) => -- EVALUATE
fun lean_r77 : (Eq let319 let318) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let320 let121) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let321 let142) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let322 let56) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let323 True) => -- EVALUATE
fun lean_r82 : (Eq let324 let20) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let223 let51) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let327 let326) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let230 let55) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let329 let78) => -- THEORY_REWRITE_BOOL
fun lean_r87 : (Eq let333 let331) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let335 let52) => -- THEORY_REWRITE_BOOL
fun lean_r89 : (Eq let205 let121) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let337 let336) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let339 let46) => -- THEORY_REWRITE_BOOL
fun lean_r92 : (Eq let126 let70) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let209 let121) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let340 let121) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let351 let350) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let352 False) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let354 True) => -- EVALUATE
fun lean_r98 : (Eq let355 True) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let357 True) => -- EVALUATE
fun lean_r100 : (Eq let358 let121) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let360 let359) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let364 let362) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let365 let35) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let370 let121) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let372 let84) => -- THEORY_REWRITE_BOOL
fun lean_r106 : (Eq let373 True) => -- EVALUATE
fun lean_r107 : (Eq let282 let121) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let374 let78) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let289 let375) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let377 let35) => -- THEORY_REWRITE_BOOL
fun lean_r111 : (Eq let380 let93) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let381 let81) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let382 let69) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let385 let384) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let386 let84) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let207 let121) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let387 False) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq let193 let193) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let388 let121) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let389 let88) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let391 let390) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let394 let106) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let395 True) => -- EVALUATE
fun lean_r124 : (Eq let397 let82) => -- THEORY_REWRITE_BOOL
fun lean_r125 : (Eq let400 let399) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let284 let121) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let403 let103) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let290 let405) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let407 let39) => -- THEORY_REWRITE_BOOL
fun lean_r130 : let409 => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq let411 let410) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let412 let30) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let413 let169) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let416 True) => -- EVALUATE
fun lean_r135 : (Eq let418 True) => -- EVALUATE
fun lean_r136 : (Eq let420 let419) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let148 let121) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let421 let77) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let422 False) => -- THEORY_REWRITE_BOOL
fun lean_r140 : (Eq let423 let173) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let425 True) => -- EVALUATE
fun lean_r142 : (Eq let426 let359) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let427 let239) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let431 let429) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq let432 True) => -- EVALUATE
fun lean_r146 : (Eq let433 True) => -- EVALUATE
fun lean_r147 : (Eq let435 let434) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq let436 let83) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let439 let121) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let442 let97) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let443 True) => -- EVALUATE
fun lean_r152 : (Eq let317 let52) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq let444 let121) => -- THEORY_REWRITE_ARITH
fun lean_r154 : (Eq let445 let81) => -- THEORY_REWRITE_ARITH
fun lean_r155 : (Eq let446 let251) => -- THEORY_REWRITE_ARITH
fun lean_r156 : (Eq let447 True) => -- EVALUATE
fun lean_r157 : (Eq let291 let448) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq let216 let366) => -- THEORY_REWRITE_ARITH
fun lean_r159 : (Eq let292 let449) => -- THEORY_REWRITE_ARITH
fun lean_r160 : (Eq let450 False) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq let451 x1) => -- THEORY_REWRITE_ARITH
fun lean_r162 : let452 => -- THEORY_REWRITE_ARITH
fun lean_r163 : (Eq let465 let464) => -- THEORY_REWRITE_ARITH
fun lean_r164 : (Eq let466 let100) => -- THEORY_REWRITE_ARITH
fun lean_r165 : (Eq let471 let470) => -- THEORY_REWRITE_ARITH
fun lean_r166 : (Eq let221 let369) => -- THEORY_REWRITE_ARITH
fun lean_r167 : (Eq let472 let99) => -- THEORY_REWRITE_ARITH
fun lean_r168 : (Eq let460 let473) => -- THEORY_REWRITE_ARITH
fun lean_r169 : (Eq let475 let121) => -- THEORY_REWRITE_ARITH
fun lean_r170 : (Eq let477 let102) => -- THEORY_REWRITE_ARITH
fun lean_r171 : (Eq let478 let121) => -- THEORY_REWRITE_ARITH
fun lean_r172 : (Eq let228 let121) => -- THEORY_REWRITE_ARITH
fun lean_r173 : (Eq let479 let74) => -- THEORY_REWRITE_ARITH
fun lean_r174 : (Eq let480 let121) => -- THEORY_REWRITE_ARITH
fun lean_r175 : (Eq let481 let401) => -- THEORY_REWRITE_ARITH
fun lean_r176 : (Eq let483 let94) => -- THEORY_REWRITE_ARITH
fun lean_r177 : (Eq let484 let184) => -- THEORY_REWRITE_ARITH
fun lean_r178 : (Eq let485 let121) => -- THEORY_REWRITE_ARITH
fun lean_r179 : (Eq let486 True) => -- EVALUATE
fun lean_r180 : (Eq let488 let96) => -- THEORY_REWRITE_ARITH
fun lean_r181 : (Eq let489 let396) => -- THEORY_REWRITE_ARITH
fun lean_r182 : (Eq let490 True) => -- THEORY_REWRITE_ARITH
fun lean_r183 : (Eq let491 let86) => -- THEORY_REWRITE_ARITH
fun lean_r184 : (Eq let492 let39) => -- THEORY_REWRITE_ARITH
fun lean_r185 : let493 => -- THEORY_REWRITE_ARITH
fun lean_r186 : (Eq let341 let121) => -- THEORY_REWRITE_ARITH
fun lean_r187 : (Eq let494 True) => -- EVALUATE
fun lean_r188 : (Eq let496 let75) => -- THEORY_REWRITE_BOOL
fun lean_r189 : (Eq let459 let497) => -- THEORY_REWRITE_ARITH
fun lean_r190 : (Eq let498 let121) => -- THEORY_REWRITE_ARITH
fun lean_r191 : (Eq let499 let121) => -- THEORY_REWRITE_ARITH
fun lean_r192 : (Eq let500 True) => -- EVALUATE
fun lean_r193 : (Eq let501 let437) => -- THEORY_REWRITE_ARITH
fun lean_r194 : (Eq let214 let121) => -- THEORY_REWRITE_ARITH
fun lean_r195 : (Eq let502 let62) => -- THEORY_REWRITE_ARITH
fun lean_r196 : (Eq let345 let503) => -- THEORY_REWRITE_ARITH
fun lean_r197 : (Eq let507 let506) => -- THEORY_REWRITE_ARITH
fun lean_r198 : (Eq let508 let105) => -- THEORY_REWRITE_ARITH
fun lean_r199 : (Eq let510 let7) => -- THEORY_REWRITE_BOOL
fun lean_r200 : (Eq let512 let511) => -- THEORY_REWRITE_ARITH
fun lean_r201 : (Eq let383 let75) => -- THEORY_REWRITE_ARITH
fun lean_r202 : (Eq let513 True) => -- EVALUATE
fun lean_r203 : (Eq let518 let517) => -- THEORY_REWRITE_ARITH
fun lean_r204 : (Eq let520 let168) => -- THEORY_REWRITE_ARITH
fun lean_r205 : (Eq let522 let121) => -- THEORY_REWRITE_ARITH
fun lean_r206 : (Eq let524 let523) => -- THEORY_REWRITE_ARITH
fun lean_r207 : (Eq let457 let239) => -- THEORY_REWRITE_ARITH
fun lean_r208 : (Eq let455 let121) => -- THEORY_REWRITE_ARITH
fun lean_r209 : (Eq let525 let121) => -- THEORY_REWRITE_ARITH
fun lean_r210 : (Eq let342 let121) => -- THEORY_REWRITE_ARITH
fun lean_r211 : (Eq let530 let529) => -- THEORY_REWRITE_ARITH
fun lean_r212 : (Eq let533 True) => -- EVALUATE
fun lean_r213 : (Eq let534 True) => -- EVALUATE
fun lean_r214 : (Eq let535 False) => -- THEORY_REWRITE_ARITH
fun lean_r215 : (Eq let536 True) => -- EVALUATE
fun lean_r216 : (Eq let541 let540) => -- THEORY_REWRITE_ARITH
fun lean_r217 : (Eq let543 let43) => -- THEORY_REWRITE_BOOL
fun lean_r218 : (Eq let347 let34) => -- THEORY_REWRITE_ARITH
fun lean_r219 : (Eq let544 let121) => -- THEORY_REWRITE_ARITH
fun lean_r220 : (Eq let545 let121) => -- THEORY_REWRITE_ARITH
fun lean_r221 : (Eq let546 let121) => -- THEORY_REWRITE_ARITH
fun lean_r222 : (Eq let346 let45) => -- THEORY_REWRITE_ARITH
fun lean_r223 : (Eq let547 True) => -- EVALUATE
fun lean_r224 : (Eq let548 let121) => -- THEORY_REWRITE_ARITH
fun lean_r225 : (Eq let514 let42) => -- THEORY_REWRITE_ARITH
fun lean_r226 : (Eq let550 let56) => -- THEORY_REWRITE_BOOL
fun lean_r227 : (Eq let552 let551) => -- THEORY_REWRITE_ARITH
fun lean_r228 : (Eq let553 let4) => -- THEORY_REWRITE_ARITH
fun lean_r229 : (Eq let241 let121) => -- THEORY_REWRITE_ARITH
fun lean_r230 : (Eq let343 let121) => -- THEORY_REWRITE_ARITH
fun lean_r231 : (Eq let554 True) => -- THEORY_REWRITE_ARITH
fun lean_r232 : (Eq let556 let555) => -- THEORY_REWRITE_ARITH
fun lean_r233 : (Eq let557 let121) => -- THEORY_REWRITE_ARITH
fun lean_r234 : (Eq let558 True) => -- EVALUATE
fun lean_r235 : (Eq let559 True) => -- EVALUATE
fun lean_r236 : let562 => -- THEORY_REWRITE_ARITH
fun lean_r237 : (Eq let563 x6) => -- THEORY_REWRITE_ARITH
fun lean_r238 : (Eq let564 let121) => -- THEORY_REWRITE_ARITH
fun lean_r239 : (Eq let565 let121) => -- THEORY_REWRITE_ARITH
fun lean_r240 : (Eq let567 let566) => -- THEORY_REWRITE_ARITH
fun lean_r241 : (Eq let569 let121) => -- THEORY_REWRITE_ARITH
fun lean_r242 : (Eq let570 True) => -- EVALUATE
fun lean_r243 : (Eq let571 True) => -- EVALUATE
fun lean_r244 : (Eq let572 let121) => -- THEORY_REWRITE_ARITH
fun lean_r245 : (Eq let574 let121) => -- THEORY_REWRITE_ARITH
fun lean_r246 : (Eq let575 let573) => -- THEORY_REWRITE_ARITH
fun lean_r247 : (Eq let580 let579) => -- THEORY_REWRITE_ARITH
fun lean_r248 : (Eq let581 let24) => -- THEORY_REWRITE_ARITH
fun lean_r249 : (Eq let582 True) => -- EVALUATE
fun lean_r250 : (Eq let583 True) => -- EVALUATE
fun lean_r251 : (Eq let584 True) => -- EVALUATE
fun lean_r252 : (Eq let585 let239) => -- THEORY_REWRITE_ARITH
fun lean_r253 : (Eq let586 let121) => -- THEORY_REWRITE_ARITH
fun lean_r254 : (Eq let589 let588) => -- THEORY_REWRITE_ARITH
fun lean_r255 : (Eq let591 let590) => -- THEORY_REWRITE_ARITH
fun lean_r256 : (Eq let596 let595) => -- THEORY_REWRITE_ARITH
fun lean_r257 : (Eq let597 True) => -- EVALUATE
fun lean_r258 : (Eq let149 let121) => -- THEORY_REWRITE_ARITH
fun lean_r259 : (Eq let598 let121) => -- THEORY_REWRITE_ARITH
fun lean_r260 : (Eq let453 let121) => -- THEORY_REWRITE_ARITH
fun lean_r261 : (Eq let599 let182) => -- THEORY_REWRITE_ARITH
fun lean_r262 : (Eq let600 let121) => -- THEORY_REWRITE_ARITH
fun lean_r263 : (Eq let454 let121) => -- THEORY_REWRITE_ARITH
fun lean_r264 : (Eq let601 let121) => -- THEORY_REWRITE_ARITH
fun lean_r265 : (Eq let602 True) => -- EVALUATE
fun lean_r266 : (Eq let604 let121) => -- THEORY_REWRITE_ARITH
fun lean_r267 : (Eq let605 let603) => -- THEORY_REWRITE_ARITH
fun lean_r268 : (Eq let610 let609) => -- THEORY_REWRITE_ARITH
fun lean_r269 : (Eq let612 let611) => -- THEORY_REWRITE_ARITH
fun lean_r270 : (Eq let613 False) => -- THEORY_REWRITE_ARITH
fun lean_r271 : (Eq let615 let121) => -- THEORY_REWRITE_ARITH
fun lean_r272 : (Eq let616 let390) => -- THEORY_REWRITE_ARITH
fun lean_r273 : (Eq let617 let121) => -- THEORY_REWRITE_ARITH
fun lean_r274 : (Eq let618 let121) => -- THEORY_REWRITE_ARITH
fun lean_r275 : (Eq let619 let133) => -- THEORY_REWRITE_ARITH
fun lean_r276 : (Eq let620 let121) => -- THEORY_REWRITE_ARITH
fun lean_r277 : (Eq let621 let138) => -- THEORY_REWRITE_ARITH
fun lean_r278 : (Eq let622 let145) => -- THEORY_REWRITE_ARITH
fun lean_r279 : (Eq let623 let392) => -- THEORY_REWRITE_ARITH
fun lean_r280 : (Eq let628 let627) => -- THEORY_REWRITE_ARITH
fun lean_r281 : (Eq let629 let143) => -- THEORY_REWRITE_ARITH
fun lean_r282 : (Eq let630 let27) => -- THEORY_REWRITE_ARITH
fun lean_r283 : (Eq let631 True) => -- EVALUATE
fun lean_r284 : (Eq let632 True) => -- EVALUATE
fun lean_r285 : (Eq let633 let390) => -- THEORY_REWRITE_ARITH
fun lean_r286 : (Eq let634 True) => -- EVALUATE
fun lean_r287 : (Eq let624 let38) => -- THEORY_REWRITE_ARITH
fun lean_r288 : (Eq let636 let635) => -- THEORY_REWRITE_ARITH
fun lean_r289 : (Eq let637 let121) => -- THEORY_REWRITE_ARITH
fun lean_r290 : (Eq let638 let121) => -- THEORY_REWRITE_ARITH
fun lean_r291 : (Eq let642 let121) => -- THEORY_REWRITE_ARITH
fun lean_r292 : (Eq let643 let639) => -- THEORY_REWRITE_ARITH
fun lean_r293 : (Eq let644 let640) => -- THEORY_REWRITE_ARITH
fun lean_a294 : let673 => by
have lean_s0 : (Or let396 (Or let495 (Or let690 False))) :=
  (scope (fun lean_a295 : let82 =>
    (scope (fun lean_a296 : let75 =>
      (scope (fun lean_a297 : let70 =>
        have lean_s0 : let699 := by timed Eq.symm lean_r92
        have lean_s1 : let126 := by timed eqResolve lean_a297 lean_s0
        have lean_s2 : (Or let127 False) :=
          (scope (fun lean_a298 : let126 =>
            have lean_s2 : let373 := by timed trueElim lean_r106
            have lean_s3 : let1009 := by timed And.intro lean_s2 lean_a298
            have lean_s4 : (Implies let1009 let1008) := by arithMulPos [let66, let121, let117], 1
            have lean_s5 : let1008 := by timed modusPonens lean_s3 lean_s4
            have lean_s6 : let113 := by timed trueElim lean_r1
            have lean_s7 : let702 := by timed Eq.symm lean_r201
            have lean_s8 : let383 := by timed eqResolve lean_a296 lean_s7
            have lean_s9 : let1007 := by timed And.intro lean_s6 lean_s8
            have lean_s10 : (Implies let1007 let1006) := by arithMulNeg [let74, let121, let112], 3
            have lean_s11 : let1006 := by timed modusPonens lean_s9 lean_s10
            have lean_s12 : let116 := by timed trueElim lean_r2
            have lean_s13 : let1005 := by timed And.intro lean_s12 lean_a295
            have lean_s14 : (Implies let1005 let1004) := by arithMulNeg [x1, let81, let115], 3
            have lean_s15 : let1004 := by timed modusPonens lean_s13 lean_s14
            have lean_s16 : let1003 := by sumBounds [lean_s5, lean_s11, lean_s15]
            have lean_s17 : (Eq let275 let275) := by timed rfl
            let lean_s18 := by timed congrHAdd lean_r4 lean_s17
            have lean_s19 : (Eq let1002 let276) := by timed congrHAdd lean_r3 lean_s18
            have lean_s20 : (Eq let1002 let121) := by timed Eq.trans lean_s19 lean_r59
            let lean_s21 := by timed flipCongrArg lean_s20 [LE.le]
            let lean_s22 := by timed congrHAdd lean_r5 lean_r6
            have lean_s23 : (Eq let1001 let125) := by timed congrHAdd lean_r194 lean_s22
            have lean_s24 : (Eq let1001 let123) := by timed Eq.trans lean_s23 lean_r7
            have lean_s25 : (Eq let1003 let535) := by timed congr lean_s21 lean_s24
            have lean_s26 : (Eq let1003 False) := by timed Eq.trans lean_s25 lean_r214
            show False from by timed eqResolve lean_s16 lean_s26
          ))
        have lean_s3 : let127 := by liftOrNToNeg lean_s2
        have lean_s4 : (Eq let127 let690) := by timed flipCongrArg lean_r92 [Not]
        have lean_s5 : (Eq let128 let690) := by timed Eq.trans lean_r8 lean_s4
        have lean_s6 : (Eq let690 let128) := by timed Eq.symm lean_s5
        have lean_s7 : (Eq let127 let128) := by timed Eq.trans lean_s4 lean_s6
        have lean_s8 : let128 := by timed eqResolve lean_s3 lean_s7
        have lean_s9 : (Eq let690 let127) := by timed Eq.symm lean_s4
        have lean_s10 : let129 := by timed Eq.trans lean_s5 lean_s9
        have lean_s11 : let127 := by timed eqResolve lean_s8 lean_s10
        show False from by timed contradiction lean_s1 lean_s11
  ))))))
have lean_s1 : (Not (And let82 (And let75 let70))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or let396 let691) := by timed flipNotAnd lean_s1 [let82, let75, let70]
have lean_s3 : (Or let703 let70) := by timed @cnfAndPos [let70, let67] 0
have lean_s4 : (Or let70 let703) := by permutateOr lean_s3, [1, 0], (- 1)
have lean_s5 : (Eq And And) := by timed rfl
have lean_s6 : (Eq x1 x1) := by timed rfl
let lean_s7 := by timed flipCongrArg lean_s6 [Eq]
have lean_s8 : (Eq let671 let109) := by timed congr lean_s7 lean_r183
let lean_s9 := by timed flipCongrArg lean_s8 [Or]
let lean_s10 := by timed flipCongrArg lean_s6 [Eq]
have lean_s11 : (Eq let670 let108) := by timed congr lean_s10 lean_r112
have lean_s12 : (Eq let672 let110) := by timed congr lean_s9 lean_s11
let lean_s13 := by timed congr lean_s5 lean_s12
have lean_s14 : (Eq x2 x2) := by timed rfl
let lean_s15 := by timed flipCongrArg lean_s14 [Eq]
let lean_s16 := by timed flipCongrArg lean_r279 [HMul.hMul]
have lean_s17 : (Eq let667 let393) := by timed congr lean_s16 lean_s6
have lean_s18 : (Eq let668 let394) := by timed congr lean_s15 lean_s17
have lean_s19 : (Eq let668 let106) := by timed Eq.trans lean_s18 lean_r122
let lean_s20 := by timed flipCongrArg lean_s19 [Or]
let lean_s21 := by timed flipCongrArg lean_s14 [Eq]
let lean_s22 := by timed flipCongrArg lean_r177 [HMul.hMul]
have lean_s23 : (Eq let665 let368) := by timed congr lean_s22 lean_s6
have lean_s24 : (Eq let666 let508) := by timed congr lean_s21 lean_s23
have lean_s25 : (Eq let666 let105) := by timed Eq.trans lean_s24 lean_r198
have lean_s26 : (Eq let669 let107) := by timed congr lean_s20 lean_s25
let lean_s27 := by timed congr lean_s5 lean_s26
have lean_s28 : (Eq x3 x3) := by timed rfl
let lean_s29 := by timed flipCongrArg lean_s28 [Eq]
let lean_s30 := by timed flipCongrArg lean_r175 [HMul.hMul]
have lean_s31 : (Eq let662 let402) := by timed congr lean_s30 lean_s14
have lean_s32 : (Eq let663 let403) := by timed congr lean_s29 lean_s31
have lean_s33 : (Eq let663 let103) := by timed Eq.trans lean_s32 lean_r127
let lean_s34 := by timed flipCongrArg lean_s33 [Or]
let lean_s35 := by timed flipCongrArg lean_s28 [Eq]
let lean_s36 := by timed flipCongrArg lean_r56 [HMul.hMul]
have lean_s37 : (Eq let660 let476) := by timed congr lean_s36 lean_s14
have lean_s38 : (Eq let661 let477) := by timed congr lean_s35 lean_s37
have lean_s39 : (Eq let661 let102) := by timed Eq.trans lean_s38 lean_r170
have lean_s40 : (Eq let664 let104) := by timed congr lean_s34 lean_s39
let lean_s41 := by timed congr lean_s5 lean_s40
have lean_s42 : (Eq x4 x4) := by timed rfl
let lean_s43 := by timed flipCongrArg lean_s42 [Eq]
let lean_s44 := by timed flipCongrArg lean_r62 [HMul.hMul]
have lean_s45 : (Eq let657 let160) := by timed congr lean_s44 lean_s28
have lean_s46 : (Eq let658 let466) := by timed congr lean_s43 lean_s45
have lean_s47 : (Eq let658 let100) := by timed Eq.trans lean_s46 lean_r164
let lean_s48 := by timed flipCongrArg lean_s47 [Or]
let lean_s49 := by timed flipCongrArg lean_s42 [Eq]
let lean_s50 := by timed flipCongrArg lean_r79 [HMul.hMul]
have lean_s51 : (Eq let655 let144) := by timed congr lean_s50 lean_s28
have lean_s52 : (Eq let656 let472) := by timed congr lean_s49 lean_s51
have lean_s53 : (Eq let656 let99) := by timed Eq.trans lean_s52 lean_r167
have lean_s54 : (Eq let659 let101) := by timed congr lean_s48 lean_s53
let lean_s55 := by timed congr lean_s5 lean_s54
have lean_s56 : (Eq x5 x5) := by timed rfl
let lean_s57 := by timed flipCongrArg lean_s56 [Eq]
let lean_s58 := by timed flipCongrArg lean_r118 [HMul.hMul]
have lean_s59 : (Eq let307 let307) := by timed rfl
have lean_s60 : (Eq let308 let308) := by timed congr lean_s58 lean_s59
have lean_s61 : let493 := by timed Eq.trans lean_s60 lean_r185
have lean_s62 : (Eq let309 let440) := by timed Eq.trans lean_r69 lean_s61
let lean_s63 := by timed flipCongrArg lean_s62 [HMul.hMul]
have lean_s64 : (Eq let652 let441) := by timed congr lean_s63 lean_s42
have lean_s65 : (Eq let653 let442) := by timed congr lean_s57 lean_s64
have lean_s66 : (Eq let653 let97) := by timed Eq.trans lean_s65 lean_r150
let lean_s67 := by timed flipCongrArg lean_s66 [Or]
let lean_s68 := by timed flipCongrArg lean_s56 [Eq]
let lean_s69 := by timed flipCongrArg lean_r118 [HMul.hMul]
have lean_s70 : (Eq let361 let361) := by timed rfl
have lean_s71 : (Eq let362 let362) := by timed congr lean_s69 lean_s70
have lean_s72 : let409 := by timed Eq.trans lean_s71 lean_r130
have lean_s73 : (Eq let364 let408) := by timed Eq.trans lean_r102 lean_s72
let lean_s74 := by timed flipCongrArg lean_s73 [HMul.hMul]
have lean_s75 : (Eq let650 let487) := by timed congr lean_s74 lean_s42
have lean_s76 : (Eq let651 let488) := by timed congr lean_s68 lean_s75
have lean_s77 : (Eq let651 let96) := by timed Eq.trans lean_s76 lean_r180
have lean_s78 : (Eq let654 let98) := by timed congr lean_s67 lean_s77
let lean_s79 := by timed congr lean_s5 lean_s78
have lean_s80 : (Eq x6 x6) := by timed rfl
let lean_s81 := by timed flipCongrArg lean_s80 [Eq]
let lean_s82 := by timed flipCongrArg lean_r118 [HMul.hMul]
have lean_s83 : (Eq let249 let249) := by timed rfl
have lean_s84 : (Eq let251 let251) := by timed congr lean_s82 lean_s83
have lean_s85 : let252 := by timed Eq.trans lean_s84 lean_r50
have lean_s86 : (Eq let446 let250) := by timed Eq.trans lean_r155 lean_s85
let lean_s87 := by timed flipCongrArg lean_s86 [HMul.hMul]
have lean_s88 : (Eq let647 let482) := by timed congr lean_s87 lean_s56
have lean_s89 : (Eq let648 let483) := by timed congr lean_s81 lean_s88
have lean_s90 : (Eq let648 let94) := by timed Eq.trans lean_s89 lean_r176
let lean_s91 := by timed flipCongrArg lean_s90 [Or]
let lean_s92 := by timed flipCongrArg lean_s80 [Eq]
let lean_s93 := by timed flipCongrArg lean_r118 [HMul.hMul]
have lean_s94 : (Eq let192 let192) := by timed rfl
have lean_s95 : (Eq let194 let194) := by timed congr lean_s93 lean_s94
have lean_s96 : let452 := by timed Eq.trans lean_s95 lean_r162
have lean_s97 : (Eq let195 let378) := by timed Eq.trans lean_r34 lean_s96
let lean_s98 := by timed flipCongrArg lean_s97 [HMul.hMul]
have lean_s99 : (Eq let645 let379) := by timed congr lean_s98 lean_s56
have lean_s100 : (Eq let646 let380) := by timed congr lean_s92 lean_s99
have lean_s101 : (Eq let646 let93) := by timed Eq.trans lean_s100 lean_r111
have lean_s102 : (Eq let649 let95) := by timed congr lean_s91 lean_s101
let lean_s103 := by timed congr lean_s5 lean_s102
let lean_s104 := by timed congr lean_s103 lean_r228
let lean_s105 := by timed congr lean_s79 lean_s104
let lean_s106 := by timed congr lean_s55 lean_s105
let lean_s107 := by timed congr lean_s41 lean_s106
let lean_s108 := by timed congr lean_s27 lean_s107
have lean_s109 : (Eq let673 let111) := by timed congr lean_s13 lean_s108
have lean_s110 : (Eq let673 let92) := by timed Eq.trans lean_s109 lean_h0
have lean_s111 : let92 := by timed eqResolve lean_a294 lean_s110
have lean_s112 : let80 := by andElim lean_s111, 1
have lean_s113 : (Or let71 let79) := by permutateOr lean_s112, [1, 0], (- 1)
have lean_s114 : (Or let683 let78) := by timed @cnfAndPos [let78, let75] 0
have lean_s115 : (Or let78 let683) := by permutateOr lean_s114, [1, 0], (- 1)
have lean_s116 : let32 := by andElim lean_s111, 4
have lean_s117 : (Or let25 let31) := by permutateOr lean_s116, [1, 0], (- 1)
have lean_s118 : (Or let842 let24) := by timed @cnfAndPos [let24, let21] 0
have lean_s119 : (Or let24 let842) := by permutateOr lean_s118, [1, 0], (- 1)
let lean_s120 := by R1 lean_s117, lean_s119, let25, [(- 1), (- 1)]
have lean_s121 : (Or let841 let30) := by timed @cnfAndPos [let30, let28] 0
have lean_s122 : (Or let30 let841) := by permutateOr lean_s121, [1, 0], (- 1)
let lean_s123 := by R1 lean_s120, lean_s122, let31, [(- 1), (- 1)]
have lean_s124 : (Or let406 let970) :=
  (scope (fun lean_a299 : let39 =>
    (scope (fun lean_a300 : let56 =>
      (scope (fun lean_a301 : let4 =>
        (scope (fun lean_a302 : let7 =>
          (scope (fun lean_a303 : let82 =>
            (scope (fun lean_a304 : let78 =>
              (scope (fun lean_a305 : let24 =>
                have lean_s124 : let373 := by timed trueElim lean_r106
                have lean_s125 : let854 := by timed Eq.symm lean_r248
                have lean_s126 : let581 := by timed eqResolve lean_a305 lean_s125
                have lean_s127 : let938 := by timed And.intro lean_s124 lean_s126
                have lean_s128 : let939 := by arithMulPos [let20, let121, let117], 1
                have lean_s129 : let937 := by timed modusPonens lean_s127 lean_s128
                have lean_s130 : let443 := by timed trueElim lean_r151
                have lean_s131 : let839 := by timed Eq.symm lean_r184
                have lean_s132 : let492 := by timed eqResolve lean_a299 lean_s131
                have lean_s133 : let915 := by timed And.intro lean_s130 lean_s132
                have lean_s134 : let916 := by arithMulPos [let34, let121, let142], 1
                have lean_s135 : let914 := by timed modusPonens lean_s133 lean_s134
                have lean_s136 : let632 := by timed trueElim lean_r284
                have lean_s137 : let775 := by timed Eq.symm lean_r80
                have lean_s138 : let322 := by timed eqResolve lean_a300 lean_s137
                have lean_s139 : let918 := by timed And.intro lean_s136 lean_s138
                have lean_s140 : let919 := by arithMulPos [let51, let121, let136], 1
                have lean_s141 : let917 := by timed modusPonens lean_s139 lean_s140
                have lean_s142 : let279 := by timed trueElim lean_r61
                have lean_s143 : let111 := by timed eqResolve lean_a294 lean_s109
                have lean_s144 : let4 := by andElim lean_s143, 6
                have lean_s145 : let882 := by timed Eq.symm lean_r228
                have lean_s146 : let553 := by timed eqResolve lean_s144 lean_s145
                have lean_s147 : let935 := by timed And.intro lean_s142 lean_s146
                have lean_s148 : let936 := by arithMulPos [x6, let121, let278], 1
                have lean_s149 : let934 := by timed modusPonens lean_s147 lean_s148
                have lean_s150 : let634 := by timed trueElim lean_r286
                have lean_s151 : let761 := by timed Eq.symm lean_r53
                have lean_s152 : let262 := by timed eqResolve lean_a302 lean_s151
                have lean_s153 : let932 := by timed And.intro lean_s150 lean_s152
                have lean_s154 : let933 := by arithMulNeg [let6, let121, let519], 3
                have lean_s155 : let931 := by timed modusPonens lean_s153 lean_s154
                have lean_s156 : let433 := by timed trueElim lean_r146
                have lean_s157 : let996 := by timed And.intro lean_s156 lean_a303
                have lean_s158 : let997 := by arithMulNeg [x1, let81, let139], 3
                have lean_s159 : let995 := by timed modusPonens lean_s157 lean_s158
                have lean_s160 : let494 := by timed trueElim lean_r187
                have lean_s161 : let723 := by timed Eq.symm lean_r108
                have lean_s162 : let374 := by timed eqResolve lean_a304 lean_s161
                have lean_s163 : let909 := by timed And.intro lean_s160 lean_s162
                have lean_s164 : let910 := by arithMulPos [let74, let121, let137], 1
                have lean_s165 : let908 := by timed modusPonens lean_s163 lean_s164
                have lean_s166 : let1000 := by sumBounds [lean_s129, lean_s135, lean_s141, lean_s149, lean_s155, lean_s159, lean_s165]
                have lean_s167 : (Eq let140 let140) := by timed rfl
                let lean_s168 := by timed congrHAdd lean_s167 lean_r277
                let lean_s169 := by timed congrHAdd lean_r204 lean_s168
                let lean_s170 := by timed congrHAdd lean_r133 lean_s169
                let lean_s171 := by timed congrHAdd lean_r281 lean_s170
                let lean_s172 := by timed congrHAdd lean_r278 lean_s171
                have lean_s173 : (Eq let999 let246) := by timed congrHAdd lean_r82 lean_s172
                have lean_s174 : (Eq let999 let121) := by timed Eq.trans lean_s173 lean_r48
                let lean_s175 := by timed flipCongrArg lean_s174 [LE.le]
                let lean_s176 := by timed congrHAdd lean_r11 lean_r274
                let lean_s177 := by timed congrHAdd lean_r219 lean_s176
                let lean_s178 := by timed congrHAdd lean_r94 lean_s177
                let lean_s179 := by timed congrHAdd lean_r78 lean_s178
                let lean_s180 := by timed congrHAdd lean_r153 lean_s179
                have lean_s181 : (Eq let998 let131) := by timed congrHAdd lean_r194 lean_s180
                have lean_s182 : (Eq let998 let130) := by timed Eq.trans lean_s181 lean_r9
                have lean_s183 : (Eq let1000 let151) := by timed congr lean_s175 lean_s182
                have lean_s184 : (Eq let1000 False) := by timed Eq.trans lean_s183 lean_r13
                show False from by timed eqResolve lean_s166 lean_s184
  ))))))))))))))
have lean_s125 : (Not (And let39 let969)) := by liftOrNToNeg lean_s124
have lean_s126 : (Or let406 let968) := by timed flipNotAnd lean_s125 [let39, let56, let4, let7, let82, let78, let24]
have lean_s127 : (Or let396 let924) := by permutateOr lean_s126, [4, 5, 1, 0, 6, 3, 2], (- 1)
let lean_s128 := by R1 lean_s123, lean_s127, let24, [(- 1), (- 1)]
have lean_s129 : (Or let682 let82) := by timed @cnfAndPos [let84, let82] 1
have lean_s130 : (Or let82 let682) := by permutateOr lean_s129, [1, 0], (- 1)
have lean_s131 : let91 := by andElim lean_s111, 0
have lean_s132 : (Or let85 let90) := by permutateOr lean_s131, [1, 0], (- 1)
have lean_s133 : (Or let674 let87) := by timed @cnfAndPos [let89, let87] 1
have lean_s134 : (Or let87 let674) := by permutateOr lean_s133, [1, 0], (- 1)
have lean_s135 : (Or let675 (Or let371 False)) :=
  (scope (fun lean_a305 : let87 =>
    (scope (fun lean_a306 : let84 =>
      have lean_s135 : let373 := by timed trueElim lean_r106
      have lean_s136 : (Eq let84 let386) := by timed Eq.symm lean_r115
      have lean_s137 : let386 := by timed eqResolve lean_a306 lean_s136
      have lean_s138 : let964 := by timed And.intro lean_s135 lean_s137
      have lean_s139 : (Implies let964 let963) := by arithMulPos [x1, let81, let117], 1
      have lean_s140 : let963 := by timed modusPonens lean_s138 lean_s139
      have lean_s141 : let395 := by timed trueElim lean_r123
      have lean_s142 : let962 := by timed And.intro lean_s141 lean_a305
      have lean_s143 : (Implies let962 let961) := by arithMulNeg [x1, let86, let193], 3
      have lean_s144 : let961 := by timed modusPonens lean_s142 lean_s143
      have lean_s145 : let960 := by sumBounds [lean_s140, lean_s144]
      let lean_s146 := by timed flipCongrArg lean_r161 [HAdd.hAdd]
      have lean_s147 : (Eq let468 let480) := by timed congr lean_s146 lean_r113
      have lean_s148 : (Eq let468 let121) := by timed Eq.trans lean_s147 lean_r174
      let lean_s149 := by timed flipCongrArg lean_s148 [LE.le]
      let lean_s150 := by timed flipCongrArg lean_r154 [HAdd.hAdd]
      have lean_s151 : (Eq let959 let179) := by timed congr lean_s150 lean_r120
      have lean_s152 : (Eq let959 let178) := by timed Eq.trans lean_s151 lean_r26
      have lean_s153 : (Eq let960 let352) := by timed congr lean_s149 lean_s152
      have lean_s154 : (Eq let960 False) := by timed Eq.trans lean_s153 lean_r96
      show False from by timed eqResolve lean_s145 lean_s154
  ))))
have lean_s136 : (Not (And let87 let84)) := by liftOrNToNeg lean_s135
have lean_s137 : (Or let675 let371) := by timed flipNotAnd lean_s136 [let87, let84]
have lean_s138 : (Or let376 (Or let328 (Or let396 (Or let549 (Or let338 False))))) :=
  (scope (fun lean_a307 : let35 =>
    (scope (fun lean_a308 : let78 =>
      (scope (fun lean_a309 : let82 =>
        (scope (fun lean_a310 : let56 =>
          (scope (fun lean_a311 : let46 =>
            have lean_s138 : let765 := by timed Eq.symm lean_r33
            have lean_s139 : let191 := by timed eqResolve lean_a311 lean_s138
            have lean_s140 : (Or let551 False) :=
              (scope (fun lean_a309 : let191 =>
                have lean_s140 : let373 := by timed trueElim lean_r106
                have lean_s141 : let958 := by timed And.intro lean_s140 lean_a309
                have lean_s142 : (Implies let958 let957) := by arithMulPos [let42, let121, let117], 1
                have lean_s143 : let957 := by timed modusPonens lean_s141 lean_s142
                have lean_s144 : let357 := by timed trueElim lean_r99
                have lean_s145 : let775 := by timed Eq.symm lean_r80
                have lean_s146 : let322 := by timed eqResolve lean_a310 lean_s145
                have lean_s147 : let956 := by timed And.intro lean_s144 lean_s146
                have lean_s148 : (Implies let956 let955) := by arithMulPos [let51, let121, let356], 1
                have lean_s149 : let955 := by timed modusPonens lean_s147 lean_s148
                have lean_s150 : let416 := by timed trueElim lean_r134
                have lean_s151 : let954 := by timed And.intro lean_s150 lean_a309
                have lean_s152 : (Implies let954 let953) := by arithMulNeg [x1, let81, let415], 3
                have lean_s153 : let953 := by timed modusPonens lean_s151 lean_s152
                have lean_s154 : let547 := by timed trueElim lean_r223
                have lean_s155 : let723 := by timed Eq.symm lean_r108
                have lean_s156 : let374 := by timed eqResolve lean_a308 lean_s155
                have lean_s157 : let952 := by timed And.intro lean_s154 lean_s156
                have lean_s158 : (Implies let952 let951) := by arithMulPos [let74, let121, let414], 1
                have lean_s159 : let951 := by timed modusPonens lean_s157 lean_s158
                have lean_s160 : let304 := by timed trueElim lean_r66
                have lean_s161 : (Eq let35 let365) := by timed Eq.symm lean_r103
                have lean_s162 : let365 := by timed eqResolve lean_a307 lean_s161
                have lean_s163 : let950 := by timed And.intro lean_s160 lean_s162
                have lean_s164 : (Implies let950 let949) := by arithMulNeg [let34, let121, let303], 3
                have lean_s165 : let949 := by timed modusPonens lean_s163 lean_s164
                have lean_s166 : let948 := by sumBounds [lean_s143, lean_s149, lean_s153, lean_s159, lean_s165]
                have lean_s167 : (Eq let641 let641) := by timed rfl
                let lean_s168 := by timed congrHAdd lean_r293 lean_r292
                let lean_s169 := by timed congrHAdd lean_s167 lean_s168
                let lean_s170 := by timed congrHAdd lean_r125 lean_s169
                have lean_s171 : (Eq let947 let642) := by timed congrHAdd lean_r225 lean_s170
                have lean_s172 : (Eq let947 let121) := by timed Eq.trans lean_s171 lean_r291
                let lean_s173 := by timed flipCongrArg lean_s172 [LE.le]
                let lean_s174 := by timed congrHAdd lean_r290 lean_r289
                let lean_s175 := by timed congrHAdd lean_r261 lean_s174
                let lean_s176 := by timed congrHAdd lean_r264 lean_s175
                have lean_s177 : (Eq let946 let183) := by timed congrHAdd lean_r194 lean_s176
                have lean_s178 : (Eq let946 let182) := by timed Eq.trans lean_s177 lean_r28
                have lean_s179 : (Eq let948 let387) := by timed congr lean_s173 lean_s178
                have lean_s180 : (Eq let948 False) := by timed Eq.trans lean_s179 lean_r117
                show False from by timed eqResolve lean_s166 lean_s180
              ))
            have lean_s141 : let551 := by liftOrNToNeg lean_s140
            have lean_s142 : (Eq let551 let338) := by timed flipCongrArg lean_r33 [Not]
            have lean_s143 : (Eq let552 let338) := by timed Eq.trans lean_r227 lean_s142
            have lean_s144 : let817 := by timed Eq.symm lean_s143
            have lean_s145 : (Eq let551 let552) := by timed Eq.trans lean_s142 lean_s144
            have lean_s146 : let552 := by timed eqResolve lean_s141 lean_s145
            have lean_s147 : let551 := by timed eqResolve lean_s146 lean_r227
            show False from by timed contradiction lean_s139 lean_s147
  ))))))))))
have lean_s139 : (Not (And let35 (And let78 (And let82 (And let56 let46))))) := by liftOrNToNeg lean_s138
have lean_s140 : (Or let376 (Or let328 (Or let396 (Or let549 let338)))) := by timed flipNotAnd lean_s139 [let35, let78, let82, let56, let46]
have lean_s141 : (Or let396 (Or let328 (Or let549 (Or let338 let376)))) := by permutateOr lean_s140, [2, 1, 3, 4, 0], (- 1)
have lean_s142 : (Or let812 let46) := by timed @cnfAndPos [let46, let43] 0
have lean_s143 : (Or let46 let812) := by permutateOr lean_s142, [1, 0], (- 1)
let lean_s144 := by R2 lean_s141, lean_s143, let46, [(- 1), (- 1)]
have lean_s145 : let48 := by andElim lean_s111, 3
have lean_s146 : (Or let40 let47) := by permutateOr lean_s145, [1, 0], (- 1)
let lean_s147 := by R2 lean_s144, lean_s146, let47, [(- 1), (- 1)]
have lean_s148 : (Or let407 (Or let377 False)) :=
  (scope (fun lean_a310 : let406 =>
    (scope (fun lean_a311 : let376 =>
      have lean_s148 : let373 := by timed trueElim lean_r106
      have lean_s149 : (Eq let635 let376) := by timed flipCongrArg lean_r103 [Not]
      have lean_s150 : (Eq let636 let376) := by timed Eq.trans lean_r288 lean_s149
      have lean_s151 : (Eq let376 let636) := by timed Eq.symm lean_s150
      have lean_s152 : let636 := by timed eqResolve lean_a311 lean_s151
      have lean_s153 : let945 := by timed And.intro lean_s148 lean_s152
      have lean_s154 : (Implies let945 let944) := by arithMulPos [let34, let121, let117], 0
      have lean_s155 : let944 := by timed modusPonens lean_s153 lean_s154
      have lean_s156 : let395 := by timed trueElim lean_r123
      have lean_s157 : (Eq let560 let406) := by timed flipCongrArg lean_r184 [Not]
      have lean_s158 : (Eq let561 let406) := by timed Eq.trans lean_r236 lean_s157
      have lean_s159 : let851 := by timed Eq.symm lean_s158
      have lean_s160 : let561 := by timed eqResolve lean_a310 lean_s159
      have lean_s161 : let943 := by timed And.intro lean_s156 lean_s160
      have lean_s162 : (Implies let943 let942) := by arithMulNeg [let34, let121, let193], 2
      have lean_s163 : let942 := by timed modusPonens lean_s161 lean_s162
      have lean_s164 : let628 := by sumBounds [lean_s155, lean_s163]
      let lean_s165 := by timed flipCongrArg lean_r218 [HAdd.hAdd]
      have lean_s166 : (Eq let625 let187) := by timed congr lean_s165 lean_r287
      have lean_s167 : (Eq let625 let121) := by timed Eq.trans lean_s166 lean_r30
      let lean_s168 := by timed flipCongrArg lean_s167 [GE.ge]
      let lean_s169 := by timed flipCongrArg lean_r194 [HAdd.hAdd]
      have lean_s170 : (Eq let229 let148) := by timed congr lean_s169 lean_r172
      have lean_s171 : (Eq let229 let121) := by timed Eq.trans lean_s170 lean_r137
      have lean_s172 : (Eq let626 let554) := by timed congr lean_s168 lean_s171
      have lean_s173 : (Eq let626 True) := by timed Eq.trans lean_s172 lean_r231
      have lean_s174 : (Eq let627 let422) := by timed flipCongrArg lean_s173 [Not]
      have lean_s175 : (Eq let627 False) := by timed Eq.trans lean_s174 lean_r139
      have lean_s176 : (Eq let628 False) := by timed Eq.trans lean_r280 lean_s175
      show False from by timed eqResolve lean_s164 lean_s176
  ))))
have lean_s149 : (Not (And let406 let376)) := by liftOrNToNeg lean_s148
have lean_s150 : let941 := by timed flipNotAnd lean_s149 [let406, let376]
let lean_s151 := by timed flipCongrArg lean_r129 [Or]
have lean_s152 : (Eq let941 let940) := by timed congr lean_s151 lean_r110
have lean_s153 : let940 := by timed eqResolve lean_s150 lean_s152
let lean_s154 := by R2 lean_s147, lean_s153, let35, [(- 1), (- 1)]
have lean_s155 : (Or let840 let39) := by timed @cnfAndPos [let39, let35] 0
have lean_s156 : (Or let39 let840) := by permutateOr lean_s155, [1, 0], (- 1)
have lean_s157 : (Or let396 (Or let328 (Or let549 (Or let39 let39)))) := by R1 lean_s154, lean_s156, let40, [(- 1), (- 1)]
have lean_s158 : (Or let396 (Or let328 (Or let549 let39))) := by factor lean_s157, (- 1)
let lean_s159 := by R1 lean_s117, lean_s119, let25, [(- 1), (- 1)]
let lean_s160 := by R1 lean_s159, lean_s122, let31, [(- 1), (- 1)]
have lean_s161 : (Or let549 (Or let877 (Or let509 (Or let406 (Or let675 let926))))) :=
  (scope (fun lean_a312 : let56 =>
    (scope (fun lean_a313 : let4 =>
      (scope (fun lean_a314 : let7 =>
        (scope (fun lean_a315 : let39 =>
          (scope (fun lean_a316 : let87 =>
            (scope (fun lean_a317 : let78 =>
              (scope (fun lean_a318 : let24 =>
                have lean_s161 : let373 := by timed trueElim lean_r106
                have lean_s162 : let854 := by timed Eq.symm lean_r248
                have lean_s163 : let581 := by timed eqResolve lean_a318 lean_s162
                have lean_s164 : let938 := by timed And.intro lean_s161 lean_s163
                have lean_s165 : let939 := by arithMulPos [let20, let121, let117], 1
                have lean_s166 : let937 := by timed modusPonens lean_s164 lean_s165
                have lean_s167 : let632 := by timed trueElim lean_r284
                have lean_s168 : let775 := by timed Eq.symm lean_r80
                have lean_s169 : let322 := by timed eqResolve lean_a312 lean_s168
                have lean_s170 : let918 := by timed And.intro lean_s167 lean_s169
                have lean_s171 : let919 := by arithMulPos [let51, let121, let136], 1
                have lean_s172 : let917 := by timed modusPonens lean_s170 lean_s171
                have lean_s173 : let279 := by timed trueElim lean_r61
                have lean_s174 : let111 := by timed eqResolve lean_a294 lean_s109
                have lean_s175 : let4 := by andElim lean_s174, 6
                have lean_s176 : let882 := by timed Eq.symm lean_r228
                have lean_s177 : let553 := by timed eqResolve lean_s175 lean_s176
                have lean_s178 : let935 := by timed And.intro lean_s173 lean_s177
                have lean_s179 : let936 := by arithMulPos [x6, let121, let278], 1
                have lean_s180 : let934 := by timed modusPonens lean_s178 lean_s179
                have lean_s181 : let634 := by timed trueElim lean_r286
                have lean_s182 : let761 := by timed Eq.symm lean_r53
                have lean_s183 : let262 := by timed eqResolve lean_a314 lean_s182
                have lean_s184 : let932 := by timed And.intro lean_s181 lean_s183
                have lean_s185 : let933 := by arithMulNeg [let6, let121, let519], 3
                have lean_s186 : let931 := by timed modusPonens lean_s184 lean_s185
                have lean_s187 : let443 := by timed trueElim lean_r151
                have lean_s188 : let839 := by timed Eq.symm lean_r184
                have lean_s189 : let492 := by timed eqResolve lean_a315 lean_s188
                have lean_s190 : let915 := by timed And.intro lean_s187 lean_s189
                have lean_s191 : let916 := by arithMulPos [let34, let121, let142], 1
                have lean_s192 : let914 := by timed modusPonens lean_s190 lean_s191
                have lean_s193 : let433 := by timed trueElim lean_r146
                have lean_s194 : let912 := by timed And.intro lean_s193 lean_a316
                have lean_s195 : let913 := by arithMulNeg [x1, let86, let139], 3
                have lean_s196 : let911 := by timed modusPonens lean_s194 lean_s195
                have lean_s197 : let494 := by timed trueElim lean_r187
                have lean_s198 : let723 := by timed Eq.symm lean_r108
                have lean_s199 : let374 := by timed eqResolve lean_a317 lean_s198
                have lean_s200 : let909 := by timed And.intro lean_s197 lean_s199
                have lean_s201 : let910 := by arithMulPos [let74, let121, let137], 1
                have lean_s202 : let908 := by timed modusPonens lean_s200 lean_s201
                have lean_s203 : let930 := by sumBounds [lean_s166, lean_s172, lean_s180, lean_s186, lean_s192, lean_s196, lean_s202]
                have lean_s204 : (Eq let140 let140) := by timed rfl
                let lean_s205 := by timed congrHAdd lean_s204 lean_r277
                let lean_s206 := by timed congrHAdd lean_r278 lean_s205
                let lean_s207 := by timed congrHAdd lean_r204 lean_s206
                let lean_s208 := by timed congrHAdd lean_r133 lean_s207
                let lean_s209 := by timed congrHAdd lean_r281 lean_s208
                have lean_s210 : (Eq let929 let498) := by timed congrHAdd lean_r82 lean_s209
                have lean_s211 : (Eq let929 let121) := by timed Eq.trans lean_s210 lean_r190
                let lean_s212 := by timed flipCongrArg lean_s211 [LE.le]
                let lean_s213 := by timed congrHAdd lean_r121 lean_r274
                let lean_s214 := by timed congrHAdd lean_r153 lean_s213
                let lean_s215 := by timed congrHAdd lean_r219 lean_s214
                let lean_s216 := by timed congrHAdd lean_r94 lean_s215
                let lean_s217 := by timed congrHAdd lean_r78 lean_s216
                have lean_s218 : (Eq let927 let633) := by timed congrHAdd lean_r194 lean_s217
                have lean_s219 : (Eq let927 let390) := by timed Eq.trans lean_s218 lean_r285
                have lean_s220 : (Eq let930 let613) := by timed congr lean_s212 lean_s219
                have lean_s221 : (Eq let930 False) := by timed Eq.trans lean_s220 lean_r270
                show False from by timed eqResolve lean_s203 lean_s221
  ))))))))))))))
have lean_s162 : (Not (And let56 (And let4 (And let7 (And let39 (And let87 let925)))))) := by liftOrNToNeg lean_s161
have lean_s163 : (Or let549 (Or let877 (Or let509 (Or let406 let845)))) := by timed flipNotAnd lean_s162 [let56, let4, let7, let39, let87, let78, let24]
have lean_s164 : (Or let675 let924) := by permutateOr lean_s163, [4, 5, 0, 3, 6, 2, 1], (- 1)
let lean_s165 := by R1 lean_s160, lean_s164, let24, [(- 1), (- 1)]
have lean_s166 : let4 := by andElim lean_s111, 6
let lean_s167 := by R2 lean_s165, lean_s166, let4, [(- 1), 0]
have lean_s168 : (Or let549 (Or let406 (Or let675 let894))) :=
  (scope (fun lean_a312 : let56 =>
    (scope (fun lean_a313 : let39 =>
      (scope (fun lean_a314 : let87 =>
        (scope (fun lean_a315 : let78 =>
          (scope (fun lean_a316 : let7 =>
            (scope (fun lean_a317 : let4 =>
              (scope (fun lean_a318 : let30 =>
                have lean_s168 : let373 := by timed trueElim lean_r106
                have lean_s169 : let753 := by timed Eq.symm lean_r132
                have lean_s170 : let412 := by timed eqResolve lean_a318 lean_s169
                have lean_s171 : let921 := by timed And.intro lean_s168 lean_s170
                have lean_s172 : let922 := by arithMulPos [let27, let121, let117], 1
                have lean_s173 : let920 := by timed modusPonens lean_s171 lean_s172
                have lean_s174 : let632 := by timed trueElim lean_r284
                have lean_s175 : let775 := by timed Eq.symm lean_r80
                have lean_s176 : let322 := by timed eqResolve lean_a312 lean_s175
                have lean_s177 : let918 := by timed And.intro lean_s174 lean_s176
                have lean_s178 : let919 := by arithMulPos [let51, let121, let136], 1
                have lean_s179 : let917 := by timed modusPonens lean_s177 lean_s178
                have lean_s180 : let443 := by timed trueElim lean_r151
                have lean_s181 : let839 := by timed Eq.symm lean_r184
                have lean_s182 : let492 := by timed eqResolve lean_a313 lean_s181
                have lean_s183 : let915 := by timed And.intro lean_s180 lean_s182
                have lean_s184 : let916 := by arithMulPos [let34, let121, let142], 1
                have lean_s185 : let914 := by timed modusPonens lean_s183 lean_s184
                have lean_s186 : let433 := by timed trueElim lean_r146
                have lean_s187 : let912 := by timed And.intro lean_s186 lean_a314
                have lean_s188 : let913 := by arithMulNeg [x1, let86, let139], 3
                have lean_s189 : let911 := by timed modusPonens lean_s187 lean_s188
                have lean_s190 : let494 := by timed trueElim lean_r187
                have lean_s191 : let723 := by timed Eq.symm lean_r108
                have lean_s192 : let374 := by timed eqResolve lean_a315 lean_s191
                have lean_s193 : let909 := by timed And.intro lean_s190 lean_s192
                have lean_s194 : let910 := by arithMulPos [let74, let121, let137], 1
                have lean_s195 : let908 := by timed modusPonens lean_s193 lean_s194
                have lean_s196 : let631 := by timed trueElim lean_r283
                have lean_s197 : let761 := by timed Eq.symm lean_r53
                have lean_s198 : let262 := by timed eqResolve lean_a316 lean_s197
                have lean_s199 : let906 := by timed And.intro lean_s196 lean_s198
                have lean_s200 : let907 := by arithMulNeg [let6, let121, let202], 3
                have lean_s201 : let905 := by timed modusPonens lean_s199 lean_s200
                have lean_s202 : let316 := by timed trueElim lean_r76
                have lean_s203 : let111 := by timed eqResolve lean_a294 lean_s109
                have lean_s204 : let4 := by andElim lean_s203, 6
                have lean_s205 : let882 := by timed Eq.symm lean_r228
                have lean_s206 : let553 := by timed eqResolve lean_s204 lean_s205
                have lean_s207 : let903 := by timed And.intro lean_s202 lean_s206
                have lean_s208 : let904 := by arithMulPos [x6, let121, let315], 1
                have lean_s209 : let902 := by timed modusPonens lean_s207 lean_s208
                have lean_s210 : let901 := by sumBounds [lean_s173, lean_s179, lean_s185, lean_s189, lean_s195, lean_s201, lean_s209]
                have lean_s211 : (Eq let140 let140) := by timed rfl
                let lean_s212 := by timed congrHAdd lean_r39 lean_r275
                let lean_s213 := by timed congrHAdd lean_r277 lean_s212
                let lean_s214 := by timed congrHAdd lean_s211 lean_s213
                let lean_s215 := by timed congrHAdd lean_r278 lean_s214
                let lean_s216 := by timed congrHAdd lean_r281 lean_s215
                have lean_s217 : (Eq let900 let548) := by timed congrHAdd lean_r282 lean_s216
                have lean_s218 : (Eq let900 let121) := by timed Eq.trans lean_s217 lean_r224
                let lean_s219 := by timed flipCongrArg lean_s218 [LE.le]
                let lean_s220 := by timed congrHAdd lean_r273 lean_r119
                let lean_s221 := by timed congrHAdd lean_r274 lean_s220
                let lean_s222 := by timed congrHAdd lean_r121 lean_s221
                let lean_s223 := by timed congrHAdd lean_r153 lean_s222
                let lean_s224 := by timed congrHAdd lean_r78 lean_s223
                have lean_s225 : (Eq let897 let616) := by timed congrHAdd lean_r194 lean_s224
                have lean_s226 : (Eq let897 let390) := by timed Eq.trans lean_s225 lean_r272
                have lean_s227 : (Eq let901 let613) := by timed congr lean_s219 lean_s226
                have lean_s228 : (Eq let901 False) := by timed Eq.trans lean_s227 lean_r270
                show False from by timed eqResolve lean_s210 lean_s228
  ))))))))))))))
have lean_s169 : (Not (And let56 (And let39 (And let87 let893)))) := by liftOrNToNeg lean_s168
have lean_s170 : (Or let549 (Or let406 (Or let675 let892))) := by timed flipNotAnd lean_s169 [let56, let39, let87, let78, let7, let4, let30]
have lean_s171 : (Or let675 let891) := by permutateOr lean_s170, [2, 3, 0, 1, 6, 4, 5], (- 1)
let lean_s172 := by R1 lean_s167, lean_s171, let30, [(- 1), (- 1)]
have lean_s173 : (Or let675 (Or let328 (Or let549 (Or let406 (Or let509 let888))))) := by R2 lean_s172, lean_s166, let4, [(- 1), 0]
have lean_s174 : let888 := by factor lean_s173, (- 1)
have lean_s175 : (Or let247 (Or let877 (Or let510 False))) :=
  (scope (fun lean_a313 : let14 =>
    (scope (fun lean_a314 : let4 =>
      (scope (fun lean_a315 : let509 =>
        have lean_s175 : let583 := by timed trueElim lean_r250
        have lean_s176 : (Eq let611 let509) := by timed flipCongrArg lean_r53 [Not]
        have lean_s177 : (Eq let612 let509) := by timed Eq.trans lean_r269 lean_s176
        have lean_s178 : (Eq let509 let612) := by timed Eq.symm lean_s177
        have lean_s179 : let612 := by timed eqResolve lean_a315 lean_s178
        have lean_s180 : let886 := by timed And.intro lean_s175 lean_s179
        have lean_s181 : (Implies let886 let885) := by arithMulPos [let6, let121, let531], 0
        have lean_s182 : let885 := by timed modusPonens lean_s180 lean_s181
        have lean_s183 : let533 := by timed trueElim lean_r212
        have lean_s184 : (Eq let14 let197) := by timed Eq.symm lean_r38
        have lean_s185 : let197 := by timed eqResolve lean_a313 lean_s184
        have lean_s186 : let884 := by timed And.intro lean_s183 lean_s185
        have lean_s187 : (Implies let884 let883) := by arithMulNeg [let13, let121, let532], 3
        have lean_s188 : let883 := by timed modusPonens lean_s186 lean_s187
        have lean_s189 : let373 := by timed trueElim lean_r106
        have lean_s190 : let111 := by timed eqResolve lean_a294 lean_s109
        have lean_s191 : let4 := by andElim lean_s190, 6
        have lean_s192 : let882 := by timed Eq.symm lean_r228
        have lean_s193 : let553 := by timed eqResolve lean_s191 lean_s192
        have lean_s194 : let881 := by timed And.intro lean_s189 lean_s193
        have lean_s195 : (Implies let881 let880) := by arithMulPos [x6, let121, let117], 1
        have lean_s196 : let880 := by timed modusPonens lean_s194 lean_s195
        have lean_s197 : let610 := by sumBounds [lean_s182, lean_s188, lean_s196]
        let lean_s198 := by timed congrHAdd lean_r240 lean_r237
        have lean_s199 : (Eq let607 let604) := by timed congrHAdd lean_r267 lean_s198
        have lean_s200 : (Eq let607 let121) := by timed Eq.trans lean_s199 lean_r266
        let lean_s201 := by timed flipCongrArg lean_s200 [GE.ge]
        let lean_s202 := by timed congrHAdd lean_r239 lean_r194
        have lean_s203 : (Eq let606 let149) := by timed congrHAdd lean_r244 lean_s202
        have lean_s204 : (Eq let606 let121) := by timed Eq.trans lean_s203 lean_r258
        have lean_s205 : (Eq let608 let554) := by timed congr lean_s201 lean_s204
        have lean_s206 : (Eq let608 True) := by timed Eq.trans lean_s205 lean_r231
        have lean_s207 : (Eq let609 let422) := by timed flipCongrArg lean_s206 [Not]
        have lean_s208 : (Eq let609 False) := by timed Eq.trans lean_s207 lean_r139
        have lean_s209 : (Eq let610 False) := by timed Eq.trans lean_r268 lean_s208
        show False from by timed eqResolve lean_s197 lean_s209
  ))))))
have lean_s176 : (Not (And let14 (And let4 let509))) := by liftOrNToNeg lean_s175
have lean_s177 : let879 := by timed flipNotAnd lean_s176 [let14, let4, let509]
have lean_s178 : let745 := by timed rfl
have lean_s179 : (Eq let247 let247) := by timed rfl
let lean_s180 := by timed congr lean_s178 lean_s179
have lean_s181 : (Eq let877 let877) := by timed rfl
let lean_s182 := by timed congr lean_s178 lean_s181
let lean_s183 := by timed congr lean_s182 lean_r199
have lean_s184 : (Eq let879 let878) := by timed congr lean_s180 lean_s183
have lean_s185 : let878 := by timed eqResolve lean_s177 lean_s184
have lean_s186 : (Or let7 (Or let247 let877)) := by permutateOr lean_s185, [2, 0, 1], (- 1)
let lean_s187 := by R2 lean_s174, lean_s186, let7, [(- 1), (- 1)]
let lean_s188 := by R2 lean_s187, lean_s166, let4, [(- 1), 0]
have lean_s189 : let64 := by andElim lean_s111, 2
have lean_s190 : (Or let57 let63) := by permutateOr lean_s189, [1, 0], (- 1)
have lean_s191 : (Or let705 let56) := by timed @cnfAndPos [let56, let52] 0
have lean_s192 : (Or let56 let705) := by permutateOr lean_s191, [1, 0], (- 1)
let lean_s193 := by R1 lean_s190, lean_s192, let57, [(- 1), (- 1)]
have lean_s194 : (Or let713 let62) := by timed @cnfAndPos [let62, let60] 0
have lean_s195 : (Or let62 let713) := by permutateOr lean_s194, [1, 0], (- 1)
let lean_s196 := by R1 lean_s193, lean_s195, let63, [(- 1), (- 1)]
have lean_s197 : (Or let675 (Or let328 (Or let338 (Or let843 (Or let509 (Or let248 let748)))))) :=
  (scope (fun lean_a315 : let87 =>
    (scope (fun lean_a316 : let78 =>
      (scope (fun lean_a317 : let46 =>
        (scope (fun lean_a318 : let24 =>
          (scope (fun lean_a319 : let7 =>
            (scope (fun lean_a320 : let247 =>
              (scope (fun lean_a321 : let56 =>
                have lean_s197 : let373 := by timed trueElim lean_r106
                have lean_s198 : let775 := by timed Eq.symm lean_r80
                have lean_s199 : let322 := by timed eqResolve lean_a321 lean_s198
                have lean_s200 : let773 := by timed And.intro lean_s197 lean_s199
                have lean_s201 : let774 := by arithMulPos [let51, let121, let117], 1
                have lean_s202 : let772 := by timed modusPonens lean_s200 lean_s201
                have lean_s203 : let534 := by timed trueElim lean_r213
                have lean_s204 : let804 := by timed And.intro lean_s203 lean_a315
                have lean_s205 : let805 := by arithMulNeg [x1, let86, let456], 3
                have lean_s206 : let803 := by timed modusPonens lean_s204 lean_s205
                have lean_s207 : let536 := by timed trueElim lean_r215
                have lean_s208 : let723 := by timed Eq.symm lean_r108
                have lean_s209 : let374 := by timed eqResolve lean_a316 lean_s208
                have lean_s210 : let807 := by timed And.intro lean_s207 lean_s209
                have lean_s211 : let808 := by arithMulPos [let74, let121, let392], 1
                have lean_s212 : let806 := by timed modusPonens lean_s210 lean_s211
                have lean_s213 : let190 := by timed trueElim lean_r32
                have lean_s214 : let765 := by timed Eq.symm lean_r33
                have lean_s215 : let191 := by timed eqResolve lean_a317 lean_s214
                have lean_s216 : let763 := by timed And.intro lean_s213 lean_s215
                have lean_s217 : let764 := by arithMulPos [let42, let121, let189], 1
                have lean_s218 : let762 := by timed modusPonens lean_s216 lean_s217
                have lean_s219 : let323 := by timed trueElim lean_r81
                have lean_s220 : let854 := by timed Eq.symm lean_r248
                have lean_s221 : let581 := by timed eqResolve lean_a318 lean_s220
                have lean_s222 : let876 := by timed And.intro lean_s219 lean_s221
                have lean_s223 : (Implies let876 let875) := by arithMulPos [let20, let121, let204], 1
                have lean_s224 : let875 := by timed modusPonens lean_s222 lean_s223
                have lean_s225 : let602 := by timed trueElim lean_r265
                have lean_s226 : let761 := by timed Eq.symm lean_r53
                have lean_s227 : let262 := by timed eqResolve lean_a319 lean_s226
                have lean_s228 : let874 := by timed And.intro lean_s225 lean_s227
                have lean_s229 : (Implies let874 let873) := by arithMulNeg [let6, let121, let332], 3
                have lean_s230 : let873 := by timed modusPonens lean_s228 lean_s229
                have lean_s231 : let425 := by timed trueElim lean_r141
                have lean_s232 : (Eq let198 let247) := by timed flipCongrArg lean_r38 [Not]
                have lean_s233 : (Eq let199 let247) := by timed Eq.trans lean_r36 lean_s232
                have lean_s234 : let757 := by timed Eq.symm lean_s233
                have lean_s235 : let199 := by timed eqResolve lean_a320 lean_s234
                have lean_s236 : let872 := by timed And.intro lean_s231 lean_s235
                have lean_s237 : (Implies let872 let871) := by arithMulPos [let13, let121, let424], 0
                have lean_s238 : let871 := by timed modusPonens lean_s236 lean_s237
                have lean_s239 : let465 := by sumBounds [lean_s202, lean_s206, lean_s212, lean_s218, lean_s224, lean_s230, lean_s238]
                have lean_s240 : (Eq let461 let461) := by timed rfl
                let lean_s241 := by timed congrHAdd lean_r87 lean_r189
                let lean_s242 := by timed congrHAdd lean_r84 lean_s241
                let lean_s243 := by timed congrHAdd lean_r65 lean_s242
                let lean_s244 := by timed congrHAdd lean_r168 lean_s243
                let lean_s245 := by timed congrHAdd lean_s240 lean_s244
                have lean_s246 : (Eq let462 let499) := by timed congrHAdd lean_r83 lean_s245
                have lean_s247 : (Eq let462 let121) := by timed Eq.trans lean_s246 lean_r191
                let lean_s248 := by timed flipCongrArg lean_s247 [GE.ge]
                let lean_s249 := by timed congrHAdd lean_r263 lean_r260
                let lean_s250 := by timed congrHAdd lean_r89 lean_s249
                let lean_s251 := by timed congrHAdd lean_r46 lean_s250
                let lean_s252 := by timed congrHAdd lean_r208 lean_s251
                let lean_s253 := by timed congrHAdd lean_r207 lean_s252
                have lean_s254 : (Eq let458 let242) := by timed congrHAdd lean_r194 lean_s253
                have lean_s255 : (Eq let458 let239) := by timed Eq.trans lean_s254 lean_r44
                have lean_s256 : (Eq let463 let490) := by timed congr lean_s248 lean_s255
                have lean_s257 : (Eq let463 True) := by timed Eq.trans lean_s256 lean_r182
                have lean_s258 : (Eq let464 let422) := by timed flipCongrArg lean_s257 [Not]
                have lean_s259 : (Eq let464 False) := by timed Eq.trans lean_s258 lean_r139
                have lean_s260 : (Eq let465 False) := by timed Eq.trans lean_r163 lean_s259
                show False from by timed eqResolve lean_s239 lean_s260
  ))))))))))))))
have lean_s198 : (Not (And let87 (And let78 (And let46 (And let24 (And let7 (And let247 let56))))))) := by liftOrNToNeg lean_s197
have lean_s199 : let870 := by timed flipNotAnd lean_s198 [let87, let78, let46, let24, let7, let247, let56]
have lean_s200 : let745 := by timed rfl
have lean_s201 : (Eq let675 let675) := by timed rfl
let lean_s202 := by timed congr lean_s200 lean_s201
have lean_s203 : (Eq let328 let328) := by timed rfl
let lean_s204 := by timed congr lean_s200 lean_s203
have lean_s205 : (Eq let338 let338) := by timed rfl
let lean_s206 := by timed congr lean_s200 lean_s205
have lean_s207 : let850 := by timed rfl
let lean_s208 := by timed congr lean_s200 lean_s207
have lean_s209 : let746 := by timed rfl
let lean_s210 := by timed congr lean_s200 lean_s209
let lean_s211 := by timed congr lean_s200 lean_r49
have lean_s212 : (Eq let549 let549) := by timed rfl
let lean_s213 := by timed congr lean_s211 lean_s212
let lean_s214 := by timed congr lean_s210 lean_s213
let lean_s215 := by timed congr lean_s208 lean_s214
let lean_s216 := by timed congr lean_s206 lean_s215
let lean_s217 := by timed congr lean_s204 lean_s216
have lean_s218 : (Eq let870 let869) := by timed congr lean_s202 lean_s217
have lean_s219 : let869 := by timed eqResolve lean_s199 lean_s218
have lean_s220 : (Or let14 (Or let675 (Or let328 (Or let549 let859)))) := by permutateOr lean_s219, [5, 0, 1, 6, 2, 3, 4], (- 1)
let lean_s221 := by R1 lean_s196, lean_s220, let56, [(- 1), (- 1)]
have lean_s222 : (Or let338 (Or let843 (Or let328 (Or let675 (Or let509 (Or let248 let783)))))) :=
  (scope (fun lean_a316 : let46 =>
    (scope (fun lean_a317 : let24 =>
      (scope (fun lean_a318 : let78 =>
        (scope (fun lean_a319 : let87 =>
          (scope (fun lean_a320 : let7 =>
            (scope (fun lean_a321 : let247 =>
              (scope (fun lean_a322 : let62 =>
                have lean_s222 : let373 := by timed trueElim lean_r106
                have lean_s223 : let720 := by timed Eq.symm lean_r195
                have lean_s224 : let502 := by timed eqResolve lean_a322 lean_s223
                have lean_s225 : let798 := by timed And.intro lean_s222 lean_s224
                have lean_s226 : let799 := by arithMulPos [let59, let121, let117], 1
                have lean_s227 : let797 := by timed modusPonens lean_s225 lean_s226
                have lean_s228 : let597 := by timed trueElim lean_r257
                have lean_s229 : let765 := by timed Eq.symm lean_r33
                have lean_s230 : let191 := by timed eqResolve lean_a316 lean_s229
                have lean_s231 : let795 := by timed And.intro lean_s228 lean_s230
                have lean_s232 : let796 := by arithMulPos [let42, let121, let180], 1
                have lean_s233 : let794 := by timed modusPonens lean_s231 lean_s232
                have lean_s234 : let447 := by timed trueElim lean_r156
                have lean_s235 : let854 := by timed Eq.symm lean_r248
                have lean_s236 : let581 := by timed eqResolve lean_a317 lean_s235
                have lean_s237 : let868 := by timed And.intro lean_s234 lean_s236
                have lean_s238 : (Implies let868 let867) := by arithMulPos [let20, let121, let256], 1
                have lean_s239 : let867 := by timed modusPonens lean_s237 lean_s238
                have lean_s240 : let536 := by timed trueElim lean_r215
                have lean_s241 : let723 := by timed Eq.symm lean_r108
                have lean_s242 : let374 := by timed eqResolve lean_a318 lean_s241
                have lean_s243 : let807 := by timed And.intro lean_s240 lean_s242
                have lean_s244 : let808 := by arithMulPos [let74, let121, let392], 1
                have lean_s245 : let806 := by timed modusPonens lean_s243 lean_s244
                have lean_s246 : let534 := by timed trueElim lean_r213
                have lean_s247 : let804 := by timed And.intro lean_s246 lean_a319
                have lean_s248 : let805 := by arithMulNeg [x1, let86, let456], 3
                have lean_s249 : let803 := by timed modusPonens lean_s247 lean_s248
                have lean_s250 : let418 := by timed trueElim lean_r135
                have lean_s251 : let761 := by timed Eq.symm lean_r53
                have lean_s252 : let262 := by timed eqResolve lean_a320 lean_s251
                have lean_s253 : let866 := by timed And.intro lean_s250 lean_s252
                have lean_s254 : (Implies let866 let865) := by arithMulNeg [let6, let121, let417], 3
                have lean_s255 : let865 := by timed modusPonens lean_s253 lean_s254
                have lean_s256 : let571 := by timed trueElim lean_r243
                have lean_s257 : (Eq let198 let247) := by timed flipCongrArg lean_r38 [Not]
                have lean_s258 : (Eq let199 let247) := by timed Eq.trans lean_r36 lean_s257
                have lean_s259 : let757 := by timed Eq.symm lean_s258
                have lean_s260 : let199 := by timed eqResolve lean_a321 lean_s259
                have lean_s261 : let864 := by timed And.intro lean_s256 lean_s260
                have lean_s262 : (Implies let864 let863) := by arithMulPos [let13, let121, let521], 0
                have lean_s263 : let863 := by timed modusPonens lean_s261 lean_s262
                have lean_s264 : let596 := by sumBounds [lean_s227, lean_s233, lean_s239, lean_s245, lean_s249, lean_s255, lean_s263]
                have lean_s265 : (Eq let461 let461) := by timed rfl
                let lean_s266 := by timed congrHAdd lean_r255 lean_r254
                let lean_s267 := by timed congrHAdd lean_s265 lean_s266
                let lean_s268 := by timed congrHAdd lean_r168 lean_s267
                let lean_s269 := by timed congrHAdd lean_r51 lean_s268
                let lean_s270 := by timed congrHAdd lean_r159 lean_s269
                have lean_s271 : (Eq let593 let620) := by timed congrHAdd lean_r70 lean_s270
                have lean_s272 : (Eq let593 let121) := by timed Eq.trans lean_s271 lean_r276
                let lean_s273 := by timed flipCongrArg lean_s272 [GE.ge]
                let lean_s274 := by timed congrHAdd lean_r221 lean_r205
                let lean_s275 := by timed congrHAdd lean_r207 lean_s274
                let lean_s276 := by timed congrHAdd lean_r208 lean_s275
                let lean_s277 := by timed congrHAdd lean_r107 lean_s276
                let lean_s278 := by timed congrHAdd lean_r27 lean_s277
                have lean_s279 : (Eq let592 let585) := by timed congrHAdd lean_r194 lean_s278
                have lean_s280 : (Eq let592 let239) := by timed Eq.trans lean_s279 lean_r252
                have lean_s281 : (Eq let594 let490) := by timed congr lean_s273 lean_s280
                have lean_s282 : (Eq let594 True) := by timed Eq.trans lean_s281 lean_r182
                have lean_s283 : (Eq let595 let422) := by timed flipCongrArg lean_s282 [Not]
                have lean_s284 : (Eq let595 False) := by timed Eq.trans lean_s283 lean_r139
                have lean_s285 : (Eq let596 False) := by timed Eq.trans lean_r256 lean_s284
                show False from by timed eqResolve lean_s264 lean_s285
  ))))))))))))))
have lean_s223 : (Not (And let46 (And let24 (And let78 (And let87 (And let7 (And let247 let62))))))) := by liftOrNToNeg lean_s222
have lean_s224 : let862 := by timed flipNotAnd lean_s223 [let46, let24, let78, let87, let7, let247, let62]
have lean_s225 : let745 := by timed rfl
let lean_s226 := by timed congr lean_s225 lean_s205
let lean_s227 := by timed congr lean_s225 lean_s207
let lean_s228 := by timed congr lean_s225 lean_s203
let lean_s229 := by timed congr lean_s225 lean_s201
let lean_s230 := by timed congr lean_s225 lean_s209
let lean_s231 := by timed congr lean_s225 lean_r49
have lean_s232 : (Eq let714 let714) := by timed rfl
let lean_s233 := by timed congr lean_s231 lean_s232
let lean_s234 := by timed congr lean_s230 lean_s233
let lean_s235 := by timed congr lean_s229 lean_s234
let lean_s236 := by timed congr lean_s228 lean_s235
let lean_s237 := by timed congr lean_s227 lean_s236
have lean_s238 : (Eq let862 let861) := by timed congr lean_s226 lean_s237
have lean_s239 : let861 := by timed eqResolve lean_s224 lean_s238
have lean_s240 : (Or let14 (Or let675 (Or let328 (Or let714 let859)))) := by permutateOr lean_s239, [5, 3, 2, 6, 0, 1, 4], (- 1)
have lean_s241 : (Or let14 (Or let675 (Or let328 (Or let338 (Or let843 (Or let509 let860)))))) := by R1 lean_s221, lean_s240, let62, [(- 1), (- 1)]
have lean_s242 : let860 := by factor lean_s241, (- 1)
have lean_s243 : (Or let735 let7) := by timed @cnfAndPos [let10, let7] 1
have lean_s244 : (Or let7 let735) := by permutateOr lean_s243, [1, 0], (- 1)
let lean_s245 := by R2 lean_s242, lean_s244, let7, [(- 1), (- 1)]
have lean_s246 : let18 := by andElim lean_s111, 5
have lean_s247 : (Or let11 let17) := by permutateOr lean_s246, [1, 0], (- 1)
let lean_s248 := by R2 lean_s245, lean_s247, let11, [(- 1), (- 1)]
have lean_s249 : (Or let734 let14) := by timed @cnfAndPos [let16, let14] 1
have lean_s250 : (Or let14 let734) := by permutateOr lean_s249, [1, 0], (- 1)
let lean_s251 := by R1 lean_s248, lean_s250, let17, [(- 1), (- 1)]
have lean_s252 : (Or let843 (Or let509 (Or let248 (Or let542 let825)))) :=
  (scope (fun lean_a317 : let24 =>
    (scope (fun lean_a318 : let7 =>
      (scope (fun lean_a319 : let247 =>
        (scope (fun lean_a320 : let43 =>
          (scope (fun lean_a321 : let39 =>
            have lean_s252 : let839 := by timed Eq.symm lean_r184
            have lean_s253 : let492 := by timed eqResolve lean_a321 lean_s252
            have lean_s254 : (Or let560 False) :=
              (scope (fun lean_a318 : let492 =>
                have lean_s254 : let373 := by timed trueElim lean_r106
                have lean_s255 : let837 := by timed And.intro lean_s254 lean_a318
                have lean_s256 : let838 := by arithMulPos [let34, let121, let117], 1
                have lean_s257 : let836 := by timed modusPonens lean_s255 lean_s256
                have lean_s258 : let395 := by timed trueElim lean_r123
                have lean_s259 : let835 := by timed Eq.symm lean_r35
                have lean_s260 : let196 := by timed eqResolve lean_a320 lean_s259
                have lean_s261 : let833 := by timed And.intro lean_s258 lean_s260
                have lean_s262 : let834 := by arithMulNeg [let42, let121, let193], 3
                have lean_s263 : let832 := by timed modusPonens lean_s261 lean_s262
                have lean_s264 : let584 := by timed trueElim lean_r251
                have lean_s265 : (Eq let198 let247) := by timed flipCongrArg lean_r38 [Not]
                have lean_s266 : (Eq let199 let247) := by timed Eq.trans lean_r36 lean_s265
                have lean_s267 : let757 := by timed Eq.symm lean_s266
                have lean_s268 : let199 := by timed eqResolve lean_a319 lean_s267
                have lean_s269 : let858 := by timed And.intro lean_s264 lean_s268
                have lean_s270 : (Implies let858 let857) := by arithMulPos [let13, let121, let568], 0
                have lean_s271 : let857 := by timed modusPonens lean_s269 lean_s270
                have lean_s272 : let582 := by timed trueElim lean_r249
                have lean_s273 : let761 := by timed Eq.symm lean_r53
                have lean_s274 : let262 := by timed eqResolve lean_a318 lean_s273
                have lean_s275 : let856 := by timed And.intro lean_s272 lean_s274
                have lean_s276 : (Implies let856 let855) := by arithMulNeg [let6, let121, let430], 3
                have lean_s277 : let855 := by timed modusPonens lean_s275 lean_s276
                have lean_s278 : let500 := by timed trueElim lean_r192
                have lean_s279 : let854 := by timed Eq.symm lean_r248
                have lean_s280 : let581 := by timed eqResolve lean_a317 lean_s279
                have lean_s281 : let853 := by timed And.intro lean_s278 lean_s280
                have lean_s282 : (Implies let853 let852) := by arithMulPos [let20, let121, let280], 1
                have lean_s283 : let852 := by timed modusPonens lean_s281 lean_s282
                have lean_s284 : let580 := by sumBounds [lean_s257, lean_s263, lean_s271, lean_s277, lean_s283]
                let lean_s285 := by timed congrHAdd lean_r144 lean_r232
                let lean_s286 := by timed congrHAdd lean_r246 lean_s285
                let lean_s287 := by timed congrHAdd lean_r222 lean_s286
                have lean_s288 : (Eq let577 let574) := by timed congrHAdd lean_r218 lean_s287
                have lean_s289 : (Eq let577 let121) := by timed Eq.trans lean_s288 lean_r245
                let lean_s290 := by timed flipCongrArg lean_s289 [GE.ge]
                let lean_s291 := by timed congrHAdd lean_r238 lean_r230
                let lean_s292 := by timed congrHAdd lean_r241 lean_s291
                let lean_s293 := by timed congrHAdd lean_r172 lean_s292
                have lean_s294 : (Eq let576 let241) := by timed congrHAdd lean_r194 lean_s293
                have lean_s295 : (Eq let576 let121) := by timed Eq.trans lean_s294 lean_r229
                have lean_s296 : (Eq let578 let554) := by timed congr lean_s290 lean_s295
                have lean_s297 : (Eq let578 True) := by timed Eq.trans lean_s296 lean_r231
                have lean_s298 : (Eq let579 let422) := by timed flipCongrArg lean_s297 [Not]
                have lean_s299 : (Eq let579 False) := by timed Eq.trans lean_s298 lean_r139
                have lean_s300 : (Eq let580 False) := by timed Eq.trans lean_r247 lean_s299
                show False from by timed eqResolve lean_s284 lean_s300
              ))
            have lean_s255 : let560 := by liftOrNToNeg lean_s254
            have lean_s256 : (Eq let560 let406) := by timed flipCongrArg lean_r184 [Not]
            have lean_s257 : (Eq let561 let406) := by timed Eq.trans lean_r236 lean_s256
            have lean_s258 : let851 := by timed Eq.symm lean_s257
            have lean_s259 : (Eq let560 let561) := by timed Eq.trans lean_s256 lean_s258
            have lean_s260 : let561 := by timed eqResolve lean_s255 lean_s259
            have lean_s261 : (Eq let406 let560) := by timed Eq.symm lean_s256
            have lean_s262 : let562 := by timed Eq.trans lean_s257 lean_s261
            have lean_s263 : let560 := by timed eqResolve lean_s260 lean_s262
            show False from by timed contradiction lean_s253 lean_s263
  ))))))))))
have lean_s253 : (Not (And let24 (And let7 (And let247 (And let43 let39))))) := by liftOrNToNeg lean_s252
have lean_s254 : let849 := by timed flipNotAnd lean_s253 [let24, let7, let247, let43, let39]
have lean_s255 : let745 := by timed rfl
have lean_s256 : let850 := by timed rfl
let lean_s257 := by timed congr lean_s255 lean_s256
have lean_s258 : let746 := by timed rfl
let lean_s259 := by timed congr lean_s255 lean_s258
let lean_s260 := by timed congr lean_s255 lean_r49
have lean_s261 : let824 := by timed rfl
let lean_s262 := by timed congr lean_s255 lean_s261
have lean_s263 : let823 := by timed rfl
let lean_s264 := by timed congr lean_s262 lean_s263
let lean_s265 := by timed congr lean_s260 lean_s264
let lean_s266 := by timed congr lean_s259 lean_s265
have lean_s267 : (Eq let849 let848) := by timed congr lean_s257 lean_s266
have lean_s268 : let848 := by timed eqResolve lean_s254 lean_s267
have lean_s269 : (Or let14 (Or let542 (Or let406 let846))) := by permutateOr lean_s268, [2, 3, 4, 0, 1], (- 1)
let lean_s270 := by R2 lean_s269, lean_s156, let39, [(- 1), (- 1)]
let lean_s271 := by R2 lean_s270, lean_s146, let40, [(- 1), (- 1)]
have lean_s272 : (Or let339 (Or let543 False)) :=
  (scope (fun lean_a319 : let338 =>
    (scope (fun lean_a320 : let542 =>
      have lean_s272 : let373 := by timed trueElim lean_r106
      have lean_s273 : (Eq let410 let542) := by timed flipCongrArg lean_r35 [Not]
      have lean_s274 : (Eq let411 let542) := by timed Eq.trans lean_r131 lean_s273
      have lean_s275 : (Eq let542 let411) := by timed Eq.symm lean_s274
      have lean_s276 : let411 := by timed eqResolve lean_a320 lean_s275
      have lean_s277 : let819 := by timed And.intro lean_s272 lean_s276
      have lean_s278 : (Implies let819 let818) := by arithMulPos [let42, let121, let117], 0
      have lean_s279 : let818 := by timed modusPonens lean_s277 lean_s278
      have lean_s280 : let395 := by timed trueElim lean_r123
      have lean_s281 : (Eq let551 let338) := by timed flipCongrArg lean_r33 [Not]
      have lean_s282 : (Eq let552 let338) := by timed Eq.trans lean_r227 lean_s281
      have lean_s283 : let817 := by timed Eq.symm lean_s282
      have lean_s284 : let552 := by timed eqResolve lean_a319 lean_s283
      have lean_s285 : let816 := by timed And.intro lean_s280 lean_s284
      have lean_s286 : (Implies let816 let815) := by arithMulNeg [let42, let121, let193], 2
      have lean_s287 : let815 := by timed modusPonens lean_s285 lean_s286
      have lean_s288 : let518 := by sumBounds [lean_s279, lean_s287]
      let lean_s289 := by timed flipCongrArg lean_r225 [HAdd.hAdd]
      have lean_s290 : (Eq let515 let545) := by timed congr lean_s289 lean_r222
      have lean_s291 : (Eq let515 let121) := by timed Eq.trans lean_s290 lean_r220
      let lean_s292 := by timed flipCongrArg lean_s291 [GE.ge]
      let lean_s293 := by timed flipCongrArg lean_r194 [HAdd.hAdd]
      have lean_s294 : (Eq let229 let148) := by timed congr lean_s293 lean_r172
      have lean_s295 : (Eq let229 let121) := by timed Eq.trans lean_s294 lean_r137
      have lean_s296 : (Eq let516 let554) := by timed congr lean_s292 lean_s295
      have lean_s297 : (Eq let516 True) := by timed Eq.trans lean_s296 lean_r231
      have lean_s298 : (Eq let517 let422) := by timed flipCongrArg lean_s297 [Not]
      have lean_s299 : (Eq let517 False) := by timed Eq.trans lean_s298 lean_r139
      have lean_s300 : (Eq let518 False) := by timed Eq.trans lean_r203 lean_s299
      show False from by timed eqResolve lean_s288 lean_s300
  ))))
have lean_s273 : (Not (And let338 let542)) := by liftOrNToNeg lean_s272
have lean_s274 : let814 := by timed flipNotAnd lean_s273 [let338, let542]
let lean_s275 := by timed flipCongrArg lean_r91 [Or]
have lean_s276 : (Eq let814 let813) := by timed congr lean_s275 lean_r217
have lean_s277 : let813 := by timed eqResolve lean_s274 lean_s276
let lean_s278 := by R2 lean_s271, lean_s277, let43, [(- 1), (- 1)]
let lean_s279 := by R1 lean_s278, lean_s143, let47, [(- 1), (- 1)]
let lean_s280 := by R2 lean_s279, lean_s244, let7, [(- 1), (- 1)]
let lean_s281 := by R2 lean_s280, lean_s247, let11, [(- 1), (- 1)]
have lean_s282 : (Or let14 (Or let843 let811)) := by R1 lean_s281, lean_s250, let17, [(- 1), (- 1)]
have lean_s283 : (Or let14 (Or let843 let46)) := by factor lean_s282, 4
have lean_s284 : (Or let14 (Or let46 let843)) := by permutateOr lean_s283, [0, 2, 1], (- 1)
have lean_s285 : (Or let14 (Or let675 (Or let328 (Or let843 (Or let14 (Or let14 let843)))))) := by R2 lean_s251, lean_s284, let46, [(- 1), (- 1)]
have lean_s286 : (Or let14 let845) := by factor lean_s285, (- 1)
let lean_s287 := by R2 lean_s286, lean_s119, let24, [(- 1), (- 1)]
let lean_s288 := by R2 lean_s287, lean_s117, let25, [(- 1), (- 1)]
let lean_s289 := by R1 lean_s288, lean_s122, let31, [(- 1), (- 1)]
have lean_s290 : (Or let542 (Or let730 (Or let248 (Or let509 let825)))) :=
  (scope (fun lean_a321 : let43 =>
    (scope (fun lean_a322 : let30 =>
      (scope (fun lean_a323 : let247 =>
        (scope (fun lean_a324 : let7 =>
          (scope (fun lean_a325 : let39 =>
            have lean_s290 : let373 := by timed trueElim lean_r106
            have lean_s291 : let839 := by timed Eq.symm lean_r184
            have lean_s292 : let492 := by timed eqResolve lean_a325 lean_s291
            have lean_s293 : let837 := by timed And.intro lean_s290 lean_s292
            have lean_s294 : let838 := by arithMulPos [let34, let121, let117], 1
            have lean_s295 : let836 := by timed modusPonens lean_s293 lean_s294
            have lean_s296 : let395 := by timed trueElim lean_r123
            have lean_s297 : let835 := by timed Eq.symm lean_r35
            have lean_s298 : let196 := by timed eqResolve lean_a321 lean_s297
            have lean_s299 : let833 := by timed And.intro lean_s296 lean_s298
            have lean_s300 : let834 := by arithMulNeg [let42, let121, let193], 3
            have lean_s301 : let832 := by timed modusPonens lean_s299 lean_s300
            have lean_s302 : let500 := by timed trueElim lean_r192
            have lean_s303 : let753 := by timed Eq.symm lean_r132
            have lean_s304 : let412 := by timed eqResolve lean_a322 lean_s303
            have lean_s305 : let831 := by timed And.intro lean_s302 lean_s304
            have lean_s306 : (Implies let831 let830) := by arithMulPos [let27, let121, let280], 1
            have lean_s307 : let830 := by timed modusPonens lean_s305 lean_s306
            have lean_s308 : let558 := by timed trueElim lean_r234
            have lean_s309 : (Eq let198 let247) := by timed flipCongrArg lean_r38 [Not]
            have lean_s310 : (Eq let199 let247) := by timed Eq.trans lean_r36 lean_s309
            have lean_s311 : let757 := by timed Eq.symm lean_s310
            have lean_s312 : let199 := by timed eqResolve lean_a323 lean_s311
            have lean_s313 : let829 := by timed And.intro lean_s308 lean_s312
            have lean_s314 : (Implies let829 let828) := by arithMulPos [let13, let121, let271], 0
            have lean_s315 : let828 := by timed modusPonens lean_s313 lean_s314
            have lean_s316 : let238 := by timed trueElim lean_r43
            have lean_s317 : let761 := by timed Eq.symm lean_r53
            have lean_s318 : let262 := by timed eqResolve lean_a324 lean_s317
            have lean_s319 : let827 := by timed And.intro lean_s316 lean_s318
            have lean_s320 : (Implies let827 let826) := by arithMulNeg [let6, let121, let237], 3
            have lean_s321 : let826 := by timed modusPonens lean_s319 lean_s320
            have lean_s322 : let351 := by sumBounds [lean_s295, lean_s301, lean_s307, lean_s315, lean_s321]
            let lean_s323 := by timed congrHAdd lean_r57 lean_r196
            let lean_s324 := by timed congrHAdd lean_r90 lean_s323
            let lean_s325 := by timed congrHAdd lean_r222 lean_s324
            have lean_s326 : (Eq let348 let557) := by timed congrHAdd lean_r218 lean_s325
            have lean_s327 : (Eq let348 let121) := by timed Eq.trans lean_s326 lean_r233
            let lean_s328 := by timed flipCongrArg lean_s327 [GE.ge]
            let lean_s329 := by timed congrHAdd lean_r210 lean_r186
            let lean_s330 := by timed congrHAdd lean_r230 lean_s329
            let lean_s331 := by timed congrHAdd lean_r172 lean_s330
            have lean_s332 : (Eq let344 let241) := by timed congrHAdd lean_r194 lean_s331
            have lean_s333 : (Eq let344 let121) := by timed Eq.trans lean_s332 lean_r229
            have lean_s334 : (Eq let349 let554) := by timed congr lean_s328 lean_s333
            have lean_s335 : (Eq let349 True) := by timed Eq.trans lean_s334 lean_r231
            have lean_s336 : (Eq let350 let422) := by timed flipCongrArg lean_s335 [Not]
            have lean_s337 : (Eq let350 False) := by timed Eq.trans lean_s336 lean_r139
            have lean_s338 : (Eq let351 False) := by timed Eq.trans lean_r95 lean_s337
            show False from by timed eqResolve lean_s322 lean_s338
  ))))))))))
have lean_s291 : (Not (And let43 (And let30 (And let247 (And let7 let39))))) := by liftOrNToNeg lean_s290
have lean_s292 : let822 := by timed flipNotAnd lean_s291 [let43, let30, let247, let7, let39]
have lean_s293 : let745 := by timed rfl
have lean_s294 : let824 := by timed rfl
let lean_s295 := by timed congr lean_s293 lean_s294
have lean_s296 : (Eq let730 let730) := by timed rfl
let lean_s297 := by timed congr lean_s293 lean_s296
let lean_s298 := by timed congr lean_s293 lean_r49
let lean_s299 := by timed congr lean_s293 lean_s209
have lean_s300 : let823 := by timed rfl
let lean_s301 := by timed congr lean_s299 lean_s300
let lean_s302 := by timed congr lean_s298 lean_s301
let lean_s303 := by timed congr lean_s297 lean_s302
have lean_s304 : (Eq let822 let821) := by timed congr lean_s295 lean_s303
have lean_s305 : let821 := by timed eqResolve lean_s292 lean_s304
have lean_s306 : (Or let14 (Or let542 (Or let406 let736))) := by permutateOr lean_s305, [2, 0, 4, 1, 3], (- 1)
let lean_s307 := by R1 lean_s156, lean_s306, let39, [(- 1), (- 1)]
let lean_s308 := by R2 lean_s307, lean_s146, let40, [(- 1), (- 1)]
let lean_s309 := by R2 lean_s308, lean_s277, let43, [(- 1), (- 1)]
let lean_s310 := by R1 lean_s309, lean_s143, let47, [(- 1), (- 1)]
let lean_s311 := by R2 lean_s310, lean_s244, let7, [(- 1), (- 1)]
let lean_s312 := by R2 lean_s311, lean_s247, let11, [(- 1), (- 1)]
have lean_s313 : (Or let14 (Or let730 let811)) := by R1 lean_s312, lean_s250, let17, [(- 1), (- 1)]
have lean_s314 : (Or let14 (Or let730 let46)) := by factor lean_s313, 4
let lean_s315 := by R1 lean_s190, lean_s192, let57, [(- 1), (- 1)]
let lean_s316 := by R1 lean_s315, lean_s195, let63, [(- 1), (- 1)]
have lean_s317 : (Or let328 (Or let675 let749)) :=
  (scope (fun lean_a321 : let78 =>
    (scope (fun lean_a322 : let87 =>
      (scope (fun lean_a323 : let46 =>
        (scope (fun lean_a324 : let7 =>
          (scope (fun lean_a325 : let247 =>
            (scope (fun lean_a326 : let30 =>
              (scope (fun lean_a327 : let56 =>
                have lean_s317 : let373 := by timed trueElim lean_r106
                have lean_s318 : let775 := by timed Eq.symm lean_r80
                have lean_s319 : let322 := by timed eqResolve lean_a327 lean_s318
                have lean_s320 : let773 := by timed And.intro lean_s317 lean_s319
                have lean_s321 : let774 := by arithMulPos [let51, let121, let117], 1
                have lean_s322 : let772 := by timed modusPonens lean_s320 lean_s321
                have lean_s323 : let536 := by timed trueElim lean_r215
                have lean_s324 : let723 := by timed Eq.symm lean_r108
                have lean_s325 : let374 := by timed eqResolve lean_a321 lean_s324
                have lean_s326 : let807 := by timed And.intro lean_s323 lean_s325
                have lean_s327 : let808 := by arithMulPos [let74, let121, let392], 1
                have lean_s328 : let806 := by timed modusPonens lean_s326 lean_s327
                have lean_s329 : let534 := by timed trueElim lean_r213
                have lean_s330 : let804 := by timed And.intro lean_s329 lean_a322
                have lean_s331 : let805 := by arithMulNeg [x1, let86, let456], 3
                have lean_s332 : let803 := by timed modusPonens lean_s330 lean_s331
                have lean_s333 : let190 := by timed trueElim lean_r32
                have lean_s334 : let765 := by timed Eq.symm lean_r33
                have lean_s335 : let191 := by timed eqResolve lean_a323 lean_s334
                have lean_s336 : let763 := by timed And.intro lean_s333 lean_s335
                have lean_s337 : let764 := by arithMulPos [let42, let121, let189], 1
                have lean_s338 : let762 := by timed modusPonens lean_s336 lean_s337
                have lean_s339 : let432 := by timed trueElim lean_r145
                have lean_s340 : let761 := by timed Eq.symm lean_r53
                have lean_s341 : let262 := by timed eqResolve lean_a324 lean_s340
                have lean_s342 : let759 := by timed And.intro lean_s339 lean_s341
                have lean_s343 : let760 := by arithMulNeg [let6, let121, let208], 3
                have lean_s344 : let758 := by timed modusPonens lean_s342 lean_s343
                have lean_s345 : let570 := by timed trueElim lean_r242
                have lean_s346 : (Eq let198 let247) := by timed flipCongrArg lean_r38 [Not]
                have lean_s347 : (Eq let199 let247) := by timed Eq.trans lean_r36 lean_s346
                have lean_s348 : let757 := by timed Eq.symm lean_s347
                have lean_s349 : let199 := by timed eqResolve lean_a325 lean_s348
                have lean_s350 : let755 := by timed And.intro lean_s345 lean_s349
                have lean_s351 : let756 := by arithMulPos [let13, let121, let206], 0
                have lean_s352 : let754 := by timed modusPonens lean_s350 lean_s351
                have lean_s353 : let323 := by timed trueElim lean_r81
                have lean_s354 : let753 := by timed Eq.symm lean_r132
                have lean_s355 : let412 := by timed eqResolve lean_a326 lean_s354
                have lean_s356 : let751 := by timed And.intro lean_s353 lean_s355
                have lean_s357 : let752 := by arithMulPos [let27, let121, let204], 1
                have lean_s358 : let750 := by timed modusPonens lean_s356 lean_s357
                have lean_s359 : let541 := by sumBounds [lean_s322, lean_s328, lean_s332, lean_s338, lean_s344, lean_s352, lean_s358]
                have lean_s360 : (Eq let461 let461) := by timed rfl
                let lean_s361 := by timed congrHAdd lean_r71 lean_r158
                let lean_s362 := by timed congrHAdd lean_r64 lean_s361
                let lean_s363 := by timed congrHAdd lean_r65 lean_s362
                let lean_s364 := by timed congrHAdd lean_s360 lean_s363
                let lean_s365 := by timed congrHAdd lean_r168 lean_s364
                have lean_s366 : (Eq let538 let485) := by timed congrHAdd lean_r83 lean_s365
                have lean_s367 : (Eq let538 let121) := by timed Eq.trans lean_s366 lean_r178
                let lean_s368 := by timed flipCongrArg lean_s367 [GE.ge]
                let lean_s369 := by timed congrHAdd lean_r116 lean_r89
                let lean_s370 := by timed congrHAdd lean_r93 lean_s369
                let lean_s371 := by timed congrHAdd lean_r46 lean_s370
                let lean_s372 := by timed congrHAdd lean_r207 lean_s371
                let lean_s373 := by timed congrHAdd lean_r208 lean_s372
                have lean_s374 : (Eq let537 let427) := by timed congrHAdd lean_r194 lean_s373
                have lean_s375 : (Eq let537 let239) := by timed Eq.trans lean_s374 lean_r143
                have lean_s376 : (Eq let539 let490) := by timed congr lean_s368 lean_s375
                have lean_s377 : (Eq let539 True) := by timed Eq.trans lean_s376 lean_r182
                have lean_s378 : (Eq let540 let422) := by timed flipCongrArg lean_s377 [Not]
                have lean_s379 : (Eq let540 False) := by timed Eq.trans lean_s378 lean_r139
                have lean_s380 : (Eq let541 False) := by timed Eq.trans lean_r216 lean_s379
                show False from by timed eqResolve lean_s359 lean_s380
  ))))))))))))))
have lean_s318 : (Not (And let78 (And let87 let747))) := by liftOrNToNeg lean_s317
have lean_s319 : let810 := by timed flipNotAnd lean_s318 [let78, let87, let46, let7, let247, let30, let56]
have lean_s320 : let745 := by timed rfl
let lean_s321 := by timed congr lean_s320 lean_s203
let lean_s322 := by timed congr lean_s320 lean_s201
let lean_s323 := by timed congr lean_s320 lean_s205
let lean_s324 := by timed congr lean_s320 lean_s209
let lean_s325 := by timed congr lean_s320 lean_r49
let lean_s326 := by timed congr lean_s320 lean_s296
let lean_s327 := by timed congr lean_s326 lean_s212
let lean_s328 := by timed congr lean_s325 lean_s327
let lean_s329 := by timed congr lean_s324 lean_s328
let lean_s330 := by timed congr lean_s323 lean_s329
let lean_s331 := by timed congr lean_s322 lean_s330
have lean_s332 : (Eq let810 let809) := by timed congr lean_s321 lean_s331
have lean_s333 : let809 := by timed eqResolve lean_s319 lean_s332
have lean_s334 : (Or let14 (Or let675 (Or let328 let739))) := by permutateOr lean_s333, [4, 1, 0, 6, 2, 5, 3], (- 1)
let lean_s335 := by R1 lean_s316, lean_s334, let56, [(- 1), (- 1)]
have lean_s336 : (Or let328 (Or let675 let784)) :=
  (scope (fun lean_a321 : let78 =>
    (scope (fun lean_a322 : let87 =>
      (scope (fun lean_a323 : let46 =>
        (scope (fun lean_a324 : let7 =>
          (scope (fun lean_a325 : let247 =>
            (scope (fun lean_a326 : let30 =>
              (scope (fun lean_a327 : let62 =>
                have lean_s336 : let373 := by timed trueElim lean_r106
                have lean_s337 : let720 := by timed Eq.symm lean_r195
                have lean_s338 : let502 := by timed eqResolve lean_a327 lean_s337
                have lean_s339 : let798 := by timed And.intro lean_s336 lean_s338
                have lean_s340 : let799 := by arithMulPos [let59, let121, let117], 1
                have lean_s341 : let797 := by timed modusPonens lean_s339 lean_s340
                have lean_s342 : let536 := by timed trueElim lean_r215
                have lean_s343 : let723 := by timed Eq.symm lean_r108
                have lean_s344 : let374 := by timed eqResolve lean_a321 lean_s343
                have lean_s345 : let807 := by timed And.intro lean_s342 lean_s344
                have lean_s346 : let808 := by arithMulPos [let74, let121, let392], 1
                have lean_s347 : let806 := by timed modusPonens lean_s345 lean_s346
                have lean_s348 : let534 := by timed trueElim lean_r213
                have lean_s349 : let804 := by timed And.intro lean_s348 lean_a322
                have lean_s350 : let805 := by arithMulNeg [x1, let86, let456], 3
                have lean_s351 : let803 := by timed modusPonens lean_s349 lean_s350
                have lean_s352 : let597 := by timed trueElim lean_r257
                have lean_s353 : let765 := by timed Eq.symm lean_r33
                have lean_s354 : let191 := by timed eqResolve lean_a323 lean_s353
                have lean_s355 : let795 := by timed And.intro lean_s352 lean_s354
                have lean_s356 : let796 := by arithMulPos [let42, let121, let180], 1
                have lean_s357 : let794 := by timed modusPonens lean_s355 lean_s356
                have lean_s358 : let559 := by timed trueElim lean_r235
                have lean_s359 : let761 := by timed Eq.symm lean_r53
                have lean_s360 : let262 := by timed eqResolve lean_a324 lean_s359
                have lean_s361 : let792 := by timed And.intro lean_s358 lean_s360
                have lean_s362 : let793 := by arithMulNeg [let6, let121, let285], 3
                have lean_s363 : let791 := by timed modusPonens lean_s361 lean_s362
                have lean_s364 : let513 := by timed trueElim lean_r202
                have lean_s365 : (Eq let198 let247) := by timed flipCongrArg lean_r38 [Not]
                have lean_s366 : (Eq let199 let247) := by timed Eq.trans lean_r36 lean_s365
                have lean_s367 : let757 := by timed Eq.symm lean_s366
                have lean_s368 : let199 := by timed eqResolve lean_a325 lean_s367
                have lean_s369 : let789 := by timed And.intro lean_s364 lean_s368
                have lean_s370 : let790 := by arithMulPos [let13, let121, let283], 0
                have lean_s371 : let788 := by timed modusPonens lean_s369 lean_s370
                have lean_s372 : let447 := by timed trueElim lean_r156
                have lean_s373 : let753 := by timed Eq.symm lean_r132
                have lean_s374 : let412 := by timed eqResolve lean_a326 lean_s373
                have lean_s375 : let786 := by timed And.intro lean_s372 lean_s374
                have lean_s376 : let787 := by arithMulPos [let27, let121, let256], 1
                have lean_s377 : let785 := by timed modusPonens lean_s375 lean_s376
                have lean_s378 : let530 := by sumBounds [lean_s341, lean_s347, lean_s351, lean_s357, lean_s363, lean_s371, lean_s377]
                have lean_s379 : (Eq let461 let461) := by timed rfl
                let lean_s380 := by timed congrHAdd lean_r128 lean_r109
                let lean_s381 := by timed congrHAdd lean_r157 lean_s380
                let lean_s382 := by timed congrHAdd lean_r159 lean_s381
                let lean_s383 := by timed congrHAdd lean_s379 lean_s382
                let lean_s384 := by timed congrHAdd lean_r168 lean_s383
                have lean_s385 : (Eq let527 let525) := by timed congrHAdd lean_r70 lean_s384
                have lean_s386 : (Eq let527 let121) := by timed Eq.trans lean_s385 lean_r209
                let lean_s387 := by timed flipCongrArg lean_s386 [GE.ge]
                let lean_s388 := by timed congrHAdd lean_r126 lean_r107
                let lean_s389 := by timed congrHAdd lean_r68 lean_s388
                let lean_s390 := by timed congrHAdd lean_r27 lean_s389
                let lean_s391 := by timed congrHAdd lean_r207 lean_s390
                let lean_s392 := by timed congrHAdd lean_r208 lean_s391
                have lean_s393 : (Eq let526 let427) := by timed congrHAdd lean_r194 lean_s392
                have lean_s394 : (Eq let526 let239) := by timed Eq.trans lean_s393 lean_r143
                have lean_s395 : (Eq let528 let490) := by timed congr lean_s387 lean_s394
                have lean_s396 : (Eq let528 True) := by timed Eq.trans lean_s395 lean_r182
                have lean_s397 : (Eq let529 let422) := by timed flipCongrArg lean_s396 [Not]
                have lean_s398 : (Eq let529 False) := by timed Eq.trans lean_s397 lean_r139
                have lean_s399 : (Eq let530 False) := by timed Eq.trans lean_r211 lean_s398
                show False from by timed eqResolve lean_s378 lean_s399
  ))))))))))))))
have lean_s337 : (Not (And let78 (And let87 let782))) := by liftOrNToNeg lean_s336
have lean_s338 : let802 := by timed flipNotAnd lean_s337 [let78, let87, let46, let7, let247, let30, let62]
have lean_s339 : let745 := by timed rfl
let lean_s340 := by timed congr lean_s339 lean_s203
let lean_s341 := by timed congr lean_s339 lean_s201
let lean_s342 := by timed congr lean_s339 lean_s205
let lean_s343 := by timed congr lean_s339 lean_s209
let lean_s344 := by timed congr lean_s339 lean_r49
let lean_s345 := by timed congr lean_s339 lean_s296
let lean_s346 := by timed congr lean_s345 lean_s232
let lean_s347 := by timed congr lean_s344 lean_s346
let lean_s348 := by timed congr lean_s343 lean_s347
let lean_s349 := by timed congr lean_s342 lean_s348
let lean_s350 := by timed congr lean_s341 lean_s349
have lean_s351 : (Eq let802 let801) := by timed congr lean_s340 lean_s350
have lean_s352 : let801 := by timed eqResolve lean_s338 lean_s351
have lean_s353 : (Or let14 (Or let675 (Or let328 let776))) := by permutateOr lean_s352, [4, 1, 0, 6, 2, 5, 3], (- 1)
have lean_s354 : (Or let14 (Or let675 (Or let328 (Or let338 (Or let730 (Or let509 let800)))))) := by R1 lean_s335, lean_s353, let62, [(- 1), (- 1)]
have lean_s355 : let800 := by factor lean_s354, (- 1)
let lean_s356 := by R2 lean_s355, lean_s115, let78, [(- 1), (- 1)]
let lean_s357 := by R2 lean_s356, lean_s113, let79, [(- 1), (- 1)]
let lean_s358 := by R1 lean_s357, lean_s4, let71, [(- 1), (- 1)]
let lean_s359 := by R1 lean_s190, lean_s195, let63, [(- 1), (- 1)]
let lean_s360 := by R1 lean_s359, lean_s192, let57, [(- 1), (- 1)]
have lean_s361 : (Or let675 (Or let690 let784)) :=
  (scope (fun lean_a321 : let87 =>
    (scope (fun lean_a322 : let70 =>
      (scope (fun lean_a323 : let46 =>
        (scope (fun lean_a324 : let7 =>
          (scope (fun lean_a325 : let247 =>
            (scope (fun lean_a326 : let30 =>
              (scope (fun lean_a327 : let62 =>
                have lean_s361 : let373 := by timed trueElim lean_r106
                have lean_s362 : let720 := by timed Eq.symm lean_r195
                have lean_s363 : let502 := by timed eqResolve lean_a327 lean_s362
                have lean_s364 : let798 := by timed And.intro lean_s361 lean_s363
                have lean_s365 : let799 := by arithMulPos [let59, let121, let117], 1
                have lean_s366 : let797 := by timed modusPonens lean_s364 lean_s365
                have lean_s367 : let186 := by timed trueElim lean_r29
                have lean_s368 : let770 := by timed And.intro lean_s367 lean_a321
                have lean_s369 : let771 := by arithMulNeg [x1, let86, let185], 3
                have lean_s370 : let769 := by timed modusPonens lean_s368 lean_s369
                have lean_s371 : let188 := by timed trueElim lean_r31
                have lean_s372 : let699 := by timed Eq.symm lean_r92
                have lean_s373 : let126 := by timed eqResolve lean_a322 lean_s372
                have lean_s374 : let767 := by timed And.intro lean_s371 lean_s373
                have lean_s375 : let768 := by arithMulPos [let66, let121, let184], 1
                have lean_s376 : let766 := by timed modusPonens lean_s374 lean_s375
                have lean_s377 : let597 := by timed trueElim lean_r257
                have lean_s378 : let765 := by timed Eq.symm lean_r33
                have lean_s379 : let191 := by timed eqResolve lean_a323 lean_s378
                have lean_s380 : let795 := by timed And.intro lean_s377 lean_s379
                have lean_s381 : let796 := by arithMulPos [let42, let121, let180], 1
                have lean_s382 : let794 := by timed modusPonens lean_s380 lean_s381
                have lean_s383 : let559 := by timed trueElim lean_r235
                have lean_s384 : let761 := by timed Eq.symm lean_r53
                have lean_s385 : let262 := by timed eqResolve lean_a324 lean_s384
                have lean_s386 : let792 := by timed And.intro lean_s383 lean_s385
                have lean_s387 : let793 := by arithMulNeg [let6, let121, let285], 3
                have lean_s388 : let791 := by timed modusPonens lean_s386 lean_s387
                have lean_s389 : let513 := by timed trueElim lean_r202
                have lean_s390 : (Eq let198 let247) := by timed flipCongrArg lean_r38 [Not]
                have lean_s391 : (Eq let199 let247) := by timed Eq.trans lean_r36 lean_s390
                have lean_s392 : let757 := by timed Eq.symm lean_s391
                have lean_s393 : let199 := by timed eqResolve lean_a325 lean_s392
                have lean_s394 : let789 := by timed And.intro lean_s389 lean_s393
                have lean_s395 : let790 := by arithMulPos [let13, let121, let283], 0
                have lean_s396 : let788 := by timed modusPonens lean_s394 lean_s395
                have lean_s397 : let447 := by timed trueElim lean_r156
                have lean_s398 : let753 := by timed Eq.symm lean_r132
                have lean_s399 : let412 := by timed eqResolve lean_a326 lean_s398
                have lean_s400 : let786 := by timed And.intro lean_s397 lean_s399
                have lean_s401 : let787 := by arithMulPos [let27, let121, let256], 1
                have lean_s402 : let785 := by timed modusPonens lean_s400 lean_s401
                have lean_s403 : let298 := by sumBounds [lean_s366, lean_s370, lean_s376, lean_s382, lean_s388, lean_s396, lean_s402]
                have lean_s404 : (Eq let222 let222) := by timed rfl
                let lean_s405 := by timed congrHAdd lean_r128 lean_r109
                let lean_s406 := by timed congrHAdd lean_r157 lean_s405
                let lean_s407 := by timed congrHAdd lean_r159 lean_s406
                let lean_s408 := by timed congrHAdd lean_r166 lean_s407
                let lean_s409 := by timed congrHAdd lean_s404 lean_s408
                have lean_s410 : (Eq let295 let475) := by timed congrHAdd lean_r70 lean_s409
                have lean_s411 : (Eq let295 let121) := by timed Eq.trans lean_s410 lean_r169
                let lean_s412 := by timed flipCongrArg lean_s411 [GE.ge]
                let lean_s413 := by timed congrHAdd lean_r126 lean_r107
                let lean_s414 := by timed congrHAdd lean_r68 lean_s413
                let lean_s415 := by timed congrHAdd lean_r27 lean_s414
                let lean_s416 := by timed congrHAdd lean_r45 lean_s415
                let lean_s417 := by timed congrHAdd lean_r42 lean_s416
                have lean_s418 : (Eq let288 let277) := by timed congrHAdd lean_r194 lean_s417
                have lean_s419 : (Eq let288 let236) := by timed Eq.trans lean_s418 lean_r60
                have lean_s420 : (Eq let296 let355) := by timed congr lean_s412 lean_s419
                have lean_s421 : (Eq let296 True) := by timed Eq.trans lean_s420 lean_r98
                have lean_s422 : (Eq let297 let422) := by timed flipCongrArg lean_s421 [Not]
                have lean_s423 : (Eq let297 False) := by timed Eq.trans lean_s422 lean_r139
                have lean_s424 : (Eq let298 False) := by timed Eq.trans lean_r63 lean_s423
                show False from by timed eqResolve lean_s403 lean_s424
  ))))))))))))))
have lean_s362 : (Not (And let87 (And let70 let782))) := by liftOrNToNeg lean_s361
have lean_s363 : let781 := by timed flipNotAnd lean_s362 [let87, let70, let46, let7, let247, let30, let62]
have lean_s364 : let745 := by timed rfl
let lean_s365 := by timed congr lean_s364 lean_s201
have lean_s366 : (Eq let690 let690) := by timed rfl
let lean_s367 := by timed congr lean_s364 lean_s366
let lean_s368 := by timed congr lean_s364 lean_s205
let lean_s369 := by timed congr lean_s364 lean_s209
let lean_s370 := by timed congr lean_s364 lean_r49
let lean_s371 := by timed congr lean_s364 lean_s296
let lean_s372 := by timed congr lean_s371 lean_s232
let lean_s373 := by timed congr lean_s370 lean_s372
let lean_s374 := by timed congr lean_s369 lean_s373
let lean_s375 := by timed congr lean_s368 lean_s374
let lean_s376 := by timed congr lean_s367 lean_s375
have lean_s377 : (Eq let781 let779) := by timed congr lean_s365 lean_s376
have lean_s378 : let779 := by timed eqResolve lean_s363 lean_s377
have lean_s379 : (Or let14 (Or let675 (Or let690 let776))) := by permutateOr lean_s378, [4, 0, 1, 6, 2, 5, 3], (- 1)
let lean_s380 := by R1 lean_s360, lean_s379, let62, [(- 1), (- 1)]
have lean_s381 : (Or let675 (Or let690 let749)) :=
  (scope (fun lean_a321 : let87 =>
    (scope (fun lean_a322 : let70 =>
      (scope (fun lean_a323 : let46 =>
        (scope (fun lean_a324 : let7 =>
          (scope (fun lean_a325 : let247 =>
            (scope (fun lean_a326 : let30 =>
              (scope (fun lean_a327 : let56 =>
                have lean_s381 : let373 := by timed trueElim lean_r106
                have lean_s382 : let775 := by timed Eq.symm lean_r80
                have lean_s383 : let322 := by timed eqResolve lean_a327 lean_s382
                have lean_s384 : let773 := by timed And.intro lean_s381 lean_s383
                have lean_s385 : let774 := by arithMulPos [let51, let121, let117], 1
                have lean_s386 : let772 := by timed modusPonens lean_s384 lean_s385
                have lean_s387 : let186 := by timed trueElim lean_r29
                have lean_s388 : let770 := by timed And.intro lean_s387 lean_a321
                have lean_s389 : let771 := by arithMulNeg [x1, let86, let185], 3
                have lean_s390 : let769 := by timed modusPonens lean_s388 lean_s389
                have lean_s391 : let188 := by timed trueElim lean_r31
                have lean_s392 : let699 := by timed Eq.symm lean_r92
                have lean_s393 : let126 := by timed eqResolve lean_a322 lean_s392
                have lean_s394 : let767 := by timed And.intro lean_s391 lean_s393
                have lean_s395 : let768 := by arithMulPos [let66, let121, let184], 1
                have lean_s396 : let766 := by timed modusPonens lean_s394 lean_s395
                have lean_s397 : let190 := by timed trueElim lean_r32
                have lean_s398 : let765 := by timed Eq.symm lean_r33
                have lean_s399 : let191 := by timed eqResolve lean_a323 lean_s398
                have lean_s400 : let763 := by timed And.intro lean_s397 lean_s399
                have lean_s401 : let764 := by arithMulPos [let42, let121, let189], 1
                have lean_s402 : let762 := by timed modusPonens lean_s400 lean_s401
                have lean_s403 : let432 := by timed trueElim lean_r145
                have lean_s404 : let761 := by timed Eq.symm lean_r53
                have lean_s405 : let262 := by timed eqResolve lean_a324 lean_s404
                have lean_s406 : let759 := by timed And.intro lean_s403 lean_s405
                have lean_s407 : let760 := by arithMulNeg [let6, let121, let208], 3
                have lean_s408 : let758 := by timed modusPonens lean_s406 lean_s407
                have lean_s409 : let570 := by timed trueElim lean_r242
                have lean_s410 : (Eq let198 let247) := by timed flipCongrArg lean_r38 [Not]
                have lean_s411 : (Eq let199 let247) := by timed Eq.trans lean_r36 lean_s410
                have lean_s412 : let757 := by timed Eq.symm lean_s411
                have lean_s413 : let199 := by timed eqResolve lean_a325 lean_s412
                have lean_s414 : let755 := by timed And.intro lean_s409 lean_s413
                have lean_s415 : let756 := by arithMulPos [let13, let121, let206], 0
                have lean_s416 : let754 := by timed modusPonens lean_s414 lean_s415
                have lean_s417 : let323 := by timed trueElim lean_r81
                have lean_s418 : let753 := by timed Eq.symm lean_r132
                have lean_s419 : let412 := by timed eqResolve lean_a326 lean_s418
                have lean_s420 : let751 := by timed And.intro lean_s417 lean_s419
                have lean_s421 : let752 := by arithMulPos [let27, let121, let204], 1
                have lean_s422 : let750 := by timed modusPonens lean_s420 lean_s421
                have lean_s423 : let227 := by sumBounds [lean_s386, lean_s390, lean_s396, lean_s402, lean_s408, lean_s416, lean_s422]
                have lean_s424 : (Eq let222 let222) := by timed rfl
                let lean_s425 := by timed congrHAdd lean_r71 lean_r158
                let lean_s426 := by timed congrHAdd lean_r64 lean_s425
                let lean_s427 := by timed congrHAdd lean_r65 lean_s426
                let lean_s428 := by timed congrHAdd lean_r166 lean_s427
                let lean_s429 := by timed congrHAdd lean_s424 lean_s428
                have lean_s430 : (Eq let224 let370) := by timed congrHAdd lean_r83 lean_s429
                have lean_s431 : (Eq let224 let121) := by timed Eq.trans lean_s430 lean_r104
                let lean_s432 := by timed flipCongrArg lean_s431 [GE.ge]
                let lean_s433 := by timed congrHAdd lean_r116 lean_r89
                let lean_s434 := by timed congrHAdd lean_r93 lean_s433
                let lean_s435 := by timed congrHAdd lean_r46 lean_s434
                let lean_s436 := by timed congrHAdd lean_r45 lean_s435
                let lean_s437 := by timed congrHAdd lean_r42 lean_s436
                have lean_s438 : (Eq let215 let277) := by timed congrHAdd lean_r194 lean_s437
                have lean_s439 : (Eq let215 let236) := by timed Eq.trans lean_s438 lean_r60
                have lean_s440 : (Eq let225 let355) := by timed congr lean_s432 lean_s439
                have lean_s441 : (Eq let225 True) := by timed Eq.trans lean_s440 lean_r98
                have lean_s442 : (Eq let226 let422) := by timed flipCongrArg lean_s441 [Not]
                have lean_s443 : (Eq let226 False) := by timed Eq.trans lean_s442 lean_r139
                have lean_s444 : (Eq let227 False) := by timed Eq.trans lean_r40 lean_s443
                show False from by timed eqResolve lean_s423 lean_s444
  ))))))))))))))
have lean_s382 : (Not (And let87 (And let70 let747))) := by liftOrNToNeg lean_s381
have lean_s383 : let744 := by timed flipNotAnd lean_s382 [let87, let70, let46, let7, let247, let30, let56]
have lean_s384 : let745 := by timed rfl
let lean_s385 := by timed congr lean_s384 lean_s201
let lean_s386 := by timed congr lean_s384 lean_s366
let lean_s387 := by timed congr lean_s384 lean_s205
let lean_s388 := by timed congr lean_s384 lean_s209
let lean_s389 := by timed congr lean_s384 lean_r49
let lean_s390 := by timed congr lean_s384 lean_s296
let lean_s391 := by timed congr lean_s390 lean_s212
let lean_s392 := by timed congr lean_s389 lean_s391
let lean_s393 := by timed congr lean_s388 lean_s392
let lean_s394 := by timed congr lean_s387 lean_s393
let lean_s395 := by timed congr lean_s386 lean_s394
have lean_s396 : (Eq let744 let742) := by timed congr lean_s385 lean_s395
have lean_s397 : let742 := by timed eqResolve lean_s383 lean_s396
have lean_s398 : (Or let14 (Or let675 (Or let690 let739))) := by permutateOr lean_s397, [4, 0, 1, 6, 2, 5, 3], (- 1)
have lean_s399 : (Or let14 (Or let675 (Or let690 (Or let338 (Or let730 (Or let509 let738)))))) := by R1 lean_s380, lean_s398, let56, [(- 1), (- 1)]
have lean_s400 : let738 := by factor lean_s399, (- 1)
let lean_s401 := by R2 lean_s400, lean_s244, let7, [(- 1), (- 1)]
let lean_s402 := by R2 lean_s401, lean_s247, let11, [(- 1), (- 1)]
have lean_s403 : (Or let14 (Or let675 (Or let690 let733))) := by R1 lean_s402, lean_s250, let17, [(- 1), (- 1)]
have lean_s404 : (Or let14 (Or let675 (Or let690 let732))) := by factor lean_s403, 5
let lean_s405 := by R1 lean_s358, lean_s404, let70, [(- 1), (- 1)]
let lean_s406 := by R2 lean_s405, lean_s244, let7, [(- 1), (- 1)]
let lean_s407 := by R2 lean_s406, lean_s247, let11, [(- 1), (- 1)]
have lean_s408 : (Or let14 (Or let675 (Or let338 (Or let730 (Or let14 (Or let675 let733)))))) := by R1 lean_s407, lean_s250, let17, [(- 1), (- 1)]
have lean_s409 : (Or let14 (Or let675 let732)) := by factor lean_s408, 8
have lean_s410 : (Or let14 (Or let730 let731)) := by R1 lean_s314, lean_s409, let46, [(- 1), (- 1)]
have lean_s411 : (Or let14 (Or let730 let675)) := by factor lean_s410, 4
have lean_s412 : let731 := by permutateOr lean_s411, [0, 2, 1], (- 1)
have lean_s413 : (Or let14 (Or let675 (Or let328 (Or let14 let675)))) := by R1 lean_s289, lean_s412, let30, [(- 1), (- 1)]
have lean_s414 : (Or let14 let729) := by factor lean_s413, 4
have lean_s415 : (Or let675 (Or let328 (Or let549 (Or let406 let729)))) := by R2 lean_s188, lean_s414, let14, [(- 1), (- 1)]
have lean_s416 : (Or let675 (Or let328 let728)) := by factor lean_s415, 5
have lean_s417 : (Or let690 (Or let675 (Or let495 False))) :=
  (scope (fun lean_a321 : let70 =>
    (scope (fun lean_a322 : let87 =>
      (scope (fun lean_a323 : let75 =>
        have lean_s417 : let395 := by timed trueElim lean_r123
        have lean_s418 : let702 := by timed Eq.symm lean_r201
        have lean_s419 : let383 := by timed eqResolve lean_a323 lean_s418
        have lean_s420 : let701 := by timed And.intro lean_s417 lean_s419
        have lean_s421 : (Implies let701 let700) := by arithMulNeg [let74, let121, let193], 3
        have lean_s422 : let700 := by timed modusPonens lean_s420 lean_s421
        have lean_s423 : let244 := by timed trueElim lean_r47
        have lean_s424 : let699 := by timed Eq.symm lean_r92
        have lean_s425 : let126 := by timed eqResolve lean_a321 lean_s424
        have lean_s426 : let698 := by timed And.intro lean_s423 lean_s425
        have lean_s427 : (Implies let698 let697) := by arithMulPos [let66, let121, let243], 1
        have lean_s428 : let697 := by timed modusPonens lean_s426 lean_s427
        have lean_s429 : let354 := by timed trueElim lean_r97
        have lean_s430 : let696 := by timed And.intro lean_s429 lean_a322
        have lean_s431 : (Implies let696 let695) := by arithMulNeg [x1, let86, let353], 3
        have lean_s432 : let695 := by timed modusPonens lean_s430 lean_s431
        have lean_s433 : let694 := by sumBounds [lean_s422, lean_s428, lean_s432]
        have lean_s434 : (Eq let614 let614) := by timed rfl
        let lean_s435 := by timed congrHAdd lean_r147 lean_s434
        have lean_s436 : (Eq let693 let615) := by timed congrHAdd lean_r138 lean_s435
        have lean_s437 : (Eq let693 let121) := by timed Eq.trans lean_s436 lean_r271
        let lean_s438 := by timed flipCongrArg lean_s437 [LE.le]
        let lean_s439 := by timed congrHAdd lean_r100 lean_r101
        have lean_s440 : (Eq let692 let426) := by timed congrHAdd lean_r172 lean_s439
        have lean_s441 : (Eq let692 let359) := by timed Eq.trans lean_s440 lean_r142
        have lean_s442 : (Eq let694 let450) := by timed congr lean_s438 lean_s441
        have lean_s443 : (Eq let694 False) := by timed Eq.trans lean_s442 lean_r160
        show False from by timed eqResolve lean_s433 lean_s443
  ))))))
have lean_s418 : (Not (And let70 (And let87 let75))) := by liftOrNToNeg lean_s417
have lean_s419 : (Or let690 (Or let675 let495)) := by timed flipNotAnd lean_s418 [let70, let87, let75]
have lean_s420 : (Or let675 let691) := by permutateOr lean_s419, [1, 2, 0], (- 1)
let lean_s421 := by R1 lean_s4, lean_s420, let70, [(- 1), (- 1)]
let lean_s422 := by R2 lean_s421, lean_s113, let71, [(- 1), (- 1)]
have lean_s423 : (Or let329 (Or let496 False)) :=
  (scope (fun lean_a321 : let328 =>
    (scope (fun lean_a322 : let495 =>
      have lean_s423 : let373 := by timed trueElim lean_r106
      have lean_s424 : (Eq let384 let495) := by timed flipCongrArg lean_r201 [Not]
      have lean_s425 : (Eq let385 let495) := by timed Eq.trans lean_r114 lean_s424
      have lean_s426 : (Eq let495 let385) := by timed Eq.symm lean_s425
      have lean_s427 : let385 := by timed eqResolve lean_a322 lean_s426
      have lean_s428 : let689 := by timed And.intro lean_s423 lean_s427
      have lean_s429 : (Implies let689 let688) := by arithMulPos [let74, let121, let117], 0
      have lean_s430 : let688 := by timed modusPonens lean_s428 lean_s429
      have lean_s431 : let395 := by timed trueElim lean_r123
      have lean_s432 : (Eq let523 let328) := by timed flipCongrArg lean_r108 [Not]
      have lean_s433 : (Eq let524 let328) := by timed Eq.trans lean_r206 lean_s432
      have lean_s434 : (Eq let328 let524) := by timed Eq.symm lean_s433
      have lean_s435 : let524 := by timed eqResolve lean_a321 lean_s434
      have lean_s436 : let687 := by timed And.intro lean_s431 lean_s435
      have lean_s437 : (Implies let687 let686) := by arithMulNeg [let74, let121, let193], 2
      have lean_s438 : let686 := by timed modusPonens lean_s436 lean_s437
      have lean_s439 : let507 := by sumBounds [lean_s430, lean_s438]
      let lean_s440 := by timed flipCongrArg lean_r173 [HAdd.hAdd]
      have lean_s441 : (Eq let504 let200) := by timed congr lean_s440 lean_r138
      have lean_s442 : (Eq let504 let121) := by timed Eq.trans lean_s441 lean_r37
      let lean_s443 := by timed flipCongrArg lean_s442 [GE.ge]
      let lean_s444 := by timed flipCongrArg lean_r194 [HAdd.hAdd]
      have lean_s445 : (Eq let229 let148) := by timed congr lean_s444 lean_r172
      have lean_s446 : (Eq let229 let121) := by timed Eq.trans lean_s445 lean_r137
      have lean_s447 : (Eq let505 let554) := by timed congr lean_s443 lean_s446
      have lean_s448 : (Eq let505 True) := by timed Eq.trans lean_s447 lean_r231
      have lean_s449 : (Eq let506 let422) := by timed flipCongrArg lean_s448 [Not]
      have lean_s450 : (Eq let506 False) := by timed Eq.trans lean_s449 lean_r139
      have lean_s451 : (Eq let507 False) := by timed Eq.trans lean_r197 lean_s450
      show False from by timed eqResolve lean_s439 lean_s451
  ))))
have lean_s424 : (Not (And let328 let495)) := by liftOrNToNeg lean_s423
have lean_s425 : let685 := by timed flipNotAnd lean_s424 [let328, let495]
let lean_s426 := by timed flipCongrArg lean_r86 [Or]
have lean_s427 : (Eq let685 let684) := by timed congr lean_s426 lean_r188
have lean_s428 : let684 := by timed eqResolve lean_s425 lean_s427
let lean_s429 := by R2 lean_s422, lean_s428, let75, [(- 1), (- 1)]
have lean_s430 : (Or let675 (Or let78 let78)) := by R1 lean_s429, lean_s115, let79, [(- 1), (- 1)]
have lean_s431 : (Or let675 let78) := by factor lean_s430, (- 1)
have lean_s432 : (Or let78 let675) := by permutateOr lean_s431, [1, 0], (- 1)
have lean_s433 : (Or let675 (Or let549 (Or let406 let675))) := by R2 lean_s416, lean_s432, let78, [(- 1), (- 1)]
have lean_s434 : (Or let675 let728) := by factor lean_s433, 3
have lean_s435 : (Or let396 (Or let328 (Or let549 (Or let675 let549)))) := by R1 lean_s158, lean_s434, let39, [(- 1), (- 1)]
have lean_s436 : (Or let396 (Or let328 (Or let549 let675))) := by factor lean_s435, 4
have lean_s437 : (Or let714 (Or let328 (Or let396 (Or let334 False)))) :=
  (scope (fun lean_a323 : let62 =>
    (scope (fun lean_a324 : let78 =>
      (scope (fun lean_a325 : let82 =>
        (scope (fun lean_a326 : let52 =>
          have lean_s437 : (Eq let52 let317) := by timed Eq.symm lean_r152
          have lean_s438 : let317 := by timed eqResolve lean_a326 lean_s437
          have lean_s439 : (Or let318 False) :=
            (scope (fun lean_a324 : let317 =>
              have lean_s439 : let395 := by timed trueElim lean_r123
              have lean_s440 : let727 := by timed And.intro lean_s439 lean_a324
              have lean_s441 : (Implies let727 let726) := by arithMulNeg [let51, let121, let193], 3
              have lean_s442 : let726 := by timed modusPonens lean_s440 lean_s441
              have lean_s443 : let261 := by timed trueElim lean_r52
              have lean_s444 : let725 := by timed And.intro lean_s443 lean_a325
              have lean_s445 : (Implies let725 let724) := by arithMulNeg [x1, let81, let260], 3
              have lean_s446 : let724 := by timed modusPonens lean_s444 lean_s445
              have lean_s447 : let263 := by timed trueElim lean_r54
              have lean_s448 : let723 := by timed Eq.symm lean_r108
              have lean_s449 : let374 := by timed eqResolve lean_a324 lean_s448
              have lean_s450 : let722 := by timed And.intro lean_s447 lean_s449
              have lean_s451 : (Implies let722 let721) := by arithMulPos [let74, let121, let259], 1
              have lean_s452 : let721 := by timed modusPonens lean_s450 lean_s451
              have lean_s453 : let266 := by timed trueElim lean_r55
              have lean_s454 : let720 := by timed Eq.symm lean_r195
              have lean_s455 : let502 := by timed eqResolve lean_a323 lean_s454
              have lean_s456 : let719 := by timed And.intro lean_s453 lean_s455
              have lean_s457 : (Implies let719 let718) := by arithMulPos [let59, let121, let265], 1
              have lean_s458 : let718 := by timed modusPonens lean_s456 lean_s457
              have lean_s459 : let717 := by sumBounds [lean_s442, lean_s446, lean_s452, lean_s458]
              have lean_s460 : (Eq let438 let438) := by timed rfl
              let lean_s461 := by timed congrHAdd lean_r58 lean_r193
              let lean_s462 := by timed congrHAdd lean_s460 lean_s461
              have lean_s463 : (Eq let716 let439) := by timed congrHAdd lean_r85 lean_s462
              have lean_s464 : (Eq let716 let121) := by timed Eq.trans lean_s463 lean_r149
              let lean_s465 := by timed flipCongrArg lean_s464 [LE.le]
              let lean_s466 := by timed congrHAdd lean_r262 lean_r259
              let lean_s467 := by timed congrHAdd lean_r67 lean_s466
              have lean_s468 : (Eq let715 let312) := by timed congrHAdd lean_r172 lean_s467
              have lean_s469 : (Eq let715 let305) := by timed Eq.trans lean_s468 lean_r73
              have lean_s470 : (Eq let717 let314) := by timed congr lean_s465 lean_s469
              have lean_s471 : (Eq let717 False) := by timed Eq.trans lean_s470 lean_r75
              show False from by timed eqResolve lean_s459 lean_s471
            ))
          have lean_s440 : let318 := by liftOrNToNeg lean_s439
          have lean_s441 : (Eq let318 let334) := by timed flipCongrArg lean_r152 [Not]
          have lean_s442 : (Eq let319 let334) := by timed Eq.trans lean_r77 lean_s441
          have lean_s443 : let712 := by timed Eq.symm lean_s442
          have lean_s444 : (Eq let318 let319) := by timed Eq.trans lean_s441 lean_s443
          have lean_s445 : let319 := by timed eqResolve lean_s440 lean_s444
          have lean_s446 : let318 := by timed eqResolve lean_s445 lean_r77
          show False from by timed contradiction lean_s438 lean_s446
  ))))))))
have lean_s438 : (Not (And let62 (And let78 (And let82 let52)))) := by liftOrNToNeg lean_s437
have lean_s439 : (Or let714 (Or let328 (Or let396 let334))) := by timed flipNotAnd lean_s438 [let62, let78, let82, let52]
have lean_s440 : (Or let396 (Or let328 (Or let714 let334))) := by permutateOr lean_s439, [2, 1, 0, 3], (- 1)
let lean_s441 := by R2 lean_s440, lean_s195, let62, [(- 1), (- 1)]
let lean_s442 := by R2 lean_s441, lean_s190, let63, [(- 1), (- 1)]
have lean_s443 : (Or let550 (Or let335 False)) :=
  (scope (fun lean_a325 : let549 =>
    (scope (fun lean_a326 : let334 =>
      have lean_s443 : let373 := by timed trueElim lean_r106
      have lean_s444 : (Eq let318 let334) := by timed flipCongrArg lean_r152 [Not]
      have lean_s445 : (Eq let319 let334) := by timed Eq.trans lean_r77 lean_s444
      have lean_s446 : let712 := by timed Eq.symm lean_s445
      have lean_s447 : let319 := by timed eqResolve lean_a326 lean_s446
      have lean_s448 : let711 := by timed And.intro lean_s443 lean_s447
      have lean_s449 : (Implies let711 let710) := by arithMulPos [let51, let121, let117], 0
      have lean_s450 : let710 := by timed modusPonens lean_s448 lean_s449
      have lean_s451 : let395 := by timed trueElim lean_r123
      have lean_s452 : (Eq let419 let549) := by timed flipCongrArg lean_r80 [Not]
      have lean_s453 : (Eq let420 let549) := by timed Eq.trans lean_r136 lean_s452
      have lean_s454 : (Eq let549 let420) := by timed Eq.symm lean_s453
      have lean_s455 : let420 := by timed eqResolve lean_a325 lean_s454
      have lean_s456 : let709 := by timed And.intro lean_s451 lean_s455
      have lean_s457 : (Implies let709 let708) := by arithMulNeg [let51, let121, let193], 2
      have lean_s458 : let708 := by timed modusPonens lean_s456 lean_s457
      have lean_s459 : let234 := by sumBounds [lean_s450, lean_s458]
      let lean_s460 := by timed flipCongrArg lean_r83 [HAdd.hAdd]
      have lean_s461 : (Eq let231 let586) := by timed congr lean_s460 lean_r85
      have lean_s462 : (Eq let231 let121) := by timed Eq.trans lean_s461 lean_r253
      let lean_s463 := by timed flipCongrArg lean_s462 [GE.ge]
      let lean_s464 := by timed flipCongrArg lean_r194 [HAdd.hAdd]
      have lean_s465 : (Eq let229 let148) := by timed congr lean_s464 lean_r172
      have lean_s466 : (Eq let229 let121) := by timed Eq.trans lean_s465 lean_r137
      have lean_s467 : (Eq let232 let554) := by timed congr lean_s463 lean_s466
      have lean_s468 : (Eq let232 True) := by timed Eq.trans lean_s467 lean_r231
      have lean_s469 : (Eq let233 let422) := by timed flipCongrArg lean_s468 [Not]
      have lean_s470 : (Eq let233 False) := by timed Eq.trans lean_s469 lean_r139
      have lean_s471 : (Eq let234 False) := by timed Eq.trans lean_r41 lean_s470
      show False from by timed eqResolve lean_s459 lean_s471
  ))))
have lean_s444 : (Not (And let549 let334)) := by liftOrNToNeg lean_s443
have lean_s445 : let707 := by timed flipNotAnd lean_s444 [let549, let334]
let lean_s446 := by timed flipCongrArg lean_r226 [Or]
have lean_s447 : (Eq let707 let706) := by timed congr lean_s446 lean_r88
have lean_s448 : let706 := by timed eqResolve lean_s445 lean_s447
let lean_s449 := by R2 lean_s442, lean_s448, let52, [(- 1), (- 1)]
have lean_s450 : (Or let396 (Or let328 (Or let56 let56))) := by R1 lean_s449, lean_s192, let57, [(- 1), (- 1)]
have lean_s451 : (Or let396 (Or let328 let56)) := by factor lean_s450, (- 1)
have lean_s452 : (Or let56 let704) := by permutateOr lean_s451, [2, 0, 1], (- 1)
have lean_s453 : (Or let396 (Or let328 (Or let675 let704))) := by R2 lean_s436, lean_s452, let56, [(- 1), (- 1)]
have lean_s454 : (Or let396 (Or let328 let675)) := by factor lean_s453, 4
have lean_s455 : (Or let396 (Or let675 let675)) := by R2 lean_s454, lean_s432, let78, [(- 1), (- 1)]
have lean_s456 : (Or let396 let675) := by factor lean_s455, (- 1)
let lean_s457 := by R2 lean_s456, lean_s134, let87, [(- 1), (- 1)]
let lean_s458 := by R2 lean_s457, lean_s132, let90, [(- 1), (- 1)]
have lean_s459 : (Or let682 let84) := by timed @cnfAndPos [let84, let82] 0
have lean_s460 : (Or let84 let682) := by permutateOr lean_s459, [1, 0], (- 1)
let lean_s461 := by R1 lean_s458, lean_s460, let85, [(- 1), (- 1)]
have lean_s462 : (Or let397 (Or let372 False)) :=
  (scope (fun lean_a327 : let396 =>
    (scope (fun lean_a328 : let371 =>
      have lean_s462 : let373 := by timed trueElim lean_r106
      have lean_s463 : (Eq let396 let489) := by timed Eq.symm lean_r181
      have lean_s464 : let489 := by timed eqResolve lean_a327 lean_s463
      have lean_s465 : let681 := by timed And.intro lean_s462 lean_s464
      have lean_s466 : (Implies let681 let680) := by arithMulPos [x1, let81, let117], 0
      have lean_s467 : let680 := by timed modusPonens lean_s465 lean_s466
      have lean_s468 : let395 := by timed trueElim lean_r123
      have lean_s469 : (Eq let511 let371) := by timed flipCongrArg lean_r115 [Not]
      have lean_s470 : (Eq let512 let371) := by timed Eq.trans lean_r200 lean_s469
      have lean_s471 : (Eq let371 let512) := by timed Eq.symm lean_s470
      have lean_s472 : let512 := by timed eqResolve lean_a328 lean_s471
      have lean_s473 : let679 := by timed And.intro lean_s468 lean_s472
      have lean_s474 : (Implies let679 let678) := by arithMulNeg [x1, let81, let193], 2
      have lean_s475 : let678 := by timed modusPonens lean_s473 lean_s474
      have lean_s476 : let471 := by sumBounds [lean_s467, lean_s475]
      let lean_s477 := by timed flipCongrArg lean_r161 [HAdd.hAdd]
      have lean_s478 : (Eq let468 let480) := by timed congr lean_s477 lean_r113
      have lean_s479 : (Eq let468 let121) := by timed Eq.trans lean_s478 lean_r174
      let lean_s480 := by timed flipCongrArg lean_s479 [GE.ge]
      let lean_s481 := by timed flipCongrArg lean_r154 [HAdd.hAdd]
      have lean_s482 : (Eq let467 let478) := by timed congr lean_s481 lean_r148
      have lean_s483 : (Eq let467 let121) := by timed Eq.trans lean_s482 lean_r171
      have lean_s484 : (Eq let469 let554) := by timed congr lean_s480 lean_s483
      have lean_s485 : (Eq let469 True) := by timed Eq.trans lean_s484 lean_r231
      have lean_s486 : (Eq let470 let422) := by timed flipCongrArg lean_s485 [Not]
      have lean_s487 : (Eq let470 False) := by timed Eq.trans lean_s486 lean_r139
      have lean_s488 : (Eq let471 False) := by timed Eq.trans lean_r165 lean_s487
      show False from by timed eqResolve lean_s476 lean_s488
  ))))
have lean_s463 : (Not (And let396 let371)) := by liftOrNToNeg lean_s462
have lean_s464 : let677 := by timed flipNotAnd lean_s463 [let396, let371]
let lean_s465 := by timed flipCongrArg lean_r124 [Or]
have lean_s466 : (Eq let677 let676) := by timed congr lean_s465 lean_r105
have lean_s467 : let676 := by timed eqResolve lean_s464 lean_s466
have lean_s468 : (Or let84 let84) := by R2 lean_s461, lean_s467, let82, [(- 1), (- 1)]
have lean_s469 : let84 := by factor lean_s468, 1
have lean_s470 : let675 := by R2 lean_s137, lean_s469, let84, [(- 1), 0]
have lean_s471 : let674 := by R1 lean_s134, lean_s470, let87, [(- 1), 0]
have lean_s472 : let85 := by R1 lean_s132, lean_s471, let90, [(- 1), 0]
have lean_s473 : let82 := by R2 lean_s130, lean_s472, let85, [(- 1), 0]
let lean_s474 := by R2 lean_s128, lean_s473, let82, [(- 1), 0]
let lean_s475 := by R2 lean_s474, lean_s166, let4, [(- 1), 0]
have lean_s476 : (Or let406 let988) :=
  (scope (fun lean_a329 : let39 =>
    (scope (fun lean_a330 : let56 =>
      (scope (fun lean_a331 : let82 =>
        (scope (fun lean_a332 : let78 =>
          (scope (fun lean_a333 : let7 =>
            (scope (fun lean_a334 : let4 =>
              (scope (fun lean_a335 : let30 =>
                have lean_s476 : let373 := by timed trueElim lean_r106
                have lean_s477 : let753 := by timed Eq.symm lean_r132
                have lean_s478 : let412 := by timed eqResolve lean_a335 lean_s477
                have lean_s479 : let921 := by timed And.intro lean_s476 lean_s478
                have lean_s480 : let922 := by arithMulPos [let27, let121, let117], 1
                have lean_s481 : let920 := by timed modusPonens lean_s479 lean_s480
                have lean_s482 : let443 := by timed trueElim lean_r151
                have lean_s483 : let839 := by timed Eq.symm lean_r184
                have lean_s484 : let492 := by timed eqResolve lean_a329 lean_s483
                have lean_s485 : let915 := by timed And.intro lean_s482 lean_s484
                have lean_s486 : let916 := by arithMulPos [let34, let121, let142], 1
                have lean_s487 : let914 := by timed modusPonens lean_s485 lean_s486
                have lean_s488 : let632 := by timed trueElim lean_r284
                have lean_s489 : let775 := by timed Eq.symm lean_r80
                have lean_s490 : let322 := by timed eqResolve lean_a330 lean_s489
                have lean_s491 : let918 := by timed And.intro lean_s488 lean_s490
                have lean_s492 : let919 := by arithMulPos [let51, let121, let136], 1
                have lean_s493 : let917 := by timed modusPonens lean_s491 lean_s492
                have lean_s494 : let433 := by timed trueElim lean_r146
                have lean_s495 : let996 := by timed And.intro lean_s494 lean_a331
                have lean_s496 : let997 := by arithMulNeg [x1, let81, let139], 3
                have lean_s497 : let995 := by timed modusPonens lean_s495 lean_s496
                have lean_s498 : let494 := by timed trueElim lean_r187
                have lean_s499 : let723 := by timed Eq.symm lean_r108
                have lean_s500 : let374 := by timed eqResolve lean_a332 lean_s499
                have lean_s501 : let909 := by timed And.intro lean_s498 lean_s500
                have lean_s502 : let910 := by arithMulPos [let74, let121, let137], 1
                have lean_s503 : let908 := by timed modusPonens lean_s501 lean_s502
                have lean_s504 : let631 := by timed trueElim lean_r283
                have lean_s505 : let761 := by timed Eq.symm lean_r53
                have lean_s506 : let262 := by timed eqResolve lean_a333 lean_s505
                have lean_s507 : let906 := by timed And.intro lean_s504 lean_s506
                have lean_s508 : let907 := by arithMulNeg [let6, let121, let202], 3
                have lean_s509 : let905 := by timed modusPonens lean_s507 lean_s508
                have lean_s510 : let316 := by timed trueElim lean_r76
                have lean_s511 : let111 := by timed eqResolve lean_a294 lean_s109
                have lean_s512 : let4 := by andElim lean_s511, 6
                have lean_s513 : let882 := by timed Eq.symm lean_r228
                have lean_s514 : let553 := by timed eqResolve lean_s512 lean_s513
                have lean_s515 : let903 := by timed And.intro lean_s510 lean_s514
                have lean_s516 : let904 := by arithMulPos [x6, let121, let315], 1
                have lean_s517 : let902 := by timed modusPonens lean_s515 lean_s516
                have lean_s518 : let994 := by sumBounds [lean_s481, lean_s487, lean_s493, lean_s497, lean_s503, lean_s509, lean_s517]
                have lean_s519 : (Eq let140 let140) := by timed rfl
                let lean_s520 := by timed congrHAdd lean_r39 lean_r275
                let lean_s521 := by timed congrHAdd lean_r277 lean_s520
                let lean_s522 := by timed congrHAdd lean_s519 lean_s521
                let lean_s523 := by timed congrHAdd lean_r281 lean_s522
                let lean_s524 := by timed congrHAdd lean_r278 lean_s523
                have lean_s525 : (Eq let993 let146) := by timed congrHAdd lean_r282 lean_s524
                have lean_s526 : (Eq let993 let121) := by timed Eq.trans lean_s525 lean_r10
                let lean_s527 := by timed flipCongrArg lean_s526 [LE.le]
                let lean_s528 := by timed congrHAdd lean_r273 lean_r119
                let lean_s529 := by timed congrHAdd lean_r274 lean_s528
                let lean_s530 := by timed congrHAdd lean_r11 lean_s529
                let lean_s531 := by timed congrHAdd lean_r78 lean_s530
                let lean_s532 := by timed congrHAdd lean_r153 lean_s531
                have lean_s533 : (Eq let992 let150) := by timed congrHAdd lean_r194 lean_s532
                have lean_s534 : (Eq let992 let130) := by timed Eq.trans lean_s533 lean_r12
                have lean_s535 : (Eq let994 let151) := by timed congr lean_s527 lean_s534
                have lean_s536 : (Eq let994 False) := by timed Eq.trans lean_s535 lean_r13
                show False from by timed eqResolve lean_s518 lean_s536
  ))))))))))))))
have lean_s477 : (Not (And let39 let987)) := by liftOrNToNeg lean_s476
have lean_s478 : (Or let406 let986) := by timed flipNotAnd lean_s477 [let39, let56, let82, let78, let7, let4, let30]
have lean_s479 : (Or let396 let891) := by permutateOr lean_s478, [2, 3, 1, 0, 6, 4, 5], (- 1)
let lean_s480 := by R1 lean_s475, lean_s479, let30, [(- 1), (- 1)]
let lean_s481 := by R2 lean_s480, lean_s473, let82, [(- 1), 0]
have lean_s482 : (Or let328 (Or let549 (Or let406 (Or let509 let887)))) := by R2 lean_s481, lean_s166, let4, [(- 1), 0]
have lean_s483 : let887 := by factor lean_s482, (- 1)
let lean_s484 := by R2 lean_s483, lean_s156, let39, [(- 1), (- 1)]
let lean_s485 := by R2 lean_s484, lean_s146, let40, [(- 1), (- 1)]
let lean_s486 := by R1 lean_s485, lean_s143, let47, [(- 1), (- 1)]
let lean_s487 := by R1 lean_s117, lean_s122, let31, [(- 1), (- 1)]
let lean_s488 := by R1 lean_s487, lean_s119, let25, [(- 1), (- 1)]
have lean_s489 : (Or let338 let988) :=
  (scope (fun lean_a329 : let46 =>
    (scope (fun lean_a330 : let56 =>
      (scope (fun lean_a331 : let82 =>
        (scope (fun lean_a332 : let78 =>
          (scope (fun lean_a333 : let7 =>
            (scope (fun lean_a334 : let4 =>
              (scope (fun lean_a335 : let30 =>
                have lean_s489 : let373 := by timed trueElim lean_r106
                have lean_s490 : let753 := by timed Eq.symm lean_r132
                have lean_s491 : let412 := by timed eqResolve lean_a335 lean_s490
                have lean_s492 : let921 := by timed And.intro lean_s489 lean_s491
                have lean_s493 : let922 := by arithMulPos [let27, let121, let117], 1
                have lean_s494 : let920 := by timed modusPonens lean_s492 lean_s493
                have lean_s495 : let163 := by timed trueElim lean_r15
                have lean_s496 : let765 := by timed Eq.symm lean_r33
                have lean_s497 : let191 := by timed eqResolve lean_a329 lean_s496
                have lean_s498 : let984 := by timed And.intro lean_s495 lean_s497
                have lean_s499 : let985 := by arithMulPos [let42, let121, let158], 1
                have lean_s500 : let983 := by timed modusPonens lean_s498 lean_s499
                have lean_s501 : let164 := by timed trueElim lean_r16
                have lean_s502 : let775 := by timed Eq.symm lean_r80
                have lean_s503 : let322 := by timed eqResolve lean_a330 lean_s502
                have lean_s504 : let981 := by timed And.intro lean_s501 lean_s503
                have lean_s505 : let982 := by arithMulPos [let51, let121, let153], 1
                have lean_s506 : let980 := by timed modusPonens lean_s504 lean_s505
                have lean_s507 : let165 := by timed trueElim lean_r17
                have lean_s508 : let978 := by timed And.intro lean_s507 lean_a331
                have lean_s509 : let979 := by arithMulNeg [x1, let81, let156], 3
                have lean_s510 : let977 := by timed modusPonens lean_s508 lean_s509
                have lean_s511 : let486 := by timed trueElim lean_r179
                have lean_s512 : let723 := by timed Eq.symm lean_r108
                have lean_s513 : let374 := by timed eqResolve lean_a332 lean_s512
                have lean_s514 : let975 := by timed And.intro lean_s511 lean_s513
                have lean_s515 : let976 := by arithMulPos [let74, let121, let154], 1
                have lean_s516 : let974 := by timed modusPonens lean_s514 lean_s515
                have lean_s517 : let631 := by timed trueElim lean_r283
                have lean_s518 : let761 := by timed Eq.symm lean_r53
                have lean_s519 : let262 := by timed eqResolve lean_a333 lean_s518
                have lean_s520 : let906 := by timed And.intro lean_s517 lean_s519
                have lean_s521 : let907 := by arithMulNeg [let6, let121, let202], 3
                have lean_s522 : let905 := by timed modusPonens lean_s520 lean_s521
                have lean_s523 : let316 := by timed trueElim lean_r76
                have lean_s524 : let111 := by timed eqResolve lean_a294 lean_s109
                have lean_s525 : let4 := by andElim lean_s524, 6
                have lean_s526 : let882 := by timed Eq.symm lean_r228
                have lean_s527 : let553 := by timed eqResolve lean_s525 lean_s526
                have lean_s528 : let903 := by timed And.intro lean_s523 lean_s527
                have lean_s529 : let904 := by arithMulPos [x6, let121, let315], 1
                have lean_s530 : let902 := by timed modusPonens lean_s528 lean_s529
                have lean_s531 : let991 := by sumBounds [lean_s494, lean_s500, lean_s506, lean_s510, lean_s516, lean_s522, lean_s530]
                have lean_s532 : (Eq let157 let157) := by timed rfl
                let lean_s533 := by timed congrHAdd lean_r39 lean_r275
                let lean_s534 := by timed congrHAdd lean_r74 lean_s533
                let lean_s535 := by timed congrHAdd lean_s532 lean_s534
                let lean_s536 := by timed congrHAdd lean_r18 lean_s535
                let lean_s537 := by timed congrHAdd lean_r72 lean_s536
                have lean_s538 : (Eq let990 let162) := by timed congrHAdd lean_r282 lean_s537
                have lean_s539 : (Eq let990 let121) := by timed Eq.trans lean_s538 lean_r14
                let lean_s540 := by timed flipCongrArg lean_s539 [LE.le]
                let lean_s541 := by timed congrHAdd lean_r273 lean_r119
                let lean_s542 := by timed congrHAdd lean_r23 lean_s541
                let lean_s543 := by timed congrHAdd lean_r22 lean_s542
                let lean_s544 := by timed congrHAdd lean_r21 lean_s543
                let lean_s545 := by timed congrHAdd lean_r20 lean_s544
                have lean_s546 : (Eq let989 let423) := by timed congrHAdd lean_r194 lean_s545
                have lean_s547 : (Eq let989 let173) := by timed Eq.trans lean_s546 lean_r140
                have lean_s548 : (Eq let991 let177) := by timed congr lean_s540 lean_s547
                have lean_s549 : (Eq let991 False) := by timed Eq.trans lean_s548 lean_r25
                show False from by timed eqResolve lean_s531 lean_s549
  ))))))))))))))
have lean_s490 : (Not (And let46 let987)) := by liftOrNToNeg lean_s489
have lean_s491 : (Or let338 let986) := by timed flipNotAnd lean_s490 [let46, let56, let82, let78, let7, let4, let30]
have lean_s492 : (Or let396 (Or let328 (Or let549 (Or let338 let890)))) := by permutateOr lean_s491, [2, 3, 1, 0, 6, 4, 5], (- 1)
let lean_s493 := by R1 lean_s488, lean_s492, let30, [(- 1), (- 1)]
let lean_s494 := by R2 lean_s493, lean_s473, let82, [(- 1), 0]
let lean_s495 := by R2 lean_s494, lean_s166, let4, [(- 1), 0]
have lean_s496 : (Or let338 let970) :=
  (scope (fun lean_a329 : let46 =>
    (scope (fun lean_a330 : let56 =>
      (scope (fun lean_a331 : let4 =>
        (scope (fun lean_a332 : let7 =>
          (scope (fun lean_a333 : let82 =>
            (scope (fun lean_a334 : let78 =>
              (scope (fun lean_a335 : let24 =>
                have lean_s496 : let373 := by timed trueElim lean_r106
                have lean_s497 : let854 := by timed Eq.symm lean_r248
                have lean_s498 : let581 := by timed eqResolve lean_a335 lean_s497
                have lean_s499 : let938 := by timed And.intro lean_s496 lean_s498
                have lean_s500 : let939 := by arithMulPos [let20, let121, let117], 1
                have lean_s501 : let937 := by timed modusPonens lean_s499 lean_s500
                have lean_s502 : let163 := by timed trueElim lean_r15
                have lean_s503 : let765 := by timed Eq.symm lean_r33
                have lean_s504 : let191 := by timed eqResolve lean_a329 lean_s503
                have lean_s505 : let984 := by timed And.intro lean_s502 lean_s504
                have lean_s506 : let985 := by arithMulPos [let42, let121, let158], 1
                have lean_s507 : let983 := by timed modusPonens lean_s505 lean_s506
                have lean_s508 : let164 := by timed trueElim lean_r16
                have lean_s509 : let775 := by timed Eq.symm lean_r80
                have lean_s510 : let322 := by timed eqResolve lean_a330 lean_s509
                have lean_s511 : let981 := by timed And.intro lean_s508 lean_s510
                have lean_s512 : let982 := by arithMulPos [let51, let121, let153], 1
                have lean_s513 : let980 := by timed modusPonens lean_s511 lean_s512
                have lean_s514 : let279 := by timed trueElim lean_r61
                have lean_s515 : let111 := by timed eqResolve lean_a294 lean_s109
                have lean_s516 : let4 := by andElim lean_s515, 6
                have lean_s517 : let882 := by timed Eq.symm lean_r228
                have lean_s518 : let553 := by timed eqResolve lean_s516 lean_s517
                have lean_s519 : let935 := by timed And.intro lean_s514 lean_s518
                have lean_s520 : let936 := by arithMulPos [x6, let121, let278], 1
                have lean_s521 : let934 := by timed modusPonens lean_s519 lean_s520
                have lean_s522 : let634 := by timed trueElim lean_r286
                have lean_s523 : let761 := by timed Eq.symm lean_r53
                have lean_s524 : let262 := by timed eqResolve lean_a332 lean_s523
                have lean_s525 : let932 := by timed And.intro lean_s522 lean_s524
                have lean_s526 : let933 := by arithMulNeg [let6, let121, let519], 3
                have lean_s527 : let931 := by timed modusPonens lean_s525 lean_s526
                have lean_s528 : let165 := by timed trueElim lean_r17
                have lean_s529 : let978 := by timed And.intro lean_s528 lean_a333
                have lean_s530 : let979 := by arithMulNeg [x1, let81, let156], 3
                have lean_s531 : let977 := by timed modusPonens lean_s529 lean_s530
                have lean_s532 : let486 := by timed trueElim lean_r179
                have lean_s533 : let723 := by timed Eq.symm lean_r108
                have lean_s534 : let374 := by timed eqResolve lean_a334 lean_s533
                have lean_s535 : let975 := by timed And.intro lean_s532 lean_s534
                have lean_s536 : let976 := by arithMulPos [let74, let121, let154], 1
                have lean_s537 : let974 := by timed modusPonens lean_s535 lean_s536
                have lean_s538 : let973 := by sumBounds [lean_s501, lean_s507, lean_s513, lean_s521, lean_s527, lean_s531, lean_s537]
                have lean_s539 : (Eq let157 let157) := by timed rfl
                let lean_s540 := by timed congrHAdd lean_s539 lean_r74
                let lean_s541 := by timed congrHAdd lean_r204 lean_s540
                let lean_s542 := by timed congrHAdd lean_r133 lean_s541
                let lean_s543 := by timed congrHAdd lean_r18 lean_s542
                let lean_s544 := by timed congrHAdd lean_r72 lean_s543
                have lean_s545 : (Eq let972 let170) := by timed congrHAdd lean_r82 lean_s544
                have lean_s546 : (Eq let972 let121) := by timed Eq.trans lean_s545 lean_r19
                let lean_s547 := by timed flipCongrArg lean_s546 [LE.le]
                let lean_s548 := by timed congrHAdd lean_r22 lean_r23
                let lean_s549 := by timed congrHAdd lean_r219 lean_s548
                let lean_s550 := by timed congrHAdd lean_r94 lean_s549
                let lean_s551 := by timed congrHAdd lean_r21 lean_s550
                let lean_s552 := by timed congrHAdd lean_r20 lean_s551
                have lean_s553 : (Eq let971 let176) := by timed congrHAdd lean_r194 lean_s552
                have lean_s554 : (Eq let971 let173) := by timed Eq.trans lean_s553 lean_r24
                have lean_s555 : (Eq let973 let177) := by timed congr lean_s547 lean_s554
                have lean_s556 : (Eq let973 False) := by timed Eq.trans lean_s555 lean_r25
                show False from by timed eqResolve lean_s538 lean_s556
  ))))))))))))))
have lean_s497 : (Not (And let46 let969)) := by liftOrNToNeg lean_s496
have lean_s498 : (Or let338 let968) := by timed flipNotAnd lean_s497 [let46, let56, let4, let7, let82, let78, let24]
have lean_s499 : (Or let396 (Or let328 (Or let549 (Or let338 let923)))) := by permutateOr lean_s498, [4, 5, 1, 0, 6, 3, 2], (- 1)
let lean_s500 := by R1 lean_s495, lean_s499, let24, [(- 1), (- 1)]
let lean_s501 := by R2 lean_s500, lean_s473, let82, [(- 1), 0]
have lean_s502 : (Or let328 (Or let549 (Or let338 (Or let509 let967)))) := by R2 lean_s501, lean_s166, let4, [(- 1), 0]
have lean_s503 : let967 := by factor lean_s502, (- 1)
let lean_s504 := by R2 lean_s503, lean_s452, let56, [(- 1), (- 1)]
let lean_s505 := by R2 lean_s504, lean_s130, let82, [(- 1), (- 1)]
let lean_s506 := by R2 lean_s505, lean_s132, let85, [(- 1), (- 1)]
let lean_s507 := by R1 lean_s506, lean_s134, let90, [(- 1), (- 1)]
let lean_s508 := by R1 lean_s507, lean_s137, let87, [(- 1), (- 1)]
have lean_s509 : (Or let328 (Or let338 let965)) := by R2 lean_s508, lean_s469, let84, [(- 1), 0]
have lean_s510 : (Or let328 let966) := by factor lean_s509, 3
let lean_s511 := by R1 lean_s486, lean_s510, let46, [(- 1), (- 1)]
let lean_s512 := by R2 lean_s511, lean_s452, let56, [(- 1), (- 1)]
let lean_s513 := by R2 lean_s512, lean_s130, let82, [(- 1), (- 1)]
let lean_s514 := by R2 lean_s513, lean_s132, let85, [(- 1), (- 1)]
let lean_s515 := by R1 lean_s514, lean_s134, let90, [(- 1), (- 1)]
let lean_s516 := by R1 lean_s515, lean_s137, let87, [(- 1), (- 1)]
have lean_s517 : (Or let328 (Or let509 (Or let328 let965))) := by R2 lean_s516, lean_s469, let84, [(- 1), 0]
have lean_s518 : (Or let328 let509) := by factor lean_s517, 4
let lean_s519 := by R2 lean_s250, lean_s247, let17, [(- 1), (- 1)]
let lean_s520 := by R1 lean_s519, lean_s186, let14, [(- 1), (- 1)]
let lean_s521 := by R2 lean_s520, lean_s166, let4, [(- 1), 0]
have lean_s522 : (Or let7 let7) := by R1 lean_s521, lean_s244, let11, [(- 1), (- 1)]
have lean_s523 : let7 := by factor lean_s522, 1
have lean_s524 : let328 := by R2 lean_s518, lean_s523, let7, [(- 1), 0]
have lean_s525 : let683 := by R1 lean_s115, lean_s524, let78, [(- 1), 0]
have lean_s526 : let71 := by R1 lean_s113, lean_s525, let79, [(- 1), 0]
have lean_s527 : let70 := by R2 lean_s4, lean_s526, let71, [(- 1), 0]
let lean_s528 := by R2 lean_s2, lean_s527, let70, [(- 1), 0]
have lean_s529 : let75 := by R1 lean_s428, lean_s524, let78, [(- 1), 0]
let lean_s530 := by R2 lean_s528, lean_s529, let75, [(- 1), 0]
exact (show False from by R2 lean_s530, lean_s473, let82, [0, 0])


