open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5f3 : Rat}
variable {xx5f1 : Rat}
variable {xx5f5 : Rat}
variable {xx5f7 : Rat}
variable {xx5f2 : Rat}
variable {xx5f6 : Rat}
variable {xx5f5 : Rat}
variable {xx5f0 : Rat}
variable {xx5f1 : Rat}
variable {xx5f4 : Rat}
variable {xx5f0 : Rat}
variable {xx5f6 : Rat}
variable {xx5f2 : Rat}
variable {xx5f4 : Rat}
variable {xx5f3 : Rat}
variable {xx5f7 : Rat}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (binrel% GT.gt let2 let1)
  let let4 := (Int.ofNat 1986005990)
  let let5 := (Int.ofNat 1002004006003)
  let let6 := (binrel% HDiv.hDiv let5 let4)
  let let7 := (binrel% GT.gt let6 let1)
  let let8 := (Int.ofNat 2)
  let let9 := (Int.ofNat 1001)
  let let10 := (Int.ofNat 1998)
  let let11 := (binrel% HDiv.hDiv let10 let9)
  let let12 := (Neg.neg let11)
  let let13 := (Int.ofNat 1)
  let let14 := (Neg.neg let13)
  let let15 := (binrel% HMul.hMul let14 xx5f4)
  let let16 := (binrel% GE.ge (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 xx5f5) (binrel% HMul.hMul let11 xx5f6))) let8)
  let let17 := (Rat.ofInt 2)
  let let18 := (Neg.neg let17)
  let let19 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 xx5f5) (binrel% HMul.hMul let12 xx5f6)))
  let let20 := (binrel% LE.le let19 let18)
  let let21 := (Int.ofNat 993002995)
  let let22 := (binrel% HDiv.hDiv (Int.ofNat 2001997998) let21)
  let let23 := (Neg.neg let22)
  let let24 := (binrel% LT.lt let23 let1)
  let let25 := (Rat.ofInt 0)
  let let26 := (binrel% LE.le xx5f3 let25)
  let let27 := (Not let26)
  let let28 := (binrel% GT.gt xx5f3 let25)
  let let29 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 599203597599) (Int.ofNat 397201198)))
  let let30 := (binrel% LT.lt let29 let1)
  let let31 := (binrel% LE.le xx5f5 let25)
  let let32 := (Not let31)
  let let33 := (binrel% GT.gt xx5f5 let25)
  let let34 := (binrel% HDiv.hDiv (Int.ofNat 1000001999997) let21)
  let let35 := (binrel% HAdd.hAdd (binrel% HMul.hMul let6 xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 xx5f5) (binrel% HMul.hMul (Neg.neg let34) xx5f6)))
  let let36 := (binrel% HMul.hMul let6 let19)
  let let37 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1502499497499) (Int.ofNat 496501497500)))
  let let38 := (Int.ofNat 1000)
  let let39 := (binrel% HDiv.hDiv (Int.ofNat 1501) let38)
  let let40 := (Neg.neg let39)
  let let41 := (binrel% HMul.hMul let22 let40)
  let let42 := (Neg.neg (binrel% HDiv.hDiv let5 let21))
  let let43 := (binrel% HMul.hMul let6 let18)
  let let44 := (binrel% HMul.hMul let29 let25)
  let let45 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 405875687624406) (Int.ofNat 124125374375)))
  let let46 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1006000002007) let4))
  let let47 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 7005) (Int.ofNat 4)))
  let let48 := (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let25 let25)))))
  let let49 := (Not True)
  let let50 := (binrel% HMul.hMul let14 xx5f5)
  let let51 := (binrel% GE.ge let50 let1)
  let let52 := (Eq let51 let51)
  let let53 := (binrel% HMul.hMul let14 xx5f3)
  let let54 := (binrel% GE.ge let53 let1)
  let let55 := (Eq let54 let54)
  let let56 := (Int.ofNat 999)
  let let57 := (binrel% HDiv.hDiv let9 let56)
  let let58 := (binrel% HDiv.hDiv let8 let56)
  let let59 := (binrel% HMul.hMul let58 xx5f7)
  let let60 := (binrel% HAdd.hAdd xx5f6 let59)
  let let61 := (binrel% GE.ge (binrel% HAdd.hAdd let15 let60) (Neg.neg let57))
  let let62 := (Not let61)
  let let63 := (Not let62)
  let let64 := (Eq let61 let63)
  let let65 := (Eq let63 let61)
  let let66 := (Eq let61 let61)
  let let67 := (binrel% HDiv.hDiv let56 let8)
  let let68 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd (binrel% HMul.hMul let67 xx5f5) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 xx5f6) xx5f7)))
  let let69 := (binrel% GE.ge let68 let47)
  let let70 := (Not let69)
  let let71 := (Not let70)
  let let72 := (Eq let69 let71)
  let let73 := (Eq let71 let69)
  let let74 := (binrel% HDiv.hDiv let56 let9)
  let let75 := (binrel% HMul.hMul let14 xx5f6)
  let let76 := (binrel% GE.ge (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let75 (binrel% HMul.hMul let74 xx5f7)))) let39)
  let let77 := (binrel% HAdd.hAdd xx5f3 (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg let74) xx5f7))))
  let let78 := (binrel% LE.le let77 let40)
  let let79 := (Eq let69 let69)
  let let80 := (Int.ofNat 1502501)
  let let81 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let80 (Int.ofNat 999000)) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 xx5f3) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 xx5f5) (binrel% HMul.hMul let57 xx5f6))))
  let let82 := (binrel% HDiv.hDiv let13 let56)
  let let83 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let80 let38) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 xx5f3) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 xx5f5) (binrel% HMul.hMul let9 xx5f6))))
  let let84 := (binrel% HMul.hMul let83 let82)
  let let85 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd let75 (binrel% HMul.hMul (Neg.neg let58) xx5f7)))
  let let86 := (binrel% LE.le let85 let57)
  let let87 := (Not let86)
  let let88 := (binrel% GT.gt let85 let57)
  let let89 := (Neg.neg let2)
  let let90 := (binrel% HMul.hMul let89 let2)
  let let91 := (binrel% HSub.hSub xx5f4 xx5f6)
  let let92 := (binrel% HAdd.hAdd let91 let90)
  let let93 := (binrel% HSub.hSub let91 let2)
  let let94 := (binrel% HDiv.hDiv let9 let38)
  let let95 := (Neg.neg let94)
  let let96 := (binrel% HMul.hMul let14 xx5f1)
  let let97 := (binrel% HAdd.hAdd xx5f0 let96)
  let let98 := (binrel% GE.ge let97 let95)
  let let99 := (binrel% HAdd.hAdd let94 xx5f0)
  let let100 := (binrel% LE.le xx5f1 let99)
  let let101 := (binrel% HAdd.hAdd xx5f0 let94)
  let let102 := (binrel% HMul.hMul let14 xx5f2)
  let let103 := (binrel% HAdd.hAdd xx5f0 let102)
  let let104 := (binrel% GE.ge let103 let95)
  let let105 := (binrel% LE.le xx5f2 let99)
  let let106 := (binrel% HMul.hMul (binrel% HDiv.hDiv let9 let10) xx5f4)
  let let107 := (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let106 xx5f5))
  let let108 := (binrel% HAdd.hAdd let57 let106)
  let let109 := (binrel% HAdd.hAdd xx5f5 let108)
  let let110 := (binrel% HMul.hMul let23 let25)
  let let111 := (binrel% HDiv.hDiv (Int.ofNat 1003990011993) let4)
  let let112 := (Neg.neg let111)
  let let113 := (binrel% HMul.hMul let112 let57)
  let let114 := (binrel% HMul.hMul let2 let47)
  let let115 := (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let110 let44)))))
  let let116 := (binrel% HMul.hMul let29 xx5f5)
  let let117 := (binrel% HMul.hMul let23 xx5f3)
  let let118 := (binrel% HAdd.hAdd let117 let116)
  let let119 := (binrel% HMul.hMul let112 let85)
  let let120 := (binrel% HMul.hMul let22 let77)
  let let121 := (binrel% HMul.hMul let2 let68)
  let let122 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let119 let118))))
  let let123 := (binrel% GE.ge let122 let115)
  let let124 := (Not let123)
  let let125 := (binrel% LT.lt let122 let115)
  let let126 := (binrel% HDiv.hDiv let56 let38)
  let let127 := (binrel% HAdd.hAdd let126 xx5f0)
  let let128 := (binrel% HAdd.hAdd xx5f0 let126)
  let let129 := (binrel% HAdd.hAdd let25 let96)
  let let130 := (binrel% HAdd.hAdd (binrel% HMul.hMul let112 xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 xx5f6) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1004995007) let21) xx5f7)))
  let let131 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f3) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f5) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f6) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1997998002) let21)) xx5f7))))
  let let132 := (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let130 let118))))
  let let133 := (binrel% HDiv.hDiv (Rat.ofInt 2335) (Rat.ofInt 666))
  let let134 := (Rat.ofInt 999)
  let let135 := (binrel% HDiv.hDiv let2 let134)
  let let136 := (binrel% HAdd.hAdd xx5f7 xx5f4)
  let let137 := (binrel% HMul.hMul let136 let17)
  let let138 := (binrel% HMul.hMul let137 let135)
  let let139 := (binrel% HAdd.hAdd xx5f5 xx5f6)
  let let140 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let139 let138) let133)
  let let141 := (binrel% HSub.hSub let2 let2)
  let let142 := (binrel% LE.le let141 let140)
  let let143 := (Not let142)
  let let144 := (Or let143 let143)
  let let145 := (Or let143 (Or let143 let144))
  let let146 := (Or (Or let144 let143) let143)
  let let147 := (binrel% HDiv.hDiv let13 let8)
  let let148 := (binrel% HDiv.hDiv let2 let17)
  let let149 := (Not let76)
  let let150 := (Not let149)
  let let151 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd xx5f3 let139))
  let let152 := (binrel% HAdd.hAdd xx5f3 (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd xx5f6 let39)))
  let let153 := (binrel% HMul.hMul let14 xx5f0)
  let let154 := (binrel% HAdd.hAdd let153 xx5f2)
  let let155 := (binrel% GE.ge let154 let126)
  let let156 := (binrel% LE.le let127 xx5f2)
  let let157 := (binrel% GE.ge let102 let95)
  let let158 := (binrel% GE.ge xx5f2 let126)
  let let159 := (binrel% GE.ge let96 let95)
  let let160 := (binrel% GE.ge xx5f1 let126)
  let let161 := (And let160 (And let159 (And let158 (And let157 let70))))
  let let162 := (Not let51)
  let let163 := (binrel% GE.ge let15 let1)
  let let164 := (Not let163)
  let let165 := (Not let54)
  let let166 := (And let165 (And let164 (And let162 (And let16 (And let62 (And let76 let161))))))
  let let167 := (And let165 (And let164 (And let162 (And let16 (And let62 (And let76 (And True let161)))))))
  let let168 := (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd let138 let133)))
  let let169 := (binrel% LE.le xx5f4 let25)
  let let170 := (binrel% HAdd.hAdd let153 xx5f1)
  let let171 := (binrel% GE.ge let170 let126)
  let let172 := (binrel% LE.le let127 xx5f1)
  let let173 := (binrel% GT.gt let22 let1)
  let let174 := (binrel% HAdd.hAdd xx5f4 xx5f7)
  let let175 := (binrel% GE.ge xx5f7 let81)
  let let176 := (binrel% HAdd.hAdd let25 xx5f2)
  let let177 := (binrel% HDiv.hDiv (Int.ofNat 2335) (Int.ofNat 666))
  let let178 := (binrel% HMul.hMul let14 let25)
  let let179 := (Not let165)
  let let180 := (Eq let179 let54)
  let let181 := (Rat.ofInt 1000)
  let let182 := (Rat.ofInt 1001)
  let let183 := (binrel% HDiv.hDiv let182 let181)
  let let184 := (binrel% HAdd.hAdd xx5f4 let75)
  let let185 := (binrel% HAdd.hAdd let14 let184)
  let let186 := (binrel% HAdd.hAdd let184 let89)
  let let187 := (Not let162)
  let let188 := (Eq let51 let187)
  let let189 := (Eq let187 let51)
  let let190 := (binrel% HDiv.hDiv let134 let181)
  let let191 := (binrel% HMul.hMul let58 xx5f4)
  let let192 := (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd xx5f5 let60)))
  let let193 := (binrel% HAdd.hAdd let191 let59)
  let let194 := (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd let193 let177)))
  let let195 := (binrel% GE.ge let25 let45)
  let let196 := (binrel% HAdd.hAdd let25 let102)
  let let197 := (binrel% LT.lt let112 let1)
  let let198 := (binrel% HMul.hMul let93 let134)
  let let199 := (binrel% HMul.hMul let198 let148)
  let let200 := (binrel% HAdd.hAdd let199 let90)
  let let201 := (binrel% HSub.hSub let199 let2)
  let let202 := (binrel% HAdd.hAdd let25 xx5f1)
  let let203 := (binrel% HMul.hMul let147 xx5f4)
  let let204 := (binrel% HMul.hMul xx5f4 let147)
  let let205 := (binrel% HAdd.hAdd (binrel% HMul.hMul let8 xx5f4) (binrel% HMul.hMul let8 xx5f7))
  let let206 := (binrel% HMul.hMul let205 let82)
  let let207 := (binrel% LT.lt let68 let47)
  let let208 := (Eq let25 let25)
  let let209 := (binrel% HMul.hMul let151 let182)
  let let210 := (Neg.neg let67)
  let let211 := (binrel% HAdd.hAdd (binrel% HMul.hMul let67 xx5f4) (binrel% HMul.hMul let210 xx5f6))
  let let212 := (binrel% HDiv.hDiv let9 let8)
  let let213 := (binrel% HAdd.hAdd (Neg.neg let212) let211)
  let let214 := (binrel% HAdd.hAdd let210 let211)
  let let215 := (binrel% HAdd.hAdd let214 let89)
  let let216 := (binrel% HMul.hMul xx5f4 let2)
  let let217 := (binrel% HDiv.hDiv (Rat.ofInt 1501) let181)
  let let218 := (binrel% HAdd.hAdd xx5f3 (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd xx5f6 let217)))
  let let219 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd xx5f3 xx5f5) xx5f6) let217)
  let let220 := (binrel% LE.le let25 let192)
  let let221 := (Neg.neg let56)
  let let222 := (binrel% HAdd.hAdd let221 (binrel% HAdd.hAdd (binrel% HMul.hMul let56 xx5f4) (binrel% HMul.hMul let221 xx5f6)))
  let let223 := (binrel% HMul.hMul let185 let134)
  let let224 := (binrel% HMul.hMul let219 let182)
  let let225 := (binrel% HMul.hMul let224 let135)
  let let226 := (binrel% GE.ge xx5f7 let225)
  let let227 := (Not let226)
  let let228 := (binrel% LT.lt xx5f7 let225)
  let let229 := (Eq let54 let179)
  let let230 := (binrel% GE.ge xx5f7 let213)
  let let231 := (binrel% HMul.hMul let89 xx5f6)
  let let232 := (binrel% HAdd.hAdd xx5f4 let231)
  let let233 := (binrel% HAdd.hAdd let13 let203)
  let let234 := (binrel% HAdd.hAdd let203 let2)
  let let235 := (Not let16)
  let let236 := (Not let235)
  let let237 := (binrel% HMul.hMul let222 let147)
  let let238 := (binrel% GE.ge xx5f7 let201)
  let let239 := (Not let238)
  let let240 := (binrel% LT.lt xx5f7 let201)
  let let241 := (binrel% HMul.hMul let174 let17)
  let let242 := (binrel% GE.ge xx5f6 let107)
  let let243 := (binrel% HAdd.hAdd let9 (binrel% HMul.hMul let212 xx5f4))
  let let244 := (binrel% HMul.hMul let243 let82)
  let let245 := (binrel% HMul.hMul let233 let182)
  let let246 := (binrel% HMul.hMul let216 let148)
  let let247 := (binrel% HAdd.hAdd let246 let2)
  let let248 := (binrel% HMul.hMul let247 let182)
  let let249 := (binrel% HMul.hMul let248 let135)
  let let250 := (binrel% HAdd.hAdd xx5f5 let249)
  let let251 := (binrel% GE.ge xx5f6 let250)
  let let252 := (Not let251)
  let let253 := (binrel% LT.lt xx5f6 let250)
  let let254 := (binrel% HAdd.hAdd xx5f0 let183)
  let let255 := (binrel% LE.le xx5f2 let254)
  let let256 := (binrel% HAdd.hAdd xx5f0 let190)
  let let257 := (binrel% LE.le let256 xx5f2)
  let let258 := (binrel% LE.le xx5f1 let254)
  let let259 := (binrel% LE.le let256 xx5f1)
  let let260 := (Eq xx5f0 let25)
  let let261 := (Not let228)
  let let262 := (Not let253)
  let let263 := (Not let169)
  let let264 := (And let27 (And let263 (And let32 (And let262 (And let240 (And let261 (And let260 (And let259 (And let258 (And let257 (And let255 let146)))))))))))
  let let265 := (And (And (And (And (And (And (And (And (And (And (And let27 let263) let32) let262) let240) let261) let260) let259) let258) let257) let255) let146)
  let let266 := (And let165 (And let164 (And let162 (And let16 (And let62 (And let76 (And let260 (And let171 (And let98 (And let155 (And let104 let70)))))))))))
  let let267 := (binrel% GE.ge let196 let95)
  let let268 := (binrel% HAdd.hAdd let178 xx5f2)
  let let269 := (binrel% GE.ge let268 let126)
  let let270 := (binrel% GE.ge let129 let95)
  let let271 := (binrel% HAdd.hAdd let178 xx5f1)
  let let272 := (binrel% GE.ge let271 let126)
  let let273 := (And let165 (And let164 (And let162 (And let16 (And let62 (And let76 (And let208 (And let272 (And let270 (And let269 (And let267 let70)))))))))))
  let let274 := (Eq let70 let70)
  let let275 := (Eq let95 let95)
  let let276 := (Eq And And)
  let let277 := (Eq let126 let126)
  let let278 := (Eq xx5f2 xx5f2)
  let let279 := (Eq xx5f1 xx5f1)
  let let280 := (Eq let76 let76)
  let let281 := (Eq let62 let62)
  let let282 := (Eq let16 let16)
  let let283 := (Eq let162 let162)
  let let284 := (Eq let164 let164)
  let let285 := (Eq let165 let165)
  let let286 := (Or let149 let69)
  let let287 := (Or let51 (Or let54 (Or let61 (Or let235 let286))))
  let let288 := (Or let187 (Or let179 (Or let63 (Or let235 (Or let149 let71)))))
  let let289 := (Not let207)
  let let290 := (binrel% LT.lt let116 let44)
  let let291 := (And let30 let33)
  let let292 := (binrel% LT.lt let117 let110)
  let let293 := (And let24 let28)
  let let294 := (binrel% LT.lt let119 let113)
  let let295 := (And let197 let88)
  let let296 := (binrel% LE.le let36 let43)
  let let297 := (And let7 let20)
  let let298 := (binrel% LE.le let120 let41)
  let let299 := (And let173 let78)
  let let300 := (binrel% LT.lt let121 let114)
  let let301 := (And let3 let207)
(Eq let3 True) → (Eq let7 True) → (Eq let20 let16) → (Eq let24 True) → (Eq let28 let27) → (Eq let30 True) → (Eq let33 let32) → (Eq let36 let35) → (Eq let41 let37) → (Eq let43 let42) → (Eq let44 let25) → (Eq let48 let45) → (Eq let49 False) → (Eq let52 True) → (Eq let55 True) → (Eq let65 let64) → (Eq let66 True) → (Eq let73 let72) → (Eq let78 let76) → (Eq let79 True) → (Eq let84 let81) → (Eq let88 let87) → (Eq let93 let92) → (Eq let100 let98) → (Eq let101 let99) → (Eq let105 let104) → (Eq let109 let107) → (Eq let125 let124) → (Eq let128 let127) → (Eq let129 let96) → (Eq let132 let25) → (Eq let146 let145) → (Eq let148 let147) → (Eq let150 let76) → (Eq let152 let151) → (Eq let120 let131) → (Eq let156 let155) → (Eq let167 let166) → (Eq let140 let168) → (Eq let169 let163) → (Eq let172 let171) → (Eq let173 True) → let73 → (Eq let136 let174) → (Eq let113 let46) → (Eq let175 let76) → (Eq let176 xx5f2) → (Eq let114 let47) → (Eq let133 let177) → (Eq let178 let25) → let180 → (Eq let183 let94) → (Eq let186 let185) → (Eq let189 let188) → (Eq let190 let126) → (Eq let110 let25) → (Eq let194 let192) → (Eq let121 let68) → (Eq let195 True) → (Eq let196 let102) → (Eq let135 let82) → (Eq let197 True) → (Eq let201 let200) → (Eq let202 xx5f1) → (Eq let119 let130) → (Eq let204 let203) → (Eq let145 let143) → (Eq let206 let193) → (Eq let207 let70) → (Eq let208 True) → (Eq let209 let83) → let189 → (Eq let215 let213) → (Eq let216 xx5f4) → (Eq let141 let25) → (Eq let217 let39) → (Eq let219 let218) → (Eq let220 let69) → (Eq let223 let222) → let65 → (Eq let228 let227) → (Eq let180 let229) → (Eq let230 let61) → (Eq let86 let61) → (Eq let91 let232) → (Eq let234 let233) → (Eq let90 let89) → (Eq let236 let16) → (Eq let237 let214) → (Eq let231 let75) → (Eq let240 let239) → (Eq let241 let205) → (Eq let242 let16) → (Eq let244 let108) → (Eq let245 let243) → (Eq let253 let252) → (Eq let31 let51) → (Eq let26 let54) → (Eq let265 let264) → let265 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Rat.ofInt 1)
  let let3 := (binrel% GT.gt let2 let1)
  let let4 := (Int.ofNat 1986005990)
  let let5 := (Int.ofNat 1002004006003)
  let let6 := (binrel% HDiv.hDiv let5 let4)
  let let7 := (binrel% GT.gt let6 let1)
  let let8 := (Int.ofNat 2)
  let let9 := (Int.ofNat 1001)
  let let10 := (Int.ofNat 1998)
  let let11 := (binrel% HDiv.hDiv let10 let9)
  let let12 := (Neg.neg let11)
  let let13 := (Int.ofNat 1)
  let let14 := (Neg.neg let13)
  let let15 := (binrel% HMul.hMul let14 xx5f4)
  let let16 := (binrel% GE.ge (binrel% HAdd.hAdd let15 (binrel% HAdd.hAdd (binrel% HMul.hMul let12 xx5f5) (binrel% HMul.hMul let11 xx5f6))) let8)
  let let17 := (Rat.ofInt 2)
  let let18 := (Neg.neg let17)
  let let19 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd (binrel% HMul.hMul let11 xx5f5) (binrel% HMul.hMul let12 xx5f6)))
  let let20 := (binrel% LE.le let19 let18)
  let let21 := (Int.ofNat 993002995)
  let let22 := (binrel% HDiv.hDiv (Int.ofNat 2001997998) let21)
  let let23 := (Neg.neg let22)
  let let24 := (binrel% LT.lt let23 let1)
  let let25 := (Rat.ofInt 0)
  let let26 := (binrel% LE.le xx5f3 let25)
  let let27 := (Not let26)
  let let28 := (binrel% GT.gt xx5f3 let25)
  let let29 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 599203597599) (Int.ofNat 397201198)))
  let let30 := (binrel% LT.lt let29 let1)
  let let31 := (binrel% LE.le xx5f5 let25)
  let let32 := (Not let31)
  let let33 := (binrel% GT.gt xx5f5 let25)
  let let34 := (binrel% HDiv.hDiv (Int.ofNat 1000001999997) let21)
  let let35 := (binrel% HAdd.hAdd (binrel% HMul.hMul let6 xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul let34 xx5f5) (binrel% HMul.hMul (Neg.neg let34) xx5f6)))
  let let36 := (binrel% HMul.hMul let6 let19)
  let let37 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1502499497499) (Int.ofNat 496501497500)))
  let let38 := (Int.ofNat 1000)
  let let39 := (binrel% HDiv.hDiv (Int.ofNat 1501) let38)
  let let40 := (Neg.neg let39)
  let let41 := (binrel% HMul.hMul let22 let40)
  let let42 := (Neg.neg (binrel% HDiv.hDiv let5 let21))
  let let43 := (binrel% HMul.hMul let6 let18)
  let let44 := (binrel% HMul.hMul let29 let25)
  let let45 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 405875687624406) (Int.ofNat 124125374375)))
  let let46 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1006000002007) let4))
  let let47 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 7005) (Int.ofNat 4)))
  let let48 := (binrel% HAdd.hAdd let47 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let42 (binrel% HAdd.hAdd let46 (binrel% HAdd.hAdd let25 let25)))))
  let let49 := (Not True)
  let let50 := (binrel% HMul.hMul let14 xx5f5)
  let let51 := (binrel% GE.ge let50 let1)
  let let52 := (Eq let51 let51)
  let let53 := (binrel% HMul.hMul let14 xx5f3)
  let let54 := (binrel% GE.ge let53 let1)
  let let55 := (Eq let54 let54)
  let let56 := (Int.ofNat 999)
  let let57 := (binrel% HDiv.hDiv let9 let56)
  let let58 := (binrel% HDiv.hDiv let8 let56)
  let let59 := (binrel% HMul.hMul let58 xx5f7)
  let let60 := (binrel% HAdd.hAdd xx5f6 let59)
  let let61 := (binrel% GE.ge (binrel% HAdd.hAdd let15 let60) (Neg.neg let57))
  let let62 := (Not let61)
  let let63 := (Not let62)
  let let64 := (Eq let61 let63)
  let let65 := (Eq let63 let61)
  let let66 := (Eq let61 let61)
  let let67 := (binrel% HDiv.hDiv let56 let8)
  let let68 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd (binrel% HMul.hMul let67 xx5f5) (binrel% HAdd.hAdd (binrel% HMul.hMul let67 xx5f6) xx5f7)))
  let let69 := (binrel% GE.ge let68 let47)
  let let70 := (Not let69)
  let let71 := (Not let70)
  let let72 := (Eq let69 let71)
  let let73 := (Eq let71 let69)
  let let74 := (binrel% HDiv.hDiv let56 let9)
  let let75 := (binrel% HMul.hMul let14 xx5f6)
  let let76 := (binrel% GE.ge (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let75 (binrel% HMul.hMul let74 xx5f7)))) let39)
  let let77 := (binrel% HAdd.hAdd xx5f3 (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg let74) xx5f7))))
  let let78 := (binrel% LE.le let77 let40)
  let let79 := (Eq let69 let69)
  let let80 := (Int.ofNat 1502501)
  let let81 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let80 (Int.ofNat 999000)) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 xx5f3) (binrel% HAdd.hAdd (binrel% HMul.hMul let57 xx5f5) (binrel% HMul.hMul let57 xx5f6))))
  let let82 := (binrel% HDiv.hDiv let13 let56)
  let let83 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let80 let38) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 xx5f3) (binrel% HAdd.hAdd (binrel% HMul.hMul let9 xx5f5) (binrel% HMul.hMul let9 xx5f6))))
  let let84 := (binrel% HMul.hMul let83 let82)
  let let85 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd let75 (binrel% HMul.hMul (Neg.neg let58) xx5f7)))
  let let86 := (binrel% LE.le let85 let57)
  let let87 := (Not let86)
  let let88 := (binrel% GT.gt let85 let57)
  let let89 := (Neg.neg let2)
  let let90 := (binrel% HMul.hMul let89 let2)
  let let91 := (binrel% HSub.hSub xx5f4 xx5f6)
  let let92 := (binrel% HAdd.hAdd let91 let90)
  let let93 := (binrel% HSub.hSub let91 let2)
  let let94 := (binrel% HDiv.hDiv let9 let38)
  let let95 := (Neg.neg let94)
  let let96 := (binrel% HMul.hMul let14 xx5f1)
  let let97 := (binrel% HAdd.hAdd xx5f0 let96)
  let let98 := (binrel% GE.ge let97 let95)
  let let99 := (binrel% HAdd.hAdd let94 xx5f0)
  let let100 := (binrel% LE.le xx5f1 let99)
  let let101 := (binrel% HAdd.hAdd xx5f0 let94)
  let let102 := (binrel% HMul.hMul let14 xx5f2)
  let let103 := (binrel% HAdd.hAdd xx5f0 let102)
  let let104 := (binrel% GE.ge let103 let95)
  let let105 := (binrel% LE.le xx5f2 let99)
  let let106 := (binrel% HMul.hMul (binrel% HDiv.hDiv let9 let10) xx5f4)
  let let107 := (binrel% HAdd.hAdd let57 (binrel% HAdd.hAdd let106 xx5f5))
  let let108 := (binrel% HAdd.hAdd let57 let106)
  let let109 := (binrel% HAdd.hAdd xx5f5 let108)
  let let110 := (binrel% HMul.hMul let23 let25)
  let let111 := (binrel% HDiv.hDiv (Int.ofNat 1003990011993) let4)
  let let112 := (Neg.neg let111)
  let let113 := (binrel% HMul.hMul let112 let57)
  let let114 := (binrel% HMul.hMul let2 let47)
  let let115 := (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let41 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let110 let44)))))
  let let116 := (binrel% HMul.hMul let29 xx5f5)
  let let117 := (binrel% HMul.hMul let23 xx5f3)
  let let118 := (binrel% HAdd.hAdd let117 let116)
  let let119 := (binrel% HMul.hMul let112 let85)
  let let120 := (binrel% HMul.hMul let22 let77)
  let let121 := (binrel% HMul.hMul let2 let68)
  let let122 := (binrel% HAdd.hAdd let121 (binrel% HAdd.hAdd let120 (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let119 let118))))
  let let123 := (binrel% GE.ge let122 let115)
  let let124 := (Not let123)
  let let125 := (binrel% LT.lt let122 let115)
  let let126 := (binrel% HDiv.hDiv let56 let38)
  let let127 := (binrel% HAdd.hAdd let126 xx5f0)
  let let128 := (binrel% HAdd.hAdd xx5f0 let126)
  let let129 := (binrel% HAdd.hAdd let25 let96)
  let let130 := (binrel% HAdd.hAdd (binrel% HMul.hMul let112 xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul let111 xx5f6) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1004995007) let21) xx5f7)))
  let let131 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f3) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f5) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f6) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1997998002) let21)) xx5f7))))
  let let132 := (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let131 (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd let130 let118))))
  let let133 := (binrel% HDiv.hDiv (Rat.ofInt 2335) (Rat.ofInt 666))
  let let134 := (Rat.ofInt 999)
  let let135 := (binrel% HDiv.hDiv let2 let134)
  let let136 := (binrel% HAdd.hAdd xx5f7 xx5f4)
  let let137 := (binrel% HMul.hMul let136 let17)
  let let138 := (binrel% HMul.hMul let137 let135)
  let let139 := (binrel% HAdd.hAdd xx5f5 xx5f6)
  let let140 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let139 let138) let133)
  let let141 := (binrel% HSub.hSub let2 let2)
  let let142 := (binrel% LE.le let141 let140)
  let let143 := (Not let142)
  let let144 := (Or let143 let143)
  let let145 := (Or let143 (Or let143 let144))
  let let146 := (Or (Or let144 let143) let143)
  let let147 := (binrel% HDiv.hDiv let13 let8)
  let let148 := (binrel% HDiv.hDiv let2 let17)
  let let149 := (Not let76)
  let let150 := (Not let149)
  let let151 := (binrel% HAdd.hAdd let39 (binrel% HAdd.hAdd xx5f3 let139))
  let let152 := (binrel% HAdd.hAdd xx5f3 (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd xx5f6 let39)))
  let let153 := (binrel% HMul.hMul let14 xx5f0)
  let let154 := (binrel% HAdd.hAdd let153 xx5f2)
  let let155 := (binrel% GE.ge let154 let126)
  let let156 := (binrel% LE.le let127 xx5f2)
  let let157 := (binrel% GE.ge let102 let95)
  let let158 := (binrel% GE.ge xx5f2 let126)
  let let159 := (binrel% GE.ge let96 let95)
  let let160 := (binrel% GE.ge xx5f1 let126)
  let let161 := (And let160 (And let159 (And let158 (And let157 let70))))
  let let162 := (Not let51)
  let let163 := (binrel% GE.ge let15 let1)
  let let164 := (Not let163)
  let let165 := (Not let54)
  let let166 := (And let165 (And let164 (And let162 (And let16 (And let62 (And let76 let161))))))
  let let167 := (And let165 (And let164 (And let162 (And let16 (And let62 (And let76 (And True let161)))))))
  let let168 := (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd let138 let133)))
  let let169 := (binrel% LE.le xx5f4 let25)
  let let170 := (binrel% HAdd.hAdd let153 xx5f1)
  let let171 := (binrel% GE.ge let170 let126)
  let let172 := (binrel% LE.le let127 xx5f1)
  let let173 := (binrel% GT.gt let22 let1)
  let let174 := (binrel% HAdd.hAdd xx5f4 xx5f7)
  let let175 := (binrel% GE.ge xx5f7 let81)
  let let176 := (binrel% HAdd.hAdd let25 xx5f2)
  let let177 := (binrel% HDiv.hDiv (Int.ofNat 2335) (Int.ofNat 666))
  let let178 := (binrel% HMul.hMul let14 let25)
  let let179 := (Not let165)
  let let180 := (Eq let179 let54)
  let let181 := (Rat.ofInt 1000)
  let let182 := (Rat.ofInt 1001)
  let let183 := (binrel% HDiv.hDiv let182 let181)
  let let184 := (binrel% HAdd.hAdd xx5f4 let75)
  let let185 := (binrel% HAdd.hAdd let14 let184)
  let let186 := (binrel% HAdd.hAdd let184 let89)
  let let187 := (Not let162)
  let let188 := (Eq let51 let187)
  let let189 := (Eq let187 let51)
  let let190 := (binrel% HDiv.hDiv let134 let181)
  let let191 := (binrel% HMul.hMul let58 xx5f4)
  let let192 := (binrel% HAdd.hAdd let177 (binrel% HAdd.hAdd let191 (binrel% HAdd.hAdd xx5f5 let60)))
  let let193 := (binrel% HAdd.hAdd let191 let59)
  let let194 := (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd let193 let177)))
  let let195 := (binrel% GE.ge let25 let45)
  let let196 := (binrel% HAdd.hAdd let25 let102)
  let let197 := (binrel% LT.lt let112 let1)
  let let198 := (binrel% HMul.hMul let93 let134)
  let let199 := (binrel% HMul.hMul let198 let148)
  let let200 := (binrel% HAdd.hAdd let199 let90)
  let let201 := (binrel% HSub.hSub let199 let2)
  let let202 := (binrel% HAdd.hAdd let25 xx5f1)
  let let203 := (binrel% HMul.hMul let147 xx5f4)
  let let204 := (binrel% HMul.hMul xx5f4 let147)
  let let205 := (binrel% HAdd.hAdd (binrel% HMul.hMul let8 xx5f4) (binrel% HMul.hMul let8 xx5f7))
  let let206 := (binrel% HMul.hMul let205 let82)
  let let207 := (binrel% LT.lt let68 let47)
  let let208 := (Eq let25 let25)
  let let209 := (binrel% HMul.hMul let151 let182)
  let let210 := (Neg.neg let67)
  let let211 := (binrel% HAdd.hAdd (binrel% HMul.hMul let67 xx5f4) (binrel% HMul.hMul let210 xx5f6))
  let let212 := (binrel% HDiv.hDiv let9 let8)
  let let213 := (binrel% HAdd.hAdd (Neg.neg let212) let211)
  let let214 := (binrel% HAdd.hAdd let210 let211)
  let let215 := (binrel% HAdd.hAdd let214 let89)
  let let216 := (binrel% HMul.hMul xx5f4 let2)
  let let217 := (binrel% HDiv.hDiv (Rat.ofInt 1501) let181)
  let let218 := (binrel% HAdd.hAdd xx5f3 (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd xx5f6 let217)))
  let let219 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd xx5f3 xx5f5) xx5f6) let217)
  let let220 := (binrel% LE.le let25 let192)
  let let221 := (Neg.neg let56)
  let let222 := (binrel% HAdd.hAdd let221 (binrel% HAdd.hAdd (binrel% HMul.hMul let56 xx5f4) (binrel% HMul.hMul let221 xx5f6)))
  let let223 := (binrel% HMul.hMul let185 let134)
  let let224 := (binrel% HMul.hMul let219 let182)
  let let225 := (binrel% HMul.hMul let224 let135)
  let let226 := (binrel% GE.ge xx5f7 let225)
  let let227 := (Not let226)
  let let228 := (binrel% LT.lt xx5f7 let225)
  let let229 := (Eq let54 let179)
  let let230 := (binrel% GE.ge xx5f7 let213)
  let let231 := (binrel% HMul.hMul let89 xx5f6)
  let let232 := (binrel% HAdd.hAdd xx5f4 let231)
  let let233 := (binrel% HAdd.hAdd let13 let203)
  let let234 := (binrel% HAdd.hAdd let203 let2)
  let let235 := (Not let16)
  let let236 := (Not let235)
  let let237 := (binrel% HMul.hMul let222 let147)
  let let238 := (binrel% GE.ge xx5f7 let201)
  let let239 := (Not let238)
  let let240 := (binrel% LT.lt xx5f7 let201)
  let let241 := (binrel% HMul.hMul let174 let17)
  let let242 := (binrel% GE.ge xx5f6 let107)
  let let243 := (binrel% HAdd.hAdd let9 (binrel% HMul.hMul let212 xx5f4))
  let let244 := (binrel% HMul.hMul let243 let82)
  let let245 := (binrel% HMul.hMul let233 let182)
  let let246 := (binrel% HMul.hMul let216 let148)
  let let247 := (binrel% HAdd.hAdd let246 let2)
  let let248 := (binrel% HMul.hMul let247 let182)
  let let249 := (binrel% HMul.hMul let248 let135)
  let let250 := (binrel% HAdd.hAdd xx5f5 let249)
  let let251 := (binrel% GE.ge xx5f6 let250)
  let let252 := (Not let251)
  let let253 := (binrel% LT.lt xx5f6 let250)
  let let254 := (binrel% HAdd.hAdd xx5f0 let183)
  let let255 := (binrel% LE.le xx5f2 let254)
  let let256 := (binrel% HAdd.hAdd xx5f0 let190)
  let let257 := (binrel% LE.le let256 xx5f2)
  let let258 := (binrel% LE.le xx5f1 let254)
  let let259 := (binrel% LE.le let256 xx5f1)
  let let260 := (Eq xx5f0 let25)
  let let261 := (Not let228)
  let let262 := (Not let253)
  let let263 := (Not let169)
  let let264 := (And let27 (And let263 (And let32 (And let262 (And let240 (And let261 (And let260 (And let259 (And let258 (And let257 (And let255 let146)))))))))))
  let let265 := (And (And (And (And (And (And (And (And (And (And (And let27 let263) let32) let262) let240) let261) let260) let259) let258) let257) let255) let146)
  let let266 := (And let165 (And let164 (And let162 (And let16 (And let62 (And let76 (And let260 (And let171 (And let98 (And let155 (And let104 let70)))))))))))
  let let267 := (binrel% GE.ge let196 let95)
  let let268 := (binrel% HAdd.hAdd let178 xx5f2)
  let let269 := (binrel% GE.ge let268 let126)
  let let270 := (binrel% GE.ge let129 let95)
  let let271 := (binrel% HAdd.hAdd let178 xx5f1)
  let let272 := (binrel% GE.ge let271 let126)
  let let273 := (And let165 (And let164 (And let162 (And let16 (And let62 (And let76 (And let208 (And let272 (And let270 (And let269 (And let267 let70)))))))))))
  let let274 := (Eq let70 let70)
  let let275 := (Eq let95 let95)
  let let276 := (Eq And And)
  let let277 := (Eq let126 let126)
  let let278 := (Eq xx5f2 xx5f2)
  let let279 := (Eq xx5f1 xx5f1)
  let let280 := (Eq let76 let76)
  let let281 := (Eq let62 let62)
  let let282 := (Eq let16 let16)
  let let283 := (Eq let162 let162)
  let let284 := (Eq let164 let164)
  let let285 := (Eq let165 let165)
  let let286 := (Or let149 let69)
  let let287 := (Or let51 (Or let54 (Or let61 (Or let235 let286))))
  let let288 := (Or let187 (Or let179 (Or let63 (Or let235 (Or let149 let71)))))
  let let289 := (Not let207)
  let let290 := (binrel% LT.lt let116 let44)
  let let291 := (And let30 let33)
  let let292 := (binrel% LT.lt let117 let110)
  let let293 := (And let24 let28)
  let let294 := (binrel% LT.lt let119 let113)
  let let295 := (And let197 let88)
  let let296 := (binrel% LE.le let36 let43)
  let let297 := (And let7 let20)
  let let298 := (binrel% LE.le let120 let41)
  let let299 := (And let173 let78)
  let let300 := (binrel% LT.lt let121 let114)
  let let301 := (And let3 let207)
fun lean_r0 : (Eq let3 True) => -- EVALUATE
fun lean_r1 : (Eq let7 True) => -- EVALUATE
fun lean_r2 : (Eq let20 let16) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let24 True) => -- EVALUATE
fun lean_r4 : (Eq let28 let27) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let30 True) => -- EVALUATE
fun lean_r6 : (Eq let33 let32) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let36 let35) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let41 let37) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let43 let42) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let44 let25) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let48 let45) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let49 False) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let52 True) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let55 True) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let65 let64) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq let66 True) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let73 let72) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let78 let76) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let79 True) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let84 let81) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let88 let87) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let93 let92) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let100 let98) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let101 let99) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let105 let104) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let109 let107) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let125 let124) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let128 let127) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let129 let96) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let132 let25) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let146 let145) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let148 let147) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let150 let76) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let152 let151) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let120 let131) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let156 let155) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let167 let166) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq let140 let168) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let169 let163) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let172 let171) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let173 True) => -- EVALUATE
fun lean_r42 : let73 => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let136 let174) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let113 let46) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let175 let76) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let176 xx5f2) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let114 let47) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let133 let177) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let178 let25) => -- THEORY_REWRITE_ARITH
fun lean_r50 : let180 => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq let183 let94) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let186 let185) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let189 let188) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let190 let126) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let110 let25) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let194 let192) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let121 let68) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let195 True) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let196 let102) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let135 let82) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let197 True) => -- EVALUATE
fun lean_r62 : (Eq let201 let200) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let202 xx5f1) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let119 let130) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let204 let203) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let145 let143) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq let206 let193) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let207 let70) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let208 True) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let209 let83) => -- THEORY_REWRITE_ARITH
fun lean_r71 : let189 => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let215 let213) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let216 xx5f4) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let141 let25) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let217 let39) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let219 let218) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let220 let69) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let223 let222) => -- THEORY_REWRITE_ARITH
fun lean_r79 : let65 => -- THEORY_REWRITE_BOOL
fun lean_r80 : (Eq let228 let227) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let180 let229) => -- THEORY_REWRITE_BOOL
fun lean_r82 : (Eq let230 let61) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let86 let61) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let91 let232) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let234 let233) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let90 let89) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let236 let16) => -- THEORY_REWRITE_BOOL
fun lean_r88 : (Eq let237 let214) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let231 let75) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let240 let239) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let241 let205) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let242 let16) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let244 let108) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let245 let243) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let253 let252) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let31 let51) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let26 let54) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let265 let264) => -- THEORY_REWRITE_BOOL
fun lean_a99 : let265 => by
have lean_s0 : (Or let187 (Or let179 (Or let63 (Or let235 (Or let149 (Or let71 False)))))) :=
  (scope (fun lean_a100 : let162 =>
    (scope (fun lean_a101 : let165 =>
      (scope (fun lean_a102 : let62 =>
        (scope (fun lean_a103 : let16 =>
          (scope (fun lean_a104 : let76 =>
            (scope (fun lean_a105 : let70 =>
              have lean_s0 : (Eq let70 let207) := by timed Eq.symm lean_r68
              have lean_s1 : let207 := by timed eqResolve lean_a105 lean_s0
              have lean_s2 : (Or let289 False) :=
                (scope (fun lean_a106 : let207 =>
                  have lean_s2 : let3 := by timed trueElim lean_r0
                  have lean_s3 : let301 := by timed And.intro lean_s2 lean_a106
                  have lean_s4 : (Implies let301 let300) := by arithMulPos [let68, let47, let2], 0
                  have lean_s5 : let300 := by timed modusPonens lean_s3 lean_s4
                  have lean_s6 : let173 := by timed trueElim lean_r41
                  have lean_s7 : (Eq let76 let78) := by timed Eq.symm lean_r18
                  have lean_s8 : let78 := by timed eqResolve lean_a104 lean_s7
                  have lean_s9 : let299 := by timed And.intro lean_s6 lean_s8
                  have lean_s10 : (Implies let299 let298) := by arithMulPos [let77, let40, let22], 1
                  have lean_s11 : let298 := by timed modusPonens lean_s9 lean_s10
                  have lean_s12 : let7 := by timed trueElim lean_r1
                  have lean_s13 : (Eq let16 let20) := by timed Eq.symm lean_r2
                  have lean_s14 : let20 := by timed eqResolve lean_a103 lean_s13
                  have lean_s15 : let297 := by timed And.intro lean_s12 lean_s14
                  have lean_s16 : (Implies let297 let296) := by arithMulPos [let19, let18, let6], 1
                  have lean_s17 : let296 := by timed modusPonens lean_s15 lean_s16
                  have lean_s18 : let197 := by timed trueElim lean_r61
                  have lean_s19 : (Eq let87 let62) := by timed flipCongrArg lean_r83 [Not]
                  have lean_s20 : (Eq let88 let62) := by timed Eq.trans lean_r21 lean_s19
                  have lean_s21 : (Eq let62 let88) := by timed Eq.symm lean_s20
                  have lean_s22 : let88 := by timed eqResolve lean_a102 lean_s21
                  have lean_s23 : let295 := by timed And.intro lean_s18 lean_s22
                  have lean_s24 : (Implies let295 let294) := by arithMulNeg [let85, let57, let112], 2
                  have lean_s25 : let294 := by timed modusPonens lean_s23 lean_s24
                  have lean_s26 : let24 := by timed trueElim lean_r3
                  have lean_s27 : (Eq let27 let165) := by timed flipCongrArg lean_r97 [Not]
                  have lean_s28 : (Eq let28 let165) := by timed Eq.trans lean_r4 lean_s27
                  have lean_s29 : (Eq let165 let28) := by timed Eq.symm lean_s28
                  have lean_s30 : let28 := by timed eqResolve lean_a101 lean_s29
                  have lean_s31 : let293 := by timed And.intro lean_s26 lean_s30
                  have lean_s32 : (Implies let293 let292) := by arithMulNeg [xx5f3, let25, let23], 2
                  have lean_s33 : let292 := by timed modusPonens lean_s31 lean_s32
                  have lean_s34 : let30 := by timed trueElim lean_r5
                  have lean_s35 : (Eq let32 let162) := by timed flipCongrArg lean_r96 [Not]
                  have lean_s36 : (Eq let33 let162) := by timed Eq.trans lean_r6 lean_s35
                  have lean_s37 : (Eq let162 let33) := by timed Eq.symm lean_s36
                  have lean_s38 : let33 := by timed eqResolve lean_a100 lean_s37
                  have lean_s39 : let291 := by timed And.intro lean_s34 lean_s38
                  have lean_s40 : (Implies let291 let290) := by arithMulNeg [xx5f5, let25, let29], 2
                  have lean_s41 : let290 := by timed modusPonens lean_s39 lean_s40
                  have lean_s42 : let125 := by sumBounds [lean_s5, lean_s11, lean_s17, lean_s25, lean_s33, lean_s41]
                  have lean_s43 : (Eq let117 let117) := by timed rfl
                  have lean_s44 : (Eq let116 let116) := by timed rfl
                  let lean_s45 := by timed congrHAdd lean_s43 lean_s44
                  let lean_s46 := by timed congrHAdd lean_r64 lean_s45
                  let lean_s47 := by timed congrHAdd lean_r7 lean_s46
                  let lean_s48 := by timed congrHAdd lean_r35 lean_s47
                  have lean_s49 : (Eq let122 let132) := by timed congrHAdd lean_r57 lean_s48
                  have lean_s50 : (Eq let122 let25) := by timed Eq.trans lean_s49 lean_r30
                  let lean_s51 := by timed flipCongrArg lean_s50 [GE.ge]
                  let lean_s52 := by timed congrHAdd lean_r55 lean_r10
                  let lean_s53 := by timed congrHAdd lean_r44 lean_s52
                  let lean_s54 := by timed congrHAdd lean_r9 lean_s53
                  let lean_s55 := by timed congrHAdd lean_r8 lean_s54
                  have lean_s56 : (Eq let115 let48) := by timed congrHAdd lean_r47 lean_s55
                  have lean_s57 : (Eq let115 let45) := by timed Eq.trans lean_s56 lean_r11
                  have lean_s58 : (Eq let123 let195) := by timed congr lean_s51 lean_s57
                  have lean_s59 : (Eq let123 True) := by timed Eq.trans lean_s58 lean_r58
                  have lean_s60 : (Eq let124 let49) := by timed flipCongrArg lean_s59 [Not]
                  have lean_s61 : (Eq let124 False) := by timed Eq.trans lean_s60 lean_r12
                  have lean_s62 : (Eq let125 False) := by timed Eq.trans lean_r27 lean_s61
                  show False from by timed eqResolve lean_s42 lean_s62
                ))
              have lean_s3 : let289 := by liftOrNToNeg lean_s2
              have lean_s4 : (Eq let289 let71) := by timed flipCongrArg lean_r68 [Not]
              have lean_s5 : (Eq let289 let69) := by timed Eq.trans lean_s4 lean_r42
              have lean_s6 : let69 := by timed eqResolve lean_s3 lean_s5
              have lean_s7 : (Eq let69 let289) := by timed Eq.symm lean_s5
              have lean_s8 : let289 := by timed eqResolve lean_s6 lean_s7
              show False from by timed contradiction lean_s1 lean_s8
  ))))))))))))
have lean_s1 : (Not (And let162 (And let165 (And let62 (And let16 (And let76 let70)))))) := by liftOrNToNeg lean_s0
have lean_s2 : let288 := by timed flipNotAnd lean_s1 [let162, let165, let62, let16, let76, let70]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let52 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let188 let52) := by timed congr lean_s5 lean_r71
have lean_s7 : (Eq let188 True) := by timed Eq.trans lean_s6 lean_r13
have lean_s8 : (Eq let189 True) := by timed Eq.trans lean_r53 lean_s7
have lean_s9 : let189 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let55 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let229 let55) := by timed congr lean_s12 lean_r50
have lean_s14 : (Eq let229 True) := by timed Eq.trans lean_s13 lean_r14
have lean_s15 : (Eq let180 True) := by timed Eq.trans lean_r81 lean_s14
have lean_s16 : let180 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : let66 := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq let64 let66) := by timed congr lean_s19 lean_r79
have lean_s21 : (Eq let64 True) := by timed Eq.trans lean_s20 lean_r16
have lean_s22 : (Eq let65 True) := by timed Eq.trans lean_r15 lean_s21
have lean_s23 : let65 := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : (Eq let235 let235) := by timed rfl
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : (Eq let149 let149) := by timed rfl
let lean_s28 := by timed congr lean_s3 lean_s27
have lean_s29 : let79 := by timed rfl
let lean_s30 := by timed flipCongrArg lean_s29 [Eq]
have lean_s31 : (Eq let72 let79) := by timed congr lean_s30 lean_r42
have lean_s32 : (Eq let72 True) := by timed Eq.trans lean_s31 lean_r19
have lean_s33 : (Eq let73 True) := by timed Eq.trans lean_r17 lean_s32
have lean_s34 : let73 := by timed trueElim lean_s33
let lean_s35 := by timed congr lean_s28 lean_s34
let lean_s36 := by timed congr lean_s26 lean_s35
let lean_s37 := by timed congr lean_s24 lean_s36
let lean_s38 := by timed congr lean_s17 lean_s37
have lean_s39 : (Eq let288 let287) := by timed congr lean_s10 lean_s38
have lean_s40 : let287 := by timed eqResolve lean_s2 lean_s39
have lean_s41 : (Or let54 (Or let51 (Or let235 (Or let61 let286)))) := by permutateOr lean_s40, [1, 0, 3, 2, 4, 5], (- 1)
have lean_s42 : let276 := by timed rfl
have lean_s43 : (Eq let27 let165) := by timed flipCongrArg lean_r97 [Not]
let lean_s44 := by timed congr lean_s42 lean_s43
have lean_s45 : (Eq let263 let164) := by timed flipCongrArg lean_r39 [Not]
let lean_s46 := by timed congr lean_s42 lean_s45
have lean_s47 : (Eq let32 let162) := by timed flipCongrArg lean_r96 [Not]
let lean_s48 := by timed congr lean_s42 lean_s47
have lean_s49 : (Eq xx5f6 xx5f6) := by timed rfl
let lean_s50 := by timed flipCongrArg lean_s49 [GE.ge]
have lean_s51 : (Eq xx5f5 xx5f5) := by timed rfl
let lean_s52 := by timed flipCongrArg lean_s51 [HAdd.hAdd]
let lean_s53 := by timed flipCongrArg lean_r73 [HMul.hMul]
have lean_s54 : (Eq let246 let204) := by timed congr lean_s53 lean_r32
have lean_s55 : (Eq let246 let203) := by timed Eq.trans lean_s54 lean_r65
let lean_s56 := by timed flipCongrArg lean_s55 [HAdd.hAdd]
have lean_s57 : (Eq let2 let2) := by timed rfl
have lean_s58 : (Eq let247 let234) := by timed congr lean_s56 lean_s57
have lean_s59 : (Eq let247 let233) := by timed Eq.trans lean_s58 lean_r85
let lean_s60 := by timed flipCongrArg lean_s59 [HMul.hMul]
have lean_s61 : (Eq let182 let182) := by timed rfl
have lean_s62 : (Eq let248 let245) := by timed congr lean_s60 lean_s61
have lean_s63 : (Eq let248 let243) := by timed Eq.trans lean_s62 lean_r94
let lean_s64 := by timed flipCongrArg lean_s63 [HMul.hMul]
have lean_s65 : (Eq let249 let244) := by timed congr lean_s64 lean_r60
have lean_s66 : (Eq let249 let108) := by timed Eq.trans lean_s65 lean_r93
have lean_s67 : (Eq let250 let109) := by timed congr lean_s52 lean_s66
have lean_s68 : (Eq let250 let107) := by timed Eq.trans lean_s67 lean_r26
have lean_s69 : (Eq let251 let242) := by timed congr lean_s50 lean_s68
have lean_s70 : (Eq let251 let16) := by timed Eq.trans lean_s69 lean_r92
have lean_s71 : (Eq let252 let235) := by timed flipCongrArg lean_s70 [Not]
have lean_s72 : (Eq let253 let235) := by timed Eq.trans lean_r95 lean_s71
have lean_s73 : (Eq let262 let236) := by timed flipCongrArg lean_s72 [Not]
have lean_s74 : (Eq let262 let16) := by timed Eq.trans lean_s73 lean_r87
let lean_s75 := by timed congr lean_s42 lean_s74
have lean_s76 : (Eq xx5f7 xx5f7) := by timed rfl
let lean_s77 := by timed flipCongrArg lean_s76 [GE.ge]
have lean_s78 : (Eq xx5f4 xx5f4) := by timed rfl
let lean_s79 := by timed flipCongrArg lean_s78 [HAdd.hAdd]
have lean_s80 : (Eq let232 let184) := by timed congr lean_s79 lean_r89
have lean_s81 : (Eq let91 let184) := by timed Eq.trans lean_r84 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [HAdd.hAdd]
have lean_s83 : (Eq let92 let186) := by timed congr lean_s82 lean_r86
have lean_s84 : (Eq let92 let185) := by timed Eq.trans lean_s83 lean_r52
have lean_s85 : (Eq let93 let185) := by timed Eq.trans lean_r22 lean_s84
let lean_s86 := by timed flipCongrArg lean_s85 [HMul.hMul]
have lean_s87 : (Eq let134 let134) := by timed rfl
have lean_s88 : (Eq let198 let223) := by timed congr lean_s86 lean_s87
have lean_s89 : (Eq let198 let222) := by timed Eq.trans lean_s88 lean_r78
let lean_s90 := by timed flipCongrArg lean_s89 [HMul.hMul]
have lean_s91 : (Eq let199 let237) := by timed congr lean_s90 lean_r32
have lean_s92 : (Eq let199 let214) := by timed Eq.trans lean_s91 lean_r88
let lean_s93 := by timed flipCongrArg lean_s92 [HAdd.hAdd]
have lean_s94 : (Eq let200 let215) := by timed congr lean_s93 lean_r86
have lean_s95 : (Eq let200 let213) := by timed Eq.trans lean_s94 lean_r72
have lean_s96 : (Eq let201 let213) := by timed Eq.trans lean_r62 lean_s95
have lean_s97 : (Eq let238 let230) := by timed congr lean_s77 lean_s96
have lean_s98 : (Eq let238 let61) := by timed Eq.trans lean_s97 lean_r82
have lean_s99 : (Eq let239 let62) := by timed flipCongrArg lean_s98 [Not]
have lean_s100 : (Eq let240 let62) := by timed Eq.trans lean_r90 lean_s99
let lean_s101 := by timed congr lean_s42 lean_s100
let lean_s102 := by timed flipCongrArg lean_s76 [GE.ge]
have lean_s103 : (Eq xx5f3 xx5f3) := by timed rfl
let lean_s104 := by timed congrHAdd lean_s49 lean_r75
let lean_s105 := by timed congrHAdd lean_s51 lean_s104
have lean_s106 : (Eq let218 let152) := by timed congrHAdd lean_s103 lean_s105
have lean_s107 : (Eq let218 let151) := by timed Eq.trans lean_s106 lean_r34
have lean_s108 : (Eq let219 let151) := by timed Eq.trans lean_r76 lean_s107
let lean_s109 := by timed flipCongrArg lean_s108 [HMul.hMul]
have lean_s110 : (Eq let224 let209) := by timed congr lean_s109 lean_s61
have lean_s111 : (Eq let224 let83) := by timed Eq.trans lean_s110 lean_r70
let lean_s112 := by timed flipCongrArg lean_s111 [HMul.hMul]
have lean_s113 : (Eq let225 let84) := by timed congr lean_s112 lean_r60
have lean_s114 : (Eq let225 let81) := by timed Eq.trans lean_s113 lean_r20
have lean_s115 : (Eq let226 let175) := by timed congr lean_s102 lean_s114
have lean_s116 : (Eq let226 let76) := by timed Eq.trans lean_s115 lean_r45
have lean_s117 : (Eq let227 let149) := by timed flipCongrArg lean_s116 [Not]
have lean_s118 : (Eq let228 let149) := by timed Eq.trans lean_r80 lean_s117
have lean_s119 : (Eq let261 let150) := by timed flipCongrArg lean_s118 [Not]
have lean_s120 : (Eq let261 let76) := by timed Eq.trans lean_s119 lean_r33
let lean_s121 := by timed congr lean_s42 lean_s120
have lean_s122 : (Eq let260 let260) := by timed rfl
let lean_s123 := by timed congr lean_s42 lean_s122
have lean_s124 : (Eq xx5f0 xx5f0) := by timed rfl
let lean_s125 := by timed flipCongrArg lean_s124 [HAdd.hAdd]
have lean_s126 : (Eq let256 let128) := by timed congr lean_s125 lean_r54
have lean_s127 : (Eq let256 let127) := by timed Eq.trans lean_s126 lean_r28
let lean_s128 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s129 : let279 := by timed rfl
have lean_s130 : (Eq let259 let172) := by timed congr lean_s128 lean_s129
have lean_s131 : (Eq let259 let171) := by timed Eq.trans lean_s130 lean_r40
let lean_s132 := by timed congr lean_s42 lean_s131
let lean_s133 := by timed flipCongrArg lean_s129 [LE.le]
let lean_s134 := by timed flipCongrArg lean_s124 [HAdd.hAdd]
have lean_s135 : (Eq let254 let101) := by timed congr lean_s134 lean_r51
have lean_s136 : (Eq let254 let99) := by timed Eq.trans lean_s135 lean_r24
have lean_s137 : (Eq let258 let100) := by timed congr lean_s133 lean_s136
have lean_s138 : (Eq let258 let98) := by timed Eq.trans lean_s137 lean_r23
let lean_s139 := by timed congr lean_s42 lean_s138
let lean_s140 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s141 : let278 := by timed rfl
have lean_s142 : (Eq let257 let156) := by timed congr lean_s140 lean_s141
have lean_s143 : (Eq let257 let155) := by timed Eq.trans lean_s142 lean_r36
let lean_s144 := by timed congr lean_s42 lean_s143
let lean_s145 := by timed flipCongrArg lean_s141 [LE.le]
have lean_s146 : (Eq let255 let105) := by timed congr lean_s145 lean_s136
have lean_s147 : (Eq let255 let104) := by timed Eq.trans lean_s146 lean_r25
let lean_s148 := by timed congr lean_s42 lean_s147
let lean_s149 := by timed flipCongrArg lean_r74 [LE.le]
let lean_s150 := by timed flipCongrArg lean_r43 [HMul.hMul]
have lean_s151 : (Eq let17 let17) := by timed rfl
have lean_s152 : (Eq let137 let241) := by timed congr lean_s150 lean_s151
have lean_s153 : (Eq let137 let205) := by timed Eq.trans lean_s152 lean_r91
let lean_s154 := by timed flipCongrArg lean_s153 [HMul.hMul]
have lean_s155 : (Eq let138 let206) := by timed congr lean_s154 lean_r60
have lean_s156 : (Eq let138 let193) := by timed Eq.trans lean_s155 lean_r67
let lean_s157 := by timed congrHAdd lean_s156 lean_r48
let lean_s158 := by timed congrHAdd lean_s49 lean_s157
have lean_s159 : (Eq let168 let194) := by timed congrHAdd lean_s51 lean_s158
have lean_s160 : (Eq let168 let192) := by timed Eq.trans lean_s159 lean_r56
have lean_s161 : (Eq let140 let192) := by timed Eq.trans lean_r38 lean_s160
have lean_s162 : (Eq let142 let220) := by timed congr lean_s149 lean_s161
have lean_s163 : (Eq let142 let69) := by timed Eq.trans lean_s162 lean_r77
have lean_s164 : (Eq let143 let70) := by timed flipCongrArg lean_s163 [Not]
have lean_s165 : (Eq let145 let70) := by timed Eq.trans lean_r66 lean_s164
have lean_s166 : (Eq let146 let70) := by timed Eq.trans lean_r31 lean_s165
let lean_s167 := by timed congr lean_s148 lean_s166
let lean_s168 := by timed congr lean_s144 lean_s167
let lean_s169 := by timed congr lean_s139 lean_s168
let lean_s170 := by timed congr lean_s132 lean_s169
let lean_s171 := by timed congr lean_s123 lean_s170
let lean_s172 := by timed congr lean_s121 lean_s171
let lean_s173 := by timed congr lean_s101 lean_s172
let lean_s174 := by timed congr lean_s75 lean_s173
let lean_s175 := by timed congr lean_s48 lean_s174
let lean_s176 := by timed congr lean_s46 lean_s175
have lean_s177 : (Eq let264 let266) := by timed congr lean_s44 lean_s176
have lean_s178 : (Eq let265 let266) := by timed Eq.trans lean_r98 lean_s177
have lean_s179 : let276 := by timed rfl
have lean_s180 : let285 := by timed rfl
let lean_s181 := by timed congr lean_s179 lean_s180
have lean_s182 : let284 := by timed rfl
let lean_s183 := by timed congr lean_s179 lean_s182
have lean_s184 : let283 := by timed rfl
let lean_s185 := by timed congr lean_s179 lean_s184
have lean_s186 : let282 := by timed rfl
let lean_s187 := by timed congr lean_s179 lean_s186
have lean_s188 : let281 := by timed rfl
let lean_s189 := by timed congr lean_s179 lean_s188
have lean_s190 : let280 := by timed rfl
let lean_s191 := by timed congr lean_s179 lean_s190
have lean_s192 : let266 := by timed eqResolve lean_a99 lean_s178
have lean_s193 : let260 := by andElim lean_s192, 6
let lean_s194 := by timed flipCongrArg lean_s193 [Eq]
have lean_s195 : let208 := by timed rfl
have lean_s196 : (Eq let260 let208) := by timed congr lean_s194 lean_s195
let lean_s197 := by timed congr lean_s179 lean_s196
have lean_s198 : (Eq let14 let14) := by timed rfl
let lean_s199 := by timed flipCongrArg lean_s198 [HMul.hMul]
have lean_s200 : (Eq let153 let178) := by timed congr lean_s199 lean_s193
let lean_s201 := by timed flipCongrArg lean_s200 [HAdd.hAdd]
have lean_s202 : let279 := by timed rfl
have lean_s203 : (Eq let170 let271) := by timed congr lean_s201 lean_s202
let lean_s204 := by timed flipCongrArg lean_s203 [GE.ge]
have lean_s205 : let277 := by timed rfl
have lean_s206 : (Eq let171 let272) := by timed congr lean_s204 lean_s205
let lean_s207 := by timed congr lean_s179 lean_s206
let lean_s208 := by timed flipCongrArg lean_s193 [HAdd.hAdd]
have lean_s209 : (Eq let96 let96) := by timed rfl
have lean_s210 : (Eq let97 let129) := by timed congr lean_s208 lean_s209
let lean_s211 := by timed flipCongrArg lean_s210 [GE.ge]
have lean_s212 : let275 := by timed rfl
have lean_s213 : (Eq let98 let270) := by timed congr lean_s211 lean_s212
let lean_s214 := by timed congr lean_s179 lean_s213
let lean_s215 := by timed flipCongrArg lean_s200 [HAdd.hAdd]
have lean_s216 : let278 := by timed rfl
have lean_s217 : (Eq let154 let268) := by timed congr lean_s215 lean_s216
let lean_s218 := by timed flipCongrArg lean_s217 [GE.ge]
have lean_s219 : (Eq let155 let269) := by timed congr lean_s218 lean_s205
let lean_s220 := by timed congr lean_s179 lean_s219
let lean_s221 := by timed flipCongrArg lean_s193 [HAdd.hAdd]
have lean_s222 : (Eq let102 let102) := by timed rfl
have lean_s223 : (Eq let103 let196) := by timed congr lean_s221 lean_s222
let lean_s224 := by timed flipCongrArg lean_s223 [GE.ge]
have lean_s225 : (Eq let104 let267) := by timed congr lean_s224 lean_s212
let lean_s226 := by timed congr lean_s179 lean_s225
have lean_s227 : let274 := by timed rfl
let lean_s228 := by timed congr lean_s226 lean_s227
let lean_s229 := by timed congr lean_s220 lean_s228
let lean_s230 := by timed congr lean_s214 lean_s229
let lean_s231 := by timed congr lean_s207 lean_s230
let lean_s232 := by timed congr lean_s197 lean_s231
let lean_s233 := by timed congr lean_s191 lean_s232
let lean_s234 := by timed congr lean_s189 lean_s233
let lean_s235 := by timed congr lean_s187 lean_s234
let lean_s236 := by timed congr lean_s185 lean_s235
let lean_s237 := by timed congr lean_s183 lean_s236
have lean_s238 : (Eq let266 let273) := by timed congr lean_s181 lean_s237
have lean_s239 : let276 := by timed rfl
have lean_s240 : let285 := by timed rfl
let lean_s241 := by timed congr lean_s239 lean_s240
have lean_s242 : let284 := by timed rfl
let lean_s243 := by timed congr lean_s239 lean_s242
have lean_s244 : let283 := by timed rfl
let lean_s245 := by timed congr lean_s239 lean_s244
have lean_s246 : let282 := by timed rfl
let lean_s247 := by timed congr lean_s239 lean_s246
have lean_s248 : let281 := by timed rfl
let lean_s249 := by timed congr lean_s239 lean_s248
have lean_s250 : let280 := by timed rfl
let lean_s251 := by timed congr lean_s239 lean_s250
let lean_s252 := by timed congr lean_s239 lean_r69
let lean_s253 := by timed flipCongrArg lean_r49 [HAdd.hAdd]
have lean_s254 : (Eq let271 let202) := by timed congr lean_s253 lean_s129
have lean_s255 : (Eq let271 xx5f1) := by timed Eq.trans lean_s254 lean_r63
let lean_s256 := by timed flipCongrArg lean_s255 [GE.ge]
have lean_s257 : let277 := by timed rfl
have lean_s258 : (Eq let272 let160) := by timed congr lean_s256 lean_s257
let lean_s259 := by timed congr lean_s239 lean_s258
let lean_s260 := by timed flipCongrArg lean_r29 [GE.ge]
have lean_s261 : let275 := by timed rfl
have lean_s262 : (Eq let270 let159) := by timed congr lean_s260 lean_s261
let lean_s263 := by timed congr lean_s239 lean_s262
let lean_s264 := by timed flipCongrArg lean_r49 [HAdd.hAdd]
have lean_s265 : (Eq let268 let176) := by timed congr lean_s264 lean_s141
have lean_s266 : (Eq let268 xx5f2) := by timed Eq.trans lean_s265 lean_r46
let lean_s267 := by timed flipCongrArg lean_s266 [GE.ge]
have lean_s268 : (Eq let269 let158) := by timed congr lean_s267 lean_s257
let lean_s269 := by timed congr lean_s239 lean_s268
let lean_s270 := by timed flipCongrArg lean_r59 [GE.ge]
have lean_s271 : (Eq let267 let157) := by timed congr lean_s270 lean_s261
let lean_s272 := by timed congr lean_s239 lean_s271
have lean_s273 : let274 := by timed rfl
let lean_s274 := by timed congr lean_s272 lean_s273
let lean_s275 := by timed congr lean_s269 lean_s274
let lean_s276 := by timed congr lean_s263 lean_s275
let lean_s277 := by timed congr lean_s259 lean_s276
let lean_s278 := by timed congr lean_s252 lean_s277
let lean_s279 := by timed congr lean_s251 lean_s278
let lean_s280 := by timed congr lean_s249 lean_s279
let lean_s281 := by timed congr lean_s247 lean_s280
let lean_s282 := by timed congr lean_s245 lean_s281
let lean_s283 := by timed congr lean_s243 lean_s282
have lean_s284 : (Eq let273 let167) := by timed congr lean_s241 lean_s283
have lean_s285 : (Eq let273 let166) := by timed Eq.trans lean_s284 lean_r37
have lean_s286 : (Eq let266 let166) := by timed Eq.trans lean_s238 lean_s285
have lean_s287 : (Eq let265 let166) := by timed Eq.trans lean_s178 lean_s286
have lean_s288 : let166 := by timed eqResolve lean_a99 lean_s287
have lean_s289 : let70 := by andElim lean_s288, 10
let lean_s290 := by R1 lean_s41, lean_s289, let69, [(- 1), 0]
have lean_s291 : let76 := by andElim lean_s288, 5
let lean_s292 := by R2 lean_s290, lean_s291, let76, [(- 1), 0]
have lean_s293 : let62 := by andElim lean_s288, 4
let lean_s294 := by R1 lean_s292, lean_s293, let61, [(- 1), 0]
have lean_s295 : let16 := by andElim lean_s288, 3
let lean_s296 := by R2 lean_s294, lean_s295, let16, [(- 1), 0]
have lean_s297 : let162 := by andElim lean_s288, 2
let lean_s298 := by R1 lean_s296, lean_s297, let51, [(- 1), 0]
have lean_s299 : let165 := by andElim lean_s288, 0
exact (show False from by R1 lean_s298, lean_s299, let54, [0, 0])


