open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5f7 : Rat}
variable {xx5f3 : Rat}
variable {xx5f4 : Rat}
variable {xx5f5 : Rat}
variable {xx5f0 : Rat}
variable {xx5f9 : Rat}
variable {xx5f6 : Rat}
variable {xx5f10 : Rat}
variable {xx5f8 : Rat}
variable {xx5f11 : Rat}
variable {xx5f11 : Rat}
variable {xx5f9 : Rat}
variable {xx5f0 : Rat}
variable {xx5f6 : Rat}
variable {xx5f1 : Rat}
variable {xx5f5 : Rat}
variable {xx5f4 : Rat}
variable {xx5f10 : Rat}
variable {xx5f8 : Rat}
variable {xx5f3 : Rat}
variable {xx5f2 : Rat}
variable {xx5f2 : Rat}
variable {xx5f1 : Rat}
variable {xx5f7 : Rat}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 993002995)
  let let3 := (binrel% HDiv.hDiv (Int.ofNat 2001997998) let2)
  let let4 := (binrel% GT.gt let3 let1)
  let let5 := (Int.ofNat 1986005990)
  let let6 := (Int.ofNat 1002004006003)
  let let7 := (binrel% HDiv.hDiv let6 let5)
  let let8 := (binrel% GT.gt let7 let1)
  let let9 := (Int.ofNat 999)
  let let10 := (Int.ofNat 1001)
  let let11 := (binrel% HDiv.hDiv let10 let9)
  let let12 := (Int.ofNat 2)
  let let13 := (binrel% HDiv.hDiv let12 let9)
  let let14 := (Int.ofNat 1)
  let let15 := (Neg.neg let14)
  let let16 := (binrel% HMul.hMul let15 xx5f10)
  let let17 := (binrel% HAdd.hAdd xx5f8 (binrel% HAdd.hAdd let16 (binrel% HMul.hMul (Neg.neg let13) xx5f11)))
  let let18 := (binrel% LE.le let17 let11)
  let let19 := (Not let18)
  let let20 := (binrel% GT.gt let17 let11)
  let let21 := (Neg.neg let3)
  let let22 := (binrel% LT.lt let21 let1)
  let let23 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 599203597599) (Int.ofNat 397201198)))
  let let24 := (binrel% LT.lt let23 let1)
  let let25 := (Rat.ofInt 0)
  let let26 := (binrel% HMul.hMul let23 let25)
  let let27 := (binrel% HMul.hMul let21 let25)
  let let28 := (binrel% HDiv.hDiv (Int.ofNat 1003990011993) let5)
  let let29 := (Neg.neg let28)
  let let30 := (binrel% HMul.hMul let29 let11)
  let let31 := (Rat.ofInt 2)
  let let32 := (Neg.neg let31)
  let let33 := (binrel% HMul.hMul let7 let32)
  let let34 := (Int.ofNat 1000)
  let let35 := (binrel% HDiv.hDiv (Int.ofNat 1501) let34)
  let let36 := (Neg.neg let35)
  let let37 := (binrel% HMul.hMul let3 let36)
  let let38 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 7005) (Int.ofNat 4)))
  let let39 := (Rat.ofInt 1)
  let let40 := (binrel% HMul.hMul let39 let38)
  let let41 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let27 let26)))))
  let let42 := (binrel% HMul.hMul let23 xx5f9)
  let let43 := (binrel% HMul.hMul let21 xx5f7)
  let let44 := (binrel% HAdd.hAdd let43 let42)
  let let45 := (binrel% HMul.hMul let29 let17)
  let let46 := (Int.ofNat 1998)
  let let47 := (binrel% HDiv.hDiv let46 let10)
  let let48 := (Neg.neg let47)
  let let49 := (binrel% HAdd.hAdd xx5f8 (binrel% HAdd.hAdd (binrel% HMul.hMul let47 xx5f9) (binrel% HMul.hMul let48 xx5f10)))
  let let50 := (binrel% HMul.hMul let7 let49)
  let let51 := (binrel% HDiv.hDiv let9 let10)
  let let52 := (binrel% HAdd.hAdd xx5f7 (binrel% HAdd.hAdd xx5f9 (binrel% HAdd.hAdd xx5f10 (binrel% HMul.hMul (Neg.neg let51) xx5f11))))
  let let53 := (binrel% HMul.hMul let3 let52)
  let let54 := (binrel% HDiv.hDiv let9 let12)
  let let55 := (binrel% HAdd.hAdd xx5f8 (binrel% HAdd.hAdd (binrel% HMul.hMul let54 xx5f9) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 xx5f10) xx5f11)))
  let let56 := (binrel% HMul.hMul let39 let55)
  let let57 := (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let45 let44))))
  let let58 := (binrel% GE.ge let57 let41)
  let let59 := (Not let58)
  let let60 := (binrel% LT.lt let57 let41)
  let let61 := (binrel% HAdd.hAdd (binrel% HMul.hMul let3 xx5f7) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 xx5f9) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 xx5f10) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1997998002) let2)) xx5f11))))
  let let62 := (binrel% HDiv.hDiv (Int.ofNat 1000001999997) let2)
  let let63 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 xx5f8) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 xx5f9) (binrel% HMul.hMul (Neg.neg let62) xx5f10)))
  let let64 := (Neg.neg (binrel% HDiv.hDiv let6 let2))
  let let65 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1006000002007) let5))
  let let66 := (Not True)
  let let67 := (binrel% HMul.hMul let15 xx5f9)
  let let68 := (binrel% GE.ge let67 let1)
  let let69 := (Not let68)
  let let70 := (Not let69)
  let let71 := (Eq let68 let70)
  let let72 := (Eq let70 let68)
  let let73 := (binrel% HMul.hMul let15 xx5f7)
  let let74 := (binrel% GE.ge let73 let1)
  let let75 := (Eq let74 let74)
  let let76 := (binrel% HMul.hMul let13 xx5f11)
  let let77 := (binrel% HAdd.hAdd xx5f10 let76)
  let let78 := (binrel% HMul.hMul let15 xx5f8)
  let let79 := (binrel% GE.ge (binrel% HAdd.hAdd let78 let77) (Neg.neg let11))
  let let80 := (Not let79)
  let let81 := (Not let80)
  let let82 := (Eq let81 let79)
  let let83 := (binrel% GE.ge let55 let38)
  let let84 := (Eq let83 let83)
  let let85 := (Not let74)
  let let86 := (Not let85)
  let let87 := (Eq let74 let86)
  let let88 := (Eq let86 let74)
  let let89 := (binrel% HDiv.hDiv (Rat.ofInt 2335) (Rat.ofInt 666))
  let let90 := (Rat.ofInt 999)
  let let91 := (binrel% HDiv.hDiv let39 let90)
  let let92 := (binrel% HAdd.hAdd xx5f11 xx5f8)
  let let93 := (binrel% HMul.hMul let92 let31)
  let let94 := (binrel% HMul.hMul let93 let91)
  let let95 := (binrel% HAdd.hAdd xx5f9 xx5f10)
  let let96 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let95 let94) let89)
  let let97 := (binrel% HSub.hSub let39 let39)
  let let98 := (binrel% LE.le let97 let96)
  let let99 := (Not let98)
  let let100 := (Or let99 let99)
  let let101 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let100 let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99)
  let let102 := (Rat.ofInt 1000)
  let let103 := (Rat.ofInt 1001)
  let let104 := (binrel% HDiv.hDiv let103 let102)
  let let105 := (binrel% HAdd.hAdd xx5f0 let104)
  let let106 := (binrel% LE.le xx5f6 let105)
  let let107 := (binrel% HDiv.hDiv let90 let102)
  let let108 := (binrel% HAdd.hAdd xx5f0 let107)
  let let109 := (binrel% LE.le let108 xx5f6)
  let let110 := (binrel% LE.le xx5f5 let105)
  let let111 := (binrel% LE.le let108 xx5f5)
  let let112 := (binrel% LE.le xx5f4 let105)
  let let113 := (binrel% LE.le let108 xx5f4)
  let let114 := (binrel% LE.le xx5f3 let105)
  let let115 := (binrel% LE.le let108 xx5f3)
  let let116 := (binrel% LE.le xx5f2 let105)
  let let117 := (binrel% LE.le let108 xx5f2)
  let let118 := (binrel% LE.le xx5f1 let105)
  let let119 := (binrel% LE.le let108 xx5f1)
  let let120 := (Eq xx5f0 let25)
  let let121 := (binrel% HDiv.hDiv (Rat.ofInt 1501) let102)
  let let122 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd xx5f7 xx5f9) xx5f10) let121)
  let let123 := (binrel% HMul.hMul let122 let103)
  let let124 := (binrel% HMul.hMul let123 let91)
  let let125 := (binrel% LT.lt xx5f11 let124)
  let let126 := (Not let125)
  let let127 := (binrel% HDiv.hDiv let39 let31)
  let let128 := (binrel% HSub.hSub xx5f8 xx5f10)
  let let129 := (binrel% HSub.hSub let128 let39)
  let let130 := (binrel% HMul.hMul let129 let90)
  let let131 := (binrel% HMul.hMul let130 let127)
  let let132 := (binrel% HSub.hSub let131 let39)
  let let133 := (binrel% LT.lt xx5f11 let132)
  let let134 := (binrel% HMul.hMul xx5f8 let39)
  let let135 := (binrel% HMul.hMul let134 let127)
  let let136 := (binrel% HAdd.hAdd let135 let39)
  let let137 := (binrel% HMul.hMul let136 let103)
  let let138 := (binrel% HMul.hMul let137 let91)
  let let139 := (binrel% HAdd.hAdd xx5f9 let138)
  let let140 := (binrel% LT.lt xx5f10 let139)
  let let141 := (Not let140)
  let let142 := (binrel% LE.le xx5f9 let25)
  let let143 := (Not let142)
  let let144 := (binrel% LE.le xx5f8 let25)
  let let145 := (Not let144)
  let let146 := (binrel% LE.le xx5f7 let25)
  let let147 := (Not let146)
  let let148 := (And let147 (And let145 (And let143 (And let141 (And let133 (And let126 (And let120 (And let119 (And let118 (And let117 (And let116 (And let115 (And let114 (And let113 (And let112 (And let111 (And let110 (And let109 (And let106 let101)))))))))))))))))))
  let let149 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And let147 let145) let143) let141) let133) let126) let120) let119) let118) let117) let116) let115) let114) let113) let112) let111) let110) let109) let106) let101)
  let let150 := (binrel% GE.ge xx5f10 let139)
  let let151 := (Not let150)
  let let152 := (binrel% HDiv.hDiv let14 let12)
  let let153 := (binrel% HMul.hMul let152 xx5f8)
  let let154 := (binrel% HAdd.hAdd let14 let153)
  let let155 := (binrel% HAdd.hAdd let153 let39)
  let let156 := (binrel% HDiv.hDiv let10 let12)
  let let157 := (binrel% HAdd.hAdd let10 (binrel% HMul.hMul let156 xx5f8))
  let let158 := (binrel% HMul.hMul let154 let103)
  let let159 := (binrel% GE.ge (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd (binrel% HMul.hMul let48 xx5f9) (binrel% HMul.hMul let47 xx5f10))) let12)
  let let160 := (Not let159)
  let let161 := (Not let160)
  let let162 := (binrel% GE.ge xx5f11 let132)
  let let163 := (Not let162)
  let let164 := (Neg.neg let39)
  let let165 := (binrel% HMul.hMul let164 let39)
  let let166 := (binrel% HAdd.hAdd let131 let165)
  let let167 := (binrel% GT.gt xx5f7 let25)
  let let168 := (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 let100))))))))))))))))))))))))))))))))))
  let let169 := (binrel% HDiv.hDiv let10 let34)
  let let170 := (binrel% HAdd.hAdd (binrel% HMul.hMul let29 xx5f8) (binrel% HAdd.hAdd (binrel% HMul.hMul let28 xx5f10) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1004995007) let2) xx5f11)))
  let let171 := (binrel% HDiv.hDiv (Int.ofNat 2335) (Int.ofNat 666))
  let let172 := (binrel% GT.gt xx5f9 let25)
  let let173 := (binrel% HMul.hMul let15 xx5f6)
  let let174 := (binrel% HAdd.hAdd let25 let173)
  let let175 := (Eq let79 let79)
  let let176 := (Neg.neg let54)
  let let177 := (binrel% HAdd.hAdd (binrel% HMul.hMul let54 xx5f8) (binrel% HMul.hMul let176 xx5f10))
  let let178 := (binrel% HAdd.hAdd (Neg.neg let156) let177)
  let let179 := (binrel% GE.ge xx5f11 let178)
  let let180 := (Not let83)
  let let181 := (binrel% LT.lt let55 let38)
  let let182 := (binrel% HMul.hMul let164 xx5f10)
  let let183 := (binrel% HAdd.hAdd xx5f8 let182)
  let let184 := (binrel% HDiv.hDiv let14 let9)
  let let185 := (binrel% HAdd.hAdd let128 let165)
  let let186 := (binrel% HMul.hMul let15 let25)
  let let187 := (Eq let79 let81)
  let let188 := (binrel% HMul.hMul let13 xx5f8)
  let let189 := (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd xx5f9 let77)))
  let let190 := (binrel% HAdd.hAdd let188 let76)
  let let191 := (binrel% HAdd.hAdd xx5f9 (binrel% HAdd.hAdd xx5f10 (binrel% HAdd.hAdd let190 let171)))
  let let192 := (binrel% HAdd.hAdd xx5f8 let16)
  let let193 := (binrel% HAdd.hAdd let15 let192)
  let let194 := (binrel% HAdd.hAdd let192 let164)
  let let195 := (Not let180)
  let let196 := (Eq let83 let195)
  let let197 := (Eq let195 let83)
  let let198 := (binrel% LE.le let25 let189)
  let let199 := (binrel% HAdd.hAdd let25 xx5f6)
  let let200 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 xx5f8) (binrel% HMul.hMul let12 xx5f11))
  let let201 := (binrel% HAdd.hAdd xx5f8 xx5f11)
  let let202 := (binrel% HMul.hMul let201 let31)
  let let203 := (Neg.neg let169)
  let let204 := (binrel% GE.ge let173 let203)
  let let205 := (binrel% HDiv.hDiv let9 let34)
  let let206 := (binrel% GE.ge xx5f6 let205)
  let let207 := (binrel% HMul.hMul let15 xx5f5)
  let let208 := (binrel% GE.ge let207 let203)
  let let209 := (binrel% GE.ge xx5f5 let205)
  let let210 := (binrel% HMul.hMul let15 xx5f4)
  let let211 := (binrel% GE.ge let210 let203)
  let let212 := (binrel% GE.ge xx5f4 let205)
  let let213 := (binrel% HMul.hMul let15 xx5f3)
  let let214 := (binrel% GE.ge let213 let203)
  let let215 := (binrel% GE.ge xx5f3 let205)
  let let216 := (binrel% HMul.hMul let15 xx5f2)
  let let217 := (binrel% GE.ge let216 let203)
  let let218 := (binrel% GE.ge xx5f2 let205)
  let let219 := (binrel% HMul.hMul let15 xx5f1)
  let let220 := (binrel% GE.ge let219 let203)
  let let221 := (binrel% GE.ge xx5f1 let205)
  let let222 := (And let221 (And let220 (And let218 (And let217 (And let215 (And let214 (And let212 (And let211 (And let209 (And let208 (And let206 (And let204 let180))))))))))))
  let let223 := (binrel% GE.ge (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let16 (binrel% HMul.hMul let51 xx5f11)))) let35)
  let let224 := (binrel% GE.ge let78 let1)
  let let225 := (Not let224)
  let let226 := (And let85 (And let225 (And let69 (And let159 (And let80 (And let223 let222))))))
  let let227 := (And let85 (And let225 (And let69 (And let159 (And let80 (And let223 (And True let222)))))))
  let let228 := (binrel% HAdd.hAdd xx5f9 (binrel% HAdd.hAdd xx5f10 (binrel% HAdd.hAdd let94 let89)))
  let let229 := (binrel% HAdd.hAdd let25 let210)
  let let230 := (binrel% LE.le let52 let36)
  let let231 := (binrel% GE.ge xx5f11 let124)
  let let232 := (Not let231)
  let let233 := (binrel% HAdd.hAdd xx5f0 let210)
  let let234 := (binrel% GE.ge let233 let203)
  let let235 := (binrel% HAdd.hAdd let169 xx5f0)
  let let236 := (binrel% LE.le xx5f4 let235)
  let let237 := (binrel% LT.lt let29 let1)
  let let238 := (binrel% HAdd.hAdd let25 xx5f4)
  let let239 := (Int.ofNat 1502501)
  let let240 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let239 (Int.ofNat 999000)) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 xx5f7) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 xx5f9) (binrel% HMul.hMul let11 xx5f10))))
  let let241 := (binrel% GE.ge xx5f11 let240)
  let let242 := (binrel% HMul.hMul let15 xx5f0)
  let let243 := (binrel% HAdd.hAdd let242 xx5f4)
  let let244 := (binrel% GE.ge let243 let205)
  let let245 := (binrel% HAdd.hAdd let205 xx5f0)
  let let246 := (binrel% LE.le let245 xx5f4)
  let let247 := (binrel% HAdd.hAdd let25 xx5f1)
  let let248 := (binrel% HAdd.hAdd let242 xx5f1)
  let let249 := (binrel% GE.ge let248 let205)
  let let250 := (binrel% LE.le let245 xx5f1)
  let let251 := (binrel% HAdd.hAdd let25 let219)
  let let252 := (Eq let68 let68)
  let let253 := (binrel% HMul.hMul let200 let184)
  let let254 := (binrel% HAdd.hAdd xx5f0 let219)
  let let255 := (binrel% GE.ge let254 let203)
  let let256 := (binrel% LE.le xx5f1 let235)
  let let257 := (binrel% HAdd.hAdd xx5f0 let173)
  let let258 := (binrel% GE.ge let257 let203)
  let let259 := (binrel% LE.le xx5f6 let235)
  let let260 := (binrel% HAdd.hAdd let25 let207)
  let let261 := (binrel% HMul.hMul xx5f8 let152)
  let let262 := (Eq let25 let25)
  let let263 := (binrel% HAdd.hAdd xx5f0 let207)
  let let264 := (binrel% GE.ge let263 let203)
  let let265 := (binrel% LE.le xx5f5 let235)
  let let266 := (binrel% HAdd.hAdd xx5f0 let169)
  let let267 := (binrel% HAdd.hAdd let25 xx5f5)
  let let268 := (binrel% HMul.hMul (binrel% HDiv.hDiv let10 let46) xx5f8)
  let let269 := (binrel% HAdd.hAdd let11 let268)
  let let270 := (binrel% HMul.hMul let157 let184)
  let let271 := (binrel% HAdd.hAdd let242 xx5f5)
  let let272 := (binrel% GE.ge let271 let205)
  let let273 := (binrel% LE.le let245 xx5f5)
  let let274 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 405875687624406) (Int.ofNat 124125374375)))
  let let275 := (binrel% GE.ge let25 let274)
  let let276 := (binrel% HAdd.hAdd let176 let177)
  let let277 := (Neg.neg let9)
  let let278 := (binrel% HAdd.hAdd let277 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 xx5f8) (binrel% HMul.hMul let277 xx5f10)))
  let let279 := (binrel% HMul.hMul let278 let152)
  let let280 := (binrel% HAdd.hAdd let25 let213)
  let let281 := (binrel% GT.gt let39 let1)
  let let282 := (binrel% HAdd.hAdd xx5f0 let213)
  let let283 := (binrel% GE.ge let282 let203)
  let let284 := (binrel% LE.le xx5f3 let235)
  let let285 := (binrel% LE.le let49 let32)
  let let286 := (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let268 xx5f9))
  let let287 := (binrel% HAdd.hAdd xx5f9 let269)
  let let288 := (binrel% HAdd.hAdd let25 xx5f3)
  let let289 := (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let170 let44))))
  let let290 := (binrel% HAdd.hAdd let242 xx5f3)
  let let291 := (binrel% GE.ge let290 let205)
  let let292 := (binrel% LE.le let245 xx5f3)
  let let293 := (binrel% HAdd.hAdd xx5f0 let216)
  let let294 := (binrel% GE.ge let293 let203)
  let let295 := (binrel% LE.le xx5f2 let235)
  let let296 := (binrel% HAdd.hAdd let25 xx5f2)
  let let297 := (binrel% HAdd.hAdd let242 xx5f2)
  let let298 := (binrel% GE.ge let297 let205)
  let let299 := (binrel% LE.le let245 xx5f2)
  let let300 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1502499497499) (Int.ofNat 496501497500)))
  let let301 := (binrel% HAdd.hAdd let242 xx5f6)
  let let302 := (binrel% GE.ge let301 let205)
  let let303 := (binrel% LE.le let245 xx5f6)
  let let304 := (binrel% GE.ge xx5f10 let286)
  let let305 := (binrel% HAdd.hAdd xx5f0 let205)
  let let306 := (Not let223)
  let let307 := (Not let306)
  let let308 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd xx5f7 let95))
  let let309 := (binrel% HAdd.hAdd xx5f7 (binrel% HAdd.hAdd xx5f9 (binrel% HAdd.hAdd xx5f10 let35)))
  let let310 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let239 let34) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 xx5f7) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 xx5f9) (binrel% HMul.hMul let10 xx5f10))))
  let let311 := (binrel% HMul.hMul let310 let184)
  let let312 := (binrel% HMul.hMul let308 let103)
  let let313 := (binrel% HAdd.hAdd let276 let164)
  let let314 := (binrel% HAdd.hAdd let25 let216)
  let let315 := (binrel% HAdd.hAdd xx5f7 (binrel% HAdd.hAdd xx5f9 (binrel% HAdd.hAdd xx5f10 let121)))
  let let316 := (binrel% HMul.hMul let193 let90)
  let let317 := (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let300 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let25 let25)))))
  let let318 := (And let85 (And let225 (And let69 (And let159 (And let80 (And let223 (And let120 (And let249 (And let255 (And let298 (And let294 (And let291 (And let283 (And let244 (And let234 (And let272 (And let264 (And let302 (And let258 let180)))))))))))))))))))
  let let319 := (binrel% GE.ge let174 let203)
  let let320 := (binrel% HAdd.hAdd let186 xx5f6)
  let let321 := (binrel% GE.ge let320 let205)
  let let322 := (binrel% GE.ge let260 let203)
  let let323 := (binrel% HAdd.hAdd let186 xx5f5)
  let let324 := (binrel% GE.ge let323 let205)
  let let325 := (binrel% GE.ge let229 let203)
  let let326 := (binrel% HAdd.hAdd let186 xx5f4)
  let let327 := (binrel% GE.ge let326 let205)
  let let328 := (binrel% GE.ge let280 let203)
  let let329 := (binrel% HAdd.hAdd let186 xx5f3)
  let let330 := (binrel% GE.ge let329 let205)
  let let331 := (binrel% GE.ge let314 let203)
  let let332 := (binrel% HAdd.hAdd let186 xx5f2)
  let let333 := (binrel% GE.ge let332 let205)
  let let334 := (binrel% GE.ge let251 let203)
  let let335 := (binrel% HAdd.hAdd let186 xx5f1)
  let let336 := (binrel% GE.ge let335 let205)
  let let337 := (And let85 (And let225 (And let69 (And let159 (And let80 (And let223 (And let262 (And let336 (And let334 (And let333 (And let331 (And let330 (And let328 (And let327 (And let325 (And let324 (And let322 (And let321 (And let319 let180)))))))))))))))))))
  let let338 := (Eq let180 let180)
  let let339 := (Eq let203 let203)
  let let340 := (Eq And And)
  let let341 := (Eq let205 let205)
  let let342 := (Eq xx5f6 xx5f6)
  let let343 := (Eq xx5f5 xx5f5)
  let let344 := (Eq xx5f4 xx5f4)
  let let345 := (Eq xx5f3 xx5f3)
  let let346 := (Eq xx5f2 xx5f2)
  let let347 := (Eq xx5f1 xx5f1)
  let let348 := (Eq let223 let223)
  let let349 := (Eq let80 let80)
  let let350 := (Eq let159 let159)
  let let351 := (Eq let69 let69)
  let let352 := (Eq let225 let225)
  let let353 := (Eq let85 let85)
  let let354 := (Or let306 let83)
  let let355 := (Or let68 (Or let74 (Or let79 (Or let160 let354))))
  let let356 := (Or let70 (Or let86 (Or let81 (Or let160 (Or let306 let195)))))
  let let357 := (Not let181)
  let let358 := (binrel% LT.lt let42 let26)
  let let359 := (And let24 let172)
  let let360 := (binrel% LT.lt let43 let27)
  let let361 := (And let22 let167)
  let let362 := (binrel% LT.lt let45 let30)
  let let363 := (And let237 let20)
  let let364 := (binrel% LE.le let50 let33)
  let let365 := (And let8 let285)
  let let366 := (binrel% LE.le let53 let37)
  let let367 := (And let4 let230)
  let let368 := (binrel% LT.lt let56 let40)
  let let369 := (And let281 let181)
(Eq let4 True) → (Eq let8 True) → (Eq let20 let19) → (Eq let22 True) → (Eq let24 True) → (Eq let60 let59) → (Eq let53 let61) → (Eq let50 let63) → (Eq let40 let38) → (Eq let33 let64) → (Eq let30 let65) → (Eq let66 False) → (Eq let72 let71) → (Eq let75 True) → let82 → (Eq let84 True) → (Eq let88 let87) → (Eq let149 let148) → let88 → (Eq let146 let74) → (Eq let142 let68) → (Eq let140 let151) → (Eq let134 xx5f8) → (Eq let155 let154) → (Eq let158 let157) → (Eq let27 let25) → (Eq let161 let159) → (Eq let133 let163) → (Eq let132 let166) → (Eq let167 let147) → (Eq let101 let168) → (Eq let104 let169) → (Eq let45 let170) → (Eq let89 let171) → (Eq let172 let143) → (Eq let174 let173) → (Eq let175 True) → (Eq let179 let79) → (Eq let181 let180) → (Eq let128 let183) → (Eq let91 let184) → (Eq let129 let185) → (Eq let186 let25) → (Eq let82 let187) → (Eq let191 let189) → (Eq let194 let193) → (Eq let197 let196) → (Eq let198 let83) → let72 → (Eq let127 let152) → (Eq let97 let25) → (Eq let199 xx5f6) → (Eq let202 let200) → (Eq let227 let226) → (Eq let96 let228) → (Eq let18 let79) → (Eq let229 let210) → (Eq let230 let223) → (Eq let125 let232) → (Eq let236 let234) → (Eq let237 True) → (Eq let238 xx5f4) → (Eq let241 let223) → (Eq let168 let99) → (Eq let246 let244) → (Eq let247 xx5f1) → (Eq let107 let205) → (Eq let250 let249) → let197 → (Eq let251 let219) → (Eq let252 True) → (Eq let253 let190) → (Eq let256 let255) → (Eq let259 let258) → (Eq let260 let207) → (Eq let261 let153) → (Eq let262 True) → (Eq let265 let264) → (Eq let266 let235) → (Eq let267 xx5f5) → (Eq let270 let269) → (Eq let273 let272) → (Eq let56 let55) → (Eq let275 True) → (Eq let279 let276) → (Eq let280 let213) → (Eq let281 True) → (Eq let284 let283) → (Eq let285 let159) → (Eq let287 let286) → (Eq let288 xx5f3) → (Eq let289 let25) → (Eq let292 let291) → (Eq let295 let294) → (Eq let92 let201) → (Eq let296 xx5f2) → (Eq let144 let224) → (Eq let299 let298) → (Eq let37 let300) → (Eq let303 let302) → (Eq let304 let159) → (Eq let305 let245) → (Eq let307 let223) → (Eq let309 let308) → (Eq let26 let25) → (Eq let311 let240) → (Eq let312 let310) → (Eq let313 let178) → (Eq let314 let216) → (Eq let121 let35) → (Eq let122 let315) → (Eq let316 let278) → (Eq let165 let164) → (Eq let317 let274) → (Eq let182 let16) → let149 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 993002995)
  let let3 := (binrel% HDiv.hDiv (Int.ofNat 2001997998) let2)
  let let4 := (binrel% GT.gt let3 let1)
  let let5 := (Int.ofNat 1986005990)
  let let6 := (Int.ofNat 1002004006003)
  let let7 := (binrel% HDiv.hDiv let6 let5)
  let let8 := (binrel% GT.gt let7 let1)
  let let9 := (Int.ofNat 999)
  let let10 := (Int.ofNat 1001)
  let let11 := (binrel% HDiv.hDiv let10 let9)
  let let12 := (Int.ofNat 2)
  let let13 := (binrel% HDiv.hDiv let12 let9)
  let let14 := (Int.ofNat 1)
  let let15 := (Neg.neg let14)
  let let16 := (binrel% HMul.hMul let15 xx5f10)
  let let17 := (binrel% HAdd.hAdd xx5f8 (binrel% HAdd.hAdd let16 (binrel% HMul.hMul (Neg.neg let13) xx5f11)))
  let let18 := (binrel% LE.le let17 let11)
  let let19 := (Not let18)
  let let20 := (binrel% GT.gt let17 let11)
  let let21 := (Neg.neg let3)
  let let22 := (binrel% LT.lt let21 let1)
  let let23 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 599203597599) (Int.ofNat 397201198)))
  let let24 := (binrel% LT.lt let23 let1)
  let let25 := (Rat.ofInt 0)
  let let26 := (binrel% HMul.hMul let23 let25)
  let let27 := (binrel% HMul.hMul let21 let25)
  let let28 := (binrel% HDiv.hDiv (Int.ofNat 1003990011993) let5)
  let let29 := (Neg.neg let28)
  let let30 := (binrel% HMul.hMul let29 let11)
  let let31 := (Rat.ofInt 2)
  let let32 := (Neg.neg let31)
  let let33 := (binrel% HMul.hMul let7 let32)
  let let34 := (Int.ofNat 1000)
  let let35 := (binrel% HDiv.hDiv (Int.ofNat 1501) let34)
  let let36 := (Neg.neg let35)
  let let37 := (binrel% HMul.hMul let3 let36)
  let let38 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 7005) (Int.ofNat 4)))
  let let39 := (Rat.ofInt 1)
  let let40 := (binrel% HMul.hMul let39 let38)
  let let41 := (binrel% HAdd.hAdd let40 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let33 (binrel% HAdd.hAdd let30 (binrel% HAdd.hAdd let27 let26)))))
  let let42 := (binrel% HMul.hMul let23 xx5f9)
  let let43 := (binrel% HMul.hMul let21 xx5f7)
  let let44 := (binrel% HAdd.hAdd let43 let42)
  let let45 := (binrel% HMul.hMul let29 let17)
  let let46 := (Int.ofNat 1998)
  let let47 := (binrel% HDiv.hDiv let46 let10)
  let let48 := (Neg.neg let47)
  let let49 := (binrel% HAdd.hAdd xx5f8 (binrel% HAdd.hAdd (binrel% HMul.hMul let47 xx5f9) (binrel% HMul.hMul let48 xx5f10)))
  let let50 := (binrel% HMul.hMul let7 let49)
  let let51 := (binrel% HDiv.hDiv let9 let10)
  let let52 := (binrel% HAdd.hAdd xx5f7 (binrel% HAdd.hAdd xx5f9 (binrel% HAdd.hAdd xx5f10 (binrel% HMul.hMul (Neg.neg let51) xx5f11))))
  let let53 := (binrel% HMul.hMul let3 let52)
  let let54 := (binrel% HDiv.hDiv let9 let12)
  let let55 := (binrel% HAdd.hAdd xx5f8 (binrel% HAdd.hAdd (binrel% HMul.hMul let54 xx5f9) (binrel% HAdd.hAdd (binrel% HMul.hMul let54 xx5f10) xx5f11)))
  let let56 := (binrel% HMul.hMul let39 let55)
  let let57 := (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let45 let44))))
  let let58 := (binrel% GE.ge let57 let41)
  let let59 := (Not let58)
  let let60 := (binrel% LT.lt let57 let41)
  let let61 := (binrel% HAdd.hAdd (binrel% HMul.hMul let3 xx5f7) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 xx5f9) (binrel% HAdd.hAdd (binrel% HMul.hMul let3 xx5f10) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1997998002) let2)) xx5f11))))
  let let62 := (binrel% HDiv.hDiv (Int.ofNat 1000001999997) let2)
  let let63 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 xx5f8) (binrel% HAdd.hAdd (binrel% HMul.hMul let62 xx5f9) (binrel% HMul.hMul (Neg.neg let62) xx5f10)))
  let let64 := (Neg.neg (binrel% HDiv.hDiv let6 let2))
  let let65 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1006000002007) let5))
  let let66 := (Not True)
  let let67 := (binrel% HMul.hMul let15 xx5f9)
  let let68 := (binrel% GE.ge let67 let1)
  let let69 := (Not let68)
  let let70 := (Not let69)
  let let71 := (Eq let68 let70)
  let let72 := (Eq let70 let68)
  let let73 := (binrel% HMul.hMul let15 xx5f7)
  let let74 := (binrel% GE.ge let73 let1)
  let let75 := (Eq let74 let74)
  let let76 := (binrel% HMul.hMul let13 xx5f11)
  let let77 := (binrel% HAdd.hAdd xx5f10 let76)
  let let78 := (binrel% HMul.hMul let15 xx5f8)
  let let79 := (binrel% GE.ge (binrel% HAdd.hAdd let78 let77) (Neg.neg let11))
  let let80 := (Not let79)
  let let81 := (Not let80)
  let let82 := (Eq let81 let79)
  let let83 := (binrel% GE.ge let55 let38)
  let let84 := (Eq let83 let83)
  let let85 := (Not let74)
  let let86 := (Not let85)
  let let87 := (Eq let74 let86)
  let let88 := (Eq let86 let74)
  let let89 := (binrel% HDiv.hDiv (Rat.ofInt 2335) (Rat.ofInt 666))
  let let90 := (Rat.ofInt 999)
  let let91 := (binrel% HDiv.hDiv let39 let90)
  let let92 := (binrel% HAdd.hAdd xx5f11 xx5f8)
  let let93 := (binrel% HMul.hMul let92 let31)
  let let94 := (binrel% HMul.hMul let93 let91)
  let let95 := (binrel% HAdd.hAdd xx5f9 xx5f10)
  let let96 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let95 let94) let89)
  let let97 := (binrel% HSub.hSub let39 let39)
  let let98 := (binrel% LE.le let97 let96)
  let let99 := (Not let98)
  let let100 := (Or let99 let99)
  let let101 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let100 let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99) let99)
  let let102 := (Rat.ofInt 1000)
  let let103 := (Rat.ofInt 1001)
  let let104 := (binrel% HDiv.hDiv let103 let102)
  let let105 := (binrel% HAdd.hAdd xx5f0 let104)
  let let106 := (binrel% LE.le xx5f6 let105)
  let let107 := (binrel% HDiv.hDiv let90 let102)
  let let108 := (binrel% HAdd.hAdd xx5f0 let107)
  let let109 := (binrel% LE.le let108 xx5f6)
  let let110 := (binrel% LE.le xx5f5 let105)
  let let111 := (binrel% LE.le let108 xx5f5)
  let let112 := (binrel% LE.le xx5f4 let105)
  let let113 := (binrel% LE.le let108 xx5f4)
  let let114 := (binrel% LE.le xx5f3 let105)
  let let115 := (binrel% LE.le let108 xx5f3)
  let let116 := (binrel% LE.le xx5f2 let105)
  let let117 := (binrel% LE.le let108 xx5f2)
  let let118 := (binrel% LE.le xx5f1 let105)
  let let119 := (binrel% LE.le let108 xx5f1)
  let let120 := (Eq xx5f0 let25)
  let let121 := (binrel% HDiv.hDiv (Rat.ofInt 1501) let102)
  let let122 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd xx5f7 xx5f9) xx5f10) let121)
  let let123 := (binrel% HMul.hMul let122 let103)
  let let124 := (binrel% HMul.hMul let123 let91)
  let let125 := (binrel% LT.lt xx5f11 let124)
  let let126 := (Not let125)
  let let127 := (binrel% HDiv.hDiv let39 let31)
  let let128 := (binrel% HSub.hSub xx5f8 xx5f10)
  let let129 := (binrel% HSub.hSub let128 let39)
  let let130 := (binrel% HMul.hMul let129 let90)
  let let131 := (binrel% HMul.hMul let130 let127)
  let let132 := (binrel% HSub.hSub let131 let39)
  let let133 := (binrel% LT.lt xx5f11 let132)
  let let134 := (binrel% HMul.hMul xx5f8 let39)
  let let135 := (binrel% HMul.hMul let134 let127)
  let let136 := (binrel% HAdd.hAdd let135 let39)
  let let137 := (binrel% HMul.hMul let136 let103)
  let let138 := (binrel% HMul.hMul let137 let91)
  let let139 := (binrel% HAdd.hAdd xx5f9 let138)
  let let140 := (binrel% LT.lt xx5f10 let139)
  let let141 := (Not let140)
  let let142 := (binrel% LE.le xx5f9 let25)
  let let143 := (Not let142)
  let let144 := (binrel% LE.le xx5f8 let25)
  let let145 := (Not let144)
  let let146 := (binrel% LE.le xx5f7 let25)
  let let147 := (Not let146)
  let let148 := (And let147 (And let145 (And let143 (And let141 (And let133 (And let126 (And let120 (And let119 (And let118 (And let117 (And let116 (And let115 (And let114 (And let113 (And let112 (And let111 (And let110 (And let109 (And let106 let101)))))))))))))))))))
  let let149 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And let147 let145) let143) let141) let133) let126) let120) let119) let118) let117) let116) let115) let114) let113) let112) let111) let110) let109) let106) let101)
  let let150 := (binrel% GE.ge xx5f10 let139)
  let let151 := (Not let150)
  let let152 := (binrel% HDiv.hDiv let14 let12)
  let let153 := (binrel% HMul.hMul let152 xx5f8)
  let let154 := (binrel% HAdd.hAdd let14 let153)
  let let155 := (binrel% HAdd.hAdd let153 let39)
  let let156 := (binrel% HDiv.hDiv let10 let12)
  let let157 := (binrel% HAdd.hAdd let10 (binrel% HMul.hMul let156 xx5f8))
  let let158 := (binrel% HMul.hMul let154 let103)
  let let159 := (binrel% GE.ge (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd (binrel% HMul.hMul let48 xx5f9) (binrel% HMul.hMul let47 xx5f10))) let12)
  let let160 := (Not let159)
  let let161 := (Not let160)
  let let162 := (binrel% GE.ge xx5f11 let132)
  let let163 := (Not let162)
  let let164 := (Neg.neg let39)
  let let165 := (binrel% HMul.hMul let164 let39)
  let let166 := (binrel% HAdd.hAdd let131 let165)
  let let167 := (binrel% GT.gt xx5f7 let25)
  let let168 := (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 (Or let99 let100))))))))))))))))))))))))))))))))))
  let let169 := (binrel% HDiv.hDiv let10 let34)
  let let170 := (binrel% HAdd.hAdd (binrel% HMul.hMul let29 xx5f8) (binrel% HAdd.hAdd (binrel% HMul.hMul let28 xx5f10) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1004995007) let2) xx5f11)))
  let let171 := (binrel% HDiv.hDiv (Int.ofNat 2335) (Int.ofNat 666))
  let let172 := (binrel% GT.gt xx5f9 let25)
  let let173 := (binrel% HMul.hMul let15 xx5f6)
  let let174 := (binrel% HAdd.hAdd let25 let173)
  let let175 := (Eq let79 let79)
  let let176 := (Neg.neg let54)
  let let177 := (binrel% HAdd.hAdd (binrel% HMul.hMul let54 xx5f8) (binrel% HMul.hMul let176 xx5f10))
  let let178 := (binrel% HAdd.hAdd (Neg.neg let156) let177)
  let let179 := (binrel% GE.ge xx5f11 let178)
  let let180 := (Not let83)
  let let181 := (binrel% LT.lt let55 let38)
  let let182 := (binrel% HMul.hMul let164 xx5f10)
  let let183 := (binrel% HAdd.hAdd xx5f8 let182)
  let let184 := (binrel% HDiv.hDiv let14 let9)
  let let185 := (binrel% HAdd.hAdd let128 let165)
  let let186 := (binrel% HMul.hMul let15 let25)
  let let187 := (Eq let79 let81)
  let let188 := (binrel% HMul.hMul let13 xx5f8)
  let let189 := (binrel% HAdd.hAdd let171 (binrel% HAdd.hAdd let188 (binrel% HAdd.hAdd xx5f9 let77)))
  let let190 := (binrel% HAdd.hAdd let188 let76)
  let let191 := (binrel% HAdd.hAdd xx5f9 (binrel% HAdd.hAdd xx5f10 (binrel% HAdd.hAdd let190 let171)))
  let let192 := (binrel% HAdd.hAdd xx5f8 let16)
  let let193 := (binrel% HAdd.hAdd let15 let192)
  let let194 := (binrel% HAdd.hAdd let192 let164)
  let let195 := (Not let180)
  let let196 := (Eq let83 let195)
  let let197 := (Eq let195 let83)
  let let198 := (binrel% LE.le let25 let189)
  let let199 := (binrel% HAdd.hAdd let25 xx5f6)
  let let200 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 xx5f8) (binrel% HMul.hMul let12 xx5f11))
  let let201 := (binrel% HAdd.hAdd xx5f8 xx5f11)
  let let202 := (binrel% HMul.hMul let201 let31)
  let let203 := (Neg.neg let169)
  let let204 := (binrel% GE.ge let173 let203)
  let let205 := (binrel% HDiv.hDiv let9 let34)
  let let206 := (binrel% GE.ge xx5f6 let205)
  let let207 := (binrel% HMul.hMul let15 xx5f5)
  let let208 := (binrel% GE.ge let207 let203)
  let let209 := (binrel% GE.ge xx5f5 let205)
  let let210 := (binrel% HMul.hMul let15 xx5f4)
  let let211 := (binrel% GE.ge let210 let203)
  let let212 := (binrel% GE.ge xx5f4 let205)
  let let213 := (binrel% HMul.hMul let15 xx5f3)
  let let214 := (binrel% GE.ge let213 let203)
  let let215 := (binrel% GE.ge xx5f3 let205)
  let let216 := (binrel% HMul.hMul let15 xx5f2)
  let let217 := (binrel% GE.ge let216 let203)
  let let218 := (binrel% GE.ge xx5f2 let205)
  let let219 := (binrel% HMul.hMul let15 xx5f1)
  let let220 := (binrel% GE.ge let219 let203)
  let let221 := (binrel% GE.ge xx5f1 let205)
  let let222 := (And let221 (And let220 (And let218 (And let217 (And let215 (And let214 (And let212 (And let211 (And let209 (And let208 (And let206 (And let204 let180))))))))))))
  let let223 := (binrel% GE.ge (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let16 (binrel% HMul.hMul let51 xx5f11)))) let35)
  let let224 := (binrel% GE.ge let78 let1)
  let let225 := (Not let224)
  let let226 := (And let85 (And let225 (And let69 (And let159 (And let80 (And let223 let222))))))
  let let227 := (And let85 (And let225 (And let69 (And let159 (And let80 (And let223 (And True let222)))))))
  let let228 := (binrel% HAdd.hAdd xx5f9 (binrel% HAdd.hAdd xx5f10 (binrel% HAdd.hAdd let94 let89)))
  let let229 := (binrel% HAdd.hAdd let25 let210)
  let let230 := (binrel% LE.le let52 let36)
  let let231 := (binrel% GE.ge xx5f11 let124)
  let let232 := (Not let231)
  let let233 := (binrel% HAdd.hAdd xx5f0 let210)
  let let234 := (binrel% GE.ge let233 let203)
  let let235 := (binrel% HAdd.hAdd let169 xx5f0)
  let let236 := (binrel% LE.le xx5f4 let235)
  let let237 := (binrel% LT.lt let29 let1)
  let let238 := (binrel% HAdd.hAdd let25 xx5f4)
  let let239 := (Int.ofNat 1502501)
  let let240 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let239 (Int.ofNat 999000)) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 xx5f7) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 xx5f9) (binrel% HMul.hMul let11 xx5f10))))
  let let241 := (binrel% GE.ge xx5f11 let240)
  let let242 := (binrel% HMul.hMul let15 xx5f0)
  let let243 := (binrel% HAdd.hAdd let242 xx5f4)
  let let244 := (binrel% GE.ge let243 let205)
  let let245 := (binrel% HAdd.hAdd let205 xx5f0)
  let let246 := (binrel% LE.le let245 xx5f4)
  let let247 := (binrel% HAdd.hAdd let25 xx5f1)
  let let248 := (binrel% HAdd.hAdd let242 xx5f1)
  let let249 := (binrel% GE.ge let248 let205)
  let let250 := (binrel% LE.le let245 xx5f1)
  let let251 := (binrel% HAdd.hAdd let25 let219)
  let let252 := (Eq let68 let68)
  let let253 := (binrel% HMul.hMul let200 let184)
  let let254 := (binrel% HAdd.hAdd xx5f0 let219)
  let let255 := (binrel% GE.ge let254 let203)
  let let256 := (binrel% LE.le xx5f1 let235)
  let let257 := (binrel% HAdd.hAdd xx5f0 let173)
  let let258 := (binrel% GE.ge let257 let203)
  let let259 := (binrel% LE.le xx5f6 let235)
  let let260 := (binrel% HAdd.hAdd let25 let207)
  let let261 := (binrel% HMul.hMul xx5f8 let152)
  let let262 := (Eq let25 let25)
  let let263 := (binrel% HAdd.hAdd xx5f0 let207)
  let let264 := (binrel% GE.ge let263 let203)
  let let265 := (binrel% LE.le xx5f5 let235)
  let let266 := (binrel% HAdd.hAdd xx5f0 let169)
  let let267 := (binrel% HAdd.hAdd let25 xx5f5)
  let let268 := (binrel% HMul.hMul (binrel% HDiv.hDiv let10 let46) xx5f8)
  let let269 := (binrel% HAdd.hAdd let11 let268)
  let let270 := (binrel% HMul.hMul let157 let184)
  let let271 := (binrel% HAdd.hAdd let242 xx5f5)
  let let272 := (binrel% GE.ge let271 let205)
  let let273 := (binrel% LE.le let245 xx5f5)
  let let274 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 405875687624406) (Int.ofNat 124125374375)))
  let let275 := (binrel% GE.ge let25 let274)
  let let276 := (binrel% HAdd.hAdd let176 let177)
  let let277 := (Neg.neg let9)
  let let278 := (binrel% HAdd.hAdd let277 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 xx5f8) (binrel% HMul.hMul let277 xx5f10)))
  let let279 := (binrel% HMul.hMul let278 let152)
  let let280 := (binrel% HAdd.hAdd let25 let213)
  let let281 := (binrel% GT.gt let39 let1)
  let let282 := (binrel% HAdd.hAdd xx5f0 let213)
  let let283 := (binrel% GE.ge let282 let203)
  let let284 := (binrel% LE.le xx5f3 let235)
  let let285 := (binrel% LE.le let49 let32)
  let let286 := (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let268 xx5f9))
  let let287 := (binrel% HAdd.hAdd xx5f9 let269)
  let let288 := (binrel% HAdd.hAdd let25 xx5f3)
  let let289 := (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let63 (binrel% HAdd.hAdd let170 let44))))
  let let290 := (binrel% HAdd.hAdd let242 xx5f3)
  let let291 := (binrel% GE.ge let290 let205)
  let let292 := (binrel% LE.le let245 xx5f3)
  let let293 := (binrel% HAdd.hAdd xx5f0 let216)
  let let294 := (binrel% GE.ge let293 let203)
  let let295 := (binrel% LE.le xx5f2 let235)
  let let296 := (binrel% HAdd.hAdd let25 xx5f2)
  let let297 := (binrel% HAdd.hAdd let242 xx5f2)
  let let298 := (binrel% GE.ge let297 let205)
  let let299 := (binrel% LE.le let245 xx5f2)
  let let300 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1502499497499) (Int.ofNat 496501497500)))
  let let301 := (binrel% HAdd.hAdd let242 xx5f6)
  let let302 := (binrel% GE.ge let301 let205)
  let let303 := (binrel% LE.le let245 xx5f6)
  let let304 := (binrel% GE.ge xx5f10 let286)
  let let305 := (binrel% HAdd.hAdd xx5f0 let205)
  let let306 := (Not let223)
  let let307 := (Not let306)
  let let308 := (binrel% HAdd.hAdd let35 (binrel% HAdd.hAdd xx5f7 let95))
  let let309 := (binrel% HAdd.hAdd xx5f7 (binrel% HAdd.hAdd xx5f9 (binrel% HAdd.hAdd xx5f10 let35)))
  let let310 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let239 let34) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 xx5f7) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 xx5f9) (binrel% HMul.hMul let10 xx5f10))))
  let let311 := (binrel% HMul.hMul let310 let184)
  let let312 := (binrel% HMul.hMul let308 let103)
  let let313 := (binrel% HAdd.hAdd let276 let164)
  let let314 := (binrel% HAdd.hAdd let25 let216)
  let let315 := (binrel% HAdd.hAdd xx5f7 (binrel% HAdd.hAdd xx5f9 (binrel% HAdd.hAdd xx5f10 let121)))
  let let316 := (binrel% HMul.hMul let193 let90)
  let let317 := (binrel% HAdd.hAdd let38 (binrel% HAdd.hAdd let300 (binrel% HAdd.hAdd let64 (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let25 let25)))))
  let let318 := (And let85 (And let225 (And let69 (And let159 (And let80 (And let223 (And let120 (And let249 (And let255 (And let298 (And let294 (And let291 (And let283 (And let244 (And let234 (And let272 (And let264 (And let302 (And let258 let180)))))))))))))))))))
  let let319 := (binrel% GE.ge let174 let203)
  let let320 := (binrel% HAdd.hAdd let186 xx5f6)
  let let321 := (binrel% GE.ge let320 let205)
  let let322 := (binrel% GE.ge let260 let203)
  let let323 := (binrel% HAdd.hAdd let186 xx5f5)
  let let324 := (binrel% GE.ge let323 let205)
  let let325 := (binrel% GE.ge let229 let203)
  let let326 := (binrel% HAdd.hAdd let186 xx5f4)
  let let327 := (binrel% GE.ge let326 let205)
  let let328 := (binrel% GE.ge let280 let203)
  let let329 := (binrel% HAdd.hAdd let186 xx5f3)
  let let330 := (binrel% GE.ge let329 let205)
  let let331 := (binrel% GE.ge let314 let203)
  let let332 := (binrel% HAdd.hAdd let186 xx5f2)
  let let333 := (binrel% GE.ge let332 let205)
  let let334 := (binrel% GE.ge let251 let203)
  let let335 := (binrel% HAdd.hAdd let186 xx5f1)
  let let336 := (binrel% GE.ge let335 let205)
  let let337 := (And let85 (And let225 (And let69 (And let159 (And let80 (And let223 (And let262 (And let336 (And let334 (And let333 (And let331 (And let330 (And let328 (And let327 (And let325 (And let324 (And let322 (And let321 (And let319 let180)))))))))))))))))))
  let let338 := (Eq let180 let180)
  let let339 := (Eq let203 let203)
  let let340 := (Eq And And)
  let let341 := (Eq let205 let205)
  let let342 := (Eq xx5f6 xx5f6)
  let let343 := (Eq xx5f5 xx5f5)
  let let344 := (Eq xx5f4 xx5f4)
  let let345 := (Eq xx5f3 xx5f3)
  let let346 := (Eq xx5f2 xx5f2)
  let let347 := (Eq xx5f1 xx5f1)
  let let348 := (Eq let223 let223)
  let let349 := (Eq let80 let80)
  let let350 := (Eq let159 let159)
  let let351 := (Eq let69 let69)
  let let352 := (Eq let225 let225)
  let let353 := (Eq let85 let85)
  let let354 := (Or let306 let83)
  let let355 := (Or let68 (Or let74 (Or let79 (Or let160 let354))))
  let let356 := (Or let70 (Or let86 (Or let81 (Or let160 (Or let306 let195)))))
  let let357 := (Not let181)
  let let358 := (binrel% LT.lt let42 let26)
  let let359 := (And let24 let172)
  let let360 := (binrel% LT.lt let43 let27)
  let let361 := (And let22 let167)
  let let362 := (binrel% LT.lt let45 let30)
  let let363 := (And let237 let20)
  let let364 := (binrel% LE.le let50 let33)
  let let365 := (And let8 let285)
  let let366 := (binrel% LE.le let53 let37)
  let let367 := (And let4 let230)
  let let368 := (binrel% LT.lt let56 let40)
  let let369 := (And let281 let181)
fun lean_r0 : (Eq let4 True) => -- EVALUATE
fun lean_r1 : (Eq let8 True) => -- EVALUATE
fun lean_r2 : (Eq let20 let19) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let22 True) => -- EVALUATE
fun lean_r4 : (Eq let24 True) => -- EVALUATE
fun lean_r5 : (Eq let60 let59) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let53 let61) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let50 let63) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let40 let38) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let33 let64) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let30 let65) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let66 False) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let72 let71) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let75 True) => -- THEORY_REWRITE_BOOL
fun lean_r14 : let82 => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let84 True) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq let88 let87) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let149 let148) => -- THEORY_REWRITE_BOOL
fun lean_r18 : let88 => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let146 let74) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let142 let68) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let140 let151) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let134 xx5f8) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let155 let154) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let158 let157) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let27 let25) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let161 let159) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let133 let163) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let132 let166) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let167 let147) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let101 let168) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let104 let169) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let45 let170) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let89 let171) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let172 let143) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let174 let173) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let175 True) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq let179 let79) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let181 let180) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let128 let183) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let91 let184) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let129 let185) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let186 let25) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let82 let187) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let191 let189) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let194 let193) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let197 let196) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let198 let83) => -- THEORY_REWRITE_ARITH
fun lean_r48 : let72 => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let127 let152) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let97 let25) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let199 xx5f6) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let202 let200) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let227 let226) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let96 let228) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let18 let79) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let229 let210) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let230 let223) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let125 let232) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let236 let234) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let237 True) => -- EVALUATE
fun lean_r61 : (Eq let238 xx5f4) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let241 let223) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let168 let99) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq let246 let244) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let247 xx5f1) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let107 let205) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let250 let249) => -- THEORY_REWRITE_ARITH
fun lean_r68 : let197 => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq let251 let219) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let252 True) => -- THEORY_REWRITE_BOOL
fun lean_r71 : (Eq let253 let190) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let256 let255) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let259 let258) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let260 let207) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let261 let153) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let262 True) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let265 let264) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let266 let235) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let267 xx5f5) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let270 let269) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let273 let272) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let56 let55) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let275 True) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let279 let276) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let280 let213) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let281 True) => -- EVALUATE
fun lean_r87 : (Eq let284 let283) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let285 let159) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let287 let286) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let288 xx5f3) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let289 let25) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let292 let291) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let295 let294) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let92 let201) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let296 xx5f2) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let144 let224) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let299 let298) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let37 let300) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let303 let302) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let304 let159) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let305 let245) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let307 let223) => -- THEORY_REWRITE_BOOL
fun lean_r103 : (Eq let309 let308) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let26 let25) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let311 let240) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let312 let310) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let313 let178) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let314 let216) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let121 let35) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let122 let315) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let316 let278) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let165 let164) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let317 let274) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let182 let16) => -- THEORY_REWRITE_ARITH
fun lean_a115 : let149 => by
have lean_s0 : (Or let70 (Or let86 (Or let81 (Or let160 (Or let306 (Or let195 False)))))) :=
  (scope (fun lean_a116 : let69 =>
    (scope (fun lean_a117 : let85 =>
      (scope (fun lean_a118 : let80 =>
        (scope (fun lean_a119 : let159 =>
          (scope (fun lean_a120 : let223 =>
            (scope (fun lean_a121 : let180 =>
              have lean_s0 : (Eq let180 let181) := by timed Eq.symm lean_r38
              have lean_s1 : let181 := by timed eqResolve lean_a121 lean_s0
              have lean_s2 : (Or let357 False) :=
                (scope (fun lean_a122 : let181 =>
                  have lean_s2 : let281 := by timed trueElim lean_r86
                  have lean_s3 : let369 := by timed And.intro lean_s2 lean_a122
                  have lean_s4 : (Implies let369 let368) := by arithMulPos [let55, let38, let39], 0
                  have lean_s5 : let368 := by timed modusPonens lean_s3 lean_s4
                  have lean_s6 : let4 := by timed trueElim lean_r0
                  have lean_s7 : (Eq let223 let230) := by timed Eq.symm lean_r57
                  have lean_s8 : let230 := by timed eqResolve lean_a120 lean_s7
                  have lean_s9 : let367 := by timed And.intro lean_s6 lean_s8
                  have lean_s10 : (Implies let367 let366) := by arithMulPos [let52, let36, let3], 1
                  have lean_s11 : let366 := by timed modusPonens lean_s9 lean_s10
                  have lean_s12 : let8 := by timed trueElim lean_r1
                  have lean_s13 : (Eq let159 let285) := by timed Eq.symm lean_r88
                  have lean_s14 : let285 := by timed eqResolve lean_a119 lean_s13
                  have lean_s15 : let365 := by timed And.intro lean_s12 lean_s14
                  have lean_s16 : (Implies let365 let364) := by arithMulPos [let49, let32, let7], 1
                  have lean_s17 : let364 := by timed modusPonens lean_s15 lean_s16
                  have lean_s18 : let237 := by timed trueElim lean_r60
                  have lean_s19 : (Eq let19 let80) := by timed flipCongrArg lean_r55 [Not]
                  have lean_s20 : (Eq let20 let80) := by timed Eq.trans lean_r2 lean_s19
                  have lean_s21 : (Eq let80 let20) := by timed Eq.symm lean_s20
                  have lean_s22 : let20 := by timed eqResolve lean_a118 lean_s21
                  have lean_s23 : let363 := by timed And.intro lean_s18 lean_s22
                  have lean_s24 : (Implies let363 let362) := by arithMulNeg [let17, let11, let29], 2
                  have lean_s25 : let362 := by timed modusPonens lean_s23 lean_s24
                  have lean_s26 : let22 := by timed trueElim lean_r3
                  have lean_s27 : (Eq let147 let85) := by timed flipCongrArg lean_r19 [Not]
                  have lean_s28 : (Eq let167 let85) := by timed Eq.trans lean_r29 lean_s27
                  have lean_s29 : (Eq let85 let167) := by timed Eq.symm lean_s28
                  have lean_s30 : let167 := by timed eqResolve lean_a117 lean_s29
                  have lean_s31 : let361 := by timed And.intro lean_s26 lean_s30
                  have lean_s32 : (Implies let361 let360) := by arithMulNeg [xx5f7, let25, let21], 2
                  have lean_s33 : let360 := by timed modusPonens lean_s31 lean_s32
                  have lean_s34 : let24 := by timed trueElim lean_r4
                  have lean_s35 : (Eq let143 let69) := by timed flipCongrArg lean_r20 [Not]
                  have lean_s36 : (Eq let172 let69) := by timed Eq.trans lean_r34 lean_s35
                  have lean_s37 : (Eq let69 let172) := by timed Eq.symm lean_s36
                  have lean_s38 : let172 := by timed eqResolve lean_a116 lean_s37
                  have lean_s39 : let359 := by timed And.intro lean_s34 lean_s38
                  have lean_s40 : (Implies let359 let358) := by arithMulNeg [xx5f9, let25, let23], 2
                  have lean_s41 : let358 := by timed modusPonens lean_s39 lean_s40
                  have lean_s42 : let60 := by sumBounds [lean_s5, lean_s11, lean_s17, lean_s25, lean_s33, lean_s41]
                  have lean_s43 : (Eq let43 let43) := by timed rfl
                  have lean_s44 : (Eq let42 let42) := by timed rfl
                  let lean_s45 := by timed congrHAdd lean_s43 lean_s44
                  let lean_s46 := by timed congrHAdd lean_r32 lean_s45
                  let lean_s47 := by timed congrHAdd lean_r7 lean_s46
                  let lean_s48 := by timed congrHAdd lean_r6 lean_s47
                  have lean_s49 : (Eq let57 let289) := by timed congrHAdd lean_r82 lean_s48
                  have lean_s50 : (Eq let57 let25) := by timed Eq.trans lean_s49 lean_r91
                  let lean_s51 := by timed flipCongrArg lean_s50 [GE.ge]
                  let lean_s52 := by timed congrHAdd lean_r25 lean_r104
                  let lean_s53 := by timed congrHAdd lean_r10 lean_s52
                  let lean_s54 := by timed congrHAdd lean_r9 lean_s53
                  let lean_s55 := by timed congrHAdd lean_r98 lean_s54
                  have lean_s56 : (Eq let41 let317) := by timed congrHAdd lean_r8 lean_s55
                  have lean_s57 : (Eq let41 let274) := by timed Eq.trans lean_s56 lean_r113
                  have lean_s58 : (Eq let58 let275) := by timed congr lean_s51 lean_s57
                  have lean_s59 : (Eq let58 True) := by timed Eq.trans lean_s58 lean_r83
                  have lean_s60 : (Eq let59 let66) := by timed flipCongrArg lean_s59 [Not]
                  have lean_s61 : (Eq let59 False) := by timed Eq.trans lean_s60 lean_r11
                  have lean_s62 : (Eq let60 False) := by timed Eq.trans lean_r5 lean_s61
                  show False from by timed eqResolve lean_s42 lean_s62
                ))
              have lean_s3 : let357 := by liftOrNToNeg lean_s2
              have lean_s4 : (Eq let357 let195) := by timed flipCongrArg lean_r38 [Not]
              have lean_s5 : (Eq let357 let83) := by timed Eq.trans lean_s4 lean_r68
              have lean_s6 : let83 := by timed eqResolve lean_s3 lean_s5
              have lean_s7 : (Eq let83 let357) := by timed Eq.symm lean_s5
              have lean_s8 : let357 := by timed eqResolve lean_s6 lean_s7
              show False from by timed contradiction lean_s1 lean_s8
  ))))))))))))
have lean_s1 : (Not (And let69 (And let85 (And let80 (And let159 (And let223 let180)))))) := by liftOrNToNeg lean_s0
have lean_s2 : let356 := by timed flipNotAnd lean_s1 [let69, let85, let80, let159, let223, let180]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let252 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let71 let252) := by timed congr lean_s5 lean_r48
have lean_s7 : (Eq let71 True) := by timed Eq.trans lean_s6 lean_r70
have lean_s8 : (Eq let72 True) := by timed Eq.trans lean_r12 lean_s7
have lean_s9 : let72 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let75 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let87 let75) := by timed congr lean_s12 lean_r18
have lean_s14 : (Eq let87 True) := by timed Eq.trans lean_s13 lean_r13
have lean_s15 : (Eq let88 True) := by timed Eq.trans lean_r16 lean_s14
have lean_s16 : let88 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : let175 := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq let187 let175) := by timed congr lean_s19 lean_r14
have lean_s21 : (Eq let187 True) := by timed Eq.trans lean_s20 lean_r36
have lean_s22 : (Eq let82 True) := by timed Eq.trans lean_r43 lean_s21
have lean_s23 : let82 := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : (Eq let160 let160) := by timed rfl
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : (Eq let306 let306) := by timed rfl
let lean_s28 := by timed congr lean_s3 lean_s27
have lean_s29 : let84 := by timed rfl
let lean_s30 := by timed flipCongrArg lean_s29 [Eq]
have lean_s31 : (Eq let196 let84) := by timed congr lean_s30 lean_r68
have lean_s32 : (Eq let196 True) := by timed Eq.trans lean_s31 lean_r15
have lean_s33 : (Eq let197 True) := by timed Eq.trans lean_r46 lean_s32
have lean_s34 : let197 := by timed trueElim lean_s33
let lean_s35 := by timed congr lean_s28 lean_s34
let lean_s36 := by timed congr lean_s26 lean_s35
let lean_s37 := by timed congr lean_s24 lean_s36
let lean_s38 := by timed congr lean_s17 lean_s37
have lean_s39 : (Eq let356 let355) := by timed congr lean_s10 lean_s38
have lean_s40 : let355 := by timed eqResolve lean_s2 lean_s39
have lean_s41 : (Or let74 (Or let68 (Or let160 (Or let79 let354)))) := by permutateOr lean_s40, [1, 0, 3, 2, 4, 5], (- 1)
have lean_s42 : let340 := by timed rfl
have lean_s43 : (Eq let147 let85) := by timed flipCongrArg lean_r19 [Not]
let lean_s44 := by timed congr lean_s42 lean_s43
have lean_s45 : (Eq let145 let225) := by timed flipCongrArg lean_r96 [Not]
let lean_s46 := by timed congr lean_s42 lean_s45
have lean_s47 : (Eq let143 let69) := by timed flipCongrArg lean_r20 [Not]
let lean_s48 := by timed congr lean_s42 lean_s47
have lean_s49 : (Eq xx5f10 xx5f10) := by timed rfl
let lean_s50 := by timed flipCongrArg lean_s49 [GE.ge]
have lean_s51 : (Eq xx5f9 xx5f9) := by timed rfl
let lean_s52 := by timed flipCongrArg lean_s51 [HAdd.hAdd]
let lean_s53 := by timed flipCongrArg lean_r22 [HMul.hMul]
have lean_s54 : (Eq let135 let261) := by timed congr lean_s53 lean_r49
have lean_s55 : (Eq let135 let153) := by timed Eq.trans lean_s54 lean_r75
let lean_s56 := by timed flipCongrArg lean_s55 [HAdd.hAdd]
have lean_s57 : (Eq let39 let39) := by timed rfl
have lean_s58 : (Eq let136 let155) := by timed congr lean_s56 lean_s57
have lean_s59 : (Eq let136 let154) := by timed Eq.trans lean_s58 lean_r23
let lean_s60 := by timed flipCongrArg lean_s59 [HMul.hMul]
have lean_s61 : (Eq let103 let103) := by timed rfl
have lean_s62 : (Eq let137 let158) := by timed congr lean_s60 lean_s61
have lean_s63 : (Eq let137 let157) := by timed Eq.trans lean_s62 lean_r24
let lean_s64 := by timed flipCongrArg lean_s63 [HMul.hMul]
have lean_s65 : (Eq let138 let270) := by timed congr lean_s64 lean_r40
have lean_s66 : (Eq let138 let269) := by timed Eq.trans lean_s65 lean_r80
have lean_s67 : (Eq let139 let287) := by timed congr lean_s52 lean_s66
have lean_s68 : (Eq let139 let286) := by timed Eq.trans lean_s67 lean_r89
have lean_s69 : (Eq let150 let304) := by timed congr lean_s50 lean_s68
have lean_s70 : (Eq let150 let159) := by timed Eq.trans lean_s69 lean_r100
have lean_s71 : (Eq let151 let160) := by timed flipCongrArg lean_s70 [Not]
have lean_s72 : (Eq let140 let160) := by timed Eq.trans lean_r21 lean_s71
have lean_s73 : (Eq let141 let161) := by timed flipCongrArg lean_s72 [Not]
have lean_s74 : (Eq let141 let159) := by timed Eq.trans lean_s73 lean_r26
let lean_s75 := by timed congr lean_s42 lean_s74
have lean_s76 : (Eq xx5f11 xx5f11) := by timed rfl
let lean_s77 := by timed flipCongrArg lean_s76 [GE.ge]
have lean_s78 : (Eq xx5f8 xx5f8) := by timed rfl
let lean_s79 := by timed flipCongrArg lean_s78 [HAdd.hAdd]
have lean_s80 : (Eq let183 let192) := by timed congr lean_s79 lean_r114
have lean_s81 : (Eq let128 let192) := by timed Eq.trans lean_r39 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [HAdd.hAdd]
have lean_s83 : (Eq let185 let194) := by timed congr lean_s82 lean_r112
have lean_s84 : (Eq let185 let193) := by timed Eq.trans lean_s83 lean_r45
have lean_s85 : (Eq let129 let193) := by timed Eq.trans lean_r41 lean_s84
let lean_s86 := by timed flipCongrArg lean_s85 [HMul.hMul]
have lean_s87 : (Eq let90 let90) := by timed rfl
have lean_s88 : (Eq let130 let316) := by timed congr lean_s86 lean_s87
have lean_s89 : (Eq let130 let278) := by timed Eq.trans lean_s88 lean_r111
let lean_s90 := by timed flipCongrArg lean_s89 [HMul.hMul]
have lean_s91 : (Eq let131 let279) := by timed congr lean_s90 lean_r49
have lean_s92 : (Eq let131 let276) := by timed Eq.trans lean_s91 lean_r84
let lean_s93 := by timed flipCongrArg lean_s92 [HAdd.hAdd]
have lean_s94 : (Eq let166 let313) := by timed congr lean_s93 lean_r112
have lean_s95 : (Eq let166 let178) := by timed Eq.trans lean_s94 lean_r107
have lean_s96 : (Eq let132 let178) := by timed Eq.trans lean_r28 lean_s95
have lean_s97 : (Eq let162 let179) := by timed congr lean_s77 lean_s96
have lean_s98 : (Eq let162 let79) := by timed Eq.trans lean_s97 lean_r37
have lean_s99 : (Eq let163 let80) := by timed flipCongrArg lean_s98 [Not]
have lean_s100 : (Eq let133 let80) := by timed Eq.trans lean_r27 lean_s99
let lean_s101 := by timed congr lean_s42 lean_s100
let lean_s102 := by timed flipCongrArg lean_s76 [GE.ge]
have lean_s103 : (Eq xx5f7 xx5f7) := by timed rfl
let lean_s104 := by timed congrHAdd lean_s49 lean_r109
let lean_s105 := by timed congrHAdd lean_s51 lean_s104
have lean_s106 : (Eq let315 let309) := by timed congrHAdd lean_s103 lean_s105
have lean_s107 : (Eq let315 let308) := by timed Eq.trans lean_s106 lean_r103
have lean_s108 : (Eq let122 let308) := by timed Eq.trans lean_r110 lean_s107
let lean_s109 := by timed flipCongrArg lean_s108 [HMul.hMul]
have lean_s110 : (Eq let123 let312) := by timed congr lean_s109 lean_s61
have lean_s111 : (Eq let123 let310) := by timed Eq.trans lean_s110 lean_r106
let lean_s112 := by timed flipCongrArg lean_s111 [HMul.hMul]
have lean_s113 : (Eq let124 let311) := by timed congr lean_s112 lean_r40
have lean_s114 : (Eq let124 let240) := by timed Eq.trans lean_s113 lean_r105
have lean_s115 : (Eq let231 let241) := by timed congr lean_s102 lean_s114
have lean_s116 : (Eq let231 let223) := by timed Eq.trans lean_s115 lean_r62
have lean_s117 : (Eq let232 let306) := by timed flipCongrArg lean_s116 [Not]
have lean_s118 : (Eq let125 let306) := by timed Eq.trans lean_r58 lean_s117
have lean_s119 : (Eq let126 let307) := by timed flipCongrArg lean_s118 [Not]
have lean_s120 : (Eq let126 let223) := by timed Eq.trans lean_s119 lean_r102
let lean_s121 := by timed congr lean_s42 lean_s120
have lean_s122 : (Eq let120 let120) := by timed rfl
let lean_s123 := by timed congr lean_s42 lean_s122
have lean_s124 : (Eq xx5f0 xx5f0) := by timed rfl
let lean_s125 := by timed flipCongrArg lean_s124 [HAdd.hAdd]
have lean_s126 : (Eq let108 let305) := by timed congr lean_s125 lean_r66
have lean_s127 : (Eq let108 let245) := by timed Eq.trans lean_s126 lean_r101
let lean_s128 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s129 : let347 := by timed rfl
have lean_s130 : (Eq let119 let250) := by timed congr lean_s128 lean_s129
have lean_s131 : (Eq let119 let249) := by timed Eq.trans lean_s130 lean_r67
let lean_s132 := by timed congr lean_s42 lean_s131
let lean_s133 := by timed flipCongrArg lean_s129 [LE.le]
let lean_s134 := by timed flipCongrArg lean_s124 [HAdd.hAdd]
have lean_s135 : (Eq let105 let266) := by timed congr lean_s134 lean_r31
have lean_s136 : (Eq let105 let235) := by timed Eq.trans lean_s135 lean_r78
have lean_s137 : (Eq let118 let256) := by timed congr lean_s133 lean_s136
have lean_s138 : (Eq let118 let255) := by timed Eq.trans lean_s137 lean_r72
let lean_s139 := by timed congr lean_s42 lean_s138
let lean_s140 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s141 : let346 := by timed rfl
have lean_s142 : (Eq let117 let299) := by timed congr lean_s140 lean_s141
have lean_s143 : (Eq let117 let298) := by timed Eq.trans lean_s142 lean_r97
let lean_s144 := by timed congr lean_s42 lean_s143
let lean_s145 := by timed flipCongrArg lean_s141 [LE.le]
have lean_s146 : (Eq let116 let295) := by timed congr lean_s145 lean_s136
have lean_s147 : (Eq let116 let294) := by timed Eq.trans lean_s146 lean_r93
let lean_s148 := by timed congr lean_s42 lean_s147
let lean_s149 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s150 : let345 := by timed rfl
have lean_s151 : (Eq let115 let292) := by timed congr lean_s149 lean_s150
have lean_s152 : (Eq let115 let291) := by timed Eq.trans lean_s151 lean_r92
let lean_s153 := by timed congr lean_s42 lean_s152
let lean_s154 := by timed flipCongrArg lean_s150 [LE.le]
have lean_s155 : (Eq let114 let284) := by timed congr lean_s154 lean_s136
have lean_s156 : (Eq let114 let283) := by timed Eq.trans lean_s155 lean_r87
let lean_s157 := by timed congr lean_s42 lean_s156
let lean_s158 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s159 : let344 := by timed rfl
have lean_s160 : (Eq let113 let246) := by timed congr lean_s158 lean_s159
have lean_s161 : (Eq let113 let244) := by timed Eq.trans lean_s160 lean_r64
let lean_s162 := by timed congr lean_s42 lean_s161
let lean_s163 := by timed flipCongrArg lean_s159 [LE.le]
have lean_s164 : (Eq let112 let236) := by timed congr lean_s163 lean_s136
have lean_s165 : (Eq let112 let234) := by timed Eq.trans lean_s164 lean_r59
let lean_s166 := by timed congr lean_s42 lean_s165
let lean_s167 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s168 : let343 := by timed rfl
have lean_s169 : (Eq let111 let273) := by timed congr lean_s167 lean_s168
have lean_s170 : (Eq let111 let272) := by timed Eq.trans lean_s169 lean_r81
let lean_s171 := by timed congr lean_s42 lean_s170
let lean_s172 := by timed flipCongrArg lean_s168 [LE.le]
have lean_s173 : (Eq let110 let265) := by timed congr lean_s172 lean_s136
have lean_s174 : (Eq let110 let264) := by timed Eq.trans lean_s173 lean_r77
let lean_s175 := by timed congr lean_s42 lean_s174
let lean_s176 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s177 : let342 := by timed rfl
have lean_s178 : (Eq let109 let303) := by timed congr lean_s176 lean_s177
have lean_s179 : (Eq let109 let302) := by timed Eq.trans lean_s178 lean_r99
let lean_s180 := by timed congr lean_s42 lean_s179
let lean_s181 := by timed flipCongrArg lean_s177 [LE.le]
have lean_s182 : (Eq let106 let259) := by timed congr lean_s181 lean_s136
have lean_s183 : (Eq let106 let258) := by timed Eq.trans lean_s182 lean_r73
let lean_s184 := by timed congr lean_s42 lean_s183
let lean_s185 := by timed flipCongrArg lean_r50 [LE.le]
let lean_s186 := by timed flipCongrArg lean_r94 [HMul.hMul]
have lean_s187 : (Eq let31 let31) := by timed rfl
have lean_s188 : (Eq let93 let202) := by timed congr lean_s186 lean_s187
have lean_s189 : (Eq let93 let200) := by timed Eq.trans lean_s188 lean_r52
let lean_s190 := by timed flipCongrArg lean_s189 [HMul.hMul]
have lean_s191 : (Eq let94 let253) := by timed congr lean_s190 lean_r40
have lean_s192 : (Eq let94 let190) := by timed Eq.trans lean_s191 lean_r71
let lean_s193 := by timed congrHAdd lean_s192 lean_r33
let lean_s194 := by timed congrHAdd lean_s49 lean_s193
have lean_s195 : (Eq let228 let191) := by timed congrHAdd lean_s51 lean_s194
have lean_s196 : (Eq let228 let189) := by timed Eq.trans lean_s195 lean_r44
have lean_s197 : (Eq let96 let189) := by timed Eq.trans lean_r54 lean_s196
have lean_s198 : (Eq let98 let198) := by timed congr lean_s185 lean_s197
have lean_s199 : (Eq let98 let83) := by timed Eq.trans lean_s198 lean_r47
have lean_s200 : (Eq let99 let180) := by timed flipCongrArg lean_s199 [Not]
have lean_s201 : (Eq let168 let180) := by timed Eq.trans lean_r63 lean_s200
have lean_s202 : (Eq let101 let180) := by timed Eq.trans lean_r30 lean_s201
let lean_s203 := by timed congr lean_s184 lean_s202
let lean_s204 := by timed congr lean_s180 lean_s203
let lean_s205 := by timed congr lean_s175 lean_s204
let lean_s206 := by timed congr lean_s171 lean_s205
let lean_s207 := by timed congr lean_s166 lean_s206
let lean_s208 := by timed congr lean_s162 lean_s207
let lean_s209 := by timed congr lean_s157 lean_s208
let lean_s210 := by timed congr lean_s153 lean_s209
let lean_s211 := by timed congr lean_s148 lean_s210
let lean_s212 := by timed congr lean_s144 lean_s211
let lean_s213 := by timed congr lean_s139 lean_s212
let lean_s214 := by timed congr lean_s132 lean_s213
let lean_s215 := by timed congr lean_s123 lean_s214
let lean_s216 := by timed congr lean_s121 lean_s215
let lean_s217 := by timed congr lean_s101 lean_s216
let lean_s218 := by timed congr lean_s75 lean_s217
let lean_s219 := by timed congr lean_s48 lean_s218
let lean_s220 := by timed congr lean_s46 lean_s219
have lean_s221 : (Eq let148 let318) := by timed congr lean_s44 lean_s220
have lean_s222 : (Eq let149 let318) := by timed Eq.trans lean_r17 lean_s221
have lean_s223 : let340 := by timed rfl
have lean_s224 : let353 := by timed rfl
let lean_s225 := by timed congr lean_s223 lean_s224
have lean_s226 : let352 := by timed rfl
let lean_s227 := by timed congr lean_s223 lean_s226
have lean_s228 : let351 := by timed rfl
let lean_s229 := by timed congr lean_s223 lean_s228
have lean_s230 : let350 := by timed rfl
let lean_s231 := by timed congr lean_s223 lean_s230
have lean_s232 : let349 := by timed rfl
let lean_s233 := by timed congr lean_s223 lean_s232
have lean_s234 : let348 := by timed rfl
let lean_s235 := by timed congr lean_s223 lean_s234
have lean_s236 : let318 := by timed eqResolve lean_a115 lean_s222
have lean_s237 : let120 := by andElim lean_s236, 6
let lean_s238 := by timed flipCongrArg lean_s237 [Eq]
have lean_s239 : let262 := by timed rfl
have lean_s240 : (Eq let120 let262) := by timed congr lean_s238 lean_s239
let lean_s241 := by timed congr lean_s223 lean_s240
have lean_s242 : (Eq let15 let15) := by timed rfl
let lean_s243 := by timed flipCongrArg lean_s242 [HMul.hMul]
have lean_s244 : (Eq let242 let186) := by timed congr lean_s243 lean_s237
let lean_s245 := by timed flipCongrArg lean_s244 [HAdd.hAdd]
have lean_s246 : let347 := by timed rfl
have lean_s247 : (Eq let248 let335) := by timed congr lean_s245 lean_s246
let lean_s248 := by timed flipCongrArg lean_s247 [GE.ge]
have lean_s249 : let341 := by timed rfl
have lean_s250 : (Eq let249 let336) := by timed congr lean_s248 lean_s249
let lean_s251 := by timed congr lean_s223 lean_s250
let lean_s252 := by timed flipCongrArg lean_s237 [HAdd.hAdd]
have lean_s253 : (Eq let219 let219) := by timed rfl
have lean_s254 : (Eq let254 let251) := by timed congr lean_s252 lean_s253
let lean_s255 := by timed flipCongrArg lean_s254 [GE.ge]
have lean_s256 : let339 := by timed rfl
have lean_s257 : (Eq let255 let334) := by timed congr lean_s255 lean_s256
let lean_s258 := by timed congr lean_s223 lean_s257
let lean_s259 := by timed flipCongrArg lean_s244 [HAdd.hAdd]
have lean_s260 : let346 := by timed rfl
have lean_s261 : (Eq let297 let332) := by timed congr lean_s259 lean_s260
let lean_s262 := by timed flipCongrArg lean_s261 [GE.ge]
have lean_s263 : (Eq let298 let333) := by timed congr lean_s262 lean_s249
let lean_s264 := by timed congr lean_s223 lean_s263
let lean_s265 := by timed flipCongrArg lean_s237 [HAdd.hAdd]
have lean_s266 : (Eq let216 let216) := by timed rfl
have lean_s267 : (Eq let293 let314) := by timed congr lean_s265 lean_s266
let lean_s268 := by timed flipCongrArg lean_s267 [GE.ge]
have lean_s269 : (Eq let294 let331) := by timed congr lean_s268 lean_s256
let lean_s270 := by timed congr lean_s223 lean_s269
let lean_s271 := by timed flipCongrArg lean_s244 [HAdd.hAdd]
have lean_s272 : let345 := by timed rfl
have lean_s273 : (Eq let290 let329) := by timed congr lean_s271 lean_s272
let lean_s274 := by timed flipCongrArg lean_s273 [GE.ge]
have lean_s275 : (Eq let291 let330) := by timed congr lean_s274 lean_s249
let lean_s276 := by timed congr lean_s223 lean_s275
let lean_s277 := by timed flipCongrArg lean_s237 [HAdd.hAdd]
have lean_s278 : (Eq let213 let213) := by timed rfl
have lean_s279 : (Eq let282 let280) := by timed congr lean_s277 lean_s278
let lean_s280 := by timed flipCongrArg lean_s279 [GE.ge]
have lean_s281 : (Eq let283 let328) := by timed congr lean_s280 lean_s256
let lean_s282 := by timed congr lean_s223 lean_s281
let lean_s283 := by timed flipCongrArg lean_s244 [HAdd.hAdd]
have lean_s284 : let344 := by timed rfl
have lean_s285 : (Eq let243 let326) := by timed congr lean_s283 lean_s284
let lean_s286 := by timed flipCongrArg lean_s285 [GE.ge]
have lean_s287 : (Eq let244 let327) := by timed congr lean_s286 lean_s249
let lean_s288 := by timed congr lean_s223 lean_s287
let lean_s289 := by timed flipCongrArg lean_s237 [HAdd.hAdd]
have lean_s290 : (Eq let210 let210) := by timed rfl
have lean_s291 : (Eq let233 let229) := by timed congr lean_s289 lean_s290
let lean_s292 := by timed flipCongrArg lean_s291 [GE.ge]
have lean_s293 : (Eq let234 let325) := by timed congr lean_s292 lean_s256
let lean_s294 := by timed congr lean_s223 lean_s293
let lean_s295 := by timed flipCongrArg lean_s244 [HAdd.hAdd]
have lean_s296 : let343 := by timed rfl
have lean_s297 : (Eq let271 let323) := by timed congr lean_s295 lean_s296
let lean_s298 := by timed flipCongrArg lean_s297 [GE.ge]
have lean_s299 : (Eq let272 let324) := by timed congr lean_s298 lean_s249
let lean_s300 := by timed congr lean_s223 lean_s299
let lean_s301 := by timed flipCongrArg lean_s237 [HAdd.hAdd]
have lean_s302 : (Eq let207 let207) := by timed rfl
have lean_s303 : (Eq let263 let260) := by timed congr lean_s301 lean_s302
let lean_s304 := by timed flipCongrArg lean_s303 [GE.ge]
have lean_s305 : (Eq let264 let322) := by timed congr lean_s304 lean_s256
let lean_s306 := by timed congr lean_s223 lean_s305
let lean_s307 := by timed flipCongrArg lean_s244 [HAdd.hAdd]
have lean_s308 : let342 := by timed rfl
have lean_s309 : (Eq let301 let320) := by timed congr lean_s307 lean_s308
let lean_s310 := by timed flipCongrArg lean_s309 [GE.ge]
have lean_s311 : (Eq let302 let321) := by timed congr lean_s310 lean_s249
let lean_s312 := by timed congr lean_s223 lean_s311
let lean_s313 := by timed flipCongrArg lean_s237 [HAdd.hAdd]
have lean_s314 : (Eq let173 let173) := by timed rfl
have lean_s315 : (Eq let257 let174) := by timed congr lean_s313 lean_s314
let lean_s316 := by timed flipCongrArg lean_s315 [GE.ge]
have lean_s317 : (Eq let258 let319) := by timed congr lean_s316 lean_s256
let lean_s318 := by timed congr lean_s223 lean_s317
have lean_s319 : let338 := by timed rfl
let lean_s320 := by timed congr lean_s318 lean_s319
let lean_s321 := by timed congr lean_s312 lean_s320
let lean_s322 := by timed congr lean_s306 lean_s321
let lean_s323 := by timed congr lean_s300 lean_s322
let lean_s324 := by timed congr lean_s294 lean_s323
let lean_s325 := by timed congr lean_s288 lean_s324
let lean_s326 := by timed congr lean_s282 lean_s325
let lean_s327 := by timed congr lean_s276 lean_s326
let lean_s328 := by timed congr lean_s270 lean_s327
let lean_s329 := by timed congr lean_s264 lean_s328
let lean_s330 := by timed congr lean_s258 lean_s329
let lean_s331 := by timed congr lean_s251 lean_s330
let lean_s332 := by timed congr lean_s241 lean_s331
let lean_s333 := by timed congr lean_s235 lean_s332
let lean_s334 := by timed congr lean_s233 lean_s333
let lean_s335 := by timed congr lean_s231 lean_s334
let lean_s336 := by timed congr lean_s229 lean_s335
let lean_s337 := by timed congr lean_s227 lean_s336
have lean_s338 : (Eq let318 let337) := by timed congr lean_s225 lean_s337
have lean_s339 : let340 := by timed rfl
have lean_s340 : let353 := by timed rfl
let lean_s341 := by timed congr lean_s339 lean_s340
have lean_s342 : let352 := by timed rfl
let lean_s343 := by timed congr lean_s339 lean_s342
have lean_s344 : let351 := by timed rfl
let lean_s345 := by timed congr lean_s339 lean_s344
have lean_s346 : let350 := by timed rfl
let lean_s347 := by timed congr lean_s339 lean_s346
have lean_s348 : let349 := by timed rfl
let lean_s349 := by timed congr lean_s339 lean_s348
have lean_s350 : let348 := by timed rfl
let lean_s351 := by timed congr lean_s339 lean_s350
let lean_s352 := by timed congr lean_s339 lean_r76
let lean_s353 := by timed flipCongrArg lean_r42 [HAdd.hAdd]
have lean_s354 : (Eq let335 let247) := by timed congr lean_s353 lean_s129
have lean_s355 : (Eq let335 xx5f1) := by timed Eq.trans lean_s354 lean_r65
let lean_s356 := by timed flipCongrArg lean_s355 [GE.ge]
have lean_s357 : let341 := by timed rfl
have lean_s358 : (Eq let336 let221) := by timed congr lean_s356 lean_s357
let lean_s359 := by timed congr lean_s339 lean_s358
let lean_s360 := by timed flipCongrArg lean_r69 [GE.ge]
have lean_s361 : let339 := by timed rfl
have lean_s362 : (Eq let334 let220) := by timed congr lean_s360 lean_s361
let lean_s363 := by timed congr lean_s339 lean_s362
let lean_s364 := by timed flipCongrArg lean_r42 [HAdd.hAdd]
have lean_s365 : (Eq let332 let296) := by timed congr lean_s364 lean_s141
have lean_s366 : (Eq let332 xx5f2) := by timed Eq.trans lean_s365 lean_r95
let lean_s367 := by timed flipCongrArg lean_s366 [GE.ge]
have lean_s368 : (Eq let333 let218) := by timed congr lean_s367 lean_s357
let lean_s369 := by timed congr lean_s339 lean_s368
let lean_s370 := by timed flipCongrArg lean_r108 [GE.ge]
have lean_s371 : (Eq let331 let217) := by timed congr lean_s370 lean_s361
let lean_s372 := by timed congr lean_s339 lean_s371
let lean_s373 := by timed flipCongrArg lean_r42 [HAdd.hAdd]
have lean_s374 : (Eq let329 let288) := by timed congr lean_s373 lean_s150
have lean_s375 : (Eq let329 xx5f3) := by timed Eq.trans lean_s374 lean_r90
let lean_s376 := by timed flipCongrArg lean_s375 [GE.ge]
have lean_s377 : (Eq let330 let215) := by timed congr lean_s376 lean_s357
let lean_s378 := by timed congr lean_s339 lean_s377
let lean_s379 := by timed flipCongrArg lean_r85 [GE.ge]
have lean_s380 : (Eq let328 let214) := by timed congr lean_s379 lean_s361
let lean_s381 := by timed congr lean_s339 lean_s380
let lean_s382 := by timed flipCongrArg lean_r42 [HAdd.hAdd]
have lean_s383 : (Eq let326 let238) := by timed congr lean_s382 lean_s159
have lean_s384 : (Eq let326 xx5f4) := by timed Eq.trans lean_s383 lean_r61
let lean_s385 := by timed flipCongrArg lean_s384 [GE.ge]
have lean_s386 : (Eq let327 let212) := by timed congr lean_s385 lean_s357
let lean_s387 := by timed congr lean_s339 lean_s386
let lean_s388 := by timed flipCongrArg lean_r56 [GE.ge]
have lean_s389 : (Eq let325 let211) := by timed congr lean_s388 lean_s361
let lean_s390 := by timed congr lean_s339 lean_s389
let lean_s391 := by timed flipCongrArg lean_r42 [HAdd.hAdd]
have lean_s392 : (Eq let323 let267) := by timed congr lean_s391 lean_s168
have lean_s393 : (Eq let323 xx5f5) := by timed Eq.trans lean_s392 lean_r79
let lean_s394 := by timed flipCongrArg lean_s393 [GE.ge]
have lean_s395 : (Eq let324 let209) := by timed congr lean_s394 lean_s357
let lean_s396 := by timed congr lean_s339 lean_s395
let lean_s397 := by timed flipCongrArg lean_r74 [GE.ge]
have lean_s398 : (Eq let322 let208) := by timed congr lean_s397 lean_s361
let lean_s399 := by timed congr lean_s339 lean_s398
let lean_s400 := by timed flipCongrArg lean_r42 [HAdd.hAdd]
have lean_s401 : (Eq let320 let199) := by timed congr lean_s400 lean_s177
have lean_s402 : (Eq let320 xx5f6) := by timed Eq.trans lean_s401 lean_r51
let lean_s403 := by timed flipCongrArg lean_s402 [GE.ge]
have lean_s404 : (Eq let321 let206) := by timed congr lean_s403 lean_s357
let lean_s405 := by timed congr lean_s339 lean_s404
let lean_s406 := by timed flipCongrArg lean_r35 [GE.ge]
have lean_s407 : (Eq let319 let204) := by timed congr lean_s406 lean_s361
let lean_s408 := by timed congr lean_s339 lean_s407
have lean_s409 : let338 := by timed rfl
let lean_s410 := by timed congr lean_s408 lean_s409
let lean_s411 := by timed congr lean_s405 lean_s410
let lean_s412 := by timed congr lean_s399 lean_s411
let lean_s413 := by timed congr lean_s396 lean_s412
let lean_s414 := by timed congr lean_s390 lean_s413
let lean_s415 := by timed congr lean_s387 lean_s414
let lean_s416 := by timed congr lean_s381 lean_s415
let lean_s417 := by timed congr lean_s378 lean_s416
let lean_s418 := by timed congr lean_s372 lean_s417
let lean_s419 := by timed congr lean_s369 lean_s418
let lean_s420 := by timed congr lean_s363 lean_s419
let lean_s421 := by timed congr lean_s359 lean_s420
let lean_s422 := by timed congr lean_s352 lean_s421
let lean_s423 := by timed congr lean_s351 lean_s422
let lean_s424 := by timed congr lean_s349 lean_s423
let lean_s425 := by timed congr lean_s347 lean_s424
let lean_s426 := by timed congr lean_s345 lean_s425
let lean_s427 := by timed congr lean_s343 lean_s426
have lean_s428 : (Eq let337 let227) := by timed congr lean_s341 lean_s427
have lean_s429 : (Eq let337 let226) := by timed Eq.trans lean_s428 lean_r53
have lean_s430 : (Eq let318 let226) := by timed Eq.trans lean_s338 lean_s429
have lean_s431 : (Eq let149 let226) := by timed Eq.trans lean_s222 lean_s430
have lean_s432 : let226 := by timed eqResolve lean_a115 lean_s431
have lean_s433 : let180 := by andElim lean_s432, 18
let lean_s434 := by R1 lean_s41, lean_s433, let83, [(- 1), 0]
have lean_s435 : let223 := by andElim lean_s432, 5
let lean_s436 := by R2 lean_s434, lean_s435, let223, [(- 1), 0]
have lean_s437 : let80 := by andElim lean_s432, 4
let lean_s438 := by R1 lean_s436, lean_s437, let79, [(- 1), 0]
have lean_s439 : let159 := by andElim lean_s432, 3
let lean_s440 := by R2 lean_s438, lean_s439, let159, [(- 1), 0]
have lean_s441 : let69 := by andElim lean_s432, 2
let lean_s442 := by R1 lean_s440, lean_s441, let68, [(- 1), 0]
have lean_s443 : let85 := by andElim lean_s432, 0
exact (show False from by R1 lean_s442, lean_s443, let74, [0, 0])


