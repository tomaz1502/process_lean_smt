open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5f1 : Rat}
variable {xx5f2 : Rat}
variable {xx5f3 : Rat}
variable {xx5f5 : Rat}
variable {xx5f0 : Rat}
variable {xx5f7 : Rat}
variable {xx5f4 : Rat}
variable {xx5f7 : Rat}
variable {xx5f6 : Rat}
variable {xx5f6 : Rat}
variable {xx5f0 : Rat}
variable {xx5f3 : Rat}
variable {xx5f2 : Rat}
variable {xx5f1 : Rat}
variable {xx5f4 : Rat}
variable {xx5f8 : Rat}
variable {xx5f5 : Rat}
variable {xx5f8 : Rat}

theorem th0 :
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 1986005990)
  let let3 := (Int.ofNat 1002004006003)
  let let4 := (binrel% HDiv.hDiv let3 let2)
  let let5 := (binrel% GT.gt let4 let1)
  let let6 := (binrel% HDiv.hDiv (Int.ofNat 1003990011993) let2)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% LT.lt let7 let1)
  let let9 := (Int.ofNat 999)
  let let10 := (Int.ofNat 1001)
  let let11 := (binrel% HDiv.hDiv let10 let9)
  let let12 := (Int.ofNat 2)
  let let13 := (binrel% HDiv.hDiv let12 let9)
  let let14 := (Int.ofNat 1)
  let let15 := (Neg.neg let14)
  let let16 := (binrel% HMul.hMul let15 xx5f7)
  let let17 := (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd let16 (binrel% HMul.hMul (Neg.neg let13) xx5f8)))
  let let18 := (binrel% LE.le let17 let11)
  let let19 := (Not let18)
  let let20 := (binrel% GT.gt let17 let11)
  let let21 := (Int.ofNat 993002995)
  let let22 := (binrel% HDiv.hDiv (Int.ofNat 2001997998) let21)
  let let23 := (Neg.neg let22)
  let let24 := (binrel% LT.lt let23 let1)
  let let25 := (Rat.ofInt 0)
  let let26 := (binrel% LE.le xx5f4 let25)
  let let27 := (Not let26)
  let let28 := (binrel% GT.gt xx5f4 let25)
  let let29 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 599203597599) (Int.ofNat 397201198)))
  let let30 := (binrel% LT.lt let29 let1)
  let let31 := (binrel% HDiv.hDiv (Int.ofNat 1000001999997) let21)
  let let32 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 xx5f5) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 xx5f6) (binrel% HMul.hMul (Neg.neg let31) xx5f7)))
  let let33 := (Int.ofNat 1998)
  let let34 := (binrel% HDiv.hDiv let33 let10)
  let let35 := (Neg.neg let34)
  let let36 := (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd (binrel% HMul.hMul let34 xx5f6) (binrel% HMul.hMul let35 xx5f7)))
  let let37 := (binrel% HMul.hMul let4 let36)
  let let38 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 xx5f5) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 xx5f7) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1004995007) let21) xx5f8)))
  let let39 := (binrel% HMul.hMul let7 let17)
  let let40 := (binrel% HMul.hMul let29 xx5f6)
  let let41 := (binrel% HMul.hMul let23 xx5f4)
  let let42 := (binrel% HAdd.hAdd let41 let40)
  let let43 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f6) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f7) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1997998002) let21)) xx5f8))))
  let let44 := (binrel% HDiv.hDiv let9 let12)
  let let45 := (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd (binrel% HMul.hMul let44 xx5f6) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 xx5f7) xx5f8)))
  let let46 := (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let38 let42))))
  let let47 := (binrel% HMul.hMul let29 let25)
  let let48 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 405875687624406) (Int.ofNat 124125374375)))
  let let49 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1006000002007) let2))
  let let50 := (Neg.neg (binrel% HDiv.hDiv let3 let21))
  let let51 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1502499497499) (Int.ofNat 496501497500)))
  let let52 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 7005) (Int.ofNat 4)))
  let let53 := (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let25 let25)))))
  let let54 := (Rat.ofInt 1)
  let let55 := (binrel% HMul.hMul let54 let45)
  let let56 := (binrel% GE.ge let25 let48)
  let let57 := (Not True)
  let let58 := (binrel% GE.ge let45 let52)
  let let59 := (Not let58)
  let let60 := (binrel% LT.lt let45 let52)
  let let61 := (binrel% HMul.hMul let15 xx5f6)
  let let62 := (binrel% GE.ge let61 let1)
  let let63 := (Not let62)
  let let64 := (Not let63)
  let let65 := (Eq let64 let62)
  let let66 := (binrel% HMul.hMul let15 xx5f4)
  let let67 := (binrel% GE.ge let66 let1)
  let let68 := (Eq let67 let67)
  let let69 := (binrel% HMul.hMul let13 xx5f8)
  let let70 := (binrel% HAdd.hAdd xx5f7 let69)
  let let71 := (binrel% HMul.hMul let15 xx5f5)
  let let72 := (binrel% GE.ge (binrel% HAdd.hAdd let71 let70) (Neg.neg let11))
  let let73 := (Not let72)
  let let74 := (Not let73)
  let let75 := (Eq let74 let72)
  let let76 := (binrel% GT.gt let22 let1)
  let let77 := (Not let59)
  let let78 := (Eq let77 let58)
  let let79 := (binrel% HDiv.hDiv (Rat.ofInt 2335) (Rat.ofInt 666))
  let let80 := (Rat.ofInt 999)
  let let81 := (binrel% HDiv.hDiv let54 let80)
  let let82 := (Rat.ofInt 2)
  let let83 := (binrel% HAdd.hAdd xx5f8 xx5f5)
  let let84 := (binrel% HMul.hMul let83 let82)
  let let85 := (binrel% HMul.hMul let84 let81)
  let let86 := (binrel% HAdd.hAdd xx5f6 xx5f7)
  let let87 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let86 let85) let79)
  let let88 := (binrel% HSub.hSub let54 let54)
  let let89 := (binrel% LE.le let88 let87)
  let let90 := (Not let89)
  let let91 := (Or let90 let90)
  let let92 := (Or (Or (Or (Or (Or (Or (Or let91 let90) let90) let90) let90) let90) let90) let90)
  let let93 := (Rat.ofInt 1000)
  let let94 := (Rat.ofInt 1001)
  let let95 := (binrel% HDiv.hDiv let94 let93)
  let let96 := (binrel% HAdd.hAdd xx5f0 let95)
  let let97 := (binrel% LE.le xx5f3 let96)
  let let98 := (binrel% HDiv.hDiv let80 let93)
  let let99 := (binrel% HAdd.hAdd xx5f0 let98)
  let let100 := (binrel% LE.le let99 xx5f3)
  let let101 := (binrel% LE.le xx5f2 let96)
  let let102 := (binrel% LE.le let99 xx5f2)
  let let103 := (binrel% LE.le xx5f1 let96)
  let let104 := (binrel% LE.le let99 xx5f1)
  let let105 := (Eq xx5f0 let25)
  let let106 := (binrel% HDiv.hDiv (Rat.ofInt 1501) let93)
  let let107 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd xx5f4 xx5f6) xx5f7) let106)
  let let108 := (binrel% HMul.hMul let107 let94)
  let let109 := (binrel% HMul.hMul let108 let81)
  let let110 := (binrel% LT.lt xx5f8 let109)
  let let111 := (Not let110)
  let let112 := (binrel% HDiv.hDiv let54 let82)
  let let113 := (binrel% HSub.hSub xx5f5 xx5f7)
  let let114 := (binrel% HSub.hSub let113 let54)
  let let115 := (binrel% HMul.hMul let114 let80)
  let let116 := (binrel% HMul.hMul let115 let112)
  let let117 := (binrel% HSub.hSub let116 let54)
  let let118 := (binrel% LT.lt xx5f8 let117)
  let let119 := (binrel% HMul.hMul xx5f5 let54)
  let let120 := (binrel% HMul.hMul let119 let112)
  let let121 := (binrel% HAdd.hAdd let120 let54)
  let let122 := (binrel% HMul.hMul let121 let94)
  let let123 := (binrel% HMul.hMul let122 let81)
  let let124 := (binrel% HAdd.hAdd xx5f6 let123)
  let let125 := (binrel% LT.lt xx5f7 let124)
  let let126 := (Not let125)
  let let127 := (binrel% LE.le xx5f6 let25)
  let let128 := (Not let127)
  let let129 := (binrel% LE.le xx5f5 let25)
  let let130 := (Not let129)
  let let131 := (And let27 (And let130 (And let128 (And let126 (And let118 (And let111 (And let105 (And let104 (And let103 (And let102 (And let101 (And let100 (And let97 let92)))))))))))))
  let let132 := (And (And (And (And (And (And (And (And (And (And (And (And (And let27 let130) let128) let126) let118) let111) let105) let104) let103) let102) let101) let100) let97) let92)
  let let133 := (binrel% HDiv.hDiv let9 let10)
  let let134 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd xx5f7 (binrel% HMul.hMul (Neg.neg let133) xx5f8))))
  let let135 := (binrel% HMul.hMul let22 let134)
  let let136 := (binrel% GT.gt let54 let1)
  let let137 := (Int.ofNat 1000)
  let let138 := (binrel% HDiv.hDiv let10 let137)
  let let139 := (binrel% HAdd.hAdd let138 xx5f0)
  let let140 := (binrel% HAdd.hAdd xx5f0 let138)
  let let141 := (binrel% GT.gt xx5f6 let25)
  let let142 := (binrel% HDiv.hDiv let14 let12)
  let let143 := (binrel% HDiv.hDiv (Int.ofNat 1501) let137)
  let let144 := (binrel% GE.ge (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let16 (binrel% HMul.hMul let133 xx5f8)))) let143)
  let let145 := (Int.ofNat 1502501)
  let let146 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let145 (Int.ofNat 999000)) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 xx5f6) (binrel% HMul.hMul let11 xx5f7))))
  let let147 := (binrel% GE.ge xx5f8 let146)
  let let148 := (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd xx5f7 (binrel% HAdd.hAdd let85 let79)))
  let let149 := (Eq let62 let64)
  let let150 := (Neg.neg let138)
  let let151 := (binrel% HMul.hMul let15 xx5f1)
  let let152 := (binrel% HAdd.hAdd xx5f0 let151)
  let let153 := (binrel% GE.ge let152 let150)
  let let154 := (binrel% LE.le xx5f1 let139)
  let let155 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 xx5f5) (binrel% HMul.hMul let12 xx5f8))
  let let156 := (binrel% HAdd.hAdd xx5f5 xx5f8)
  let let157 := (binrel% HMul.hMul let156 let82)
  let let158 := (binrel% HMul.hMul let23 let25)
  let let159 := (Neg.neg let54)
  let let160 := (binrel% HMul.hMul let159 xx5f7)
  let let161 := (binrel% HAdd.hAdd xx5f5 let160)
  let let162 := (Eq let72 let74)
  let let163 := (binrel% HMul.hMul let142 xx5f5)
  let let164 := (binrel% HAdd.hAdd let14 let163)
  let let165 := (binrel% HAdd.hAdd let163 let54)
  let let166 := (binrel% HAdd.hAdd let25 let151)
  let let167 := (binrel% HDiv.hDiv let9 let137)
  let let168 := (binrel% HMul.hMul let15 xx5f0)
  let let169 := (binrel% HAdd.hAdd let168 xx5f3)
  let let170 := (binrel% GE.ge let169 let167)
  let let171 := (binrel% HAdd.hAdd let167 xx5f0)
  let let172 := (binrel% LE.le let171 xx5f3)
  let let173 := (binrel% HMul.hMul let15 xx5f3)
  let let174 := (binrel% HAdd.hAdd let25 let173)
  let let175 := (binrel% HAdd.hAdd xx5f5 let16)
  let let176 := (binrel% HAdd.hAdd let15 let175)
  let let177 := (binrel% HAdd.hAdd let175 let159)
  let let178 := (binrel% HMul.hMul let15 let25)
  let let179 := (binrel% GE.ge (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd (binrel% HMul.hMul let35 xx5f6) (binrel% HMul.hMul let34 xx5f7))) let12)
  let let180 := (Neg.neg let82)
  let let181 := (binrel% LE.le let36 let180)
  let let182 := (binrel% HDiv.hDiv (Int.ofNat 2335) (Int.ofNat 666))
  let let183 := (Eq let62 let62)
  let let184 := (binrel% GE.ge let71 let1)
  let let185 := (binrel% HAdd.hAdd let168 xx5f2)
  let let186 := (binrel% GE.ge let185 let167)
  let let187 := (binrel% LE.le let171 xx5f2)
  let let188 := (Neg.neg let143)
  let let189 := (binrel% HMul.hMul let22 let188)
  let let190 := (binrel% GE.ge xx5f8 let117)
  let let191 := (Not let190)
  let let192 := (binrel% GE.ge xx5f8 let109)
  let let193 := (Not let192)
  let let194 := (binrel% HAdd.hAdd let25 xx5f2)
  let let195 := (binrel% HMul.hMul let7 let11)
  let let196 := (binrel% HMul.hMul let4 let180)
  let let197 := (binrel% HMul.hMul let54 let52)
  let let198 := (binrel% HAdd.hAdd let197 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd let195 (binrel% HAdd.hAdd let158 let47)))))
  let let199 := (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let39 let42))))
  let let200 := (binrel% GE.ge let199 let198)
  let let201 := (Not let200)
  let let202 := (binrel% LT.lt let199 let198)
  let let203 := (binrel% HMul.hMul let159 let54)
  let let204 := (Not let179)
  let let205 := (Not let204)
  let let206 := (Or let90 (Or let90 (Or let90 (Or let90 (Or let90 (Or let90 (Or let90 let91)))))))
  let let207 := (binrel% HAdd.hAdd let168 xx5f1)
  let let208 := (binrel% GE.ge let207 let167)
  let let209 := (binrel% LE.le let171 xx5f1)
  let let210 := (binrel% HMul.hMul let13 xx5f5)
  let let211 := (binrel% HAdd.hAdd let210 let69)
  let let212 := (binrel% HDiv.hDiv let14 let9)
  let let213 := (binrel% HMul.hMul let155 let212)
  let let214 := (binrel% HMul.hMul let15 xx5f2)
  let let215 := (binrel% HAdd.hAdd xx5f0 let214)
  let let216 := (binrel% GE.ge let215 let150)
  let let217 := (binrel% LE.le xx5f2 let139)
  let let218 := (Neg.neg let44)
  let let219 := (binrel% HAdd.hAdd (binrel% HMul.hMul let44 xx5f5) (binrel% HMul.hMul let218 xx5f7))
  let let220 := (binrel% HDiv.hDiv let10 let12)
  let let221 := (binrel% HAdd.hAdd (Neg.neg let220) let219)
  let let222 := (binrel% GE.ge xx5f8 let221)
  let let223 := (Eq let25 let25)
  let let224 := (Eq let72 let72)
  let let225 := (binrel% HAdd.hAdd let10 (binrel% HMul.hMul let220 xx5f5))
  let let226 := (binrel% HMul.hMul let164 let94)
  let let227 := (binrel% HAdd.hAdd let25 xx5f1)
  let let228 := (binrel% HAdd.hAdd let218 let219)
  let let229 := (Neg.neg let9)
  let let230 := (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 xx5f5) (binrel% HMul.hMul let229 xx5f7)))
  let let231 := (binrel% HMul.hMul let230 let142)
  let let232 := (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd xx5f6 let70)))
  let let233 := (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd xx5f7 (binrel% HAdd.hAdd let211 let182)))
  let let234 := (Not let144)
  let let235 := (Not let234)
  let let236 := (binrel% HAdd.hAdd let25 xx5f3)
  let let237 := (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd xx5f4 let86))
  let let238 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd xx5f7 let143)))
  let let239 := (binrel% LE.le let25 let232)
  let let240 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let145 let137) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 xx5f6) (binrel% HMul.hMul let10 xx5f7))))
  let let241 := (binrel% HMul.hMul let240 let212)
  let let242 := (binrel% HAdd.hAdd let113 let203)
  let let243 := (binrel% HMul.hMul let237 let94)
  let let244 := (binrel% HAdd.hAdd let228 let159)
  let let245 := (Not let67)
  let let246 := (Not let245)
  let let247 := (Eq let246 let67)
  let let248 := (Eq let58 let77)
  let let249 := (binrel% HAdd.hAdd xx5f0 let173)
  let let250 := (binrel% GE.ge let249 let150)
  let let251 := (binrel% LE.le xx5f3 let139)
  let let252 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd xx5f7 let106)))
  let let253 := (binrel% HMul.hMul let176 let80)
  let let254 := (binrel% HAdd.hAdd let116 let203)
  let let255 := (binrel% HMul.hMul (binrel% HDiv.hDiv let10 let33) xx5f5)
  let let256 := (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let255 xx5f6))
  let let257 := (binrel% GE.ge xx5f7 let256)
  let let258 := (binrel% LE.le let134 let188)
  let let259 := (Eq let58 let58)
  let let260 := (binrel% HAdd.hAdd let11 let255)
  let let261 := (binrel% HAdd.hAdd xx5f6 let260)
  let let262 := (binrel% HAdd.hAdd let25 let214)
  let let263 := (binrel% HMul.hMul let225 let212)
  let let264 := (binrel% HAdd.hAdd xx5f0 let167)
  let let265 := (binrel% GE.ge let173 let150)
  let let266 := (binrel% GE.ge xx5f3 let167)
  let let267 := (binrel% GE.ge let214 let150)
  let let268 := (binrel% GE.ge xx5f2 let167)
  let let269 := (binrel% GE.ge let151 let150)
  let let270 := (binrel% GE.ge xx5f1 let167)
  let let271 := (And let270 (And let269 (And let268 (And let267 (And let266 (And let265 let59))))))
  let let272 := (Not let184)
  let let273 := (And let245 (And let272 (And let63 (And let179 (And let73 (And let144 let271))))))
  let let274 := (And let245 (And let272 (And let63 (And let179 (And let73 (And let144 (And True let271)))))))
  let let275 := (binrel% HMul.hMul xx5f5 let142)
  let let276 := (Eq let67 let246)
  let let277 := (binrel% GE.ge xx5f7 let124)
  let let278 := (Not let277)
  let let279 := (And let245 (And let272 (And let63 (And let179 (And let73 (And let144 (And let105 (And let208 (And let153 (And let186 (And let216 (And let170 (And let250 let59)))))))))))))
  let let280 := (binrel% GE.ge let174 let150)
  let let281 := (binrel% HAdd.hAdd let178 xx5f3)
  let let282 := (binrel% GE.ge let281 let167)
  let let283 := (binrel% GE.ge let262 let150)
  let let284 := (binrel% HAdd.hAdd let178 xx5f2)
  let let285 := (binrel% GE.ge let284 let167)
  let let286 := (binrel% GE.ge let166 let150)
  let let287 := (binrel% HAdd.hAdd let178 xx5f1)
  let let288 := (binrel% GE.ge let287 let167)
  let let289 := (And let245 (And let272 (And let63 (And let179 (And let73 (And let144 (And let223 (And let288 (And let286 (And let285 (And let283 (And let282 (And let280 let59)))))))))))))
  let let290 := (Eq let59 let59)
  let let291 := (Eq let150 let150)
  let let292 := (Eq And And)
  let let293 := (Eq let167 let167)
  let let294 := (Eq xx5f3 xx5f3)
  let let295 := (Eq xx5f2 xx5f2)
  let let296 := (Eq xx5f1 xx5f1)
  let let297 := (Eq let144 let144)
  let let298 := (Eq let73 let73)
  let let299 := (Eq let179 let179)
  let let300 := (Eq let63 let63)
  let let301 := (Eq let272 let272)
  let let302 := (Eq let245 let245)
  let let303 := (Or let234 let58)
  let let304 := (Or let62 (Or let67 (Or let72 (Or let204 let303))))
  let let305 := (Or let64 (Or let246 (Or let74 (Or let204 (Or let234 let77)))))
  let let306 := (Not let60)
  let let307 := (binrel% LT.lt let40 let47)
  let let308 := (And let30 let141)
  let let309 := (binrel% LT.lt let41 let158)
  let let310 := (And let24 let28)
  let let311 := (binrel% LT.lt let39 let195)
  let let312 := (And let8 let20)
  let let313 := (binrel% LE.le let37 let196)
  let let314 := (And let5 let181)
  let let315 := (binrel% LE.le let135 let189)
  let let316 := (And let76 let258)
  let let317 := (binrel% LT.lt let55 let197)
  let let318 := (And let136 let60)
(Eq let5 True) → (Eq let8 True) → (Eq let20 let19) → (Eq let24 True) → (Eq let28 let27) → (Eq let30 True) → (Eq let37 let32) → (Eq let39 let38) → (Eq let46 let25) → (Eq let47 let25) → (Eq let53 let48) → (Eq let55 let45) → (Eq let56 True) → (Eq let57 False) → (Eq let60 let59) → let65 → (Eq let68 True) → let75 → (Eq let76 True) → let78 → (Eq let132 let131) → (Eq let26 let67) → (Eq let135 let43) → (Eq let127 let62) → (Eq let136 True) → (Eq let140 let139) → (Eq let141 let128) → (Eq let112 let142) → (Eq let147 let144) → (Eq let87 let148) → (Eq let65 let149) → (Eq let154 let153) → (Eq let157 let155) → (Eq let158 let25) → (Eq let113 let161) → (Eq let75 let162) → (Eq let165 let164) → (Eq let166 let151) → (Eq let172 let170) → (Eq let88 let25) → (Eq let174 let173) → (Eq let177 let176) → (Eq let178 let25) → (Eq let181 let179) → (Eq let83 let156) → (Eq let79 let182) → (Eq let183 True) → (Eq let129 let184) → (Eq let187 let186) → (Eq let189 let51) → (Eq let118 let191) → (Eq let110 let193) → (Eq let194 xx5f2) → (Eq let202 let201) → (Eq let203 let159) → (Eq let205 let179) → (Eq let206 let90) → (Eq let209 let208) → (Eq let18 let72) → (Eq let213 let211) → (Eq let217 let216) → (Eq let222 let72) → (Eq let223 True) → (Eq let224 True) → (Eq let95 let138) → (Eq let226 let225) → (Eq let227 xx5f1) → (Eq let231 let228) → (Eq let233 let232) → (Eq let235 let144) → (Eq let236 xx5f3) → (Eq let238 let237) → (Eq let239 let58) → (Eq let197 let52) → (Eq let81 let212) → (Eq let241 let146) → (Eq let195 let49) → (Eq let114 let242) → (Eq let243 let240) → (Eq let244 let221) → let247 → (Eq let98 let167) → (Eq let119 xx5f5) → (Eq let78 let248) → (Eq let251 let250) → (Eq let106 let143) → (Eq let107 let252) → (Eq let253 let230) → (Eq let160 let16) → (Eq let196 let50) → (Eq let117 let254) → (Eq let257 let179) → (Eq let258 let144) → (Eq let259 True) → (Eq let92 let206) → (Eq let261 let256) → (Eq let262 let214) → (Eq let263 let260) → (Eq let264 let171) → (Eq let274 let273) → (Eq let275 let163) → (Eq let247 let276) → (Eq let125 let278) → let132 → False :=
  let let1 := (Int.ofNat 0)
  let let2 := (Int.ofNat 1986005990)
  let let3 := (Int.ofNat 1002004006003)
  let let4 := (binrel% HDiv.hDiv let3 let2)
  let let5 := (binrel% GT.gt let4 let1)
  let let6 := (binrel% HDiv.hDiv (Int.ofNat 1003990011993) let2)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% LT.lt let7 let1)
  let let9 := (Int.ofNat 999)
  let let10 := (Int.ofNat 1001)
  let let11 := (binrel% HDiv.hDiv let10 let9)
  let let12 := (Int.ofNat 2)
  let let13 := (binrel% HDiv.hDiv let12 let9)
  let let14 := (Int.ofNat 1)
  let let15 := (Neg.neg let14)
  let let16 := (binrel% HMul.hMul let15 xx5f7)
  let let17 := (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd let16 (binrel% HMul.hMul (Neg.neg let13) xx5f8)))
  let let18 := (binrel% LE.le let17 let11)
  let let19 := (Not let18)
  let let20 := (binrel% GT.gt let17 let11)
  let let21 := (Int.ofNat 993002995)
  let let22 := (binrel% HDiv.hDiv (Int.ofNat 2001997998) let21)
  let let23 := (Neg.neg let22)
  let let24 := (binrel% LT.lt let23 let1)
  let let25 := (Rat.ofInt 0)
  let let26 := (binrel% LE.le xx5f4 let25)
  let let27 := (Not let26)
  let let28 := (binrel% GT.gt xx5f4 let25)
  let let29 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 599203597599) (Int.ofNat 397201198)))
  let let30 := (binrel% LT.lt let29 let1)
  let let31 := (binrel% HDiv.hDiv (Int.ofNat 1000001999997) let21)
  let let32 := (binrel% HAdd.hAdd (binrel% HMul.hMul let4 xx5f5) (binrel% HAdd.hAdd (binrel% HMul.hMul let31 xx5f6) (binrel% HMul.hMul (Neg.neg let31) xx5f7)))
  let let33 := (Int.ofNat 1998)
  let let34 := (binrel% HDiv.hDiv let33 let10)
  let let35 := (Neg.neg let34)
  let let36 := (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd (binrel% HMul.hMul let34 xx5f6) (binrel% HMul.hMul let35 xx5f7)))
  let let37 := (binrel% HMul.hMul let4 let36)
  let let38 := (binrel% HAdd.hAdd (binrel% HMul.hMul let7 xx5f5) (binrel% HAdd.hAdd (binrel% HMul.hMul let6 xx5f7) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1004995007) let21) xx5f8)))
  let let39 := (binrel% HMul.hMul let7 let17)
  let let40 := (binrel% HMul.hMul let29 xx5f6)
  let let41 := (binrel% HMul.hMul let23 xx5f4)
  let let42 := (binrel% HAdd.hAdd let41 let40)
  let let43 := (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f6) (binrel% HAdd.hAdd (binrel% HMul.hMul let22 xx5f7) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1997998002) let21)) xx5f8))))
  let let44 := (binrel% HDiv.hDiv let9 let12)
  let let45 := (binrel% HAdd.hAdd xx5f5 (binrel% HAdd.hAdd (binrel% HMul.hMul let44 xx5f6) (binrel% HAdd.hAdd (binrel% HMul.hMul let44 xx5f7) xx5f8)))
  let let46 := (binrel% HAdd.hAdd let45 (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let32 (binrel% HAdd.hAdd let38 let42))))
  let let47 := (binrel% HMul.hMul let29 let25)
  let let48 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 405875687624406) (Int.ofNat 124125374375)))
  let let49 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1006000002007) let2))
  let let50 := (Neg.neg (binrel% HDiv.hDiv let3 let21))
  let let51 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1502499497499) (Int.ofNat 496501497500)))
  let let52 := (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 7005) (Int.ofNat 4)))
  let let53 := (binrel% HAdd.hAdd let52 (binrel% HAdd.hAdd let51 (binrel% HAdd.hAdd let50 (binrel% HAdd.hAdd let49 (binrel% HAdd.hAdd let25 let25)))))
  let let54 := (Rat.ofInt 1)
  let let55 := (binrel% HMul.hMul let54 let45)
  let let56 := (binrel% GE.ge let25 let48)
  let let57 := (Not True)
  let let58 := (binrel% GE.ge let45 let52)
  let let59 := (Not let58)
  let let60 := (binrel% LT.lt let45 let52)
  let let61 := (binrel% HMul.hMul let15 xx5f6)
  let let62 := (binrel% GE.ge let61 let1)
  let let63 := (Not let62)
  let let64 := (Not let63)
  let let65 := (Eq let64 let62)
  let let66 := (binrel% HMul.hMul let15 xx5f4)
  let let67 := (binrel% GE.ge let66 let1)
  let let68 := (Eq let67 let67)
  let let69 := (binrel% HMul.hMul let13 xx5f8)
  let let70 := (binrel% HAdd.hAdd xx5f7 let69)
  let let71 := (binrel% HMul.hMul let15 xx5f5)
  let let72 := (binrel% GE.ge (binrel% HAdd.hAdd let71 let70) (Neg.neg let11))
  let let73 := (Not let72)
  let let74 := (Not let73)
  let let75 := (Eq let74 let72)
  let let76 := (binrel% GT.gt let22 let1)
  let let77 := (Not let59)
  let let78 := (Eq let77 let58)
  let let79 := (binrel% HDiv.hDiv (Rat.ofInt 2335) (Rat.ofInt 666))
  let let80 := (Rat.ofInt 999)
  let let81 := (binrel% HDiv.hDiv let54 let80)
  let let82 := (Rat.ofInt 2)
  let let83 := (binrel% HAdd.hAdd xx5f8 xx5f5)
  let let84 := (binrel% HMul.hMul let83 let82)
  let let85 := (binrel% HMul.hMul let84 let81)
  let let86 := (binrel% HAdd.hAdd xx5f6 xx5f7)
  let let87 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd let86 let85) let79)
  let let88 := (binrel% HSub.hSub let54 let54)
  let let89 := (binrel% LE.le let88 let87)
  let let90 := (Not let89)
  let let91 := (Or let90 let90)
  let let92 := (Or (Or (Or (Or (Or (Or (Or let91 let90) let90) let90) let90) let90) let90) let90)
  let let93 := (Rat.ofInt 1000)
  let let94 := (Rat.ofInt 1001)
  let let95 := (binrel% HDiv.hDiv let94 let93)
  let let96 := (binrel% HAdd.hAdd xx5f0 let95)
  let let97 := (binrel% LE.le xx5f3 let96)
  let let98 := (binrel% HDiv.hDiv let80 let93)
  let let99 := (binrel% HAdd.hAdd xx5f0 let98)
  let let100 := (binrel% LE.le let99 xx5f3)
  let let101 := (binrel% LE.le xx5f2 let96)
  let let102 := (binrel% LE.le let99 xx5f2)
  let let103 := (binrel% LE.le xx5f1 let96)
  let let104 := (binrel% LE.le let99 xx5f1)
  let let105 := (Eq xx5f0 let25)
  let let106 := (binrel% HDiv.hDiv (Rat.ofInt 1501) let93)
  let let107 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd xx5f4 xx5f6) xx5f7) let106)
  let let108 := (binrel% HMul.hMul let107 let94)
  let let109 := (binrel% HMul.hMul let108 let81)
  let let110 := (binrel% LT.lt xx5f8 let109)
  let let111 := (Not let110)
  let let112 := (binrel% HDiv.hDiv let54 let82)
  let let113 := (binrel% HSub.hSub xx5f5 xx5f7)
  let let114 := (binrel% HSub.hSub let113 let54)
  let let115 := (binrel% HMul.hMul let114 let80)
  let let116 := (binrel% HMul.hMul let115 let112)
  let let117 := (binrel% HSub.hSub let116 let54)
  let let118 := (binrel% LT.lt xx5f8 let117)
  let let119 := (binrel% HMul.hMul xx5f5 let54)
  let let120 := (binrel% HMul.hMul let119 let112)
  let let121 := (binrel% HAdd.hAdd let120 let54)
  let let122 := (binrel% HMul.hMul let121 let94)
  let let123 := (binrel% HMul.hMul let122 let81)
  let let124 := (binrel% HAdd.hAdd xx5f6 let123)
  let let125 := (binrel% LT.lt xx5f7 let124)
  let let126 := (Not let125)
  let let127 := (binrel% LE.le xx5f6 let25)
  let let128 := (Not let127)
  let let129 := (binrel% LE.le xx5f5 let25)
  let let130 := (Not let129)
  let let131 := (And let27 (And let130 (And let128 (And let126 (And let118 (And let111 (And let105 (And let104 (And let103 (And let102 (And let101 (And let100 (And let97 let92)))))))))))))
  let let132 := (And (And (And (And (And (And (And (And (And (And (And (And (And let27 let130) let128) let126) let118) let111) let105) let104) let103) let102) let101) let100) let97) let92)
  let let133 := (binrel% HDiv.hDiv let9 let10)
  let let134 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd xx5f7 (binrel% HMul.hMul (Neg.neg let133) xx5f8))))
  let let135 := (binrel% HMul.hMul let22 let134)
  let let136 := (binrel% GT.gt let54 let1)
  let let137 := (Int.ofNat 1000)
  let let138 := (binrel% HDiv.hDiv let10 let137)
  let let139 := (binrel% HAdd.hAdd let138 xx5f0)
  let let140 := (binrel% HAdd.hAdd xx5f0 let138)
  let let141 := (binrel% GT.gt xx5f6 let25)
  let let142 := (binrel% HDiv.hDiv let14 let12)
  let let143 := (binrel% HDiv.hDiv (Int.ofNat 1501) let137)
  let let144 := (binrel% GE.ge (binrel% HAdd.hAdd let66 (binrel% HAdd.hAdd let61 (binrel% HAdd.hAdd let16 (binrel% HMul.hMul let133 xx5f8)))) let143)
  let let145 := (Int.ofNat 1502501)
  let let146 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let145 (Int.ofNat 999000)) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul let11 xx5f6) (binrel% HMul.hMul let11 xx5f7))))
  let let147 := (binrel% GE.ge xx5f8 let146)
  let let148 := (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd xx5f7 (binrel% HAdd.hAdd let85 let79)))
  let let149 := (Eq let62 let64)
  let let150 := (Neg.neg let138)
  let let151 := (binrel% HMul.hMul let15 xx5f1)
  let let152 := (binrel% HAdd.hAdd xx5f0 let151)
  let let153 := (binrel% GE.ge let152 let150)
  let let154 := (binrel% LE.le xx5f1 let139)
  let let155 := (binrel% HAdd.hAdd (binrel% HMul.hMul let12 xx5f5) (binrel% HMul.hMul let12 xx5f8))
  let let156 := (binrel% HAdd.hAdd xx5f5 xx5f8)
  let let157 := (binrel% HMul.hMul let156 let82)
  let let158 := (binrel% HMul.hMul let23 let25)
  let let159 := (Neg.neg let54)
  let let160 := (binrel% HMul.hMul let159 xx5f7)
  let let161 := (binrel% HAdd.hAdd xx5f5 let160)
  let let162 := (Eq let72 let74)
  let let163 := (binrel% HMul.hMul let142 xx5f5)
  let let164 := (binrel% HAdd.hAdd let14 let163)
  let let165 := (binrel% HAdd.hAdd let163 let54)
  let let166 := (binrel% HAdd.hAdd let25 let151)
  let let167 := (binrel% HDiv.hDiv let9 let137)
  let let168 := (binrel% HMul.hMul let15 xx5f0)
  let let169 := (binrel% HAdd.hAdd let168 xx5f3)
  let let170 := (binrel% GE.ge let169 let167)
  let let171 := (binrel% HAdd.hAdd let167 xx5f0)
  let let172 := (binrel% LE.le let171 xx5f3)
  let let173 := (binrel% HMul.hMul let15 xx5f3)
  let let174 := (binrel% HAdd.hAdd let25 let173)
  let let175 := (binrel% HAdd.hAdd xx5f5 let16)
  let let176 := (binrel% HAdd.hAdd let15 let175)
  let let177 := (binrel% HAdd.hAdd let175 let159)
  let let178 := (binrel% HMul.hMul let15 let25)
  let let179 := (binrel% GE.ge (binrel% HAdd.hAdd let71 (binrel% HAdd.hAdd (binrel% HMul.hMul let35 xx5f6) (binrel% HMul.hMul let34 xx5f7))) let12)
  let let180 := (Neg.neg let82)
  let let181 := (binrel% LE.le let36 let180)
  let let182 := (binrel% HDiv.hDiv (Int.ofNat 2335) (Int.ofNat 666))
  let let183 := (Eq let62 let62)
  let let184 := (binrel% GE.ge let71 let1)
  let let185 := (binrel% HAdd.hAdd let168 xx5f2)
  let let186 := (binrel% GE.ge let185 let167)
  let let187 := (binrel% LE.le let171 xx5f2)
  let let188 := (Neg.neg let143)
  let let189 := (binrel% HMul.hMul let22 let188)
  let let190 := (binrel% GE.ge xx5f8 let117)
  let let191 := (Not let190)
  let let192 := (binrel% GE.ge xx5f8 let109)
  let let193 := (Not let192)
  let let194 := (binrel% HAdd.hAdd let25 xx5f2)
  let let195 := (binrel% HMul.hMul let7 let11)
  let let196 := (binrel% HMul.hMul let4 let180)
  let let197 := (binrel% HMul.hMul let54 let52)
  let let198 := (binrel% HAdd.hAdd let197 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd let196 (binrel% HAdd.hAdd let195 (binrel% HAdd.hAdd let158 let47)))))
  let let199 := (binrel% HAdd.hAdd let55 (binrel% HAdd.hAdd let135 (binrel% HAdd.hAdd let37 (binrel% HAdd.hAdd let39 let42))))
  let let200 := (binrel% GE.ge let199 let198)
  let let201 := (Not let200)
  let let202 := (binrel% LT.lt let199 let198)
  let let203 := (binrel% HMul.hMul let159 let54)
  let let204 := (Not let179)
  let let205 := (Not let204)
  let let206 := (Or let90 (Or let90 (Or let90 (Or let90 (Or let90 (Or let90 (Or let90 let91)))))))
  let let207 := (binrel% HAdd.hAdd let168 xx5f1)
  let let208 := (binrel% GE.ge let207 let167)
  let let209 := (binrel% LE.le let171 xx5f1)
  let let210 := (binrel% HMul.hMul let13 xx5f5)
  let let211 := (binrel% HAdd.hAdd let210 let69)
  let let212 := (binrel% HDiv.hDiv let14 let9)
  let let213 := (binrel% HMul.hMul let155 let212)
  let let214 := (binrel% HMul.hMul let15 xx5f2)
  let let215 := (binrel% HAdd.hAdd xx5f0 let214)
  let let216 := (binrel% GE.ge let215 let150)
  let let217 := (binrel% LE.le xx5f2 let139)
  let let218 := (Neg.neg let44)
  let let219 := (binrel% HAdd.hAdd (binrel% HMul.hMul let44 xx5f5) (binrel% HMul.hMul let218 xx5f7))
  let let220 := (binrel% HDiv.hDiv let10 let12)
  let let221 := (binrel% HAdd.hAdd (Neg.neg let220) let219)
  let let222 := (binrel% GE.ge xx5f8 let221)
  let let223 := (Eq let25 let25)
  let let224 := (Eq let72 let72)
  let let225 := (binrel% HAdd.hAdd let10 (binrel% HMul.hMul let220 xx5f5))
  let let226 := (binrel% HMul.hMul let164 let94)
  let let227 := (binrel% HAdd.hAdd let25 xx5f1)
  let let228 := (binrel% HAdd.hAdd let218 let219)
  let let229 := (Neg.neg let9)
  let let230 := (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd (binrel% HMul.hMul let9 xx5f5) (binrel% HMul.hMul let229 xx5f7)))
  let let231 := (binrel% HMul.hMul let230 let142)
  let let232 := (binrel% HAdd.hAdd let182 (binrel% HAdd.hAdd let210 (binrel% HAdd.hAdd xx5f6 let70)))
  let let233 := (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd xx5f7 (binrel% HAdd.hAdd let211 let182)))
  let let234 := (Not let144)
  let let235 := (Not let234)
  let let236 := (binrel% HAdd.hAdd let25 xx5f3)
  let let237 := (binrel% HAdd.hAdd let143 (binrel% HAdd.hAdd xx5f4 let86))
  let let238 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd xx5f7 let143)))
  let let239 := (binrel% LE.le let25 let232)
  let let240 := (binrel% HAdd.hAdd (binrel% HDiv.hDiv let145 let137) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul let10 xx5f6) (binrel% HMul.hMul let10 xx5f7))))
  let let241 := (binrel% HMul.hMul let240 let212)
  let let242 := (binrel% HAdd.hAdd let113 let203)
  let let243 := (binrel% HMul.hMul let237 let94)
  let let244 := (binrel% HAdd.hAdd let228 let159)
  let let245 := (Not let67)
  let let246 := (Not let245)
  let let247 := (Eq let246 let67)
  let let248 := (Eq let58 let77)
  let let249 := (binrel% HAdd.hAdd xx5f0 let173)
  let let250 := (binrel% GE.ge let249 let150)
  let let251 := (binrel% LE.le xx5f3 let139)
  let let252 := (binrel% HAdd.hAdd xx5f4 (binrel% HAdd.hAdd xx5f6 (binrel% HAdd.hAdd xx5f7 let106)))
  let let253 := (binrel% HMul.hMul let176 let80)
  let let254 := (binrel% HAdd.hAdd let116 let203)
  let let255 := (binrel% HMul.hMul (binrel% HDiv.hDiv let10 let33) xx5f5)
  let let256 := (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let255 xx5f6))
  let let257 := (binrel% GE.ge xx5f7 let256)
  let let258 := (binrel% LE.le let134 let188)
  let let259 := (Eq let58 let58)
  let let260 := (binrel% HAdd.hAdd let11 let255)
  let let261 := (binrel% HAdd.hAdd xx5f6 let260)
  let let262 := (binrel% HAdd.hAdd let25 let214)
  let let263 := (binrel% HMul.hMul let225 let212)
  let let264 := (binrel% HAdd.hAdd xx5f0 let167)
  let let265 := (binrel% GE.ge let173 let150)
  let let266 := (binrel% GE.ge xx5f3 let167)
  let let267 := (binrel% GE.ge let214 let150)
  let let268 := (binrel% GE.ge xx5f2 let167)
  let let269 := (binrel% GE.ge let151 let150)
  let let270 := (binrel% GE.ge xx5f1 let167)
  let let271 := (And let270 (And let269 (And let268 (And let267 (And let266 (And let265 let59))))))
  let let272 := (Not let184)
  let let273 := (And let245 (And let272 (And let63 (And let179 (And let73 (And let144 let271))))))
  let let274 := (And let245 (And let272 (And let63 (And let179 (And let73 (And let144 (And True let271)))))))
  let let275 := (binrel% HMul.hMul xx5f5 let142)
  let let276 := (Eq let67 let246)
  let let277 := (binrel% GE.ge xx5f7 let124)
  let let278 := (Not let277)
  let let279 := (And let245 (And let272 (And let63 (And let179 (And let73 (And let144 (And let105 (And let208 (And let153 (And let186 (And let216 (And let170 (And let250 let59)))))))))))))
  let let280 := (binrel% GE.ge let174 let150)
  let let281 := (binrel% HAdd.hAdd let178 xx5f3)
  let let282 := (binrel% GE.ge let281 let167)
  let let283 := (binrel% GE.ge let262 let150)
  let let284 := (binrel% HAdd.hAdd let178 xx5f2)
  let let285 := (binrel% GE.ge let284 let167)
  let let286 := (binrel% GE.ge let166 let150)
  let let287 := (binrel% HAdd.hAdd let178 xx5f1)
  let let288 := (binrel% GE.ge let287 let167)
  let let289 := (And let245 (And let272 (And let63 (And let179 (And let73 (And let144 (And let223 (And let288 (And let286 (And let285 (And let283 (And let282 (And let280 let59)))))))))))))
  let let290 := (Eq let59 let59)
  let let291 := (Eq let150 let150)
  let let292 := (Eq And And)
  let let293 := (Eq let167 let167)
  let let294 := (Eq xx5f3 xx5f3)
  let let295 := (Eq xx5f2 xx5f2)
  let let296 := (Eq xx5f1 xx5f1)
  let let297 := (Eq let144 let144)
  let let298 := (Eq let73 let73)
  let let299 := (Eq let179 let179)
  let let300 := (Eq let63 let63)
  let let301 := (Eq let272 let272)
  let let302 := (Eq let245 let245)
  let let303 := (Or let234 let58)
  let let304 := (Or let62 (Or let67 (Or let72 (Or let204 let303))))
  let let305 := (Or let64 (Or let246 (Or let74 (Or let204 (Or let234 let77)))))
  let let306 := (Not let60)
  let let307 := (binrel% LT.lt let40 let47)
  let let308 := (And let30 let141)
  let let309 := (binrel% LT.lt let41 let158)
  let let310 := (And let24 let28)
  let let311 := (binrel% LT.lt let39 let195)
  let let312 := (And let8 let20)
  let let313 := (binrel% LE.le let37 let196)
  let let314 := (And let5 let181)
  let let315 := (binrel% LE.le let135 let189)
  let let316 := (And let76 let258)
  let let317 := (binrel% LT.lt let55 let197)
  let let318 := (And let136 let60)
fun lean_r0 : (Eq let5 True) => -- EVALUATE
fun lean_r1 : (Eq let8 True) => -- EVALUATE
fun lean_r2 : (Eq let20 let19) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let24 True) => -- EVALUATE
fun lean_r4 : (Eq let28 let27) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let30 True) => -- EVALUATE
fun lean_r6 : (Eq let37 let32) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let39 let38) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let46 let25) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let47 let25) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let53 let48) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let55 let45) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let56 True) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let57 False) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let60 let59) => -- THEORY_REWRITE_ARITH
fun lean_r15 : let65 => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq let68 True) => -- THEORY_REWRITE_BOOL
fun lean_r17 : let75 => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let76 True) => -- EVALUATE
fun lean_r19 : let78 => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let132 let131) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq let26 let67) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let135 let43) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let127 let62) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let136 True) => -- EVALUATE
fun lean_r25 : (Eq let140 let139) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let141 let128) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let112 let142) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let147 let144) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let87 let148) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let65 let149) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let154 let153) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let157 let155) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let158 let25) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let113 let161) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let75 let162) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let165 let164) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let166 let151) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let172 let170) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let88 let25) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let174 let173) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let177 let176) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let178 let25) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let181 let179) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let83 let156) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let79 let182) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let183 True) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let129 let184) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let187 let186) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let189 let51) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let118 let191) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let110 let193) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let194 xx5f2) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let202 let201) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let203 let159) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let205 let179) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq let206 let90) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq let209 let208) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let18 let72) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let213 let211) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let217 let216) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let222 let72) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let223 True) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let224 True) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq let95 let138) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let226 let225) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let227 xx5f1) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let231 let228) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let233 let232) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let235 let144) => -- THEORY_REWRITE_BOOL
fun lean_r70 : (Eq let236 xx5f3) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let238 let237) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let239 let58) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let197 let52) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let81 let212) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let241 let146) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let195 let49) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let114 let242) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let243 let240) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let244 let221) => -- THEORY_REWRITE_ARITH
fun lean_r80 : let247 => -- THEORY_REWRITE_BOOL
fun lean_r81 : (Eq let98 let167) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let119 xx5f5) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let78 let248) => -- THEORY_REWRITE_BOOL
fun lean_r84 : (Eq let251 let250) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let106 let143) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let107 let252) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let253 let230) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let160 let16) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let196 let50) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let117 let254) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let257 let179) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let258 let144) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let259 True) => -- THEORY_REWRITE_BOOL
fun lean_r94 : (Eq let92 let206) => -- THEORY_REWRITE_BOOL
fun lean_r95 : (Eq let261 let256) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let262 let214) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let263 let260) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let264 let171) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let274 let273) => -- THEORY_REWRITE_BOOL
fun lean_r100 : (Eq let275 let163) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let247 let276) => -- THEORY_REWRITE_BOOL
fun lean_r102 : (Eq let125 let278) => -- THEORY_REWRITE_ARITH
fun lean_a103 : let132 => by
have lean_s0 : (Or let64 (Or let246 (Or let74 (Or let204 (Or let234 (Or let77 False)))))) :=
  (scope (fun lean_a104 : let63 =>
    (scope (fun lean_a105 : let245 =>
      (scope (fun lean_a106 : let73 =>
        (scope (fun lean_a107 : let179 =>
          (scope (fun lean_a108 : let144 =>
            (scope (fun lean_a109 : let59 =>
              have lean_s0 : (Eq let59 let60) := by timed Eq.symm lean_r14
              have lean_s1 : let60 := by timed eqResolve lean_a109 lean_s0
              have lean_s2 : (Or let306 False) :=
                (scope (fun lean_a110 : let60 =>
                  have lean_s2 : let136 := by timed trueElim lean_r24
                  have lean_s3 : let318 := by timed And.intro lean_s2 lean_a110
                  have lean_s4 : (Implies let318 let317) := by arithMulPos [let45, let52, let54], 0
                  have lean_s5 : let317 := by timed modusPonens lean_s3 lean_s4
                  have lean_s6 : let76 := by timed trueElim lean_r18
                  have lean_s7 : (Eq let144 let258) := by timed Eq.symm lean_r92
                  have lean_s8 : let258 := by timed eqResolve lean_a108 lean_s7
                  have lean_s9 : let316 := by timed And.intro lean_s6 lean_s8
                  have lean_s10 : (Implies let316 let315) := by arithMulPos [let134, let188, let22], 1
                  have lean_s11 : let315 := by timed modusPonens lean_s9 lean_s10
                  have lean_s12 : let5 := by timed trueElim lean_r0
                  have lean_s13 : (Eq let179 let181) := by timed Eq.symm lean_r43
                  have lean_s14 : let181 := by timed eqResolve lean_a107 lean_s13
                  have lean_s15 : let314 := by timed And.intro lean_s12 lean_s14
                  have lean_s16 : (Implies let314 let313) := by arithMulPos [let36, let180, let4], 1
                  have lean_s17 : let313 := by timed modusPonens lean_s15 lean_s16
                  have lean_s18 : let8 := by timed trueElim lean_r1
                  have lean_s19 : (Eq let19 let73) := by timed flipCongrArg lean_r58 [Not]
                  have lean_s20 : (Eq let20 let73) := by timed Eq.trans lean_r2 lean_s19
                  have lean_s21 : (Eq let73 let20) := by timed Eq.symm lean_s20
                  have lean_s22 : let20 := by timed eqResolve lean_a106 lean_s21
                  have lean_s23 : let312 := by timed And.intro lean_s18 lean_s22
                  have lean_s24 : (Implies let312 let311) := by arithMulNeg [let17, let11, let7], 2
                  have lean_s25 : let311 := by timed modusPonens lean_s23 lean_s24
                  have lean_s26 : let24 := by timed trueElim lean_r3
                  have lean_s27 : (Eq let27 let245) := by timed flipCongrArg lean_r21 [Not]
                  have lean_s28 : (Eq let28 let245) := by timed Eq.trans lean_r4 lean_s27
                  have lean_s29 : (Eq let245 let28) := by timed Eq.symm lean_s28
                  have lean_s30 : let28 := by timed eqResolve lean_a105 lean_s29
                  have lean_s31 : let310 := by timed And.intro lean_s26 lean_s30
                  have lean_s32 : (Implies let310 let309) := by arithMulNeg [xx5f4, let25, let23], 2
                  have lean_s33 : let309 := by timed modusPonens lean_s31 lean_s32
                  have lean_s34 : let30 := by timed trueElim lean_r5
                  have lean_s35 : (Eq let128 let63) := by timed flipCongrArg lean_r23 [Not]
                  have lean_s36 : (Eq let141 let63) := by timed Eq.trans lean_r26 lean_s35
                  have lean_s37 : (Eq let63 let141) := by timed Eq.symm lean_s36
                  have lean_s38 : let141 := by timed eqResolve lean_a104 lean_s37
                  have lean_s39 : let308 := by timed And.intro lean_s34 lean_s38
                  have lean_s40 : (Implies let308 let307) := by arithMulNeg [xx5f6, let25, let29], 2
                  have lean_s41 : let307 := by timed modusPonens lean_s39 lean_s40
                  have lean_s42 : let202 := by sumBounds [lean_s5, lean_s11, lean_s17, lean_s25, lean_s33, lean_s41]
                  have lean_s43 : (Eq let41 let41) := by timed rfl
                  have lean_s44 : (Eq let40 let40) := by timed rfl
                  let lean_s45 := by timed congrHAdd lean_s43 lean_s44
                  let lean_s46 := by timed congrHAdd lean_r7 lean_s45
                  let lean_s47 := by timed congrHAdd lean_r6 lean_s46
                  let lean_s48 := by timed congrHAdd lean_r22 lean_s47
                  have lean_s49 : (Eq let199 let46) := by timed congrHAdd lean_r11 lean_s48
                  have lean_s50 : (Eq let199 let25) := by timed Eq.trans lean_s49 lean_r8
                  let lean_s51 := by timed flipCongrArg lean_s50 [GE.ge]
                  let lean_s52 := by timed congrHAdd lean_r33 lean_r9
                  let lean_s53 := by timed congrHAdd lean_r76 lean_s52
                  let lean_s54 := by timed congrHAdd lean_r89 lean_s53
                  let lean_s55 := by timed congrHAdd lean_r49 lean_s54
                  have lean_s56 : (Eq let198 let53) := by timed congrHAdd lean_r73 lean_s55
                  have lean_s57 : (Eq let198 let48) := by timed Eq.trans lean_s56 lean_r10
                  have lean_s58 : (Eq let200 let56) := by timed congr lean_s51 lean_s57
                  have lean_s59 : (Eq let200 True) := by timed Eq.trans lean_s58 lean_r12
                  have lean_s60 : (Eq let201 let57) := by timed flipCongrArg lean_s59 [Not]
                  have lean_s61 : (Eq let201 False) := by timed Eq.trans lean_s60 lean_r13
                  have lean_s62 : (Eq let202 False) := by timed Eq.trans lean_r53 lean_s61
                  show False from by timed eqResolve lean_s42 lean_s62
                ))
              have lean_s3 : let306 := by liftOrNToNeg lean_s2
              have lean_s4 : (Eq let306 let77) := by timed flipCongrArg lean_r14 [Not]
              have lean_s5 : (Eq let306 let58) := by timed Eq.trans lean_s4 lean_r19
              have lean_s6 : let58 := by timed eqResolve lean_s3 lean_s5
              have lean_s7 : (Eq let58 let306) := by timed Eq.symm lean_s5
              have lean_s8 : let306 := by timed eqResolve lean_s6 lean_s7
              show False from by timed contradiction lean_s1 lean_s8
  ))))))))))))
have lean_s1 : (Not (And let63 (And let245 (And let73 (And let179 (And let144 let59)))))) := by liftOrNToNeg lean_s0
have lean_s2 : let305 := by timed flipNotAnd lean_s1 [let63, let245, let73, let179, let144, let59]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : let183 := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq let149 let183) := by timed congr lean_s5 lean_r15
have lean_s7 : (Eq let149 True) := by timed Eq.trans lean_s6 lean_r46
have lean_s8 : (Eq let65 True) := by timed Eq.trans lean_r30 lean_s7
have lean_s9 : let65 := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : let68 := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq let276 let68) := by timed congr lean_s12 lean_r80
have lean_s14 : (Eq let276 True) := by timed Eq.trans lean_s13 lean_r16
have lean_s15 : (Eq let247 True) := by timed Eq.trans lean_r101 lean_s14
have lean_s16 : let247 := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : let224 := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq let162 let224) := by timed congr lean_s19 lean_r17
have lean_s21 : (Eq let162 True) := by timed Eq.trans lean_s20 lean_r63
have lean_s22 : (Eq let75 True) := by timed Eq.trans lean_r35 lean_s21
have lean_s23 : let75 := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : (Eq let204 let204) := by timed rfl
let lean_s26 := by timed congr lean_s3 lean_s25
have lean_s27 : (Eq let234 let234) := by timed rfl
let lean_s28 := by timed congr lean_s3 lean_s27
have lean_s29 : let259 := by timed rfl
let lean_s30 := by timed flipCongrArg lean_s29 [Eq]
have lean_s31 : (Eq let248 let259) := by timed congr lean_s30 lean_r19
have lean_s32 : (Eq let248 True) := by timed Eq.trans lean_s31 lean_r93
have lean_s33 : (Eq let78 True) := by timed Eq.trans lean_r83 lean_s32
have lean_s34 : let78 := by timed trueElim lean_s33
let lean_s35 := by timed congr lean_s28 lean_s34
let lean_s36 := by timed congr lean_s26 lean_s35
let lean_s37 := by timed congr lean_s24 lean_s36
let lean_s38 := by timed congr lean_s17 lean_s37
have lean_s39 : (Eq let305 let304) := by timed congr lean_s10 lean_s38
have lean_s40 : let304 := by timed eqResolve lean_s2 lean_s39
have lean_s41 : (Or let67 (Or let62 (Or let204 (Or let72 let303)))) := by permutateOr lean_s40, [1, 0, 3, 2, 4, 5], (- 1)
have lean_s42 : let292 := by timed rfl
have lean_s43 : (Eq let27 let245) := by timed flipCongrArg lean_r21 [Not]
let lean_s44 := by timed congr lean_s42 lean_s43
have lean_s45 : (Eq let130 let272) := by timed flipCongrArg lean_r47 [Not]
let lean_s46 := by timed congr lean_s42 lean_s45
have lean_s47 : (Eq let128 let63) := by timed flipCongrArg lean_r23 [Not]
let lean_s48 := by timed congr lean_s42 lean_s47
have lean_s49 : (Eq xx5f7 xx5f7) := by timed rfl
let lean_s50 := by timed flipCongrArg lean_s49 [GE.ge]
have lean_s51 : (Eq xx5f6 xx5f6) := by timed rfl
let lean_s52 := by timed flipCongrArg lean_s51 [HAdd.hAdd]
let lean_s53 := by timed flipCongrArg lean_r82 [HMul.hMul]
have lean_s54 : (Eq let120 let275) := by timed congr lean_s53 lean_r27
have lean_s55 : (Eq let120 let163) := by timed Eq.trans lean_s54 lean_r100
let lean_s56 := by timed flipCongrArg lean_s55 [HAdd.hAdd]
have lean_s57 : (Eq let54 let54) := by timed rfl
have lean_s58 : (Eq let121 let165) := by timed congr lean_s56 lean_s57
have lean_s59 : (Eq let121 let164) := by timed Eq.trans lean_s58 lean_r36
let lean_s60 := by timed flipCongrArg lean_s59 [HMul.hMul]
have lean_s61 : (Eq let94 let94) := by timed rfl
have lean_s62 : (Eq let122 let226) := by timed congr lean_s60 lean_s61
have lean_s63 : (Eq let122 let225) := by timed Eq.trans lean_s62 lean_r65
let lean_s64 := by timed flipCongrArg lean_s63 [HMul.hMul]
have lean_s65 : (Eq let123 let263) := by timed congr lean_s64 lean_r74
have lean_s66 : (Eq let123 let260) := by timed Eq.trans lean_s65 lean_r97
have lean_s67 : (Eq let124 let261) := by timed congr lean_s52 lean_s66
have lean_s68 : (Eq let124 let256) := by timed Eq.trans lean_s67 lean_r95
have lean_s69 : (Eq let277 let257) := by timed congr lean_s50 lean_s68
have lean_s70 : (Eq let277 let179) := by timed Eq.trans lean_s69 lean_r91
have lean_s71 : (Eq let278 let204) := by timed flipCongrArg lean_s70 [Not]
have lean_s72 : (Eq let125 let204) := by timed Eq.trans lean_r102 lean_s71
have lean_s73 : (Eq let126 let205) := by timed flipCongrArg lean_s72 [Not]
have lean_s74 : (Eq let126 let179) := by timed Eq.trans lean_s73 lean_r55
let lean_s75 := by timed congr lean_s42 lean_s74
have lean_s76 : (Eq xx5f8 xx5f8) := by timed rfl
let lean_s77 := by timed flipCongrArg lean_s76 [GE.ge]
have lean_s78 : (Eq xx5f5 xx5f5) := by timed rfl
let lean_s79 := by timed flipCongrArg lean_s78 [HAdd.hAdd]
have lean_s80 : (Eq let161 let175) := by timed congr lean_s79 lean_r88
have lean_s81 : (Eq let113 let175) := by timed Eq.trans lean_r34 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [HAdd.hAdd]
have lean_s83 : (Eq let242 let177) := by timed congr lean_s82 lean_r54
have lean_s84 : (Eq let242 let176) := by timed Eq.trans lean_s83 lean_r41
have lean_s85 : (Eq let114 let176) := by timed Eq.trans lean_r77 lean_s84
let lean_s86 := by timed flipCongrArg lean_s85 [HMul.hMul]
have lean_s87 : (Eq let80 let80) := by timed rfl
have lean_s88 : (Eq let115 let253) := by timed congr lean_s86 lean_s87
have lean_s89 : (Eq let115 let230) := by timed Eq.trans lean_s88 lean_r87
let lean_s90 := by timed flipCongrArg lean_s89 [HMul.hMul]
have lean_s91 : (Eq let116 let231) := by timed congr lean_s90 lean_r27
have lean_s92 : (Eq let116 let228) := by timed Eq.trans lean_s91 lean_r67
let lean_s93 := by timed flipCongrArg lean_s92 [HAdd.hAdd]
have lean_s94 : (Eq let254 let244) := by timed congr lean_s93 lean_r54
have lean_s95 : (Eq let254 let221) := by timed Eq.trans lean_s94 lean_r79
have lean_s96 : (Eq let117 let221) := by timed Eq.trans lean_r90 lean_s95
have lean_s97 : (Eq let190 let222) := by timed congr lean_s77 lean_s96
have lean_s98 : (Eq let190 let72) := by timed Eq.trans lean_s97 lean_r61
have lean_s99 : (Eq let191 let73) := by timed flipCongrArg lean_s98 [Not]
have lean_s100 : (Eq let118 let73) := by timed Eq.trans lean_r50 lean_s99
let lean_s101 := by timed congr lean_s42 lean_s100
let lean_s102 := by timed flipCongrArg lean_s76 [GE.ge]
have lean_s103 : (Eq xx5f4 xx5f4) := by timed rfl
let lean_s104 := by timed congrHAdd lean_s49 lean_r85
let lean_s105 := by timed congrHAdd lean_s51 lean_s104
have lean_s106 : (Eq let252 let238) := by timed congrHAdd lean_s103 lean_s105
have lean_s107 : (Eq let252 let237) := by timed Eq.trans lean_s106 lean_r71
have lean_s108 : (Eq let107 let237) := by timed Eq.trans lean_r86 lean_s107
let lean_s109 := by timed flipCongrArg lean_s108 [HMul.hMul]
have lean_s110 : (Eq let108 let243) := by timed congr lean_s109 lean_s61
have lean_s111 : (Eq let108 let240) := by timed Eq.trans lean_s110 lean_r78
let lean_s112 := by timed flipCongrArg lean_s111 [HMul.hMul]
have lean_s113 : (Eq let109 let241) := by timed congr lean_s112 lean_r74
have lean_s114 : (Eq let109 let146) := by timed Eq.trans lean_s113 lean_r75
have lean_s115 : (Eq let192 let147) := by timed congr lean_s102 lean_s114
have lean_s116 : (Eq let192 let144) := by timed Eq.trans lean_s115 lean_r28
have lean_s117 : (Eq let193 let234) := by timed flipCongrArg lean_s116 [Not]
have lean_s118 : (Eq let110 let234) := by timed Eq.trans lean_r51 lean_s117
have lean_s119 : (Eq let111 let235) := by timed flipCongrArg lean_s118 [Not]
have lean_s120 : (Eq let111 let144) := by timed Eq.trans lean_s119 lean_r69
let lean_s121 := by timed congr lean_s42 lean_s120
have lean_s122 : (Eq let105 let105) := by timed rfl
let lean_s123 := by timed congr lean_s42 lean_s122
have lean_s124 : (Eq xx5f0 xx5f0) := by timed rfl
let lean_s125 := by timed flipCongrArg lean_s124 [HAdd.hAdd]
have lean_s126 : (Eq let99 let264) := by timed congr lean_s125 lean_r81
have lean_s127 : (Eq let99 let171) := by timed Eq.trans lean_s126 lean_r98
let lean_s128 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s129 : let296 := by timed rfl
have lean_s130 : (Eq let104 let209) := by timed congr lean_s128 lean_s129
have lean_s131 : (Eq let104 let208) := by timed Eq.trans lean_s130 lean_r57
let lean_s132 := by timed congr lean_s42 lean_s131
let lean_s133 := by timed flipCongrArg lean_s129 [LE.le]
let lean_s134 := by timed flipCongrArg lean_s124 [HAdd.hAdd]
have lean_s135 : (Eq let96 let140) := by timed congr lean_s134 lean_r64
have lean_s136 : (Eq let96 let139) := by timed Eq.trans lean_s135 lean_r25
have lean_s137 : (Eq let103 let154) := by timed congr lean_s133 lean_s136
have lean_s138 : (Eq let103 let153) := by timed Eq.trans lean_s137 lean_r31
let lean_s139 := by timed congr lean_s42 lean_s138
let lean_s140 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s141 : let295 := by timed rfl
have lean_s142 : (Eq let102 let187) := by timed congr lean_s140 lean_s141
have lean_s143 : (Eq let102 let186) := by timed Eq.trans lean_s142 lean_r48
let lean_s144 := by timed congr lean_s42 lean_s143
let lean_s145 := by timed flipCongrArg lean_s141 [LE.le]
have lean_s146 : (Eq let101 let217) := by timed congr lean_s145 lean_s136
have lean_s147 : (Eq let101 let216) := by timed Eq.trans lean_s146 lean_r60
let lean_s148 := by timed congr lean_s42 lean_s147
let lean_s149 := by timed flipCongrArg lean_s127 [LE.le]
have lean_s150 : let294 := by timed rfl
have lean_s151 : (Eq let100 let172) := by timed congr lean_s149 lean_s150
have lean_s152 : (Eq let100 let170) := by timed Eq.trans lean_s151 lean_r38
let lean_s153 := by timed congr lean_s42 lean_s152
let lean_s154 := by timed flipCongrArg lean_s150 [LE.le]
have lean_s155 : (Eq let97 let251) := by timed congr lean_s154 lean_s136
have lean_s156 : (Eq let97 let250) := by timed Eq.trans lean_s155 lean_r84
let lean_s157 := by timed congr lean_s42 lean_s156
let lean_s158 := by timed flipCongrArg lean_r39 [LE.le]
let lean_s159 := by timed flipCongrArg lean_r44 [HMul.hMul]
have lean_s160 : (Eq let82 let82) := by timed rfl
have lean_s161 : (Eq let84 let157) := by timed congr lean_s159 lean_s160
have lean_s162 : (Eq let84 let155) := by timed Eq.trans lean_s161 lean_r32
let lean_s163 := by timed flipCongrArg lean_s162 [HMul.hMul]
have lean_s164 : (Eq let85 let213) := by timed congr lean_s163 lean_r74
have lean_s165 : (Eq let85 let211) := by timed Eq.trans lean_s164 lean_r59
let lean_s166 := by timed congrHAdd lean_s165 lean_r45
let lean_s167 := by timed congrHAdd lean_s49 lean_s166
have lean_s168 : (Eq let148 let233) := by timed congrHAdd lean_s51 lean_s167
have lean_s169 : (Eq let148 let232) := by timed Eq.trans lean_s168 lean_r68
have lean_s170 : (Eq let87 let232) := by timed Eq.trans lean_r29 lean_s169
have lean_s171 : (Eq let89 let239) := by timed congr lean_s158 lean_s170
have lean_s172 : (Eq let89 let58) := by timed Eq.trans lean_s171 lean_r72
have lean_s173 : (Eq let90 let59) := by timed flipCongrArg lean_s172 [Not]
have lean_s174 : (Eq let206 let59) := by timed Eq.trans lean_r56 lean_s173
have lean_s175 : (Eq let92 let59) := by timed Eq.trans lean_r94 lean_s174
let lean_s176 := by timed congr lean_s157 lean_s175
let lean_s177 := by timed congr lean_s153 lean_s176
let lean_s178 := by timed congr lean_s148 lean_s177
let lean_s179 := by timed congr lean_s144 lean_s178
let lean_s180 := by timed congr lean_s139 lean_s179
let lean_s181 := by timed congr lean_s132 lean_s180
let lean_s182 := by timed congr lean_s123 lean_s181
let lean_s183 := by timed congr lean_s121 lean_s182
let lean_s184 := by timed congr lean_s101 lean_s183
let lean_s185 := by timed congr lean_s75 lean_s184
let lean_s186 := by timed congr lean_s48 lean_s185
let lean_s187 := by timed congr lean_s46 lean_s186
have lean_s188 : (Eq let131 let279) := by timed congr lean_s44 lean_s187
have lean_s189 : (Eq let132 let279) := by timed Eq.trans lean_r20 lean_s188
have lean_s190 : let292 := by timed rfl
have lean_s191 : let302 := by timed rfl
let lean_s192 := by timed congr lean_s190 lean_s191
have lean_s193 : let301 := by timed rfl
let lean_s194 := by timed congr lean_s190 lean_s193
have lean_s195 : let300 := by timed rfl
let lean_s196 := by timed congr lean_s190 lean_s195
have lean_s197 : let299 := by timed rfl
let lean_s198 := by timed congr lean_s190 lean_s197
have lean_s199 : let298 := by timed rfl
let lean_s200 := by timed congr lean_s190 lean_s199
have lean_s201 : let297 := by timed rfl
let lean_s202 := by timed congr lean_s190 lean_s201
have lean_s203 : let279 := by timed eqResolve lean_a103 lean_s189
have lean_s204 : let105 := by andElim lean_s203, 6
let lean_s205 := by timed flipCongrArg lean_s204 [Eq]
have lean_s206 : let223 := by timed rfl
have lean_s207 : (Eq let105 let223) := by timed congr lean_s205 lean_s206
let lean_s208 := by timed congr lean_s190 lean_s207
have lean_s209 : (Eq let15 let15) := by timed rfl
let lean_s210 := by timed flipCongrArg lean_s209 [HMul.hMul]
have lean_s211 : (Eq let168 let178) := by timed congr lean_s210 lean_s204
let lean_s212 := by timed flipCongrArg lean_s211 [HAdd.hAdd]
have lean_s213 : let296 := by timed rfl
have lean_s214 : (Eq let207 let287) := by timed congr lean_s212 lean_s213
let lean_s215 := by timed flipCongrArg lean_s214 [GE.ge]
have lean_s216 : let293 := by timed rfl
have lean_s217 : (Eq let208 let288) := by timed congr lean_s215 lean_s216
let lean_s218 := by timed congr lean_s190 lean_s217
let lean_s219 := by timed flipCongrArg lean_s204 [HAdd.hAdd]
have lean_s220 : (Eq let151 let151) := by timed rfl
have lean_s221 : (Eq let152 let166) := by timed congr lean_s219 lean_s220
let lean_s222 := by timed flipCongrArg lean_s221 [GE.ge]
have lean_s223 : let291 := by timed rfl
have lean_s224 : (Eq let153 let286) := by timed congr lean_s222 lean_s223
let lean_s225 := by timed congr lean_s190 lean_s224
let lean_s226 := by timed flipCongrArg lean_s211 [HAdd.hAdd]
have lean_s227 : let295 := by timed rfl
have lean_s228 : (Eq let185 let284) := by timed congr lean_s226 lean_s227
let lean_s229 := by timed flipCongrArg lean_s228 [GE.ge]
have lean_s230 : (Eq let186 let285) := by timed congr lean_s229 lean_s216
let lean_s231 := by timed congr lean_s190 lean_s230
let lean_s232 := by timed flipCongrArg lean_s204 [HAdd.hAdd]
have lean_s233 : (Eq let214 let214) := by timed rfl
have lean_s234 : (Eq let215 let262) := by timed congr lean_s232 lean_s233
let lean_s235 := by timed flipCongrArg lean_s234 [GE.ge]
have lean_s236 : (Eq let216 let283) := by timed congr lean_s235 lean_s223
let lean_s237 := by timed congr lean_s190 lean_s236
let lean_s238 := by timed flipCongrArg lean_s211 [HAdd.hAdd]
have lean_s239 : let294 := by timed rfl
have lean_s240 : (Eq let169 let281) := by timed congr lean_s238 lean_s239
let lean_s241 := by timed flipCongrArg lean_s240 [GE.ge]
have lean_s242 : (Eq let170 let282) := by timed congr lean_s241 lean_s216
let lean_s243 := by timed congr lean_s190 lean_s242
let lean_s244 := by timed flipCongrArg lean_s204 [HAdd.hAdd]
have lean_s245 : (Eq let173 let173) := by timed rfl
have lean_s246 : (Eq let249 let174) := by timed congr lean_s244 lean_s245
let lean_s247 := by timed flipCongrArg lean_s246 [GE.ge]
have lean_s248 : (Eq let250 let280) := by timed congr lean_s247 lean_s223
let lean_s249 := by timed congr lean_s190 lean_s248
have lean_s250 : let290 := by timed rfl
let lean_s251 := by timed congr lean_s249 lean_s250
let lean_s252 := by timed congr lean_s243 lean_s251
let lean_s253 := by timed congr lean_s237 lean_s252
let lean_s254 := by timed congr lean_s231 lean_s253
let lean_s255 := by timed congr lean_s225 lean_s254
let lean_s256 := by timed congr lean_s218 lean_s255
let lean_s257 := by timed congr lean_s208 lean_s256
let lean_s258 := by timed congr lean_s202 lean_s257
let lean_s259 := by timed congr lean_s200 lean_s258
let lean_s260 := by timed congr lean_s198 lean_s259
let lean_s261 := by timed congr lean_s196 lean_s260
let lean_s262 := by timed congr lean_s194 lean_s261
have lean_s263 : (Eq let279 let289) := by timed congr lean_s192 lean_s262
have lean_s264 : let292 := by timed rfl
have lean_s265 : let302 := by timed rfl
let lean_s266 := by timed congr lean_s264 lean_s265
have lean_s267 : let301 := by timed rfl
let lean_s268 := by timed congr lean_s264 lean_s267
have lean_s269 : let300 := by timed rfl
let lean_s270 := by timed congr lean_s264 lean_s269
have lean_s271 : let299 := by timed rfl
let lean_s272 := by timed congr lean_s264 lean_s271
have lean_s273 : let298 := by timed rfl
let lean_s274 := by timed congr lean_s264 lean_s273
have lean_s275 : let297 := by timed rfl
let lean_s276 := by timed congr lean_s264 lean_s275
let lean_s277 := by timed congr lean_s264 lean_r62
let lean_s278 := by timed flipCongrArg lean_r42 [HAdd.hAdd]
have lean_s279 : (Eq let287 let227) := by timed congr lean_s278 lean_s129
have lean_s280 : (Eq let287 xx5f1) := by timed Eq.trans lean_s279 lean_r66
let lean_s281 := by timed flipCongrArg lean_s280 [GE.ge]
have lean_s282 : let293 := by timed rfl
have lean_s283 : (Eq let288 let270) := by timed congr lean_s281 lean_s282
let lean_s284 := by timed congr lean_s264 lean_s283
let lean_s285 := by timed flipCongrArg lean_r37 [GE.ge]
have lean_s286 : let291 := by timed rfl
have lean_s287 : (Eq let286 let269) := by timed congr lean_s285 lean_s286
let lean_s288 := by timed congr lean_s264 lean_s287
let lean_s289 := by timed flipCongrArg lean_r42 [HAdd.hAdd]
have lean_s290 : (Eq let284 let194) := by timed congr lean_s289 lean_s141
have lean_s291 : (Eq let284 xx5f2) := by timed Eq.trans lean_s290 lean_r52
let lean_s292 := by timed flipCongrArg lean_s291 [GE.ge]
have lean_s293 : (Eq let285 let268) := by timed congr lean_s292 lean_s282
let lean_s294 := by timed congr lean_s264 lean_s293
let lean_s295 := by timed flipCongrArg lean_r96 [GE.ge]
have lean_s296 : (Eq let283 let267) := by timed congr lean_s295 lean_s286
let lean_s297 := by timed congr lean_s264 lean_s296
let lean_s298 := by timed flipCongrArg lean_r42 [HAdd.hAdd]
have lean_s299 : (Eq let281 let236) := by timed congr lean_s298 lean_s150
have lean_s300 : (Eq let281 xx5f3) := by timed Eq.trans lean_s299 lean_r70
let lean_s301 := by timed flipCongrArg lean_s300 [GE.ge]
have lean_s302 : (Eq let282 let266) := by timed congr lean_s301 lean_s282
let lean_s303 := by timed congr lean_s264 lean_s302
let lean_s304 := by timed flipCongrArg lean_r40 [GE.ge]
have lean_s305 : (Eq let280 let265) := by timed congr lean_s304 lean_s286
let lean_s306 := by timed congr lean_s264 lean_s305
have lean_s307 : let290 := by timed rfl
let lean_s308 := by timed congr lean_s306 lean_s307
let lean_s309 := by timed congr lean_s303 lean_s308
let lean_s310 := by timed congr lean_s297 lean_s309
let lean_s311 := by timed congr lean_s294 lean_s310
let lean_s312 := by timed congr lean_s288 lean_s311
let lean_s313 := by timed congr lean_s284 lean_s312
let lean_s314 := by timed congr lean_s277 lean_s313
let lean_s315 := by timed congr lean_s276 lean_s314
let lean_s316 := by timed congr lean_s274 lean_s315
let lean_s317 := by timed congr lean_s272 lean_s316
let lean_s318 := by timed congr lean_s270 lean_s317
let lean_s319 := by timed congr lean_s268 lean_s318
have lean_s320 : (Eq let289 let274) := by timed congr lean_s266 lean_s319
have lean_s321 : (Eq let289 let273) := by timed Eq.trans lean_s320 lean_r99
have lean_s322 : (Eq let279 let273) := by timed Eq.trans lean_s263 lean_s321
have lean_s323 : (Eq let132 let273) := by timed Eq.trans lean_s189 lean_s322
have lean_s324 : let273 := by timed eqResolve lean_a103 lean_s323
have lean_s325 : let59 := by andElim lean_s324, 12
let lean_s326 := by R1 lean_s41, lean_s325, let58, [(- 1), 0]
have lean_s327 : let144 := by andElim lean_s324, 5
let lean_s328 := by R2 lean_s326, lean_s327, let144, [(- 1), 0]
have lean_s329 : let73 := by andElim lean_s324, 4
let lean_s330 := by R1 lean_s328, lean_s329, let72, [(- 1), 0]
have lean_s331 : let179 := by andElim lean_s324, 3
let lean_s332 := by R2 lean_s330, lean_s331, let179, [(- 1), 0]
have lean_s333 : let63 := by andElim lean_s324, 2
let lean_s334 := by R1 lean_s332, lean_s333, let62, [(- 1), 0]
have lean_s335 : let245 := by andElim lean_s324, 0
exact (show False from by R1 lean_s334, lean_s335, let67, [0, 0])


