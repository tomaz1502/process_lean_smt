open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5f10 : Rat}
variable {xx5f12 : Rat}
variable {xx5f7 : Rat}
variable {xx5f8 : Prop}
variable {xx5f11 : Rat}
variable {xx5f3 : Rat}
variable {xx5f6 : Rat}
variable {xx5f0 : Prop}
variable {xx5f9 : Rat}
variable {xx5f5 : Prop}
variable {xx5f4 : Prop}
variable {xx5f4 : Prop}
variable {xx5f5 : Prop}
variable {xx5f0 : Prop}
variable {xx5f1 : Prop}
variable {xx5f1 : Prop}
variable {xx5f6 : Rat}
variable {xx5f3 : Rat}
variable {xx5f11 : Rat}
variable {xx5f2 : Rat}
variable {xx5f2 : Rat}
variable {xx5f7 : Rat}
variable {xx5f8 : Prop}
variable {xx5f12 : Rat}
variable {xx5f10 : Rat}
variable {xx5f9 : Rat}

theorem th0 :
  let let1 := (Not xx5f4)
  let let2 := (Not xx5f5)
  let let3 := (Or let2 let1)
  let let4 := (And let1 let2)
  let let5 := (Int.ofNat 0)
  let let6 := (Int.ofNat 1)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul let7 xx5f11))
  let let9 := (binrel% GE.ge let8 let5)
  let let10 := (binrel% HMul.hMul let7 xx5f6)
  let let11 := (binrel% GE.ge (binrel% HAdd.hAdd let10 xx5f11) let5)
  let let12 := (Int.ofNat 4)
  let let13 := (Neg.neg let12)
  let let14 := (Int.ofNat 5)
  let let15 := (binrel% HDiv.hDiv let6 let14)
  let let16 := (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg let15) xx5f6))
  let let17 := (binrel% GE.ge let16 let13)
  let let18 := (binrel% HMul.hMul let15 xx5f6)
  let let19 := (binrel% HMul.hMul let7 xx5f2)
  let let20 := (binrel% GE.ge (binrel% HAdd.hAdd let19 let18) let12)
  let let21 := (Int.ofNat 2)
  let let22 := (Neg.neg let21)
  let let23 := (binrel% HMul.hMul let7 xx5f7)
  let let24 := (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 let23) let22)
  let let25 := (binrel% GE.ge (binrel% HAdd.hAdd let19 xx5f7) let21)
  let let26 := (Int.ofNat 3)
  let let27 := (binrel% HDiv.hDiv let14 let26)
  let let28 := (Neg.neg let27)
  let let29 := (Int.ofNat 6)
  let let30 := (binrel% HDiv.hDiv let6 let29)
  let let31 := (Neg.neg let30)
  let let32 := (binrel% HMul.hMul let31 xx5f11)
  let let33 := (binrel% HAdd.hAdd xx5f2 let32)
  let let34 := (binrel% GE.ge let33 let28)
  let let35 := (Int.ofNat 20)
  let let36 := (binrel% HMul.hMul let21 xx5f11)
  let let37 := (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 let36) let35)
  let let38 := (binrel% GE.ge let19 (Neg.neg let14))
  let let39 := (binrel% GE.ge xx5f2 let13)
  let let40 := (binrel% GE.ge let19 let5)
  let let41 := (binrel% GE.ge xx5f2 let5)
  let let42 := (Int.ofNat 8)
  let let43 := (binrel% GE.ge xx5f12 let42)
  let let44 := (binrel% HMul.hMul let7 xx5f12)
  let let45 := (binrel% GE.ge let44 (Neg.neg let42))
  let let46 := (And (And let45 let43) (And xx5f8 (And let41 (And let40 (And let39 (And let38 (And let37 (And let34 (And (And let25 let24) (And (And let20 let17) (And (And let11 let9) let4)))))))))))
  let let47 := (Int.ofNat 10)
  let let48 := (binrel% GE.ge xx5f6 let47)
  let let49 := (binrel% GE.ge let10 (Neg.neg let47))
  let let50 := (binrel% GE.ge xx5f6 let35)
  let let51 := (binrel% GE.ge let10 (Neg.neg let35))
  let let52 := (binrel% GE.ge xx5f7 let5)
  let let53 := (binrel% GE.ge let23 let5)
  let let54 := (Not xx5f8)
  let let55 := (binrel% GE.ge xx5f12 let5)
  let let56 := (binrel% GE.ge let44 let5)
  let let57 := (And (And let56 let55) (And let54 (And (And let53 let52) (And (And let51 let50) (And (And let49 let48) let4)))))
  let let58 := (Or let57 let46)
  let let59 := (binrel% GE.ge xx5f11 let5)
  let let60 := (binrel% GE.ge xx5f9 let5)
  let let61 := (Rat.ofInt 1)
  let let62 := (Rat.ofInt 0)
  let let63 := (smtIte xx5f8 let62 let61 Rat)
  let let64 := (binrel% GE.ge let63 let5)
  let let65 := (binrel% HMul.hMul let7 let63)
  let let66 := (binrel% GE.ge let65 let7)
  let let67 := (And let66 (And let64 (And let60 (And let59 (And let58 let3)))))
  let let68 := (Eq xx5f6 xx5f11)
  let let69 := (Eq xx5f2 (binrel% HAdd.hAdd let13 let18))
  let let70 := (Eq xx5f2 (binrel% HAdd.hAdd let22 xx5f7))
  let let71 := (And let70 (And let69 (And let68 let4)))
  let let72 := (And let37 (And let34 let71))
  let let73 := (Eq xx5f12 (Rat.ofInt 8))
  let let74 := (And let73 (And xx5f8 (And let41 (And let40 (And let39 (And let38 let72))))))
  let let75 := (Rat.ofInt 10)
  let let76 := (Eq xx5f6 let75)
  let let77 := (Rat.ofInt 20)
  let let78 := (Eq xx5f6 let77)
  let let79 := (Eq xx5f7 let62)
  let let80 := (And let79 (And let78 (And let76 let4)))
  let let81 := (Eq xx5f12 let62)
  let let82 := (And let81 (And let54 let80))
  let let83 := (Or let82 let74)
  let let84 := (And let66 (And let64 (And let60 (And let59 (And let83 let3)))))
  let let85 := (binrel% HMul.hMul let61 xx5f6)
  let let86 := (Neg.neg let61)
  let let87 := (binrel% HMul.hMul let86 xx5f6)
  let let88 := (binrel% HMul.hMul let61 let75)
  let let89 := (binrel% HAdd.hAdd let19 (binrel% HMul.hMul let30 xx5f11))
  let let90 := (binrel% HMul.hMul let86 let33)
  let let91 := (binrel% HAdd.hAdd let21 xx5f2)
  let let92 := (Rat.ofInt 2)
  let let93 := (binrel% HAdd.hAdd let92 xx5f2)
  let let94 := (Not False)
  let let95 := (And let94 False)
  let let96 := (Rat.ofInt 40)
  let let97 := (Eq let75 let96)
  let let98 := (Eq let75 let62)
  let let99 := (Or let98 let97)
  let let100 := (Eq let77 let96)
  let let101 := (Or let100 let99)
  let let102 := (Or (Or let100 let98) let97)
  let let103 := (And let81 (And let54 (And True (And True let80))))
  let let104 := (And let56 (And let55 (And let54 (And let53 (And let52 (And let51 (And let50 (And let49 (And let48 let4)))))))))
  let let105 := (binrel% HMul.hMul xx5f11 let92)
  let let106 := (Or let94 False)
  let let107 := (And let37 let34)
  let let108 := (Or False let107)
  let let109 := (Rat.ofInt 6)
  let let110 := (binrel% HMul.hMul let77 let109)
  let let111 := (binrel% HMul.hMul let86 let110)
  let let112 := (Rat.ofInt 5)
  let let113 := (binrel% HMul.hMul let75 let112)
  let let114 := (binrel% HAdd.hAdd let113 let111)
  let let115 := (binrel% HSub.hSub let113 let110)
  let let116 := (smtIte False let92 let91 Rat)
  let let117 := (Not let37)
  let let118 := (Not let117)
  let let119 := (Eq xx5f1 xx5f5)
  let let120 := (Eq xx5f0 xx5f4)
  let let121 := (And let120 let119)
  let let122 := (Eq xx5f3 let77)
  let let123 := (And let79 (And let122 (And let76 let121)))
  let let124 := (Not xx5f1)
  let let125 := (Not xx5f0)
  let let126 := (And let81 (And let54 (And let125 (And let124 let123))))
  let let127 := (And let81 (And let54 (And let125 (And let124 (And True (And True (And True (And True let123))))))))
  let let128 := (Eq xx5f7 let91)
  let let129 := (binrel% HMul.hMul let14 xx5f2)
  let let130 := (binrel% HAdd.hAdd let35 let129)
  let let131 := (smtIte False let77 let130 Rat)
  let let132 := (Eq xx5f6 let130)
  let let133 := (Eq xx5f3 xx5f6)
  let let134 := (Or let133 False)
  let let135 := (Eq xx5f5 xx5f1)
  let let136 := (smtIte False let75 xx5f11 Rat)
  let let137 := (binrel% HMul.hMul xx5f2 let112)
  let let138 := (Neg.neg (Rat.ofInt 30))
  let let139 := (binrel% GE.ge let138 let62)
  let let140 := (Or False False)
  let let141 := (And let73 (And xx5f8 (And let41 (And let40 (And let39 (And let38 (And True let72)))))))
  let let142 := (And let2 (And let79 (And let122 let76)))
  let let143 := (And let1 let142)
  let let144 := (Eq xx5f12 (Rat.ofInt 7))
  let let145 := (And let144 (And let54 (And xx5f0 (And let124 let143))))
  let let146 := (And let144 (And let54 (And xx5f0 (And let124 (And True (And True (And True (And True let143))))))))
  let let147 := (binrel% GT.gt let30 let5)
  let let148 := (Eq False xx5f5)
  let let149 := (Eq xx5f4 xx5f0)
  let let150 := (Eq xx5f7 let92)
  let let151 := (And let1 (And xx5f5 (And let122 (And let76 let150))))
  let let152 := (And let124 (And False let151))
  let let153 := (Rat.ofInt 4)
  let let154 := (Eq xx5f12 let153)
  let let155 := (And let154 (And let54 (And xx5f0 let152)))
  let let156 := (binrel% LE.le let8 let62)
  let let157 := (binrel% HDiv.hDiv let14 let29)
  let let158 := (binrel% HAdd.hAdd (binrel% HMul.hMul let157 xx5f2) (binrel% HMul.hMul let31 xx5f6))
  let let159 := (binrel% HMul.hMul let157 let16)
  let let160 := (binrel% GE.ge xx5f6 let77)
  let let161 := (binrel% HMul.hMul let86 let28)
  let let162 := (binrel% GT.gt let61 let5)
  let let163 := (And let125 xx5f1)
  let let164 := (smtIte let163 let75 xx5f11 Rat)
  let let165 := (Eq xx5f6 let164)
  let let166 := (smtIte let163 let77 let130 Rat)
  let let167 := (Eq xx5f3 let166)
  let let168 := (smtIte let163 let92 let91 Rat)
  let let169 := (Eq xx5f7 let168)
  let let170 := (Or let125 xx5f1)
  let let171 := (Or xx5f0 xx5f1)
  let let172 := (And let171 let170)
  let let173 := (Or let172 let107)
  let let174 := (And let40 (And let39 let38))
  let let175 := (Or xx5f1 let174)
  let let176 := (Or let125 let175)
  let let177 := (Or xx5f0 let175)
  let let178 := (And let73 (And xx5f8 (And let41 (And let177 (And let176 (And let173 (And let169 (And let167 (And let165 let121)))))))))
  let let179 := (Or let145 let178)
  let let180 := (Or let126 let179)
  let let181 := (Or let126 (Or False (Or False (Or False (Or False (Or False (Or False let179)))))))
  let let182 := (binrel% HMul.hMul let30 xx5f2)
  let let183 := (binrel% HAdd.hAdd (binrel% HMul.hMul let30 xx5f6) let32)
  let let184 := (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let183 let182)))
  let let185 := (Or False let174)
  let let186 := (Or False let185)
  let let187 := (Eq xx5f6 xx5f6)
  let let188 := (Not let41)
  let let189 := (Not let188)
  let let190 := (Neg.neg (Rat.ofInt 70))
  let let191 := (Rat.ofInt 120)
  let let192 := (Neg.neg let191)
  let let193 := (Rat.ofInt 50)
  let let194 := (binrel% HAdd.hAdd let193 let192)
  let let195 := (Eq False xx5f4)
  let let196 := (binrel% HAdd.hAdd let77 let137)
  let let197 := (binrel% GE.ge let196 let62)
  let let198 := (Not let197)
  let let199 := (binrel% LT.lt let196 let62)
  let let200 := (And xx5f4 let142)
  let let201 := (binrel% HAdd.hAdd let115 let96)
  let let202 := (binrel% LT.lt let201 let62)
  let let203 := (Not let202)
  let let204 := (Not let100)
  let let205 := (Eq let77 let62)
  let let206 := (Not let205)
  let let207 := (Eq let92 let92)
  let let208 := (Eq xx5f12 (Rat.ofInt 3))
  let let209 := (And let208 (And let54 (And let125 (And let124 (And let207 (And let206 (And let204 (And let203 let200))))))))
  let let210 := (And let125 let124)
  let let211 := (And (And (And (And (And (And (And (And (And (And (And let208 let54) let210) let207) let206) let204) let203) xx5f4) let2) let79) let122) let76)
  let let212 := (binrel% HMul.hMul let75 let92)
  let let213 := (binrel% HMul.hMul let30 let62)
  let let214 := (And let73 (And xx5f8 (And let41 (And let174 (And True (And let107 let71))))))
  let let215 := (And let144 (And let54 (And xx5f0 (And let124 (And let207 (And let206 (And let204 (And let202 let143))))))))
  let let216 := (And xx5f0 let124)
  let let217 := (And (And (And (And (And (And (And (And (And (And (And let144 let54) let216) let207) let206) let204) let202) let1) let2) let79) let122) let76)
  let let218 := (binrel% HAdd.hAdd let35 let19)
  let let219 := (binrel% HAdd.hAdd let77 let19)
  let let220 := (binrel% HAdd.hAdd let77 let129)
  let let221 := (And let144 (And let54 (And False (And let94 (And let1 (And let2 (And let79 (And let78 let76))))))))
  let let222 := (binrel% HMul.hMul let86 xx5f2)
  let let223 := (And False True)
  let let224 := (binrel% GE.ge xx5f11 let62)
  let let225 := (Not let224)
  let let226 := (binrel% LT.lt xx5f11 let62)
  let let227 := (smtIte False let62 let75 Rat)
  let let228 := (Or let82 (Or False let74))
  let let229 := (binrel% HMul.hMul let29 xx5f2)
  let let230 := (binrel% HAdd.hAdd let47 let229)
  let let231 := (binrel% HAdd.hAdd let75 let229)
  let let232 := (binrel% LE.le xx5f11 let230)
  let let233 := (Or let205 let100)
  let let234 := (And let124 (And let233 let151))
  let let235 := (And let154 (And let54 (And xx5f0 let234)))
  let let236 := (And let1 xx5f5)
  let let237 := (And (And (And (And (And (And (And let154 let54) let216) let233) let236) let122) let76) let150)
  let let238 := (Neg.neg let157)
  let let239 := (Neg.neg (binrel% HDiv.hDiv let47 let26))
  let let240 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let239 (binrel% HAdd.hAdd let62 let157)))
  let let241 := (Eq xx5f0 False)
  let let242 := (binrel% HMul.hMul xx5f2 let109)
  let let243 := (binrel% HAdd.hAdd let75 let242)
  let let244 := (binrel% LE.le let243 let96)
  let let245 := (Not let199)
  let let246 := (binrel% LE.le let93 let92)
  let let247 := (And (And let246 let245) let244)
  let let248 := (Or xx5f1 let247)
  let let249 := (Or xx5f0 let248)
  let let250 := (Or let171 let247)
  let let251 := (binrel% GE.ge xx5f2 let62)
  let let252 := (Neg.neg let153)
  let let253 := (binrel% HMul.hMul let157 let252)
  let let254 := (binrel% LE.le let62 let238)
  let let255 := (binrel% HMul.hMul let30 let112)
  let let256 := (Not let34)
  let let257 := (binrel% LT.lt let33 let28)
  let let258 := (binrel% GE.ge let36 let218)
  let let259 := (Eq let63 let63)
  let let260 := (Eq let259 True)
  let let261 := (binrel% GE.ge let201 let62)
  let let262 := (Not let261)
  let let263 := (binrel% HMul.hMul let30 let8)
  let let264 := (binrel% LE.le xx5f6 let75)
  let let265 := (And let124 (And False (And let122 (And let76 (And let120 (And let119 let150))))))
  let let266 := (Eq xx5f12 let112)
  let let267 := (And let266 (And let54 (And xx5f0 let265)))
  let let268 := (Eq let259 let259)
  let let269 := (And let149 let135)
  let let270 := (smtIte let163 let77 let196 Rat)
  let let271 := (Eq xx5f3 let270)
  let let272 := (smtIte let163 let92 let93 Rat)
  let let273 := (Eq xx5f7 let272)
  let let274 := (binrel% LE.le xx5f11 let243)
  let let275 := (binrel% HSub.hSub let212 xx5f2)
  let let276 := (binrel% LT.lt let105 let275)
  let let277 := (Not let276)
  let let278 := (And let277 let274)
  let let279 := (Or let172 let278)
  let let280 := (Or let170 let247)
  let let281 := (binrel% LT.lt xx5f2 let62)
  let let282 := (Not let281)
  let let283 := (And let73 (And xx5f8 (And let282 (And let250 (And let280 (And let279 (And let273 (And let271 (And let165 let269)))))))))
  let let284 := (And (And (And (And (And (And (And (And (And let73 xx5f8) let282) let250) let280) let279) let273) let271) let165) let269)
  let let285 := (And let45 (And let43 (And xx5f8 (And let41 (And let40 (And let39 (And let38 (And let37 (And let34 (And let25 (And let24 (And let20 (And let17 (And let11 (And let9 let4)))))))))))))))
  let let286 := (binrel% HAdd.hAdd let212 let222)
  let let287 := (smtIte False let96 let75 Rat)
  let let288 := (And let66 (And let64 (And True (And True (And let60 (And True (And let59 (And let83 (And True (And True let3))))))))))
  let let289 := (Neg.neg let75)
  let let290 := (binrel% LE.le let62 let289)
  let let291 := (Or let94 let174)
  let let292 := (Or let94 let185)
  let let293 := (binrel% HMul.hMul let86 let191)
  let let294 := (Or let94 let94)
  let let295 := (binrel% GE.ge let105 let275)
  let let296 := (Not let295)
  let let297 := (Neg.neg let77)
  let let298 := (binrel% HMul.hMul let86 let77)
  let let299 := (binrel% LE.le let230 let96)
  let let300 := (binrel% HAdd.hAdd xx5f6 let10)
  let let301 := (Not True)
  let let302 := (Not let39)
  let let303 := (Not let302)
  let let304 := (Eq let77 let75)
  let let305 := (binrel% GE.ge let130 let62)
  let let306 := (binrel% LE.le let91 let92)
  let let307 := (And let246 (And let245 let244))
  let let308 := (Or let125 let248)
  let let309 := (Not let251)
  let let310 := (binrel% HAdd.hAdd let190 let96)
  let let311 := (binrel% LE.le xx5f2 let112)
  let let312 := (Not let59)
  let let313 := (Not let312)
  let let314 := (Eq xx5f12 let109)
  let let315 := (And let314 (And let54 (And xx5f0 (And let124 (And True (And True (And True (And False let123))))))))
  let let316 := (And let79 (And let122 (And let76 let269)))
  let let317 := (And let314 (And let54 (And xx5f0 (And let124 (And let207 (And let206 (And let204 (And let203 let316))))))))
  let let318 := (And (And (And (And (And (And (And (And (And (And let314 let54) let216) let207) let206) let204) let203) let79) let122) let76) let269)
  let let319 := (Not let60)
  let let320 := (Not let319)
  let let321 := (smtIte False let96 let77 Rat)
  let let322 := (binrel% LT.lt let86 let5)
  let let323 := (Or False let140)
  let let324 := (Or let205 let99)
  let let325 := (Or (Or let205 let98) let97)
  let let326 := (smtIte let98 let96 let75 Rat)
  let let327 := (smtIte let97 let62 let326 Rat)
  let let328 := (Eq xx5f6 let327)
  let let329 := (And let328 (And let149 (And let135 let150)))
  let let330 := (smtIte let205 let96 let77 Rat)
  let let331 := (Eq xx5f3 let330)
  let let332 := (And let266 (And let54 (And xx5f0 (And let124 (And let325 (And let331 let329))))))
  let let333 := (And (And (And (And (And (And (And let266 let54) let216) let325) let331) let328) let269) let150)
  let let334 := (And let208 (And let54 (And let125 (And let124 (And True (And True (And True (And False let200))))))))
  let let335 := (Eq xx5f12 let92)
  let let336 := (And let335 (And let54 (And let125 let152)))
  let let337 := (And let335 (And let54 (And let125 let234)))
  let let338 := (And (And (And (And (And (And (And let335 let54) let210) let233) let236) let122) let76) let150)
  let let339 := (Eq xx5f12 let61)
  let let340 := (And let339 (And let54 (And let125 let265)))
  let let341 := (binrel% HAdd.hAdd let75 let297)
  let let342 := (smtIte False let62 let77 Rat)
  let let343 := (smtIte let100 let62 let77 Rat)
  let let344 := (Eq xx5f3 let343)
  let let345 := (And let339 (And let54 (And let125 (And let124 (And let102 (And let344 let329))))))
  let let346 := (And (And (And (And (And (And (And let339 let54) let210) let102) let344) let328) let269) let150)
  let let347 := (And let81 (And let54 (And let125 (And let124 (And let207 (And let206 (And let204 (And let202 let316))))))))
  let let348 := (And (And (And (And (And (And (And (And (And (And let81 let54) let210) let207) let206) let204) let202) let79) let122) let76) let269)
  let let349 := (Or let348 (Or let346 (Or let338 (Or let211 (Or let237 (Or let333 (Or let318 (Or let217 let284))))))))
  let let350 := (Or (Or (Or (Or (Or (Or (Or (Or let348 let346) let338) let211) let237) let333) let318) let217) let284)
  let let351 := (binrel% LE.le let16 let252)
  let let352 := (binrel% GE.ge xx5f9 let62)
  let let353 := (Or True let174)
  let let354 := (binrel% GT.gt let157 let5)
  let let355 := (Not let352)
  let let356 := (binrel% LT.lt xx5f9 let62)
  let let357 := (binrel% GE.ge xx5f10 let5)
  let let358 := (binrel% GE.ge xx5f10 let62)
  let let359 := (binrel% HMul.hMul let7 xx5f10)
  let let360 := (binrel% GE.ge let359 let7)
  let let361 := (binrel% LE.le xx5f10 let61)
  let let362 := (Or let124 let125)
  let let363 := (And let362 let3)
  let let364 := (Or let133 let304)
  let let365 := (Not let226)
  let let366 := (Eq xx5f10 let63)
  let let367 := (Not let356)
  let let368 := (And let361 (And let358 (And let125 (And let124 (And let367 (And let366 (And let365 (And let350 (And let364 let363)))))))))
  let let369 := (And (And (And (And (And (And (And (And (And let361 let358) let210) let367) let366) let365) let350) let364) let362) let3)
  let let370 := (Eq xx5f1 False)
  let let371 := (Not let285)
  let let372 := (Not let11)
  let let373 := (Not let20)
  let let374 := (Not let38)
  let let375 := (Or let256 False)
  let let376 := (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let253 (binrel% HAdd.hAdd let213 let255)))
  let let377 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let263 let182)))
  let let378 := (binrel% LE.le let377 let376)
  let let379 := (binrel% LE.le let182 let255)
  let let380 := (And let147 let311)
  let let381 := (binrel% LE.le let263 let213)
  let let382 := (And let147 let156)
  let let383 := (binrel% LE.le let159 let253)
  let let384 := (And let354 let351)
  let let385 := (binrel% LE.le let90 let161)
  let let386 := (And let322 let34)
  let let387 := (Or let104 let285)
  let let388 := (And let66 (And let64 (And let60 (And let59 (And let387 let3)))))
  let let389 := (Eq let67 let388)
  let let390 := (Eq let3 let3)
  let let391 := (Eq And And)
  let let392 := (Eq let59 let59)
  let let393 := (Eq let60 let60)
  let let394 := (Eq let64 let64)
  let let395 := (Eq let5 let5)
  let let396 := (Eq let66 let66)
  let let397 := (Eq let7 let7)
  let let398 := (And let360 (And let357 (And let125 (And let124 (And let60 (And let366 (And let59 (And let180 (And let133 let363)))))))))
  let let399 := (And let195 let148)
  let let400 := (smtIte let95 let75 xx5f11 Rat)
  let let401 := (Eq xx5f6 let400)
  let let402 := (smtIte let95 let77 let130 Rat)
  let let403 := (Eq xx5f6 let402)
  let let404 := (smtIte let95 let92 let91 Rat)
  let let405 := (Eq xx5f7 let404)
  let let406 := (And let140 let106)
  let let407 := (Or let406 let107)
  let let408 := (And let73 (And xx5f8 (And let41 (And let186 (And let292 (And let407 (And let405 (And let403 (And let401 let399)))))))))
  let let409 := (And let81 (And let54 (And let94 (And let94 (And let79 (And let78 (And let76 let399)))))))
  let let410 := (Or let409 (Or let221 let408))
  let let411 := (And let66 (And let64 (And let94 (And let94 (And let60 (And let259 (And let59 (And let410 (And let187 (And let294 let3))))))))))
  let let412 := (Eq xx5f11 xx5f11)
  let let413 := (Eq let75 let75)
  let let414 := (Eq let130 let130)
  let let415 := (Eq let77 let77)
  let let416 := (Eq let91 let91)
  let let417 := (Eq xx5f7 xx5f7)
  let let418 := (Eq let107 let107)
  let let419 := (Eq let174 let174)
  let let420 := (Eq let41 let41)
  let let421 := (Eq xx5f8 xx5f8)
  let let422 := (Eq let73 let73)
  let let423 := (Eq Or Or)
  let let424 := (Eq let76 let76)
  let let425 := (Eq let79 let79)
  let let426 := (Eq let54 let54)
  let let427 := (Eq let81 let81)
  let let428 := (Eq let2 let2)
  let let429 := (Eq let1 let1)
  let let430 := (Eq let144 let144)
  let let431 := (Eq xx5f5 xx5f5)
  let let432 := (Eq xx5f4 xx5f4)
  let let433 := (Not let104)
  let let434 := (Not let49)
  let let435 := (Not let50)
  let let436 := (binrel% HAdd.hAdd let88 let298)
  let let437 := (binrel% HAdd.hAdd let85 let87)
  let let438 := (binrel% LE.le let437 let436)
  let let439 := (binrel% LE.le let87 let298)
  let let440 := (And let322 let160)
  let let441 := (binrel% LE.le let85 let88)
  let let442 := (And let162 let264)
(Eq let84 let67) → (Eq let85 xx5f6) → (Eq let87 let10) → (Eq let88 let75) → (Eq let90 let89) → (Eq let93 let91) → (Eq let95 False) → (Eq let102 let101) → (Eq let103 let82) → (Eq let57 let104) → (Eq let105 let36) → (Eq let106 let94) → (Eq let108 let107) → (Eq let115 let114) → (Eq let116 let91) → (Eq let118 let37) → (Eq let127 let126) → (Eq let128 let70) → (Eq let131 let130) → (Eq let132 let69) → (Eq let134 let133) → (Eq let135 let119) → (Eq let136 xx5f11) → (Eq let137 let129) → (Eq let139 False) → (Eq let140 False) → (Eq let141 let74) → (Eq let146 let145) → (Eq let147 True) → (Eq let148 let2) → (Eq let149 let120) → (Eq let155 False) → (Eq let156 let11) → (Eq let159 let158) → (Eq let160 let50) → (Eq let161 let27) → (Eq let162 True) → (Eq let181 let180) → (Eq let184 let62) → (Eq let186 let174) → (Eq let187 True) → (Eq let189 let41) → (Eq let194 let190) → (Eq let195 let1) → (Eq let199 let198) → (Eq let211 let209) → (Eq let212 let77) → (Eq let213 let62) → (Eq let214 let141) → (Eq let217 let215) → (Eq let219 let218) → (Eq let220 let130) → (Eq let221 False) → (Eq let222 let19) → (Eq let207 True) → (Eq let223 False) → (Eq let226 let225) → (Eq let227 let75) → (Eq let224 let59) → (Eq let228 let83) → (Eq let231 let230) → (Eq let232 let34) → (Eq let237 let235) → (Eq let240 let238) → (Eq let241 let125) → (Eq let94 True) → (Eq let250 let249) → (Eq let251 let41) → (Eq let253 let239) → (Eq let254 False) → (Eq let255 let157) → (Eq let257 let256) → (Eq let258 let37) → let260 → (Eq let202 let262) → (Eq let263 let183) → (Eq let264 let49) → (Eq let267 False) → (Eq let97 False) → let268 → (Eq let284 let283) → (Eq let113 let193) → (Eq let46 let285) → (Eq let275 let286) → (Eq let287 let75) → (Eq let288 let84) → (Eq let290 False) → (Eq let292 let291) → (Eq let242 let229) → (Eq let293 let192) → (Eq let294 let94) → (Eq let276 let296) → (Eq let298 let297) → (Eq let299 let38) → (Eq let300 let62) → (Eq let301 False) → (Eq let303 let39) → (Eq let304 False) → (Eq let305 let39) → (Eq let306 let40) → (Eq let247 let307) → (Eq let280 let308) → (Eq let281 let309) → (Eq let310 let138) → (Eq let110 let191) → (Eq let100 False) → (Eq let311 let38) → (Eq let313 let59) → (Eq let205 False) → (Eq let315 False) → (Eq let318 let317) → (Eq let98 False) → (Eq let320 let60) → (Eq let321 let77) → (Eq let322 True) → (Eq let323 False) → (Eq let325 let324) → (Eq let333 let332) → (Eq let334 False) → (Eq let336 False) → (Eq let338 let337) → (Eq let340 False) → (Eq let341 let289) → (Eq let342 let77) → (Eq let346 let345) → (Eq let348 let347) → (Eq let350 let349) → (Eq let351 let20) → (Eq let352 let60) → (Eq let353 True) → (Eq let354 True) → (Eq let356 let355) → (Eq let358 let357) → (Eq let361 let360) → (Eq let369 let368) → (Eq let370 let124) → let369 → False :=
  let let1 := (Not xx5f4)
  let let2 := (Not xx5f5)
  let let3 := (Or let2 let1)
  let let4 := (And let1 let2)
  let let5 := (Int.ofNat 0)
  let let6 := (Int.ofNat 1)
  let let7 := (Neg.neg let6)
  let let8 := (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul let7 xx5f11))
  let let9 := (binrel% GE.ge let8 let5)
  let let10 := (binrel% HMul.hMul let7 xx5f6)
  let let11 := (binrel% GE.ge (binrel% HAdd.hAdd let10 xx5f11) let5)
  let let12 := (Int.ofNat 4)
  let let13 := (Neg.neg let12)
  let let14 := (Int.ofNat 5)
  let let15 := (binrel% HDiv.hDiv let6 let14)
  let let16 := (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg let15) xx5f6))
  let let17 := (binrel% GE.ge let16 let13)
  let let18 := (binrel% HMul.hMul let15 xx5f6)
  let let19 := (binrel% HMul.hMul let7 xx5f2)
  let let20 := (binrel% GE.ge (binrel% HAdd.hAdd let19 let18) let12)
  let let21 := (Int.ofNat 2)
  let let22 := (Neg.neg let21)
  let let23 := (binrel% HMul.hMul let7 xx5f7)
  let let24 := (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 let23) let22)
  let let25 := (binrel% GE.ge (binrel% HAdd.hAdd let19 xx5f7) let21)
  let let26 := (Int.ofNat 3)
  let let27 := (binrel% HDiv.hDiv let14 let26)
  let let28 := (Neg.neg let27)
  let let29 := (Int.ofNat 6)
  let let30 := (binrel% HDiv.hDiv let6 let29)
  let let31 := (Neg.neg let30)
  let let32 := (binrel% HMul.hMul let31 xx5f11)
  let let33 := (binrel% HAdd.hAdd xx5f2 let32)
  let let34 := (binrel% GE.ge let33 let28)
  let let35 := (Int.ofNat 20)
  let let36 := (binrel% HMul.hMul let21 xx5f11)
  let let37 := (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 let36) let35)
  let let38 := (binrel% GE.ge let19 (Neg.neg let14))
  let let39 := (binrel% GE.ge xx5f2 let13)
  let let40 := (binrel% GE.ge let19 let5)
  let let41 := (binrel% GE.ge xx5f2 let5)
  let let42 := (Int.ofNat 8)
  let let43 := (binrel% GE.ge xx5f12 let42)
  let let44 := (binrel% HMul.hMul let7 xx5f12)
  let let45 := (binrel% GE.ge let44 (Neg.neg let42))
  let let46 := (And (And let45 let43) (And xx5f8 (And let41 (And let40 (And let39 (And let38 (And let37 (And let34 (And (And let25 let24) (And (And let20 let17) (And (And let11 let9) let4)))))))))))
  let let47 := (Int.ofNat 10)
  let let48 := (binrel% GE.ge xx5f6 let47)
  let let49 := (binrel% GE.ge let10 (Neg.neg let47))
  let let50 := (binrel% GE.ge xx5f6 let35)
  let let51 := (binrel% GE.ge let10 (Neg.neg let35))
  let let52 := (binrel% GE.ge xx5f7 let5)
  let let53 := (binrel% GE.ge let23 let5)
  let let54 := (Not xx5f8)
  let let55 := (binrel% GE.ge xx5f12 let5)
  let let56 := (binrel% GE.ge let44 let5)
  let let57 := (And (And let56 let55) (And let54 (And (And let53 let52) (And (And let51 let50) (And (And let49 let48) let4)))))
  let let58 := (Or let57 let46)
  let let59 := (binrel% GE.ge xx5f11 let5)
  let let60 := (binrel% GE.ge xx5f9 let5)
  let let61 := (Rat.ofInt 1)
  let let62 := (Rat.ofInt 0)
  let let63 := (smtIte xx5f8 let62 let61 Rat)
  let let64 := (binrel% GE.ge let63 let5)
  let let65 := (binrel% HMul.hMul let7 let63)
  let let66 := (binrel% GE.ge let65 let7)
  let let67 := (And let66 (And let64 (And let60 (And let59 (And let58 let3)))))
  let let68 := (Eq xx5f6 xx5f11)
  let let69 := (Eq xx5f2 (binrel% HAdd.hAdd let13 let18))
  let let70 := (Eq xx5f2 (binrel% HAdd.hAdd let22 xx5f7))
  let let71 := (And let70 (And let69 (And let68 let4)))
  let let72 := (And let37 (And let34 let71))
  let let73 := (Eq xx5f12 (Rat.ofInt 8))
  let let74 := (And let73 (And xx5f8 (And let41 (And let40 (And let39 (And let38 let72))))))
  let let75 := (Rat.ofInt 10)
  let let76 := (Eq xx5f6 let75)
  let let77 := (Rat.ofInt 20)
  let let78 := (Eq xx5f6 let77)
  let let79 := (Eq xx5f7 let62)
  let let80 := (And let79 (And let78 (And let76 let4)))
  let let81 := (Eq xx5f12 let62)
  let let82 := (And let81 (And let54 let80))
  let let83 := (Or let82 let74)
  let let84 := (And let66 (And let64 (And let60 (And let59 (And let83 let3)))))
  let let85 := (binrel% HMul.hMul let61 xx5f6)
  let let86 := (Neg.neg let61)
  let let87 := (binrel% HMul.hMul let86 xx5f6)
  let let88 := (binrel% HMul.hMul let61 let75)
  let let89 := (binrel% HAdd.hAdd let19 (binrel% HMul.hMul let30 xx5f11))
  let let90 := (binrel% HMul.hMul let86 let33)
  let let91 := (binrel% HAdd.hAdd let21 xx5f2)
  let let92 := (Rat.ofInt 2)
  let let93 := (binrel% HAdd.hAdd let92 xx5f2)
  let let94 := (Not False)
  let let95 := (And let94 False)
  let let96 := (Rat.ofInt 40)
  let let97 := (Eq let75 let96)
  let let98 := (Eq let75 let62)
  let let99 := (Or let98 let97)
  let let100 := (Eq let77 let96)
  let let101 := (Or let100 let99)
  let let102 := (Or (Or let100 let98) let97)
  let let103 := (And let81 (And let54 (And True (And True let80))))
  let let104 := (And let56 (And let55 (And let54 (And let53 (And let52 (And let51 (And let50 (And let49 (And let48 let4)))))))))
  let let105 := (binrel% HMul.hMul xx5f11 let92)
  let let106 := (Or let94 False)
  let let107 := (And let37 let34)
  let let108 := (Or False let107)
  let let109 := (Rat.ofInt 6)
  let let110 := (binrel% HMul.hMul let77 let109)
  let let111 := (binrel% HMul.hMul let86 let110)
  let let112 := (Rat.ofInt 5)
  let let113 := (binrel% HMul.hMul let75 let112)
  let let114 := (binrel% HAdd.hAdd let113 let111)
  let let115 := (binrel% HSub.hSub let113 let110)
  let let116 := (smtIte False let92 let91 Rat)
  let let117 := (Not let37)
  let let118 := (Not let117)
  let let119 := (Eq xx5f1 xx5f5)
  let let120 := (Eq xx5f0 xx5f4)
  let let121 := (And let120 let119)
  let let122 := (Eq xx5f3 let77)
  let let123 := (And let79 (And let122 (And let76 let121)))
  let let124 := (Not xx5f1)
  let let125 := (Not xx5f0)
  let let126 := (And let81 (And let54 (And let125 (And let124 let123))))
  let let127 := (And let81 (And let54 (And let125 (And let124 (And True (And True (And True (And True let123))))))))
  let let128 := (Eq xx5f7 let91)
  let let129 := (binrel% HMul.hMul let14 xx5f2)
  let let130 := (binrel% HAdd.hAdd let35 let129)
  let let131 := (smtIte False let77 let130 Rat)
  let let132 := (Eq xx5f6 let130)
  let let133 := (Eq xx5f3 xx5f6)
  let let134 := (Or let133 False)
  let let135 := (Eq xx5f5 xx5f1)
  let let136 := (smtIte False let75 xx5f11 Rat)
  let let137 := (binrel% HMul.hMul xx5f2 let112)
  let let138 := (Neg.neg (Rat.ofInt 30))
  let let139 := (binrel% GE.ge let138 let62)
  let let140 := (Or False False)
  let let141 := (And let73 (And xx5f8 (And let41 (And let40 (And let39 (And let38 (And True let72)))))))
  let let142 := (And let2 (And let79 (And let122 let76)))
  let let143 := (And let1 let142)
  let let144 := (Eq xx5f12 (Rat.ofInt 7))
  let let145 := (And let144 (And let54 (And xx5f0 (And let124 let143))))
  let let146 := (And let144 (And let54 (And xx5f0 (And let124 (And True (And True (And True (And True let143))))))))
  let let147 := (binrel% GT.gt let30 let5)
  let let148 := (Eq False xx5f5)
  let let149 := (Eq xx5f4 xx5f0)
  let let150 := (Eq xx5f7 let92)
  let let151 := (And let1 (And xx5f5 (And let122 (And let76 let150))))
  let let152 := (And let124 (And False let151))
  let let153 := (Rat.ofInt 4)
  let let154 := (Eq xx5f12 let153)
  let let155 := (And let154 (And let54 (And xx5f0 let152)))
  let let156 := (binrel% LE.le let8 let62)
  let let157 := (binrel% HDiv.hDiv let14 let29)
  let let158 := (binrel% HAdd.hAdd (binrel% HMul.hMul let157 xx5f2) (binrel% HMul.hMul let31 xx5f6))
  let let159 := (binrel% HMul.hMul let157 let16)
  let let160 := (binrel% GE.ge xx5f6 let77)
  let let161 := (binrel% HMul.hMul let86 let28)
  let let162 := (binrel% GT.gt let61 let5)
  let let163 := (And let125 xx5f1)
  let let164 := (smtIte let163 let75 xx5f11 Rat)
  let let165 := (Eq xx5f6 let164)
  let let166 := (smtIte let163 let77 let130 Rat)
  let let167 := (Eq xx5f3 let166)
  let let168 := (smtIte let163 let92 let91 Rat)
  let let169 := (Eq xx5f7 let168)
  let let170 := (Or let125 xx5f1)
  let let171 := (Or xx5f0 xx5f1)
  let let172 := (And let171 let170)
  let let173 := (Or let172 let107)
  let let174 := (And let40 (And let39 let38))
  let let175 := (Or xx5f1 let174)
  let let176 := (Or let125 let175)
  let let177 := (Or xx5f0 let175)
  let let178 := (And let73 (And xx5f8 (And let41 (And let177 (And let176 (And let173 (And let169 (And let167 (And let165 let121)))))))))
  let let179 := (Or let145 let178)
  let let180 := (Or let126 let179)
  let let181 := (Or let126 (Or False (Or False (Or False (Or False (Or False (Or False let179)))))))
  let let182 := (binrel% HMul.hMul let30 xx5f2)
  let let183 := (binrel% HAdd.hAdd (binrel% HMul.hMul let30 xx5f6) let32)
  let let184 := (binrel% HAdd.hAdd let89 (binrel% HAdd.hAdd let158 (binrel% HAdd.hAdd let183 let182)))
  let let185 := (Or False let174)
  let let186 := (Or False let185)
  let let187 := (Eq xx5f6 xx5f6)
  let let188 := (Not let41)
  let let189 := (Not let188)
  let let190 := (Neg.neg (Rat.ofInt 70))
  let let191 := (Rat.ofInt 120)
  let let192 := (Neg.neg let191)
  let let193 := (Rat.ofInt 50)
  let let194 := (binrel% HAdd.hAdd let193 let192)
  let let195 := (Eq False xx5f4)
  let let196 := (binrel% HAdd.hAdd let77 let137)
  let let197 := (binrel% GE.ge let196 let62)
  let let198 := (Not let197)
  let let199 := (binrel% LT.lt let196 let62)
  let let200 := (And xx5f4 let142)
  let let201 := (binrel% HAdd.hAdd let115 let96)
  let let202 := (binrel% LT.lt let201 let62)
  let let203 := (Not let202)
  let let204 := (Not let100)
  let let205 := (Eq let77 let62)
  let let206 := (Not let205)
  let let207 := (Eq let92 let92)
  let let208 := (Eq xx5f12 (Rat.ofInt 3))
  let let209 := (And let208 (And let54 (And let125 (And let124 (And let207 (And let206 (And let204 (And let203 let200))))))))
  let let210 := (And let125 let124)
  let let211 := (And (And (And (And (And (And (And (And (And (And (And let208 let54) let210) let207) let206) let204) let203) xx5f4) let2) let79) let122) let76)
  let let212 := (binrel% HMul.hMul let75 let92)
  let let213 := (binrel% HMul.hMul let30 let62)
  let let214 := (And let73 (And xx5f8 (And let41 (And let174 (And True (And let107 let71))))))
  let let215 := (And let144 (And let54 (And xx5f0 (And let124 (And let207 (And let206 (And let204 (And let202 let143))))))))
  let let216 := (And xx5f0 let124)
  let let217 := (And (And (And (And (And (And (And (And (And (And (And let144 let54) let216) let207) let206) let204) let202) let1) let2) let79) let122) let76)
  let let218 := (binrel% HAdd.hAdd let35 let19)
  let let219 := (binrel% HAdd.hAdd let77 let19)
  let let220 := (binrel% HAdd.hAdd let77 let129)
  let let221 := (And let144 (And let54 (And False (And let94 (And let1 (And let2 (And let79 (And let78 let76))))))))
  let let222 := (binrel% HMul.hMul let86 xx5f2)
  let let223 := (And False True)
  let let224 := (binrel% GE.ge xx5f11 let62)
  let let225 := (Not let224)
  let let226 := (binrel% LT.lt xx5f11 let62)
  let let227 := (smtIte False let62 let75 Rat)
  let let228 := (Or let82 (Or False let74))
  let let229 := (binrel% HMul.hMul let29 xx5f2)
  let let230 := (binrel% HAdd.hAdd let47 let229)
  let let231 := (binrel% HAdd.hAdd let75 let229)
  let let232 := (binrel% LE.le xx5f11 let230)
  let let233 := (Or let205 let100)
  let let234 := (And let124 (And let233 let151))
  let let235 := (And let154 (And let54 (And xx5f0 let234)))
  let let236 := (And let1 xx5f5)
  let let237 := (And (And (And (And (And (And (And let154 let54) let216) let233) let236) let122) let76) let150)
  let let238 := (Neg.neg let157)
  let let239 := (Neg.neg (binrel% HDiv.hDiv let47 let26))
  let let240 := (binrel% HAdd.hAdd let27 (binrel% HAdd.hAdd let239 (binrel% HAdd.hAdd let62 let157)))
  let let241 := (Eq xx5f0 False)
  let let242 := (binrel% HMul.hMul xx5f2 let109)
  let let243 := (binrel% HAdd.hAdd let75 let242)
  let let244 := (binrel% LE.le let243 let96)
  let let245 := (Not let199)
  let let246 := (binrel% LE.le let93 let92)
  let let247 := (And (And let246 let245) let244)
  let let248 := (Or xx5f1 let247)
  let let249 := (Or xx5f0 let248)
  let let250 := (Or let171 let247)
  let let251 := (binrel% GE.ge xx5f2 let62)
  let let252 := (Neg.neg let153)
  let let253 := (binrel% HMul.hMul let157 let252)
  let let254 := (binrel% LE.le let62 let238)
  let let255 := (binrel% HMul.hMul let30 let112)
  let let256 := (Not let34)
  let let257 := (binrel% LT.lt let33 let28)
  let let258 := (binrel% GE.ge let36 let218)
  let let259 := (Eq let63 let63)
  let let260 := (Eq let259 True)
  let let261 := (binrel% GE.ge let201 let62)
  let let262 := (Not let261)
  let let263 := (binrel% HMul.hMul let30 let8)
  let let264 := (binrel% LE.le xx5f6 let75)
  let let265 := (And let124 (And False (And let122 (And let76 (And let120 (And let119 let150))))))
  let let266 := (Eq xx5f12 let112)
  let let267 := (And let266 (And let54 (And xx5f0 let265)))
  let let268 := (Eq let259 let259)
  let let269 := (And let149 let135)
  let let270 := (smtIte let163 let77 let196 Rat)
  let let271 := (Eq xx5f3 let270)
  let let272 := (smtIte let163 let92 let93 Rat)
  let let273 := (Eq xx5f7 let272)
  let let274 := (binrel% LE.le xx5f11 let243)
  let let275 := (binrel% HSub.hSub let212 xx5f2)
  let let276 := (binrel% LT.lt let105 let275)
  let let277 := (Not let276)
  let let278 := (And let277 let274)
  let let279 := (Or let172 let278)
  let let280 := (Or let170 let247)
  let let281 := (binrel% LT.lt xx5f2 let62)
  let let282 := (Not let281)
  let let283 := (And let73 (And xx5f8 (And let282 (And let250 (And let280 (And let279 (And let273 (And let271 (And let165 let269)))))))))
  let let284 := (And (And (And (And (And (And (And (And (And let73 xx5f8) let282) let250) let280) let279) let273) let271) let165) let269)
  let let285 := (And let45 (And let43 (And xx5f8 (And let41 (And let40 (And let39 (And let38 (And let37 (And let34 (And let25 (And let24 (And let20 (And let17 (And let11 (And let9 let4)))))))))))))))
  let let286 := (binrel% HAdd.hAdd let212 let222)
  let let287 := (smtIte False let96 let75 Rat)
  let let288 := (And let66 (And let64 (And True (And True (And let60 (And True (And let59 (And let83 (And True (And True let3))))))))))
  let let289 := (Neg.neg let75)
  let let290 := (binrel% LE.le let62 let289)
  let let291 := (Or let94 let174)
  let let292 := (Or let94 let185)
  let let293 := (binrel% HMul.hMul let86 let191)
  let let294 := (Or let94 let94)
  let let295 := (binrel% GE.ge let105 let275)
  let let296 := (Not let295)
  let let297 := (Neg.neg let77)
  let let298 := (binrel% HMul.hMul let86 let77)
  let let299 := (binrel% LE.le let230 let96)
  let let300 := (binrel% HAdd.hAdd xx5f6 let10)
  let let301 := (Not True)
  let let302 := (Not let39)
  let let303 := (Not let302)
  let let304 := (Eq let77 let75)
  let let305 := (binrel% GE.ge let130 let62)
  let let306 := (binrel% LE.le let91 let92)
  let let307 := (And let246 (And let245 let244))
  let let308 := (Or let125 let248)
  let let309 := (Not let251)
  let let310 := (binrel% HAdd.hAdd let190 let96)
  let let311 := (binrel% LE.le xx5f2 let112)
  let let312 := (Not let59)
  let let313 := (Not let312)
  let let314 := (Eq xx5f12 let109)
  let let315 := (And let314 (And let54 (And xx5f0 (And let124 (And True (And True (And True (And False let123))))))))
  let let316 := (And let79 (And let122 (And let76 let269)))
  let let317 := (And let314 (And let54 (And xx5f0 (And let124 (And let207 (And let206 (And let204 (And let203 let316))))))))
  let let318 := (And (And (And (And (And (And (And (And (And (And let314 let54) let216) let207) let206) let204) let203) let79) let122) let76) let269)
  let let319 := (Not let60)
  let let320 := (Not let319)
  let let321 := (smtIte False let96 let77 Rat)
  let let322 := (binrel% LT.lt let86 let5)
  let let323 := (Or False let140)
  let let324 := (Or let205 let99)
  let let325 := (Or (Or let205 let98) let97)
  let let326 := (smtIte let98 let96 let75 Rat)
  let let327 := (smtIte let97 let62 let326 Rat)
  let let328 := (Eq xx5f6 let327)
  let let329 := (And let328 (And let149 (And let135 let150)))
  let let330 := (smtIte let205 let96 let77 Rat)
  let let331 := (Eq xx5f3 let330)
  let let332 := (And let266 (And let54 (And xx5f0 (And let124 (And let325 (And let331 let329))))))
  let let333 := (And (And (And (And (And (And (And let266 let54) let216) let325) let331) let328) let269) let150)
  let let334 := (And let208 (And let54 (And let125 (And let124 (And True (And True (And True (And False let200))))))))
  let let335 := (Eq xx5f12 let92)
  let let336 := (And let335 (And let54 (And let125 let152)))
  let let337 := (And let335 (And let54 (And let125 let234)))
  let let338 := (And (And (And (And (And (And (And let335 let54) let210) let233) let236) let122) let76) let150)
  let let339 := (Eq xx5f12 let61)
  let let340 := (And let339 (And let54 (And let125 let265)))
  let let341 := (binrel% HAdd.hAdd let75 let297)
  let let342 := (smtIte False let62 let77 Rat)
  let let343 := (smtIte let100 let62 let77 Rat)
  let let344 := (Eq xx5f3 let343)
  let let345 := (And let339 (And let54 (And let125 (And let124 (And let102 (And let344 let329))))))
  let let346 := (And (And (And (And (And (And (And let339 let54) let210) let102) let344) let328) let269) let150)
  let let347 := (And let81 (And let54 (And let125 (And let124 (And let207 (And let206 (And let204 (And let202 let316))))))))
  let let348 := (And (And (And (And (And (And (And (And (And (And let81 let54) let210) let207) let206) let204) let202) let79) let122) let76) let269)
  let let349 := (Or let348 (Or let346 (Or let338 (Or let211 (Or let237 (Or let333 (Or let318 (Or let217 let284))))))))
  let let350 := (Or (Or (Or (Or (Or (Or (Or (Or let348 let346) let338) let211) let237) let333) let318) let217) let284)
  let let351 := (binrel% LE.le let16 let252)
  let let352 := (binrel% GE.ge xx5f9 let62)
  let let353 := (Or True let174)
  let let354 := (binrel% GT.gt let157 let5)
  let let355 := (Not let352)
  let let356 := (binrel% LT.lt xx5f9 let62)
  let let357 := (binrel% GE.ge xx5f10 let5)
  let let358 := (binrel% GE.ge xx5f10 let62)
  let let359 := (binrel% HMul.hMul let7 xx5f10)
  let let360 := (binrel% GE.ge let359 let7)
  let let361 := (binrel% LE.le xx5f10 let61)
  let let362 := (Or let124 let125)
  let let363 := (And let362 let3)
  let let364 := (Or let133 let304)
  let let365 := (Not let226)
  let let366 := (Eq xx5f10 let63)
  let let367 := (Not let356)
  let let368 := (And let361 (And let358 (And let125 (And let124 (And let367 (And let366 (And let365 (And let350 (And let364 let363)))))))))
  let let369 := (And (And (And (And (And (And (And (And (And let361 let358) let210) let367) let366) let365) let350) let364) let362) let3)
  let let370 := (Eq xx5f1 False)
  let let371 := (Not let285)
  let let372 := (Not let11)
  let let373 := (Not let20)
  let let374 := (Not let38)
  let let375 := (Or let256 False)
  let let376 := (binrel% HAdd.hAdd let161 (binrel% HAdd.hAdd let253 (binrel% HAdd.hAdd let213 let255)))
  let let377 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let159 (binrel% HAdd.hAdd let263 let182)))
  let let378 := (binrel% LE.le let377 let376)
  let let379 := (binrel% LE.le let182 let255)
  let let380 := (And let147 let311)
  let let381 := (binrel% LE.le let263 let213)
  let let382 := (And let147 let156)
  let let383 := (binrel% LE.le let159 let253)
  let let384 := (And let354 let351)
  let let385 := (binrel% LE.le let90 let161)
  let let386 := (And let322 let34)
  let let387 := (Or let104 let285)
  let let388 := (And let66 (And let64 (And let60 (And let59 (And let387 let3)))))
  let let389 := (Eq let67 let388)
  let let390 := (Eq let3 let3)
  let let391 := (Eq And And)
  let let392 := (Eq let59 let59)
  let let393 := (Eq let60 let60)
  let let394 := (Eq let64 let64)
  let let395 := (Eq let5 let5)
  let let396 := (Eq let66 let66)
  let let397 := (Eq let7 let7)
  let let398 := (And let360 (And let357 (And let125 (And let124 (And let60 (And let366 (And let59 (And let180 (And let133 let363)))))))))
  let let399 := (And let195 let148)
  let let400 := (smtIte let95 let75 xx5f11 Rat)
  let let401 := (Eq xx5f6 let400)
  let let402 := (smtIte let95 let77 let130 Rat)
  let let403 := (Eq xx5f6 let402)
  let let404 := (smtIte let95 let92 let91 Rat)
  let let405 := (Eq xx5f7 let404)
  let let406 := (And let140 let106)
  let let407 := (Or let406 let107)
  let let408 := (And let73 (And xx5f8 (And let41 (And let186 (And let292 (And let407 (And let405 (And let403 (And let401 let399)))))))))
  let let409 := (And let81 (And let54 (And let94 (And let94 (And let79 (And let78 (And let76 let399)))))))
  let let410 := (Or let409 (Or let221 let408))
  let let411 := (And let66 (And let64 (And let94 (And let94 (And let60 (And let259 (And let59 (And let410 (And let187 (And let294 let3))))))))))
  let let412 := (Eq xx5f11 xx5f11)
  let let413 := (Eq let75 let75)
  let let414 := (Eq let130 let130)
  let let415 := (Eq let77 let77)
  let let416 := (Eq let91 let91)
  let let417 := (Eq xx5f7 xx5f7)
  let let418 := (Eq let107 let107)
  let let419 := (Eq let174 let174)
  let let420 := (Eq let41 let41)
  let let421 := (Eq xx5f8 xx5f8)
  let let422 := (Eq let73 let73)
  let let423 := (Eq Or Or)
  let let424 := (Eq let76 let76)
  let let425 := (Eq let79 let79)
  let let426 := (Eq let54 let54)
  let let427 := (Eq let81 let81)
  let let428 := (Eq let2 let2)
  let let429 := (Eq let1 let1)
  let let430 := (Eq let144 let144)
  let let431 := (Eq xx5f5 xx5f5)
  let let432 := (Eq xx5f4 xx5f4)
  let let433 := (Not let104)
  let let434 := (Not let49)
  let let435 := (Not let50)
  let let436 := (binrel% HAdd.hAdd let88 let298)
  let let437 := (binrel% HAdd.hAdd let85 let87)
  let let438 := (binrel% LE.le let437 let436)
  let let439 := (binrel% LE.le let87 let298)
  let let440 := (And let322 let160)
  let let441 := (binrel% LE.le let85 let88)
  let let442 := (And let162 let264)
fun lean_h0 : (Eq let84 let67) => -- PREPROCESS
fun lean_r1 : (Eq let85 xx5f6) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let87 let10) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let88 let75) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let90 let89) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let93 let91) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let95 False) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq let102 let101) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let103 let82) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let57 let104) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq let105 let36) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let106 let94) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let108 let107) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let115 let114) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let116 let91) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let118 let37) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq let127 let126) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let128 let70) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let131 let130) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let132 let69) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let134 let133) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq let135 let119) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq let136 xx5f11) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let137 let129) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let139 False) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let140 False) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq let141 let74) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let146 let145) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let147 True) => -- EVALUATE
fun lean_r29 : (Eq let148 let2) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq let149 let120) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let155 False) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let156 let11) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let159 let158) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let160 let50) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let161 let27) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let162 True) => -- EVALUATE
fun lean_r37 : (Eq let181 let180) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq let184 let62) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let186 let174) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let187 True) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let189 let41) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq let194 let190) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let195 let1) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let199 let198) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let211 let209) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let212 let77) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let213 let62) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let214 let141) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let217 let215) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq let219 let218) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let220 let130) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let221 False) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let222 let19) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let207 True) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let223 False) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq let226 let225) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let227 let75) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq let224 let59) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let228 let83) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let231 let230) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let232 let34) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let237 let235) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let240 let238) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let241 let125) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq let94 True) => -- THEORY_REWRITE_BOOL
fun lean_r66 : (Eq let250 let249) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq let251 let41) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let253 let239) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let254 False) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let255 let157) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let257 let256) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let258 let37) => -- THEORY_REWRITE_ARITH
fun lean_r73 : let260 => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let202 let262) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let263 let183) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let264 let49) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let267 False) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq let97 False) => -- THEORY_REWRITE_ARITH
fun lean_r79 : let268 => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let284 let283) => -- THEORY_REWRITE_BOOL
fun lean_r81 : (Eq let113 let193) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let46 let285) => -- THEORY_REWRITE_BOOL
fun lean_r83 : (Eq let275 let286) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let287 let75) => -- THEORY_REWRITE_BOOL
fun lean_r85 : (Eq let288 let84) => -- THEORY_REWRITE_BOOL
fun lean_r86 : (Eq let290 False) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let292 let291) => -- THEORY_REWRITE_BOOL
fun lean_r88 : (Eq let242 let229) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let293 let192) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let294 let94) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq let276 let296) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let298 let297) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let299 let38) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let300 let62) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let301 False) => -- THEORY_REWRITE_BOOL
fun lean_r96 : (Eq let303 let39) => -- THEORY_REWRITE_BOOL
fun lean_r97 : (Eq let304 False) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let305 let39) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let306 let40) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let247 let307) => -- THEORY_REWRITE_BOOL
fun lean_r101 : (Eq let280 let308) => -- THEORY_REWRITE_BOOL
fun lean_r102 : (Eq let281 let309) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let310 let138) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let110 let191) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let100 False) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let311 let38) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let313 let59) => -- THEORY_REWRITE_BOOL
fun lean_r108 : (Eq let205 False) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let315 False) => -- THEORY_REWRITE_BOOL
fun lean_r110 : (Eq let318 let317) => -- THEORY_REWRITE_BOOL
fun lean_r111 : (Eq let98 False) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let320 let60) => -- THEORY_REWRITE_BOOL
fun lean_r113 : (Eq let321 let77) => -- THEORY_REWRITE_BOOL
fun lean_r114 : (Eq let322 True) => -- EVALUATE
fun lean_r115 : (Eq let323 False) => -- THEORY_REWRITE_BOOL
fun lean_r116 : (Eq let325 let324) => -- THEORY_REWRITE_BOOL
fun lean_r117 : (Eq let333 let332) => -- THEORY_REWRITE_BOOL
fun lean_r118 : (Eq let334 False) => -- THEORY_REWRITE_BOOL
fun lean_r119 : (Eq let336 False) => -- THEORY_REWRITE_BOOL
fun lean_r120 : (Eq let338 let337) => -- THEORY_REWRITE_BOOL
fun lean_r121 : (Eq let340 False) => -- THEORY_REWRITE_BOOL
fun lean_r122 : (Eq let341 let289) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let342 let77) => -- THEORY_REWRITE_BOOL
fun lean_r124 : (Eq let346 let345) => -- THEORY_REWRITE_BOOL
fun lean_r125 : (Eq let348 let347) => -- THEORY_REWRITE_BOOL
fun lean_r126 : (Eq let350 let349) => -- THEORY_REWRITE_BOOL
fun lean_r127 : (Eq let351 let20) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let352 let60) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let353 True) => -- THEORY_REWRITE_BOOL
fun lean_r130 : (Eq let354 True) => -- EVALUATE
fun lean_r131 : (Eq let356 let355) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let358 let357) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let361 let360) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let369 let368) => -- THEORY_REWRITE_BOOL
fun lean_r135 : (Eq let370 let124) => -- THEORY_REWRITE_BOOL
fun lean_a136 : let369 => by
have lean_s0 : (Or let435 (Or let434 False)) :=
  (scope (fun lean_a137 : let50 =>
    (scope (fun lean_a138 : let49 =>
      have lean_s0 : let162 := by timed trueElim lean_r36
      have lean_s1 : (Eq let49 let264) := by timed Eq.symm lean_r76
      have lean_s2 : let264 := by timed eqResolve lean_a138 lean_s1
      have lean_s3 : let442 := by timed And.intro lean_s0 lean_s2
      have lean_s4 : (Implies let442 let441) := by arithMulPos [xx5f6, let75, let61], 1
      have lean_s5 : let441 := by timed modusPonens lean_s3 lean_s4
      have lean_s6 : let322 := by timed trueElim lean_r114
      have lean_s7 : (Eq let50 let160) := by timed Eq.symm lean_r34
      have lean_s8 : let160 := by timed eqResolve lean_a137 lean_s7
      have lean_s9 : let440 := by timed And.intro lean_s6 lean_s8
      have lean_s10 : (Implies let440 let439) := by arithMulNeg [xx5f6, let77, let86], 3
      have lean_s11 : let439 := by timed modusPonens lean_s9 lean_s10
      have lean_s12 : let438 := by sumBounds [lean_s5, lean_s11]
      let lean_s13 := by timed flipCongrArg lean_r1 [HAdd.hAdd]
      have lean_s14 : (Eq let437 let300) := by timed congr lean_s13 lean_r2
      have lean_s15 : (Eq let437 let62) := by timed Eq.trans lean_s14 lean_r94
      let lean_s16 := by timed flipCongrArg lean_s15 [LE.le]
      let lean_s17 := by timed flipCongrArg lean_r3 [HAdd.hAdd]
      have lean_s18 : (Eq let436 let341) := by timed congr lean_s17 lean_r92
      have lean_s19 : (Eq let436 let289) := by timed Eq.trans lean_s18 lean_r122
      have lean_s20 : (Eq let438 let290) := by timed congr lean_s16 lean_s19
      have lean_s21 : (Eq let438 False) := by timed Eq.trans lean_s20 lean_r86
      show False from by timed eqResolve lean_s12 lean_s21
  ))))
have lean_s1 : (Not (And let50 let49)) := by liftOrNToNeg lean_s0
have lean_s2 : (Or let435 let434) := by timed flipNotAnd lean_s1 [let50, let49]
have lean_s3 : (Or let433 let49) := by timed @cnfAndPos [let56, let55, let54, let53, let52, let51, let50, let49, let48, let1, let2] 7
have lean_s4 : (Or let49 let433) := by permutateOr lean_s3, [1, 0], (- 1)
have lean_s5 : let391 := by timed rfl
let lean_s6 := by timed congr lean_s5 lean_r133
let lean_s7 := by timed congr lean_s5 lean_r132
have lean_s8 : (Eq let125 let125) := by timed rfl
let lean_s9 := by timed congr lean_s5 lean_s8
have lean_s10 : (Eq let124 let124) := by timed rfl
let lean_s11 := by timed congr lean_s5 lean_s10
have lean_s12 : (Eq let355 let319) := by timed flipCongrArg lean_r128 [Not]
have lean_s13 : (Eq let356 let319) := by timed Eq.trans lean_r131 lean_s12
have lean_s14 : (Eq let367 let320) := by timed flipCongrArg lean_s13 [Not]
have lean_s15 : (Eq let367 let60) := by timed Eq.trans lean_s14 lean_r112
let lean_s16 := by timed congr lean_s5 lean_s15
have lean_s17 : (Eq let366 let366) := by timed rfl
let lean_s18 := by timed congr lean_s5 lean_s17
have lean_s19 : (Eq let225 let312) := by timed flipCongrArg lean_r58 [Not]
have lean_s20 : (Eq let226 let312) := by timed Eq.trans lean_r56 lean_s19
have lean_s21 : (Eq let365 let313) := by timed flipCongrArg lean_s20 [Not]
have lean_s22 : (Eq let365 let59) := by timed Eq.trans lean_s21 lean_r107
let lean_s23 := by timed congr lean_s5 lean_s22
have lean_s24 : let423 := by timed rfl
have lean_s25 : let391 := by timed rfl
have lean_s26 : let427 := by timed rfl
let lean_s27 := by timed congr lean_s25 lean_s26
have lean_s28 : let426 := by timed rfl
let lean_s29 := by timed congr lean_s25 lean_s28
let lean_s30 := by timed congr lean_s25 lean_s8
let lean_s31 := by timed congr lean_s25 lean_s10
let lean_s32 := by timed congr lean_s25 lean_r54
have lean_s33 : (Eq let206 let94) := by timed flipCongrArg lean_r108 [Not]
have lean_s34 : (Eq let206 True) := by timed Eq.trans lean_s33 lean_r65
let lean_s35 := by timed congr lean_s25 lean_s34
have lean_s36 : (Eq let204 let94) := by timed flipCongrArg lean_r105 [Not]
have lean_s37 : (Eq let204 True) := by timed Eq.trans lean_s36 lean_r65
let lean_s38 := by timed congr lean_s25 lean_s37
let lean_s39 := by timed flipCongrArg lean_r81 [HAdd.hAdd]
have lean_s40 : (Eq let86 let86) := by timed rfl
let lean_s41 := by timed flipCongrArg lean_s40 [HMul.hMul]
have lean_s42 : (Eq let111 let293) := by timed congr lean_s41 lean_r104
have lean_s43 : (Eq let111 let192) := by timed Eq.trans lean_s42 lean_r89
have lean_s44 : (Eq let114 let194) := by timed congr lean_s39 lean_s43
have lean_s45 : (Eq let114 let190) := by timed Eq.trans lean_s44 lean_r42
have lean_s46 : (Eq let115 let190) := by timed Eq.trans lean_r13 lean_s45
let lean_s47 := by timed flipCongrArg lean_s46 [HAdd.hAdd]
have lean_s48 : (Eq let96 let96) := by timed rfl
have lean_s49 : (Eq let201 let310) := by timed congr lean_s47 lean_s48
have lean_s50 : (Eq let201 let138) := by timed Eq.trans lean_s49 lean_r103
let lean_s51 := by timed flipCongrArg lean_s50 [GE.ge]
have lean_s52 : (Eq let62 let62) := by timed rfl
have lean_s53 : (Eq let261 let139) := by timed congr lean_s51 lean_s52
have lean_s54 : (Eq let261 False) := by timed Eq.trans lean_s53 lean_r24
have lean_s55 : (Eq let262 let94) := by timed flipCongrArg lean_s54 [Not]
have lean_s56 : (Eq let262 True) := by timed Eq.trans lean_s55 lean_r65
have lean_s57 : (Eq let202 True) := by timed Eq.trans lean_r74 lean_s56
let lean_s58 := by timed congr lean_s25 lean_s57
have lean_s59 : let425 := by timed rfl
let lean_s60 := by timed congr lean_s25 lean_s59
have lean_s61 : (Eq let122 let122) := by timed rfl
let lean_s62 := by timed congr lean_s25 lean_s61
have lean_s63 : let424 := by timed rfl
let lean_s64 := by timed congr lean_s25 lean_s63
let lean_s65 := by timed congr lean_s25 lean_r30
let lean_s66 := by timed congr lean_s65 lean_r21
let lean_s67 := by timed congr lean_s64 lean_s66
let lean_s68 := by timed congr lean_s62 lean_s67
let lean_s69 := by timed congr lean_s60 lean_s68
let lean_s70 := by timed congr lean_s58 lean_s69
let lean_s71 := by timed congr lean_s38 lean_s70
let lean_s72 := by timed congr lean_s35 lean_s71
let lean_s73 := by timed congr lean_s32 lean_s72
let lean_s74 := by timed congr lean_s31 lean_s73
let lean_s75 := by timed congr lean_s30 lean_s74
let lean_s76 := by timed congr lean_s29 lean_s75
have lean_s77 : (Eq let347 let127) := by timed congr lean_s27 lean_s76
have lean_s78 : (Eq let347 let126) := by timed Eq.trans lean_s77 lean_r16
have lean_s79 : (Eq let348 let126) := by timed Eq.trans lean_r125 lean_s78
let lean_s80 := by timed congr lean_s24 lean_s79
have lean_s81 : let391 := by timed rfl
have lean_s82 : (Eq let339 let339) := by timed rfl
let lean_s83 := by timed congr lean_s81 lean_s82
let lean_s84 := by timed congr lean_s81 lean_s28
let lean_s85 := by timed congr lean_s81 lean_s8
let lean_s86 := by timed congr lean_s81 lean_s10
have lean_s87 : let423 := by timed rfl
let lean_s88 := by timed congr lean_s87 lean_r105
let lean_s89 := by timed congr lean_s87 lean_r111
let lean_s90 := by timed congr lean_s89 lean_r78
have lean_s91 : (Eq let101 let323) := by timed congr lean_s88 lean_s90
have lean_s92 : (Eq let101 False) := by timed Eq.trans lean_s91 lean_r115
have lean_s93 : (Eq let102 False) := by timed Eq.trans lean_r7 lean_s92
let lean_s94 := by timed congr lean_s81 lean_s93
have lean_s95 : (Eq xx5f3 xx5f3) := by timed rfl
let lean_s96 := by timed flipCongrArg lean_s95 [Eq]
have lean_s97 : let415 := by timed rfl
have lean_s98 : (Eq let343 let342) := by timed congrIte lean_r105 lean_s52 lean_s97
have lean_s99 : (Eq let343 let77) := by timed Eq.trans lean_s98 lean_r123
have lean_s100 : (Eq let344 let122) := by timed congr lean_s96 lean_s99
let lean_s101 := by timed congr lean_s81 lean_s100
have lean_s102 : let187 := by timed rfl
let lean_s103 := by timed flipCongrArg lean_s102 [Eq]
have lean_s104 : let413 := by timed rfl
have lean_s105 : (Eq let326 let287) := by timed congrIte lean_r111 lean_s48 lean_s104
have lean_s106 : (Eq let326 let75) := by timed Eq.trans lean_s105 lean_r84
have lean_s107 : (Eq let327 let227) := by timed congrIte lean_r78 lean_s52 lean_s106
have lean_s108 : (Eq let327 let75) := by timed Eq.trans lean_s107 lean_r57
have lean_s109 : (Eq let328 let76) := by timed congr lean_s103 lean_s108
let lean_s110 := by timed congr lean_s81 lean_s109
let lean_s111 := by timed congr lean_s81 lean_r30
let lean_s112 := by timed congr lean_s81 lean_r21
have lean_s113 : (Eq let150 let150) := by timed rfl
let lean_s114 := by timed congr lean_s112 lean_s113
let lean_s115 := by timed congr lean_s111 lean_s114
let lean_s116 := by timed congr lean_s110 lean_s115
let lean_s117 := by timed congr lean_s101 lean_s116
let lean_s118 := by timed congr lean_s94 lean_s117
let lean_s119 := by timed congr lean_s86 lean_s118
let lean_s120 := by timed congr lean_s85 lean_s119
let lean_s121 := by timed congr lean_s84 lean_s120
have lean_s122 : (Eq let345 let340) := by timed congr lean_s83 lean_s121
have lean_s123 : (Eq let345 False) := by timed Eq.trans lean_s122 lean_r121
have lean_s124 : (Eq let346 False) := by timed Eq.trans lean_r124 lean_s123
let lean_s125 := by timed congr lean_s24 lean_s124
have lean_s126 : let391 := by timed rfl
have lean_s127 : (Eq let335 let335) := by timed rfl
let lean_s128 := by timed congr lean_s126 lean_s127
let lean_s129 := by timed congr lean_s126 lean_s28
let lean_s130 := by timed congr lean_s126 lean_s8
let lean_s131 := by timed congr lean_s126 lean_s10
let lean_s132 := by timed flipCongrArg lean_r108 [Or]
have lean_s133 : (Eq let233 let140) := by timed congr lean_s132 lean_r105
have lean_s134 : (Eq let233 False) := by timed Eq.trans lean_s133 lean_r25
let lean_s135 := by timed congr lean_s126 lean_s134
have lean_s136 : let429 := by timed rfl
let lean_s137 := by timed congr lean_s126 lean_s136
have lean_s138 : let431 := by timed rfl
let lean_s139 := by timed congr lean_s126 lean_s138
let lean_s140 := by timed congr lean_s126 lean_s61
let lean_s141 := by timed congr lean_s126 lean_s63
let lean_s142 := by timed congr lean_s141 lean_s113
let lean_s143 := by timed congr lean_s140 lean_s142
let lean_s144 := by timed congr lean_s139 lean_s143
let lean_s145 := by timed congr lean_s137 lean_s144
let lean_s146 := by timed congr lean_s135 lean_s145
let lean_s147 := by timed congr lean_s131 lean_s146
let lean_s148 := by timed congr lean_s130 lean_s147
let lean_s149 := by timed congr lean_s129 lean_s148
have lean_s150 : (Eq let337 let336) := by timed congr lean_s128 lean_s149
have lean_s151 : (Eq let337 False) := by timed Eq.trans lean_s150 lean_r119
have lean_s152 : (Eq let338 False) := by timed Eq.trans lean_r120 lean_s151
let lean_s153 := by timed congr lean_s24 lean_s152
have lean_s154 : let391 := by timed rfl
have lean_s155 : (Eq let208 let208) := by timed rfl
let lean_s156 := by timed congr lean_s154 lean_s155
let lean_s157 := by timed congr lean_s154 lean_s28
let lean_s158 := by timed congr lean_s154 lean_s8
let lean_s159 := by timed congr lean_s154 lean_s10
let lean_s160 := by timed congr lean_s154 lean_r54
let lean_s161 := by timed congr lean_s154 lean_s34
let lean_s162 := by timed congr lean_s154 lean_s37
have lean_s163 : (Eq let203 let301) := by timed flipCongrArg lean_s57 [Not]
have lean_s164 : (Eq let203 False) := by timed Eq.trans lean_s163 lean_r95
let lean_s165 := by timed congr lean_s154 lean_s164
have lean_s166 : let432 := by timed rfl
let lean_s167 := by timed congr lean_s154 lean_s166
have lean_s168 : let428 := by timed rfl
let lean_s169 := by timed congr lean_s154 lean_s168
let lean_s170 := by timed congr lean_s154 lean_s59
let lean_s171 := by timed congr lean_s154 lean_s61
let lean_s172 := by timed congr lean_s171 lean_s63
let lean_s173 := by timed congr lean_s170 lean_s172
let lean_s174 := by timed congr lean_s169 lean_s173
let lean_s175 := by timed congr lean_s167 lean_s174
let lean_s176 := by timed congr lean_s165 lean_s175
let lean_s177 := by timed congr lean_s162 lean_s176
let lean_s178 := by timed congr lean_s161 lean_s177
let lean_s179 := by timed congr lean_s160 lean_s178
let lean_s180 := by timed congr lean_s159 lean_s179
let lean_s181 := by timed congr lean_s158 lean_s180
let lean_s182 := by timed congr lean_s157 lean_s181
have lean_s183 : (Eq let209 let334) := by timed congr lean_s156 lean_s182
have lean_s184 : (Eq let209 False) := by timed Eq.trans lean_s183 lean_r118
have lean_s185 : (Eq let211 False) := by timed Eq.trans lean_r45 lean_s184
let lean_s186 := by timed congr lean_s24 lean_s185
have lean_s187 : let391 := by timed rfl
have lean_s188 : (Eq let154 let154) := by timed rfl
let lean_s189 := by timed congr lean_s187 lean_s188
let lean_s190 := by timed congr lean_s187 lean_s28
have lean_s191 : (Eq xx5f0 xx5f0) := by timed rfl
let lean_s192 := by timed congr lean_s187 lean_s191
let lean_s193 := by timed congr lean_s187 lean_s10
let lean_s194 := by timed congr lean_s187 lean_s134
let lean_s195 := by timed congr lean_s187 lean_s136
let lean_s196 := by timed congr lean_s187 lean_s138
let lean_s197 := by timed congr lean_s187 lean_s61
let lean_s198 := by timed congr lean_s187 lean_s63
let lean_s199 := by timed congr lean_s198 lean_s113
let lean_s200 := by timed congr lean_s197 lean_s199
let lean_s201 := by timed congr lean_s196 lean_s200
let lean_s202 := by timed congr lean_s195 lean_s201
let lean_s203 := by timed congr lean_s194 lean_s202
let lean_s204 := by timed congr lean_s193 lean_s203
let lean_s205 := by timed congr lean_s192 lean_s204
let lean_s206 := by timed congr lean_s190 lean_s205
have lean_s207 : (Eq let235 let155) := by timed congr lean_s189 lean_s206
have lean_s208 : (Eq let235 False) := by timed Eq.trans lean_s207 lean_r31
have lean_s209 : (Eq let237 False) := by timed Eq.trans lean_r62 lean_s208
let lean_s210 := by timed congr lean_s24 lean_s209
have lean_s211 : let391 := by timed rfl
have lean_s212 : (Eq let266 let266) := by timed rfl
let lean_s213 := by timed congr lean_s211 lean_s212
let lean_s214 := by timed congr lean_s211 lean_s28
let lean_s215 := by timed congr lean_s211 lean_s191
let lean_s216 := by timed congr lean_s211 lean_s10
have lean_s217 : let423 := by timed rfl
let lean_s218 := by timed congr lean_s217 lean_r108
let lean_s219 := by timed congr lean_s217 lean_r111
let lean_s220 := by timed congr lean_s219 lean_r78
have lean_s221 : (Eq let324 let323) := by timed congr lean_s218 lean_s220
have lean_s222 : (Eq let324 False) := by timed Eq.trans lean_s221 lean_r115
have lean_s223 : (Eq let325 False) := by timed Eq.trans lean_r116 lean_s222
let lean_s224 := by timed congr lean_s211 lean_s223
let lean_s225 := by timed flipCongrArg lean_s95 [Eq]
have lean_s226 : (Eq let330 let321) := by timed congrIte lean_r108 lean_s48 lean_s97
have lean_s227 : (Eq let330 let77) := by timed Eq.trans lean_s226 lean_r113
have lean_s228 : (Eq let331 let122) := by timed congr lean_s225 lean_s227
let lean_s229 := by timed congr lean_s211 lean_s228
let lean_s230 := by timed congr lean_s211 lean_s109
let lean_s231 := by timed congr lean_s211 lean_r30
let lean_s232 := by timed congr lean_s211 lean_r21
let lean_s233 := by timed congr lean_s232 lean_s113
let lean_s234 := by timed congr lean_s231 lean_s233
let lean_s235 := by timed congr lean_s230 lean_s234
let lean_s236 := by timed congr lean_s229 lean_s235
let lean_s237 := by timed congr lean_s224 lean_s236
let lean_s238 := by timed congr lean_s216 lean_s237
let lean_s239 := by timed congr lean_s215 lean_s238
let lean_s240 := by timed congr lean_s214 lean_s239
have lean_s241 : (Eq let332 let267) := by timed congr lean_s213 lean_s240
have lean_s242 : (Eq let332 False) := by timed Eq.trans lean_s241 lean_r77
have lean_s243 : (Eq let333 False) := by timed Eq.trans lean_r117 lean_s242
let lean_s244 := by timed congr lean_s24 lean_s243
have lean_s245 : let391 := by timed rfl
have lean_s246 : (Eq let314 let314) := by timed rfl
let lean_s247 := by timed congr lean_s245 lean_s246
let lean_s248 := by timed congr lean_s245 lean_s28
let lean_s249 := by timed congr lean_s245 lean_s191
let lean_s250 := by timed congr lean_s245 lean_s10
let lean_s251 := by timed congr lean_s245 lean_r54
let lean_s252 := by timed congr lean_s245 lean_s34
let lean_s253 := by timed congr lean_s245 lean_s37
let lean_s254 := by timed congr lean_s245 lean_s164
let lean_s255 := by timed congr lean_s245 lean_s59
let lean_s256 := by timed congr lean_s245 lean_s61
let lean_s257 := by timed congr lean_s245 lean_s63
let lean_s258 := by timed congr lean_s245 lean_r30
let lean_s259 := by timed congr lean_s258 lean_r21
let lean_s260 := by timed congr lean_s257 lean_s259
let lean_s261 := by timed congr lean_s256 lean_s260
let lean_s262 := by timed congr lean_s255 lean_s261
let lean_s263 := by timed congr lean_s254 lean_s262
let lean_s264 := by timed congr lean_s253 lean_s263
let lean_s265 := by timed congr lean_s252 lean_s264
let lean_s266 := by timed congr lean_s251 lean_s265
let lean_s267 := by timed congr lean_s250 lean_s266
let lean_s268 := by timed congr lean_s249 lean_s267
let lean_s269 := by timed congr lean_s248 lean_s268
have lean_s270 : (Eq let317 let315) := by timed congr lean_s247 lean_s269
have lean_s271 : (Eq let317 False) := by timed Eq.trans lean_s270 lean_r109
have lean_s272 : (Eq let318 False) := by timed Eq.trans lean_r110 lean_s271
let lean_s273 := by timed congr lean_s24 lean_s272
have lean_s274 : let391 := by timed rfl
have lean_s275 : let430 := by timed rfl
let lean_s276 := by timed congr lean_s274 lean_s275
let lean_s277 := by timed congr lean_s274 lean_s28
let lean_s278 := by timed congr lean_s274 lean_s191
let lean_s279 := by timed congr lean_s274 lean_s10
let lean_s280 := by timed congr lean_s274 lean_r54
let lean_s281 := by timed congr lean_s274 lean_s34
let lean_s282 := by timed congr lean_s274 lean_s37
let lean_s283 := by timed congr lean_s274 lean_s57
let lean_s284 := by timed congr lean_s274 lean_s136
let lean_s285 := by timed congr lean_s274 lean_s168
let lean_s286 := by timed congr lean_s274 lean_s59
let lean_s287 := by timed congr lean_s274 lean_s61
let lean_s288 := by timed congr lean_s287 lean_s63
let lean_s289 := by timed congr lean_s286 lean_s288
let lean_s290 := by timed congr lean_s285 lean_s289
let lean_s291 := by timed congr lean_s284 lean_s290
let lean_s292 := by timed congr lean_s283 lean_s291
let lean_s293 := by timed congr lean_s282 lean_s292
let lean_s294 := by timed congr lean_s281 lean_s293
let lean_s295 := by timed congr lean_s280 lean_s294
let lean_s296 := by timed congr lean_s279 lean_s295
let lean_s297 := by timed congr lean_s278 lean_s296
let lean_s298 := by timed congr lean_s277 lean_s297
have lean_s299 : (Eq let215 let146) := by timed congr lean_s276 lean_s298
have lean_s300 : (Eq let215 let145) := by timed Eq.trans lean_s299 lean_r27
have lean_s301 : (Eq let217 let145) := by timed Eq.trans lean_r49 lean_s300
let lean_s302 := by timed congr lean_s24 lean_s301
have lean_s303 : let391 := by timed rfl
have lean_s304 : let422 := by timed rfl
let lean_s305 := by timed congr lean_s303 lean_s304
have lean_s306 : let421 := by timed rfl
let lean_s307 := by timed congr lean_s303 lean_s306
have lean_s308 : (Eq let309 let188) := by timed flipCongrArg lean_r67 [Not]
have lean_s309 : (Eq let281 let188) := by timed Eq.trans lean_r102 lean_s308
have lean_s310 : (Eq let282 let189) := by timed flipCongrArg lean_s309 [Not]
have lean_s311 : (Eq let282 let41) := by timed Eq.trans lean_s310 lean_r41
let lean_s312 := by timed congr lean_s303 lean_s311
have lean_s313 : let423 := by timed rfl
let lean_s314 := by timed congr lean_s313 lean_s191
have lean_s315 : (Eq xx5f1 xx5f1) := by timed rfl
let lean_s316 := by timed congr lean_s313 lean_s315
have lean_s317 : let391 := by timed rfl
let lean_s318 := by timed flipCongrArg lean_r5 [LE.le]
have lean_s319 : let207 := by timed rfl
have lean_s320 : (Eq let246 let306) := by timed congr lean_s318 lean_s319
have lean_s321 : (Eq let246 let40) := by timed Eq.trans lean_s320 lean_r99
let lean_s322 := by timed congr lean_s317 lean_s321
let lean_s323 := by timed flipCongrArg lean_s97 [HAdd.hAdd]
have lean_s324 : (Eq let196 let220) := by timed congr lean_s323 lean_r23
have lean_s325 : (Eq let196 let130) := by timed Eq.trans lean_s324 lean_r51
let lean_s326 := by timed flipCongrArg lean_s325 [GE.ge]
have lean_s327 : (Eq let197 let305) := by timed congr lean_s326 lean_s52
have lean_s328 : (Eq let197 let39) := by timed Eq.trans lean_s327 lean_r98
have lean_s329 : (Eq let198 let302) := by timed flipCongrArg lean_s328 [Not]
have lean_s330 : (Eq let199 let302) := by timed Eq.trans lean_r44 lean_s329
have lean_s331 : (Eq let245 let303) := by timed flipCongrArg lean_s330 [Not]
have lean_s332 : (Eq let245 let39) := by timed Eq.trans lean_s331 lean_r96
let lean_s333 := by timed congr lean_s317 lean_s332
let lean_s334 := by timed flipCongrArg lean_s104 [HAdd.hAdd]
have lean_s335 : (Eq let243 let231) := by timed congr lean_s334 lean_r88
have lean_s336 : (Eq let243 let230) := by timed Eq.trans lean_s335 lean_r60
let lean_s337 := by timed flipCongrArg lean_s336 [LE.le]
have lean_s338 : (Eq let244 let299) := by timed congr lean_s337 lean_s48
have lean_s339 : (Eq let244 let38) := by timed Eq.trans lean_s338 lean_r93
let lean_s340 := by timed congr lean_s333 lean_s339
have lean_s341 : (Eq let307 let174) := by timed congr lean_s322 lean_s340
have lean_s342 : (Eq let247 let174) := by timed Eq.trans lean_r100 lean_s341
let lean_s343 := by timed congr lean_s316 lean_s342
have lean_s344 : (Eq let249 let177) := by timed congr lean_s314 lean_s343
have lean_s345 : (Eq let250 let177) := by timed Eq.trans lean_r66 lean_s344
let lean_s346 := by timed congr lean_s303 lean_s345
have lean_s347 : let423 := by timed rfl
let lean_s348 := by timed congr lean_s347 lean_s8
let lean_s349 := by timed congr lean_s347 lean_s315
let lean_s350 := by timed congr lean_s349 lean_s342
have lean_s351 : (Eq let308 let176) := by timed congr lean_s348 lean_s350
have lean_s352 : (Eq let280 let176) := by timed Eq.trans lean_r101 lean_s351
let lean_s353 := by timed congr lean_s303 lean_s352
have lean_s354 : (Eq let172 let172) := by timed rfl
let lean_s355 := by timed flipCongrArg lean_s354 [Or]
let lean_s356 := by timed flipCongrArg lean_r10 [GE.ge]
let lean_s357 := by timed flipCongrArg lean_r46 [HAdd.hAdd]
have lean_s358 : (Eq let286 let219) := by timed congr lean_s357 lean_r53
have lean_s359 : (Eq let286 let218) := by timed Eq.trans lean_s358 lean_r50
have lean_s360 : (Eq let275 let218) := by timed Eq.trans lean_r83 lean_s359
have lean_s361 : (Eq let295 let258) := by timed congr lean_s356 lean_s360
have lean_s362 : (Eq let295 let37) := by timed Eq.trans lean_s361 lean_r72
have lean_s363 : (Eq let296 let117) := by timed flipCongrArg lean_s362 [Not]
have lean_s364 : (Eq let276 let117) := by timed Eq.trans lean_r91 lean_s363
have lean_s365 : (Eq let277 let118) := by timed flipCongrArg lean_s364 [Not]
have lean_s366 : (Eq let277 let37) := by timed Eq.trans lean_s365 lean_r15
let lean_s367 := by timed flipCongrArg lean_s366 [And]
have lean_s368 : let412 := by timed rfl
let lean_s369 := by timed flipCongrArg lean_s368 [LE.le]
have lean_s370 : (Eq let274 let232) := by timed congr lean_s369 lean_s336
have lean_s371 : (Eq let274 let34) := by timed Eq.trans lean_s370 lean_r61
have lean_s372 : (Eq let278 let107) := by timed congr lean_s367 lean_s371
have lean_s373 : (Eq let279 let173) := by timed congr lean_s355 lean_s372
let lean_s374 := by timed congr lean_s303 lean_s373
have lean_s375 : let417 := by timed rfl
let lean_s376 := by timed flipCongrArg lean_s375 [Eq]
have lean_s377 : (Eq let163 let163) := by timed rfl
have lean_s378 : (Eq let272 let168) := by timed congrIte lean_s377 lean_s319 lean_r5
have lean_s379 : (Eq let273 let169) := by timed congr lean_s376 lean_s378
let lean_s380 := by timed congr lean_s303 lean_s379
let lean_s381 := by timed flipCongrArg lean_s95 [Eq]
have lean_s382 : (Eq let270 let166) := by timed congrIte lean_s377 lean_s97 lean_s325
have lean_s383 : (Eq let271 let167) := by timed congr lean_s381 lean_s382
let lean_s384 := by timed congr lean_s303 lean_s383
have lean_s385 : (Eq let165 let165) := by timed rfl
let lean_s386 := by timed congr lean_s303 lean_s385
let lean_s387 := by timed congr lean_s303 lean_r30
let lean_s388 := by timed congr lean_s387 lean_r21
let lean_s389 := by timed congr lean_s386 lean_s388
let lean_s390 := by timed congr lean_s384 lean_s389
let lean_s391 := by timed congr lean_s380 lean_s390
let lean_s392 := by timed congr lean_s374 lean_s391
let lean_s393 := by timed congr lean_s353 lean_s392
let lean_s394 := by timed congr lean_s346 lean_s393
let lean_s395 := by timed congr lean_s312 lean_s394
let lean_s396 := by timed congr lean_s307 lean_s395
have lean_s397 : (Eq let283 let178) := by timed congr lean_s305 lean_s396
have lean_s398 : (Eq let284 let178) := by timed Eq.trans lean_r80 lean_s397
let lean_s399 := by timed congr lean_s302 lean_s398
let lean_s400 := by timed congr lean_s273 lean_s399
let lean_s401 := by timed congr lean_s244 lean_s400
let lean_s402 := by timed congr lean_s210 lean_s401
let lean_s403 := by timed congr lean_s186 lean_s402
let lean_s404 := by timed congr lean_s153 lean_s403
let lean_s405 := by timed congr lean_s125 lean_s404
have lean_s406 : (Eq let349 let181) := by timed congr lean_s80 lean_s405
have lean_s407 : (Eq let349 let180) := by timed Eq.trans lean_s406 lean_r37
have lean_s408 : (Eq let350 let180) := by timed Eq.trans lean_r126 lean_s407
let lean_s409 := by timed congr lean_s5 lean_s408
have lean_s410 : (Eq let133 let133) := by timed rfl
let lean_s411 := by timed flipCongrArg lean_s410 [Or]
have lean_s412 : (Eq let364 let134) := by timed congr lean_s411 lean_r97
have lean_s413 : (Eq let364 let133) := by timed Eq.trans lean_s412 lean_r20
let lean_s414 := by timed congr lean_s5 lean_s413
have lean_s415 : (Eq let362 let362) := by timed rfl
let lean_s416 := by timed congr lean_s5 lean_s415
have lean_s417 : let390 := by timed rfl
let lean_s418 := by timed congr lean_s416 lean_s417
let lean_s419 := by timed congr lean_s414 lean_s418
let lean_s420 := by timed congr lean_s409 lean_s419
let lean_s421 := by timed congr lean_s23 lean_s420
let lean_s422 := by timed congr lean_s18 lean_s421
let lean_s423 := by timed congr lean_s16 lean_s422
let lean_s424 := by timed congr lean_s11 lean_s423
let lean_s425 := by timed congr lean_s9 lean_s424
let lean_s426 := by timed congr lean_s7 lean_s425
have lean_s427 : (Eq let368 let398) := by timed congr lean_s6 lean_s426
have lean_s428 : (Eq let369 let398) := by timed Eq.trans lean_r134 lean_s427
have lean_s429 : let391 := by timed rfl
have lean_s430 : let397 := by timed rfl
let lean_s431 := by timed flipCongrArg lean_s430 [HMul.hMul]
have lean_s432 : let398 := by timed eqResolve lean_a136 lean_s428
have lean_s433 : let124 := by andElim lean_s432, 3
have lean_s434 : (Eq let124 let370) := by timed Eq.symm lean_r135
have lean_s435 : let370 := by timed eqResolve lean_s433 lean_s434
have lean_s436 : let398 := by timed eqResolve lean_a136 lean_s428
have lean_s437 : let125 := by andElim lean_s436, 2
have lean_s438 : (Eq let125 let241) := by timed Eq.symm lean_r64
have lean_s439 : let241 := by timed eqResolve lean_s437 lean_s438
have lean_s440 : let398 := by timed eqResolve lean_a136 lean_s428
have lean_s441 : let133 := by andElim lean_s440, 8
have lean_s442 : let398 := by timed eqResolve lean_a136 lean_s428
have lean_s443 : let366 := by andElim lean_s442, 5
let lean_s444 := by timed And.intro lean_s441 lean_s443
let lean_s445 := by timed And.intro lean_s439 lean_s444
have lean_s446 : (And let370 (And let241 (And let133 let366))) := by timed And.intro lean_s435 lean_s445
have lean_s447 : let366 := by andElim lean_s446, 3
have lean_s448 : (Eq let359 let65) := by timed congr lean_s431 lean_s447
let lean_s449 := by timed flipCongrArg lean_s448 [GE.ge]
have lean_s450 : (Eq let360 let66) := by timed congr lean_s449 lean_s430
let lean_s451 := by timed congr lean_s429 lean_s450
let lean_s452 := by timed flipCongrArg lean_s447 [GE.ge]
have lean_s453 : let395 := by timed rfl
have lean_s454 : (Eq let357 let64) := by timed congr lean_s452 lean_s453
let lean_s455 := by timed congr lean_s429 lean_s454
have lean_s456 : let241 := by andElim lean_s446, 1
have lean_s457 : (Eq let125 let94) := by timed flipCongrArg lean_s456 [Not]
let lean_s458 := by timed congr lean_s429 lean_s457
have lean_s459 : let370 := by andElim lean_s446, 0
have lean_s460 : (Eq let124 let94) := by timed flipCongrArg lean_s459 [Not]
let lean_s461 := by timed congr lean_s429 lean_s460
have lean_s462 : let393 := by timed rfl
let lean_s463 := by timed congr lean_s429 lean_s462
let lean_s464 := by timed flipCongrArg lean_s447 [Eq]
have lean_s465 : let259 := by timed rfl
have lean_s466 : (Eq let366 let259) := by timed congr lean_s464 lean_s465
let lean_s467 := by timed congr lean_s429 lean_s466
have lean_s468 : let392 := by timed rfl
let lean_s469 := by timed congr lean_s429 lean_s468
have lean_s470 : let423 := by timed rfl
have lean_s471 : let391 := by timed rfl
have lean_s472 : let427 := by timed rfl
let lean_s473 := by timed congr lean_s471 lean_s472
have lean_s474 : let426 := by timed rfl
let lean_s475 := by timed congr lean_s471 lean_s474
let lean_s476 := by timed congr lean_s471 lean_s457
let lean_s477 := by timed congr lean_s471 lean_s460
have lean_s478 : let425 := by timed rfl
let lean_s479 := by timed congr lean_s471 lean_s478
have lean_s480 : let133 := by andElim lean_s446, 2
let lean_s481 := by timed flipCongrArg lean_s480 [Eq]
have lean_s482 : let415 := by timed rfl
have lean_s483 : (Eq let122 let78) := by timed congr lean_s481 lean_s482
let lean_s484 := by timed congr lean_s471 lean_s483
have lean_s485 : let424 := by timed rfl
let lean_s486 := by timed congr lean_s471 lean_s485
let lean_s487 := by timed flipCongrArg lean_s456 [Eq]
have lean_s488 : let432 := by timed rfl
have lean_s489 : (Eq let120 let195) := by timed congr lean_s487 lean_s488
let lean_s490 := by timed congr lean_s471 lean_s489
let lean_s491 := by timed flipCongrArg lean_s459 [Eq]
have lean_s492 : let431 := by timed rfl
have lean_s493 : (Eq let119 let148) := by timed congr lean_s491 lean_s492
let lean_s494 := by timed congr lean_s490 lean_s493
let lean_s495 := by timed congr lean_s486 lean_s494
let lean_s496 := by timed congr lean_s484 lean_s495
let lean_s497 := by timed congr lean_s479 lean_s496
let lean_s498 := by timed congr lean_s477 lean_s497
let lean_s499 := by timed congr lean_s476 lean_s498
let lean_s500 := by timed congr lean_s475 lean_s499
have lean_s501 : (Eq let126 let409) := by timed congr lean_s473 lean_s500
let lean_s502 := by timed congr lean_s470 lean_s501
have lean_s503 : let391 := by timed rfl
have lean_s504 : let430 := by timed rfl
let lean_s505 := by timed congr lean_s503 lean_s504
let lean_s506 := by timed congr lean_s503 lean_s474
let lean_s507 := by timed congr lean_s503 lean_s456
let lean_s508 := by timed congr lean_s503 lean_s460
have lean_s509 : let429 := by timed rfl
let lean_s510 := by timed congr lean_s503 lean_s509
have lean_s511 : let428 := by timed rfl
let lean_s512 := by timed congr lean_s503 lean_s511
let lean_s513 := by timed congr lean_s503 lean_s478
let lean_s514 := by timed congr lean_s503 lean_s483
let lean_s515 := by timed congr lean_s514 lean_s485
let lean_s516 := by timed congr lean_s513 lean_s515
let lean_s517 := by timed congr lean_s512 lean_s516
let lean_s518 := by timed congr lean_s510 lean_s517
let lean_s519 := by timed congr lean_s508 lean_s518
let lean_s520 := by timed congr lean_s507 lean_s519
let lean_s521 := by timed congr lean_s506 lean_s520
have lean_s522 : (Eq let145 let221) := by timed congr lean_s505 lean_s521
let lean_s523 := by timed congr lean_s470 lean_s522
have lean_s524 : let391 := by timed rfl
have lean_s525 : let422 := by timed rfl
let lean_s526 := by timed congr lean_s524 lean_s525
have lean_s527 : let421 := by timed rfl
let lean_s528 := by timed congr lean_s524 lean_s527
have lean_s529 : let420 := by timed rfl
let lean_s530 := by timed congr lean_s524 lean_s529
have lean_s531 : let423 := by timed rfl
let lean_s532 := by timed congr lean_s531 lean_s456
let lean_s533 := by timed congr lean_s531 lean_s459
have lean_s534 : let419 := by timed rfl
let lean_s535 := by timed congr lean_s533 lean_s534
have lean_s536 : (Eq let177 let186) := by timed congr lean_s532 lean_s535
let lean_s537 := by timed congr lean_s524 lean_s536
have lean_s538 : let423 := by timed rfl
let lean_s539 := by timed congr lean_s538 lean_s457
let lean_s540 := by timed congr lean_s538 lean_s459
let lean_s541 := by timed congr lean_s540 lean_s534
have lean_s542 : (Eq let176 let292) := by timed congr lean_s539 lean_s541
let lean_s543 := by timed congr lean_s524 lean_s542
let lean_s544 := by timed flipCongrArg lean_s456 [Or]
have lean_s545 : (Eq let171 let140) := by timed congr lean_s544 lean_s459
let lean_s546 := by timed flipCongrArg lean_s545 [And]
let lean_s547 := by timed flipCongrArg lean_s457 [Or]
have lean_s548 : (Eq let170 let106) := by timed congr lean_s547 lean_s459
have lean_s549 : (Eq let172 let406) := by timed congr lean_s546 lean_s548
let lean_s550 := by timed flipCongrArg lean_s549 [Or]
have lean_s551 : let418 := by timed rfl
have lean_s552 : (Eq let173 let407) := by timed congr lean_s550 lean_s551
let lean_s553 := by timed congr lean_s524 lean_s552
have lean_s554 : let417 := by timed rfl
let lean_s555 := by timed flipCongrArg lean_s554 [Eq]
let lean_s556 := by timed flipCongrArg lean_s457 [And]
have lean_s557 : (Eq let163 let95) := by timed congr lean_s556 lean_s459
have lean_s558 : let207 := by timed rfl
have lean_s559 : let416 := by timed rfl
have lean_s560 : (Eq let168 let404) := by timed congrIte lean_s557 lean_s558 lean_s559
have lean_s561 : (Eq let169 let405) := by timed congr lean_s555 lean_s560
let lean_s562 := by timed congr lean_s524 lean_s561
let lean_s563 := by timed flipCongrArg lean_s480 [Eq]
have lean_s564 : let414 := by timed rfl
have lean_s565 : (Eq let166 let402) := by timed congrIte lean_s557 lean_s482 lean_s564
have lean_s566 : (Eq let167 let403) := by timed congr lean_s563 lean_s565
let lean_s567 := by timed congr lean_s524 lean_s566
have lean_s568 : let187 := by timed rfl
let lean_s569 := by timed flipCongrArg lean_s568 [Eq]
have lean_s570 : let413 := by timed rfl
have lean_s571 : let412 := by timed rfl
have lean_s572 : (Eq let164 let400) := by timed congrIte lean_s557 lean_s570 lean_s571
have lean_s573 : (Eq let165 let401) := by timed congr lean_s569 lean_s572
let lean_s574 := by timed congr lean_s524 lean_s573
let lean_s575 := by timed congr lean_s524 lean_s489
let lean_s576 := by timed congr lean_s575 lean_s493
let lean_s577 := by timed congr lean_s574 lean_s576
let lean_s578 := by timed congr lean_s567 lean_s577
let lean_s579 := by timed congr lean_s562 lean_s578
let lean_s580 := by timed congr lean_s553 lean_s579
let lean_s581 := by timed congr lean_s543 lean_s580
let lean_s582 := by timed congr lean_s537 lean_s581
let lean_s583 := by timed congr lean_s530 lean_s582
let lean_s584 := by timed congr lean_s528 lean_s583
have lean_s585 : (Eq let178 let408) := by timed congr lean_s526 lean_s584
let lean_s586 := by timed congr lean_s523 lean_s585
have lean_s587 : (Eq let180 let410) := by timed congr lean_s502 lean_s586
let lean_s588 := by timed congr lean_s429 lean_s587
let lean_s589 := by timed flipCongrArg lean_s480 [Eq]
have lean_s590 : (Eq let133 let187) := by timed congr lean_s589 lean_s568
let lean_s591 := by timed congr lean_s429 lean_s590
let lean_s592 := by timed flipCongrArg lean_s460 [Or]
have lean_s593 : (Eq let362 let294) := by timed congr lean_s592 lean_s457
let lean_s594 := by timed congr lean_s429 lean_s593
have lean_s595 : let390 := by timed rfl
let lean_s596 := by timed congr lean_s594 lean_s595
let lean_s597 := by timed congr lean_s591 lean_s596
let lean_s598 := by timed congr lean_s588 lean_s597
let lean_s599 := by timed congr lean_s469 lean_s598
let lean_s600 := by timed congr lean_s467 lean_s599
let lean_s601 := by timed congr lean_s463 lean_s600
let lean_s602 := by timed congr lean_s461 lean_s601
let lean_s603 := by timed congr lean_s458 lean_s602
let lean_s604 := by timed congr lean_s455 lean_s603
have lean_s605 : (Eq let398 let411) := by timed congr lean_s451 lean_s604
have lean_s606 : let391 := by timed rfl
have lean_s607 : let396 := by timed rfl
let lean_s608 := by timed congr lean_s606 lean_s607
have lean_s609 : let394 := by timed rfl
let lean_s610 := by timed congr lean_s606 lean_s609
let lean_s611 := by timed congr lean_s606 lean_r65
let lean_s612 := by timed congr lean_s606 lean_r65
have lean_s613 : let393 := by timed rfl
let lean_s614 := by timed congr lean_s606 lean_s613
let lean_s615 := by timed congr lean_s606 lean_r73
have lean_s616 : let392 := by timed rfl
let lean_s617 := by timed congr lean_s606 lean_s616
have lean_s618 : let423 := by timed rfl
have lean_s619 : let391 := by timed rfl
let lean_s620 := by timed congr lean_s619 lean_s26
let lean_s621 := by timed congr lean_s619 lean_s28
let lean_s622 := by timed congr lean_s619 lean_r65
let lean_s623 := by timed congr lean_s619 lean_r65
let lean_s624 := by timed congr lean_s619 lean_s59
have lean_s625 : (Eq let78 let78) := by timed rfl
let lean_s626 := by timed congr lean_s619 lean_s625
let lean_s627 := by timed congr lean_s619 lean_s63
let lean_s628 := by timed congr lean_s619 lean_r43
let lean_s629 := by timed congr lean_s628 lean_r29
let lean_s630 := by timed congr lean_s627 lean_s629
let lean_s631 := by timed congr lean_s626 lean_s630
let lean_s632 := by timed congr lean_s624 lean_s631
let lean_s633 := by timed congr lean_s623 lean_s632
let lean_s634 := by timed congr lean_s622 lean_s633
let lean_s635 := by timed congr lean_s621 lean_s634
have lean_s636 : (Eq let409 let103) := by timed congr lean_s620 lean_s635
have lean_s637 : (Eq let409 let82) := by timed Eq.trans lean_s636 lean_r8
let lean_s638 := by timed congr lean_s618 lean_s637
let lean_s639 := by timed congr lean_s618 lean_r52
have lean_s640 : let391 := by timed rfl
let lean_s641 := by timed congr lean_s640 lean_s304
let lean_s642 := by timed congr lean_s640 lean_s306
have lean_s643 : let420 := by timed rfl
let lean_s644 := by timed congr lean_s640 lean_s643
let lean_s645 := by timed congr lean_s640 lean_r39
let lean_s646 := by timed flipCongrArg lean_r65 [Or]
have lean_s647 : let419 := by timed rfl
have lean_s648 : (Eq let291 let353) := by timed congr lean_s646 lean_s647
have lean_s649 : (Eq let291 True) := by timed Eq.trans lean_s648 lean_r129
have lean_s650 : (Eq let292 True) := by timed Eq.trans lean_r87 lean_s649
let lean_s651 := by timed congr lean_s640 lean_s650
let lean_s652 := by timed flipCongrArg lean_r25 [And]
have lean_s653 : (Eq let106 True) := by timed Eq.trans lean_r11 lean_r65
have lean_s654 : (Eq let406 let223) := by timed congr lean_s652 lean_s653
have lean_s655 : (Eq let406 False) := by timed Eq.trans lean_s654 lean_r55
let lean_s656 := by timed flipCongrArg lean_s655 [Or]
have lean_s657 : let418 := by timed rfl
have lean_s658 : (Eq let407 let108) := by timed congr lean_s656 lean_s657
have lean_s659 : (Eq let407 let107) := by timed Eq.trans lean_s658 lean_r12
let lean_s660 := by timed congr lean_s640 lean_s659
let lean_s661 := by timed flipCongrArg lean_s375 [Eq]
have lean_s662 : let416 := by timed rfl
have lean_s663 : (Eq let404 let116) := by timed congrIte lean_r6 lean_s319 lean_s662
have lean_s664 : (Eq let404 let91) := by timed Eq.trans lean_s663 lean_r14
have lean_s665 : (Eq let405 let128) := by timed congr lean_s661 lean_s664
have lean_s666 : (Eq let405 let70) := by timed Eq.trans lean_s665 lean_r17
let lean_s667 := by timed congr lean_s640 lean_s666
let lean_s668 := by timed flipCongrArg lean_s102 [Eq]
have lean_s669 : let414 := by timed rfl
have lean_s670 : (Eq let402 let131) := by timed congrIte lean_r6 lean_s97 lean_s669
have lean_s671 : (Eq let402 let130) := by timed Eq.trans lean_s670 lean_r18
have lean_s672 : (Eq let403 let132) := by timed congr lean_s668 lean_s671
have lean_s673 : (Eq let403 let69) := by timed Eq.trans lean_s672 lean_r19
let lean_s674 := by timed congr lean_s640 lean_s673
let lean_s675 := by timed flipCongrArg lean_s102 [Eq]
have lean_s676 : (Eq let400 let136) := by timed congrIte lean_r6 lean_s104 lean_s368
have lean_s677 : (Eq let400 xx5f11) := by timed Eq.trans lean_s676 lean_r22
have lean_s678 : (Eq let401 let68) := by timed congr lean_s675 lean_s677
let lean_s679 := by timed congr lean_s640 lean_s678
let lean_s680 := by timed congr lean_s640 lean_r43
let lean_s681 := by timed congr lean_s680 lean_r29
let lean_s682 := by timed congr lean_s679 lean_s681
let lean_s683 := by timed congr lean_s674 lean_s682
let lean_s684 := by timed congr lean_s667 lean_s683
let lean_s685 := by timed congr lean_s660 lean_s684
let lean_s686 := by timed congr lean_s651 lean_s685
let lean_s687 := by timed congr lean_s645 lean_s686
let lean_s688 := by timed congr lean_s644 lean_s687
let lean_s689 := by timed congr lean_s642 lean_s688
have lean_s690 : (Eq let408 let214) := by timed congr lean_s641 lean_s689
have lean_s691 : (Eq let214 let74) := by timed Eq.trans lean_r48 lean_r26
have lean_s692 : (Eq let408 let74) := by timed Eq.trans lean_s690 lean_s691
let lean_s693 := by timed congr lean_s639 lean_s692
have lean_s694 : (Eq let410 let228) := by timed congr lean_s638 lean_s693
have lean_s695 : (Eq let410 let83) := by timed Eq.trans lean_s694 lean_r59
let lean_s696 := by timed congr lean_s606 lean_s695
let lean_s697 := by timed congr lean_s606 lean_r40
have lean_s698 : (Eq let294 True) := by timed Eq.trans lean_r90 lean_r65
let lean_s699 := by timed congr lean_s606 lean_s698
let lean_s700 := by timed congr lean_s699 lean_s417
let lean_s701 := by timed congr lean_s697 lean_s700
let lean_s702 := by timed congr lean_s696 lean_s701
let lean_s703 := by timed congr lean_s617 lean_s702
let lean_s704 := by timed congr lean_s615 lean_s703
let lean_s705 := by timed congr lean_s614 lean_s704
let lean_s706 := by timed congr lean_s612 lean_s705
let lean_s707 := by timed congr lean_s611 lean_s706
let lean_s708 := by timed congr lean_s610 lean_s707
have lean_s709 : (Eq let411 let288) := by timed congr lean_s608 lean_s708
have lean_s710 : (Eq let411 let84) := by timed Eq.trans lean_s709 lean_r85
have lean_s711 : (Eq let398 let84) := by timed Eq.trans lean_s605 lean_s710
let lean_s712 := by timed Eq.trans lean_s428 lean_s711
let lean_s713 := by timed Eq.trans lean_s712 lean_h0
have lean_s714 : let391 := by timed rfl
let lean_s715 := by timed congr lean_s714 lean_s607
let lean_s716 := by timed congr lean_s714 lean_s609
let lean_s717 := by timed congr lean_s714 lean_s613
let lean_s718 := by timed congr lean_s714 lean_s616
let lean_s719 := by timed flipCongrArg lean_r9 [Or]
have lean_s720 : (Eq let58 let387) := by timed congr lean_s719 lean_r82
let lean_s721 := by timed congr lean_s714 lean_s720
let lean_s722 := by timed congr lean_s721 lean_s417
let lean_s723 := by timed congr lean_s718 lean_s722
let lean_s724 := by timed congr lean_s717 lean_s723
let lean_s725 := by timed congr lean_s716 lean_s724
have lean_s726 : let389 := by timed congr lean_s715 lean_s725
have lean_s727 : let391 := by timed rfl
have lean_s728 : let397 := by timed rfl
let lean_s729 := by timed flipCongrArg lean_s728 [HMul.hMul]
have lean_s730 : let259 := by timed rfl
let lean_s731 := by timed flipCongrArg lean_s730 [Eq]
have lean_s732 : let259 := by timed rfl
have lean_s733 : let268 := by timed congr lean_s731 lean_s732
let lean_s734 := by timed Eq.trans lean_r79 lean_s733
have lean_s735 : let260 := by timed Eq.trans lean_s734 lean_r73
have lean_s736 : let259 := by timed trueElim lean_s735
have lean_s737 : (Eq let65 let65) := by timed congr lean_s729 lean_s736
let lean_s738 := by timed flipCongrArg lean_s737 [GE.ge]
have lean_s739 : let396 := by timed congr lean_s738 lean_s728
let lean_s740 := by timed congr lean_s727 lean_s739
let lean_s741 := by timed flipCongrArg lean_s736 [GE.ge]
have lean_s742 : let395 := by timed rfl
have lean_s743 : let394 := by timed congr lean_s741 lean_s742
let lean_s744 := by timed congr lean_s727 lean_s743
have lean_s745 : let393 := by timed rfl
let lean_s746 := by timed congr lean_s727 lean_s745
have lean_s747 : let392 := by timed rfl
let lean_s748 := by timed congr lean_s727 lean_s747
have lean_s749 : (Eq let387 let387) := by timed rfl
let lean_s750 := by timed congr lean_s727 lean_s749
have lean_s751 : let390 := by timed rfl
let lean_s752 := by timed congr lean_s750 lean_s751
let lean_s753 := by timed congr lean_s748 lean_s752
let lean_s754 := by timed congr lean_s746 lean_s753
let lean_s755 := by timed congr lean_s744 lean_s754
have lean_s756 : (Eq let388 let388) := by timed congr lean_s740 lean_s755
have lean_s757 : let389 := by timed Eq.trans lean_s726 lean_s756
have lean_s758 : (Eq let369 let388) := by timed Eq.trans lean_s713 lean_s757
have lean_s759 : let388 := by timed eqResolve lean_a136 lean_s758
have lean_s760 : let387 := by andElim lean_s759, 4
have lean_s761 : (Or let374 (Or let372 (Or let373 let375))) :=
  (scope (fun lean_a139 : let38 =>
    (scope (fun lean_a140 : let11 =>
      (scope (fun lean_a141 : let20 =>
        (scope (fun lean_a142 : let34 =>
          have lean_s761 : let375 :=
            (scope (fun lean_a143 : let34 =>
              have lean_s761 : let322 := by timed trueElim lean_r114
              have lean_s762 : let386 := by timed And.intro lean_s761 lean_a143
              have lean_s763 : (Implies let386 let385) := by arithMulNeg [let33, let28, let86], 3
              have lean_s764 : let385 := by timed modusPonens lean_s762 lean_s763
              have lean_s765 : let354 := by timed trueElim lean_r130
              have lean_s766 : (Eq let20 let351) := by timed Eq.symm lean_r127
              have lean_s767 : let351 := by timed eqResolve lean_a141 lean_s766
              have lean_s768 : let384 := by timed And.intro lean_s765 lean_s767
              have lean_s769 : (Implies let384 let383) := by arithMulPos [let16, let252, let157], 1
              have lean_s770 : let383 := by timed modusPonens lean_s768 lean_s769
              have lean_s771 : let147 := by timed trueElim lean_r28
              have lean_s772 : (Eq let11 let156) := by timed Eq.symm lean_r32
              have lean_s773 : let156 := by timed eqResolve lean_a140 lean_s772
              have lean_s774 : let382 := by timed And.intro lean_s771 lean_s773
              have lean_s775 : (Implies let382 let381) := by arithMulPos [let8, let62, let30], 1
              have lean_s776 : let381 := by timed modusPonens lean_s774 lean_s775
              have lean_s777 : (Eq let38 let311) := by timed Eq.symm lean_r106
              have lean_s778 : let311 := by timed eqResolve lean_a139 lean_s777
              have lean_s779 : let380 := by timed And.intro lean_s771 lean_s778
              have lean_s780 : (Implies let380 let379) := by arithMulPos [xx5f2, let112, let30], 1
              have lean_s781 : let379 := by timed modusPonens lean_s779 lean_s780
              have lean_s782 : let378 := by sumBounds [lean_s764, lean_s770, lean_s776, lean_s781]
              have lean_s783 : (Eq let182 let182) := by timed rfl
              let lean_s784 := by timed congrHAdd lean_r75 lean_s783
              let lean_s785 := by timed congrHAdd lean_r33 lean_s784
              have lean_s786 : (Eq let377 let184) := by timed congrHAdd lean_r4 lean_s785
              have lean_s787 : (Eq let377 let62) := by timed Eq.trans lean_s786 lean_r38
              let lean_s788 := by timed flipCongrArg lean_s787 [LE.le]
              let lean_s789 := by timed congrHAdd lean_r47 lean_r70
              let lean_s790 := by timed congrHAdd lean_r68 lean_s789
              have lean_s791 : (Eq let376 let240) := by timed congrHAdd lean_r35 lean_s790
              have lean_s792 : (Eq let376 let238) := by timed Eq.trans lean_s791 lean_r63
              have lean_s793 : (Eq let378 let254) := by timed congr lean_s788 lean_s792
              have lean_s794 : (Eq let378 False) := by timed Eq.trans lean_s793 lean_r69
              show False from by timed eqResolve lean_s782 lean_s794
            ))
          have lean_s762 : let256 := by liftOrNToNeg lean_s761
          have lean_s763 : (Eq let256 let257) := by timed Eq.symm lean_r71
          have lean_s764 : let257 := by timed eqResolve lean_s762 lean_s763
          have lean_s765 : let256 := by timed eqResolve lean_s764 lean_r71
          show False from by timed contradiction lean_a142 lean_s765
  ))))))))
have lean_s762 : (Not (And let38 (And let11 (And let20 let34)))) := by liftOrNToNeg lean_s761
have lean_s763 : (Or let374 (Or let372 (Or let373 let256))) := by timed flipNotAnd lean_s762 [let38, let11, let20, let34]
have lean_s764 : (Or let374 (Or let256 (Or let373 let372))) := by permutateOr lean_s763, [0, 3, 2, 1], (- 1)
have lean_s765 : (Or let371 let11) := by timed @cnfAndPos [let45, let43, xx5f8, let41, let40, let39, let38, let37, let34, let25, let24, let20, let17, let11, let9, let1, let2] 13
have lean_s766 : (Or let11 let371) := by permutateOr lean_s765, [1, 0], (- 1)
let lean_s767 := by R2 lean_s764, lean_s766, let11, [(- 1), (- 1)]
have lean_s768 : (Or let371 let20) := by timed @cnfAndPos [let45, let43, xx5f8, let41, let40, let39, let38, let37, let34, let25, let24, let20, let17, let11, let9, let1, let2] 11
have lean_s769 : (Or let20 let371) := by permutateOr lean_s768, [1, 0], (- 1)
let lean_s770 := by R2 lean_s767, lean_s769, let20, [(- 1), (- 1)]
have lean_s771 : (Or let371 let34) := by timed @cnfAndPos [let45, let43, xx5f8, let41, let40, let39, let38, let37, let34, let25, let24, let20, let17, let11, let9, let1, let2] 8
have lean_s772 : (Or let34 let371) := by permutateOr lean_s771, [1, 0], (- 1)
let lean_s773 := by R2 lean_s770, lean_s772, let34, [(- 1), (- 1)]
have lean_s774 : (Or let371 let38) := by timed @cnfAndPos [let45, let43, xx5f8, let41, let40, let39, let38, let37, let34, let25, let24, let20, let17, let11, let9, let1, let2] 6
have lean_s775 : (Or let38 let371) := by permutateOr lean_s774, [1, 0], (- 1)
have lean_s776 : (Or let371 (Or let371 (Or let371 let371))) := by R2 lean_s773, lean_s775, let38, [(- 1), (- 1)]
have lean_s777 : let371 := by factor lean_s776, 3
have lean_s778 : let104 := by R1 lean_s760, lean_s777, let285, [(- 1), 0]
have lean_s779 : let49 := by R2 lean_s4, lean_s778, let104, [(- 1), 0]
let lean_s780 := by R2 lean_s2, lean_s779, let49, [(- 1), 0]
have lean_s781 : (Or let433 let50) := by timed @cnfAndPos [let56, let55, let54, let53, let52, let51, let50, let49, let48, let1, let2] 6
have lean_s782 : (Or let50 let433) := by permutateOr lean_s781, [1, 0], (- 1)
have lean_s783 : let50 := by R2 lean_s782, lean_s778, let104, [(- 1), 0]
exact (show False from by R2 lean_s780, lean_s783, let50, [0, 0])


