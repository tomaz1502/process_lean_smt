open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5f14 : Rat}
variable {xx5f18 : Prop}
variable {xx5f0 : Prop}
variable {xx5f19 : Prop}
variable {xx5f1 : Prop}
variable {xx5f10 : Prop}
variable {xx5f3 : Prop}
variable {xx5f22 : Rat}
variable {xx5f8 : Rat}
variable {xx5f9 : Rat}
variable {xx5f16 : Prop}
variable {xx5f6 : Prop}
variable {xx5f11 : Prop}
variable {xx5f4 : Prop}
variable {xx5f8 : Rat}
variable {xx5f20 : Rat}
variable {xx5f9 : Rat}
variable {xx5f16 : Prop}
variable {xx5f6 : Prop}
variable {xx5f5 : Prop}
variable {xx5f11 : Prop}
variable {xx5f12 : Prop}
variable {xx5f5 : Prop}
variable {xx5f13 : Prop}
variable {xx5f7 : Prop}
variable {xx5f12 : Prop}
variable {xx5f15 : Prop}
variable {xx5f4 : Prop}
variable {xx5f17 : Prop}
variable {xx5f15 : Prop}
variable {xx5f2 : Prop}
variable {xx5f21 : Rat}
variable {xx5f7 : Prop}
variable {xx5f22 : Rat}
variable {xx5f3 : Prop}
variable {xx5f13 : Prop}
variable {xx5f10 : Prop}
variable {xx5f1 : Prop}
variable {xx5f0 : Prop}
variable {xx5f14 : Rat}
variable {xx5f21 : Rat}
variable {xx5f20 : Rat}
variable {xx5f18 : Prop}
variable {xx5f2 : Prop}
variable {xx5f19 : Prop}
variable {xx5f17 : Prop}

theorem th0 :
  let let1 := (Or xx5f17 xx5f2)
  let let2 := (Eq xx5f13 xx5f7)
  let let3 := (Eq xx5f12 xx5f5)
  let let4 := (Eq xx5f11 xx5f4)
  let let5 := (And let4 let3)
  let let6 := (Eq xx5f16 xx5f6)
  let let7 := (Rat.ofInt 0)
  let let8 := (Eq xx5f9 let7)
  let let9 := (Not xx5f5)
  let let10 := (Not xx5f4)
  let let11 := (Or let10 let9)
  let let12 := (Rat.ofInt 6)
  let let13 := (binrel% HAdd.hAdd let7 xx5f8)
  let let14 := (binrel% LE.le let13 let12)
  let let15 := (Not let14)
  let let16 := (Not xx5f15)
  let let17 := (Or xx5f4 let9)
  let let18 := (Or (Or let17 let16) let15)
  let let19 := (binrel% LT.lt let7 let12)
  let let20 := (Not let19)
  let let21 := (Or let17 xx5f15)
  let let22 := (Or let21 let20)
  let let23 := (Eq let7 let12)
  let let24 := (Not let23)
  let let25 := (Or let21 let24)
  let let26 := (Rat.ofInt 1)
  let let27 := (binrel% LE.le let13 let26)
  let let28 := (Not let27)
  let let29 := (Or let10 xx5f5)
  let let30 := (Or (Or let29 let16) let28)
  let let31 := (binrel% LT.lt let7 let26)
  let let32 := (Not let31)
  let let33 := (Or let29 xx5f15)
  let let34 := (Or let33 let32)
  let let35 := (Eq let7 let26)
  let let36 := (Not let35)
  let let37 := (Or let33 let36)
  let let38 := (Or xx5f4 xx5f5)
  let let39 := (Or (Or let38 let16) let28)
  let let40 := (Or let38 xx5f15)
  let let41 := (Eq xx5f22 (Rat.ofInt 10))
  let let42 := (And (And (And (And (And (And (And (And (And (And (And (And (And let41 let40) let39) let37) let34) let30) let25) let22) let18) let11) let8) let6) let5) let2)
  let let43 := (Rat.ofInt 9)
  let let44 := (Eq xx5f22 let43)
  let let45 := (And (And (And (And (And (And let44 xx5f4) xx5f5) let5) let6) let8) let2)
  let let46 := (Eq xx5f9 let13)
  let let47 := (And let10 xx5f5)
  let let48 := (Rat.ofInt 8)
  let let49 := (Eq xx5f22 let48)
  let let50 := (And (And (And (And (And (And (And let49 let47) xx5f15) let14) let46) let6) let5) let2)
  let let51 := (Rat.ofInt 7)
  let let52 := (Eq xx5f22 let51)
  let let53 := (And (And (And (And (And (And (And let52 let47) let16) let19) let5) let6) let8) let2)
  let let54 := (Eq xx5f22 let12)
  let let55 := (And (And (And (And (And (And (And (And let54 let47) let16) let23) xx5f11) xx5f12) let8) let6) let2)
  let let56 := (And xx5f4 let9)
  let let57 := (Rat.ofInt 5)
  let let58 := (Eq xx5f22 let57)
  let let59 := (And (And (And (And (And (And (And let58 let56) xx5f15) let27) let46) let6) let5) let2)
  let let60 := (Rat.ofInt 4)
  let let61 := (Eq xx5f22 let60)
  let let62 := (And (And (And (And (And (And (And let61 let56) let16) let31) let5) let6) let8) let2)
  let let63 := (Not xx5f11)
  let let64 := (Rat.ofInt 3)
  let let65 := (Eq xx5f22 let64)
  let let66 := (And (And (And (And (And (And (And (And let65 let56) let16) let35) let63) xx5f12) let8) let6) let2)
  let let67 := (And let10 let9)
  let let68 := (Rat.ofInt 2)
  let let69 := (Eq xx5f22 let68)
  let let70 := (And (And (And (And (And (And (And let69 let67) xx5f15) let27) let46) let6) let5) let2)
  let let71 := (Eq xx5f22 let26)
  let let72 := (And (And (And (And (And (And let71 let67) let16) let5) let6) let8) let2)
  let let73 := (Not xx5f12)
  let let74 := (Eq xx5f22 let7)
  let let75 := (And (And (And (And (And (And (And let74 let67) let16) xx5f11) let73) let8) let6) let2)
  let let76 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let75 let72) let70) let66) let62) let59) let55) let53) let50) let45) let42)
  let let77 := (Eq xx5f10 xx5f3)
  let let78 := (Eq xx5f19 xx5f1)
  let let79 := (Eq xx5f18 xx5f0)
  let let80 := (And let79 let78)
  let let81 := (Eq xx5f17 xx5f2)
  let let82 := (Eq xx5f14 let7)
  let let83 := (Not xx5f1)
  let let84 := (Not xx5f0)
  let let85 := (Or let84 let83)
  let let86 := (binrel% LE.le let13 let64)
  let let87 := (Not let86)
  let let88 := (Or xx5f0 let83)
  let let89 := (Or (Or let88 let16) let87)
  let let90 := (Or let88 xx5f15)
  let let91 := (binrel% LE.le let13 let68)
  let let92 := (Not let91)
  let let93 := (Or let84 xx5f1)
  let let94 := (Or (Or let93 let16) let92)
  let let95 := (binrel% LT.lt let7 let68)
  let let96 := (Not let95)
  let let97 := (Or let93 xx5f15)
  let let98 := (Or let97 let96)
  let let99 := (Eq let7 let68)
  let let100 := (Not let99)
  let let101 := (Or let97 let100)
  let let102 := (Or xx5f0 xx5f1)
  let let103 := (Or (Or let102 let16) let28)
  let let104 := (Or let102 xx5f15)
  let let105 := (Eq xx5f21 let43)
  let let106 := (And (And (And (And (And (And (And (And (And (And (And (And let105 let104) let103) let101) let98) let94) let90) let89) let85) let82) let81) let80) let77)
  let let107 := (Eq xx5f21 let48)
  let let108 := (And (And (And (And (And (And let107 xx5f0) xx5f1) let80) let81) let82) let77)
  let let109 := (Eq xx5f14 let13)
  let let110 := (And let84 xx5f1)
  let let111 := (Eq xx5f21 let51)
  let let112 := (And (And (And (And (And (And (And let111 let110) xx5f15) let86) let109) let81) let80) let77)
  let let113 := (Eq xx5f21 let12)
  let let114 := (And (And (And (And (And (And (And let113 let110) let16) xx5f18) xx5f19) let81) let82) let77)
  let let115 := (And xx5f0 let83)
  let let116 := (Eq xx5f21 let57)
  let let117 := (And (And (And (And (And (And (And let116 let115) xx5f15) let91) let109) let81) let80) let77)
  let let118 := (Eq xx5f21 let60)
  let let119 := (And (And (And (And (And (And (And let118 let115) let16) let95) let80) let81) let82) let77)
  let let120 := (Not xx5f18)
  let let121 := (Eq xx5f21 let64)
  let let122 := (And (And (And (And (And (And (And (And let121 let115) let16) let99) let120) xx5f19) let82) let81) let77)
  let let123 := (And let84 let83)
  let let124 := (Eq xx5f21 let68)
  let let125 := (And (And (And (And (And (And (And let124 let123) xx5f15) let27) let109) let81) let80) let77)
  let let126 := (Not xx5f19)
  let let127 := (Eq xx5f21 let26)
  let let128 := (And (And (And (And (And (And (And let127 let123) let16) xx5f18) let126) let82) let81) let77)
  let let129 := (Eq xx5f21 let7)
  let let130 := (And (And (And (And (And (And let129 let123) let16) let80) let81) let82) let77)
  let let131 := (Or (Or (Or (Or (Or (Or (Or (Or (Or let130 let128) let125) let122) let119) let117) let114) let112) let108) let106)
  let let132 := (Eq xx5f20 (smtIte xx5f15 let7 let26 Rat))
  let let133 := (binrel% LT.lt xx5f8 let7)
  let let134 := (Not let133)
  let let135 := (Not xx5f7)
  let let136 := (Not xx5f6)
  let let137 := (Not xx5f3)
  let let138 := (Not xx5f2)
  let let139 := (binrel% GE.ge xx5f20 let7)
  let let140 := (binrel% LE.le xx5f20 let26)
  let let141 := (And let140 (And let139 (And let84 (And let83 (And let138 (And let137 (And let10 (And let9 (And let136 (And let135 (And let134 (And let132 (And let131 (And let76 let1))))))))))))))
  let let142 := (And (And (And (And (And (And (And (And (And (And (And (And let140 let139) let123) let138) let137) let67) let136) let135) let134) let132) let131) let76) let1)
  let let143 := (binrel% GE.ge xx5f8 let7)
  let let144 := (Not let143)
  let let145 := (Int.ofNat 0)
  let let146 := (binrel% GE.ge xx5f8 let145)
  let let147 := (Or let130 (Or let128 (Or let125 (Or let122 (Or let119 (Or let117 (Or let114 (Or let112 (Or let108 let106)))))))))
  let let148 := (And let81 (And let82 let77))
  let let149 := (And let79 (And let78 let148))
  let let150 := (And let129 (And let84 (And let83 (And let16 let149))))
  let let151 := (And let81 (And let79 (And let78 let77)))
  let let152 := (And let109 let151)
  let let153 := (And let124 (And let84 (And let83 (And xx5f15 (And let27 let152)))))
  let let154 := (Eq xx5f3 xx5f10)
  let let155 := (Eq xx5f2 xx5f17)
  let let156 := (And let82 (And let155 let154))
  let let157 := (And let121 (And xx5f0 (And let83 (And let16 (And False (And let120 (And xx5f19 let156)))))))
  let let158 := (And let118 (And xx5f0 (And let83 (And let16 (And let95 let149)))))
  let let159 := (Eq xx5f8 xx5f14)
  let let160 := (Eq xx5f14 xx5f8)
  let let161 := (And let107 (And xx5f0 (And xx5f1 let149)))
  let let162 := (Or xx5f1 xx5f15)
  let let163 := (Or xx5f0 let162)
  let let164 := (And let113 (And let84 (And xx5f1 (And let16 (And xx5f18 (And xx5f19 let148))))))
  let let165 := (Or let16 let28)
  let let166 := (Or xx5f0 (Or xx5f1 let165))
  let let167 := (Not let146)
  let let168 := (Not let167)
  let let169 := (And let4 (And let3 (And let6 (And let8 let2))))
  let let170 := (And let44 (And xx5f4 (And xx5f5 let169)))
  let let171 := (binrel% GE.ge xx5f20 let145)
  let let172 := (Eq xx5f4 xx5f11)
  let let173 := (Or let10 (Or xx5f5 (Or xx5f15 let36)))
  let let174 := (Or xx5f15 True)
  let let175 := (Or let10 (Or xx5f5 let174))
  let let176 := (And let111 (And let84 (And xx5f1 (And xx5f15 (And let86 let152)))))
  let let177 := (Eq xx5f8 xx5f9)
  let let178 := (Eq xx5f9 xx5f8)
  let let179 := (Or xx5f5 let165)
  let let180 := (Or let10 let179)
  let let181 := (And let6 (And let4 (And let3 let2)))
  let let182 := (And let41 (And let40 (And let39 (And let37 (And let34 (And let30 (And let25 (And let22 (And let18 (And let11 (And let8 let181)))))))))))
  let let183 := (Neg.neg (Int.ofNat 1))
  let let184 := (binrel% HMul.hMul let183 xx5f8)
  let let185 := (binrel% GE.ge let184 let183)
  let let186 := (binrel% LE.le xx5f8 let26)
  let let187 := (Not False)
  let let188 := (Eq xx5f1 xx5f19)
  let let189 := (Eq xx5f0 xx5f18)
  let let190 := (And let155 (And let189 (And let188 let154)))
  let let191 := (binrel% GE.ge let184 (Neg.neg (Int.ofNat 3)))
  let let192 := (Not let191)
  let let193 := (Or xx5f0 (Or let83 (Or let16 let192)))
  let let194 := (Or xx5f0 (Or let83 xx5f15))
  let let195 := (binrel% GE.ge let184 (Neg.neg (Int.ofNat 2)))
  let let196 := (Not let195)
  let let197 := (Or let84 (Or xx5f1 (Or let16 let196)))
  let let198 := (Or let84 let162)
  let let199 := (And let198 (And let197 (And let194 (And let193 (And let85 (And let82 let190))))))
  let let200 := (Not let185)
  let let201 := (Or let16 let200)
  let let202 := (Or xx5f0 (Or xx5f1 let201))
  let let203 := (And let105 (And let163 (And let202 let199)))
  let let204 := (And let105 (And let163 (And let202 (And True let199))))
  let let205 := (Eq xx5f7 xx5f13)
  let let206 := (Eq xx5f5 xx5f12)
  let let207 := (Eq xx5f6 xx5f16)
  let let208 := (And let207 (And let172 (And let206 let205)))
  let let209 := (binrel% GE.ge let184 (Neg.neg (Int.ofNat 6)))
  let let210 := (Not let209)
  let let211 := (Or xx5f4 (Or let9 (Or let16 let210)))
  let let212 := (Or xx5f4 (Or let9 xx5f15))
  let let213 := (And let212 (And let211 (And let11 (And let8 let208))))
  let let214 := (Or xx5f5 let201)
  let let215 := (Or let10 let214)
  let let216 := (Or xx5f5 xx5f15)
  let let217 := (Or let10 let216)
  let let218 := (Or xx5f4 let214)
  let let219 := (Or xx5f4 let216)
  let let220 := (And let41 (And let219 (And let218 (And let217 (And let215 let213)))))
  let let221 := (And let172 (And let206 (And let207 (And let8 let205))))
  let let222 := (And let44 (And xx5f4 (And xx5f5 let221)))
  let let223 := (And let177 let208)
  let let224 := (And let49 (And let10 (And xx5f5 (And xx5f15 (And let209 let223)))))
  let let225 := (And let16 let221)
  let let226 := (And let52 (And let10 (And xx5f5 let225)))
  let let227 := (Or let226 (Or let224 (Or let222 let220)))
  let let228 := (And let9 (And xx5f15 (And let185 let223)))
  let let229 := (And let58 (And xx5f4 let228))
  let let230 := (And let9 let225)
  let let231 := (And let61 (And xx5f4 let230))
  let let232 := (And let69 (And let10 let228))
  let let233 := (And let71 (And let10 let230))
  let let234 := (And let8 (And let207 let205))
  let let235 := (And let74 (And let10 (And let9 (And let16 (And xx5f11 (And let73 let234))))))
  let let236 := (Or let235 (Or let233 (Or let232 (Or let231 (Or let229 let227)))))
  let let237 := (Or let235 (Or let233 (Or let232 (Or False (Or let231 (Or let229 (Or False let227)))))))
  let let238 := (And let46 let181)
  let let239 := (And let9 (And xx5f15 (And let27 let238)))
  let let240 := (And let69 (And let10 let239))
  let let241 := (And let82 (And let81 let77))
  let let242 := (And let127 (And let84 (And let83 (And let16 (And xx5f18 (And let126 let241))))))
  let let243 := (And let116 (And xx5f0 (And let83 (And xx5f15 (And let91 let152)))))
  let let244 := (And let8 (And let6 let2))
  let let245 := (And xx5f12 let244)
  let let246 := (And let65 (And xx5f4 (And let9 (And let16 (And let35 (And let63 let245))))))
  let let247 := (And let155 (And let82 let154))
  let let248 := (And let189 (And let188 let247))
  let let249 := (And let107 (And xx5f0 (And xx5f1 let248)))
  let let250 := (And let159 let190)
  let let251 := (And let111 (And let84 (And xx5f1 (And xx5f15 (And let191 let250)))))
  let let252 := (And let113 (And let84 (And xx5f1 (And let16 (And xx5f18 (And xx5f19 let247))))))
  let let253 := (And let116 (And xx5f0 (And let83 (And xx5f15 (And let195 let250)))))
  let let254 := (And let83 (And let16 let248))
  let let255 := (And let118 (And xx5f0 let254))
  let let256 := (Or let255 (Or let253 (Or let252 (Or let251 (Or let249 let203)))))
  let let257 := (And let124 (And let84 (And let83 (And xx5f15 (And let185 let250)))))
  let let258 := (And let127 (And let84 (And let83 (And let16 (And xx5f18 (And let126 let156))))))
  let let259 := (And let129 (And let84 let254))
  let let260 := (Or let259 (Or let258 (Or let257 let256)))
  let let261 := (Or let259 (Or let258 (Or let257 (Or False let256))))
  let let262 := (And let61 (And xx5f4 (And let9 (And let16 (And let31 let169)))))
  let let263 := (And let121 (And xx5f0 (And let83 (And let16 (And let99 (And let120 (And xx5f19 let241)))))))
  let let264 := (And let41 (And let219 (And let218 (And True (And let217 (And let215 (And True let213)))))))
  let let265 := (binrel% GE.ge (binrel% HMul.hMul let183 xx5f20) let183)
  let let266 := (And let16 (And True let221))
  let let267 := (And let52 (And let10 (And xx5f5 let266)))
  let let268 := (And let61 (And xx5f4 (And let9 let266)))
  let let269 := (Or let10 (Or xx5f5 (Or xx5f15 let32)))
  let let270 := (binrel% LE.le xx5f8 let12)
  let let271 := (Not True)
  let let272 := (Or let84 (Or xx5f1 (Or xx5f15 let100)))
  let let273 := (Or xx5f4 (Or let9 (Or let16 let15)))
  let let274 := (And let49 (And let10 (And xx5f5 (And xx5f15 (And let14 let238)))))
  let let275 := (Or xx5f4 let179)
  let let276 := (Or xx5f4 (Or let9 (Or xx5f15 let24)))
  let let277 := (Or xx5f4 (Or let9 (Or xx5f15 let20)))
  let let278 := (And let105 (And let104 (And let103 (And let101 (And let98 (And let94 (And let90 (And let89 (And let85 (And let82 let151))))))))))
  let let279 := (And let52 (And let10 (And xx5f5 (And let16 (And let19 let169)))))
  let let280 := (And xx5f12 let234)
  let let281 := (And let54 (And let10 (And xx5f5 (And let16 (And False (And xx5f11 let280))))))
  let let282 := (And let71 (And let10 (And let9 (And let16 let169))))
  let let283 := (And let54 (And let10 (And xx5f5 (And let16 (And let23 (And xx5f11 let245))))))
  let let284 := (Or let84 (Or xx5f1 (Or xx5f15 let96)))
  let let285 := (And let65 (And xx5f4 (And let9 (And let16 (And False (And let63 let280))))))
  let let286 := (And let74 (And let10 (And let9 (And let16 (And xx5f11 (And let73 let244))))))
  let let287 := (Or xx5f15 False)
  let let288 := (Or let10 (Or xx5f5 let287))
  let let289 := (And let58 (And xx5f4 let239))
  let let290 := (Or let75 (Or let72 (Or let70 (Or let66 (Or let62 (Or let59 (Or let55 (Or let53 (Or let50 (Or let45 let42))))))))))
  let let291 := (Or let84 (Or xx5f1 (Or let16 let92)))
  let let292 := (Or xx5f4 (Or let9 let287))
  let let293 := (Or xx5f4 (Or let9 let174))
  let let294 := (binrel% LE.le xx5f8 let64)
  let let295 := (Or xx5f0 (Or let83 (Or let16 let87)))
  let let296 := (And let118 (And xx5f0 (And let83 (And let16 (And True let248)))))
  let let297 := (binrel% LE.le xx5f8 let68)
  let let298 := (Or let84 (Or xx5f1 let287))
  let let299 := (Or let84 (Or xx5f1 let174))
  let let300 := (Not let260)
  let let301 := (Not let203)
  let let302 := (Not let155)
  let let303 := (And let265 (And let171 (And let84 (And let83 (And let138 (And let137 (And let10 (And let9 (And let136 (And let135 (And let146 (And let132 (And let260 (And let236 let1))))))))))))))
  let let304 := (Eq And And)
  let let305 := (Eq Or Or)
  let let306 := (Not let249)
  let let307 := (Not let251)
  let let308 := (Not let252)
  let let309 := (Not let253)
  let let310 := (Not let255)
  let let311 := (Not let257)
  let let312 := (Not let258)
  let let313 := (Not let259)
(Eq let142 let141) → (Eq let133 let144) → (Eq let143 let146) → (Eq let131 let147) → (Eq let130 let150) → (Eq let125 let153) → (Eq let157 False) → (Eq let119 let158) → (Eq let160 let159) → (Eq let108 let161) → (Eq let104 let163) → (Eq let114 let164) → (Eq let103 let166) → (Eq let168 let146) → (Eq let45 let170) → (Eq let139 let171) → (Eq let4 let172) → (Eq let37 let173) → (Eq let35 False) → (Eq let175 True) → (Eq let112 let176) → (Eq let178 let177) → (Eq let30 let180) → (Eq let42 let182) → (Eq let186 let185) → (Eq let13 xx5f8) → (Eq let187 True) → (Eq let204 let203) → (Eq let237 let236) → (Eq let70 let240) → (Eq let128 let242) → (Eq let117 let243) → (Eq let66 let246) → (Eq let81 let155) → (Eq let3 let206) → (Eq let261 let260) → (Eq let19 True) → (Eq let62 let262) → (Eq let95 True) → (Eq let122 let263) → (Eq let264 let220) → (Eq let140 let265) → (Eq let6 let207) → (Eq let99 False) → (Eq let267 let226) → (Eq let268 let231) → (Eq let34 let269) → (Eq let270 let209) → (Eq let271 False) → (Eq let23 False) → (Eq let101 let272) → (Eq let18 let273) → (Eq let31 True) → (Eq let50 let274) → (Eq let39 let275) → (Eq let78 let188) → (Eq let25 let276) → (Eq let22 let277) → (Eq let106 let278) → (Eq let53 let279) → (Eq let281 False) → (Eq let72 let282) → (Eq let55 let283) → (Eq let98 let284) → (Eq let285 False) → (Eq let75 let286) → (Eq let288 let217) → (Eq let59 let289) → (Eq let76 let290) → (Eq let94 let291) → (Eq let292 let212) → (Eq let77 let154) → (Eq let40 let219) → (Eq let79 let189) → (Eq let293 True) → (Eq let294 let191) → (Eq let89 let295) → (Eq let296 let255) → (Eq let90 let194) → (Eq let2 let205) → (Eq let297 let195) → (Eq let298 let198) → (Eq let299 True) → let142 → False :=
  let let1 := (Or xx5f17 xx5f2)
  let let2 := (Eq xx5f13 xx5f7)
  let let3 := (Eq xx5f12 xx5f5)
  let let4 := (Eq xx5f11 xx5f4)
  let let5 := (And let4 let3)
  let let6 := (Eq xx5f16 xx5f6)
  let let7 := (Rat.ofInt 0)
  let let8 := (Eq xx5f9 let7)
  let let9 := (Not xx5f5)
  let let10 := (Not xx5f4)
  let let11 := (Or let10 let9)
  let let12 := (Rat.ofInt 6)
  let let13 := (binrel% HAdd.hAdd let7 xx5f8)
  let let14 := (binrel% LE.le let13 let12)
  let let15 := (Not let14)
  let let16 := (Not xx5f15)
  let let17 := (Or xx5f4 let9)
  let let18 := (Or (Or let17 let16) let15)
  let let19 := (binrel% LT.lt let7 let12)
  let let20 := (Not let19)
  let let21 := (Or let17 xx5f15)
  let let22 := (Or let21 let20)
  let let23 := (Eq let7 let12)
  let let24 := (Not let23)
  let let25 := (Or let21 let24)
  let let26 := (Rat.ofInt 1)
  let let27 := (binrel% LE.le let13 let26)
  let let28 := (Not let27)
  let let29 := (Or let10 xx5f5)
  let let30 := (Or (Or let29 let16) let28)
  let let31 := (binrel% LT.lt let7 let26)
  let let32 := (Not let31)
  let let33 := (Or let29 xx5f15)
  let let34 := (Or let33 let32)
  let let35 := (Eq let7 let26)
  let let36 := (Not let35)
  let let37 := (Or let33 let36)
  let let38 := (Or xx5f4 xx5f5)
  let let39 := (Or (Or let38 let16) let28)
  let let40 := (Or let38 xx5f15)
  let let41 := (Eq xx5f22 (Rat.ofInt 10))
  let let42 := (And (And (And (And (And (And (And (And (And (And (And (And (And let41 let40) let39) let37) let34) let30) let25) let22) let18) let11) let8) let6) let5) let2)
  let let43 := (Rat.ofInt 9)
  let let44 := (Eq xx5f22 let43)
  let let45 := (And (And (And (And (And (And let44 xx5f4) xx5f5) let5) let6) let8) let2)
  let let46 := (Eq xx5f9 let13)
  let let47 := (And let10 xx5f5)
  let let48 := (Rat.ofInt 8)
  let let49 := (Eq xx5f22 let48)
  let let50 := (And (And (And (And (And (And (And let49 let47) xx5f15) let14) let46) let6) let5) let2)
  let let51 := (Rat.ofInt 7)
  let let52 := (Eq xx5f22 let51)
  let let53 := (And (And (And (And (And (And (And let52 let47) let16) let19) let5) let6) let8) let2)
  let let54 := (Eq xx5f22 let12)
  let let55 := (And (And (And (And (And (And (And (And let54 let47) let16) let23) xx5f11) xx5f12) let8) let6) let2)
  let let56 := (And xx5f4 let9)
  let let57 := (Rat.ofInt 5)
  let let58 := (Eq xx5f22 let57)
  let let59 := (And (And (And (And (And (And (And let58 let56) xx5f15) let27) let46) let6) let5) let2)
  let let60 := (Rat.ofInt 4)
  let let61 := (Eq xx5f22 let60)
  let let62 := (And (And (And (And (And (And (And let61 let56) let16) let31) let5) let6) let8) let2)
  let let63 := (Not xx5f11)
  let let64 := (Rat.ofInt 3)
  let let65 := (Eq xx5f22 let64)
  let let66 := (And (And (And (And (And (And (And (And let65 let56) let16) let35) let63) xx5f12) let8) let6) let2)
  let let67 := (And let10 let9)
  let let68 := (Rat.ofInt 2)
  let let69 := (Eq xx5f22 let68)
  let let70 := (And (And (And (And (And (And (And let69 let67) xx5f15) let27) let46) let6) let5) let2)
  let let71 := (Eq xx5f22 let26)
  let let72 := (And (And (And (And (And (And let71 let67) let16) let5) let6) let8) let2)
  let let73 := (Not xx5f12)
  let let74 := (Eq xx5f22 let7)
  let let75 := (And (And (And (And (And (And (And let74 let67) let16) xx5f11) let73) let8) let6) let2)
  let let76 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let75 let72) let70) let66) let62) let59) let55) let53) let50) let45) let42)
  let let77 := (Eq xx5f10 xx5f3)
  let let78 := (Eq xx5f19 xx5f1)
  let let79 := (Eq xx5f18 xx5f0)
  let let80 := (And let79 let78)
  let let81 := (Eq xx5f17 xx5f2)
  let let82 := (Eq xx5f14 let7)
  let let83 := (Not xx5f1)
  let let84 := (Not xx5f0)
  let let85 := (Or let84 let83)
  let let86 := (binrel% LE.le let13 let64)
  let let87 := (Not let86)
  let let88 := (Or xx5f0 let83)
  let let89 := (Or (Or let88 let16) let87)
  let let90 := (Or let88 xx5f15)
  let let91 := (binrel% LE.le let13 let68)
  let let92 := (Not let91)
  let let93 := (Or let84 xx5f1)
  let let94 := (Or (Or let93 let16) let92)
  let let95 := (binrel% LT.lt let7 let68)
  let let96 := (Not let95)
  let let97 := (Or let93 xx5f15)
  let let98 := (Or let97 let96)
  let let99 := (Eq let7 let68)
  let let100 := (Not let99)
  let let101 := (Or let97 let100)
  let let102 := (Or xx5f0 xx5f1)
  let let103 := (Or (Or let102 let16) let28)
  let let104 := (Or let102 xx5f15)
  let let105 := (Eq xx5f21 let43)
  let let106 := (And (And (And (And (And (And (And (And (And (And (And (And let105 let104) let103) let101) let98) let94) let90) let89) let85) let82) let81) let80) let77)
  let let107 := (Eq xx5f21 let48)
  let let108 := (And (And (And (And (And (And let107 xx5f0) xx5f1) let80) let81) let82) let77)
  let let109 := (Eq xx5f14 let13)
  let let110 := (And let84 xx5f1)
  let let111 := (Eq xx5f21 let51)
  let let112 := (And (And (And (And (And (And (And let111 let110) xx5f15) let86) let109) let81) let80) let77)
  let let113 := (Eq xx5f21 let12)
  let let114 := (And (And (And (And (And (And (And let113 let110) let16) xx5f18) xx5f19) let81) let82) let77)
  let let115 := (And xx5f0 let83)
  let let116 := (Eq xx5f21 let57)
  let let117 := (And (And (And (And (And (And (And let116 let115) xx5f15) let91) let109) let81) let80) let77)
  let let118 := (Eq xx5f21 let60)
  let let119 := (And (And (And (And (And (And (And let118 let115) let16) let95) let80) let81) let82) let77)
  let let120 := (Not xx5f18)
  let let121 := (Eq xx5f21 let64)
  let let122 := (And (And (And (And (And (And (And (And let121 let115) let16) let99) let120) xx5f19) let82) let81) let77)
  let let123 := (And let84 let83)
  let let124 := (Eq xx5f21 let68)
  let let125 := (And (And (And (And (And (And (And let124 let123) xx5f15) let27) let109) let81) let80) let77)
  let let126 := (Not xx5f19)
  let let127 := (Eq xx5f21 let26)
  let let128 := (And (And (And (And (And (And (And let127 let123) let16) xx5f18) let126) let82) let81) let77)
  let let129 := (Eq xx5f21 let7)
  let let130 := (And (And (And (And (And (And let129 let123) let16) let80) let81) let82) let77)
  let let131 := (Or (Or (Or (Or (Or (Or (Or (Or (Or let130 let128) let125) let122) let119) let117) let114) let112) let108) let106)
  let let132 := (Eq xx5f20 (smtIte xx5f15 let7 let26 Rat))
  let let133 := (binrel% LT.lt xx5f8 let7)
  let let134 := (Not let133)
  let let135 := (Not xx5f7)
  let let136 := (Not xx5f6)
  let let137 := (Not xx5f3)
  let let138 := (Not xx5f2)
  let let139 := (binrel% GE.ge xx5f20 let7)
  let let140 := (binrel% LE.le xx5f20 let26)
  let let141 := (And let140 (And let139 (And let84 (And let83 (And let138 (And let137 (And let10 (And let9 (And let136 (And let135 (And let134 (And let132 (And let131 (And let76 let1))))))))))))))
  let let142 := (And (And (And (And (And (And (And (And (And (And (And (And let140 let139) let123) let138) let137) let67) let136) let135) let134) let132) let131) let76) let1)
  let let143 := (binrel% GE.ge xx5f8 let7)
  let let144 := (Not let143)
  let let145 := (Int.ofNat 0)
  let let146 := (binrel% GE.ge xx5f8 let145)
  let let147 := (Or let130 (Or let128 (Or let125 (Or let122 (Or let119 (Or let117 (Or let114 (Or let112 (Or let108 let106)))))))))
  let let148 := (And let81 (And let82 let77))
  let let149 := (And let79 (And let78 let148))
  let let150 := (And let129 (And let84 (And let83 (And let16 let149))))
  let let151 := (And let81 (And let79 (And let78 let77)))
  let let152 := (And let109 let151)
  let let153 := (And let124 (And let84 (And let83 (And xx5f15 (And let27 let152)))))
  let let154 := (Eq xx5f3 xx5f10)
  let let155 := (Eq xx5f2 xx5f17)
  let let156 := (And let82 (And let155 let154))
  let let157 := (And let121 (And xx5f0 (And let83 (And let16 (And False (And let120 (And xx5f19 let156)))))))
  let let158 := (And let118 (And xx5f0 (And let83 (And let16 (And let95 let149)))))
  let let159 := (Eq xx5f8 xx5f14)
  let let160 := (Eq xx5f14 xx5f8)
  let let161 := (And let107 (And xx5f0 (And xx5f1 let149)))
  let let162 := (Or xx5f1 xx5f15)
  let let163 := (Or xx5f0 let162)
  let let164 := (And let113 (And let84 (And xx5f1 (And let16 (And xx5f18 (And xx5f19 let148))))))
  let let165 := (Or let16 let28)
  let let166 := (Or xx5f0 (Or xx5f1 let165))
  let let167 := (Not let146)
  let let168 := (Not let167)
  let let169 := (And let4 (And let3 (And let6 (And let8 let2))))
  let let170 := (And let44 (And xx5f4 (And xx5f5 let169)))
  let let171 := (binrel% GE.ge xx5f20 let145)
  let let172 := (Eq xx5f4 xx5f11)
  let let173 := (Or let10 (Or xx5f5 (Or xx5f15 let36)))
  let let174 := (Or xx5f15 True)
  let let175 := (Or let10 (Or xx5f5 let174))
  let let176 := (And let111 (And let84 (And xx5f1 (And xx5f15 (And let86 let152)))))
  let let177 := (Eq xx5f8 xx5f9)
  let let178 := (Eq xx5f9 xx5f8)
  let let179 := (Or xx5f5 let165)
  let let180 := (Or let10 let179)
  let let181 := (And let6 (And let4 (And let3 let2)))
  let let182 := (And let41 (And let40 (And let39 (And let37 (And let34 (And let30 (And let25 (And let22 (And let18 (And let11 (And let8 let181)))))))))))
  let let183 := (Neg.neg (Int.ofNat 1))
  let let184 := (binrel% HMul.hMul let183 xx5f8)
  let let185 := (binrel% GE.ge let184 let183)
  let let186 := (binrel% LE.le xx5f8 let26)
  let let187 := (Not False)
  let let188 := (Eq xx5f1 xx5f19)
  let let189 := (Eq xx5f0 xx5f18)
  let let190 := (And let155 (And let189 (And let188 let154)))
  let let191 := (binrel% GE.ge let184 (Neg.neg (Int.ofNat 3)))
  let let192 := (Not let191)
  let let193 := (Or xx5f0 (Or let83 (Or let16 let192)))
  let let194 := (Or xx5f0 (Or let83 xx5f15))
  let let195 := (binrel% GE.ge let184 (Neg.neg (Int.ofNat 2)))
  let let196 := (Not let195)
  let let197 := (Or let84 (Or xx5f1 (Or let16 let196)))
  let let198 := (Or let84 let162)
  let let199 := (And let198 (And let197 (And let194 (And let193 (And let85 (And let82 let190))))))
  let let200 := (Not let185)
  let let201 := (Or let16 let200)
  let let202 := (Or xx5f0 (Or xx5f1 let201))
  let let203 := (And let105 (And let163 (And let202 let199)))
  let let204 := (And let105 (And let163 (And let202 (And True let199))))
  let let205 := (Eq xx5f7 xx5f13)
  let let206 := (Eq xx5f5 xx5f12)
  let let207 := (Eq xx5f6 xx5f16)
  let let208 := (And let207 (And let172 (And let206 let205)))
  let let209 := (binrel% GE.ge let184 (Neg.neg (Int.ofNat 6)))
  let let210 := (Not let209)
  let let211 := (Or xx5f4 (Or let9 (Or let16 let210)))
  let let212 := (Or xx5f4 (Or let9 xx5f15))
  let let213 := (And let212 (And let211 (And let11 (And let8 let208))))
  let let214 := (Or xx5f5 let201)
  let let215 := (Or let10 let214)
  let let216 := (Or xx5f5 xx5f15)
  let let217 := (Or let10 let216)
  let let218 := (Or xx5f4 let214)
  let let219 := (Or xx5f4 let216)
  let let220 := (And let41 (And let219 (And let218 (And let217 (And let215 let213)))))
  let let221 := (And let172 (And let206 (And let207 (And let8 let205))))
  let let222 := (And let44 (And xx5f4 (And xx5f5 let221)))
  let let223 := (And let177 let208)
  let let224 := (And let49 (And let10 (And xx5f5 (And xx5f15 (And let209 let223)))))
  let let225 := (And let16 let221)
  let let226 := (And let52 (And let10 (And xx5f5 let225)))
  let let227 := (Or let226 (Or let224 (Or let222 let220)))
  let let228 := (And let9 (And xx5f15 (And let185 let223)))
  let let229 := (And let58 (And xx5f4 let228))
  let let230 := (And let9 let225)
  let let231 := (And let61 (And xx5f4 let230))
  let let232 := (And let69 (And let10 let228))
  let let233 := (And let71 (And let10 let230))
  let let234 := (And let8 (And let207 let205))
  let let235 := (And let74 (And let10 (And let9 (And let16 (And xx5f11 (And let73 let234))))))
  let let236 := (Or let235 (Or let233 (Or let232 (Or let231 (Or let229 let227)))))
  let let237 := (Or let235 (Or let233 (Or let232 (Or False (Or let231 (Or let229 (Or False let227)))))))
  let let238 := (And let46 let181)
  let let239 := (And let9 (And xx5f15 (And let27 let238)))
  let let240 := (And let69 (And let10 let239))
  let let241 := (And let82 (And let81 let77))
  let let242 := (And let127 (And let84 (And let83 (And let16 (And xx5f18 (And let126 let241))))))
  let let243 := (And let116 (And xx5f0 (And let83 (And xx5f15 (And let91 let152)))))
  let let244 := (And let8 (And let6 let2))
  let let245 := (And xx5f12 let244)
  let let246 := (And let65 (And xx5f4 (And let9 (And let16 (And let35 (And let63 let245))))))
  let let247 := (And let155 (And let82 let154))
  let let248 := (And let189 (And let188 let247))
  let let249 := (And let107 (And xx5f0 (And xx5f1 let248)))
  let let250 := (And let159 let190)
  let let251 := (And let111 (And let84 (And xx5f1 (And xx5f15 (And let191 let250)))))
  let let252 := (And let113 (And let84 (And xx5f1 (And let16 (And xx5f18 (And xx5f19 let247))))))
  let let253 := (And let116 (And xx5f0 (And let83 (And xx5f15 (And let195 let250)))))
  let let254 := (And let83 (And let16 let248))
  let let255 := (And let118 (And xx5f0 let254))
  let let256 := (Or let255 (Or let253 (Or let252 (Or let251 (Or let249 let203)))))
  let let257 := (And let124 (And let84 (And let83 (And xx5f15 (And let185 let250)))))
  let let258 := (And let127 (And let84 (And let83 (And let16 (And xx5f18 (And let126 let156))))))
  let let259 := (And let129 (And let84 let254))
  let let260 := (Or let259 (Or let258 (Or let257 let256)))
  let let261 := (Or let259 (Or let258 (Or let257 (Or False let256))))
  let let262 := (And let61 (And xx5f4 (And let9 (And let16 (And let31 let169)))))
  let let263 := (And let121 (And xx5f0 (And let83 (And let16 (And let99 (And let120 (And xx5f19 let241)))))))
  let let264 := (And let41 (And let219 (And let218 (And True (And let217 (And let215 (And True let213)))))))
  let let265 := (binrel% GE.ge (binrel% HMul.hMul let183 xx5f20) let183)
  let let266 := (And let16 (And True let221))
  let let267 := (And let52 (And let10 (And xx5f5 let266)))
  let let268 := (And let61 (And xx5f4 (And let9 let266)))
  let let269 := (Or let10 (Or xx5f5 (Or xx5f15 let32)))
  let let270 := (binrel% LE.le xx5f8 let12)
  let let271 := (Not True)
  let let272 := (Or let84 (Or xx5f1 (Or xx5f15 let100)))
  let let273 := (Or xx5f4 (Or let9 (Or let16 let15)))
  let let274 := (And let49 (And let10 (And xx5f5 (And xx5f15 (And let14 let238)))))
  let let275 := (Or xx5f4 let179)
  let let276 := (Or xx5f4 (Or let9 (Or xx5f15 let24)))
  let let277 := (Or xx5f4 (Or let9 (Or xx5f15 let20)))
  let let278 := (And let105 (And let104 (And let103 (And let101 (And let98 (And let94 (And let90 (And let89 (And let85 (And let82 let151))))))))))
  let let279 := (And let52 (And let10 (And xx5f5 (And let16 (And let19 let169)))))
  let let280 := (And xx5f12 let234)
  let let281 := (And let54 (And let10 (And xx5f5 (And let16 (And False (And xx5f11 let280))))))
  let let282 := (And let71 (And let10 (And let9 (And let16 let169))))
  let let283 := (And let54 (And let10 (And xx5f5 (And let16 (And let23 (And xx5f11 let245))))))
  let let284 := (Or let84 (Or xx5f1 (Or xx5f15 let96)))
  let let285 := (And let65 (And xx5f4 (And let9 (And let16 (And False (And let63 let280))))))
  let let286 := (And let74 (And let10 (And let9 (And let16 (And xx5f11 (And let73 let244))))))
  let let287 := (Or xx5f15 False)
  let let288 := (Or let10 (Or xx5f5 let287))
  let let289 := (And let58 (And xx5f4 let239))
  let let290 := (Or let75 (Or let72 (Or let70 (Or let66 (Or let62 (Or let59 (Or let55 (Or let53 (Or let50 (Or let45 let42))))))))))
  let let291 := (Or let84 (Or xx5f1 (Or let16 let92)))
  let let292 := (Or xx5f4 (Or let9 let287))
  let let293 := (Or xx5f4 (Or let9 let174))
  let let294 := (binrel% LE.le xx5f8 let64)
  let let295 := (Or xx5f0 (Or let83 (Or let16 let87)))
  let let296 := (And let118 (And xx5f0 (And let83 (And let16 (And True let248)))))
  let let297 := (binrel% LE.le xx5f8 let68)
  let let298 := (Or let84 (Or xx5f1 let287))
  let let299 := (Or let84 (Or xx5f1 let174))
  let let300 := (Not let260)
  let let301 := (Not let203)
  let let302 := (Not let155)
  let let303 := (And let265 (And let171 (And let84 (And let83 (And let138 (And let137 (And let10 (And let9 (And let136 (And let135 (And let146 (And let132 (And let260 (And let236 let1))))))))))))))
  let let304 := (Eq And And)
  let let305 := (Eq Or Or)
  let let306 := (Not let249)
  let let307 := (Not let251)
  let let308 := (Not let252)
  let let309 := (Not let253)
  let let310 := (Not let255)
  let let311 := (Not let257)
  let let312 := (Not let258)
  let let313 := (Not let259)
fun lean_r0 : (Eq let142 let141) => -- THEORY_REWRITE_BOOL
fun lean_r1 : (Eq let133 let144) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let143 let146) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let131 let147) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq let130 let150) => -- THEORY_REWRITE_BOOL
fun lean_r5 : (Eq let125 let153) => -- THEORY_REWRITE_BOOL
fun lean_r6 : (Eq let157 False) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq let119 let158) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let160 let159) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let108 let161) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq let104 let163) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let114 let164) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let103 let166) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let168 let146) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let45 let170) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let139 let171) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let4 let172) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let37 let173) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let35 False) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let175 True) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let112 let176) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq let178 let177) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let30 let180) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let42 let182) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let186 let185) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let13 xx5f8) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let187 True) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let204 let203) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let237 let236) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let70 let240) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq let128 let242) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let117 let243) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let66 let246) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq let81 let155) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let3 let206) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let261 let260) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let19 True) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let62 let262) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq let95 True) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let122 let263) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let264 let220) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let140 let265) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let6 let207) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let99 False) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let267 let226) => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq let268 let231) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let34 let269) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let270 let209) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let271 False) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let23 False) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let101 let272) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq let18 let273) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let31 True) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let50 let274) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let39 let275) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq let78 let188) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq let25 let276) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq let22 let277) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq let106 let278) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let53 let279) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let281 False) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq let72 let282) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq let55 let283) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let98 let284) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq let285 False) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq let75 let286) => -- THEORY_REWRITE_BOOL
fun lean_r66 : (Eq let288 let217) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq let59 let289) => -- THEORY_REWRITE_BOOL
fun lean_r68 : (Eq let76 let290) => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq let94 let291) => -- THEORY_REWRITE_BOOL
fun lean_r70 : (Eq let292 let212) => -- THEORY_REWRITE_BOOL
fun lean_r71 : (Eq let77 let154) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let40 let219) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let79 let189) => -- THEORY_REWRITE_BOOL
fun lean_r74 : (Eq let293 True) => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq let294 let191) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let89 let295) => -- THEORY_REWRITE_BOOL
fun lean_r77 : (Eq let296 let255) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq let90 let194) => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq let2 let205) => -- THEORY_REWRITE_BOOL
fun lean_r80 : (Eq let297 let195) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let298 let198) => -- THEORY_REWRITE_BOOL
fun lean_r82 : (Eq let299 True) => -- THEORY_REWRITE_BOOL
fun lean_a83 : let142 => by
have lean_s0 : let304 := by timed rfl
let lean_s1 := by timed congr lean_s0 lean_r41
let lean_s2 := by timed congr lean_s0 lean_r15
have lean_s3 : (Eq let84 let84) := by timed rfl
let lean_s4 := by timed congr lean_s0 lean_s3
have lean_s5 : (Eq let83 let83) := by timed rfl
let lean_s6 := by timed congr lean_s0 lean_s5
have lean_s7 : (Eq let138 let138) := by timed rfl
let lean_s8 := by timed congr lean_s0 lean_s7
have lean_s9 : (Eq let137 let137) := by timed rfl
let lean_s10 := by timed congr lean_s0 lean_s9
have lean_s11 : (Eq let10 let10) := by timed rfl
let lean_s12 := by timed congr lean_s0 lean_s11
have lean_s13 : (Eq let9 let9) := by timed rfl
let lean_s14 := by timed congr lean_s0 lean_s13
have lean_s15 : (Eq let136 let136) := by timed rfl
let lean_s16 := by timed congr lean_s0 lean_s15
have lean_s17 : (Eq let135 let135) := by timed rfl
let lean_s18 := by timed congr lean_s0 lean_s17
have lean_s19 : (Eq let144 let167) := by timed flipCongrArg lean_r2 [Not]
have lean_s20 : (Eq let133 let167) := by timed Eq.trans lean_r1 lean_s19
have lean_s21 : (Eq let134 let168) := by timed flipCongrArg lean_s20 [Not]
have lean_s22 : (Eq let134 let146) := by timed Eq.trans lean_s21 lean_r13
let lean_s23 := by timed congr lean_s0 lean_s22
have lean_s24 : (Eq let132 let132) := by timed rfl
let lean_s25 := by timed congr lean_s0 lean_s24
have lean_s26 : let305 := by timed rfl
have lean_s27 : let304 := by timed rfl
have lean_s28 : (Eq let129 let129) := by timed rfl
let lean_s29 := by timed congr lean_s27 lean_s28
let lean_s30 := by timed congr lean_s27 lean_s3
let lean_s31 := by timed congr lean_s27 lean_s5
have lean_s32 : (Eq let16 let16) := by timed rfl
let lean_s33 := by timed congr lean_s27 lean_s32
let lean_s34 := by timed congr lean_s27 lean_r73
let lean_s35 := by timed congr lean_s27 lean_r55
let lean_s36 := by timed congr lean_s27 lean_r33
have lean_s37 : (Eq let82 let82) := by timed rfl
let lean_s38 := by timed congr lean_s27 lean_s37
let lean_s39 := by timed congr lean_s38 lean_r71
let lean_s40 := by timed congr lean_s36 lean_s39
let lean_s41 := by timed congr lean_s35 lean_s40
let lean_s42 := by timed congr lean_s34 lean_s41
let lean_s43 := by timed congr lean_s33 lean_s42
let lean_s44 := by timed congr lean_s31 lean_s43
let lean_s45 := by timed congr lean_s30 lean_s44
have lean_s46 : (Eq let150 let259) := by timed congr lean_s29 lean_s45
have lean_s47 : (Eq let130 let259) := by timed Eq.trans lean_r4 lean_s46
let lean_s48 := by timed congr lean_s26 lean_s47
have lean_s49 : let304 := by timed rfl
have lean_s50 : (Eq let127 let127) := by timed rfl
let lean_s51 := by timed congr lean_s49 lean_s50
let lean_s52 := by timed congr lean_s49 lean_s3
let lean_s53 := by timed congr lean_s49 lean_s5
let lean_s54 := by timed congr lean_s49 lean_s32
have lean_s55 : (Eq xx5f18 xx5f18) := by timed rfl
let lean_s56 := by timed congr lean_s49 lean_s55
have lean_s57 : (Eq let126 let126) := by timed rfl
let lean_s58 := by timed congr lean_s49 lean_s57
let lean_s59 := by timed congr lean_s49 lean_s37
let lean_s60 := by timed congr lean_s49 lean_r33
let lean_s61 := by timed congr lean_s60 lean_r71
let lean_s62 := by timed congr lean_s59 lean_s61
let lean_s63 := by timed congr lean_s58 lean_s62
let lean_s64 := by timed congr lean_s56 lean_s63
let lean_s65 := by timed congr lean_s54 lean_s64
let lean_s66 := by timed congr lean_s53 lean_s65
let lean_s67 := by timed congr lean_s52 lean_s66
have lean_s68 : (Eq let242 let258) := by timed congr lean_s51 lean_s67
have lean_s69 : (Eq let128 let258) := by timed Eq.trans lean_r30 lean_s68
let lean_s70 := by timed congr lean_s26 lean_s69
have lean_s71 : let304 := by timed rfl
have lean_s72 : (Eq let124 let124) := by timed rfl
let lean_s73 := by timed congr lean_s71 lean_s72
let lean_s74 := by timed congr lean_s71 lean_s3
let lean_s75 := by timed congr lean_s71 lean_s5
have lean_s76 : (Eq xx5f15 xx5f15) := by timed rfl
let lean_s77 := by timed congr lean_s71 lean_s76
let lean_s78 := by timed flipCongrArg lean_r25 [LE.le]
have lean_s79 : (Eq let26 let26) := by timed rfl
have lean_s80 : (Eq let27 let186) := by timed congr lean_s78 lean_s79
have lean_s81 : (Eq let27 let185) := by timed Eq.trans lean_s80 lean_r24
let lean_s82 := by timed congr lean_s71 lean_s81
have lean_s83 : (Eq xx5f14 xx5f14) := by timed rfl
let lean_s84 := by timed flipCongrArg lean_s83 [Eq]
have lean_s85 : (Eq let109 let160) := by timed congr lean_s84 lean_r25
have lean_s86 : (Eq let109 let159) := by timed Eq.trans lean_s85 lean_r8
let lean_s87 := by timed congr lean_s71 lean_s86
let lean_s88 := by timed congr lean_s71 lean_r33
let lean_s89 := by timed congr lean_s71 lean_r73
let lean_s90 := by timed congr lean_s71 lean_r55
let lean_s91 := by timed congr lean_s90 lean_r71
let lean_s92 := by timed congr lean_s89 lean_s91
let lean_s93 := by timed congr lean_s88 lean_s92
let lean_s94 := by timed congr lean_s87 lean_s93
let lean_s95 := by timed congr lean_s82 lean_s94
let lean_s96 := by timed congr lean_s77 lean_s95
let lean_s97 := by timed congr lean_s75 lean_s96
let lean_s98 := by timed congr lean_s74 lean_s97
have lean_s99 : (Eq let153 let257) := by timed congr lean_s73 lean_s98
have lean_s100 : (Eq let125 let257) := by timed Eq.trans lean_r5 lean_s99
let lean_s101 := by timed congr lean_s26 lean_s100
have lean_s102 : let304 := by timed rfl
have lean_s103 : (Eq let121 let121) := by timed rfl
let lean_s104 := by timed congr lean_s102 lean_s103
have lean_s105 : (Eq xx5f0 xx5f0) := by timed rfl
let lean_s106 := by timed congr lean_s102 lean_s105
let lean_s107 := by timed congr lean_s102 lean_s5
let lean_s108 := by timed congr lean_s102 lean_s32
let lean_s109 := by timed congr lean_s102 lean_r43
have lean_s110 : (Eq let120 let120) := by timed rfl
let lean_s111 := by timed congr lean_s102 lean_s110
have lean_s112 : (Eq xx5f19 xx5f19) := by timed rfl
let lean_s113 := by timed congr lean_s102 lean_s112
let lean_s114 := by timed congr lean_s102 lean_s37
let lean_s115 := by timed congr lean_s102 lean_r33
let lean_s116 := by timed congr lean_s115 lean_r71
let lean_s117 := by timed congr lean_s114 lean_s116
let lean_s118 := by timed congr lean_s113 lean_s117
let lean_s119 := by timed congr lean_s111 lean_s118
let lean_s120 := by timed congr lean_s109 lean_s119
let lean_s121 := by timed congr lean_s108 lean_s120
let lean_s122 := by timed congr lean_s107 lean_s121
let lean_s123 := by timed congr lean_s106 lean_s122
have lean_s124 : (Eq let263 let157) := by timed congr lean_s104 lean_s123
have lean_s125 : (Eq let263 False) := by timed Eq.trans lean_s124 lean_r6
have lean_s126 : (Eq let122 False) := by timed Eq.trans lean_r39 lean_s125
let lean_s127 := by timed congr lean_s26 lean_s126
have lean_s128 : let304 := by timed rfl
have lean_s129 : (Eq let118 let118) := by timed rfl
let lean_s130 := by timed congr lean_s128 lean_s129
let lean_s131 := by timed congr lean_s128 lean_s105
let lean_s132 := by timed congr lean_s128 lean_s5
let lean_s133 := by timed congr lean_s128 lean_s32
let lean_s134 := by timed congr lean_s128 lean_r38
let lean_s135 := by timed congr lean_s128 lean_r73
let lean_s136 := by timed congr lean_s128 lean_r55
let lean_s137 := by timed congr lean_s128 lean_r33
let lean_s138 := by timed congr lean_s128 lean_s37
let lean_s139 := by timed congr lean_s138 lean_r71
let lean_s140 := by timed congr lean_s137 lean_s139
let lean_s141 := by timed congr lean_s136 lean_s140
let lean_s142 := by timed congr lean_s135 lean_s141
let lean_s143 := by timed congr lean_s134 lean_s142
let lean_s144 := by timed congr lean_s133 lean_s143
let lean_s145 := by timed congr lean_s132 lean_s144
let lean_s146 := by timed congr lean_s131 lean_s145
have lean_s147 : (Eq let158 let296) := by timed congr lean_s130 lean_s146
have lean_s148 : (Eq let158 let255) := by timed Eq.trans lean_s147 lean_r77
have lean_s149 : (Eq let119 let255) := by timed Eq.trans lean_r7 lean_s148
let lean_s150 := by timed congr lean_s26 lean_s149
have lean_s151 : let304 := by timed rfl
have lean_s152 : (Eq let116 let116) := by timed rfl
let lean_s153 := by timed congr lean_s151 lean_s152
let lean_s154 := by timed congr lean_s151 lean_s105
let lean_s155 := by timed congr lean_s151 lean_s5
let lean_s156 := by timed congr lean_s151 lean_s76
let lean_s157 := by timed flipCongrArg lean_r25 [LE.le]
have lean_s158 : (Eq let68 let68) := by timed rfl
have lean_s159 : (Eq let91 let297) := by timed congr lean_s157 lean_s158
have lean_s160 : (Eq let91 let195) := by timed Eq.trans lean_s159 lean_r80
let lean_s161 := by timed congr lean_s151 lean_s160
let lean_s162 := by timed congr lean_s151 lean_s86
let lean_s163 := by timed congr lean_s151 lean_r33
let lean_s164 := by timed congr lean_s151 lean_r73
let lean_s165 := by timed congr lean_s151 lean_r55
let lean_s166 := by timed congr lean_s165 lean_r71
let lean_s167 := by timed congr lean_s164 lean_s166
let lean_s168 := by timed congr lean_s163 lean_s167
let lean_s169 := by timed congr lean_s162 lean_s168
let lean_s170 := by timed congr lean_s161 lean_s169
let lean_s171 := by timed congr lean_s156 lean_s170
let lean_s172 := by timed congr lean_s155 lean_s171
let lean_s173 := by timed congr lean_s154 lean_s172
have lean_s174 : (Eq let243 let253) := by timed congr lean_s153 lean_s173
have lean_s175 : (Eq let117 let253) := by timed Eq.trans lean_r31 lean_s174
let lean_s176 := by timed congr lean_s26 lean_s175
have lean_s177 : let304 := by timed rfl
have lean_s178 : (Eq let113 let113) := by timed rfl
let lean_s179 := by timed congr lean_s177 lean_s178
let lean_s180 := by timed congr lean_s177 lean_s3
have lean_s181 : (Eq xx5f1 xx5f1) := by timed rfl
let lean_s182 := by timed congr lean_s177 lean_s181
let lean_s183 := by timed congr lean_s177 lean_s32
let lean_s184 := by timed congr lean_s177 lean_s55
let lean_s185 := by timed congr lean_s177 lean_s112
let lean_s186 := by timed congr lean_s177 lean_r33
let lean_s187 := by timed congr lean_s177 lean_s37
let lean_s188 := by timed congr lean_s187 lean_r71
let lean_s189 := by timed congr lean_s186 lean_s188
let lean_s190 := by timed congr lean_s185 lean_s189
let lean_s191 := by timed congr lean_s184 lean_s190
let lean_s192 := by timed congr lean_s183 lean_s191
let lean_s193 := by timed congr lean_s182 lean_s192
let lean_s194 := by timed congr lean_s180 lean_s193
have lean_s195 : (Eq let164 let252) := by timed congr lean_s179 lean_s194
have lean_s196 : (Eq let114 let252) := by timed Eq.trans lean_r11 lean_s195
let lean_s197 := by timed congr lean_s26 lean_s196
have lean_s198 : let304 := by timed rfl
have lean_s199 : (Eq let111 let111) := by timed rfl
let lean_s200 := by timed congr lean_s198 lean_s199
let lean_s201 := by timed congr lean_s198 lean_s3
let lean_s202 := by timed congr lean_s198 lean_s181
let lean_s203 := by timed congr lean_s198 lean_s76
let lean_s204 := by timed flipCongrArg lean_r25 [LE.le]
have lean_s205 : (Eq let64 let64) := by timed rfl
have lean_s206 : (Eq let86 let294) := by timed congr lean_s204 lean_s205
have lean_s207 : (Eq let86 let191) := by timed Eq.trans lean_s206 lean_r75
let lean_s208 := by timed congr lean_s198 lean_s207
let lean_s209 := by timed congr lean_s198 lean_s86
let lean_s210 := by timed congr lean_s198 lean_r33
let lean_s211 := by timed congr lean_s198 lean_r73
let lean_s212 := by timed congr lean_s198 lean_r55
let lean_s213 := by timed congr lean_s212 lean_r71
let lean_s214 := by timed congr lean_s211 lean_s213
let lean_s215 := by timed congr lean_s210 lean_s214
let lean_s216 := by timed congr lean_s209 lean_s215
let lean_s217 := by timed congr lean_s208 lean_s216
let lean_s218 := by timed congr lean_s203 lean_s217
let lean_s219 := by timed congr lean_s202 lean_s218
let lean_s220 := by timed congr lean_s201 lean_s219
have lean_s221 : (Eq let176 let251) := by timed congr lean_s200 lean_s220
have lean_s222 : (Eq let112 let251) := by timed Eq.trans lean_r20 lean_s221
let lean_s223 := by timed congr lean_s26 lean_s222
have lean_s224 : let304 := by timed rfl
have lean_s225 : (Eq let107 let107) := by timed rfl
let lean_s226 := by timed congr lean_s224 lean_s225
let lean_s227 := by timed congr lean_s224 lean_s105
let lean_s228 := by timed congr lean_s224 lean_s181
let lean_s229 := by timed congr lean_s224 lean_r73
let lean_s230 := by timed congr lean_s224 lean_r55
let lean_s231 := by timed congr lean_s224 lean_r33
let lean_s232 := by timed congr lean_s224 lean_s37
let lean_s233 := by timed congr lean_s232 lean_r71
let lean_s234 := by timed congr lean_s231 lean_s233
let lean_s235 := by timed congr lean_s230 lean_s234
let lean_s236 := by timed congr lean_s229 lean_s235
let lean_s237 := by timed congr lean_s228 lean_s236
let lean_s238 := by timed congr lean_s227 lean_s237
have lean_s239 : (Eq let161 let249) := by timed congr lean_s226 lean_s238
have lean_s240 : (Eq let108 let249) := by timed Eq.trans lean_r9 lean_s239
let lean_s241 := by timed congr lean_s26 lean_s240
have lean_s242 : let304 := by timed rfl
have lean_s243 : (Eq let105 let105) := by timed rfl
let lean_s244 := by timed congr lean_s242 lean_s243
let lean_s245 := by timed congr lean_s242 lean_r10
have lean_s246 : let305 := by timed rfl
let lean_s247 := by timed congr lean_s246 lean_s105
let lean_s248 := by timed congr lean_s246 lean_s181
let lean_s249 := by timed congr lean_s246 lean_s32
have lean_s250 : (Eq let28 let200) := by timed flipCongrArg lean_s81 [Not]
let lean_s251 := by timed congr lean_s249 lean_s250
let lean_s252 := by timed congr lean_s248 lean_s251
have lean_s253 : (Eq let166 let202) := by timed congr lean_s247 lean_s252
have lean_s254 : (Eq let103 let202) := by timed Eq.trans lean_r12 lean_s253
let lean_s255 := by timed congr lean_s242 lean_s254
have lean_s256 : let305 := by timed rfl
let lean_s257 := by timed congr lean_s256 lean_s3
let lean_s258 := by timed congr lean_s256 lean_s181
let lean_s259 := by timed congr lean_s256 lean_s76
have lean_s260 : (Eq let100 let187) := by timed flipCongrArg lean_r43 [Not]
have lean_s261 : (Eq let100 True) := by timed Eq.trans lean_s260 lean_r26
let lean_s262 := by timed congr lean_s259 lean_s261
let lean_s263 := by timed congr lean_s258 lean_s262
have lean_s264 : (Eq let272 let299) := by timed congr lean_s257 lean_s263
have lean_s265 : (Eq let272 True) := by timed Eq.trans lean_s264 lean_r82
have lean_s266 : (Eq let101 True) := by timed Eq.trans lean_r50 lean_s265
let lean_s267 := by timed congr lean_s242 lean_s266
have lean_s268 : let305 := by timed rfl
let lean_s269 := by timed congr lean_s268 lean_s3
let lean_s270 := by timed congr lean_s268 lean_s181
let lean_s271 := by timed congr lean_s268 lean_s76
have lean_s272 : (Eq let96 let271) := by timed flipCongrArg lean_r38 [Not]
have lean_s273 : (Eq let96 False) := by timed Eq.trans lean_s272 lean_r48
let lean_s274 := by timed congr lean_s271 lean_s273
let lean_s275 := by timed congr lean_s270 lean_s274
have lean_s276 : (Eq let284 let298) := by timed congr lean_s269 lean_s275
have lean_s277 : (Eq let284 let198) := by timed Eq.trans lean_s276 lean_r81
have lean_s278 : (Eq let98 let198) := by timed Eq.trans lean_r63 lean_s277
let lean_s279 := by timed congr lean_s242 lean_s278
have lean_s280 : let305 := by timed rfl
let lean_s281 := by timed congr lean_s280 lean_s3
let lean_s282 := by timed congr lean_s280 lean_s181
let lean_s283 := by timed congr lean_s280 lean_s32
have lean_s284 : (Eq let92 let196) := by timed flipCongrArg lean_s160 [Not]
let lean_s285 := by timed congr lean_s283 lean_s284
let lean_s286 := by timed congr lean_s282 lean_s285
have lean_s287 : (Eq let291 let197) := by timed congr lean_s281 lean_s286
have lean_s288 : (Eq let94 let197) := by timed Eq.trans lean_r69 lean_s287
let lean_s289 := by timed congr lean_s242 lean_s288
let lean_s290 := by timed congr lean_s242 lean_r78
have lean_s291 : let305 := by timed rfl
let lean_s292 := by timed congr lean_s291 lean_s105
let lean_s293 := by timed congr lean_s291 lean_s5
let lean_s294 := by timed congr lean_s291 lean_s32
have lean_s295 : (Eq let87 let192) := by timed flipCongrArg lean_s207 [Not]
let lean_s296 := by timed congr lean_s294 lean_s295
let lean_s297 := by timed congr lean_s293 lean_s296
have lean_s298 : (Eq let295 let193) := by timed congr lean_s292 lean_s297
have lean_s299 : (Eq let89 let193) := by timed Eq.trans lean_r76 lean_s298
let lean_s300 := by timed congr lean_s242 lean_s299
have lean_s301 : (Eq let85 let85) := by timed rfl
let lean_s302 := by timed congr lean_s242 lean_s301
let lean_s303 := by timed congr lean_s242 lean_s37
let lean_s304 := by timed congr lean_s242 lean_r33
let lean_s305 := by timed congr lean_s242 lean_r73
let lean_s306 := by timed congr lean_s242 lean_r55
let lean_s307 := by timed congr lean_s306 lean_r71
let lean_s308 := by timed congr lean_s305 lean_s307
let lean_s309 := by timed congr lean_s304 lean_s308
let lean_s310 := by timed congr lean_s303 lean_s309
let lean_s311 := by timed congr lean_s302 lean_s310
let lean_s312 := by timed congr lean_s300 lean_s311
let lean_s313 := by timed congr lean_s290 lean_s312
let lean_s314 := by timed congr lean_s289 lean_s313
let lean_s315 := by timed congr lean_s279 lean_s314
let lean_s316 := by timed congr lean_s267 lean_s315
let lean_s317 := by timed congr lean_s255 lean_s316
let lean_s318 := by timed congr lean_s245 lean_s317
have lean_s319 : (Eq let278 let204) := by timed congr lean_s244 lean_s318
have lean_s320 : (Eq let278 let203) := by timed Eq.trans lean_s319 lean_r27
have lean_s321 : (Eq let106 let203) := by timed Eq.trans lean_r58 lean_s320
let lean_s322 := by timed congr lean_s241 lean_s321
let lean_s323 := by timed congr lean_s223 lean_s322
let lean_s324 := by timed congr lean_s197 lean_s323
let lean_s325 := by timed congr lean_s176 lean_s324
let lean_s326 := by timed congr lean_s150 lean_s325
let lean_s327 := by timed congr lean_s127 lean_s326
let lean_s328 := by timed congr lean_s101 lean_s327
let lean_s329 := by timed congr lean_s70 lean_s328
have lean_s330 : (Eq let147 let261) := by timed congr lean_s48 lean_s329
have lean_s331 : (Eq let147 let260) := by timed Eq.trans lean_s330 lean_r35
have lean_s332 : (Eq let131 let260) := by timed Eq.trans lean_r3 lean_s331
let lean_s333 := by timed congr lean_s0 lean_s332
have lean_s334 : let305 := by timed rfl
have lean_s335 : let304 := by timed rfl
have lean_s336 : (Eq let74 let74) := by timed rfl
let lean_s337 := by timed congr lean_s335 lean_s336
let lean_s338 := by timed congr lean_s335 lean_s11
let lean_s339 := by timed congr lean_s335 lean_s13
let lean_s340 := by timed congr lean_s335 lean_s32
have lean_s341 : (Eq xx5f11 xx5f11) := by timed rfl
let lean_s342 := by timed congr lean_s335 lean_s341
have lean_s343 : (Eq let73 let73) := by timed rfl
let lean_s344 := by timed congr lean_s335 lean_s343
have lean_s345 : (Eq let8 let8) := by timed rfl
let lean_s346 := by timed congr lean_s335 lean_s345
let lean_s347 := by timed congr lean_s335 lean_r42
let lean_s348 := by timed congr lean_s347 lean_r79
let lean_s349 := by timed congr lean_s346 lean_s348
let lean_s350 := by timed congr lean_s344 lean_s349
let lean_s351 := by timed congr lean_s342 lean_s350
let lean_s352 := by timed congr lean_s340 lean_s351
let lean_s353 := by timed congr lean_s339 lean_s352
let lean_s354 := by timed congr lean_s338 lean_s353
have lean_s355 : (Eq let286 let235) := by timed congr lean_s337 lean_s354
have lean_s356 : (Eq let75 let235) := by timed Eq.trans lean_r65 lean_s355
let lean_s357 := by timed congr lean_s334 lean_s356
have lean_s358 : let304 := by timed rfl
have lean_s359 : (Eq let71 let71) := by timed rfl
let lean_s360 := by timed congr lean_s358 lean_s359
let lean_s361 := by timed congr lean_s358 lean_s11
let lean_s362 := by timed congr lean_s358 lean_s13
let lean_s363 := by timed congr lean_s358 lean_s32
let lean_s364 := by timed congr lean_s358 lean_r16
let lean_s365 := by timed congr lean_s358 lean_r34
let lean_s366 := by timed congr lean_s358 lean_r42
let lean_s367 := by timed congr lean_s358 lean_s345
let lean_s368 := by timed congr lean_s367 lean_r79
let lean_s369 := by timed congr lean_s366 lean_s368
let lean_s370 := by timed congr lean_s365 lean_s369
let lean_s371 := by timed congr lean_s364 lean_s370
let lean_s372 := by timed congr lean_s363 lean_s371
let lean_s373 := by timed congr lean_s362 lean_s372
let lean_s374 := by timed congr lean_s361 lean_s373
have lean_s375 : (Eq let282 let233) := by timed congr lean_s360 lean_s374
have lean_s376 : (Eq let72 let233) := by timed Eq.trans lean_r61 lean_s375
let lean_s377 := by timed congr lean_s334 lean_s376
have lean_s378 : let304 := by timed rfl
have lean_s379 : (Eq let69 let69) := by timed rfl
let lean_s380 := by timed congr lean_s378 lean_s379
let lean_s381 := by timed congr lean_s378 lean_s11
let lean_s382 := by timed congr lean_s378 lean_s13
let lean_s383 := by timed congr lean_s378 lean_s76
let lean_s384 := by timed congr lean_s378 lean_s81
have lean_s385 : (Eq xx5f9 xx5f9) := by timed rfl
let lean_s386 := by timed flipCongrArg lean_s385 [Eq]
have lean_s387 : (Eq let46 let178) := by timed congr lean_s386 lean_r25
have lean_s388 : (Eq let46 let177) := by timed Eq.trans lean_s387 lean_r21
let lean_s389 := by timed congr lean_s378 lean_s388
let lean_s390 := by timed congr lean_s378 lean_r42
let lean_s391 := by timed congr lean_s378 lean_r16
let lean_s392 := by timed congr lean_s378 lean_r34
let lean_s393 := by timed congr lean_s392 lean_r79
let lean_s394 := by timed congr lean_s391 lean_s393
let lean_s395 := by timed congr lean_s390 lean_s394
let lean_s396 := by timed congr lean_s389 lean_s395
let lean_s397 := by timed congr lean_s384 lean_s396
let lean_s398 := by timed congr lean_s383 lean_s397
let lean_s399 := by timed congr lean_s382 lean_s398
let lean_s400 := by timed congr lean_s381 lean_s399
have lean_s401 : (Eq let240 let232) := by timed congr lean_s380 lean_s400
have lean_s402 : (Eq let70 let232) := by timed Eq.trans lean_r29 lean_s401
let lean_s403 := by timed congr lean_s334 lean_s402
have lean_s404 : let304 := by timed rfl
have lean_s405 : (Eq let65 let65) := by timed rfl
let lean_s406 := by timed congr lean_s404 lean_s405
have lean_s407 : (Eq xx5f4 xx5f4) := by timed rfl
let lean_s408 := by timed congr lean_s404 lean_s407
let lean_s409 := by timed congr lean_s404 lean_s13
let lean_s410 := by timed congr lean_s404 lean_s32
let lean_s411 := by timed congr lean_s404 lean_r18
have lean_s412 : (Eq let63 let63) := by timed rfl
let lean_s413 := by timed congr lean_s404 lean_s412
have lean_s414 : (Eq xx5f12 xx5f12) := by timed rfl
let lean_s415 := by timed congr lean_s404 lean_s414
let lean_s416 := by timed congr lean_s404 lean_s345
let lean_s417 := by timed congr lean_s404 lean_r42
let lean_s418 := by timed congr lean_s417 lean_r79
let lean_s419 := by timed congr lean_s416 lean_s418
let lean_s420 := by timed congr lean_s415 lean_s419
let lean_s421 := by timed congr lean_s413 lean_s420
let lean_s422 := by timed congr lean_s411 lean_s421
let lean_s423 := by timed congr lean_s410 lean_s422
let lean_s424 := by timed congr lean_s409 lean_s423
let lean_s425 := by timed congr lean_s408 lean_s424
have lean_s426 : (Eq let246 let285) := by timed congr lean_s406 lean_s425
have lean_s427 : (Eq let246 False) := by timed Eq.trans lean_s426 lean_r64
have lean_s428 : (Eq let66 False) := by timed Eq.trans lean_r32 lean_s427
let lean_s429 := by timed congr lean_s334 lean_s428
have lean_s430 : let304 := by timed rfl
have lean_s431 : (Eq let61 let61) := by timed rfl
let lean_s432 := by timed congr lean_s430 lean_s431
let lean_s433 := by timed congr lean_s430 lean_s407
let lean_s434 := by timed congr lean_s430 lean_s13
let lean_s435 := by timed congr lean_s430 lean_s32
let lean_s436 := by timed congr lean_s430 lean_r52
let lean_s437 := by timed congr lean_s430 lean_r16
let lean_s438 := by timed congr lean_s430 lean_r34
let lean_s439 := by timed congr lean_s430 lean_r42
let lean_s440 := by timed congr lean_s430 lean_s345
let lean_s441 := by timed congr lean_s440 lean_r79
let lean_s442 := by timed congr lean_s439 lean_s441
let lean_s443 := by timed congr lean_s438 lean_s442
let lean_s444 := by timed congr lean_s437 lean_s443
let lean_s445 := by timed congr lean_s436 lean_s444
let lean_s446 := by timed congr lean_s435 lean_s445
let lean_s447 := by timed congr lean_s434 lean_s446
let lean_s448 := by timed congr lean_s433 lean_s447
have lean_s449 : (Eq let262 let268) := by timed congr lean_s432 lean_s448
have lean_s450 : (Eq let262 let231) := by timed Eq.trans lean_s449 lean_r45
have lean_s451 : (Eq let62 let231) := by timed Eq.trans lean_r37 lean_s450
let lean_s452 := by timed congr lean_s334 lean_s451
have lean_s453 : let304 := by timed rfl
have lean_s454 : (Eq let58 let58) := by timed rfl
let lean_s455 := by timed congr lean_s453 lean_s454
let lean_s456 := by timed congr lean_s453 lean_s407
let lean_s457 := by timed congr lean_s453 lean_s13
let lean_s458 := by timed congr lean_s453 lean_s76
let lean_s459 := by timed congr lean_s453 lean_s81
let lean_s460 := by timed congr lean_s453 lean_s388
let lean_s461 := by timed congr lean_s453 lean_r42
let lean_s462 := by timed congr lean_s453 lean_r16
let lean_s463 := by timed congr lean_s453 lean_r34
let lean_s464 := by timed congr lean_s463 lean_r79
let lean_s465 := by timed congr lean_s462 lean_s464
let lean_s466 := by timed congr lean_s461 lean_s465
let lean_s467 := by timed congr lean_s460 lean_s466
let lean_s468 := by timed congr lean_s459 lean_s467
let lean_s469 := by timed congr lean_s458 lean_s468
let lean_s470 := by timed congr lean_s457 lean_s469
let lean_s471 := by timed congr lean_s456 lean_s470
have lean_s472 : (Eq let289 let229) := by timed congr lean_s455 lean_s471
have lean_s473 : (Eq let59 let229) := by timed Eq.trans lean_r67 lean_s472
let lean_s474 := by timed congr lean_s334 lean_s473
have lean_s475 : let304 := by timed rfl
have lean_s476 : (Eq let54 let54) := by timed rfl
let lean_s477 := by timed congr lean_s475 lean_s476
let lean_s478 := by timed congr lean_s475 lean_s11
have lean_s479 : (Eq xx5f5 xx5f5) := by timed rfl
let lean_s480 := by timed congr lean_s475 lean_s479
let lean_s481 := by timed congr lean_s475 lean_s32
let lean_s482 := by timed congr lean_s475 lean_r49
let lean_s483 := by timed congr lean_s475 lean_s341
let lean_s484 := by timed congr lean_s475 lean_s414
let lean_s485 := by timed congr lean_s475 lean_s345
let lean_s486 := by timed congr lean_s475 lean_r42
let lean_s487 := by timed congr lean_s486 lean_r79
let lean_s488 := by timed congr lean_s485 lean_s487
let lean_s489 := by timed congr lean_s484 lean_s488
let lean_s490 := by timed congr lean_s483 lean_s489
let lean_s491 := by timed congr lean_s482 lean_s490
let lean_s492 := by timed congr lean_s481 lean_s491
let lean_s493 := by timed congr lean_s480 lean_s492
let lean_s494 := by timed congr lean_s478 lean_s493
have lean_s495 : (Eq let283 let281) := by timed congr lean_s477 lean_s494
have lean_s496 : (Eq let283 False) := by timed Eq.trans lean_s495 lean_r60
have lean_s497 : (Eq let55 False) := by timed Eq.trans lean_r62 lean_s496
let lean_s498 := by timed congr lean_s334 lean_s497
have lean_s499 : let304 := by timed rfl
have lean_s500 : (Eq let52 let52) := by timed rfl
let lean_s501 := by timed congr lean_s499 lean_s500
let lean_s502 := by timed congr lean_s499 lean_s11
let lean_s503 := by timed congr lean_s499 lean_s479
let lean_s504 := by timed congr lean_s499 lean_s32
let lean_s505 := by timed congr lean_s499 lean_r36
let lean_s506 := by timed congr lean_s499 lean_r16
let lean_s507 := by timed congr lean_s499 lean_r34
let lean_s508 := by timed congr lean_s499 lean_r42
let lean_s509 := by timed congr lean_s499 lean_s345
let lean_s510 := by timed congr lean_s509 lean_r79
let lean_s511 := by timed congr lean_s508 lean_s510
let lean_s512 := by timed congr lean_s507 lean_s511
let lean_s513 := by timed congr lean_s506 lean_s512
let lean_s514 := by timed congr lean_s505 lean_s513
let lean_s515 := by timed congr lean_s504 lean_s514
let lean_s516 := by timed congr lean_s503 lean_s515
let lean_s517 := by timed congr lean_s502 lean_s516
have lean_s518 : (Eq let279 let267) := by timed congr lean_s501 lean_s517
have lean_s519 : (Eq let279 let226) := by timed Eq.trans lean_s518 lean_r44
have lean_s520 : (Eq let53 let226) := by timed Eq.trans lean_r59 lean_s519
let lean_s521 := by timed congr lean_s334 lean_s520
have lean_s522 : let304 := by timed rfl
have lean_s523 : (Eq let49 let49) := by timed rfl
let lean_s524 := by timed congr lean_s522 lean_s523
let lean_s525 := by timed congr lean_s522 lean_s11
let lean_s526 := by timed congr lean_s522 lean_s479
let lean_s527 := by timed congr lean_s522 lean_s76
let lean_s528 := by timed flipCongrArg lean_r25 [LE.le]
have lean_s529 : (Eq let12 let12) := by timed rfl
have lean_s530 : (Eq let14 let270) := by timed congr lean_s528 lean_s529
have lean_s531 : (Eq let14 let209) := by timed Eq.trans lean_s530 lean_r47
let lean_s532 := by timed congr lean_s522 lean_s531
let lean_s533 := by timed congr lean_s522 lean_s388
let lean_s534 := by timed congr lean_s522 lean_r42
let lean_s535 := by timed congr lean_s522 lean_r16
let lean_s536 := by timed congr lean_s522 lean_r34
let lean_s537 := by timed congr lean_s536 lean_r79
let lean_s538 := by timed congr lean_s535 lean_s537
let lean_s539 := by timed congr lean_s534 lean_s538
let lean_s540 := by timed congr lean_s533 lean_s539
let lean_s541 := by timed congr lean_s532 lean_s540
let lean_s542 := by timed congr lean_s527 lean_s541
let lean_s543 := by timed congr lean_s526 lean_s542
let lean_s544 := by timed congr lean_s525 lean_s543
have lean_s545 : (Eq let274 let224) := by timed congr lean_s524 lean_s544
have lean_s546 : (Eq let50 let224) := by timed Eq.trans lean_r53 lean_s545
let lean_s547 := by timed congr lean_s334 lean_s546
have lean_s548 : let304 := by timed rfl
have lean_s549 : (Eq let44 let44) := by timed rfl
let lean_s550 := by timed congr lean_s548 lean_s549
let lean_s551 := by timed congr lean_s548 lean_s407
let lean_s552 := by timed congr lean_s548 lean_s479
let lean_s553 := by timed congr lean_s548 lean_r16
let lean_s554 := by timed congr lean_s548 lean_r34
let lean_s555 := by timed congr lean_s548 lean_r42
let lean_s556 := by timed congr lean_s548 lean_s345
let lean_s557 := by timed congr lean_s556 lean_r79
let lean_s558 := by timed congr lean_s555 lean_s557
let lean_s559 := by timed congr lean_s554 lean_s558
let lean_s560 := by timed congr lean_s553 lean_s559
let lean_s561 := by timed congr lean_s552 lean_s560
let lean_s562 := by timed congr lean_s551 lean_s561
have lean_s563 : (Eq let170 let222) := by timed congr lean_s550 lean_s562
have lean_s564 : (Eq let45 let222) := by timed Eq.trans lean_r14 lean_s563
let lean_s565 := by timed congr lean_s334 lean_s564
have lean_s566 : let304 := by timed rfl
have lean_s567 : (Eq let41 let41) := by timed rfl
let lean_s568 := by timed congr lean_s566 lean_s567
let lean_s569 := by timed congr lean_s566 lean_r72
have lean_s570 : let305 := by timed rfl
let lean_s571 := by timed congr lean_s570 lean_s407
let lean_s572 := by timed congr lean_s570 lean_s479
let lean_s573 := by timed congr lean_s570 lean_s32
let lean_s574 := by timed congr lean_s573 lean_s250
let lean_s575 := by timed congr lean_s572 lean_s574
have lean_s576 : (Eq let275 let218) := by timed congr lean_s571 lean_s575
have lean_s577 : (Eq let39 let218) := by timed Eq.trans lean_r54 lean_s576
let lean_s578 := by timed congr lean_s566 lean_s577
have lean_s579 : let305 := by timed rfl
let lean_s580 := by timed congr lean_s579 lean_s11
let lean_s581 := by timed congr lean_s579 lean_s479
let lean_s582 := by timed congr lean_s579 lean_s76
have lean_s583 : (Eq let36 let187) := by timed flipCongrArg lean_r18 [Not]
have lean_s584 : (Eq let36 True) := by timed Eq.trans lean_s583 lean_r26
let lean_s585 := by timed congr lean_s582 lean_s584
let lean_s586 := by timed congr lean_s581 lean_s585
have lean_s587 : (Eq let173 let175) := by timed congr lean_s580 lean_s586
have lean_s588 : (Eq let173 True) := by timed Eq.trans lean_s587 lean_r19
have lean_s589 : (Eq let37 True) := by timed Eq.trans lean_r17 lean_s588
let lean_s590 := by timed congr lean_s566 lean_s589
have lean_s591 : let305 := by timed rfl
let lean_s592 := by timed congr lean_s591 lean_s11
let lean_s593 := by timed congr lean_s591 lean_s479
let lean_s594 := by timed congr lean_s591 lean_s76
have lean_s595 : (Eq let32 let271) := by timed flipCongrArg lean_r52 [Not]
have lean_s596 : (Eq let32 False) := by timed Eq.trans lean_s595 lean_r48
let lean_s597 := by timed congr lean_s594 lean_s596
let lean_s598 := by timed congr lean_s593 lean_s597
have lean_s599 : (Eq let269 let288) := by timed congr lean_s592 lean_s598
have lean_s600 : (Eq let269 let217) := by timed Eq.trans lean_s599 lean_r66
have lean_s601 : (Eq let34 let217) := by timed Eq.trans lean_r46 lean_s600
let lean_s602 := by timed congr lean_s566 lean_s601
have lean_s603 : let305 := by timed rfl
let lean_s604 := by timed congr lean_s603 lean_s11
let lean_s605 := by timed congr lean_s603 lean_s479
let lean_s606 := by timed congr lean_s603 lean_s32
let lean_s607 := by timed congr lean_s606 lean_s250
let lean_s608 := by timed congr lean_s605 lean_s607
have lean_s609 : (Eq let180 let215) := by timed congr lean_s604 lean_s608
have lean_s610 : (Eq let30 let215) := by timed Eq.trans lean_r22 lean_s609
let lean_s611 := by timed congr lean_s566 lean_s610
have lean_s612 : let305 := by timed rfl
let lean_s613 := by timed congr lean_s612 lean_s407
let lean_s614 := by timed congr lean_s612 lean_s13
let lean_s615 := by timed congr lean_s612 lean_s76
have lean_s616 : (Eq let24 let187) := by timed flipCongrArg lean_r49 [Not]
have lean_s617 : (Eq let24 True) := by timed Eq.trans lean_s616 lean_r26
let lean_s618 := by timed congr lean_s615 lean_s617
let lean_s619 := by timed congr lean_s614 lean_s618
have lean_s620 : (Eq let276 let293) := by timed congr lean_s613 lean_s619
have lean_s621 : (Eq let276 True) := by timed Eq.trans lean_s620 lean_r74
have lean_s622 : (Eq let25 True) := by timed Eq.trans lean_r56 lean_s621
let lean_s623 := by timed congr lean_s566 lean_s622
have lean_s624 : let305 := by timed rfl
let lean_s625 := by timed congr lean_s624 lean_s407
let lean_s626 := by timed congr lean_s624 lean_s13
let lean_s627 := by timed congr lean_s624 lean_s76
have lean_s628 : (Eq let20 let271) := by timed flipCongrArg lean_r36 [Not]
have lean_s629 : (Eq let20 False) := by timed Eq.trans lean_s628 lean_r48
let lean_s630 := by timed congr lean_s627 lean_s629
let lean_s631 := by timed congr lean_s626 lean_s630
have lean_s632 : (Eq let277 let292) := by timed congr lean_s625 lean_s631
have lean_s633 : (Eq let277 let212) := by timed Eq.trans lean_s632 lean_r70
have lean_s634 : (Eq let22 let212) := by timed Eq.trans lean_r57 lean_s633
let lean_s635 := by timed congr lean_s566 lean_s634
have lean_s636 : let305 := by timed rfl
let lean_s637 := by timed congr lean_s636 lean_s407
let lean_s638 := by timed congr lean_s636 lean_s13
let lean_s639 := by timed congr lean_s636 lean_s32
have lean_s640 : (Eq let15 let210) := by timed flipCongrArg lean_s531 [Not]
let lean_s641 := by timed congr lean_s639 lean_s640
let lean_s642 := by timed congr lean_s638 lean_s641
have lean_s643 : (Eq let273 let211) := by timed congr lean_s637 lean_s642
have lean_s644 : (Eq let18 let211) := by timed Eq.trans lean_r51 lean_s643
let lean_s645 := by timed congr lean_s566 lean_s644
have lean_s646 : (Eq let11 let11) := by timed rfl
let lean_s647 := by timed congr lean_s566 lean_s646
let lean_s648 := by timed congr lean_s566 lean_s345
let lean_s649 := by timed congr lean_s566 lean_r42
let lean_s650 := by timed congr lean_s566 lean_r16
let lean_s651 := by timed congr lean_s566 lean_r34
let lean_s652 := by timed congr lean_s651 lean_r79
let lean_s653 := by timed congr lean_s650 lean_s652
let lean_s654 := by timed congr lean_s649 lean_s653
let lean_s655 := by timed congr lean_s648 lean_s654
let lean_s656 := by timed congr lean_s647 lean_s655
let lean_s657 := by timed congr lean_s645 lean_s656
let lean_s658 := by timed congr lean_s635 lean_s657
let lean_s659 := by timed congr lean_s623 lean_s658
let lean_s660 := by timed congr lean_s611 lean_s659
let lean_s661 := by timed congr lean_s602 lean_s660
let lean_s662 := by timed congr lean_s590 lean_s661
let lean_s663 := by timed congr lean_s578 lean_s662
let lean_s664 := by timed congr lean_s569 lean_s663
have lean_s665 : (Eq let182 let264) := by timed congr lean_s568 lean_s664
have lean_s666 : (Eq let182 let220) := by timed Eq.trans lean_s665 lean_r40
have lean_s667 : (Eq let42 let220) := by timed Eq.trans lean_r23 lean_s666
let lean_s668 := by timed congr lean_s565 lean_s667
let lean_s669 := by timed congr lean_s547 lean_s668
let lean_s670 := by timed congr lean_s521 lean_s669
let lean_s671 := by timed congr lean_s498 lean_s670
let lean_s672 := by timed congr lean_s474 lean_s671
let lean_s673 := by timed congr lean_s452 lean_s672
let lean_s674 := by timed congr lean_s429 lean_s673
let lean_s675 := by timed congr lean_s403 lean_s674
let lean_s676 := by timed congr lean_s377 lean_s675
have lean_s677 : (Eq let290 let237) := by timed congr lean_s357 lean_s676
have lean_s678 : (Eq let290 let236) := by timed Eq.trans lean_s677 lean_r28
have lean_s679 : (Eq let76 let236) := by timed Eq.trans lean_r68 lean_s678
let lean_s680 := by timed congr lean_s0 lean_s679
have lean_s681 : (Eq let1 let1) := by timed rfl
let lean_s682 := by timed congr lean_s680 lean_s681
let lean_s683 := by timed congr lean_s333 lean_s682
let lean_s684 := by timed congr lean_s25 lean_s683
let lean_s685 := by timed congr lean_s23 lean_s684
let lean_s686 := by timed congr lean_s18 lean_s685
let lean_s687 := by timed congr lean_s16 lean_s686
let lean_s688 := by timed congr lean_s14 lean_s687
let lean_s689 := by timed congr lean_s12 lean_s688
let lean_s690 := by timed congr lean_s10 lean_s689
let lean_s691 := by timed congr lean_s8 lean_s690
let lean_s692 := by timed congr lean_s6 lean_s691
let lean_s693 := by timed congr lean_s4 lean_s692
let lean_s694 := by timed congr lean_s2 lean_s693
have lean_s695 : (Eq let141 let303) := by timed congr lean_s1 lean_s694
have lean_s696 : (Eq let142 let303) := by timed Eq.trans lean_r0 lean_s695
have lean_s697 : let303 := by timed eqResolve lean_a83 lean_s696
have lean_s698 : let260 := by andElim lean_s697, 12
have lean_s699 : (Or let300 let260) := by timed @cnfOrPos [let259, let258, let257, let255, let253, let252, let251, let249, let203]
have lean_s700 : (Or let313 let155) := by timed @cnfAndPos [let129, let84, let83, let16, let189, let188, let155, let82, let154] 6
have lean_s701 : (Or let302 (Or xx5f2 (Not xx5f17))) := by timed cnfEquivPos2
have lean_s702 : let303 := by timed eqResolve lean_a83 lean_s696
have lean_s703 : let138 := by andElim lean_s702, 4
let lean_s704 := by R1 lean_s701, lean_s703, xx5f2, [(- 1), 0]
have lean_s705 : let303 := by timed eqResolve lean_a83 lean_s696
have lean_s706 : let1 := by andElim lean_s705, 14
have lean_s707 : let138 := by andElim lean_s702, 4
have lean_s708 : xx5f17 := by R1 lean_s706, lean_s707, xx5f2, [(- 1), 0]
have lean_s709 : let302 := by R2 lean_s704, lean_s708, xx5f17, [(- 1), 0]
have lean_s710 : let313 := by R1 lean_s700, lean_s709, let155, [(- 1), 0]
let lean_s711 := by R1 lean_s699, lean_s710, let259, [(- 1), 0]
have lean_s712 : (Or let312 let155) := by timed @cnfAndPos [let127, let84, let83, let16, xx5f18, let126, let82, let155, let154] 7
let lean_s713 := by R1 lean_s701, lean_s703, xx5f2, [(- 1), 0]
have lean_s714 : let302 := by R2 lean_s713, lean_s708, xx5f17, [(- 1), 0]
have lean_s715 : let312 := by R1 lean_s712, lean_s714, let155, [(- 1), 0]
let lean_s716 := by R1 lean_s711, lean_s715, let258, [(- 1), 0]
have lean_s717 : (Or let311 let155) := by timed @cnfAndPos [let124, let84, let83, xx5f15, let185, let159, let155, let189, let188, let154] 6
let lean_s718 := by R1 lean_s701, lean_s703, xx5f2, [(- 1), 0]
have lean_s719 : let302 := by R2 lean_s718, lean_s708, xx5f17, [(- 1), 0]
have lean_s720 : let311 := by R1 lean_s717, lean_s719, let155, [(- 1), 0]
let lean_s721 := by R1 lean_s716, lean_s720, let257, [(- 1), 0]
have lean_s722 : (Or let310 xx5f0) := by timed @cnfAndPos [let118, xx5f0, let83, let16, let189, let188, let155, let82, let154] 1
have lean_s723 : let303 := by timed eqResolve lean_a83 lean_s696
have lean_s724 : let84 := by andElim lean_s723, 2
have lean_s725 : let310 := by R1 lean_s722, lean_s724, xx5f0, [(- 1), 0]
let lean_s726 := by R1 lean_s721, lean_s725, let255, [(- 1), 0]
have lean_s727 : (Or let309 xx5f0) := by timed @cnfAndPos [let116, xx5f0, let83, xx5f15, let195, let159, let155, let189, let188, let154] 1
have lean_s728 : let84 := by andElim lean_s723, 2
have lean_s729 : let309 := by R1 lean_s727, lean_s728, xx5f0, [(- 1), 0]
let lean_s730 := by R1 lean_s726, lean_s729, let253, [(- 1), 0]
have lean_s731 : (Or let308 xx5f1) := by timed @cnfAndPos [let113, let84, xx5f1, let16, xx5f18, xx5f19, let155, let82, let154] 2
have lean_s732 : let303 := by timed eqResolve lean_a83 lean_s696
have lean_s733 : let83 := by andElim lean_s732, 3
have lean_s734 : let308 := by R1 lean_s731, lean_s733, xx5f1, [(- 1), 0]
let lean_s735 := by R1 lean_s730, lean_s734, let252, [(- 1), 0]
have lean_s736 : (Or let307 xx5f1) := by timed @cnfAndPos [let111, let84, xx5f1, xx5f15, let191, let159, let155, let189, let188, let154] 2
have lean_s737 : let83 := by andElim lean_s732, 3
have lean_s738 : let307 := by R1 lean_s736, lean_s737, xx5f1, [(- 1), 0]
let lean_s739 := by R1 lean_s735, lean_s738, let251, [(- 1), 0]
have lean_s740 : (Or let306 xx5f0) := by timed @cnfAndPos [let107, xx5f0, xx5f1, let189, let188, let155, let82, let154] 1
have lean_s741 : let84 := by andElim lean_s723, 2
have lean_s742 : let306 := by R1 lean_s740, lean_s741, xx5f0, [(- 1), 0]
let lean_s743 := by R1 lean_s739, lean_s742, let249, [(- 1), 0]
have lean_s744 : (Or let301 let155) := by timed @cnfAndPos [let105, let163, let202, let198, let197, let194, let193, let85, let82, let155, let189, let188, let154] 9
let lean_s745 := by R1 lean_s701, lean_s703, xx5f2, [(- 1), 0]
have lean_s746 : let302 := by R2 lean_s745, lean_s708, xx5f17, [(- 1), 0]
have lean_s747 : let301 := by R1 lean_s744, lean_s746, let155, [(- 1), 0]
have lean_s748 : let300 := by R1 lean_s743, lean_s747, let203, [(- 1), 0]
exact (show False from by timed contradiction lean_s698 lean_s748)


