open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000


universe u
variable {I : Type u} [Nonempty I]
variable {e2 : I}
variable {e1 : I}
variable {e0 : I}
variable {op : (I -> I -> I)}
variable {e4 : I}
variable {e2 : I}
variable {e3 : I}
variable {e1 : I}
variable {e0 : I}
variable {op : (I -> I -> I)}
variable {e4 : I}
variable {e3 : I}

theorem th0 :
  let let1 := (op e4 e4)
  let let2 := (op e4 e2)
  let let3 := (Eq let2 let1)
  let let4 := (Not let3)
  let let5 := (Not let4)
  let let6 := (Eq let3 let5)
  let let7 := (Eq let5 let3)
  let let8 := (Eq let3 let3)
  let let9 := (op e3 e3)
  let let10 := (op e1 e3)
  let let11 := (Eq let10 let9)
  let let12 := (Not let11)
  let let13 := (Not let12)
  let let14 := (Eq let11 let13)
  let let15 := (Eq let13 let11)
  let let16 := (Eq let11 let11)
  let let17 := (Eq e4 e3)
  let let18 := (Not let17)
  let let19 := (Not let18)
  let let20 := (Eq let17 let19)
  let let21 := (Eq let19 let17)
  let let22 := (Eq let17 let17)
  let let23 := (Eq e4 e0)
  let let24 := (Not let23)
  let let25 := (Not let24)
  let let26 := (Eq let23 let25)
  let let27 := (Eq let25 let23)
  let let28 := (Eq let23 let23)
  let let29 := (Eq e4 let10)
  let let30 := (op e3 e4)
  let let31 := (Eq e2 let30)
  let let32 := (op e2 e3)
  let let33 := (Eq e0 let32)
  let let34 := (And let33 (And let31 let29))
  let let35 := (And (And let33 let31) let29)
  let let36 := (op e0 e4)
  let let37 := (op e0 e2)
  let let38 := (Eq let37 let36)
  let let39 := (Not let38)
  let let40 := (Not let39)
  let let41 := (Eq let38 let40)
  let let42 := (Eq let40 let38)
  let let43 := (op e1 e2)
  let let44 := (op e1 e1)
  let let45 := (Eq let44 let43)
  let let46 := (Not let45)
  let let47 := (Not let46)
  let let48 := (Eq let45 let47)
  let let49 := (Eq let47 let45)
  let let50 := (Eq let45 let45)
  let let51 := (op e0 e0)
  let let52 := (Eq let51 let37)
  let let53 := (Not let52)
  let let54 := (Not let53)
  let let55 := (Eq let54 let52)
  let let56 := (Eq e1 let2)
  let let57 := (op e1 e4)
  let let58 := (Eq e0 let57)
  let let59 := (And let58 (And let56 let31))
  let let60 := (And (And let58 let56) let31)
  let let61 := (op e4 e0)
  let let62 := (Eq e3 let61)
  let let63 := (And let31 (And let62 let58))
  let let64 := (And (And let31 let62) let58)
  let let65 := (op e0 e3)
  let let66 := (Eq let37 let65)
  let let67 := (Not let66)
  let let68 := (Not let67)
  let let69 := (Eq let66 let68)
  let let70 := (Eq let68 let66)
  let let71 := (op e3 e0)
  let let72 := (Eq let51 let71)
  let let73 := (Not let72)
  let let74 := (Not let73)
  let let75 := (Eq let72 let74)
  let let76 := (Eq let74 let72)
  let let77 := (Eq let66 let66)
  let let78 := (Eq let72 let72)
  let let79 := (op e4 e1)
  let let80 := (Eq let79 let2)
  let let81 := (Eq let80 let80)
  let let82 := (Eq e3 e1)
  let let83 := (Not let82)
  let let84 := (Not let83)
  let let85 := (Eq let84 let82)
  let let86 := (Eq let82 let82)
  let let87 := (Eq e2 let36)
  let let88 := (Eq e3 let57)
  let let89 := (And let88 (And let56 let87))
  let let90 := (And (And let88 let56) let87)
  let let91 := (op e4 e3)
  let let92 := (Eq let79 let91)
  let let93 := (Not let92)
  let let94 := (Not let93)
  let let95 := (Eq let94 let92)
  let let96 := (Eq let92 let92)
  let let97 := (Eq e3 let36)
  let let98 := (Eq e2 let91)
  let let99 := (op e2 e4)
  let let100 := (Eq e1 let99)
  let let101 := (And let100 (And let98 let97))
  let let102 := (And (And let100 let98) let97)
  let let103 := (Eq let52 let52)
  let let104 := (Not let80)
  let let105 := (Not let104)
  let let106 := (Eq let80 let105)
  let let107 := (Eq let105 let80)
  let let108 := (Eq e0 let91)
  let let109 := (Eq e2 let71)
  let let110 := (Eq e1 let32)
  let let111 := (And let110 (And let109 let108))
  let let112 := (And (And let110 let109) let108)
  let let113 := (op e0 e1)
  let let114 := (Eq let51 let113)
  let let115 := (Not let114)
  let let116 := (Not let115)
  let let117 := (Eq let114 let116)
  let let118 := (Eq let116 let114)
  let let119 := (Eq let114 let114)
  let let120 := (Eq e1 let30)
  let let121 := (Eq let120 let120)
  let let122 := (Eq e2 let57)
  let let123 := (Eq e0 let2)
  let let124 := (And let97 (And let123 let122))
  let let125 := (And (And let97 let123) let122)
  let let126 := (Eq let57 let99)
  let let127 := (Not let126)
  let let128 := (Not let127)
  let let129 := (Eq let126 let128)
  let let130 := (Eq let128 let126)
  let let131 := (Eq let126 let126)
  let let132 := (op e2 e1)
  let let133 := (Eq let44 let132)
  let let134 := (Not let133)
  let let135 := (Not let134)
  let let136 := (Eq let133 let135)
  let let137 := (Eq let135 let133)
  let let138 := (Eq e0 let79)
  let let139 := (And let87 (And let138 let120))
  let let140 := (And (And let87 let138) let120)
  let let141 := (Eq e3 let99)
  let let142 := (Eq e1 let91)
  let let143 := (And let58 (And let142 let141))
  let let144 := (And (And let58 let142) let141)
  let let145 := (Eq e0 let99)
  let let146 := (And let120 (And let62 let145))
  let let147 := (And (And let120 let62) let145)
  let let148 := (Eq e3 let2)
  let let149 := (And let120 (And let148 let87))
  let let150 := (And (And let120 let148) let87)
  let let151 := (Eq e0 let30)
  let let152 := (Not let151)
  let let153 := (Not let152)
  let let154 := (Eq let151 let153)
  let let155 := (Eq let153 let151)
  let let156 := (Eq let51 e4)
  let let157 := (Eq let51 e3)
  let let158 := (Eq let51 e2)
  let let159 := (Eq let51 e1)
  let let160 := (Eq let51 e0)
  let let161 := (Or let160 (Or let159 (Or let158 (Or let157 let156))))
  let let162 := (Or (Or (Or (Or let160 let159) let158) let157) let156)
  let let163 := (Eq let113 e4)
  let let164 := (Eq let113 e3)
  let let165 := (Eq let113 e2)
  let let166 := (Eq let113 e1)
  let let167 := (Eq let113 e0)
  let let168 := (Or let167 (Or let166 (Or let165 (Or let164 let163))))
  let let169 := (Or (Or (Or (Or let167 let166) let165) let164) let163)
  let let170 := (Eq let36 e4)
  let let171 := (Eq let36 e3)
  let let172 := (Eq let36 e2)
  let let173 := (Eq let36 e1)
  let let174 := (Eq let36 e0)
  let let175 := (Or let174 (Or let173 (Or let172 (Or let171 let170))))
  let let176 := (Or (Or (Or (Or let174 let173) let172) let171) let170)
  let let177 := (op e1 e0)
  let let178 := (Eq let177 e4)
  let let179 := (Eq let177 e3)
  let let180 := (Eq let177 e2)
  let let181 := (Eq let177 e1)
  let let182 := (Eq let177 e0)
  let let183 := (Or let182 (Or let181 (Or let180 (Or let179 let178))))
  let let184 := (Or (Or (Or (Or let182 let181) let180) let179) let178)
  let let185 := (Eq let44 e4)
  let let186 := (Eq let44 e3)
  let let187 := (Eq let44 e2)
  let let188 := (Eq let44 e1)
  let let189 := (Eq let44 e0)
  let let190 := (Or let189 (Or let188 (Or let187 (Or let186 let185))))
  let let191 := (Or (Or (Or (Or let189 let188) let187) let186) let185)
  let let192 := (Eq let10 e4)
  let let193 := (Eq let10 e3)
  let let194 := (Eq let10 e2)
  let let195 := (Eq let10 e1)
  let let196 := (Eq let10 e0)
  let let197 := (Or let196 (Or let195 (Or let194 (Or let193 let192))))
  let let198 := (Or (Or (Or (Or let196 let195) let194) let193) let192)
  let let199 := (op e2 e0)
  let let200 := (Eq let199 e4)
  let let201 := (Eq let199 e3)
  let let202 := (Eq let199 e2)
  let let203 := (Eq let199 e1)
  let let204 := (Eq let199 e0)
  let let205 := (Or let204 (Or let203 (Or let202 (Or let201 let200))))
  let let206 := (Or (Or (Or (Or let204 let203) let202) let201) let200)
  let let207 := (op e2 e2)
  let let208 := (Eq let207 e4)
  let let209 := (Eq let207 e3)
  let let210 := (Eq let207 e2)
  let let211 := (Eq let207 e1)
  let let212 := (Eq let207 e0)
  let let213 := (Or let212 (Or let211 (Or let210 (Or let209 let208))))
  let let214 := (Or (Or (Or (Or let212 let211) let210) let209) let208)
  let let215 := (Eq let32 e4)
  let let216 := (Eq let32 e3)
  let let217 := (Eq let32 e2)
  let let218 := (Eq let32 e1)
  let let219 := (Eq let32 e0)
  let let220 := (Or let219 (Or let218 (Or let217 (Or let216 let215))))
  let let221 := (Or (Or (Or (Or let219 let218) let217) let216) let215)
  let let222 := (Eq let71 e4)
  let let223 := (Eq let71 e3)
  let let224 := (Eq let71 e2)
  let let225 := (Eq let71 e1)
  let let226 := (Eq let71 e0)
  let let227 := (Or let226 (Or let225 (Or let224 (Or let223 let222))))
  let let228 := (Or (Or (Or (Or let226 let225) let224) let223) let222)
  let let229 := (op e3 e1)
  let let230 := (Eq let229 e4)
  let let231 := (Eq let229 e3)
  let let232 := (Eq let229 e2)
  let let233 := (Eq let229 e1)
  let let234 := (Eq let229 e0)
  let let235 := (Or let234 (Or let233 (Or let232 (Or let231 let230))))
  let let236 := (Or (Or (Or (Or let234 let233) let232) let231) let230)
  let let237 := (op e3 e2)
  let let238 := (Eq let237 e4)
  let let239 := (Eq let237 e3)
  let let240 := (Eq let237 e2)
  let let241 := (Eq let237 e1)
  let let242 := (Eq let237 e0)
  let let243 := (Or let242 (Or let241 (Or let240 (Or let239 let238))))
  let let244 := (Or (Or (Or (Or let242 let241) let240) let239) let238)
  let let245 := (Eq let9 e4)
  let let246 := (Eq let9 e3)
  let let247 := (Eq let9 e2)
  let let248 := (Eq let9 e1)
  let let249 := (Eq let9 e0)
  let let250 := (Or let249 (Or let248 (Or let247 (Or let246 let245))))
  let let251 := (Or (Or (Or (Or let249 let248) let247) let246) let245)
  let let252 := (Eq let61 e4)
  let let253 := (Eq let61 e3)
  let let254 := (Eq let61 e2)
  let let255 := (Eq let61 e1)
  let let256 := (Eq let61 e0)
  let let257 := (Or let256 (Or let255 (Or let254 (Or let253 let252))))
  let let258 := (Or (Or (Or (Or let256 let255) let254) let253) let252)
  let let259 := (Eq let2 e4)
  let let260 := (Eq let2 e3)
  let let261 := (Eq let2 e2)
  let let262 := (Eq let2 e1)
  let let263 := (Eq let2 e0)
  let let264 := (Or let263 (Or let262 (Or let261 (Or let260 let259))))
  let let265 := (Or (Or (Or (Or let263 let262) let261) let260) let259)
  let let266 := (Eq e2 let229)
  let let267 := (Eq e4 let43)
  let let268 := (And let138 (And let267 let266))
  let let269 := (And (And let138 let267) let266)
  let let270 := (Eq e4 e1)
  let let271 := (Not let270)
  let let272 := (Not let271)
  let let273 := (Eq let270 let272)
  let let274 := (Eq let272 let270)
  let let275 := (Eq e2 let65)
  let let276 := (And let275 (And let151 let29))
  let let277 := (And (And let275 let151) let29)
  let let278 := (Eq e3 let79)
  let let279 := (Eq e2 let10)
  let let280 := (Eq e0 let132)
  let let281 := (And let280 (And let279 let278))
  let let282 := (And (And let280 let279) let278)
  let let283 := (Eq e4 let177)
  let let284 := (And let278 (And let283 let280))
  let let285 := (And (And let278 let283) let280)
  let let286 := (And let145 (And let98 let88))
  let let287 := (And (And let145 let98) let88)
  let let288 := (Eq let51 let199)
  let let289 := (Not let288)
  let let290 := (Not let289)
  let let291 := (Eq let288 let290)
  let let292 := (Eq let290 let288)
  let let293 := (Eq let82 let84)
  let let294 := (Eq let288 let288)
  let let295 := (And let33 (And let266 let142))
  let let296 := (And (And let33 let266) let142)
  let let297 := (Eq let207 let237)
  let let298 := (Not let297)
  let let299 := (Not let298)
  let let300 := (Eq let299 let297)
  let let301 := (Eq let36 let99)
  let let302 := (Not let301)
  let let303 := (Not let302)
  let let304 := (Eq let301 let303)
  let let305 := (Eq let303 let301)
  let let306 := (Eq e4 e2)
  let let307 := (Not let306)
  let let308 := (Not let307)
  let let309 := (Eq let306 let308)
  let let310 := (Eq let308 let306)
  let let311 := (Eq let301 let301)
  let let312 := (Eq let306 let306)
  let let313 := (Eq e1 let36)
  let let314 := (Eq e2 let79)
  let let315 := (And let141 (And let314 let313))
  let let316 := (And (And let141 let314) let313)
  let let317 := (And let122 (And let142 let97))
  let let318 := (And (And let122 let142) let97)
  let let319 := (And let151 (And let148 let122))
  let let320 := (And (And let151 let148) let122)
  let let321 := (Eq let207 let99)
  let let322 := (Not let321)
  let let323 := (Not let322)
  let let324 := (Eq let321 let323)
  let let325 := (Eq let323 let321)
  let let326 := (Eq let321 let321)
  let let327 := (Eq let51 let177)
  let let328 := (Not let327)
  let let329 := (Not let328)
  let let330 := (Eq let327 let329)
  let let331 := (Eq let329 let327)
  let let332 := (Eq let327 let327)
  let let333 := (Eq let36 let57)
  let let334 := (Not let333)
  let let335 := (Not let334)
  let let336 := (Eq let333 let335)
  let let337 := (Eq let335 let333)
  let let338 := (Eq e3 e0)
  let let339 := (Not let338)
  let let340 := (Not let339)
  let let341 := (Eq let338 let340)
  let let342 := (Eq let340 let338)
  let let343 := (Eq let338 let338)
  let let344 := (Eq let2 let91)
  let let345 := (Not let344)
  let let346 := (Not let345)
  let let347 := (Eq let344 let346)
  let let348 := (Eq let346 let344)
  let let349 := (Eq let344 let344)
  let let350 := (op e4 let91)
  let let351 := (Eq e3 let350)
  let let352 := (Not let351)
  let let353 := (Not let352)
  let let354 := (Eq let351 let353)
  let let355 := (Eq let353 let351)
  let let356 := (Eq let61 let79)
  let let357 := (Not let356)
  let let358 := (Not let357)
  let let359 := (Eq let356 let358)
  let let360 := (Eq let358 let356)
  let let361 := (Eq let91 e4)
  let let362 := (Eq let91 e3)
  let let363 := (Eq let91 e2)
  let let364 := (Eq let91 e1)
  let let365 := (Eq let91 e0)
  let let366 := (Or let365 (Or let364 (Or let363 (Or let362 let361))))
  let let367 := (Or (Or (Or (Or let365 let364) let363) let362) let361)
  let let368 := (Eq let356 let356)
  let let369 := (Eq let9 let30)
  let let370 := (Not let369)
  let let371 := (Not let370)
  let let372 := (Eq let369 let371)
  let let373 := (Eq let371 let369)
  let let374 := (Eq let369 let369)
  let let375 := (Eq let51 let65)
  let let376 := (Not let375)
  let let377 := (Not let376)
  let let378 := (Eq let377 let375)
  let let379 := (Eq let44 let10)
  let let380 := (Not let379)
  let let381 := (Not let380)
  let let382 := (Eq let379 let381)
  let let383 := (Eq let381 let379)
  let let384 := (Eq let375 let375)
  let let385 := (Eq let379 let379)
  let let386 := (Eq let30 e0)
  let let387 := (Or let226 (Or let234 (Or let242 (Or let249 let386))))
  let let388 := (Or (Or (Or (Or let226 let234) let242) let249) let386)
  let let389 := (Eq e0 let71)
  let let390 := (Eq let65 e0)
  let let391 := (Or let390 (Or let196 (Or let219 (Or let249 let365))))
  let let392 := (Or (Or (Or (Or let390 let196) let219) let249) let365)
  let let393 := (Eq let79 e2)
  let let394 := (Eq let132 e2)
  let let395 := (Or let165 (Or let187 (Or let394 (Or let232 let393))))
  let let396 := (Or (Or (Or (Or let165 let187) let394) let232) let393)
  let let397 := (Eq e0 let65)
  let let398 := (Eq e2 let113)
  let let399 := (Eq e0 let10)
  let let400 := (Not let120)
  let let401 := (Not let400)
  let let402 := (Eq let120 let401)
  let let403 := (Eq let401 let120)
  let let404 := (Eq let30 e1)
  let let405 := (Or let225 (Or let233 (Or let241 (Or let248 let404))))
  let let406 := (Or (Or (Or (Or let225 let233) let241) let248) let404)
  let let407 := (Eq let132 let99)
  let let408 := (Not let407)
  let let409 := (Not let408)
  let let410 := (Eq let407 let409)
  let let411 := (Eq let409 let407)
  let let412 := (Eq let65 e1)
  let let413 := (Or let412 (Or let195 (Or let218 (Or let248 let364))))
  let let414 := (Or (Or (Or (Or let412 let195) let218) let248) let364)
  let let415 := (Eq let99 e3)
  let let416 := (Eq let132 e3)
  let let417 := (Or let201 (Or let416 (Or let209 (Or let216 let415))))
  let let418 := (Or (Or (Or (Or let201 let416) let209) let216) let415)
  let let419 := (Eq e3 let199)
  let let420 := (Eq let30 e2)
  let let421 := (Or let224 (Or let232 (Or let240 (Or let247 let420))))
  let let422 := (Or (Or (Or (Or let224 let232) let240) let247) let420)
  let let423 := (Eq let351 let351)
  let let424 := (Eq e3 let37)
  let let425 := (Eq let37 e3)
  let let426 := (Eq e4 let44)
  let let427 := (op e0 let37)
  let let428 := (Eq e2 let427)
  let let429 := (Eq let427 e2)
  let let430 := (And let313 (And let123 let31))
  let let431 := (And (And let313 let123) let31)
  let let432 := (Eq e3 e2)
  let let433 := (Not let432)
  let let434 := (Not let433)
  let let435 := (Eq let432 let434)
  let let436 := (Eq let434 let432)
  let let437 := (Eq e3 let43)
  let let438 := (Eq let43 e3)
  let let439 := (Eq e2 let237)
  let let440 := (Eq let65 e2)
  let let441 := (op e1 let57)
  let let442 := (Eq let441 e4)
  let let443 := (Not let442)
  let let444 := (op e1 let10)
  let let445 := (Eq let444 e3)
  let let446 := (Not let445)
  let let447 := (op e1 let43)
  let let448 := (Eq let447 e2)
  let let449 := (Not let448)
  let let450 := (op e1 let44)
  let let451 := (Eq let450 e1)
  let let452 := (Not let451)
  let let453 := (op e1 let177)
  let let454 := (Eq let453 e0)
  let let455 := (Not let454)
  let let456 := (Or let455 (Or let452 (Or let449 (Or let446 let443))))
  let let457 := (Or (Or (Or (Or let455 let452) let449) let446) let443)
  let let458 := (Eq let1 e4)
  let let459 := (Eq let1 e3)
  let let460 := (Eq let1 e2)
  let let461 := (Eq let1 e1)
  let let462 := (Eq let1 e0)
  let let463 := (Or (Or (Or (Or let462 let461) let460) let459) let458)
  let let464 := (Eq let79 e4)
  let let465 := (Eq let79 e3)
  let let466 := (Eq let79 e1)
  let let467 := (Eq let79 e0)
  let let468 := (Or (Or (Or (Or let467 let466) let393) let465) let464)
  let let469 := (Eq let30 e4)
  let let470 := (Eq let30 e3)
  let let471 := (Or (Or (Or (Or let386 let404) let420) let470) let469)
  let let472 := (Eq let99 e4)
  let let473 := (Eq let99 e2)
  let let474 := (Eq let99 e1)
  let let475 := (Eq let99 e0)
  let let476 := (Or (Or (Or (Or let475 let474) let473) let415) let472)
  let let477 := (Eq let132 e4)
  let let478 := (Eq let132 e1)
  let let479 := (Eq let132 e0)
  let let480 := (Or (Or (Or (Or let479 let478) let394) let416) let477)
  let let481 := (Eq let57 e4)
  let let482 := (Eq let57 e3)
  let let483 := (Eq let57 e2)
  let let484 := (Eq let57 e1)
  let let485 := (Eq let57 e0)
  let let486 := (Or (Or (Or (Or let485 let484) let483) let482) let481)
  let let487 := (Eq let43 e4)
  let let488 := (Eq let43 e2)
  let let489 := (Eq let43 e1)
  let let490 := (Eq let43 e0)
  let let491 := (Or (Or (Or (Or let490 let489) let488) let438) let487)
  let let492 := (Eq let65 e4)
  let let493 := (Eq let65 e3)
  let let494 := (Or (Or (Or (Or let390 let412) let440) let493) let492)
  let let495 := (Eq let37 e4)
  let let496 := (Eq let37 e2)
  let let497 := (Eq let37 e1)
  let let498 := (Eq let37 e0)
  let let499 := (Or (Or (Or (Or let498 let497) let496) let425) let495)
  let let500 := (And let162 (And let169 (And let499 (And let494 (And let176 (And let184 (And let191 (And let491 (And let198 (And let486 (And let206 (And let480 (And let214 (And let221 (And let476 (And let228 (And let236 (And let244 (And let251 (And let471 (And let258 (And let468 (And let265 (And let367 let463))))))))))))))))))))))))
  let let501 := (And (And (And (And (And (And (And (And let162 let169) let499) let494) let176) (And (And (And (And let184 let191) let491) let198) let486)) (And (And (And (And let206 let480) let214) let221) let476)) (And (And (And (And let228 let236) let244) let251) let471)) (And (And (And (And let258 let468) let265) let367) let463))
  let let502 := (Eq e0 let453)
  let let503 := (Or let485 (Or let484 (Or let483 (Or let482 let481))))
  let let504 := (Eq e2 let32)
  let let505 := (Eq e2 let9)
  let let506 := (Eq e3 let237)
  let let507 := (Or let475 (Or let474 (Or let473 (Or let415 let472))))
  let let508 := (Or let159 (Or let181 (Or let203 (Or let225 let255))))
  let let509 := (Or (Or (Or (Or let159 let181) let203) let225) let255)
  let let510 := (Eq e0 let229)
  let let511 := (Or let170 (Or let481 (Or let472 (Or let469 let458))))
  let let512 := (Or (Or (Or (Or let170 let481) let472) let469) let458)
  let let513 := (Or let256 (Or let467 (Or let263 (Or let365 let462))))
  let let514 := (Or (Or (Or (Or let256 let467) let263) let365) let462)
  let let515 := (Eq let133 let133)
  let let516 := (Eq e0 let61)
  let let517 := (Eq e0 let9)
  let let518 := (Or let174 (Or let485 (Or let475 (Or let386 let462))))
  let let519 := (Or (Or (Or (Or let174 let485) let475) let386) let462)
  let let520 := (Eq e0 let36)
  let let521 := (Or let467 (Or let466 (Or let393 (Or let465 let464))))
  let let522 := (Or let156 (Or let178 (Or let200 (Or let222 let252))))
  let let523 := (Or (Or (Or (Or let156 let178) let200) let222) let252)
  let let524 := (Eq e4 let51)
  let let525 := (Eq e0 let1)
  let let526 := (Or let495 (Or let487 (Or let208 (Or let238 let259))))
  let let527 := (Or (Or (Or (Or let495 let487) let208) let238) let259)
  let let528 := (Or let173 (Or let484 (Or let474 (Or let404 let461))))
  let let529 := (Or (Or (Or (Or let173 let484) let474) let404) let461)
  let let530 := (Eq e1 e0)
  let let531 := (Eq let530 let530)
  let let532 := (Eq e2 let177)
  let let533 := (Eq e1 let237)
  let let534 := (Eq let52 let54)
  let let535 := (Eq let44 let79)
  let let536 := (Eq let535 let535)
  let let537 := (Eq let207 let32)
  let let538 := (Not let537)
  let let539 := (Not let538)
  let let540 := (Eq let539 let537)
  let let541 := (Eq e1 let71)
  let let542 := (Eq e3 let207)
  let let543 := (Not let87)
  let let544 := (Not let543)
  let let545 := (Eq let544 let87)
  let let546 := (Eq e1 let61)
  let let547 := (Eq e4 let199)
  let let548 := (Eq let38 let38)
  let let549 := (Eq e2 e3)
  let let550 := (Or let498 (Or let497 (Or let496 (Or let425 let495))))
  let let551 := (Eq e1 e4)
  let let552 := (Or let223 (Or let231 (Or let239 (Or let246 let470))))
  let let553 := (Or (Or (Or (Or let223 let231) let239) let246) let470)
  let let554 := (Eq e1 let1)
  let let555 := (Eq e4 let237)
  let let556 := (Or let157 (Or let164 (Or let425 (Or let493 let171))))
  let let557 := (Or (Or (Or (Or let157 let164) let425) let493) let171)
  let let558 := (Eq let375 let377)
  let let559 := (Eq e2 e0)
  let let560 := (Eq e0 e2)
  let let561 := (Or let179 (Or let186 (Or let438 (Or let193 let482))))
  let let562 := (Or (Or (Or (Or let179 let186) let438) let193) let482)
  let let563 := (Eq e1 let177)
  let let564 := (Eq let44 let57)
  let let565 := (Eq let564 let564)
  let let566 := (Or let440 (Or let194 (Or let217 (Or let247 let363))))
  let let567 := (Or (Or (Or (Or let440 let194) let217) let247) let363)
  let let568 := (Eq let297 let299)
  let let569 := (Or let202 (Or let394 (Or let210 (Or let217 let473))))
  let let570 := (Or (Or (Or (Or let202 let394) let210) let217) let473)
  let let571 := (Or let479 (Or let478 (Or let394 (Or let416 let477))))
  let let572 := (Eq e3 let229)
  let let573 := (Eq e0 e1)
  let let574 := (Or let493 (Or let193 (Or let216 (Or let246 let362))))
  let let575 := (Or (Or (Or (Or let493 let193) let216) let246) let362)
  let let576 := (Or let158 (Or let165 (Or let496 (Or let440 let172))))
  let let577 := (Or (Or (Or (Or let158 let165) let496) let440) let172)
  let let578 := (Eq e1 let57)
  let let579 := (op e4 let1)
  let let580 := (Eq let579 e4)
  let let581 := (Not let580)
  let let582 := (Eq let350 e3)
  let let583 := (Not let582)
  let let584 := (op e4 let2)
  let let585 := (Eq let584 e2)
  let let586 := (Not let585)
  let let587 := (op e4 let79)
  let let588 := (Eq let587 e1)
  let let589 := (Not let588)
  let let590 := (op e4 let61)
  let let591 := (Eq let590 e0)
  let let592 := (Not let591)
  let let593 := (Or let592 (Or let589 (Or let586 (Or let583 let581))))
  let let594 := (Or (Or (Or (Or let592 let589) let586) let583) let581)
  let let595 := (Not let530)
  let let596 := (Not let595)
  let let597 := (Eq let530 let596)
  let let598 := (Eq let596 let530)
  let let599 := (Eq e2 let99)
  let let600 := (Or let253 (Or let465 (Or let260 (Or let362 let459))))
  let let601 := (Or (Or (Or (Or let253 let465) let260) let362) let459)
  let let602 := (Eq let199 let71)
  let let603 := (Not let602)
  let let604 := (Not let603)
  let let605 := (Eq let604 let602)
  let let606 := (Eq let207 let2)
  let let607 := (Not let606)
  let let608 := (Not let607)
  let let609 := (Eq let608 let606)
  let let610 := (Or let160 (Or let182 (Or let204 (Or let226 let256))))
  let let611 := (Or (Or (Or (Or let160 let182) let204) let226) let256)
  let let612 := (Eq e0 e4)
  let let613 := (Eq e3 let65)
  let let614 := (Eq let57 let30)
  let let615 := (Not let614)
  let let616 := (Not let615)
  let let617 := (Eq let614 let616)
  let let618 := (Eq let616 let614)
  let let619 := (Eq e1 let65)
  let let620 := (And let313 (And let108 let141))
  let let621 := (And (And let313 let108) let141)
  let let622 := (Eq e2 e4)
  let let623 := (Eq e3 let113)
  let let624 := (Eq e1 let587)
  let let625 := (Eq e2 e1)
  let let626 := (Eq e1 e2)
  let let627 := (And let88 (And let546 let145))
  let let628 := (And (And let88 let546) let145)
  let let629 := (Eq e0 let199)
  let let630 := (Eq e0 let113)
  let let631 := (Eq e4 let9)
  let let632 := (Or let497 (Or let489 (Or let211 (Or let241 let262))))
  let let633 := (Or (Or (Or (Or let497 let489) let211) let241) let262)
  let let634 := (Or let390 (Or let412 (Or let440 (Or let493 let492))))
  let let635 := (op e2 let32)
  let let636 := (Eq e3 let635)
  let let637 := (Eq let635 e3)
  let let638 := (Eq e1 let229)
  let let639 := (Eq e1 e3)
  let let640 := (Eq let432 let432)
  let let641 := (Eq let87 let87)
  let let642 := (Eq e1 let79)
  let let643 := (Eq e4 let132)
  let let644 := (Eq let537 let539)
  let let645 := (And let31 (And let278 let313))
  let let646 := (And (And let31 let278) let313)
  let let647 := (Eq e0 let590)
  let let648 := (And let145 (And let314 let120))
  let let649 := (And (And let145 let314) let120)
  let let650 := (Not let535)
  let let651 := (Not let650)
  let let652 := (Eq let651 let535)
  let let653 := (Eq e4 let37)
  let let654 := (op e3 let30)
  let let655 := (Eq let654 e4)
  let let656 := (Not let655)
  let let657 := (op e3 let9)
  let let658 := (Eq let657 e3)
  let let659 := (Not let658)
  let let660 := (op e3 let237)
  let let661 := (Eq let660 e2)
  let let662 := (Not let661)
  let let663 := (op e3 let229)
  let let664 := (Eq let663 e1)
  let let665 := (Not let664)
  let let666 := (op e3 let71)
  let let667 := (Eq let666 e0)
  let let668 := (Not let667)
  let let669 := (Or (Or (Or (Or let668 let665) let662) let659) let656)
  let let670 := (op e2 let99)
  let let671 := (Eq let670 e4)
  let let672 := (Not let671)
  let let673 := (Not let637)
  let let674 := (op e2 let207)
  let let675 := (Eq let674 e2)
  let let676 := (Not let675)
  let let677 := (op e2 let132)
  let let678 := (Eq let677 e1)
  let let679 := (Not let678)
  let let680 := (op e2 let199)
  let let681 := (Eq let680 e0)
  let let682 := (Not let681)
  let let683 := (Or (Or (Or (Or let682 let679) let676) let673) let672)
  let let684 := (op e0 let36)
  let let685 := (Eq let684 e4)
  let let686 := (Not let685)
  let let687 := (op e0 let65)
  let let688 := (Eq let687 e3)
  let let689 := (Not let688)
  let let690 := (Not let429)
  let let691 := (op e0 let113)
  let let692 := (Eq let691 e1)
  let let693 := (Not let692)
  let let694 := (op e0 let51)
  let let695 := (Eq let694 e0)
  let let696 := (Not let695)
  let let697 := (Or (Or (Or (Or let696 let693) let690) let689) let686)
  let let698 := (And let697 (And let457 (And let683 (And let669 let594))))
  let let699 := (And (And (And (And let697 let457) let683) let669) let594)
  let let700 := (Or let172 (Or let483 (Or let473 (Or let420 let460))))
  let let701 := (Or (Or (Or (Or let172 let483) let473) let420) let460)
  let let702 := (Eq e4 let91)
  let let703 := (Eq e2 let2)
  let let704 := (Eq e2 let584)
  let let705 := (Eq let704 let704)
  let let706 := (Eq let559 let559)
  let let707 := (Eq let30 let1)
  let let708 := (Not let707)
  let let709 := (Not let708)
  let let710 := (Eq let709 let707)
  let let711 := (Eq e4 let99)
  let let712 := (Eq e0 let43)
  let let713 := (Eq e4 let2)
  let let714 := (Not let704)
  let let715 := (Not let714)
  let let716 := (Eq let715 let704)
  let let717 := (Eq e2 let61)
  let let718 := (And let141 (And let717 let58))
  let let719 := (And (And let141 let717) let58)
  let let720 := (Eq e3 let657)
  let let721 := (Not let559)
  let let722 := (Not let721)
  let let723 := (Eq let722 let559)
  let let724 := (Eq let707 let709)
  let let725 := (Eq e4 let57)
  let let726 := (Eq e0 let37)
  let let727 := (Eq e4 let1)
  let let728 := (Eq let704 let715)
  let let729 := (Eq let559 let722)
  let let730 := (Eq e4 let36)
  let let731 := (Or let498 (Or let490 (Or let212 (Or let242 let263))))
  let let732 := (Or (Or (Or (Or let498 let490) let212) let242) let263)
  let let733 := (Eq e4 let79)
  let let734 := (Eq e3 let9)
  let let735 := (Eq e4 let61)
  let let736 := (Or let254 (Or let393 (Or let261 (Or let363 let460))))
  let let737 := (Or (Or (Or (Or let254 let393) let261) let363) let460)
  let let738 := (Eq e2 let207)
  let let739 := (Eq e2 let447)
  let let740 := (Or let252 (Or let464 (Or let259 (Or let361 let458))))
  let let741 := (Or (Or (Or (Or let252 let464) let259) let361) let458)
  let let742 := (Eq let707 let707)
  let let743 := (Eq e0 e3)
  let let744 := (Eq e4 let30)
  let let745 := (Eq e0 let207)
  let let746 := (Or let490 (Or let489 (Or let488 (Or let438 let487))))
  let let747 := (Eq e3 let1)
  let let748 := (Eq e3 let30)
  let let749 := (Or let462 (Or let461 (Or let460 (Or let459 let458))))
  let let750 := (Eq e0 let44)
  let let751 := (Or let204 (Or let479 (Or let212 (Or let219 let475))))
  let let752 := (Or (Or (Or (Or let204 let479) let212) let219) let475)
  let let753 := (Or let171 (Or let482 (Or let415 (Or let470 let459))))
  let let754 := (Or (Or (Or (Or let171 let482) let415) let470) let459)
  let let755 := (Eq e3 e4)
  let let756 := (Not let755)
  let let757 := (Not let622)
  let let758 := (Not let549)
  let let759 := (Not let551)
  let let760 := (Not let639)
  let let761 := (Not let626)
  let let762 := (Not let612)
  let let763 := (Not let743)
  let let764 := (Not let560)
  let let765 := (Not let573)
  let let766 := (And let765 (And let764 (And let763 (And let762 (And let761 (And let760 (And let759 (And let758 (And let757 let756)))))))))
  let let767 := (And (And (And (And (And (And (And (And (And let765 let764) let763) let762) let761) let760) let759) let758) let757) let756)
  let let768 := (Eq e3 let71)
  let let769 := (Eq let91 let1)
  let let770 := (Not let769)
  let let771 := (Not (Eq let79 let1))
  let let772 := (Not (Eq let61 let1))
  let let773 := (Eq let61 let91)
  let let774 := (Not let773)
  let let775 := (Not (Eq let61 let2))
  let let776 := (Not (Eq let237 let30))
  let let777 := (Not (Eq let237 let9))
  let let778 := (Not (Eq let229 let30))
  let let779 := (Not (Eq let229 let9))
  let let780 := (Not (Eq let229 let237))
  let let781 := (Not (Eq let71 let30))
  let let782 := (Not (Eq let71 let9))
  let let783 := (Not (Eq let71 let237))
  let let784 := (Not (Eq let71 let229))
  let let785 := (Eq let32 let99)
  let let786 := (Not let785)
  let let787 := (Not (Eq let132 let32))
  let let788 := (Not (Eq let132 let207))
  let let789 := (Not (Eq let199 let99))
  let let790 := (Not (Eq let199 let32))
  let let791 := (Not (Eq let199 let207))
  let let792 := (Not (Eq let199 let132))
  let let793 := (Eq let10 let57)
  let let794 := (Not let793)
  let let795 := (Eq let43 let57)
  let let796 := (Not let795)
  let let797 := (Not (Eq let43 let10))
  let let798 := (Not let564)
  let let799 := (Not (Eq let177 let57))
  let let800 := (Not (Eq let177 let10))
  let let801 := (Not (Eq let177 let43))
  let let802 := (Not (Eq let177 let44))
  let let803 := (Eq let65 let36)
  let let804 := (Not let803)
  let let805 := (Not (Eq let113 let36))
  let let806 := (Not (Eq let113 let65))
  let let807 := (Not (Eq let113 let37))
  let let808 := (Eq let51 let36)
  let let809 := (Not let808)
  let let810 := (Not (Eq let99 let1))
  let let811 := (Not (Eq let99 let30))
  let let812 := (Not (Eq let57 let1))
  let let813 := (Not (Eq let36 let1))
  let let814 := (Not (Eq let36 let30))
  let let815 := (Eq let9 let91)
  let let816 := (Not let815)
  let let817 := (Eq let32 let91)
  let let818 := (Not let817)
  let let819 := (Not (Eq let32 let9))
  let let820 := (Not (Eq let10 let91))
  let let821 := (Not (Eq let10 let32))
  let let822 := (Not (Eq let65 let91))
  let let823 := (Not (Eq let65 let9))
  let let824 := (Not (Eq let65 let32))
  let let825 := (Not (Eq let65 let10))
  let let826 := (Not (Eq let237 let2))
  let let827 := (Eq let43 let2)
  let let828 := (Not let827)
  let let829 := (Not (Eq let43 let237))
  let let830 := (Not (Eq let43 let207))
  let let831 := (Not (Eq let37 let2))
  let let832 := (Not (Eq let37 let237))
  let let833 := (Not (Eq let37 let207))
  let let834 := (Not (Eq let37 let43))
  let let835 := (Eq let229 let79)
  let let836 := (Not let835)
  let let837 := (Eq let132 let79)
  let let838 := (Not let837)
  let let839 := (Not (Eq let132 let229))
  let let840 := (Eq let44 let229)
  let let841 := (Not let840)
  let let842 := (Not (Eq let113 let79))
  let let843 := (Not (Eq let113 let229))
  let let844 := (Not (Eq let113 let132))
  let let845 := (Not (Eq let113 let44))
  let let846 := (Eq let71 let61)
  let let847 := (Not let846)
  let let848 := (Eq let199 let61)
  let let849 := (Not let848)
  let let850 := (Not (Eq let177 let61))
  let let851 := (Not (Eq let177 let71))
  let let852 := (Not (Eq let177 let199))
  let let853 := (Eq let51 let61)
  let let854 := (Not let853)
  let let855 := (And let328 (And let289 (And let73 (And let854 (And let852 (And let851 (And let850 (And let603 (And let849 (And let847 (And let845 (And let844 (And let843 (And let842 (And let134 (And let841 (And let650 (And let839 (And let838 (And let836 (And let834 (And let833 (And let832 (And let831 (And let830 (And let829 (And let828 (And let298 (And let607 (And let826 (And let825 (And let824 (And let823 (And let822 (And let821 (And let12 (And let820 (And let819 (And let818 (And let816 (And let334 (And let302 (And let814 (And let813 (And let127 (And let615 (And let812 (And let811 (And let810 (And let708 (And let115 (And let53 (And let376 (And let809 (And let807 (And let806 (And let805 (And let67 (And let39 (And let804 (And let802 (And let801 (And let800 (And let799 (And let46 (And let380 (And let798 (And let797 (And let796 (And let794 (And let792 (And let791 (And let790 (And let789 (And let788 (And let787 (And let408 (And let538 (And let322 (And let786 (And let784 (And let783 (And let782 (And let781 (And let780 (And let779 (And let778 (And let777 (And let776 (And let370 (And let357 (And let775 (And let774 (And let772 (And let104 (And let93 (And let771 (And let345 (And let4 let770)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  let let856 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And let328 let289) let73) let854) let852) let851) let850) let603) let849) let847) (And (And (And (And (And (And (And (And (And let845 let844) let843) let842) let134) let841) let650) let839) let838) let836)) (And (And (And (And (And (And (And (And (And let834 let833) let832) let831) let830) let829) let828) let298) let607) let826)) (And (And (And (And (And (And (And (And (And let825 let824) let823) let822) let821) let12) let820) let819) let818) let816)) (And (And (And (And (And (And (And (And (And let334 let302) let814) let813) let127) let615) let812) let811) let810) let708)) (And (And (And (And (And (And (And (And (And (And (And (And (And let115 let53) let376) let809) let807) let806) let805) let67) let39) let804) (And (And (And (And (And (And (And (And (And let802 let801) let800) let799) let46) let380) let798) let797) let796) let794)) (And (And (And (And (And (And (And (And (And let792 let791) let790) let789) let788) let787) let408) let538) let322) let786)) (And (And (And (And (And (And (And (And (And let784 let783) let782) let781) let780) let779) let778) let777) let776) let370)) (And (And (And (And (And (And (And (And (And let357 let775) let774) let772) let104) let93) let771) let345) let4) let770)))
  let let857 := (Eq e2 let1)
  let let858 := (Eq let87 let544)
  let let859 := (Or let255 (Or let466 (Or let262 (Or let364 let461))))
  let let860 := (Or (Or (Or (Or let255 let466) let262) let364) let461)
  let let861 := (Or let200 (Or let477 (Or let208 (Or let215 let472))))
  let let862 := (Or (Or (Or (Or let200 let477) let208) let215) let472)
  let let863 := (Or let425 (Or let438 (Or let209 (Or let239 let260))))
  let let864 := (Or (Or (Or (Or let425 let438) let209) let239) let260)
  let let865 := (Eq e3 let132)
  let let866 := (Eq e2 let132)
  let let867 := (Eq e2 let199)
  let let868 := (Eq let840 let840)
  let let869 := (Eq e4 let229)
  let let870 := (Eq e1 let207)
  let let871 := (Not let841)
  let let872 := (Eq let871 let840)
  let let873 := (Eq e4 let71)
  let let874 := (Eq e1 let43)
  let let875 := (Eq let840 let871)
  let let876 := (Or let222 (Or let230 (Or let238 (Or let245 let469))))
  let let877 := (Or (Or (Or (Or let222 let230) let238) let245) let469)
  let let878 := (Eq e1 let37)
  let let879 := (Eq e1 let132)
  let let880 := (Not let774)
  let let881 := (Eq let773 let880)
  let let882 := (Eq let880 let773)
  let let883 := (Eq e3 let32)
  let let884 := (Eq e1 let199)
  let let885 := (Eq e1 let677)
  let let886 := (Eq e3 let10)
  let let887 := (Or let159 (Or let166 (Or let497 (Or let412 let173))))
  let let888 := (Or (Or (Or (Or let159 let166) let497) let412) let173)
  let let889 := (Or let203 (Or let478 (Or let211 (Or let218 let474))))
  let let890 := (Or (Or (Or (Or let203 let478) let211) let218) let474)
  let let891 := (Or let163 (Or let185 (Or let477 (Or let230 let464))))
  let let892 := (Or (Or (Or (Or let163 let185) let477) let230) let464)
  let let893 := (Or let178 (Or let185 (Or let487 (Or let192 let481))))
  let let894 := (Or (Or (Or (Or let178 let185) let487) let192) let481)
  let let895 := (Eq let92 let94)
  let let896 := (Eq e1 let663)
  let let897 := (Eq e1 let9)
  let let898 := (Eq e3 let44)
  let let899 := (Eq let333 let333)
  let let900 := (Eq e4 let113)
  let let901 := (Eq let407 let407)
  let let902 := (Eq e1 let10)
  let let903 := (Or let164 (Or let186 (Or let416 (Or let231 let465))))
  let let904 := (Or (Or (Or (Or let164 let186) let416) let231) let465)
  let let905 := (Eq e3 let177)
  let let906 := (Eq e1 let113)
  let let907 := (And let97 (And let138 let100))
  let let908 := (And (And let97 let138) let100)
  let let909 := (Eq e0 let237)
  let let910 := (Or let166 (Or let188 (Or let478 (Or let233 let466))))
  let let911 := (Or (Or (Or (Or let166 let188) let478) let233) let466)
  let let912 := (Not let798)
  let let913 := (Eq let912 let564)
  let let914 := (Eq let297 let297)
  let let915 := (Or let180 (Or let187 (Or let488 (Or let194 let483))))
  let let916 := (Or (Or (Or (Or let180 let187) let488) let194) let483)
  let let917 := (Eq e4 let441)
  let let918 := (Eq e0 let177)
  let let919 := (Or let181 (Or let188 (Or let489 (Or let195 let484))))
  let let920 := (Or (Or (Or (Or let181 let188) let489) let195) let484)
  let let921 := (Eq e3 let687)
  let let922 := (Or let182 (Or let189 (Or let490 (Or let196 let485))))
  let let923 := (Or (Or (Or (Or let182 let189) let490) let196) let485)
  let let924 := (And let122 (And let546 let151))
  let let925 := (And (And let122 let546) let151)
  let let926 := (Or let156 (Or let163 (Or let495 (Or let492 let170))))
  let let927 := (Or (Or (Or (Or let156 let163) let495) let492) let170)
  let let928 := (Or let386 (Or let404 (Or let420 (Or let470 let469))))
  let let929 := (Eq let535 let651)
  let let930 := (Eq e3 let51)
  let let931 := (Or let157 (Or let179 (Or let201 (Or let223 let253))))
  let let932 := (Or (Or (Or (Or let157 let179) let201) let223) let253)
  let let933 := (Eq let602 let604)
  let let934 := (Eq let606 let608)
  let let935 := (Eq e4 let65)
  let let936 := (Eq e2 let51)
  let let937 := (Or let492 (Or let192 (Or let215 (Or let245 let361))))
  let let938 := (Or (Or (Or (Or let492 let192) let215) let245) let361)
  let let939 := (Or let158 (Or let180 (Or let202 (Or let224 let254))))
  let let940 := (Or (Or (Or (Or let158 let180) let202) let224) let254)
  let let941 := (Eq e1 let51)
  let let942 := (Eq let602 let602)
  let let943 := (Eq e4 let32)
  let let944 := (Eq let606 let606)
  let let945 := (Or let160 (Or let167 (Or let498 (Or let390 let174))))
  let let946 := (Or (Or (Or (Or let160 let167) let498) let390) let174)
  let let947 := (And let741 let512)
  let let948 := (Or (Or (Or (Or let496 let488) let210) let240) let261)
  let let949 := (Or (Or (Or (Or let167 let189) let479) let234) let467)
  let let950 := (And let946 (And let611 (And let888 (And let509 (And let577 (And let940 (And let557 (And let932 (And let927 (And let523 (And let923 (And let949 (And let920 (And let911 (And let916 (And let396 (And let562 (And let904 (And let894 (And let892 (And let752 (And let732 (And let890 (And let633 (And let570 (And let948 (And let418 (And let864 (And let862 (And let527 (And let388 (And let392 (And let406 (And let414 (And let422 (And let567 (And let553 (And let575 (And let877 (And let938 (And let514 (And let519 (And let860 (And let529 (And let737 (And let701 (And let601 (And let754 let947))))))))))))))))))))))))))))))))))))))))))))))))
  let let951 := (And (And (And (And (And (And (And (And (And let946 let611) (And let888 let509)) (And let577 let940)) (And let557 let932)) (And let927 let523)) (And (And (And (And (And let923 let949) (And let920 let911)) (And let916 let396)) (And let562 let904)) (And let894 let892))) (And (And (And (And (And let752 let732) (And let890 let633)) (And let570 let948)) (And let418 let864)) (And let862 let527))) (And (And (And (And (And let388 let392) (And let406 let414)) (And let422 let567)) (And let553 let575)) (And let877 let938))) (And (And (And (And (And let514 let519) (And let860 let529)) (And let737 let701)) (And let601 let754)) let947))
  let let952 := (Eq let808 let808)
  let let953 := (Not let809)
  let let954 := (Eq let808 let953)
  let let955 := (Eq let953 let808)
  let let956 := (Eq let773 let773)
  let let957 := (Eq let564 let912)
  let let958 := (And let151 (And let278 let100))
  let let959 := (And (And let151 let278) let100)
  let let960 := (Or let167 (Or let189 (Or let479 (Or let234 let467))))
  let let961 := (Eq let815 let815)
  let let962 := (Not let816)
  let let963 := (Eq let962 let815)
  let let964 := (Eq let151 let151)
  let let965 := (Eq e1 let691)
  let let966 := (Eq let815 let962)
  let let967 := (Eq e1 let44)
  let let968 := (Eq e2 let43)
  let let969 := (Eq let853 let853)
  let let970 := (Eq e0 let666)
  let let971 := (Not let804)
  let let972 := (Eq let971 let803)
  let let973 := (Eq let270 let270)
  let let974 := (Eq e2 let37)
  let let975 := (Eq e0 let51)
  let let976 := (Not let854)
  let let977 := (Eq let976 let853)
  let let978 := (Eq let614 let614)
  let let979 := (Eq e3 let91)
  let let980 := (Or let668 (Or let665 (Or let662 (Or let659 let656))))
  let let981 := (Eq let803 let971)
  let let982 := (And let160 (And let188 (And let210 (And let246 let458))))
  let let983 := (And (And (And (And let160 let188) let210) let246) let458)
  let let984 := (Or let496 (Or let488 (Or let210 (Or let240 let261))))
  let let985 := (Eq let853 let976)
  let let986 := (And let100 (And let717 let151))
  let let987 := (And (And let100 let717) let151)
  let let988 := (Eq e4 let579)
  let let989 := (Eq e4 let654)
  let let990 := (Eq e2 let660)
  let let991 := (Eq e4 let670)
  let let992 := (And let87 (And let108 let88))
  let let993 := (And (And let87 let108) let88)
  let let994 := (Eq e2 let674)
  let let995 := (Eq e0 let680)
  let let996 := (Eq e2 let44)
  let let997 := (Or let682 (Or let679 (Or let676 (Or let673 let672))))
  let let998 := (Eq e3 let444)
  let let999 := (Eq e1 let450)
  let let1000 := (Eq let537 let537)
  let let1001 := (Eq e4 let684)
  let let1002 := (Eq e4 let207)
  let let1003 := (Eq e0 let694)
  let let1004 := (Or let696 (Or let693 (Or let690 (Or let689 let686))))
  let let1005 := (Eq let803 let803)
  let let1006 := (Eq let1 let1)
  let let1007 := (Not let102)
  let let1008 := (Not let150)
  let let1009 := (Not let318)
  let let1010 := (Not let646)
  let let1011 := (Not let90)
  let let1012 := (Not let316)
  let let1013 := (Not let35)
  let let1014 := (Not let277)
  let let1015 := (Not let287)
  let let1016 := (Not let320)
  let let1017 := (Not let993)
  let let1018 := (Not let64)
  let let1019 := (Not let125)
  let let1020 := (Not let719)
  let let1021 := (Not let285)
  let let1022 := (Not let144)
  let let1023 := (Not let959)
  let let1024 := (Not let621)
  let let1025 := (Not let147)
  let let1026 := (Not let908)
  let let1027 := (Not let628)
  let let1028 := (Not let269)
  let let1029 := (Not let60)
  let let1030 := (Not let649)
  let let1031 := (Not let431)
  let let1032 := (Not let987)
  let let1033 := (Not let140)
  let let1034 := (Not let925)
  let let1035 := (Not let282)
  let let1036 := (Not let296)
  let let1037 := (Not let112)
  let let1038 := (Not let525)
  let let1039 := (And let975 (And let967 (And let738 (And let734 let727))))
  let let1040 := (Eq And And)
  let let1041 := (Not let625)
  let let1042 := (And let595 (And let721 (And let339 (And let24 (And let1041 (And let83 (And let271 (And let433 (And let307 let18)))))))))
  let let1043 := (Not let727)
  let let1044 := (Or let1038 (Or let1043 let23))
  let let1045 := (And let525 let727)
  let let1046 := (Not let98)
  let let1047 := (Or let525 let1046)
  let let1048 := (Or let152 let1046)
  let let1049 := (Or let1046 let152)
  let let1050 := (Or let152 let152)
  let let1051 := (Or let152 let400)
  let let1052 := (Or let530 let1051)
  let let1053 := (Or let596 let1051)
  let let1054 := (Eq Or Or)
  let let1055 := (And let595 let151)
  let let1056 := (Eq let120 False)
  let let1057 := (Eq let530 False)
  let let1058 := (Eq e1 e1)
  let let1059 := (Not let31)
  let let1060 := (Or let152 let1059)
  let let1061 := (Or let559 let1060)
  let let1062 := (Or let722 let1060)
  let let1063 := (And let721 let151)
  let let1064 := (Eq let31 False)
  let let1065 := (Eq let559 False)
  let let1066 := (Eq e2 e2)
  let let1067 := (Or let120 let1047)
  let let1068 := (Or let31 let525)
  let let1069 := (Or let1046 let1068)
  let let1070 := (Or let56 let1068)
  let let1071 := (Or let525 let56)
  let let1072 := (Or let98 let525)
  let let1073 := (Or let56 let31)
  let let1074 := (Or let525 let1073)
  let let1075 := (Or let525 let152)
  let let1076 := (Or let56 (Or let525 (Or let543 let152)))
  let let1077 := (Not let142)
  let let1078 := (Or let1077 let1046)
  let let1079 := (Or let1077 (Or let1046 let625))
  let let1080 := (And let142 let98)
  let let1081 := (Not let554)
  let let1082 := (Or let1081 (Or let1043 let270))
  let let1083 := (And let554 let727)
  let let1084 := (Not let642)
  let let1085 := (Not let967)
  let let1086 := (Or let1085 let1084)
  let let1087 := (Or let535 let1086)
  let let1088 := (Or let651 let1086)
  let let1089 := (And let650 let967)
  let let1090 := (Eq let535 False)
  let let1091 := (Or let546 (Or let642 (Or let56 (Or let142 let554))))
  let let1092 := (Or let730 (Or let725 (Or let711 (Or let744 let727))))
  let let1093 := (Or let735 (Or let733 (Or let713 (Or let702 let727))))
  let let1094 := (Or let748 let747)
  let let1095 := (Or let97 (Or let88 (Or let141 let1094)))
  let let1096 := (Or let979 let747)
  let let1097 := (Or let62 (Or let278 (Or let148 let1096)))
  let let1098 := (Or let31 let857)
  let let1099 := (Or let87 (Or let122 (Or let599 let1098)))
  let let1100 := (Or let717 (Or let314 (Or let703 (Or let98 let857))))
  let let1101 := (Or let313 (Or let578 (Or let100 (Or let120 let554))))
  let let1102 := (Or let151 let525)
  let let1103 := (Or let520 (Or let58 (Or let145 let1102)))
  let let1104 := (Or let108 let525)
  let let1105 := (Or let516 (Or let138 (Or let123 let1104)))
  let let1106 := (Or let631 let702)
  let let1107 := (Or let935 (Or let29 (Or let943 let1106)))
  let let1108 := (Or let873 (Or let869 (Or let555 (Or let631 let744))))
  let let1109 := (Or let613 (Or let886 (Or let883 (Or let734 let979))))
  let let1110 := (Or let768 (Or let572 (Or let506 (Or let734 let748))))
  let let1111 := (Or let275 (Or let279 (Or let504 (Or let505 let98))))
  let let1112 := (Or let109 (Or let266 (Or let439 (Or let505 let31))))
  let let1113 := (Or let619 (Or let902 (Or let110 (Or let897 let142))))
  let let1114 := (Or let541 (Or let638 (Or let533 (Or let897 let120))))
  let let1115 := (Or let397 (Or let399 (Or let33 (Or let517 let108))))
  let let1116 := (Or let389 (Or let510 (Or let909 (Or let517 let151))))
  let let1117 := (Or let653 (Or let267 (Or let1002 (Or let555 let713))))
  let let1118 := (Or let547 (Or let643 (Or let1002 (Or let943 let711))))
  let let1119 := (Or let424 (Or let437 (Or let542 (Or let506 let148))))
  let let1120 := (Or let419 (Or let865 (Or let542 (Or let883 let141))))
  let let1121 := (Or let974 (Or let968 (Or let738 (Or let439 let703))))
  let let1122 := (Or let867 (Or let866 (Or let738 (Or let504 let599))))
  let let1123 := (Or let878 (Or let874 (Or let870 (Or let533 let56))))
  let let1124 := (Or let884 (Or let879 (Or let870 (Or let110 let100))))
  let let1125 := (Or let726 (Or let712 (Or let745 (Or let909 let123))))
  let let1126 := (Or let629 (Or let280 (Or let745 (Or let33 let145))))
  let let1127 := (Or let900 (Or let426 (Or let643 (Or let869 let733))))
  let let1128 := (Or let283 (Or let426 (Or let267 (Or let29 let725))))
  let let1129 := (Or let623 (Or let898 (Or let865 (Or let572 let278))))
  let let1130 := (Or let905 (Or let898 (Or let437 (Or let886 let88))))
  let let1131 := (Or let398 (Or let996 (Or let866 (Or let266 let314))))
  let let1132 := (Or let532 (Or let996 (Or let968 (Or let279 let122))))
  let let1133 := (Or let906 (Or let967 (Or let879 (Or let638 let642))))
  let let1134 := (Or let563 (Or let967 (Or let874 (Or let902 let578))))
  let let1135 := (Or let630 (Or let750 (Or let280 (Or let510 let138))))
  let let1136 := (Or let918 (Or let750 (Or let712 (Or let399 let58))))
  let let1137 := (Or let524 (Or let283 (Or let547 (Or let873 let735))))
  let let1138 := (Or let524 (Or let900 (Or let653 (Or let935 let730))))
  let let1139 := (Or let930 (Or let905 (Or let419 (Or let768 let62))))
  let let1140 := (Or let930 (Or let623 (Or let424 (Or let613 let97))))
  let let1141 := (Or let936 (Or let532 (Or let867 (Or let109 let717))))
  let let1142 := (Or let936 (Or let398 (Or let974 (Or let275 let87))))
  let let1143 := (Or let941 (Or let563 (Or let884 (Or let541 let546))))
  let let1144 := (Or let941 (Or let906 (Or let878 (Or let619 let313))))
  let let1145 := (Or let975 (Or let918 (Or let629 (Or let389 let516))))
  let let1146 := (Or let975 (Or let630 (Or let726 (Or let397 let520))))
  let let1147 := (And let1146 (And let1145 (And let1144 (And let1143 (And let1142 (And let1141 (And let1140 (And let1139 (And let1138 (And let1137 (And let1136 (And let1135 (And let1134 (And let1133 (And let1132 (And let1131 (And let1130 (And let1129 (And let1128 (And let1127 (And let1126 (And let1125 (And let1124 (And let1123 (And let1122 (And let1121 (And let1120 (And let1119 (And let1118 (And let1117 (And let1116 (And let1115 (And let1114 (And let1113 (And let1112 (And let1111 (And let1110 (And let1109 (And let1108 (And let1107 (And let1105 (And let1103 (And let1091 (And let1101 (And let1100 (And let1099 (And let1097 (And let1095 (And let1093 let1092)))))))))))))))))))))))))))))))))))))))))))))))))
  let let1148 := (Not let546)
  let let1149 := (Not let62)
  let let1150 := (Or let1148 let1149)
  let let1151 := (Or let1148 (Or let1149 let82))
  let let1152 := (And let546 let62)
  let let1153 := (Not let108)
  let let1154 := (Or let1153 let1046)
  let let1155 := (Not let738)
  let let1156 := (Not let975)
  let let1157 := (Or let1046 (Or let1156 let1153))
  let let1158 := (Or let1155 (Or let543 (Or let808 let1157)))
  let let1159 := (Or let1155 (Or let543 (Or let953 let1157)))
  let let1160 := (And let738 (And let87 (And let809 (And let98 let975))))
  let let1161 := (Eq let108 False)
  let let1162 := (Eq let808 False)
  let let1163 := (Eq let108 let808)
  let let1164 := (Eq let91 let36)
  let let1165 := (Eq let36 let91)
  let let1166 := (Eq let207 let91)
  let let1167 := (Eq let91 let207)
  let let1168 := (Eq let36 let207)
  let let1169 := (Eq let207 let36)
  let let1170 := (Or let1148 let1046)
  let let1171 := (Not let313)
  let let1172 := (Or let1155 (Or let543 let1171))
  let let1173 := (Or let1046 let1172)
  let let1174 := (Or let1148 let1173)
  let let1175 := (Or let773 let1174)
  let let1176 := (Or let880 let1174)
  let let1177 := (And let738 let87)
  let let1178 := (And let98 let1177)
  let let1179 := (And let774 (And let546 let1178))
  let let1180 := (Eq let313 False)
  let let1181 := (Eq let773 False)
  let let1182 := (Or let1155 let543)
  let let1183 := (Or let1046 let1182)
  let let1184 := (Not let578)
  let let1185 := (Or let1085 let1184)
  let let1186 := (Or let564 let1185)
  let let1187 := (Or let912 let1185)
  let let1188 := (And let798 let967)
  let let1189 := (Eq let564 False)
  let let1190 := (Not let278)
  let let1191 := (Not let100)
  let let1192 := (Not let958)
  let let1193 := (Not let979)
  let let1194 := (Not let734)
  let let1195 := (Or let1194 let1193)
  let let1196 := (Or let815 let1195)
  let let1197 := (Or let962 let1195)
  let let1198 := (And let816 let734)
  let let1199 := (Eq let91 let91)
  let let1200 := (Not let747)
  let let1201 := (Or let1200 (Or let1043 let17))
  let let1202 := (And let747 let727)
  let let1203 := (Not let148)
  let let1204 := (Or let1203 let1046)
  let let1205 := (Or let1203 (Or let1046 let1204))
  let let1206 := (Or let1046 (Or let1203 let351))
  let let1207 := (And let98 let148)
  let let1208 := (Eq e4 e4)
  let let1209 := (Or let1203 (Or let1046 let704))
  let let1210 := (And let148 let98)
  let let1211 := (Not let123)
  let let1212 := (Or let1211 let1203)
  let let1213 := (Or let1211 (Or let1203 let338))
  let let1214 := (And let123 let148)
  let let1215 := (Not let516)
  let let1216 := (Or let1156 let1215)
  let let1217 := (Or let853 let1216)
  let let1218 := (Or let976 let1216)
  let let1219 := (And let854 let975)
  let let1220 := (Eq let853 False)
  let let1221 := (Not let138)
  let let1222 := (Or let1148 let1221)
  let let1223 := (Or let1148 (Or let1221 let647))
  let let1224 := (And let546 let138)
  let let1225 := (Or let1221 (Or let1148 let624))
  let let1226 := (And let138 let546)
  let let1227 := (Or let1221 let1148)
  let let1228 := (Or let1043 let988)
  let let1229 := (Not let988)
  let let1230 := (Not let624)
  let let1231 := (Not let647)
  let let1232 := (Or let1231 (Or let1230 (Or let714 (Or let352 let1229))))
  let let1233 := (Not let989)
  let let1234 := (Not let720)
  let let1235 := (Not let990)
  let let1236 := (Not let896)
  let let1237 := (Not let970)
  let let1238 := (Or let1237 (Or let1236 (Or let1235 (Or let1234 let1233))))
  let let1239 := (Not let991)
  let let1240 := (Not let636)
  let let1241 := (Not let994)
  let let1242 := (Not let885)
  let let1243 := (Not let995)
  let let1244 := (Or let1243 (Or let1242 (Or let1241 (Or let1240 let1239))))
  let let1245 := (Not let917)
  let let1246 := (Not let998)
  let let1247 := (Not let739)
  let let1248 := (Not let999)
  let let1249 := (Not let502)
  let let1250 := (Or let1249 (Or let1248 (Or let1247 (Or let1246 let1245))))
  let let1251 := (Not let1001)
  let let1252 := (Not let921)
  let let1253 := (Not let428)
  let let1254 := (Not let965)
  let let1255 := (Not let1003)
  let let1256 := (Or let1255 (Or let1254 (Or let1253 (Or let1252 let1251))))
  let let1257 := (And let1256 (And let1250 (And let1244 (And let1238 let1232))))
  let let1258 := (Or let152 let1203)
  let let1259 := (Not let97)
  let let1260 := (Or let543 let1259)
  let let1261 := (Or let432 let1260)
  let let1262 := (Or let434 let1260)
  let let1263 := (And let433 let87)
  let let1264 := (Eq let432 False)
  let let1265 := (Eq e3 e3)
  let let1266 := (Not let275)
  let let1267 := (Or let1266 let543)
  let let1268 := (Or let803 let1267)
  let let1269 := (Or let971 let1267)
  let let1270 := (And let804 let275)
  let let1271 := (Eq let87 False)
  let let1272 := (Eq let36 let36)
  let let1273 := (Not let505)
  let let1274 := (Or let1194 let1273)
  let let1275 := (Or let1155 (Or let1203 let1274))
  let let1276 := (Or let606 let1275)
  let let1277 := (Or let608 let1275)
  let let1278 := (And let148 let734)
  let let1279 := (And let607 (And let738 let1278))
  let let1280 := (Eq let505 False)
  let let1281 := (Eq let606 False)
  let let1282 := (Eq let9 let2)
  let let1283 := (Or let1203 let1194)
  let let1284 := (Not let504)
  let let1285 := (Or let1155 let1284)
  let let1286 := (Or let537 let1285)
  let let1287 := (Or let539 let1285)
  let let1288 := (And let538 let738)
  let let1289 := (Not let279)
  let let1290 := (Or let1085 (Or let1289 let1172))
  let let1291 := (Or let379 let1290)
  let let1292 := (Or let381 let1290)
  let let1293 := (And let380 (And let967 (And let279 let1177)))
  let let1294 := (Eq let379 False)
  let let1295 := (Eq let36 let10)
  let let1296 := (Eq let10 let36)
  let let1297 := (Eq let10 let207)
  let let1298 := (Eq let207 let10)
  let let1299 := (Or let1191 let152)
  let let1300 := (Or let98 let1299)
  let let1301 := (Not let717)
  let let1302 := (Not let986)
  let let1303 := (Not let141)
  let let1304 := (Or let1191 let1303)
  let let1305 := (Or let1191 (Or let1303 let82))
  let let1306 := (And let100 let141)
  let let1307 := (Not let857)
  let let1308 := (Or let1307 (Or let1043 let306))
  let let1309 := (And let857 let727)
  let let1310 := (Not let703)
  let let1311 := (Or let1155 let1310)
  let let1312 := (Or let606 let1311)
  let let1313 := (Or let608 let1311)
  let let1314 := (And let607 let738)
  let let1315 := (Not let748)
  let let1316 := (Or let1194 let1315)
  let let1317 := (Or let369 let1316)
  let let1318 := (Or let371 let1316)
  let let1319 := (And let370 let734)
  let let1320 := (Eq let30 let30)
  let let1321 := (Not let88)
  let let1322 := (Not let992)
  let let1323 := (Not let314)
  let let1324 := (Or let1221 let1323)
  let let1325 := (Or let1156 (Or let543 (Or let1155 (Or let1323 let1221))))
  let let1326 := (Or let808 let1325)
  let let1327 := (Or let953 let1325)
  let let1328 := (And let809 (And let975 (And let87 (And let738 let314))))
  let let1329 := (Eq let138 False)
  let let1330 := (Eq let138 let808)
  let let1331 := (Eq let79 let36)
  let let1332 := (Eq let36 let79)
  let let1333 := (Eq let207 let79)
  let let1334 := (Eq let79 let207)
  let let1335 := (Or let525 let1077)
  let let1336 := (Or let1149 let1077)
  let let1337 := (Or let1149 (Or let1077 let352))
  let let1338 := (Or let356 let1337)
  let let1339 := (Or let358 let1337)
  let let1340 := (And let357 (And let62 let142))
  let let1341 := (Eq let351 False)
  let let1342 := (Or let1149 let1153)
  let let1343 := (Or let1153 let1149)
  let let1344 := (Or let351 let1343)
  let let1345 := (Or let353 let1343)
  let let1346 := (And let352 let108)
  let let1347 := (Eq let62 False)
  let let1348 := (Or let543 let543)
  let let1349 := (Or let543 let1323)
  let let1350 := (Or let1085 (Or let1323 let1172))
  let let1351 := (Or let535 let1350)
  let let1352 := (Or let651 let1350)
  let let1353 := (And let650 (And let967 (And let314 let1177)))
  let let1354 := (Not let750)
  let let1355 := (Or let1085 let1354)
  let let1356 := (Or let1211 (Or let1077 let1355))
  let let1357 := (Or let344 let1356)
  let let1358 := (Or let346 let1356)
  let let1359 := (And let345 (And let123 (And let142 let967)))
  let let1360 := (Eq let750 False)
  let let1361 := (Eq let344 False)
  let let1362 := (Eq let44 let91)
  let let1363 := (Not let58)
  let let1364 := (Or let1363 let1321)
  let let1365 := (Or let338 let1364)
  let let1366 := (Or let340 let1364)
  let let1367 := (And let339 let58)
  let let1368 := (Eq let88 False)
  let let1369 := (Eq let338 False)
  let let1370 := (Or let543 (Or let1321 let1274))
  let let1371 := (Or let333 let1370)
  let let1372 := (Or let335 let1370)
  let let1373 := (And let88 let734)
  let let1374 := (And let334 (And let87 let1373))
  let let1375 := (Eq let9 let57)
  let let1376 := (Or let1321 let1194)
  let let1377 := (Not let399)
  let let1378 := (Or let1156 (Or let543 (Or let1155 (Or let1289 let1377))))
  let let1379 := (Or let808 let1378)
  let let1380 := (Or let953 let1378)
  let let1381 := (And let809 (And let975 (And let87 (And let738 let279))))
  let let1382 := (Not let918)
  let let1383 := (Or let1156 let1382)
  let let1384 := (Or let327 let1383)
  let let1385 := (Or let329 let1383)
  let let1386 := (And let328 let975)
  let let1387 := (Not let712)
  let let1388 := (Or let1211 (Or let1387 let827))
  let let1389 := (And let123 let712)
  let let1390 := (Or let1301 let1149)
  let let1391 := (Or let1303 (Or let1155 let1301))
  let let1392 := (Or let1194 (Or let1149 (Or let321 let1391)))
  let let1393 := (Or let1194 (Or let1149 (Or let323 let1391)))
  let let1394 := (And let734 (And let62 (And let322 (And let141 let738))))
  let let1395 := (Eq let321 False)
  let let1396 := (Eq let99 let9)
  let let1397 := (Eq let9 let99)
  let let1398 := (Or let1171 let543)
  let let1399 := (Or let1171 (Or let543 let625))
  let let1400 := (And let313 let87)
  let let1401 := (Not let599)
  let let1402 := (Or let1155 let1401)
  let let1403 := (Or let321 let1402)
  let let1404 := (Or let323 let1402)
  let let1405 := (And let322 let738)
  let let1406 := (Eq let99 let99)
  let let1407 := (Not let122)
  let let1408 := (Not let319)
  let let1409 := (Not let924)
  let let1410 := (Or let1407 let1321)
  let let1411 := (Or let432 let1410)
  let let1412 := (Or let434 let1410)
  let let1413 := (And let433 let122)
  let let1414 := (Or let1407 let1077)
  let let1415 := (Not let317)
  let let1416 := (Or let1303 let1303)
  let let1417 := (Not let145)
  let let1418 := (Or let1417 let1303)
  let let1419 := (Or let338 let1418)
  let let1420 := (Or let340 let1418)
  let let1421 := (And let339 let145)
  let let1422 := (Not let315)
  let let1423 := (Not let620)
  let let1424 := (Not let109)
  let let1425 := (Or let1301 (Or let1424 let846))
  let let1426 := (And let717 let109)
  let let1427 := (Not let725)
  let let1428 := (Or let1407 let1427)
  let let1429 := (Or let306 let1428)
  let let1430 := (Or let308 let1428)
  let let1431 := (And let307 let122)
  let let1432 := (Or let1155 (Or let1303 let1274))
  let let1433 := (Or let321 let1432)
  let let1434 := (Or let323 let1432)
  let let1435 := (And let141 let734)
  let let1436 := (And let322 (And let738 let1435))
  let let1437 := (Or let1303 let1194)
  let let1438 := (Not let745)
  let let1439 := (Or let1155 let1438)
  let let1440 := (Or let1156 (Or let1301 let1439))
  let let1441 := (Or let853 let1440)
  let let1442 := (Or let976 let1440)
  let let1443 := (And let854 (And let975 (And let717 let738)))
  let let1444 := (Eq let745 False)
  let let1445 := (Eq let207 let61)
  let let1446 := (Or let1190 let1077)
  let let1447 := (Or let1077 (Or let1190 let351))
  let let1448 := (And let142 let278)
  let let1449 := (Or let1190 (Or let1077 let624))
  let let1450 := (And let278 let142)
  let let1451 := (Not let439)
  let let1452 := (Or let1155 let1451)
  let let1453 := (Or let297 let1452)
  let let1454 := (Or let299 let1452)
  let let1455 := (And let298 let738)
  let let1456 := (Not let266)
  let let1457 := (Or let1456 let1077)
  let let1458 := (Not let33)
  let let1459 := (Not let295)
  let let1460 := (Not let629)
  let let1461 := (Or let1156 let1460)
  let let1462 := (Or let288 let1461)
  let let1463 := (Or let290 let1461)
  let let1464 := (And let289 let975)
  let let1465 := (Not let280)
  let let1466 := (Or let1465 let1190)
  let let1467 := (Not let283)
  let let1468 := (Not let284)
  let let1469 := (Not let281)
  let let1470 := (Not let29)
  let let1471 := (Not let276)
  let let1472 := (Not let426)
  let let1473 := (Or let1085 let1472)
  let let1474 := (Or let270 let1473)
  let let1475 := (Or let272 let1473)
  let let1476 := (And let271 let967)
  let let1477 := (Not let267)
  let let1478 := (Not let268)
  let let1479 := (Or let1301 let1211)
  let let1480 := (Or let1230 (Or let352 let1479))
  let let1481 := (Or let1230 (Or let352 (Or let1301 (Or let1211 let1479))))
  let let1482 := (Or let1301 (Or let1211 let647))
  let let1483 := (And let717 let123)
  let let1484 := (Eq let2 let590)
  let let1485 := (Or let1211 (Or let1301 let704))
  let let1486 := (And let123 let717)
  let let1487 := (Or let31 let151)
  let let1488 := (Not let744)
  let let1489 := (Or let1043 let1488)
  let let1490 := (Or let1043 (Or let1488 let707))
  let let1491 := (And let727 let744)
  let let1492 := (Or let748 let744)
  let let1493 := (Or let151 (Or let120 (Or let31 let1492)))
  let let1494 := (Or let525 (Or let554 (Or let857 (Or let747 let727))))
  let let1495 := (Or let979 let702)
  let let1496 := (Or let108 (Or let142 (Or let98 let1495)))
  let let1497 := (Or let123 (Or let56 (Or let703 (Or let148 let713))))
  let let1498 := (Or let138 (Or let642 (Or let314 (Or let278 let733))))
  let let1499 := (Or let516 (Or let546 (Or let717 (Or let62 let735))))
  let let1500 := (Or let517 (Or let897 (Or let505 (Or let734 let631))))
  let let1501 := (Or let909 (Or let533 (Or let439 (Or let506 let555))))
  let let1502 := (Or let510 (Or let638 (Or let266 (Or let572 let869))))
  let let1503 := (Or let389 (Or let541 (Or let109 (Or let768 let873))))
  let let1504 := (Or let145 (Or let100 (Or let599 (Or let141 let711))))
  let let1505 := (Or let33 (Or let110 (Or let504 (Or let883 let943))))
  let let1506 := (Or let745 (Or let870 (Or let738 (Or let542 let1002))))
  let let1507 := (Or let280 (Or let879 (Or let866 (Or let865 let643))))
  let let1508 := (Or let629 (Or let884 (Or let867 (Or let419 let547))))
  let let1509 := (Or let58 (Or let578 (Or let122 (Or let88 let725))))
  let let1510 := (Or let399 (Or let902 (Or let279 (Or let886 let29))))
  let let1511 := (Or let712 (Or let874 (Or let968 (Or let437 let267))))
  let let1512 := (Or let750 (Or let967 (Or let996 (Or let898 let426))))
  let let1513 := (Or let918 (Or let563 (Or let532 (Or let905 let283))))
  let let1514 := (Or let520 (Or let313 (Or let87 (Or let97 let730))))
  let let1515 := (Or let397 (Or let619 (Or let275 (Or let613 let935))))
  let let1516 := (Or let726 (Or let878 (Or let974 (Or let424 let653))))
  let let1517 := (Or let630 (Or let906 (Or let398 (Or let623 let900))))
  let let1518 := (Or let975 (Or let941 (Or let936 (Or let930 let524))))
  let let1519 := (And let1518 (And let1517 (And let1516 (And let1515 (And let1514 (And let1513 (And let1512 (And let1511 (And let1510 (And let1509 (And let1508 (And let1507 (And let1506 (And let1505 (And let1504 (And let1503 (And let1502 (And let1501 (And let1500 (And let1493 (And let1499 (And let1498 (And let1497 (And let1496 let1494))))))))))))))))))))))))
  let let1520 := (Or let400 let1073)
  let let1521 := (Or let151 let400)
  let let1522 := (Or let400 let1521)
  let let1523 := (Or let400 let1355)
  let let1524 := (Or let151 let1523)
  let let1525 := (Or let153 let1523)
  let let1526 := (And let152 (And let120 let967))
  let let1527 := (Eq let151 False)
  let let1528 := (Eq let44 let30)
  let let1529 := (Eq e0 e0)
  let let1530 := (Or let400 let1102)
  let let1531 := (Or let1363 let1407)
  let let1532 := (Or let559 let1531)
  let let1533 := (Or let722 let1531)
  let let1534 := (And let721 let58)
  let let1535 := (Not let520)
  let let1536 := (Or let1156 let1535)
  let let1537 := (Or let808 let1536)
  let let1538 := (Or let953 let1536)
  let let1539 := (And let809 let975)
  let let1540 := (Or let1417 let400)
  let let1541 := (Or let1417 let1540)
  let let1542 := (Not let648)
  let let1543 := (Or let1148 let1301)
  let let1544 := (Or let1148 (Or let1301 let625))
  let let1545 := (And let546 let717)
  let let1546 := (Or let525 let543)
  let let1547 := (Or let543 let400)
  let let1548 := (Not let149)
  let let1549 := (Or let400 let1149)
  let let1550 := (Not let146)
  let let1551 := (Or let400 let1081)
  let let1552 := (Or let707 let1551)
  let let1553 := (Or let709 let1551)
  let let1554 := (And let708 let120)
  let let1555 := (Eq let554 False)
  let let1556 := (Eq let707 False)
  let let1557 := (Not let143)
  let let1558 := (Or let400 let1221)
  let let1559 := (Not let139)
  let let1560 := (Or let525 let1321)
  let let1561 := (Or let98 let1102)
  let let1562 := (Or let151 (Or let525 let1303))
  let let1563 := (Not let718)
  let let1564 := (Or let1323 let1190)
  let let1565 := (Or let1194 (Or let1190 let1323))
  let let1566 := (Or let1155 (Or let1303 let1565))
  let let1567 := (Or let321 let1566)
  let let1568 := (Or let323 let1566)
  let let1569 := (And let734 let278)
  let let1570 := (And let322 (And let738 (And let141 let1569)))
  let let1571 := (Eq let314 False)
  let let1572 := (Eq let9 let79)
  let let1573 := (Eq let79 let9)
  let let1574 := (Or let1194 let1190)
  let let1575 := (Or let1046 let1521)
  let let1576 := (Not let870)
  let let1577 := (Or let1155 let1576)
  let let1578 := (Or let1148 (Or let1046 let1577))
  let let1579 := (Or let773 let1578)
  let let1580 := (Or let880 let1578)
  let let1581 := (And let98 let738)
  let let1582 := (And let774 (And let546 let1581))
  let let1583 := (Eq let870 False)
  let let1584 := (Or let1046 let1155)
  let let1585 := (Not let884)
  let let1586 := (Or let1148 (Or let1585 let848))
  let let1587 := (And let546 let884)
  let let1588 := (Or let151 let1047)
  let let1589 := (Or let1046 let1321)
  let let1590 := (Not let286)
  let let1591 := (Or let151 (Or let525 let1416))
  let let1592 := (Or let100 (Or let884 let870))
  let let1593 := (Or let1303 let1592)
  let let1594 := (Not let879)
  let let1595 := (Or let1085 let1594)
  let let1596 := (Or let133 let1595)
  let let1597 := (Or let135 let1595)
  let let1598 := (And let134 let967)
  let let1599 := (Not let517)
  let let1600 := (Or let1194 let1599)
  let let1601 := (Or let1363 (Or let1303 let1600))
  let let1602 := (Or let126 let1601)
  let let1603 := (Or let128 let1601)
  let let1604 := (And let127 (And let58 let1435))
  let let1605 := (Eq let517 False)
  let let1606 := (Not let110)
  let let1607 := (Or let1085 (Or let1606 let1458))
  let let1608 := (Or let400 let1607)
  let let1609 := (Or let151 let1608)
  let let1610 := (Or let153 let1608)
  let let1611 := (And let967 let110)
  let let1612 := (And let152 (And let120 let1611))
  let let1613 := (Eq let33 False)
  let let1614 := (Eq let44 let32)
  let let1615 := (Eq let32 let44)
  let let1616 := (Eq let30 let44)
  let let1617 := (Or let1085 let1606)
  let let1618 := (Not let397)
  let let1619 := (Or let1156 let1618)
  let let1620 := (Or let375 let1619)
  let let1621 := (Or let377 let1619)
  let let1622 := (And let376 let975)
  let let1623 := (Eq let65 let65)
  let let1624 := (Or let1363 (Or let1377 let793))
  let let1625 := (And let58 let399)
  let let1626 := (Or let884 (Or let870 (Or let88 let151)))
  let let1627 := (Or let151 (Or let525 let1407))
  let let1628 := (Or let1417 let1417)
  let let1629 := (Or let1465 let1417)
  let let1630 := (Or let407 let1629)
  let let1631 := (Or let409 let1629)
  let let1632 := (And let408 let280)
  let let1633 := (Or let1417 let1191)
  let let1634 := (Or let530 let1633)
  let let1635 := (Or let596 let1633)
  let let1636 := (And let595 let145)
  let let1637 := (Or let1407 let1592)
  let let1638 := (Not let124)
  let let1639 := (Or let1221 let1046)
  let let1640 := (Or let1156 (Or let1259 (Or let1194 (Or let1190 let1221))))
  let let1641 := (Or let808 let1640)
  let let1642 := (Or let953 let1640)
  let let1643 := (And let809 (And let975 (And let97 let1569)))
  let let1644 := (Eq let9 let36)
  let let1645 := (Or let87 let1259)
  let let1646 := (Or let280 (Or let750 let1645))
  let let1647 := (Or let1259 let1274)
  let let1648 := (Or let87 let1647)
  let let1649 := (Or let544 let1647)
  let let1650 := (And let97 let734)
  let let1651 := (And let543 let1650)
  let let1652 := (Or let1259 let1194)
  let let1653 := (Not let630)
  let let1654 := (Or let1156 let1653)
  let let1655 := (Or let114 let1654)
  let let1656 := (Or let116 let1654)
  let let1657 := (And let115 let975)
  let let1658 := (Not let111)
  let let1659 := (Not let510)
  let let1660 := (Or let1659 let1456)
  let let1661 := (Or let559 let1660)
  let let1662 := (Or let722 let1660)
  let let1663 := (And let721 let510)
  let let1664 := (Not let56)
  let let1665 := (Or let120 let1046)
  let let1666 := (Or let120 (Or let1259 let1046))
  let let1667 := (Not let101)
  let let1668 := (Or let1171 let1259)
  let let1669 := (Or let1171 (Or let1259 let82))
  let let1670 := (And let313 let97)
  let let1671 := (Or let1664 let1046)
  let let1672 := (Or let1046 let1046)
  let let1673 := (Or let1153 (Or let1046 let559))
  let let1674 := (And let108 let98)
  let let1675 := (Or let1211 let1664)
  let let1676 := (Or let1085 (Or let1664 let1211))
  let let1677 := (Or let1156 (Or let1171 let1676))
  let let1678 := (Or let808 let1677)
  let let1679 := (Or let953 let1677)
  let let1680 := (And let967 let56)
  let let1681 := (And let809 (And let975 (And let313 let1680)))
  let let1682 := (Eq let123 False)
  let let1683 := (Eq let44 let2)
  let let1684 := (Eq let2 let44)
  let let1685 := (Eq let36 let44)
  let let1686 := (Eq let44 let36)
  let let1687 := (Or let1085 let1664)
  let let1688 := (Not let897)
  let let1689 := (Or let1194 let1688)
  let let1690 := (Or let1171 (Or let1303 let1689))
  let let1691 := (Or let301 let1690)
  let let1692 := (Or let303 let1690)
  let let1693 := (And let302 (And let313 let1435))
  let let1694 := (Eq let897 False)
  let let1695 := (Or let1221 (Or let1046 let1439))
  let let1696 := (Or let92 let1695)
  let let1697 := (Or let94 let1695)
  let let1698 := (And let93 (And let138 let1581))
  let let1699 := (Not let619)
  let let1700 := (Or let1171 (Or let1699 let803))
  let let1701 := (And let313 let619)
  let let1702 := (Not let902)
  let let1703 := (Or let1085 let1702)
  let let1704 := (Or let379 let1703)
  let let1705 := (Or let381 let1703)
  let let1706 := (And let380 let967)
  let let1707 := (Or let1156 (Or let1171 let1607))
  let let1708 := (Or let808 let1707)
  let let1709 := (Or let953 let1707)
  let let1710 := (And let809 (And let975 (And let313 let1611)))
  let let1711 := (Or let1221 (Or let1465 let837))
  let let1712 := (And let138 let280)
  let let1713 := (Or let1321 let1664)
  let let1714 := (Or let31 let1713)
  let let1715 := (Or let1664 let543)
  let let1716 := (Not let89)
  let let1717 := (Or let1664 let1203)
  let let1718 := (Or let82 let1717)
  let let1719 := (Or let84 let1717)
  let let1720 := (And let83 let56)
  let let1721 := (Or let400 let1676)
  let let1722 := (Or let151 let1721)
  let let1723 := (Or let153 let1721)
  let let1724 := (And let152 (And let120 let1680))
  let let1725 := (Or let148 let1540)
  let let1726 := (Or let400 let1059)
  let let1727 := (Or let400 (Or let1059 let625))
  let let1728 := (And let120 let31)
  let let1729 := (Or let120 let1102)
  let let1730 := (Or let1303 let1729)
  let let1731 := (Or let1303 let1363)
  let let1732 := (Or let1363 let1731)
  let let1733 := (Or let120 let1072)
  let let1734 := (Or let151 let120)
  let let1735 := (Or let525 let1734)
  let let1736 := (Or let120 (Or let151 (Or let1321 (Or let1059 let1417))))
  let let1737 := (Not let627)
  let let1738 := (Or let1171 let1059)
  let let1739 := (Not let645)
  let let1740 := (Not let430)
  let let1741 := (Or let1085 (Or let1321 let1689))
  let let1742 := (Or let564 let1741)
  let let1743 := (Or let912 let1741)
  let let1744 := (And let798 (And let967 let1373))
  let let1745 := (Or let1059 let1577)
  let let1746 := (Or let120 let1745)
  let let1747 := (Or let401 let1745)
  let let1748 := (And let31 let738)
  let let1749 := (And let400 let1748)
  let let1750 := (Eq let207 let30)
  let let1751 := (Or let1059 let1155)
  let let1752 := (Or let1153 let1077)
  let let1753 := (Or let1156 (Or let1171 (Or let1085 (Or let1077 let1153))))
  let let1754 := (Or let808 let1753)
  let let1755 := (Or let953 let1753)
  let let1756 := (And let809 (And let975 (And let313 (And let967 let142))))
  let let1757 := (Or let559 let1324)
  let let1758 := (Or let722 let1324)
  let let1759 := (And let721 let138)
  let let1760 := (Or let432 let1390)
  let let1761 := (Or let434 let1390)
  let let1762 := (And let433 let717)
  let let1763 := (Or let1221 (Or let1301 (Or let1203 let1600)))
  let let1764 := (Or let80 let1763)
  let let1765 := (Or let105 let1763)
  let let1766 := (And let104 (And let138 (And let717 let1278)))
  let let1767 := (Or let1077 (Or let1606 let817))
  let let1768 := (And let142 let110)
  let let1769 := (Not let541)
  let let1770 := (Or let1585 let1769)
  let let1771 := (Or let602 let1770)
  let let1772 := (Or let604 let1770)
  let let1773 := (And let603 let884)
  let let1774 := (Eq let71 let71)
  let let1775 := (Not let638)
  let let1776 := (Or let1085 let1775)
  let let1777 := (Or let840 let1776)
  let let1778 := (Or let871 let1776)
  let let1779 := (And let841 let967)
  let let1780 := (Not let533)
  let let1781 := (Not let909)
  let let1782 := (Or let1781 let1780)
  let let1783 := (Or let1156 (Or let1171 (Or let1085 (Or let1780 let1781))))
  let let1784 := (Or let808 let1783)
  let let1785 := (Or let953 let1783)
  let let1786 := (And let809 (And let975 (And let313 (And let967 let533))))
  let let1787 := (Not let389)
  let let1788 := (Or let1156 let1787)
  let let1789 := (Or let72 let1788)
  let let1790 := (Or let74 let1788)
  let let1791 := (And let73 let975)
  let let1792 := (Or let1221 (Or let1659 let835))
  let let1793 := (And let138 let510)
  let let1794 := (Or let1323 let1664)
  let let1795 := (Or let1664 let1323)
  let let1796 := (Or let704 let1795)
  let let1797 := (Or let715 let1795)
  let let1798 := (And let714 let56)
  let let1799 := (Or let1323 (Or let1664 let624))
  let let1800 := (And let314 let56)
  let let1801 := (Or let1149 (Or let1153 let1342))
  let let1802 := (Or let1149 (Or let1153 let647))
  let let1803 := (And let62 let108)
  let let1804 := (Or let1059 let1439)
  let let1805 := (Or let151 let1804)
  let let1806 := (Or let153 let1804)
  let let1807 := (And let152 let1748)
  let let1808 := (Not let907)
  let let1809 := (Or let1191 (Or let1606 let785))
  let let1810 := (And let100 let110)
  let let1811 := (Not let63)
  let let1812 := (Not let59)
  let let1813 := (Or let1363 (Or let1387 let795))
  let let1814 := (And let58 let712)
  let let1815 := (Or let1153 (Or let1211 let344))
  let let1816 := (And let108 let123)
  let let1817 := (Not let726)
  let let1818 := (Or let1156 let1817)
  let let1819 := (Or let52 let1818)
  let let1820 := (Or let54 let1818)
  let let1821 := (And let53 let975)
  let let1822 := (Or let530 let1752)
  let let1823 := (Or let596 let1752)
  let let1824 := (And let595 let108)
  let let1825 := (Eq let142 False)
  let let1826 := (Or let530 let1782)
  let let1827 := (Or let596 let1782)
  let let1828 := (And let595 let909)
  let let1829 := (Not let874)
  let let1830 := (Or let1085 let1829)
  let let1831 := (Or let45 let1830)
  let let1832 := (Or let47 let1830)
  let let1833 := (And let46 let967)
  let let1834 := (Not let878)
  let let1835 := (Or let1834 let1259)
  let let1836 := (Or let1834 (Or let1259 let1689))
  let let1837 := (Or let38 let1836)
  let let1838 := (Or let40 let1836)
  let let1839 := (And let39 (And let878 let1650))
  let let1840 := (Or let1834 let1699)
  let let1841 := (Or let66 let1840)
  let let1842 := (Or let68 let1840)
  let let1843 := (And let67 let878)
  let let1844 := (Or let138 let525)
  let let1845 := (Not let702)
  let let1846 := (Or let1043 let1845)
  let let1847 := (Or let1043 (Or let1845 let769))
  let let1848 := (And let727 let702)
  let let1849 := (Or let1156 (Or let1259 let1600))
  let let1850 := (Or let808 let1849)
  let let1851 := (Or let953 let1849)
  let let1852 := (And let809 (And let975 let1650))
  let let1853 := (Or let1458 let1059)
  let let1854 := (Not let34)
  let let1855 := (Not let943)
  let let1856 := (Or let1458 let1855)
  let let1857 := (Or let23 let1856)
  let let1858 := (Or let25 let1856)
  let let1859 := (And let24 let33)
  let let1860 := (Not let631)
  let let1861 := (Or let1194 let1860)
  let let1862 := (Or let17 let1861)
  let let1863 := (Or let19 let1861)
  let let1864 := (And let18 let734)
  let let1865 := (Not let935)
  let let1866 := (Or let1059 (Or let1043 (Or let1865 let1266)))
  let let1867 := (Or let707 let1866)
  let let1868 := (Or let709 let1866)
  let let1869 := (And let708 (And let31 (And let727 let935)))
  let let1870 := (Or let1289 let1565)
  let let1871 := (Or let11 let1870)
  let let1872 := (Or let13 let1870)
  let let1873 := (And let12 (And let279 let1569))
  let let1874 := (Or let120 (Or let98 (Or let152 let525)))
  let let1875 := (Or let152 let1664)
  let let1876 := (Or let152 (Or let1664 (Or let98 let1664)))
  let let1877 := (Or let1664 let1077)
  let let1878 := (Or let344 let1877)
  let let1879 := (Or let346 let1877)
  let let1880 := (And let345 let56)
  let let1881 := (Or let1323 (Or let1664 let1342))
  let let1882 := (Or let525 let400)
  let let1883 := (Or let31 let1882)
  let let1884 := (Or let1664 let151)
  let let1885 := (Or let98 (Or let31 (Or let525 let1884)))
  let let1886 := (Or let525 (Or let98 (Or let400 let1259)))
  let let1887 := (Or let1407 let1059)
  let let1888 := (Or let614 let1887)
  let let1889 := (Or let616 let1887)
  let let1890 := (And let615 let122)
  let let1891 := (Or let1156 (Or let1301 (Or let1155 (Or let1456 let1659))))
  let let1892 := (Or let853 let1891)
  let let1893 := (Or let976 let1891)
  let let1894 := (And let854 (And let975 (And let717 (And let738 let266))))
  let let1895 := (Or let122 (Or let31 let278))
  let let1896 := (Or let122 let31)
  let let1897 := (Or let1664 let1081)
  let let1898 := (Or let3 let1897)
  let let1899 := (Or let5 let1897)
  let let1900 := (And let4 let56)
  let let1901 := (Or let1149 (Or let1664 let1303))
  let let1902 := (Or let1149 let1664)
  let let1903 := (Or let525 let1902)
  let let1904 := (Or let321 (Or let1155 (Or let1194 let1043)))
  let let1905 := (Or let321 (Or let1155 (Or let1194 (Or let1043 (Or let122 (Or let31 (Or let1043 (Or let321 let1155))))))))
  let let1906 := (Or let321 (Or let1155 (Or let1194 (Or let543 let1043))))
  let let1907 := (Or let543 (Or let1194 (Or let1043 (Or let543 let1664))))
  let let1908 := (Or let1149 let1884)
  let let1909 := (Or let1046 let1149)
  let let1910 := (Or let1156 (Or let543 (Or let1155 (Or let1046 let1342))))
  let let1911 := (Or let808 let1910)
  let let1912 := (Or let953 let1910)
  let let1913 := (And let809 (And let975 (And let87 (And let738 (And let98 let62)))))
  let let1914 := (Or let1664 let1173)
  let let1915 := (Or let344 let1914)
  let let1916 := (Or let346 let1914)
  let let1917 := (And let345 (And let56 let1178))
(Eq let7 let6) → let7 → (Eq let8 True) → (Eq let15 let14) → let15 → (Eq let16 True) → (Eq let21 let20) → let21 → (Eq let22 True) → (Eq let27 let26) → (Eq let28 True) → (Eq let35 let34) → (Eq let42 let41) → let42 → (Eq let49 let48) → let49 → (Eq let50 True) → let55 → (Eq let60 let59) → (Eq let64 let63) → (Eq let70 let69) → (Eq let76 let75) → let70 → let76 → (Eq let77 True) → (Eq let78 True) → (Eq let81 True) → let85 → (Eq let86 True) → (Eq let90 let89) → let95 → (Eq let96 True) → (Eq let102 let101) → (Eq let103 True) → (Eq let107 let106) → (Eq let112 let111) → (Eq let118 let117) → let118 → (Eq let119 True) → (Eq let121 True) → (Eq let125 let124) → (Eq let130 let129) → let130 → (Eq let131 True) → (Eq let137 let136) → (Eq let140 let139) → (Eq let144 let143) → (Eq let147 let146) → (Eq let150 let149) → (Eq let155 let154) → let155 → (Eq let162 let161) → (Eq let169 let168) → (Eq let176 let175) → (Eq let184 let183) → (Eq let191 let190) → (Eq let198 let197) → (Eq let206 let205) → (Eq let214 let213) → (Eq let221 let220) → (Eq let228 let227) → (Eq let236 let235) → (Eq let244 let243) → (Eq let251 let250) → (Eq let258 let257) → (Eq let265 let264) → (Eq let269 let268) → (Eq let274 let273) → (Eq let277 let276) → let107 → (Eq let282 let281) → (Eq let285 let284) → (Eq let287 let286) → (Eq let292 let291) → let292 → (Eq let85 let293) → (Eq let294 True) → (Eq let296 let295) → let300 → (Eq let305 let304) → (Eq let310 let309) → let305 → let310 → (Eq let311 True) → (Eq let312 True) → (Eq let316 let315) → (Eq let318 let317) → (Eq let320 let319) → (Eq let325 let324) → (Eq let326 True) → (Eq let331 let330) → let331 → (Eq let332 True) → (Eq let337 let336) → (Eq let342 let341) → let342 → (Eq let343 True) → (Eq let348 let347) → let348 → (Eq let349 True) → (Eq let355 let354) → (Eq let360 let359) → (Eq let367 let366) → let360 → (Eq let368 True) → (Eq let373 let372) → let373 → (Eq let374 True) → let378 → (Eq let383 let382) → (Eq let384 True) → let383 → (Eq let385 True) → (Eq let388 let387) → (Eq let226 let389) → (Eq let392 let391) → (Eq let396 let395) → (Eq let390 let397) → (Eq let165 let398) → (Eq let196 let399) → (Eq let403 let402) → (Eq let219 let33) → (Eq let406 let405) → (Eq let411 let410) → (Eq let414 let413) → (Eq let418 let417) → (Eq let201 let419) → (Eq let422 let421) → (Eq let423 True) → (Eq let425 let424) → (Eq let185 let426) → (Eq let429 let428) → (Eq let431 let430) → (Eq let224 let109) → (Eq let436 let435) → (Eq let438 let437) → (Eq let232 let266) → (Eq let240 let439) → (Eq let440 let275) → (Eq let457 let456) → (Eq let194 let279) → (Eq let501 let500) → (Eq let454 let502) → (Eq let486 let503) → (Eq let217 let504) → (Eq let247 let505) → (Eq let239 let506) → (Eq let476 let507) → (Eq let509 let508) → (Eq let234 let510) → (Eq let512 let511) → let137 → (Eq let514 let513) → (Eq let515 True) → (Eq let256 let516) → let403 → (Eq let249 let517) → (Eq let519 let518) → (Eq let174 let520) → (Eq let485 let58) → (Eq let468 let521) → (Eq let475 let145) → (Eq let523 let522) → (Eq let386 let151) → (Eq let156 let524) → (Eq let462 let525) → (Eq let262 let56) → (Eq let527 let526) → (Eq let364 let142) → (Eq let529 let528) → (Eq let531 True) → (Eq let173 let313) → (Eq let180 let532) → (Eq let241 let533) → (Eq let55 let534) → (Eq let536 True) → let540 → (Eq let225 let541) → (Eq let209 let542) → let436 → let545 → (Eq let255 let546) → (Eq let200 let547) → (Eq let548 True) → (Eq let549 let432) → (Eq let499 let550) → (Eq let172 let87) → (Eq let551 let270) → (Eq let553 let552) → (Eq let420 let31) → (Eq let461 let554) → (Eq let238 let555) → (Eq let557 let556) → (Eq let378 let558) → (Eq let560 let559) → (Eq let562 let561) → (Eq let404 let120) → (Eq let181 let563) → (Eq let565 True) → (Eq let567 let566) → (Eq let300 let568) → (Eq let363 let98) → (Eq let570 let569) → (Eq let480 let571) → (Eq let231 let572) → (Eq let573 let530) → (Eq let575 let574) → (Eq let577 let576) → (Eq let253 let62) → (Eq let484 let578) → (Eq let594 let593) → (Eq let598 let597) → (Eq let473 let599) → (Eq let601 let600) → let605 → let609 → (Eq let192 let29) → (Eq let611 let610) → (Eq let612 let23) → (Eq let493 let613) → (Eq let618 let617) → (Eq let465 let278) → let411 → (Eq let412 let619) → (Eq let621 let620) → (Eq let622 let306) → (Eq let218 let110) → (Eq let164 let623) → (Eq let483 let122) → (Eq let588 let624) → (Eq let626 let625) → (Eq let415 let141) → (Eq let628 let627) → (Eq let204 let629) → (Eq let167 let630) → (Eq let245 let631) → (Eq let633 let632) → (Eq let494 let634) → (Eq let637 let636) → (Eq let233 let638) → (Eq let639 let82) → (Eq let640 True) → (Eq let641 True) → (Eq let466 let642) → (Eq let477 let643) → (Eq let540 let644) → (Eq let646 let645) → let598 → (Eq let591 let647) → (Eq let649 let648) → let652 → (Eq let365 let108) → (Eq let495 let653) → (Eq let699 let698) → (Eq let701 let700) → (Eq let361 let702) → (Eq let261 let703) → (Eq let705 True) → (Eq let706 True) → let710 → (Eq let472 let711) → (Eq let490 let712) → (Eq let259 let713) → let716 → (Eq let719 let718) → (Eq let658 let720) → let723 → (Eq let710 let724) → (Eq let481 let725) → (Eq let498 let726) → (Eq let458 let727) → (Eq let716 let728) → (Eq let723 let729) → (Eq let170 let730) → (Eq let732 let731) → (Eq let464 let733) → (Eq let254 let717) → (Eq let246 let734) → (Eq let252 let735) → (Eq let737 let736) → (Eq let210 let738) → (Eq let448 let739) → (Eq let741 let740) → (Eq let742 True) → (Eq let743 let338) → (Eq let469 let744) → (Eq let212 let745) → (Eq let491 let746) → (Eq let459 let747) → (Eq let470 let748) → (Eq let479 let280) → (Eq let463 let749) → (Eq let189 let750) → (Eq let752 let751) → (Eq let754 let753) → let618 → (Eq let260 let148) → (Eq let767 let766) → (Eq let223 let768) → (Eq let856 let855) → (Eq let460 let857) → (Eq let545 let858) → (Eq let860 let859) → (Eq let862 let861) → let355 → (Eq let864 let863) → (Eq let416 let865) → (Eq let394 let866) → (Eq let202 let867) → (Eq let868 True) → (Eq let230 let869) → (Eq let211 let870) → let872 → (Eq let222 let873) → (Eq let489 let874) → (Eq let872 let875) → (Eq let877 let876) → (Eq let497 let878) → (Eq let478 let879) → (Eq let882 let881) → (Eq let216 let883) → (Eq let203 let884) → (Eq let678 let885) → (Eq let755 let17) → (Eq let193 let886) → (Eq let888 let887) → (Eq let890 let889) → let337 → (Eq let892 let891) → (Eq let482 let88) → (Eq let178 let283) → (Eq let171 let97) → (Eq let894 let893) → (Eq let95 let895) → (Eq let664 let896) → (Eq let248 let897) → (Eq let186 let898) → (Eq let899 True) → (Eq let163 let900) → (Eq let585 let704) → (Eq let901 True) → (Eq let195 let902) → (Eq let904 let903) → (Eq let179 let905) → (Eq let166 let906) → (Eq let908 let907) → (Eq let242 let909) → (Eq let911 let910) → let913 → (Eq let914 True) → (Eq let916 let915) → (Eq let442 let917) → (Eq let182 let918) → (Eq let474 let100) → (Eq let920 let919) → (Eq let688 let921) → (Eq let923 let922) → (Eq let925 let924) → (Eq let927 let926) → (Eq let471 let928) → (Eq let652 let929) → (Eq let263 let123) → (Eq let157 let930) → (Eq let467 let138) → (Eq let932 let931) → (Eq let605 let933) → (Eq let609 let934) → (Eq let492 let935) → (Eq let158 let936) → (Eq let938 let937) → (Eq let940 let939) → (Eq let159 let941) → (Eq let942 True) → (Eq let215 let943) → (Eq let944 True) → (Eq let946 let945) → (Eq let951 let950) → (Eq let952 True) → (Eq let955 let954) → (Eq let956 True) → let882 → (Eq let913 let957) → (Eq let959 let958) → (Eq let949 let960) → (Eq let961 True) → let963 → (Eq let964 True) → (Eq let692 let965) → (Eq let963 let966) → (Eq let188 let967) → (Eq let488 let968) → (Eq let969 True) → (Eq let667 let970) → let972 → (Eq let973 True) → (Eq let496 let974) → (Eq let160 let975) → let977 → (Eq let978 True) → (Eq let362 let979) → (Eq let669 let980) → (Eq let972 let981) → let274 → (Eq let983 let982) → (Eq let948 let984) → (Eq let977 let985) → (Eq let987 let986) → (Eq let580 let988) → (Eq let582 let351) → (Eq let655 let989) → let955 → (Eq let661 let990) → (Eq let671 let991) → (Eq let993 let992) → (Eq let675 let994) → (Eq let681 let995) → (Eq let187 let996) → (Eq let683 let997) → let27 → (Eq let445 let998) → (Eq let393 let314) → (Eq let451 let999) → (Eq let1000 True) → let325 → (Eq let685 let1001) → (Eq let208 let1002) → (Eq let695 let1003) → (Eq let487 let267) → (Eq let697 let1004) → (Eq let1005 True) → let501 → let951 → (And (And (And (And (Or (Or (Or (Or let160 let189) let212) let249) let462) (Or (Or (Or (Or let159 let188) let211) let248) let461)) (Or (Or (Or (Or let158 let187) let210) let247) let460)) (Or (Or (Or (Or let157 let186) let209) let246) let459)) (Or (Or (Or (Or let156 let185) let208) let245) let458)) → (And (And (And (And (Or (Or (Or (Or let160 let181) let202) let223) let252) (Or (Or (Or (Or let167 let188) let394) let231) let464)) (Or (Or (Or (Or let498 let489) let210) let239) let259)) (Or (Or (Or (Or let390 let195) let217) let246) let361)) (Or (Or (Or (Or let174 let484) let473) let470) let458)) → (Or (Or (Or (Or (Or (Or (Or (Or (Not (Eq let51 let51)) (Not (Eq let177 let113))) (Not (Eq let199 let37))) (Not (Eq let71 let65))) (Not (Eq let61 let36))) (Or (Or (Or (Or (Not (Eq let113 let177)) (Not (Eq let44 let44))) (Not (Eq let132 let43))) (Not (Eq let229 let10))) (Not (Eq let79 let57)))) (Or (Or (Or (Or (Not (Eq let37 let199)) (Not (Eq let43 let132))) (Not (Eq let207 let207))) (Not (Eq let237 let32))) (Not (Eq let2 let99)))) (Or (Or (Or (Or (Not (Eq let65 let71)) (Not (Eq let10 let229))) (Not (Eq let32 let237))) (Not (Eq let9 let9))) (Not (Eq let91 let30)))) (Or (Or (Or (Or (Not (Eq let36 let61)) (Not (Eq let57 let79))) (Not (Eq let99 let2))) (Not (Eq let30 let91))) (Not let1006))) → (Or (Or (Or (Or let160 let188) let210) let246) let458) → (Or (Or (Or (Or let697 let457) let683) let669) let594) → let699 → let983 → let856 → let767 → (Not (And (And let266 let88) let900)) → (Not (And (And let314 let29) let623)) → (Not (And (And let865 let122) let900)) → (Not (And (And let278 let267) let398)) → (Not (And (And let643 let279) let623)) → (Not (And (And let869 let437) let398)) → (Not (And (And let533 let141) let653)) → (Not (And (And let56 let943) let424)) → (Not (And (And let437 let100) let653)) → (Not (And (And let148 let643) let878)) → (Not (And (And let267 let110) let424)) → (Not (And (And let555 let865) let878)) → (Not (And (And let110 let31) let935)) → (Not (And (And let142 let555) let275)) → (Not (And (And let279 let120) let935)) → (Not (And (And let98 let869) let619)) → (Not (And (And let29 let533) let275)) → (Not (And (And let943 let266) let619)) → let1007 → let1008 → let1009 → let1010 → let1011 → let1012 → (Not (And (And let109 let97) let283)) → (Not (And (And let717 let935) let905)) → (Not (And (And let419 let87) let283)) → (Not (And (And let62 let653) let532)) → (Not (And (And let547 let275) let905)) → (Not (And (And let873 let424) let532)) → (Not (And (And let909 let141) let267)) → (Not (And (And let123 let943) let437)) → (Not (And (And let424 let145) let267)) → (Not (And (And let148 let547) let712)) → (Not (And (And let653 let33) let437)) → (Not (And (And let555 let419) let712)) → let1013 → (Not (And (And let108 let555) let279)) → let1014 → (Not (And (And let98 let873) let399)) → (Not (And (And let935 let909) let279)) → (Not (And (And let943 let109) let399)) → let1015 → let1016 → let1017 → let1018 → let1019 → let1020 → (Not (And (And let541 let97) let547)) → (Not (And (And let546 let935) let419)) → (Not (And (And let905 let313) let547)) → (Not (And (And let62 let900) let884)) → (Not (And (And let283 let619) let419)) → (Not (And (And let873 let623) let884)) → (Not (And (And let510 let88) let643)) → (Not (And (And let138 let29) let865)) → (Not (And (And let623 let58) let643)) → let1021 → (Not (And (And let900 let399) let865)) → (Not (And (And let869 let905) let280)) → (Not (And (And let399 let120) let943)) → (Not (And (And let108 let869) let110)) → (Not (And (And let619 let151) let943)) → (Not (And (And let142 let873) let33)) → (Not (And (And let935 let510) let110)) → (Not (And (And let29 let541) let33)) → let1022 → let1023 → let1024 → let1025 → let1026 → let1027 → (Not (And (And let884 let87) let873)) → (Not (And (And let546 let653) let109)) → (Not (And (And let532 let313) let873)) → (Not (And (And let717 let900) let541)) → (Not (And (And let283 let878) let109)) → (Not (And (And let547 let398) let541)) → (Not (And (And let280 let122) let869)) → let1028 → (Not (And (And let398 let58) let869)) → (Not (And (And let314 let283) let510)) → (Not (And (And let900 let712) let266)) → (Not (And (And let643 let532) let510)) → (Not (And (And let712 let100) let555)) → (Not (And (And let123 let643) let533)) → (Not (And (And let878 let145) let555)) → (Not (And (And let56 let547) let909)) → (Not (And (And let653 let280) let533)) → (Not (And (And let267 let884) let909)) → let1029 → let1030 → let1031 → let1032 → let1033 → let1034 → (Not (And (And let884 let275) let62)) → (Not (And (And let541 let424) let717)) → (Not (And (And let532 let619) let62)) → (Not (And (And let109 let623) let546)) → (Not (And (And let905 let878) let717)) → (Not (And (And let419 let398) let546)) → let1035 → (Not (And (And let510 let437) let314)) → (Not (And (And let398 let399) let278)) → (Not (And (And let266 let905) let138)) → (Not (And (And let623 let712) let314)) → (Not (And (And let865 let532) let138)) → (Not (And (And let712 let110) let148)) → (Not (And (And let909 let865) let56)) → (Not (And (And let878 let33) let148)) → (Not (And (And let533 let419) let123)) → (Not (And (And let424 let280) let56)) → (Not (And (And let437 let884) let123)) → (Not (And (And let399 let533) let98)) → let1036 → (Not (And (And let619 let909) let98)) → let1037 → (Not (And (And let275 let510) let142)) → (Not (And (And let279 let541) let108)) → False :=
  let let1 := (op e4 e4)
  let let2 := (op e4 e2)
  let let3 := (Eq let2 let1)
  let let4 := (Not let3)
  let let5 := (Not let4)
  let let6 := (Eq let3 let5)
  let let7 := (Eq let5 let3)
  let let8 := (Eq let3 let3)
  let let9 := (op e3 e3)
  let let10 := (op e1 e3)
  let let11 := (Eq let10 let9)
  let let12 := (Not let11)
  let let13 := (Not let12)
  let let14 := (Eq let11 let13)
  let let15 := (Eq let13 let11)
  let let16 := (Eq let11 let11)
  let let17 := (Eq e4 e3)
  let let18 := (Not let17)
  let let19 := (Not let18)
  let let20 := (Eq let17 let19)
  let let21 := (Eq let19 let17)
  let let22 := (Eq let17 let17)
  let let23 := (Eq e4 e0)
  let let24 := (Not let23)
  let let25 := (Not let24)
  let let26 := (Eq let23 let25)
  let let27 := (Eq let25 let23)
  let let28 := (Eq let23 let23)
  let let29 := (Eq e4 let10)
  let let30 := (op e3 e4)
  let let31 := (Eq e2 let30)
  let let32 := (op e2 e3)
  let let33 := (Eq e0 let32)
  let let34 := (And let33 (And let31 let29))
  let let35 := (And (And let33 let31) let29)
  let let36 := (op e0 e4)
  let let37 := (op e0 e2)
  let let38 := (Eq let37 let36)
  let let39 := (Not let38)
  let let40 := (Not let39)
  let let41 := (Eq let38 let40)
  let let42 := (Eq let40 let38)
  let let43 := (op e1 e2)
  let let44 := (op e1 e1)
  let let45 := (Eq let44 let43)
  let let46 := (Not let45)
  let let47 := (Not let46)
  let let48 := (Eq let45 let47)
  let let49 := (Eq let47 let45)
  let let50 := (Eq let45 let45)
  let let51 := (op e0 e0)
  let let52 := (Eq let51 let37)
  let let53 := (Not let52)
  let let54 := (Not let53)
  let let55 := (Eq let54 let52)
  let let56 := (Eq e1 let2)
  let let57 := (op e1 e4)
  let let58 := (Eq e0 let57)
  let let59 := (And let58 (And let56 let31))
  let let60 := (And (And let58 let56) let31)
  let let61 := (op e4 e0)
  let let62 := (Eq e3 let61)
  let let63 := (And let31 (And let62 let58))
  let let64 := (And (And let31 let62) let58)
  let let65 := (op e0 e3)
  let let66 := (Eq let37 let65)
  let let67 := (Not let66)
  let let68 := (Not let67)
  let let69 := (Eq let66 let68)
  let let70 := (Eq let68 let66)
  let let71 := (op e3 e0)
  let let72 := (Eq let51 let71)
  let let73 := (Not let72)
  let let74 := (Not let73)
  let let75 := (Eq let72 let74)
  let let76 := (Eq let74 let72)
  let let77 := (Eq let66 let66)
  let let78 := (Eq let72 let72)
  let let79 := (op e4 e1)
  let let80 := (Eq let79 let2)
  let let81 := (Eq let80 let80)
  let let82 := (Eq e3 e1)
  let let83 := (Not let82)
  let let84 := (Not let83)
  let let85 := (Eq let84 let82)
  let let86 := (Eq let82 let82)
  let let87 := (Eq e2 let36)
  let let88 := (Eq e3 let57)
  let let89 := (And let88 (And let56 let87))
  let let90 := (And (And let88 let56) let87)
  let let91 := (op e4 e3)
  let let92 := (Eq let79 let91)
  let let93 := (Not let92)
  let let94 := (Not let93)
  let let95 := (Eq let94 let92)
  let let96 := (Eq let92 let92)
  let let97 := (Eq e3 let36)
  let let98 := (Eq e2 let91)
  let let99 := (op e2 e4)
  let let100 := (Eq e1 let99)
  let let101 := (And let100 (And let98 let97))
  let let102 := (And (And let100 let98) let97)
  let let103 := (Eq let52 let52)
  let let104 := (Not let80)
  let let105 := (Not let104)
  let let106 := (Eq let80 let105)
  let let107 := (Eq let105 let80)
  let let108 := (Eq e0 let91)
  let let109 := (Eq e2 let71)
  let let110 := (Eq e1 let32)
  let let111 := (And let110 (And let109 let108))
  let let112 := (And (And let110 let109) let108)
  let let113 := (op e0 e1)
  let let114 := (Eq let51 let113)
  let let115 := (Not let114)
  let let116 := (Not let115)
  let let117 := (Eq let114 let116)
  let let118 := (Eq let116 let114)
  let let119 := (Eq let114 let114)
  let let120 := (Eq e1 let30)
  let let121 := (Eq let120 let120)
  let let122 := (Eq e2 let57)
  let let123 := (Eq e0 let2)
  let let124 := (And let97 (And let123 let122))
  let let125 := (And (And let97 let123) let122)
  let let126 := (Eq let57 let99)
  let let127 := (Not let126)
  let let128 := (Not let127)
  let let129 := (Eq let126 let128)
  let let130 := (Eq let128 let126)
  let let131 := (Eq let126 let126)
  let let132 := (op e2 e1)
  let let133 := (Eq let44 let132)
  let let134 := (Not let133)
  let let135 := (Not let134)
  let let136 := (Eq let133 let135)
  let let137 := (Eq let135 let133)
  let let138 := (Eq e0 let79)
  let let139 := (And let87 (And let138 let120))
  let let140 := (And (And let87 let138) let120)
  let let141 := (Eq e3 let99)
  let let142 := (Eq e1 let91)
  let let143 := (And let58 (And let142 let141))
  let let144 := (And (And let58 let142) let141)
  let let145 := (Eq e0 let99)
  let let146 := (And let120 (And let62 let145))
  let let147 := (And (And let120 let62) let145)
  let let148 := (Eq e3 let2)
  let let149 := (And let120 (And let148 let87))
  let let150 := (And (And let120 let148) let87)
  let let151 := (Eq e0 let30)
  let let152 := (Not let151)
  let let153 := (Not let152)
  let let154 := (Eq let151 let153)
  let let155 := (Eq let153 let151)
  let let156 := (Eq let51 e4)
  let let157 := (Eq let51 e3)
  let let158 := (Eq let51 e2)
  let let159 := (Eq let51 e1)
  let let160 := (Eq let51 e0)
  let let161 := (Or let160 (Or let159 (Or let158 (Or let157 let156))))
  let let162 := (Or (Or (Or (Or let160 let159) let158) let157) let156)
  let let163 := (Eq let113 e4)
  let let164 := (Eq let113 e3)
  let let165 := (Eq let113 e2)
  let let166 := (Eq let113 e1)
  let let167 := (Eq let113 e0)
  let let168 := (Or let167 (Or let166 (Or let165 (Or let164 let163))))
  let let169 := (Or (Or (Or (Or let167 let166) let165) let164) let163)
  let let170 := (Eq let36 e4)
  let let171 := (Eq let36 e3)
  let let172 := (Eq let36 e2)
  let let173 := (Eq let36 e1)
  let let174 := (Eq let36 e0)
  let let175 := (Or let174 (Or let173 (Or let172 (Or let171 let170))))
  let let176 := (Or (Or (Or (Or let174 let173) let172) let171) let170)
  let let177 := (op e1 e0)
  let let178 := (Eq let177 e4)
  let let179 := (Eq let177 e3)
  let let180 := (Eq let177 e2)
  let let181 := (Eq let177 e1)
  let let182 := (Eq let177 e0)
  let let183 := (Or let182 (Or let181 (Or let180 (Or let179 let178))))
  let let184 := (Or (Or (Or (Or let182 let181) let180) let179) let178)
  let let185 := (Eq let44 e4)
  let let186 := (Eq let44 e3)
  let let187 := (Eq let44 e2)
  let let188 := (Eq let44 e1)
  let let189 := (Eq let44 e0)
  let let190 := (Or let189 (Or let188 (Or let187 (Or let186 let185))))
  let let191 := (Or (Or (Or (Or let189 let188) let187) let186) let185)
  let let192 := (Eq let10 e4)
  let let193 := (Eq let10 e3)
  let let194 := (Eq let10 e2)
  let let195 := (Eq let10 e1)
  let let196 := (Eq let10 e0)
  let let197 := (Or let196 (Or let195 (Or let194 (Or let193 let192))))
  let let198 := (Or (Or (Or (Or let196 let195) let194) let193) let192)
  let let199 := (op e2 e0)
  let let200 := (Eq let199 e4)
  let let201 := (Eq let199 e3)
  let let202 := (Eq let199 e2)
  let let203 := (Eq let199 e1)
  let let204 := (Eq let199 e0)
  let let205 := (Or let204 (Or let203 (Or let202 (Or let201 let200))))
  let let206 := (Or (Or (Or (Or let204 let203) let202) let201) let200)
  let let207 := (op e2 e2)
  let let208 := (Eq let207 e4)
  let let209 := (Eq let207 e3)
  let let210 := (Eq let207 e2)
  let let211 := (Eq let207 e1)
  let let212 := (Eq let207 e0)
  let let213 := (Or let212 (Or let211 (Or let210 (Or let209 let208))))
  let let214 := (Or (Or (Or (Or let212 let211) let210) let209) let208)
  let let215 := (Eq let32 e4)
  let let216 := (Eq let32 e3)
  let let217 := (Eq let32 e2)
  let let218 := (Eq let32 e1)
  let let219 := (Eq let32 e0)
  let let220 := (Or let219 (Or let218 (Or let217 (Or let216 let215))))
  let let221 := (Or (Or (Or (Or let219 let218) let217) let216) let215)
  let let222 := (Eq let71 e4)
  let let223 := (Eq let71 e3)
  let let224 := (Eq let71 e2)
  let let225 := (Eq let71 e1)
  let let226 := (Eq let71 e0)
  let let227 := (Or let226 (Or let225 (Or let224 (Or let223 let222))))
  let let228 := (Or (Or (Or (Or let226 let225) let224) let223) let222)
  let let229 := (op e3 e1)
  let let230 := (Eq let229 e4)
  let let231 := (Eq let229 e3)
  let let232 := (Eq let229 e2)
  let let233 := (Eq let229 e1)
  let let234 := (Eq let229 e0)
  let let235 := (Or let234 (Or let233 (Or let232 (Or let231 let230))))
  let let236 := (Or (Or (Or (Or let234 let233) let232) let231) let230)
  let let237 := (op e3 e2)
  let let238 := (Eq let237 e4)
  let let239 := (Eq let237 e3)
  let let240 := (Eq let237 e2)
  let let241 := (Eq let237 e1)
  let let242 := (Eq let237 e0)
  let let243 := (Or let242 (Or let241 (Or let240 (Or let239 let238))))
  let let244 := (Or (Or (Or (Or let242 let241) let240) let239) let238)
  let let245 := (Eq let9 e4)
  let let246 := (Eq let9 e3)
  let let247 := (Eq let9 e2)
  let let248 := (Eq let9 e1)
  let let249 := (Eq let9 e0)
  let let250 := (Or let249 (Or let248 (Or let247 (Or let246 let245))))
  let let251 := (Or (Or (Or (Or let249 let248) let247) let246) let245)
  let let252 := (Eq let61 e4)
  let let253 := (Eq let61 e3)
  let let254 := (Eq let61 e2)
  let let255 := (Eq let61 e1)
  let let256 := (Eq let61 e0)
  let let257 := (Or let256 (Or let255 (Or let254 (Or let253 let252))))
  let let258 := (Or (Or (Or (Or let256 let255) let254) let253) let252)
  let let259 := (Eq let2 e4)
  let let260 := (Eq let2 e3)
  let let261 := (Eq let2 e2)
  let let262 := (Eq let2 e1)
  let let263 := (Eq let2 e0)
  let let264 := (Or let263 (Or let262 (Or let261 (Or let260 let259))))
  let let265 := (Or (Or (Or (Or let263 let262) let261) let260) let259)
  let let266 := (Eq e2 let229)
  let let267 := (Eq e4 let43)
  let let268 := (And let138 (And let267 let266))
  let let269 := (And (And let138 let267) let266)
  let let270 := (Eq e4 e1)
  let let271 := (Not let270)
  let let272 := (Not let271)
  let let273 := (Eq let270 let272)
  let let274 := (Eq let272 let270)
  let let275 := (Eq e2 let65)
  let let276 := (And let275 (And let151 let29))
  let let277 := (And (And let275 let151) let29)
  let let278 := (Eq e3 let79)
  let let279 := (Eq e2 let10)
  let let280 := (Eq e0 let132)
  let let281 := (And let280 (And let279 let278))
  let let282 := (And (And let280 let279) let278)
  let let283 := (Eq e4 let177)
  let let284 := (And let278 (And let283 let280))
  let let285 := (And (And let278 let283) let280)
  let let286 := (And let145 (And let98 let88))
  let let287 := (And (And let145 let98) let88)
  let let288 := (Eq let51 let199)
  let let289 := (Not let288)
  let let290 := (Not let289)
  let let291 := (Eq let288 let290)
  let let292 := (Eq let290 let288)
  let let293 := (Eq let82 let84)
  let let294 := (Eq let288 let288)
  let let295 := (And let33 (And let266 let142))
  let let296 := (And (And let33 let266) let142)
  let let297 := (Eq let207 let237)
  let let298 := (Not let297)
  let let299 := (Not let298)
  let let300 := (Eq let299 let297)
  let let301 := (Eq let36 let99)
  let let302 := (Not let301)
  let let303 := (Not let302)
  let let304 := (Eq let301 let303)
  let let305 := (Eq let303 let301)
  let let306 := (Eq e4 e2)
  let let307 := (Not let306)
  let let308 := (Not let307)
  let let309 := (Eq let306 let308)
  let let310 := (Eq let308 let306)
  let let311 := (Eq let301 let301)
  let let312 := (Eq let306 let306)
  let let313 := (Eq e1 let36)
  let let314 := (Eq e2 let79)
  let let315 := (And let141 (And let314 let313))
  let let316 := (And (And let141 let314) let313)
  let let317 := (And let122 (And let142 let97))
  let let318 := (And (And let122 let142) let97)
  let let319 := (And let151 (And let148 let122))
  let let320 := (And (And let151 let148) let122)
  let let321 := (Eq let207 let99)
  let let322 := (Not let321)
  let let323 := (Not let322)
  let let324 := (Eq let321 let323)
  let let325 := (Eq let323 let321)
  let let326 := (Eq let321 let321)
  let let327 := (Eq let51 let177)
  let let328 := (Not let327)
  let let329 := (Not let328)
  let let330 := (Eq let327 let329)
  let let331 := (Eq let329 let327)
  let let332 := (Eq let327 let327)
  let let333 := (Eq let36 let57)
  let let334 := (Not let333)
  let let335 := (Not let334)
  let let336 := (Eq let333 let335)
  let let337 := (Eq let335 let333)
  let let338 := (Eq e3 e0)
  let let339 := (Not let338)
  let let340 := (Not let339)
  let let341 := (Eq let338 let340)
  let let342 := (Eq let340 let338)
  let let343 := (Eq let338 let338)
  let let344 := (Eq let2 let91)
  let let345 := (Not let344)
  let let346 := (Not let345)
  let let347 := (Eq let344 let346)
  let let348 := (Eq let346 let344)
  let let349 := (Eq let344 let344)
  let let350 := (op e4 let91)
  let let351 := (Eq e3 let350)
  let let352 := (Not let351)
  let let353 := (Not let352)
  let let354 := (Eq let351 let353)
  let let355 := (Eq let353 let351)
  let let356 := (Eq let61 let79)
  let let357 := (Not let356)
  let let358 := (Not let357)
  let let359 := (Eq let356 let358)
  let let360 := (Eq let358 let356)
  let let361 := (Eq let91 e4)
  let let362 := (Eq let91 e3)
  let let363 := (Eq let91 e2)
  let let364 := (Eq let91 e1)
  let let365 := (Eq let91 e0)
  let let366 := (Or let365 (Or let364 (Or let363 (Or let362 let361))))
  let let367 := (Or (Or (Or (Or let365 let364) let363) let362) let361)
  let let368 := (Eq let356 let356)
  let let369 := (Eq let9 let30)
  let let370 := (Not let369)
  let let371 := (Not let370)
  let let372 := (Eq let369 let371)
  let let373 := (Eq let371 let369)
  let let374 := (Eq let369 let369)
  let let375 := (Eq let51 let65)
  let let376 := (Not let375)
  let let377 := (Not let376)
  let let378 := (Eq let377 let375)
  let let379 := (Eq let44 let10)
  let let380 := (Not let379)
  let let381 := (Not let380)
  let let382 := (Eq let379 let381)
  let let383 := (Eq let381 let379)
  let let384 := (Eq let375 let375)
  let let385 := (Eq let379 let379)
  let let386 := (Eq let30 e0)
  let let387 := (Or let226 (Or let234 (Or let242 (Or let249 let386))))
  let let388 := (Or (Or (Or (Or let226 let234) let242) let249) let386)
  let let389 := (Eq e0 let71)
  let let390 := (Eq let65 e0)
  let let391 := (Or let390 (Or let196 (Or let219 (Or let249 let365))))
  let let392 := (Or (Or (Or (Or let390 let196) let219) let249) let365)
  let let393 := (Eq let79 e2)
  let let394 := (Eq let132 e2)
  let let395 := (Or let165 (Or let187 (Or let394 (Or let232 let393))))
  let let396 := (Or (Or (Or (Or let165 let187) let394) let232) let393)
  let let397 := (Eq e0 let65)
  let let398 := (Eq e2 let113)
  let let399 := (Eq e0 let10)
  let let400 := (Not let120)
  let let401 := (Not let400)
  let let402 := (Eq let120 let401)
  let let403 := (Eq let401 let120)
  let let404 := (Eq let30 e1)
  let let405 := (Or let225 (Or let233 (Or let241 (Or let248 let404))))
  let let406 := (Or (Or (Or (Or let225 let233) let241) let248) let404)
  let let407 := (Eq let132 let99)
  let let408 := (Not let407)
  let let409 := (Not let408)
  let let410 := (Eq let407 let409)
  let let411 := (Eq let409 let407)
  let let412 := (Eq let65 e1)
  let let413 := (Or let412 (Or let195 (Or let218 (Or let248 let364))))
  let let414 := (Or (Or (Or (Or let412 let195) let218) let248) let364)
  let let415 := (Eq let99 e3)
  let let416 := (Eq let132 e3)
  let let417 := (Or let201 (Or let416 (Or let209 (Or let216 let415))))
  let let418 := (Or (Or (Or (Or let201 let416) let209) let216) let415)
  let let419 := (Eq e3 let199)
  let let420 := (Eq let30 e2)
  let let421 := (Or let224 (Or let232 (Or let240 (Or let247 let420))))
  let let422 := (Or (Or (Or (Or let224 let232) let240) let247) let420)
  let let423 := (Eq let351 let351)
  let let424 := (Eq e3 let37)
  let let425 := (Eq let37 e3)
  let let426 := (Eq e4 let44)
  let let427 := (op e0 let37)
  let let428 := (Eq e2 let427)
  let let429 := (Eq let427 e2)
  let let430 := (And let313 (And let123 let31))
  let let431 := (And (And let313 let123) let31)
  let let432 := (Eq e3 e2)
  let let433 := (Not let432)
  let let434 := (Not let433)
  let let435 := (Eq let432 let434)
  let let436 := (Eq let434 let432)
  let let437 := (Eq e3 let43)
  let let438 := (Eq let43 e3)
  let let439 := (Eq e2 let237)
  let let440 := (Eq let65 e2)
  let let441 := (op e1 let57)
  let let442 := (Eq let441 e4)
  let let443 := (Not let442)
  let let444 := (op e1 let10)
  let let445 := (Eq let444 e3)
  let let446 := (Not let445)
  let let447 := (op e1 let43)
  let let448 := (Eq let447 e2)
  let let449 := (Not let448)
  let let450 := (op e1 let44)
  let let451 := (Eq let450 e1)
  let let452 := (Not let451)
  let let453 := (op e1 let177)
  let let454 := (Eq let453 e0)
  let let455 := (Not let454)
  let let456 := (Or let455 (Or let452 (Or let449 (Or let446 let443))))
  let let457 := (Or (Or (Or (Or let455 let452) let449) let446) let443)
  let let458 := (Eq let1 e4)
  let let459 := (Eq let1 e3)
  let let460 := (Eq let1 e2)
  let let461 := (Eq let1 e1)
  let let462 := (Eq let1 e0)
  let let463 := (Or (Or (Or (Or let462 let461) let460) let459) let458)
  let let464 := (Eq let79 e4)
  let let465 := (Eq let79 e3)
  let let466 := (Eq let79 e1)
  let let467 := (Eq let79 e0)
  let let468 := (Or (Or (Or (Or let467 let466) let393) let465) let464)
  let let469 := (Eq let30 e4)
  let let470 := (Eq let30 e3)
  let let471 := (Or (Or (Or (Or let386 let404) let420) let470) let469)
  let let472 := (Eq let99 e4)
  let let473 := (Eq let99 e2)
  let let474 := (Eq let99 e1)
  let let475 := (Eq let99 e0)
  let let476 := (Or (Or (Or (Or let475 let474) let473) let415) let472)
  let let477 := (Eq let132 e4)
  let let478 := (Eq let132 e1)
  let let479 := (Eq let132 e0)
  let let480 := (Or (Or (Or (Or let479 let478) let394) let416) let477)
  let let481 := (Eq let57 e4)
  let let482 := (Eq let57 e3)
  let let483 := (Eq let57 e2)
  let let484 := (Eq let57 e1)
  let let485 := (Eq let57 e0)
  let let486 := (Or (Or (Or (Or let485 let484) let483) let482) let481)
  let let487 := (Eq let43 e4)
  let let488 := (Eq let43 e2)
  let let489 := (Eq let43 e1)
  let let490 := (Eq let43 e0)
  let let491 := (Or (Or (Or (Or let490 let489) let488) let438) let487)
  let let492 := (Eq let65 e4)
  let let493 := (Eq let65 e3)
  let let494 := (Or (Or (Or (Or let390 let412) let440) let493) let492)
  let let495 := (Eq let37 e4)
  let let496 := (Eq let37 e2)
  let let497 := (Eq let37 e1)
  let let498 := (Eq let37 e0)
  let let499 := (Or (Or (Or (Or let498 let497) let496) let425) let495)
  let let500 := (And let162 (And let169 (And let499 (And let494 (And let176 (And let184 (And let191 (And let491 (And let198 (And let486 (And let206 (And let480 (And let214 (And let221 (And let476 (And let228 (And let236 (And let244 (And let251 (And let471 (And let258 (And let468 (And let265 (And let367 let463))))))))))))))))))))))))
  let let501 := (And (And (And (And (And (And (And (And let162 let169) let499) let494) let176) (And (And (And (And let184 let191) let491) let198) let486)) (And (And (And (And let206 let480) let214) let221) let476)) (And (And (And (And let228 let236) let244) let251) let471)) (And (And (And (And let258 let468) let265) let367) let463))
  let let502 := (Eq e0 let453)
  let let503 := (Or let485 (Or let484 (Or let483 (Or let482 let481))))
  let let504 := (Eq e2 let32)
  let let505 := (Eq e2 let9)
  let let506 := (Eq e3 let237)
  let let507 := (Or let475 (Or let474 (Or let473 (Or let415 let472))))
  let let508 := (Or let159 (Or let181 (Or let203 (Or let225 let255))))
  let let509 := (Or (Or (Or (Or let159 let181) let203) let225) let255)
  let let510 := (Eq e0 let229)
  let let511 := (Or let170 (Or let481 (Or let472 (Or let469 let458))))
  let let512 := (Or (Or (Or (Or let170 let481) let472) let469) let458)
  let let513 := (Or let256 (Or let467 (Or let263 (Or let365 let462))))
  let let514 := (Or (Or (Or (Or let256 let467) let263) let365) let462)
  let let515 := (Eq let133 let133)
  let let516 := (Eq e0 let61)
  let let517 := (Eq e0 let9)
  let let518 := (Or let174 (Or let485 (Or let475 (Or let386 let462))))
  let let519 := (Or (Or (Or (Or let174 let485) let475) let386) let462)
  let let520 := (Eq e0 let36)
  let let521 := (Or let467 (Or let466 (Or let393 (Or let465 let464))))
  let let522 := (Or let156 (Or let178 (Or let200 (Or let222 let252))))
  let let523 := (Or (Or (Or (Or let156 let178) let200) let222) let252)
  let let524 := (Eq e4 let51)
  let let525 := (Eq e0 let1)
  let let526 := (Or let495 (Or let487 (Or let208 (Or let238 let259))))
  let let527 := (Or (Or (Or (Or let495 let487) let208) let238) let259)
  let let528 := (Or let173 (Or let484 (Or let474 (Or let404 let461))))
  let let529 := (Or (Or (Or (Or let173 let484) let474) let404) let461)
  let let530 := (Eq e1 e0)
  let let531 := (Eq let530 let530)
  let let532 := (Eq e2 let177)
  let let533 := (Eq e1 let237)
  let let534 := (Eq let52 let54)
  let let535 := (Eq let44 let79)
  let let536 := (Eq let535 let535)
  let let537 := (Eq let207 let32)
  let let538 := (Not let537)
  let let539 := (Not let538)
  let let540 := (Eq let539 let537)
  let let541 := (Eq e1 let71)
  let let542 := (Eq e3 let207)
  let let543 := (Not let87)
  let let544 := (Not let543)
  let let545 := (Eq let544 let87)
  let let546 := (Eq e1 let61)
  let let547 := (Eq e4 let199)
  let let548 := (Eq let38 let38)
  let let549 := (Eq e2 e3)
  let let550 := (Or let498 (Or let497 (Or let496 (Or let425 let495))))
  let let551 := (Eq e1 e4)
  let let552 := (Or let223 (Or let231 (Or let239 (Or let246 let470))))
  let let553 := (Or (Or (Or (Or let223 let231) let239) let246) let470)
  let let554 := (Eq e1 let1)
  let let555 := (Eq e4 let237)
  let let556 := (Or let157 (Or let164 (Or let425 (Or let493 let171))))
  let let557 := (Or (Or (Or (Or let157 let164) let425) let493) let171)
  let let558 := (Eq let375 let377)
  let let559 := (Eq e2 e0)
  let let560 := (Eq e0 e2)
  let let561 := (Or let179 (Or let186 (Or let438 (Or let193 let482))))
  let let562 := (Or (Or (Or (Or let179 let186) let438) let193) let482)
  let let563 := (Eq e1 let177)
  let let564 := (Eq let44 let57)
  let let565 := (Eq let564 let564)
  let let566 := (Or let440 (Or let194 (Or let217 (Or let247 let363))))
  let let567 := (Or (Or (Or (Or let440 let194) let217) let247) let363)
  let let568 := (Eq let297 let299)
  let let569 := (Or let202 (Or let394 (Or let210 (Or let217 let473))))
  let let570 := (Or (Or (Or (Or let202 let394) let210) let217) let473)
  let let571 := (Or let479 (Or let478 (Or let394 (Or let416 let477))))
  let let572 := (Eq e3 let229)
  let let573 := (Eq e0 e1)
  let let574 := (Or let493 (Or let193 (Or let216 (Or let246 let362))))
  let let575 := (Or (Or (Or (Or let493 let193) let216) let246) let362)
  let let576 := (Or let158 (Or let165 (Or let496 (Or let440 let172))))
  let let577 := (Or (Or (Or (Or let158 let165) let496) let440) let172)
  let let578 := (Eq e1 let57)
  let let579 := (op e4 let1)
  let let580 := (Eq let579 e4)
  let let581 := (Not let580)
  let let582 := (Eq let350 e3)
  let let583 := (Not let582)
  let let584 := (op e4 let2)
  let let585 := (Eq let584 e2)
  let let586 := (Not let585)
  let let587 := (op e4 let79)
  let let588 := (Eq let587 e1)
  let let589 := (Not let588)
  let let590 := (op e4 let61)
  let let591 := (Eq let590 e0)
  let let592 := (Not let591)
  let let593 := (Or let592 (Or let589 (Or let586 (Or let583 let581))))
  let let594 := (Or (Or (Or (Or let592 let589) let586) let583) let581)
  let let595 := (Not let530)
  let let596 := (Not let595)
  let let597 := (Eq let530 let596)
  let let598 := (Eq let596 let530)
  let let599 := (Eq e2 let99)
  let let600 := (Or let253 (Or let465 (Or let260 (Or let362 let459))))
  let let601 := (Or (Or (Or (Or let253 let465) let260) let362) let459)
  let let602 := (Eq let199 let71)
  let let603 := (Not let602)
  let let604 := (Not let603)
  let let605 := (Eq let604 let602)
  let let606 := (Eq let207 let2)
  let let607 := (Not let606)
  let let608 := (Not let607)
  let let609 := (Eq let608 let606)
  let let610 := (Or let160 (Or let182 (Or let204 (Or let226 let256))))
  let let611 := (Or (Or (Or (Or let160 let182) let204) let226) let256)
  let let612 := (Eq e0 e4)
  let let613 := (Eq e3 let65)
  let let614 := (Eq let57 let30)
  let let615 := (Not let614)
  let let616 := (Not let615)
  let let617 := (Eq let614 let616)
  let let618 := (Eq let616 let614)
  let let619 := (Eq e1 let65)
  let let620 := (And let313 (And let108 let141))
  let let621 := (And (And let313 let108) let141)
  let let622 := (Eq e2 e4)
  let let623 := (Eq e3 let113)
  let let624 := (Eq e1 let587)
  let let625 := (Eq e2 e1)
  let let626 := (Eq e1 e2)
  let let627 := (And let88 (And let546 let145))
  let let628 := (And (And let88 let546) let145)
  let let629 := (Eq e0 let199)
  let let630 := (Eq e0 let113)
  let let631 := (Eq e4 let9)
  let let632 := (Or let497 (Or let489 (Or let211 (Or let241 let262))))
  let let633 := (Or (Or (Or (Or let497 let489) let211) let241) let262)
  let let634 := (Or let390 (Or let412 (Or let440 (Or let493 let492))))
  let let635 := (op e2 let32)
  let let636 := (Eq e3 let635)
  let let637 := (Eq let635 e3)
  let let638 := (Eq e1 let229)
  let let639 := (Eq e1 e3)
  let let640 := (Eq let432 let432)
  let let641 := (Eq let87 let87)
  let let642 := (Eq e1 let79)
  let let643 := (Eq e4 let132)
  let let644 := (Eq let537 let539)
  let let645 := (And let31 (And let278 let313))
  let let646 := (And (And let31 let278) let313)
  let let647 := (Eq e0 let590)
  let let648 := (And let145 (And let314 let120))
  let let649 := (And (And let145 let314) let120)
  let let650 := (Not let535)
  let let651 := (Not let650)
  let let652 := (Eq let651 let535)
  let let653 := (Eq e4 let37)
  let let654 := (op e3 let30)
  let let655 := (Eq let654 e4)
  let let656 := (Not let655)
  let let657 := (op e3 let9)
  let let658 := (Eq let657 e3)
  let let659 := (Not let658)
  let let660 := (op e3 let237)
  let let661 := (Eq let660 e2)
  let let662 := (Not let661)
  let let663 := (op e3 let229)
  let let664 := (Eq let663 e1)
  let let665 := (Not let664)
  let let666 := (op e3 let71)
  let let667 := (Eq let666 e0)
  let let668 := (Not let667)
  let let669 := (Or (Or (Or (Or let668 let665) let662) let659) let656)
  let let670 := (op e2 let99)
  let let671 := (Eq let670 e4)
  let let672 := (Not let671)
  let let673 := (Not let637)
  let let674 := (op e2 let207)
  let let675 := (Eq let674 e2)
  let let676 := (Not let675)
  let let677 := (op e2 let132)
  let let678 := (Eq let677 e1)
  let let679 := (Not let678)
  let let680 := (op e2 let199)
  let let681 := (Eq let680 e0)
  let let682 := (Not let681)
  let let683 := (Or (Or (Or (Or let682 let679) let676) let673) let672)
  let let684 := (op e0 let36)
  let let685 := (Eq let684 e4)
  let let686 := (Not let685)
  let let687 := (op e0 let65)
  let let688 := (Eq let687 e3)
  let let689 := (Not let688)
  let let690 := (Not let429)
  let let691 := (op e0 let113)
  let let692 := (Eq let691 e1)
  let let693 := (Not let692)
  let let694 := (op e0 let51)
  let let695 := (Eq let694 e0)
  let let696 := (Not let695)
  let let697 := (Or (Or (Or (Or let696 let693) let690) let689) let686)
  let let698 := (And let697 (And let457 (And let683 (And let669 let594))))
  let let699 := (And (And (And (And let697 let457) let683) let669) let594)
  let let700 := (Or let172 (Or let483 (Or let473 (Or let420 let460))))
  let let701 := (Or (Or (Or (Or let172 let483) let473) let420) let460)
  let let702 := (Eq e4 let91)
  let let703 := (Eq e2 let2)
  let let704 := (Eq e2 let584)
  let let705 := (Eq let704 let704)
  let let706 := (Eq let559 let559)
  let let707 := (Eq let30 let1)
  let let708 := (Not let707)
  let let709 := (Not let708)
  let let710 := (Eq let709 let707)
  let let711 := (Eq e4 let99)
  let let712 := (Eq e0 let43)
  let let713 := (Eq e4 let2)
  let let714 := (Not let704)
  let let715 := (Not let714)
  let let716 := (Eq let715 let704)
  let let717 := (Eq e2 let61)
  let let718 := (And let141 (And let717 let58))
  let let719 := (And (And let141 let717) let58)
  let let720 := (Eq e3 let657)
  let let721 := (Not let559)
  let let722 := (Not let721)
  let let723 := (Eq let722 let559)
  let let724 := (Eq let707 let709)
  let let725 := (Eq e4 let57)
  let let726 := (Eq e0 let37)
  let let727 := (Eq e4 let1)
  let let728 := (Eq let704 let715)
  let let729 := (Eq let559 let722)
  let let730 := (Eq e4 let36)
  let let731 := (Or let498 (Or let490 (Or let212 (Or let242 let263))))
  let let732 := (Or (Or (Or (Or let498 let490) let212) let242) let263)
  let let733 := (Eq e4 let79)
  let let734 := (Eq e3 let9)
  let let735 := (Eq e4 let61)
  let let736 := (Or let254 (Or let393 (Or let261 (Or let363 let460))))
  let let737 := (Or (Or (Or (Or let254 let393) let261) let363) let460)
  let let738 := (Eq e2 let207)
  let let739 := (Eq e2 let447)
  let let740 := (Or let252 (Or let464 (Or let259 (Or let361 let458))))
  let let741 := (Or (Or (Or (Or let252 let464) let259) let361) let458)
  let let742 := (Eq let707 let707)
  let let743 := (Eq e0 e3)
  let let744 := (Eq e4 let30)
  let let745 := (Eq e0 let207)
  let let746 := (Or let490 (Or let489 (Or let488 (Or let438 let487))))
  let let747 := (Eq e3 let1)
  let let748 := (Eq e3 let30)
  let let749 := (Or let462 (Or let461 (Or let460 (Or let459 let458))))
  let let750 := (Eq e0 let44)
  let let751 := (Or let204 (Or let479 (Or let212 (Or let219 let475))))
  let let752 := (Or (Or (Or (Or let204 let479) let212) let219) let475)
  let let753 := (Or let171 (Or let482 (Or let415 (Or let470 let459))))
  let let754 := (Or (Or (Or (Or let171 let482) let415) let470) let459)
  let let755 := (Eq e3 e4)
  let let756 := (Not let755)
  let let757 := (Not let622)
  let let758 := (Not let549)
  let let759 := (Not let551)
  let let760 := (Not let639)
  let let761 := (Not let626)
  let let762 := (Not let612)
  let let763 := (Not let743)
  let let764 := (Not let560)
  let let765 := (Not let573)
  let let766 := (And let765 (And let764 (And let763 (And let762 (And let761 (And let760 (And let759 (And let758 (And let757 let756)))))))))
  let let767 := (And (And (And (And (And (And (And (And (And let765 let764) let763) let762) let761) let760) let759) let758) let757) let756)
  let let768 := (Eq e3 let71)
  let let769 := (Eq let91 let1)
  let let770 := (Not let769)
  let let771 := (Not (Eq let79 let1))
  let let772 := (Not (Eq let61 let1))
  let let773 := (Eq let61 let91)
  let let774 := (Not let773)
  let let775 := (Not (Eq let61 let2))
  let let776 := (Not (Eq let237 let30))
  let let777 := (Not (Eq let237 let9))
  let let778 := (Not (Eq let229 let30))
  let let779 := (Not (Eq let229 let9))
  let let780 := (Not (Eq let229 let237))
  let let781 := (Not (Eq let71 let30))
  let let782 := (Not (Eq let71 let9))
  let let783 := (Not (Eq let71 let237))
  let let784 := (Not (Eq let71 let229))
  let let785 := (Eq let32 let99)
  let let786 := (Not let785)
  let let787 := (Not (Eq let132 let32))
  let let788 := (Not (Eq let132 let207))
  let let789 := (Not (Eq let199 let99))
  let let790 := (Not (Eq let199 let32))
  let let791 := (Not (Eq let199 let207))
  let let792 := (Not (Eq let199 let132))
  let let793 := (Eq let10 let57)
  let let794 := (Not let793)
  let let795 := (Eq let43 let57)
  let let796 := (Not let795)
  let let797 := (Not (Eq let43 let10))
  let let798 := (Not let564)
  let let799 := (Not (Eq let177 let57))
  let let800 := (Not (Eq let177 let10))
  let let801 := (Not (Eq let177 let43))
  let let802 := (Not (Eq let177 let44))
  let let803 := (Eq let65 let36)
  let let804 := (Not let803)
  let let805 := (Not (Eq let113 let36))
  let let806 := (Not (Eq let113 let65))
  let let807 := (Not (Eq let113 let37))
  let let808 := (Eq let51 let36)
  let let809 := (Not let808)
  let let810 := (Not (Eq let99 let1))
  let let811 := (Not (Eq let99 let30))
  let let812 := (Not (Eq let57 let1))
  let let813 := (Not (Eq let36 let1))
  let let814 := (Not (Eq let36 let30))
  let let815 := (Eq let9 let91)
  let let816 := (Not let815)
  let let817 := (Eq let32 let91)
  let let818 := (Not let817)
  let let819 := (Not (Eq let32 let9))
  let let820 := (Not (Eq let10 let91))
  let let821 := (Not (Eq let10 let32))
  let let822 := (Not (Eq let65 let91))
  let let823 := (Not (Eq let65 let9))
  let let824 := (Not (Eq let65 let32))
  let let825 := (Not (Eq let65 let10))
  let let826 := (Not (Eq let237 let2))
  let let827 := (Eq let43 let2)
  let let828 := (Not let827)
  let let829 := (Not (Eq let43 let237))
  let let830 := (Not (Eq let43 let207))
  let let831 := (Not (Eq let37 let2))
  let let832 := (Not (Eq let37 let237))
  let let833 := (Not (Eq let37 let207))
  let let834 := (Not (Eq let37 let43))
  let let835 := (Eq let229 let79)
  let let836 := (Not let835)
  let let837 := (Eq let132 let79)
  let let838 := (Not let837)
  let let839 := (Not (Eq let132 let229))
  let let840 := (Eq let44 let229)
  let let841 := (Not let840)
  let let842 := (Not (Eq let113 let79))
  let let843 := (Not (Eq let113 let229))
  let let844 := (Not (Eq let113 let132))
  let let845 := (Not (Eq let113 let44))
  let let846 := (Eq let71 let61)
  let let847 := (Not let846)
  let let848 := (Eq let199 let61)
  let let849 := (Not let848)
  let let850 := (Not (Eq let177 let61))
  let let851 := (Not (Eq let177 let71))
  let let852 := (Not (Eq let177 let199))
  let let853 := (Eq let51 let61)
  let let854 := (Not let853)
  let let855 := (And let328 (And let289 (And let73 (And let854 (And let852 (And let851 (And let850 (And let603 (And let849 (And let847 (And let845 (And let844 (And let843 (And let842 (And let134 (And let841 (And let650 (And let839 (And let838 (And let836 (And let834 (And let833 (And let832 (And let831 (And let830 (And let829 (And let828 (And let298 (And let607 (And let826 (And let825 (And let824 (And let823 (And let822 (And let821 (And let12 (And let820 (And let819 (And let818 (And let816 (And let334 (And let302 (And let814 (And let813 (And let127 (And let615 (And let812 (And let811 (And let810 (And let708 (And let115 (And let53 (And let376 (And let809 (And let807 (And let806 (And let805 (And let67 (And let39 (And let804 (And let802 (And let801 (And let800 (And let799 (And let46 (And let380 (And let798 (And let797 (And let796 (And let794 (And let792 (And let791 (And let790 (And let789 (And let788 (And let787 (And let408 (And let538 (And let322 (And let786 (And let784 (And let783 (And let782 (And let781 (And let780 (And let779 (And let778 (And let777 (And let776 (And let370 (And let357 (And let775 (And let774 (And let772 (And let104 (And let93 (And let771 (And let345 (And let4 let770)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  let let856 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And let328 let289) let73) let854) let852) let851) let850) let603) let849) let847) (And (And (And (And (And (And (And (And (And let845 let844) let843) let842) let134) let841) let650) let839) let838) let836)) (And (And (And (And (And (And (And (And (And let834 let833) let832) let831) let830) let829) let828) let298) let607) let826)) (And (And (And (And (And (And (And (And (And let825 let824) let823) let822) let821) let12) let820) let819) let818) let816)) (And (And (And (And (And (And (And (And (And let334 let302) let814) let813) let127) let615) let812) let811) let810) let708)) (And (And (And (And (And (And (And (And (And (And (And (And (And let115 let53) let376) let809) let807) let806) let805) let67) let39) let804) (And (And (And (And (And (And (And (And (And let802 let801) let800) let799) let46) let380) let798) let797) let796) let794)) (And (And (And (And (And (And (And (And (And let792 let791) let790) let789) let788) let787) let408) let538) let322) let786)) (And (And (And (And (And (And (And (And (And let784 let783) let782) let781) let780) let779) let778) let777) let776) let370)) (And (And (And (And (And (And (And (And (And let357 let775) let774) let772) let104) let93) let771) let345) let4) let770)))
  let let857 := (Eq e2 let1)
  let let858 := (Eq let87 let544)
  let let859 := (Or let255 (Or let466 (Or let262 (Or let364 let461))))
  let let860 := (Or (Or (Or (Or let255 let466) let262) let364) let461)
  let let861 := (Or let200 (Or let477 (Or let208 (Or let215 let472))))
  let let862 := (Or (Or (Or (Or let200 let477) let208) let215) let472)
  let let863 := (Or let425 (Or let438 (Or let209 (Or let239 let260))))
  let let864 := (Or (Or (Or (Or let425 let438) let209) let239) let260)
  let let865 := (Eq e3 let132)
  let let866 := (Eq e2 let132)
  let let867 := (Eq e2 let199)
  let let868 := (Eq let840 let840)
  let let869 := (Eq e4 let229)
  let let870 := (Eq e1 let207)
  let let871 := (Not let841)
  let let872 := (Eq let871 let840)
  let let873 := (Eq e4 let71)
  let let874 := (Eq e1 let43)
  let let875 := (Eq let840 let871)
  let let876 := (Or let222 (Or let230 (Or let238 (Or let245 let469))))
  let let877 := (Or (Or (Or (Or let222 let230) let238) let245) let469)
  let let878 := (Eq e1 let37)
  let let879 := (Eq e1 let132)
  let let880 := (Not let774)
  let let881 := (Eq let773 let880)
  let let882 := (Eq let880 let773)
  let let883 := (Eq e3 let32)
  let let884 := (Eq e1 let199)
  let let885 := (Eq e1 let677)
  let let886 := (Eq e3 let10)
  let let887 := (Or let159 (Or let166 (Or let497 (Or let412 let173))))
  let let888 := (Or (Or (Or (Or let159 let166) let497) let412) let173)
  let let889 := (Or let203 (Or let478 (Or let211 (Or let218 let474))))
  let let890 := (Or (Or (Or (Or let203 let478) let211) let218) let474)
  let let891 := (Or let163 (Or let185 (Or let477 (Or let230 let464))))
  let let892 := (Or (Or (Or (Or let163 let185) let477) let230) let464)
  let let893 := (Or let178 (Or let185 (Or let487 (Or let192 let481))))
  let let894 := (Or (Or (Or (Or let178 let185) let487) let192) let481)
  let let895 := (Eq let92 let94)
  let let896 := (Eq e1 let663)
  let let897 := (Eq e1 let9)
  let let898 := (Eq e3 let44)
  let let899 := (Eq let333 let333)
  let let900 := (Eq e4 let113)
  let let901 := (Eq let407 let407)
  let let902 := (Eq e1 let10)
  let let903 := (Or let164 (Or let186 (Or let416 (Or let231 let465))))
  let let904 := (Or (Or (Or (Or let164 let186) let416) let231) let465)
  let let905 := (Eq e3 let177)
  let let906 := (Eq e1 let113)
  let let907 := (And let97 (And let138 let100))
  let let908 := (And (And let97 let138) let100)
  let let909 := (Eq e0 let237)
  let let910 := (Or let166 (Or let188 (Or let478 (Or let233 let466))))
  let let911 := (Or (Or (Or (Or let166 let188) let478) let233) let466)
  let let912 := (Not let798)
  let let913 := (Eq let912 let564)
  let let914 := (Eq let297 let297)
  let let915 := (Or let180 (Or let187 (Or let488 (Or let194 let483))))
  let let916 := (Or (Or (Or (Or let180 let187) let488) let194) let483)
  let let917 := (Eq e4 let441)
  let let918 := (Eq e0 let177)
  let let919 := (Or let181 (Or let188 (Or let489 (Or let195 let484))))
  let let920 := (Or (Or (Or (Or let181 let188) let489) let195) let484)
  let let921 := (Eq e3 let687)
  let let922 := (Or let182 (Or let189 (Or let490 (Or let196 let485))))
  let let923 := (Or (Or (Or (Or let182 let189) let490) let196) let485)
  let let924 := (And let122 (And let546 let151))
  let let925 := (And (And let122 let546) let151)
  let let926 := (Or let156 (Or let163 (Or let495 (Or let492 let170))))
  let let927 := (Or (Or (Or (Or let156 let163) let495) let492) let170)
  let let928 := (Or let386 (Or let404 (Or let420 (Or let470 let469))))
  let let929 := (Eq let535 let651)
  let let930 := (Eq e3 let51)
  let let931 := (Or let157 (Or let179 (Or let201 (Or let223 let253))))
  let let932 := (Or (Or (Or (Or let157 let179) let201) let223) let253)
  let let933 := (Eq let602 let604)
  let let934 := (Eq let606 let608)
  let let935 := (Eq e4 let65)
  let let936 := (Eq e2 let51)
  let let937 := (Or let492 (Or let192 (Or let215 (Or let245 let361))))
  let let938 := (Or (Or (Or (Or let492 let192) let215) let245) let361)
  let let939 := (Or let158 (Or let180 (Or let202 (Or let224 let254))))
  let let940 := (Or (Or (Or (Or let158 let180) let202) let224) let254)
  let let941 := (Eq e1 let51)
  let let942 := (Eq let602 let602)
  let let943 := (Eq e4 let32)
  let let944 := (Eq let606 let606)
  let let945 := (Or let160 (Or let167 (Or let498 (Or let390 let174))))
  let let946 := (Or (Or (Or (Or let160 let167) let498) let390) let174)
  let let947 := (And let741 let512)
  let let948 := (Or (Or (Or (Or let496 let488) let210) let240) let261)
  let let949 := (Or (Or (Or (Or let167 let189) let479) let234) let467)
  let let950 := (And let946 (And let611 (And let888 (And let509 (And let577 (And let940 (And let557 (And let932 (And let927 (And let523 (And let923 (And let949 (And let920 (And let911 (And let916 (And let396 (And let562 (And let904 (And let894 (And let892 (And let752 (And let732 (And let890 (And let633 (And let570 (And let948 (And let418 (And let864 (And let862 (And let527 (And let388 (And let392 (And let406 (And let414 (And let422 (And let567 (And let553 (And let575 (And let877 (And let938 (And let514 (And let519 (And let860 (And let529 (And let737 (And let701 (And let601 (And let754 let947))))))))))))))))))))))))))))))))))))))))))))))))
  let let951 := (And (And (And (And (And (And (And (And (And let946 let611) (And let888 let509)) (And let577 let940)) (And let557 let932)) (And let927 let523)) (And (And (And (And (And let923 let949) (And let920 let911)) (And let916 let396)) (And let562 let904)) (And let894 let892))) (And (And (And (And (And let752 let732) (And let890 let633)) (And let570 let948)) (And let418 let864)) (And let862 let527))) (And (And (And (And (And let388 let392) (And let406 let414)) (And let422 let567)) (And let553 let575)) (And let877 let938))) (And (And (And (And (And let514 let519) (And let860 let529)) (And let737 let701)) (And let601 let754)) let947))
  let let952 := (Eq let808 let808)
  let let953 := (Not let809)
  let let954 := (Eq let808 let953)
  let let955 := (Eq let953 let808)
  let let956 := (Eq let773 let773)
  let let957 := (Eq let564 let912)
  let let958 := (And let151 (And let278 let100))
  let let959 := (And (And let151 let278) let100)
  let let960 := (Or let167 (Or let189 (Or let479 (Or let234 let467))))
  let let961 := (Eq let815 let815)
  let let962 := (Not let816)
  let let963 := (Eq let962 let815)
  let let964 := (Eq let151 let151)
  let let965 := (Eq e1 let691)
  let let966 := (Eq let815 let962)
  let let967 := (Eq e1 let44)
  let let968 := (Eq e2 let43)
  let let969 := (Eq let853 let853)
  let let970 := (Eq e0 let666)
  let let971 := (Not let804)
  let let972 := (Eq let971 let803)
  let let973 := (Eq let270 let270)
  let let974 := (Eq e2 let37)
  let let975 := (Eq e0 let51)
  let let976 := (Not let854)
  let let977 := (Eq let976 let853)
  let let978 := (Eq let614 let614)
  let let979 := (Eq e3 let91)
  let let980 := (Or let668 (Or let665 (Or let662 (Or let659 let656))))
  let let981 := (Eq let803 let971)
  let let982 := (And let160 (And let188 (And let210 (And let246 let458))))
  let let983 := (And (And (And (And let160 let188) let210) let246) let458)
  let let984 := (Or let496 (Or let488 (Or let210 (Or let240 let261))))
  let let985 := (Eq let853 let976)
  let let986 := (And let100 (And let717 let151))
  let let987 := (And (And let100 let717) let151)
  let let988 := (Eq e4 let579)
  let let989 := (Eq e4 let654)
  let let990 := (Eq e2 let660)
  let let991 := (Eq e4 let670)
  let let992 := (And let87 (And let108 let88))
  let let993 := (And (And let87 let108) let88)
  let let994 := (Eq e2 let674)
  let let995 := (Eq e0 let680)
  let let996 := (Eq e2 let44)
  let let997 := (Or let682 (Or let679 (Or let676 (Or let673 let672))))
  let let998 := (Eq e3 let444)
  let let999 := (Eq e1 let450)
  let let1000 := (Eq let537 let537)
  let let1001 := (Eq e4 let684)
  let let1002 := (Eq e4 let207)
  let let1003 := (Eq e0 let694)
  let let1004 := (Or let696 (Or let693 (Or let690 (Or let689 let686))))
  let let1005 := (Eq let803 let803)
  let let1006 := (Eq let1 let1)
  let let1007 := (Not let102)
  let let1008 := (Not let150)
  let let1009 := (Not let318)
  let let1010 := (Not let646)
  let let1011 := (Not let90)
  let let1012 := (Not let316)
  let let1013 := (Not let35)
  let let1014 := (Not let277)
  let let1015 := (Not let287)
  let let1016 := (Not let320)
  let let1017 := (Not let993)
  let let1018 := (Not let64)
  let let1019 := (Not let125)
  let let1020 := (Not let719)
  let let1021 := (Not let285)
  let let1022 := (Not let144)
  let let1023 := (Not let959)
  let let1024 := (Not let621)
  let let1025 := (Not let147)
  let let1026 := (Not let908)
  let let1027 := (Not let628)
  let let1028 := (Not let269)
  let let1029 := (Not let60)
  let let1030 := (Not let649)
  let let1031 := (Not let431)
  let let1032 := (Not let987)
  let let1033 := (Not let140)
  let let1034 := (Not let925)
  let let1035 := (Not let282)
  let let1036 := (Not let296)
  let let1037 := (Not let112)
  let let1038 := (Not let525)
  let let1039 := (And let975 (And let967 (And let738 (And let734 let727))))
  let let1040 := (Eq And And)
  let let1041 := (Not let625)
  let let1042 := (And let595 (And let721 (And let339 (And let24 (And let1041 (And let83 (And let271 (And let433 (And let307 let18)))))))))
  let let1043 := (Not let727)
  let let1044 := (Or let1038 (Or let1043 let23))
  let let1045 := (And let525 let727)
  let let1046 := (Not let98)
  let let1047 := (Or let525 let1046)
  let let1048 := (Or let152 let1046)
  let let1049 := (Or let1046 let152)
  let let1050 := (Or let152 let152)
  let let1051 := (Or let152 let400)
  let let1052 := (Or let530 let1051)
  let let1053 := (Or let596 let1051)
  let let1054 := (Eq Or Or)
  let let1055 := (And let595 let151)
  let let1056 := (Eq let120 False)
  let let1057 := (Eq let530 False)
  let let1058 := (Eq e1 e1)
  let let1059 := (Not let31)
  let let1060 := (Or let152 let1059)
  let let1061 := (Or let559 let1060)
  let let1062 := (Or let722 let1060)
  let let1063 := (And let721 let151)
  let let1064 := (Eq let31 False)
  let let1065 := (Eq let559 False)
  let let1066 := (Eq e2 e2)
  let let1067 := (Or let120 let1047)
  let let1068 := (Or let31 let525)
  let let1069 := (Or let1046 let1068)
  let let1070 := (Or let56 let1068)
  let let1071 := (Or let525 let56)
  let let1072 := (Or let98 let525)
  let let1073 := (Or let56 let31)
  let let1074 := (Or let525 let1073)
  let let1075 := (Or let525 let152)
  let let1076 := (Or let56 (Or let525 (Or let543 let152)))
  let let1077 := (Not let142)
  let let1078 := (Or let1077 let1046)
  let let1079 := (Or let1077 (Or let1046 let625))
  let let1080 := (And let142 let98)
  let let1081 := (Not let554)
  let let1082 := (Or let1081 (Or let1043 let270))
  let let1083 := (And let554 let727)
  let let1084 := (Not let642)
  let let1085 := (Not let967)
  let let1086 := (Or let1085 let1084)
  let let1087 := (Or let535 let1086)
  let let1088 := (Or let651 let1086)
  let let1089 := (And let650 let967)
  let let1090 := (Eq let535 False)
  let let1091 := (Or let546 (Or let642 (Or let56 (Or let142 let554))))
  let let1092 := (Or let730 (Or let725 (Or let711 (Or let744 let727))))
  let let1093 := (Or let735 (Or let733 (Or let713 (Or let702 let727))))
  let let1094 := (Or let748 let747)
  let let1095 := (Or let97 (Or let88 (Or let141 let1094)))
  let let1096 := (Or let979 let747)
  let let1097 := (Or let62 (Or let278 (Or let148 let1096)))
  let let1098 := (Or let31 let857)
  let let1099 := (Or let87 (Or let122 (Or let599 let1098)))
  let let1100 := (Or let717 (Or let314 (Or let703 (Or let98 let857))))
  let let1101 := (Or let313 (Or let578 (Or let100 (Or let120 let554))))
  let let1102 := (Or let151 let525)
  let let1103 := (Or let520 (Or let58 (Or let145 let1102)))
  let let1104 := (Or let108 let525)
  let let1105 := (Or let516 (Or let138 (Or let123 let1104)))
  let let1106 := (Or let631 let702)
  let let1107 := (Or let935 (Or let29 (Or let943 let1106)))
  let let1108 := (Or let873 (Or let869 (Or let555 (Or let631 let744))))
  let let1109 := (Or let613 (Or let886 (Or let883 (Or let734 let979))))
  let let1110 := (Or let768 (Or let572 (Or let506 (Or let734 let748))))
  let let1111 := (Or let275 (Or let279 (Or let504 (Or let505 let98))))
  let let1112 := (Or let109 (Or let266 (Or let439 (Or let505 let31))))
  let let1113 := (Or let619 (Or let902 (Or let110 (Or let897 let142))))
  let let1114 := (Or let541 (Or let638 (Or let533 (Or let897 let120))))
  let let1115 := (Or let397 (Or let399 (Or let33 (Or let517 let108))))
  let let1116 := (Or let389 (Or let510 (Or let909 (Or let517 let151))))
  let let1117 := (Or let653 (Or let267 (Or let1002 (Or let555 let713))))
  let let1118 := (Or let547 (Or let643 (Or let1002 (Or let943 let711))))
  let let1119 := (Or let424 (Or let437 (Or let542 (Or let506 let148))))
  let let1120 := (Or let419 (Or let865 (Or let542 (Or let883 let141))))
  let let1121 := (Or let974 (Or let968 (Or let738 (Or let439 let703))))
  let let1122 := (Or let867 (Or let866 (Or let738 (Or let504 let599))))
  let let1123 := (Or let878 (Or let874 (Or let870 (Or let533 let56))))
  let let1124 := (Or let884 (Or let879 (Or let870 (Or let110 let100))))
  let let1125 := (Or let726 (Or let712 (Or let745 (Or let909 let123))))
  let let1126 := (Or let629 (Or let280 (Or let745 (Or let33 let145))))
  let let1127 := (Or let900 (Or let426 (Or let643 (Or let869 let733))))
  let let1128 := (Or let283 (Or let426 (Or let267 (Or let29 let725))))
  let let1129 := (Or let623 (Or let898 (Or let865 (Or let572 let278))))
  let let1130 := (Or let905 (Or let898 (Or let437 (Or let886 let88))))
  let let1131 := (Or let398 (Or let996 (Or let866 (Or let266 let314))))
  let let1132 := (Or let532 (Or let996 (Or let968 (Or let279 let122))))
  let let1133 := (Or let906 (Or let967 (Or let879 (Or let638 let642))))
  let let1134 := (Or let563 (Or let967 (Or let874 (Or let902 let578))))
  let let1135 := (Or let630 (Or let750 (Or let280 (Or let510 let138))))
  let let1136 := (Or let918 (Or let750 (Or let712 (Or let399 let58))))
  let let1137 := (Or let524 (Or let283 (Or let547 (Or let873 let735))))
  let let1138 := (Or let524 (Or let900 (Or let653 (Or let935 let730))))
  let let1139 := (Or let930 (Or let905 (Or let419 (Or let768 let62))))
  let let1140 := (Or let930 (Or let623 (Or let424 (Or let613 let97))))
  let let1141 := (Or let936 (Or let532 (Or let867 (Or let109 let717))))
  let let1142 := (Or let936 (Or let398 (Or let974 (Or let275 let87))))
  let let1143 := (Or let941 (Or let563 (Or let884 (Or let541 let546))))
  let let1144 := (Or let941 (Or let906 (Or let878 (Or let619 let313))))
  let let1145 := (Or let975 (Or let918 (Or let629 (Or let389 let516))))
  let let1146 := (Or let975 (Or let630 (Or let726 (Or let397 let520))))
  let let1147 := (And let1146 (And let1145 (And let1144 (And let1143 (And let1142 (And let1141 (And let1140 (And let1139 (And let1138 (And let1137 (And let1136 (And let1135 (And let1134 (And let1133 (And let1132 (And let1131 (And let1130 (And let1129 (And let1128 (And let1127 (And let1126 (And let1125 (And let1124 (And let1123 (And let1122 (And let1121 (And let1120 (And let1119 (And let1118 (And let1117 (And let1116 (And let1115 (And let1114 (And let1113 (And let1112 (And let1111 (And let1110 (And let1109 (And let1108 (And let1107 (And let1105 (And let1103 (And let1091 (And let1101 (And let1100 (And let1099 (And let1097 (And let1095 (And let1093 let1092)))))))))))))))))))))))))))))))))))))))))))))))))
  let let1148 := (Not let546)
  let let1149 := (Not let62)
  let let1150 := (Or let1148 let1149)
  let let1151 := (Or let1148 (Or let1149 let82))
  let let1152 := (And let546 let62)
  let let1153 := (Not let108)
  let let1154 := (Or let1153 let1046)
  let let1155 := (Not let738)
  let let1156 := (Not let975)
  let let1157 := (Or let1046 (Or let1156 let1153))
  let let1158 := (Or let1155 (Or let543 (Or let808 let1157)))
  let let1159 := (Or let1155 (Or let543 (Or let953 let1157)))
  let let1160 := (And let738 (And let87 (And let809 (And let98 let975))))
  let let1161 := (Eq let108 False)
  let let1162 := (Eq let808 False)
  let let1163 := (Eq let108 let808)
  let let1164 := (Eq let91 let36)
  let let1165 := (Eq let36 let91)
  let let1166 := (Eq let207 let91)
  let let1167 := (Eq let91 let207)
  let let1168 := (Eq let36 let207)
  let let1169 := (Eq let207 let36)
  let let1170 := (Or let1148 let1046)
  let let1171 := (Not let313)
  let let1172 := (Or let1155 (Or let543 let1171))
  let let1173 := (Or let1046 let1172)
  let let1174 := (Or let1148 let1173)
  let let1175 := (Or let773 let1174)
  let let1176 := (Or let880 let1174)
  let let1177 := (And let738 let87)
  let let1178 := (And let98 let1177)
  let let1179 := (And let774 (And let546 let1178))
  let let1180 := (Eq let313 False)
  let let1181 := (Eq let773 False)
  let let1182 := (Or let1155 let543)
  let let1183 := (Or let1046 let1182)
  let let1184 := (Not let578)
  let let1185 := (Or let1085 let1184)
  let let1186 := (Or let564 let1185)
  let let1187 := (Or let912 let1185)
  let let1188 := (And let798 let967)
  let let1189 := (Eq let564 False)
  let let1190 := (Not let278)
  let let1191 := (Not let100)
  let let1192 := (Not let958)
  let let1193 := (Not let979)
  let let1194 := (Not let734)
  let let1195 := (Or let1194 let1193)
  let let1196 := (Or let815 let1195)
  let let1197 := (Or let962 let1195)
  let let1198 := (And let816 let734)
  let let1199 := (Eq let91 let91)
  let let1200 := (Not let747)
  let let1201 := (Or let1200 (Or let1043 let17))
  let let1202 := (And let747 let727)
  let let1203 := (Not let148)
  let let1204 := (Or let1203 let1046)
  let let1205 := (Or let1203 (Or let1046 let1204))
  let let1206 := (Or let1046 (Or let1203 let351))
  let let1207 := (And let98 let148)
  let let1208 := (Eq e4 e4)
  let let1209 := (Or let1203 (Or let1046 let704))
  let let1210 := (And let148 let98)
  let let1211 := (Not let123)
  let let1212 := (Or let1211 let1203)
  let let1213 := (Or let1211 (Or let1203 let338))
  let let1214 := (And let123 let148)
  let let1215 := (Not let516)
  let let1216 := (Or let1156 let1215)
  let let1217 := (Or let853 let1216)
  let let1218 := (Or let976 let1216)
  let let1219 := (And let854 let975)
  let let1220 := (Eq let853 False)
  let let1221 := (Not let138)
  let let1222 := (Or let1148 let1221)
  let let1223 := (Or let1148 (Or let1221 let647))
  let let1224 := (And let546 let138)
  let let1225 := (Or let1221 (Or let1148 let624))
  let let1226 := (And let138 let546)
  let let1227 := (Or let1221 let1148)
  let let1228 := (Or let1043 let988)
  let let1229 := (Not let988)
  let let1230 := (Not let624)
  let let1231 := (Not let647)
  let let1232 := (Or let1231 (Or let1230 (Or let714 (Or let352 let1229))))
  let let1233 := (Not let989)
  let let1234 := (Not let720)
  let let1235 := (Not let990)
  let let1236 := (Not let896)
  let let1237 := (Not let970)
  let let1238 := (Or let1237 (Or let1236 (Or let1235 (Or let1234 let1233))))
  let let1239 := (Not let991)
  let let1240 := (Not let636)
  let let1241 := (Not let994)
  let let1242 := (Not let885)
  let let1243 := (Not let995)
  let let1244 := (Or let1243 (Or let1242 (Or let1241 (Or let1240 let1239))))
  let let1245 := (Not let917)
  let let1246 := (Not let998)
  let let1247 := (Not let739)
  let let1248 := (Not let999)
  let let1249 := (Not let502)
  let let1250 := (Or let1249 (Or let1248 (Or let1247 (Or let1246 let1245))))
  let let1251 := (Not let1001)
  let let1252 := (Not let921)
  let let1253 := (Not let428)
  let let1254 := (Not let965)
  let let1255 := (Not let1003)
  let let1256 := (Or let1255 (Or let1254 (Or let1253 (Or let1252 let1251))))
  let let1257 := (And let1256 (And let1250 (And let1244 (And let1238 let1232))))
  let let1258 := (Or let152 let1203)
  let let1259 := (Not let97)
  let let1260 := (Or let543 let1259)
  let let1261 := (Or let432 let1260)
  let let1262 := (Or let434 let1260)
  let let1263 := (And let433 let87)
  let let1264 := (Eq let432 False)
  let let1265 := (Eq e3 e3)
  let let1266 := (Not let275)
  let let1267 := (Or let1266 let543)
  let let1268 := (Or let803 let1267)
  let let1269 := (Or let971 let1267)
  let let1270 := (And let804 let275)
  let let1271 := (Eq let87 False)
  let let1272 := (Eq let36 let36)
  let let1273 := (Not let505)
  let let1274 := (Or let1194 let1273)
  let let1275 := (Or let1155 (Or let1203 let1274))
  let let1276 := (Or let606 let1275)
  let let1277 := (Or let608 let1275)
  let let1278 := (And let148 let734)
  let let1279 := (And let607 (And let738 let1278))
  let let1280 := (Eq let505 False)
  let let1281 := (Eq let606 False)
  let let1282 := (Eq let9 let2)
  let let1283 := (Or let1203 let1194)
  let let1284 := (Not let504)
  let let1285 := (Or let1155 let1284)
  let let1286 := (Or let537 let1285)
  let let1287 := (Or let539 let1285)
  let let1288 := (And let538 let738)
  let let1289 := (Not let279)
  let let1290 := (Or let1085 (Or let1289 let1172))
  let let1291 := (Or let379 let1290)
  let let1292 := (Or let381 let1290)
  let let1293 := (And let380 (And let967 (And let279 let1177)))
  let let1294 := (Eq let379 False)
  let let1295 := (Eq let36 let10)
  let let1296 := (Eq let10 let36)
  let let1297 := (Eq let10 let207)
  let let1298 := (Eq let207 let10)
  let let1299 := (Or let1191 let152)
  let let1300 := (Or let98 let1299)
  let let1301 := (Not let717)
  let let1302 := (Not let986)
  let let1303 := (Not let141)
  let let1304 := (Or let1191 let1303)
  let let1305 := (Or let1191 (Or let1303 let82))
  let let1306 := (And let100 let141)
  let let1307 := (Not let857)
  let let1308 := (Or let1307 (Or let1043 let306))
  let let1309 := (And let857 let727)
  let let1310 := (Not let703)
  let let1311 := (Or let1155 let1310)
  let let1312 := (Or let606 let1311)
  let let1313 := (Or let608 let1311)
  let let1314 := (And let607 let738)
  let let1315 := (Not let748)
  let let1316 := (Or let1194 let1315)
  let let1317 := (Or let369 let1316)
  let let1318 := (Or let371 let1316)
  let let1319 := (And let370 let734)
  let let1320 := (Eq let30 let30)
  let let1321 := (Not let88)
  let let1322 := (Not let992)
  let let1323 := (Not let314)
  let let1324 := (Or let1221 let1323)
  let let1325 := (Or let1156 (Or let543 (Or let1155 (Or let1323 let1221))))
  let let1326 := (Or let808 let1325)
  let let1327 := (Or let953 let1325)
  let let1328 := (And let809 (And let975 (And let87 (And let738 let314))))
  let let1329 := (Eq let138 False)
  let let1330 := (Eq let138 let808)
  let let1331 := (Eq let79 let36)
  let let1332 := (Eq let36 let79)
  let let1333 := (Eq let207 let79)
  let let1334 := (Eq let79 let207)
  let let1335 := (Or let525 let1077)
  let let1336 := (Or let1149 let1077)
  let let1337 := (Or let1149 (Or let1077 let352))
  let let1338 := (Or let356 let1337)
  let let1339 := (Or let358 let1337)
  let let1340 := (And let357 (And let62 let142))
  let let1341 := (Eq let351 False)
  let let1342 := (Or let1149 let1153)
  let let1343 := (Or let1153 let1149)
  let let1344 := (Or let351 let1343)
  let let1345 := (Or let353 let1343)
  let let1346 := (And let352 let108)
  let let1347 := (Eq let62 False)
  let let1348 := (Or let543 let543)
  let let1349 := (Or let543 let1323)
  let let1350 := (Or let1085 (Or let1323 let1172))
  let let1351 := (Or let535 let1350)
  let let1352 := (Or let651 let1350)
  let let1353 := (And let650 (And let967 (And let314 let1177)))
  let let1354 := (Not let750)
  let let1355 := (Or let1085 let1354)
  let let1356 := (Or let1211 (Or let1077 let1355))
  let let1357 := (Or let344 let1356)
  let let1358 := (Or let346 let1356)
  let let1359 := (And let345 (And let123 (And let142 let967)))
  let let1360 := (Eq let750 False)
  let let1361 := (Eq let344 False)
  let let1362 := (Eq let44 let91)
  let let1363 := (Not let58)
  let let1364 := (Or let1363 let1321)
  let let1365 := (Or let338 let1364)
  let let1366 := (Or let340 let1364)
  let let1367 := (And let339 let58)
  let let1368 := (Eq let88 False)
  let let1369 := (Eq let338 False)
  let let1370 := (Or let543 (Or let1321 let1274))
  let let1371 := (Or let333 let1370)
  let let1372 := (Or let335 let1370)
  let let1373 := (And let88 let734)
  let let1374 := (And let334 (And let87 let1373))
  let let1375 := (Eq let9 let57)
  let let1376 := (Or let1321 let1194)
  let let1377 := (Not let399)
  let let1378 := (Or let1156 (Or let543 (Or let1155 (Or let1289 let1377))))
  let let1379 := (Or let808 let1378)
  let let1380 := (Or let953 let1378)
  let let1381 := (And let809 (And let975 (And let87 (And let738 let279))))
  let let1382 := (Not let918)
  let let1383 := (Or let1156 let1382)
  let let1384 := (Or let327 let1383)
  let let1385 := (Or let329 let1383)
  let let1386 := (And let328 let975)
  let let1387 := (Not let712)
  let let1388 := (Or let1211 (Or let1387 let827))
  let let1389 := (And let123 let712)
  let let1390 := (Or let1301 let1149)
  let let1391 := (Or let1303 (Or let1155 let1301))
  let let1392 := (Or let1194 (Or let1149 (Or let321 let1391)))
  let let1393 := (Or let1194 (Or let1149 (Or let323 let1391)))
  let let1394 := (And let734 (And let62 (And let322 (And let141 let738))))
  let let1395 := (Eq let321 False)
  let let1396 := (Eq let99 let9)
  let let1397 := (Eq let9 let99)
  let let1398 := (Or let1171 let543)
  let let1399 := (Or let1171 (Or let543 let625))
  let let1400 := (And let313 let87)
  let let1401 := (Not let599)
  let let1402 := (Or let1155 let1401)
  let let1403 := (Or let321 let1402)
  let let1404 := (Or let323 let1402)
  let let1405 := (And let322 let738)
  let let1406 := (Eq let99 let99)
  let let1407 := (Not let122)
  let let1408 := (Not let319)
  let let1409 := (Not let924)
  let let1410 := (Or let1407 let1321)
  let let1411 := (Or let432 let1410)
  let let1412 := (Or let434 let1410)
  let let1413 := (And let433 let122)
  let let1414 := (Or let1407 let1077)
  let let1415 := (Not let317)
  let let1416 := (Or let1303 let1303)
  let let1417 := (Not let145)
  let let1418 := (Or let1417 let1303)
  let let1419 := (Or let338 let1418)
  let let1420 := (Or let340 let1418)
  let let1421 := (And let339 let145)
  let let1422 := (Not let315)
  let let1423 := (Not let620)
  let let1424 := (Not let109)
  let let1425 := (Or let1301 (Or let1424 let846))
  let let1426 := (And let717 let109)
  let let1427 := (Not let725)
  let let1428 := (Or let1407 let1427)
  let let1429 := (Or let306 let1428)
  let let1430 := (Or let308 let1428)
  let let1431 := (And let307 let122)
  let let1432 := (Or let1155 (Or let1303 let1274))
  let let1433 := (Or let321 let1432)
  let let1434 := (Or let323 let1432)
  let let1435 := (And let141 let734)
  let let1436 := (And let322 (And let738 let1435))
  let let1437 := (Or let1303 let1194)
  let let1438 := (Not let745)
  let let1439 := (Or let1155 let1438)
  let let1440 := (Or let1156 (Or let1301 let1439))
  let let1441 := (Or let853 let1440)
  let let1442 := (Or let976 let1440)
  let let1443 := (And let854 (And let975 (And let717 let738)))
  let let1444 := (Eq let745 False)
  let let1445 := (Eq let207 let61)
  let let1446 := (Or let1190 let1077)
  let let1447 := (Or let1077 (Or let1190 let351))
  let let1448 := (And let142 let278)
  let let1449 := (Or let1190 (Or let1077 let624))
  let let1450 := (And let278 let142)
  let let1451 := (Not let439)
  let let1452 := (Or let1155 let1451)
  let let1453 := (Or let297 let1452)
  let let1454 := (Or let299 let1452)
  let let1455 := (And let298 let738)
  let let1456 := (Not let266)
  let let1457 := (Or let1456 let1077)
  let let1458 := (Not let33)
  let let1459 := (Not let295)
  let let1460 := (Not let629)
  let let1461 := (Or let1156 let1460)
  let let1462 := (Or let288 let1461)
  let let1463 := (Or let290 let1461)
  let let1464 := (And let289 let975)
  let let1465 := (Not let280)
  let let1466 := (Or let1465 let1190)
  let let1467 := (Not let283)
  let let1468 := (Not let284)
  let let1469 := (Not let281)
  let let1470 := (Not let29)
  let let1471 := (Not let276)
  let let1472 := (Not let426)
  let let1473 := (Or let1085 let1472)
  let let1474 := (Or let270 let1473)
  let let1475 := (Or let272 let1473)
  let let1476 := (And let271 let967)
  let let1477 := (Not let267)
  let let1478 := (Not let268)
  let let1479 := (Or let1301 let1211)
  let let1480 := (Or let1230 (Or let352 let1479))
  let let1481 := (Or let1230 (Or let352 (Or let1301 (Or let1211 let1479))))
  let let1482 := (Or let1301 (Or let1211 let647))
  let let1483 := (And let717 let123)
  let let1484 := (Eq let2 let590)
  let let1485 := (Or let1211 (Or let1301 let704))
  let let1486 := (And let123 let717)
  let let1487 := (Or let31 let151)
  let let1488 := (Not let744)
  let let1489 := (Or let1043 let1488)
  let let1490 := (Or let1043 (Or let1488 let707))
  let let1491 := (And let727 let744)
  let let1492 := (Or let748 let744)
  let let1493 := (Or let151 (Or let120 (Or let31 let1492)))
  let let1494 := (Or let525 (Or let554 (Or let857 (Or let747 let727))))
  let let1495 := (Or let979 let702)
  let let1496 := (Or let108 (Or let142 (Or let98 let1495)))
  let let1497 := (Or let123 (Or let56 (Or let703 (Or let148 let713))))
  let let1498 := (Or let138 (Or let642 (Or let314 (Or let278 let733))))
  let let1499 := (Or let516 (Or let546 (Or let717 (Or let62 let735))))
  let let1500 := (Or let517 (Or let897 (Or let505 (Or let734 let631))))
  let let1501 := (Or let909 (Or let533 (Or let439 (Or let506 let555))))
  let let1502 := (Or let510 (Or let638 (Or let266 (Or let572 let869))))
  let let1503 := (Or let389 (Or let541 (Or let109 (Or let768 let873))))
  let let1504 := (Or let145 (Or let100 (Or let599 (Or let141 let711))))
  let let1505 := (Or let33 (Or let110 (Or let504 (Or let883 let943))))
  let let1506 := (Or let745 (Or let870 (Or let738 (Or let542 let1002))))
  let let1507 := (Or let280 (Or let879 (Or let866 (Or let865 let643))))
  let let1508 := (Or let629 (Or let884 (Or let867 (Or let419 let547))))
  let let1509 := (Or let58 (Or let578 (Or let122 (Or let88 let725))))
  let let1510 := (Or let399 (Or let902 (Or let279 (Or let886 let29))))
  let let1511 := (Or let712 (Or let874 (Or let968 (Or let437 let267))))
  let let1512 := (Or let750 (Or let967 (Or let996 (Or let898 let426))))
  let let1513 := (Or let918 (Or let563 (Or let532 (Or let905 let283))))
  let let1514 := (Or let520 (Or let313 (Or let87 (Or let97 let730))))
  let let1515 := (Or let397 (Or let619 (Or let275 (Or let613 let935))))
  let let1516 := (Or let726 (Or let878 (Or let974 (Or let424 let653))))
  let let1517 := (Or let630 (Or let906 (Or let398 (Or let623 let900))))
  let let1518 := (Or let975 (Or let941 (Or let936 (Or let930 let524))))
  let let1519 := (And let1518 (And let1517 (And let1516 (And let1515 (And let1514 (And let1513 (And let1512 (And let1511 (And let1510 (And let1509 (And let1508 (And let1507 (And let1506 (And let1505 (And let1504 (And let1503 (And let1502 (And let1501 (And let1500 (And let1493 (And let1499 (And let1498 (And let1497 (And let1496 let1494))))))))))))))))))))))))
  let let1520 := (Or let400 let1073)
  let let1521 := (Or let151 let400)
  let let1522 := (Or let400 let1521)
  let let1523 := (Or let400 let1355)
  let let1524 := (Or let151 let1523)
  let let1525 := (Or let153 let1523)
  let let1526 := (And let152 (And let120 let967))
  let let1527 := (Eq let151 False)
  let let1528 := (Eq let44 let30)
  let let1529 := (Eq e0 e0)
  let let1530 := (Or let400 let1102)
  let let1531 := (Or let1363 let1407)
  let let1532 := (Or let559 let1531)
  let let1533 := (Or let722 let1531)
  let let1534 := (And let721 let58)
  let let1535 := (Not let520)
  let let1536 := (Or let1156 let1535)
  let let1537 := (Or let808 let1536)
  let let1538 := (Or let953 let1536)
  let let1539 := (And let809 let975)
  let let1540 := (Or let1417 let400)
  let let1541 := (Or let1417 let1540)
  let let1542 := (Not let648)
  let let1543 := (Or let1148 let1301)
  let let1544 := (Or let1148 (Or let1301 let625))
  let let1545 := (And let546 let717)
  let let1546 := (Or let525 let543)
  let let1547 := (Or let543 let400)
  let let1548 := (Not let149)
  let let1549 := (Or let400 let1149)
  let let1550 := (Not let146)
  let let1551 := (Or let400 let1081)
  let let1552 := (Or let707 let1551)
  let let1553 := (Or let709 let1551)
  let let1554 := (And let708 let120)
  let let1555 := (Eq let554 False)
  let let1556 := (Eq let707 False)
  let let1557 := (Not let143)
  let let1558 := (Or let400 let1221)
  let let1559 := (Not let139)
  let let1560 := (Or let525 let1321)
  let let1561 := (Or let98 let1102)
  let let1562 := (Or let151 (Or let525 let1303))
  let let1563 := (Not let718)
  let let1564 := (Or let1323 let1190)
  let let1565 := (Or let1194 (Or let1190 let1323))
  let let1566 := (Or let1155 (Or let1303 let1565))
  let let1567 := (Or let321 let1566)
  let let1568 := (Or let323 let1566)
  let let1569 := (And let734 let278)
  let let1570 := (And let322 (And let738 (And let141 let1569)))
  let let1571 := (Eq let314 False)
  let let1572 := (Eq let9 let79)
  let let1573 := (Eq let79 let9)
  let let1574 := (Or let1194 let1190)
  let let1575 := (Or let1046 let1521)
  let let1576 := (Not let870)
  let let1577 := (Or let1155 let1576)
  let let1578 := (Or let1148 (Or let1046 let1577))
  let let1579 := (Or let773 let1578)
  let let1580 := (Or let880 let1578)
  let let1581 := (And let98 let738)
  let let1582 := (And let774 (And let546 let1581))
  let let1583 := (Eq let870 False)
  let let1584 := (Or let1046 let1155)
  let let1585 := (Not let884)
  let let1586 := (Or let1148 (Or let1585 let848))
  let let1587 := (And let546 let884)
  let let1588 := (Or let151 let1047)
  let let1589 := (Or let1046 let1321)
  let let1590 := (Not let286)
  let let1591 := (Or let151 (Or let525 let1416))
  let let1592 := (Or let100 (Or let884 let870))
  let let1593 := (Or let1303 let1592)
  let let1594 := (Not let879)
  let let1595 := (Or let1085 let1594)
  let let1596 := (Or let133 let1595)
  let let1597 := (Or let135 let1595)
  let let1598 := (And let134 let967)
  let let1599 := (Not let517)
  let let1600 := (Or let1194 let1599)
  let let1601 := (Or let1363 (Or let1303 let1600))
  let let1602 := (Or let126 let1601)
  let let1603 := (Or let128 let1601)
  let let1604 := (And let127 (And let58 let1435))
  let let1605 := (Eq let517 False)
  let let1606 := (Not let110)
  let let1607 := (Or let1085 (Or let1606 let1458))
  let let1608 := (Or let400 let1607)
  let let1609 := (Or let151 let1608)
  let let1610 := (Or let153 let1608)
  let let1611 := (And let967 let110)
  let let1612 := (And let152 (And let120 let1611))
  let let1613 := (Eq let33 False)
  let let1614 := (Eq let44 let32)
  let let1615 := (Eq let32 let44)
  let let1616 := (Eq let30 let44)
  let let1617 := (Or let1085 let1606)
  let let1618 := (Not let397)
  let let1619 := (Or let1156 let1618)
  let let1620 := (Or let375 let1619)
  let let1621 := (Or let377 let1619)
  let let1622 := (And let376 let975)
  let let1623 := (Eq let65 let65)
  let let1624 := (Or let1363 (Or let1377 let793))
  let let1625 := (And let58 let399)
  let let1626 := (Or let884 (Or let870 (Or let88 let151)))
  let let1627 := (Or let151 (Or let525 let1407))
  let let1628 := (Or let1417 let1417)
  let let1629 := (Or let1465 let1417)
  let let1630 := (Or let407 let1629)
  let let1631 := (Or let409 let1629)
  let let1632 := (And let408 let280)
  let let1633 := (Or let1417 let1191)
  let let1634 := (Or let530 let1633)
  let let1635 := (Or let596 let1633)
  let let1636 := (And let595 let145)
  let let1637 := (Or let1407 let1592)
  let let1638 := (Not let124)
  let let1639 := (Or let1221 let1046)
  let let1640 := (Or let1156 (Or let1259 (Or let1194 (Or let1190 let1221))))
  let let1641 := (Or let808 let1640)
  let let1642 := (Or let953 let1640)
  let let1643 := (And let809 (And let975 (And let97 let1569)))
  let let1644 := (Eq let9 let36)
  let let1645 := (Or let87 let1259)
  let let1646 := (Or let280 (Or let750 let1645))
  let let1647 := (Or let1259 let1274)
  let let1648 := (Or let87 let1647)
  let let1649 := (Or let544 let1647)
  let let1650 := (And let97 let734)
  let let1651 := (And let543 let1650)
  let let1652 := (Or let1259 let1194)
  let let1653 := (Not let630)
  let let1654 := (Or let1156 let1653)
  let let1655 := (Or let114 let1654)
  let let1656 := (Or let116 let1654)
  let let1657 := (And let115 let975)
  let let1658 := (Not let111)
  let let1659 := (Not let510)
  let let1660 := (Or let1659 let1456)
  let let1661 := (Or let559 let1660)
  let let1662 := (Or let722 let1660)
  let let1663 := (And let721 let510)
  let let1664 := (Not let56)
  let let1665 := (Or let120 let1046)
  let let1666 := (Or let120 (Or let1259 let1046))
  let let1667 := (Not let101)
  let let1668 := (Or let1171 let1259)
  let let1669 := (Or let1171 (Or let1259 let82))
  let let1670 := (And let313 let97)
  let let1671 := (Or let1664 let1046)
  let let1672 := (Or let1046 let1046)
  let let1673 := (Or let1153 (Or let1046 let559))
  let let1674 := (And let108 let98)
  let let1675 := (Or let1211 let1664)
  let let1676 := (Or let1085 (Or let1664 let1211))
  let let1677 := (Or let1156 (Or let1171 let1676))
  let let1678 := (Or let808 let1677)
  let let1679 := (Or let953 let1677)
  let let1680 := (And let967 let56)
  let let1681 := (And let809 (And let975 (And let313 let1680)))
  let let1682 := (Eq let123 False)
  let let1683 := (Eq let44 let2)
  let let1684 := (Eq let2 let44)
  let let1685 := (Eq let36 let44)
  let let1686 := (Eq let44 let36)
  let let1687 := (Or let1085 let1664)
  let let1688 := (Not let897)
  let let1689 := (Or let1194 let1688)
  let let1690 := (Or let1171 (Or let1303 let1689))
  let let1691 := (Or let301 let1690)
  let let1692 := (Or let303 let1690)
  let let1693 := (And let302 (And let313 let1435))
  let let1694 := (Eq let897 False)
  let let1695 := (Or let1221 (Or let1046 let1439))
  let let1696 := (Or let92 let1695)
  let let1697 := (Or let94 let1695)
  let let1698 := (And let93 (And let138 let1581))
  let let1699 := (Not let619)
  let let1700 := (Or let1171 (Or let1699 let803))
  let let1701 := (And let313 let619)
  let let1702 := (Not let902)
  let let1703 := (Or let1085 let1702)
  let let1704 := (Or let379 let1703)
  let let1705 := (Or let381 let1703)
  let let1706 := (And let380 let967)
  let let1707 := (Or let1156 (Or let1171 let1607))
  let let1708 := (Or let808 let1707)
  let let1709 := (Or let953 let1707)
  let let1710 := (And let809 (And let975 (And let313 let1611)))
  let let1711 := (Or let1221 (Or let1465 let837))
  let let1712 := (And let138 let280)
  let let1713 := (Or let1321 let1664)
  let let1714 := (Or let31 let1713)
  let let1715 := (Or let1664 let543)
  let let1716 := (Not let89)
  let let1717 := (Or let1664 let1203)
  let let1718 := (Or let82 let1717)
  let let1719 := (Or let84 let1717)
  let let1720 := (And let83 let56)
  let let1721 := (Or let400 let1676)
  let let1722 := (Or let151 let1721)
  let let1723 := (Or let153 let1721)
  let let1724 := (And let152 (And let120 let1680))
  let let1725 := (Or let148 let1540)
  let let1726 := (Or let400 let1059)
  let let1727 := (Or let400 (Or let1059 let625))
  let let1728 := (And let120 let31)
  let let1729 := (Or let120 let1102)
  let let1730 := (Or let1303 let1729)
  let let1731 := (Or let1303 let1363)
  let let1732 := (Or let1363 let1731)
  let let1733 := (Or let120 let1072)
  let let1734 := (Or let151 let120)
  let let1735 := (Or let525 let1734)
  let let1736 := (Or let120 (Or let151 (Or let1321 (Or let1059 let1417))))
  let let1737 := (Not let627)
  let let1738 := (Or let1171 let1059)
  let let1739 := (Not let645)
  let let1740 := (Not let430)
  let let1741 := (Or let1085 (Or let1321 let1689))
  let let1742 := (Or let564 let1741)
  let let1743 := (Or let912 let1741)
  let let1744 := (And let798 (And let967 let1373))
  let let1745 := (Or let1059 let1577)
  let let1746 := (Or let120 let1745)
  let let1747 := (Or let401 let1745)
  let let1748 := (And let31 let738)
  let let1749 := (And let400 let1748)
  let let1750 := (Eq let207 let30)
  let let1751 := (Or let1059 let1155)
  let let1752 := (Or let1153 let1077)
  let let1753 := (Or let1156 (Or let1171 (Or let1085 (Or let1077 let1153))))
  let let1754 := (Or let808 let1753)
  let let1755 := (Or let953 let1753)
  let let1756 := (And let809 (And let975 (And let313 (And let967 let142))))
  let let1757 := (Or let559 let1324)
  let let1758 := (Or let722 let1324)
  let let1759 := (And let721 let138)
  let let1760 := (Or let432 let1390)
  let let1761 := (Or let434 let1390)
  let let1762 := (And let433 let717)
  let let1763 := (Or let1221 (Or let1301 (Or let1203 let1600)))
  let let1764 := (Or let80 let1763)
  let let1765 := (Or let105 let1763)
  let let1766 := (And let104 (And let138 (And let717 let1278)))
  let let1767 := (Or let1077 (Or let1606 let817))
  let let1768 := (And let142 let110)
  let let1769 := (Not let541)
  let let1770 := (Or let1585 let1769)
  let let1771 := (Or let602 let1770)
  let let1772 := (Or let604 let1770)
  let let1773 := (And let603 let884)
  let let1774 := (Eq let71 let71)
  let let1775 := (Not let638)
  let let1776 := (Or let1085 let1775)
  let let1777 := (Or let840 let1776)
  let let1778 := (Or let871 let1776)
  let let1779 := (And let841 let967)
  let let1780 := (Not let533)
  let let1781 := (Not let909)
  let let1782 := (Or let1781 let1780)
  let let1783 := (Or let1156 (Or let1171 (Or let1085 (Or let1780 let1781))))
  let let1784 := (Or let808 let1783)
  let let1785 := (Or let953 let1783)
  let let1786 := (And let809 (And let975 (And let313 (And let967 let533))))
  let let1787 := (Not let389)
  let let1788 := (Or let1156 let1787)
  let let1789 := (Or let72 let1788)
  let let1790 := (Or let74 let1788)
  let let1791 := (And let73 let975)
  let let1792 := (Or let1221 (Or let1659 let835))
  let let1793 := (And let138 let510)
  let let1794 := (Or let1323 let1664)
  let let1795 := (Or let1664 let1323)
  let let1796 := (Or let704 let1795)
  let let1797 := (Or let715 let1795)
  let let1798 := (And let714 let56)
  let let1799 := (Or let1323 (Or let1664 let624))
  let let1800 := (And let314 let56)
  let let1801 := (Or let1149 (Or let1153 let1342))
  let let1802 := (Or let1149 (Or let1153 let647))
  let let1803 := (And let62 let108)
  let let1804 := (Or let1059 let1439)
  let let1805 := (Or let151 let1804)
  let let1806 := (Or let153 let1804)
  let let1807 := (And let152 let1748)
  let let1808 := (Not let907)
  let let1809 := (Or let1191 (Or let1606 let785))
  let let1810 := (And let100 let110)
  let let1811 := (Not let63)
  let let1812 := (Not let59)
  let let1813 := (Or let1363 (Or let1387 let795))
  let let1814 := (And let58 let712)
  let let1815 := (Or let1153 (Or let1211 let344))
  let let1816 := (And let108 let123)
  let let1817 := (Not let726)
  let let1818 := (Or let1156 let1817)
  let let1819 := (Or let52 let1818)
  let let1820 := (Or let54 let1818)
  let let1821 := (And let53 let975)
  let let1822 := (Or let530 let1752)
  let let1823 := (Or let596 let1752)
  let let1824 := (And let595 let108)
  let let1825 := (Eq let142 False)
  let let1826 := (Or let530 let1782)
  let let1827 := (Or let596 let1782)
  let let1828 := (And let595 let909)
  let let1829 := (Not let874)
  let let1830 := (Or let1085 let1829)
  let let1831 := (Or let45 let1830)
  let let1832 := (Or let47 let1830)
  let let1833 := (And let46 let967)
  let let1834 := (Not let878)
  let let1835 := (Or let1834 let1259)
  let let1836 := (Or let1834 (Or let1259 let1689))
  let let1837 := (Or let38 let1836)
  let let1838 := (Or let40 let1836)
  let let1839 := (And let39 (And let878 let1650))
  let let1840 := (Or let1834 let1699)
  let let1841 := (Or let66 let1840)
  let let1842 := (Or let68 let1840)
  let let1843 := (And let67 let878)
  let let1844 := (Or let138 let525)
  let let1845 := (Not let702)
  let let1846 := (Or let1043 let1845)
  let let1847 := (Or let1043 (Or let1845 let769))
  let let1848 := (And let727 let702)
  let let1849 := (Or let1156 (Or let1259 let1600))
  let let1850 := (Or let808 let1849)
  let let1851 := (Or let953 let1849)
  let let1852 := (And let809 (And let975 let1650))
  let let1853 := (Or let1458 let1059)
  let let1854 := (Not let34)
  let let1855 := (Not let943)
  let let1856 := (Or let1458 let1855)
  let let1857 := (Or let23 let1856)
  let let1858 := (Or let25 let1856)
  let let1859 := (And let24 let33)
  let let1860 := (Not let631)
  let let1861 := (Or let1194 let1860)
  let let1862 := (Or let17 let1861)
  let let1863 := (Or let19 let1861)
  let let1864 := (And let18 let734)
  let let1865 := (Not let935)
  let let1866 := (Or let1059 (Or let1043 (Or let1865 let1266)))
  let let1867 := (Or let707 let1866)
  let let1868 := (Or let709 let1866)
  let let1869 := (And let708 (And let31 (And let727 let935)))
  let let1870 := (Or let1289 let1565)
  let let1871 := (Or let11 let1870)
  let let1872 := (Or let13 let1870)
  let let1873 := (And let12 (And let279 let1569))
  let let1874 := (Or let120 (Or let98 (Or let152 let525)))
  let let1875 := (Or let152 let1664)
  let let1876 := (Or let152 (Or let1664 (Or let98 let1664)))
  let let1877 := (Or let1664 let1077)
  let let1878 := (Or let344 let1877)
  let let1879 := (Or let346 let1877)
  let let1880 := (And let345 let56)
  let let1881 := (Or let1323 (Or let1664 let1342))
  let let1882 := (Or let525 let400)
  let let1883 := (Or let31 let1882)
  let let1884 := (Or let1664 let151)
  let let1885 := (Or let98 (Or let31 (Or let525 let1884)))
  let let1886 := (Or let525 (Or let98 (Or let400 let1259)))
  let let1887 := (Or let1407 let1059)
  let let1888 := (Or let614 let1887)
  let let1889 := (Or let616 let1887)
  let let1890 := (And let615 let122)
  let let1891 := (Or let1156 (Or let1301 (Or let1155 (Or let1456 let1659))))
  let let1892 := (Or let853 let1891)
  let let1893 := (Or let976 let1891)
  let let1894 := (And let854 (And let975 (And let717 (And let738 let266))))
  let let1895 := (Or let122 (Or let31 let278))
  let let1896 := (Or let122 let31)
  let let1897 := (Or let1664 let1081)
  let let1898 := (Or let3 let1897)
  let let1899 := (Or let5 let1897)
  let let1900 := (And let4 let56)
  let let1901 := (Or let1149 (Or let1664 let1303))
  let let1902 := (Or let1149 let1664)
  let let1903 := (Or let525 let1902)
  let let1904 := (Or let321 (Or let1155 (Or let1194 let1043)))
  let let1905 := (Or let321 (Or let1155 (Or let1194 (Or let1043 (Or let122 (Or let31 (Or let1043 (Or let321 let1155))))))))
  let let1906 := (Or let321 (Or let1155 (Or let1194 (Or let543 let1043))))
  let let1907 := (Or let543 (Or let1194 (Or let1043 (Or let543 let1664))))
  let let1908 := (Or let1149 let1884)
  let let1909 := (Or let1046 let1149)
  let let1910 := (Or let1156 (Or let543 (Or let1155 (Or let1046 let1342))))
  let let1911 := (Or let808 let1910)
  let let1912 := (Or let953 let1910)
  let let1913 := (And let809 (And let975 (And let87 (And let738 (And let98 let62)))))
  let let1914 := (Or let1664 let1173)
  let let1915 := (Or let344 let1914)
  let let1916 := (Or let346 let1914)
  let let1917 := (And let345 (And let56 let1178))
fun lean_r0 : (Eq let7 let6) => -- THEORY_REWRITE_BOOL
fun lean_r1 : let7 => -- THEORY_REWRITE_BOOL
fun lean_r2 : (Eq let8 True) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq let15 let14) => -- THEORY_REWRITE_BOOL
fun lean_r4 : let15 => -- THEORY_REWRITE_BOOL
fun lean_r5 : (Eq let16 True) => -- THEORY_REWRITE_BOOL
fun lean_r6 : (Eq let21 let20) => -- THEORY_REWRITE_BOOL
fun lean_r7 : let21 => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let22 True) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let27 let26) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq let28 True) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let35 let34) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let42 let41) => -- THEORY_REWRITE_BOOL
fun lean_r13 : let42 => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let49 let48) => -- THEORY_REWRITE_BOOL
fun lean_r15 : let49 => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq let50 True) => -- THEORY_REWRITE_BOOL
fun lean_r17 : let55 => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let60 let59) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let64 let63) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let70 let69) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq let76 let75) => -- THEORY_REWRITE_BOOL
fun lean_r22 : let70 => -- THEORY_REWRITE_BOOL
fun lean_r23 : let76 => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let77 True) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq let78 True) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq let81 True) => -- THEORY_REWRITE_BOOL
fun lean_r27 : let85 => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let86 True) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let90 let89) => -- THEORY_REWRITE_BOOL
fun lean_r30 : let95 => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let96 True) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let102 let101) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq let103 True) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let107 let106) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let112 let111) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let118 let117) => -- THEORY_REWRITE_BOOL
fun lean_r37 : let118 => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq let119 True) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq let121 True) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let125 let124) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let130 let129) => -- THEORY_REWRITE_BOOL
fun lean_r42 : let130 => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let131 True) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let137 let136) => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq let140 let139) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let144 let143) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let147 let146) => -- THEORY_REWRITE_BOOL
fun lean_r48 : (Eq let150 let149) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let155 let154) => -- THEORY_REWRITE_BOOL
fun lean_r50 : let155 => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq let162 let161) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let169 let168) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let176 let175) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let184 let183) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq let191 let190) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq let198 let197) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq let206 let205) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq let214 let213) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let221 let220) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let228 let227) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq let236 let235) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq let244 let243) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let251 let250) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq let258 let257) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq let265 let264) => -- THEORY_REWRITE_BOOL
fun lean_r66 : (Eq let269 let268) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq let274 let273) => -- THEORY_REWRITE_BOOL
fun lean_r68 : (Eq let277 let276) => -- THEORY_REWRITE_BOOL
fun lean_r69 : let107 => -- THEORY_REWRITE_BOOL
fun lean_r70 : (Eq let282 let281) => -- THEORY_REWRITE_BOOL
fun lean_r71 : (Eq let285 let284) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let287 let286) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let292 let291) => -- THEORY_REWRITE_BOOL
fun lean_r74 : let292 => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq let85 let293) => -- THEORY_REWRITE_BOOL
fun lean_r76 : (Eq let294 True) => -- THEORY_REWRITE_BOOL
fun lean_r77 : (Eq let296 let295) => -- THEORY_REWRITE_BOOL
fun lean_r78 : let300 => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq let305 let304) => -- THEORY_REWRITE_BOOL
fun lean_r80 : (Eq let310 let309) => -- THEORY_REWRITE_BOOL
fun lean_r81 : let305 => -- THEORY_REWRITE_BOOL
fun lean_r82 : let310 => -- THEORY_REWRITE_BOOL
fun lean_r83 : (Eq let311 True) => -- THEORY_REWRITE_BOOL
fun lean_r84 : (Eq let312 True) => -- THEORY_REWRITE_BOOL
fun lean_r85 : (Eq let316 let315) => -- THEORY_REWRITE_BOOL
fun lean_r86 : (Eq let318 let317) => -- THEORY_REWRITE_BOOL
fun lean_r87 : (Eq let320 let319) => -- THEORY_REWRITE_BOOL
fun lean_r88 : (Eq let325 let324) => -- THEORY_REWRITE_BOOL
fun lean_r89 : (Eq let326 True) => -- THEORY_REWRITE_BOOL
fun lean_r90 : (Eq let331 let330) => -- THEORY_REWRITE_BOOL
fun lean_r91 : let331 => -- THEORY_REWRITE_BOOL
fun lean_r92 : (Eq let332 True) => -- THEORY_REWRITE_BOOL
fun lean_r93 : (Eq let337 let336) => -- THEORY_REWRITE_BOOL
fun lean_r94 : (Eq let342 let341) => -- THEORY_REWRITE_BOOL
fun lean_r95 : let342 => -- THEORY_REWRITE_BOOL
fun lean_r96 : (Eq let343 True) => -- THEORY_REWRITE_BOOL
fun lean_r97 : (Eq let348 let347) => -- THEORY_REWRITE_BOOL
fun lean_r98 : let348 => -- THEORY_REWRITE_BOOL
fun lean_r99 : (Eq let349 True) => -- THEORY_REWRITE_BOOL
fun lean_r100 : (Eq let355 let354) => -- THEORY_REWRITE_BOOL
fun lean_r101 : (Eq let360 let359) => -- THEORY_REWRITE_BOOL
fun lean_r102 : (Eq let367 let366) => -- THEORY_REWRITE_BOOL
fun lean_r103 : let360 => -- THEORY_REWRITE_BOOL
fun lean_r104 : (Eq let368 True) => -- THEORY_REWRITE_BOOL
fun lean_r105 : (Eq let373 let372) => -- THEORY_REWRITE_BOOL
fun lean_r106 : let373 => -- THEORY_REWRITE_BOOL
fun lean_r107 : (Eq let374 True) => -- THEORY_REWRITE_BOOL
fun lean_r108 : let378 => -- THEORY_REWRITE_BOOL
fun lean_r109 : (Eq let383 let382) => -- THEORY_REWRITE_BOOL
fun lean_r110 : (Eq let384 True) => -- THEORY_REWRITE_BOOL
fun lean_r111 : let383 => -- THEORY_REWRITE_BOOL
fun lean_r112 : (Eq let385 True) => -- THEORY_REWRITE_BOOL
fun lean_r113 : (Eq let388 let387) => -- THEORY_REWRITE_BOOL
fun lean_r114 : (Eq let226 let389) => -- THEORY_REWRITE_UF
fun lean_r115 : (Eq let392 let391) => -- THEORY_REWRITE_BOOL
fun lean_r116 : (Eq let396 let395) => -- THEORY_REWRITE_BOOL
fun lean_r117 : (Eq let390 let397) => -- THEORY_REWRITE_UF
fun lean_r118 : (Eq let165 let398) => -- THEORY_REWRITE_UF
fun lean_r119 : (Eq let196 let399) => -- THEORY_REWRITE_UF
fun lean_r120 : (Eq let403 let402) => -- THEORY_REWRITE_BOOL
fun lean_r121 : (Eq let219 let33) => -- THEORY_REWRITE_UF
fun lean_r122 : (Eq let406 let405) => -- THEORY_REWRITE_BOOL
fun lean_r123 : (Eq let411 let410) => -- THEORY_REWRITE_BOOL
fun lean_r124 : (Eq let414 let413) => -- THEORY_REWRITE_BOOL
fun lean_r125 : (Eq let418 let417) => -- THEORY_REWRITE_BOOL
fun lean_r126 : (Eq let201 let419) => -- THEORY_REWRITE_UF
fun lean_r127 : (Eq let422 let421) => -- THEORY_REWRITE_BOOL
fun lean_r128 : (Eq let423 True) => -- THEORY_REWRITE_BOOL
fun lean_r129 : (Eq let425 let424) => -- THEORY_REWRITE_UF
fun lean_r130 : (Eq let185 let426) => -- THEORY_REWRITE_UF
fun lean_r131 : (Eq let429 let428) => -- THEORY_REWRITE_UF
fun lean_r132 : (Eq let431 let430) => -- THEORY_REWRITE_BOOL
fun lean_r133 : (Eq let224 let109) => -- THEORY_REWRITE_UF
fun lean_r134 : (Eq let436 let435) => -- THEORY_REWRITE_BOOL
fun lean_r135 : (Eq let438 let437) => -- THEORY_REWRITE_UF
fun lean_r136 : (Eq let232 let266) => -- THEORY_REWRITE_UF
fun lean_r137 : (Eq let240 let439) => -- THEORY_REWRITE_UF
fun lean_r138 : (Eq let440 let275) => -- THEORY_REWRITE_UF
fun lean_r139 : (Eq let457 let456) => -- THEORY_REWRITE_BOOL
fun lean_r140 : (Eq let194 let279) => -- THEORY_REWRITE_UF
fun lean_r141 : (Eq let501 let500) => -- THEORY_REWRITE_BOOL
fun lean_r142 : (Eq let454 let502) => -- THEORY_REWRITE_UF
fun lean_r143 : (Eq let486 let503) => -- THEORY_REWRITE_BOOL
fun lean_r144 : (Eq let217 let504) => -- THEORY_REWRITE_UF
fun lean_r145 : (Eq let247 let505) => -- THEORY_REWRITE_UF
fun lean_r146 : (Eq let239 let506) => -- THEORY_REWRITE_UF
fun lean_r147 : (Eq let476 let507) => -- THEORY_REWRITE_BOOL
fun lean_r148 : (Eq let509 let508) => -- THEORY_REWRITE_BOOL
fun lean_r149 : (Eq let234 let510) => -- THEORY_REWRITE_UF
fun lean_r150 : (Eq let512 let511) => -- THEORY_REWRITE_BOOL
fun lean_r151 : let137 => -- THEORY_REWRITE_BOOL
fun lean_r152 : (Eq let514 let513) => -- THEORY_REWRITE_BOOL
fun lean_r153 : (Eq let515 True) => -- THEORY_REWRITE_BOOL
fun lean_r154 : (Eq let256 let516) => -- THEORY_REWRITE_UF
fun lean_r155 : let403 => -- THEORY_REWRITE_BOOL
fun lean_r156 : (Eq let249 let517) => -- THEORY_REWRITE_UF
fun lean_r157 : (Eq let519 let518) => -- THEORY_REWRITE_BOOL
fun lean_r158 : (Eq let174 let520) => -- THEORY_REWRITE_UF
fun lean_r159 : (Eq let485 let58) => -- THEORY_REWRITE_UF
fun lean_r160 : (Eq let468 let521) => -- THEORY_REWRITE_BOOL
fun lean_r161 : (Eq let475 let145) => -- THEORY_REWRITE_UF
fun lean_r162 : (Eq let523 let522) => -- THEORY_REWRITE_BOOL
fun lean_r163 : (Eq let386 let151) => -- THEORY_REWRITE_UF
fun lean_r164 : (Eq let156 let524) => -- THEORY_REWRITE_UF
fun lean_r165 : (Eq let462 let525) => -- THEORY_REWRITE_UF
fun lean_r166 : (Eq let262 let56) => -- THEORY_REWRITE_UF
fun lean_r167 : (Eq let527 let526) => -- THEORY_REWRITE_BOOL
fun lean_r168 : (Eq let364 let142) => -- THEORY_REWRITE_UF
fun lean_r169 : (Eq let529 let528) => -- THEORY_REWRITE_BOOL
fun lean_r170 : (Eq let531 True) => -- THEORY_REWRITE_BOOL
fun lean_r171 : (Eq let173 let313) => -- THEORY_REWRITE_UF
fun lean_r172 : (Eq let180 let532) => -- THEORY_REWRITE_UF
fun lean_r173 : (Eq let241 let533) => -- THEORY_REWRITE_UF
fun lean_r174 : (Eq let55 let534) => -- THEORY_REWRITE_BOOL
fun lean_r175 : (Eq let536 True) => -- THEORY_REWRITE_BOOL
fun lean_r176 : let540 => -- THEORY_REWRITE_BOOL
fun lean_r177 : (Eq let225 let541) => -- THEORY_REWRITE_UF
fun lean_r178 : (Eq let209 let542) => -- THEORY_REWRITE_UF
fun lean_r179 : let436 => -- THEORY_REWRITE_BOOL
fun lean_r180 : let545 => -- THEORY_REWRITE_BOOL
fun lean_r181 : (Eq let255 let546) => -- THEORY_REWRITE_UF
fun lean_r182 : (Eq let200 let547) => -- THEORY_REWRITE_UF
fun lean_r183 : (Eq let548 True) => -- THEORY_REWRITE_BOOL
fun lean_r184 : (Eq let549 let432) => -- THEORY_REWRITE_UF
fun lean_r185 : (Eq let499 let550) => -- THEORY_REWRITE_BOOL
fun lean_r186 : (Eq let172 let87) => -- THEORY_REWRITE_UF
fun lean_r187 : (Eq let551 let270) => -- THEORY_REWRITE_UF
fun lean_r188 : (Eq let553 let552) => -- THEORY_REWRITE_BOOL
fun lean_r189 : (Eq let420 let31) => -- THEORY_REWRITE_UF
fun lean_r190 : (Eq let461 let554) => -- THEORY_REWRITE_UF
fun lean_r191 : (Eq let238 let555) => -- THEORY_REWRITE_UF
fun lean_r192 : (Eq let557 let556) => -- THEORY_REWRITE_BOOL
fun lean_r193 : (Eq let378 let558) => -- THEORY_REWRITE_BOOL
fun lean_r194 : (Eq let560 let559) => -- THEORY_REWRITE_UF
fun lean_r195 : (Eq let562 let561) => -- THEORY_REWRITE_BOOL
fun lean_r196 : (Eq let404 let120) => -- THEORY_REWRITE_UF
fun lean_r197 : (Eq let181 let563) => -- THEORY_REWRITE_UF
fun lean_r198 : (Eq let565 True) => -- THEORY_REWRITE_BOOL
fun lean_r199 : (Eq let567 let566) => -- THEORY_REWRITE_BOOL
fun lean_r200 : (Eq let300 let568) => -- THEORY_REWRITE_BOOL
fun lean_r201 : (Eq let363 let98) => -- THEORY_REWRITE_UF
fun lean_r202 : (Eq let570 let569) => -- THEORY_REWRITE_BOOL
fun lean_r203 : (Eq let480 let571) => -- THEORY_REWRITE_BOOL
fun lean_r204 : (Eq let231 let572) => -- THEORY_REWRITE_UF
fun lean_r205 : (Eq let573 let530) => -- THEORY_REWRITE_UF
fun lean_r206 : (Eq let575 let574) => -- THEORY_REWRITE_BOOL
fun lean_r207 : (Eq let577 let576) => -- THEORY_REWRITE_BOOL
fun lean_r208 : (Eq let253 let62) => -- THEORY_REWRITE_UF
fun lean_r209 : (Eq let484 let578) => -- THEORY_REWRITE_UF
fun lean_r210 : (Eq let594 let593) => -- THEORY_REWRITE_BOOL
fun lean_r211 : (Eq let598 let597) => -- THEORY_REWRITE_BOOL
fun lean_r212 : (Eq let473 let599) => -- THEORY_REWRITE_UF
fun lean_r213 : (Eq let601 let600) => -- THEORY_REWRITE_BOOL
fun lean_r214 : let605 => -- THEORY_REWRITE_BOOL
fun lean_r215 : let609 => -- THEORY_REWRITE_BOOL
fun lean_r216 : (Eq let192 let29) => -- THEORY_REWRITE_UF
fun lean_r217 : (Eq let611 let610) => -- THEORY_REWRITE_BOOL
fun lean_r218 : (Eq let612 let23) => -- THEORY_REWRITE_UF
fun lean_r219 : (Eq let493 let613) => -- THEORY_REWRITE_UF
fun lean_r220 : (Eq let618 let617) => -- THEORY_REWRITE_BOOL
fun lean_r221 : (Eq let465 let278) => -- THEORY_REWRITE_UF
fun lean_r222 : let411 => -- THEORY_REWRITE_BOOL
fun lean_r223 : (Eq let412 let619) => -- THEORY_REWRITE_UF
fun lean_r224 : (Eq let621 let620) => -- THEORY_REWRITE_BOOL
fun lean_r225 : (Eq let622 let306) => -- THEORY_REWRITE_UF
fun lean_r226 : (Eq let218 let110) => -- THEORY_REWRITE_UF
fun lean_r227 : (Eq let164 let623) => -- THEORY_REWRITE_UF
fun lean_r228 : (Eq let483 let122) => -- THEORY_REWRITE_UF
fun lean_r229 : (Eq let588 let624) => -- THEORY_REWRITE_UF
fun lean_r230 : (Eq let626 let625) => -- THEORY_REWRITE_UF
fun lean_r231 : (Eq let415 let141) => -- THEORY_REWRITE_UF
fun lean_r232 : (Eq let628 let627) => -- THEORY_REWRITE_BOOL
fun lean_r233 : (Eq let204 let629) => -- THEORY_REWRITE_UF
fun lean_r234 : (Eq let167 let630) => -- THEORY_REWRITE_UF
fun lean_r235 : (Eq let245 let631) => -- THEORY_REWRITE_UF
fun lean_r236 : (Eq let633 let632) => -- THEORY_REWRITE_BOOL
fun lean_r237 : (Eq let494 let634) => -- THEORY_REWRITE_BOOL
fun lean_r238 : (Eq let637 let636) => -- THEORY_REWRITE_UF
fun lean_r239 : (Eq let233 let638) => -- THEORY_REWRITE_UF
fun lean_r240 : (Eq let639 let82) => -- THEORY_REWRITE_UF
fun lean_r241 : (Eq let640 True) => -- THEORY_REWRITE_BOOL
fun lean_r242 : (Eq let641 True) => -- THEORY_REWRITE_BOOL
fun lean_r243 : (Eq let466 let642) => -- THEORY_REWRITE_UF
fun lean_r244 : (Eq let477 let643) => -- THEORY_REWRITE_UF
fun lean_r245 : (Eq let540 let644) => -- THEORY_REWRITE_BOOL
fun lean_r246 : (Eq let646 let645) => -- THEORY_REWRITE_BOOL
fun lean_r247 : let598 => -- THEORY_REWRITE_BOOL
fun lean_r248 : (Eq let591 let647) => -- THEORY_REWRITE_UF
fun lean_r249 : (Eq let649 let648) => -- THEORY_REWRITE_BOOL
fun lean_r250 : let652 => -- THEORY_REWRITE_BOOL
fun lean_r251 : (Eq let365 let108) => -- THEORY_REWRITE_UF
fun lean_r252 : (Eq let495 let653) => -- THEORY_REWRITE_UF
fun lean_r253 : (Eq let699 let698) => -- THEORY_REWRITE_BOOL
fun lean_r254 : (Eq let701 let700) => -- THEORY_REWRITE_BOOL
fun lean_r255 : (Eq let361 let702) => -- THEORY_REWRITE_UF
fun lean_r256 : (Eq let261 let703) => -- THEORY_REWRITE_UF
fun lean_r257 : (Eq let705 True) => -- THEORY_REWRITE_BOOL
fun lean_r258 : (Eq let706 True) => -- THEORY_REWRITE_BOOL
fun lean_r259 : let710 => -- THEORY_REWRITE_BOOL
fun lean_r260 : (Eq let472 let711) => -- THEORY_REWRITE_UF
fun lean_r261 : (Eq let490 let712) => -- THEORY_REWRITE_UF
fun lean_r262 : (Eq let259 let713) => -- THEORY_REWRITE_UF
fun lean_r263 : let716 => -- THEORY_REWRITE_BOOL
fun lean_r264 : (Eq let719 let718) => -- THEORY_REWRITE_BOOL
fun lean_r265 : (Eq let658 let720) => -- THEORY_REWRITE_UF
fun lean_r266 : let723 => -- THEORY_REWRITE_BOOL
fun lean_r267 : (Eq let710 let724) => -- THEORY_REWRITE_BOOL
fun lean_r268 : (Eq let481 let725) => -- THEORY_REWRITE_UF
fun lean_r269 : (Eq let498 let726) => -- THEORY_REWRITE_UF
fun lean_r270 : (Eq let458 let727) => -- THEORY_REWRITE_UF
fun lean_r271 : (Eq let716 let728) => -- THEORY_REWRITE_BOOL
fun lean_r272 : (Eq let723 let729) => -- THEORY_REWRITE_BOOL
fun lean_r273 : (Eq let170 let730) => -- THEORY_REWRITE_UF
fun lean_r274 : (Eq let732 let731) => -- THEORY_REWRITE_BOOL
fun lean_r275 : (Eq let464 let733) => -- THEORY_REWRITE_UF
fun lean_r276 : (Eq let254 let717) => -- THEORY_REWRITE_UF
fun lean_r277 : (Eq let246 let734) => -- THEORY_REWRITE_UF
fun lean_r278 : (Eq let252 let735) => -- THEORY_REWRITE_UF
fun lean_r279 : (Eq let737 let736) => -- THEORY_REWRITE_BOOL
fun lean_r280 : (Eq let210 let738) => -- THEORY_REWRITE_UF
fun lean_r281 : (Eq let448 let739) => -- THEORY_REWRITE_UF
fun lean_r282 : (Eq let741 let740) => -- THEORY_REWRITE_BOOL
fun lean_r283 : (Eq let742 True) => -- THEORY_REWRITE_BOOL
fun lean_r284 : (Eq let743 let338) => -- THEORY_REWRITE_UF
fun lean_r285 : (Eq let469 let744) => -- THEORY_REWRITE_UF
fun lean_r286 : (Eq let212 let745) => -- THEORY_REWRITE_UF
fun lean_r287 : (Eq let491 let746) => -- THEORY_REWRITE_BOOL
fun lean_r288 : (Eq let459 let747) => -- THEORY_REWRITE_UF
fun lean_r289 : (Eq let470 let748) => -- THEORY_REWRITE_UF
fun lean_r290 : (Eq let479 let280) => -- THEORY_REWRITE_UF
fun lean_r291 : (Eq let463 let749) => -- THEORY_REWRITE_BOOL
fun lean_r292 : (Eq let189 let750) => -- THEORY_REWRITE_UF
fun lean_r293 : (Eq let752 let751) => -- THEORY_REWRITE_BOOL
fun lean_r294 : (Eq let754 let753) => -- THEORY_REWRITE_BOOL
fun lean_r295 : let618 => -- THEORY_REWRITE_BOOL
fun lean_r296 : (Eq let260 let148) => -- THEORY_REWRITE_UF
fun lean_r297 : (Eq let767 let766) => -- THEORY_REWRITE_BOOL
fun lean_r298 : (Eq let223 let768) => -- THEORY_REWRITE_UF
fun lean_r299 : (Eq let856 let855) => -- THEORY_REWRITE_BOOL
fun lean_r300 : (Eq let460 let857) => -- THEORY_REWRITE_UF
fun lean_r301 : (Eq let545 let858) => -- THEORY_REWRITE_BOOL
fun lean_r302 : (Eq let860 let859) => -- THEORY_REWRITE_BOOL
fun lean_r303 : (Eq let862 let861) => -- THEORY_REWRITE_BOOL
fun lean_r304 : let355 => -- THEORY_REWRITE_BOOL
fun lean_r305 : (Eq let864 let863) => -- THEORY_REWRITE_BOOL
fun lean_r306 : (Eq let416 let865) => -- THEORY_REWRITE_UF
fun lean_r307 : (Eq let394 let866) => -- THEORY_REWRITE_UF
fun lean_r308 : (Eq let202 let867) => -- THEORY_REWRITE_UF
fun lean_r309 : (Eq let868 True) => -- THEORY_REWRITE_BOOL
fun lean_r310 : (Eq let230 let869) => -- THEORY_REWRITE_UF
fun lean_r311 : (Eq let211 let870) => -- THEORY_REWRITE_UF
fun lean_r312 : let872 => -- THEORY_REWRITE_BOOL
fun lean_r313 : (Eq let222 let873) => -- THEORY_REWRITE_UF
fun lean_r314 : (Eq let489 let874) => -- THEORY_REWRITE_UF
fun lean_r315 : (Eq let872 let875) => -- THEORY_REWRITE_BOOL
fun lean_r316 : (Eq let877 let876) => -- THEORY_REWRITE_BOOL
fun lean_r317 : (Eq let497 let878) => -- THEORY_REWRITE_UF
fun lean_r318 : (Eq let478 let879) => -- THEORY_REWRITE_UF
fun lean_r319 : (Eq let882 let881) => -- THEORY_REWRITE_BOOL
fun lean_r320 : (Eq let216 let883) => -- THEORY_REWRITE_UF
fun lean_r321 : (Eq let203 let884) => -- THEORY_REWRITE_UF
fun lean_r322 : (Eq let678 let885) => -- THEORY_REWRITE_UF
fun lean_r323 : (Eq let755 let17) => -- THEORY_REWRITE_UF
fun lean_r324 : (Eq let193 let886) => -- THEORY_REWRITE_UF
fun lean_r325 : (Eq let888 let887) => -- THEORY_REWRITE_BOOL
fun lean_r326 : (Eq let890 let889) => -- THEORY_REWRITE_BOOL
fun lean_r327 : let337 => -- THEORY_REWRITE_BOOL
fun lean_r328 : (Eq let892 let891) => -- THEORY_REWRITE_BOOL
fun lean_r329 : (Eq let482 let88) => -- THEORY_REWRITE_UF
fun lean_r330 : (Eq let178 let283) => -- THEORY_REWRITE_UF
fun lean_r331 : (Eq let171 let97) => -- THEORY_REWRITE_UF
fun lean_r332 : (Eq let894 let893) => -- THEORY_REWRITE_BOOL
fun lean_r333 : (Eq let95 let895) => -- THEORY_REWRITE_BOOL
fun lean_r334 : (Eq let664 let896) => -- THEORY_REWRITE_UF
fun lean_r335 : (Eq let248 let897) => -- THEORY_REWRITE_UF
fun lean_r336 : (Eq let186 let898) => -- THEORY_REWRITE_UF
fun lean_r337 : (Eq let899 True) => -- THEORY_REWRITE_BOOL
fun lean_r338 : (Eq let163 let900) => -- THEORY_REWRITE_UF
fun lean_r339 : (Eq let585 let704) => -- THEORY_REWRITE_UF
fun lean_r340 : (Eq let901 True) => -- THEORY_REWRITE_BOOL
fun lean_r341 : (Eq let195 let902) => -- THEORY_REWRITE_UF
fun lean_r342 : (Eq let904 let903) => -- THEORY_REWRITE_BOOL
fun lean_r343 : (Eq let179 let905) => -- THEORY_REWRITE_UF
fun lean_r344 : (Eq let166 let906) => -- THEORY_REWRITE_UF
fun lean_r345 : (Eq let908 let907) => -- THEORY_REWRITE_BOOL
fun lean_r346 : (Eq let242 let909) => -- THEORY_REWRITE_UF
fun lean_r347 : (Eq let911 let910) => -- THEORY_REWRITE_BOOL
fun lean_r348 : let913 => -- THEORY_REWRITE_BOOL
fun lean_r349 : (Eq let914 True) => -- THEORY_REWRITE_BOOL
fun lean_r350 : (Eq let916 let915) => -- THEORY_REWRITE_BOOL
fun lean_r351 : (Eq let442 let917) => -- THEORY_REWRITE_UF
fun lean_r352 : (Eq let182 let918) => -- THEORY_REWRITE_UF
fun lean_r353 : (Eq let474 let100) => -- THEORY_REWRITE_UF
fun lean_r354 : (Eq let920 let919) => -- THEORY_REWRITE_BOOL
fun lean_r355 : (Eq let688 let921) => -- THEORY_REWRITE_UF
fun lean_r356 : (Eq let923 let922) => -- THEORY_REWRITE_BOOL
fun lean_r357 : (Eq let925 let924) => -- THEORY_REWRITE_BOOL
fun lean_r358 : (Eq let927 let926) => -- THEORY_REWRITE_BOOL
fun lean_r359 : (Eq let471 let928) => -- THEORY_REWRITE_BOOL
fun lean_r360 : (Eq let652 let929) => -- THEORY_REWRITE_BOOL
fun lean_r361 : (Eq let263 let123) => -- THEORY_REWRITE_UF
fun lean_r362 : (Eq let157 let930) => -- THEORY_REWRITE_UF
fun lean_r363 : (Eq let467 let138) => -- THEORY_REWRITE_UF
fun lean_r364 : (Eq let932 let931) => -- THEORY_REWRITE_BOOL
fun lean_r365 : (Eq let605 let933) => -- THEORY_REWRITE_BOOL
fun lean_r366 : (Eq let609 let934) => -- THEORY_REWRITE_BOOL
fun lean_r367 : (Eq let492 let935) => -- THEORY_REWRITE_UF
fun lean_r368 : (Eq let158 let936) => -- THEORY_REWRITE_UF
fun lean_r369 : (Eq let938 let937) => -- THEORY_REWRITE_BOOL
fun lean_r370 : (Eq let940 let939) => -- THEORY_REWRITE_BOOL
fun lean_r371 : (Eq let159 let941) => -- THEORY_REWRITE_UF
fun lean_r372 : (Eq let942 True) => -- THEORY_REWRITE_BOOL
fun lean_r373 : (Eq let215 let943) => -- THEORY_REWRITE_UF
fun lean_r374 : (Eq let944 True) => -- THEORY_REWRITE_BOOL
fun lean_r375 : (Eq let946 let945) => -- THEORY_REWRITE_BOOL
fun lean_r376 : (Eq let951 let950) => -- THEORY_REWRITE_BOOL
fun lean_r377 : (Eq let952 True) => -- THEORY_REWRITE_BOOL
fun lean_r378 : (Eq let955 let954) => -- THEORY_REWRITE_BOOL
fun lean_r379 : (Eq let956 True) => -- THEORY_REWRITE_BOOL
fun lean_r380 : let882 => -- THEORY_REWRITE_BOOL
fun lean_r381 : (Eq let913 let957) => -- THEORY_REWRITE_BOOL
fun lean_r382 : (Eq let959 let958) => -- THEORY_REWRITE_BOOL
fun lean_r383 : (Eq let949 let960) => -- THEORY_REWRITE_BOOL
fun lean_r384 : (Eq let961 True) => -- THEORY_REWRITE_BOOL
fun lean_r385 : let963 => -- THEORY_REWRITE_BOOL
fun lean_r386 : (Eq let964 True) => -- THEORY_REWRITE_BOOL
fun lean_r387 : (Eq let692 let965) => -- THEORY_REWRITE_UF
fun lean_r388 : (Eq let963 let966) => -- THEORY_REWRITE_BOOL
fun lean_r389 : (Eq let188 let967) => -- THEORY_REWRITE_UF
fun lean_r390 : (Eq let488 let968) => -- THEORY_REWRITE_UF
fun lean_r391 : (Eq let969 True) => -- THEORY_REWRITE_BOOL
fun lean_r392 : (Eq let667 let970) => -- THEORY_REWRITE_UF
fun lean_r393 : let972 => -- THEORY_REWRITE_BOOL
fun lean_r394 : (Eq let973 True) => -- THEORY_REWRITE_BOOL
fun lean_r395 : (Eq let496 let974) => -- THEORY_REWRITE_UF
fun lean_r396 : (Eq let160 let975) => -- THEORY_REWRITE_UF
fun lean_r397 : let977 => -- THEORY_REWRITE_BOOL
fun lean_r398 : (Eq let978 True) => -- THEORY_REWRITE_BOOL
fun lean_r399 : (Eq let362 let979) => -- THEORY_REWRITE_UF
fun lean_r400 : (Eq let669 let980) => -- THEORY_REWRITE_BOOL
fun lean_r401 : (Eq let972 let981) => -- THEORY_REWRITE_BOOL
fun lean_r402 : let274 => -- THEORY_REWRITE_BOOL
fun lean_r403 : (Eq let983 let982) => -- THEORY_REWRITE_BOOL
fun lean_r404 : (Eq let948 let984) => -- THEORY_REWRITE_BOOL
fun lean_r405 : (Eq let977 let985) => -- THEORY_REWRITE_BOOL
fun lean_r406 : (Eq let987 let986) => -- THEORY_REWRITE_BOOL
fun lean_r407 : (Eq let580 let988) => -- THEORY_REWRITE_UF
fun lean_r408 : (Eq let582 let351) => -- THEORY_REWRITE_UF
fun lean_r409 : (Eq let655 let989) => -- THEORY_REWRITE_UF
fun lean_r410 : let955 => -- THEORY_REWRITE_BOOL
fun lean_r411 : (Eq let661 let990) => -- THEORY_REWRITE_UF
fun lean_r412 : (Eq let671 let991) => -- THEORY_REWRITE_UF
fun lean_r413 : (Eq let993 let992) => -- THEORY_REWRITE_BOOL
fun lean_r414 : (Eq let675 let994) => -- THEORY_REWRITE_UF
fun lean_r415 : (Eq let681 let995) => -- THEORY_REWRITE_UF
fun lean_r416 : (Eq let187 let996) => -- THEORY_REWRITE_UF
fun lean_r417 : (Eq let683 let997) => -- THEORY_REWRITE_BOOL
fun lean_r418 : let27 => -- THEORY_REWRITE_BOOL
fun lean_r419 : (Eq let445 let998) => -- THEORY_REWRITE_UF
fun lean_r420 : (Eq let393 let314) => -- THEORY_REWRITE_UF
fun lean_r421 : (Eq let451 let999) => -- THEORY_REWRITE_UF
fun lean_r422 : (Eq let1000 True) => -- THEORY_REWRITE_BOOL
fun lean_r423 : let325 => -- THEORY_REWRITE_BOOL
fun lean_r424 : (Eq let685 let1001) => -- THEORY_REWRITE_UF
fun lean_r425 : (Eq let208 let1002) => -- THEORY_REWRITE_UF
fun lean_r426 : (Eq let695 let1003) => -- THEORY_REWRITE_UF
fun lean_r427 : (Eq let487 let267) => -- THEORY_REWRITE_UF
fun lean_r428 : (Eq let697 let1004) => -- THEORY_REWRITE_BOOL
fun lean_r429 : (Eq let1005 True) => -- THEORY_REWRITE_BOOL
fun lean_a430 : let501 =>
fun lean_a431 : let951 =>
fun lean_a432 : (And (And (And (And (Or (Or (Or (Or let160 let189) let212) let249) let462) (Or (Or (Or (Or let159 let188) let211) let248) let461)) (Or (Or (Or (Or let158 let187) let210) let247) let460)) (Or (Or (Or (Or let157 let186) let209) let246) let459)) (Or (Or (Or (Or let156 let185) let208) let245) let458)) =>
fun lean_a433 : (And (And (And (And (Or (Or (Or (Or let160 let181) let202) let223) let252) (Or (Or (Or (Or let167 let188) let394) let231) let464)) (Or (Or (Or (Or let498 let489) let210) let239) let259)) (Or (Or (Or (Or let390 let195) let217) let246) let361)) (Or (Or (Or (Or let174 let484) let473) let470) let458)) =>
fun lean_a434 : (Or (Or (Or (Or (Or (Or (Or (Or (Not (Eq let51 let51)) (Not (Eq let177 let113))) (Not (Eq let199 let37))) (Not (Eq let71 let65))) (Not (Eq let61 let36))) (Or (Or (Or (Or (Not (Eq let113 let177)) (Not (Eq let44 let44))) (Not (Eq let132 let43))) (Not (Eq let229 let10))) (Not (Eq let79 let57)))) (Or (Or (Or (Or (Not (Eq let37 let199)) (Not (Eq let43 let132))) (Not (Eq let207 let207))) (Not (Eq let237 let32))) (Not (Eq let2 let99)))) (Or (Or (Or (Or (Not (Eq let65 let71)) (Not (Eq let10 let229))) (Not (Eq let32 let237))) (Not (Eq let9 let9))) (Not (Eq let91 let30)))) (Or (Or (Or (Or (Not (Eq let36 let61)) (Not (Eq let57 let79))) (Not (Eq let99 let2))) (Not (Eq let30 let91))) (Not let1006))) =>
fun lean_a435 : (Or (Or (Or (Or let160 let188) let210) let246) let458) =>
fun lean_a436 : (Or (Or (Or (Or let697 let457) let683) let669) let594) =>
fun lean_a437 : let699 =>
fun lean_a438 : let983 =>
fun lean_a439 : let856 =>
fun lean_a440 : let767 =>
fun lean_a441 : (Not (And (And let266 let88) let900)) =>
fun lean_a442 : (Not (And (And let314 let29) let623)) =>
fun lean_a443 : (Not (And (And let865 let122) let900)) =>
fun lean_a444 : (Not (And (And let278 let267) let398)) =>
fun lean_a445 : (Not (And (And let643 let279) let623)) =>
fun lean_a446 : (Not (And (And let869 let437) let398)) =>
fun lean_a447 : (Not (And (And let533 let141) let653)) =>
fun lean_a448 : (Not (And (And let56 let943) let424)) =>
fun lean_a449 : (Not (And (And let437 let100) let653)) =>
fun lean_a450 : (Not (And (And let148 let643) let878)) =>
fun lean_a451 : (Not (And (And let267 let110) let424)) =>
fun lean_a452 : (Not (And (And let555 let865) let878)) =>
fun lean_a453 : (Not (And (And let110 let31) let935)) =>
fun lean_a454 : (Not (And (And let142 let555) let275)) =>
fun lean_a455 : (Not (And (And let279 let120) let935)) =>
fun lean_a456 : (Not (And (And let98 let869) let619)) =>
fun lean_a457 : (Not (And (And let29 let533) let275)) =>
fun lean_a458 : (Not (And (And let943 let266) let619)) =>
fun lean_a459 : let1007 =>
fun lean_a460 : let1008 =>
fun lean_a461 : let1009 =>
fun lean_a462 : let1010 =>
fun lean_a463 : let1011 =>
fun lean_a464 : let1012 =>
fun lean_a465 : (Not (And (And let109 let97) let283)) =>
fun lean_a466 : (Not (And (And let717 let935) let905)) =>
fun lean_a467 : (Not (And (And let419 let87) let283)) =>
fun lean_a468 : (Not (And (And let62 let653) let532)) =>
fun lean_a469 : (Not (And (And let547 let275) let905)) =>
fun lean_a470 : (Not (And (And let873 let424) let532)) =>
fun lean_a471 : (Not (And (And let909 let141) let267)) =>
fun lean_a472 : (Not (And (And let123 let943) let437)) =>
fun lean_a473 : (Not (And (And let424 let145) let267)) =>
fun lean_a474 : (Not (And (And let148 let547) let712)) =>
fun lean_a475 : (Not (And (And let653 let33) let437)) =>
fun lean_a476 : (Not (And (And let555 let419) let712)) =>
fun lean_a477 : let1013 =>
fun lean_a478 : (Not (And (And let108 let555) let279)) =>
fun lean_a479 : let1014 =>
fun lean_a480 : (Not (And (And let98 let873) let399)) =>
fun lean_a481 : (Not (And (And let935 let909) let279)) =>
fun lean_a482 : (Not (And (And let943 let109) let399)) =>
fun lean_a483 : let1015 =>
fun lean_a484 : let1016 =>
fun lean_a485 : let1017 =>
fun lean_a486 : let1018 =>
fun lean_a487 : let1019 =>
fun lean_a488 : let1020 =>
fun lean_a489 : (Not (And (And let541 let97) let547)) =>
fun lean_a490 : (Not (And (And let546 let935) let419)) =>
fun lean_a491 : (Not (And (And let905 let313) let547)) =>
fun lean_a492 : (Not (And (And let62 let900) let884)) =>
fun lean_a493 : (Not (And (And let283 let619) let419)) =>
fun lean_a494 : (Not (And (And let873 let623) let884)) =>
fun lean_a495 : (Not (And (And let510 let88) let643)) =>
fun lean_a496 : (Not (And (And let138 let29) let865)) =>
fun lean_a497 : (Not (And (And let623 let58) let643)) =>
fun lean_a498 : let1021 =>
fun lean_a499 : (Not (And (And let900 let399) let865)) =>
fun lean_a500 : (Not (And (And let869 let905) let280)) =>
fun lean_a501 : (Not (And (And let399 let120) let943)) =>
fun lean_a502 : (Not (And (And let108 let869) let110)) =>
fun lean_a503 : (Not (And (And let619 let151) let943)) =>
fun lean_a504 : (Not (And (And let142 let873) let33)) =>
fun lean_a505 : (Not (And (And let935 let510) let110)) =>
fun lean_a506 : (Not (And (And let29 let541) let33)) =>
fun lean_a507 : let1022 =>
fun lean_a508 : let1023 =>
fun lean_a509 : let1024 =>
fun lean_a510 : let1025 =>
fun lean_a511 : let1026 =>
fun lean_a512 : let1027 =>
fun lean_a513 : (Not (And (And let884 let87) let873)) =>
fun lean_a514 : (Not (And (And let546 let653) let109)) =>
fun lean_a515 : (Not (And (And let532 let313) let873)) =>
fun lean_a516 : (Not (And (And let717 let900) let541)) =>
fun lean_a517 : (Not (And (And let283 let878) let109)) =>
fun lean_a518 : (Not (And (And let547 let398) let541)) =>
fun lean_a519 : (Not (And (And let280 let122) let869)) =>
fun lean_a520 : let1028 =>
fun lean_a521 : (Not (And (And let398 let58) let869)) =>
fun lean_a522 : (Not (And (And let314 let283) let510)) =>
fun lean_a523 : (Not (And (And let900 let712) let266)) =>
fun lean_a524 : (Not (And (And let643 let532) let510)) =>
fun lean_a525 : (Not (And (And let712 let100) let555)) =>
fun lean_a526 : (Not (And (And let123 let643) let533)) =>
fun lean_a527 : (Not (And (And let878 let145) let555)) =>
fun lean_a528 : (Not (And (And let56 let547) let909)) =>
fun lean_a529 : (Not (And (And let653 let280) let533)) =>
fun lean_a530 : (Not (And (And let267 let884) let909)) =>
fun lean_a531 : let1029 =>
fun lean_a532 : let1030 =>
fun lean_a533 : let1031 =>
fun lean_a534 : let1032 =>
fun lean_a535 : let1033 =>
fun lean_a536 : let1034 =>
fun lean_a537 : (Not (And (And let884 let275) let62)) =>
fun lean_a538 : (Not (And (And let541 let424) let717)) =>
fun lean_a539 : (Not (And (And let532 let619) let62)) =>
fun lean_a540 : (Not (And (And let109 let623) let546)) =>
fun lean_a541 : (Not (And (And let905 let878) let717)) =>
fun lean_a542 : (Not (And (And let419 let398) let546)) =>
fun lean_a543 : let1035 =>
fun lean_a544 : (Not (And (And let510 let437) let314)) =>
fun lean_a545 : (Not (And (And let398 let399) let278)) =>
fun lean_a546 : (Not (And (And let266 let905) let138)) =>
fun lean_a547 : (Not (And (And let623 let712) let314)) =>
fun lean_a548 : (Not (And (And let865 let532) let138)) =>
fun lean_a549 : (Not (And (And let712 let110) let148)) =>
fun lean_a550 : (Not (And (And let909 let865) let56)) =>
fun lean_a551 : (Not (And (And let878 let33) let148)) =>
fun lean_a552 : (Not (And (And let533 let419) let123)) =>
fun lean_a553 : (Not (And (And let424 let280) let56)) =>
fun lean_a554 : (Not (And (And let437 let884) let123)) =>
fun lean_a555 : (Not (And (And let399 let533) let98)) =>
fun lean_a556 : let1036 =>
fun lean_a557 : (Not (And (And let619 let909) let98)) =>
fun lean_a558 : let1037 =>
fun lean_a559 : (Not (And (And let275 let510) let142)) =>
fun lean_a560 : (Not (And (And let279 let541) let108)) => by
have lean_s0 : (Or let1570 (Or let323 (Or let1155 (Or let1303 let1574)))) := by timed cnfAndNeg [let322, let738, let141, let734, let278]
have lean_s1 : let1568 :=
  (scope (fun lean_a561 : let322 =>
    (scope (fun lean_a562 : let738 =>
      (scope (fun lean_a563 : let141 =>
        (scope (fun lean_a564 : let734 =>
          (scope (fun lean_a565 : let278 =>
            have lean_s1 : let210 := by timed Eq.symm lean_a562
            have lean_s2 : let738 := by timed Eq.symm lean_s1
            let lean_s3 := by timed flipCongrArg lean_s2 [Eq]
            have lean_s4 : let246 := by timed Eq.symm lean_a564
            have lean_s5 : let415 := by timed Eq.symm lean_a563
            have lean_s6 : let141 := by timed Eq.symm lean_s5
            have lean_s7 : let1397 := by timed Eq.trans lean_s4 lean_s6
            have lean_s8 : let1396 := by timed Eq.symm lean_s7
            have lean_s9 : let465 := by timed Eq.symm lean_a565
            have lean_s10 : let1573 := by timed Eq.trans lean_s9 lean_a564
            have lean_s11 : let1572 := by timed Eq.symm lean_s10
            have lean_s12 : (Eq let99 let79) := by timed Eq.trans lean_s8 lean_s11
            have lean_s13 : (Eq let79 let99) := by timed Eq.symm lean_s12
            have lean_s14 : (Eq let314 let321) := by timed congr lean_s3 lean_s13
            have lean_s15 : let1395 := by timed falseIntro lean_a561
            have lean_s16 : let1571 := by timed Eq.trans lean_s14 lean_s15
            have lean_s17 : let1323 := by timed falseElim lean_s16
            show let1323 from lean_s17
  ))))))))))
have lean_s2 : (Implies let1570 let1323) := by liftOrNToImp lean_s1, 5
have lean_s3 : (Or (Not let1570) let1323) := by timed impliesElim lean_s2
have lean_s4 : let1568 := by R1 lean_s0, lean_s3, let1570, [(- 1), (- 1)]
have lean_s5 : let1054 := by timed rfl
have lean_s6 : let326 := by timed rfl
let lean_s7 := by timed flipCongrArg lean_s6 [Eq]
have lean_s8 : (Eq let324 let326) := by timed congr lean_s7 lean_r423
have lean_s9 : (Eq let324 True) := by timed Eq.trans lean_s8 lean_r89
have lean_s10 : (Eq let325 True) := by timed Eq.trans lean_r88 lean_s9
have lean_s11 : let325 := by timed trueElim lean_s10
let lean_s12 := by timed congr lean_s5 lean_s11
have lean_s13 : (Eq let1155 let1155) := by timed rfl
let lean_s14 := by timed congr lean_s5 lean_s13
have lean_s15 : (Eq let1303 let1303) := by timed rfl
let lean_s16 := by timed congr lean_s5 lean_s15
have lean_s17 : (Eq let1194 let1194) := by timed rfl
let lean_s18 := by timed congr lean_s5 lean_s17
have lean_s19 : (Eq let1190 let1190) := by timed rfl
let lean_s20 := by timed congr lean_s5 lean_s19
have lean_s21 : (Eq let1323 let1323) := by timed rfl
let lean_s22 := by timed congr lean_s20 lean_s21
let lean_s23 := by timed congr lean_s18 lean_s22
let lean_s24 := by timed congr lean_s16 lean_s23
let lean_s25 := by timed congr lean_s14 lean_s24
have lean_s26 : (Eq let1568 let1567) := by timed congr lean_s12 lean_s25
have lean_s27 : let1567 := by timed eqResolve lean_s4 lean_s26
have lean_s28 : (Or let321 (Or let1155 (Or let1194 (Or let1303 let1564)))) := by permutateOr lean_s27, [0, 1, 3, 2, 5, 4], (- 1)
have lean_s29 : let855 := by timed eqResolve lean_a439 lean_r299
have lean_s30 : let322 := by andElim lean_s29, 78
let lean_s31 := by R1 lean_s28, lean_s30, let321, [(- 1), 0]
have lean_s32 : let1040 := by timed rfl
let lean_s33 := by timed congr lean_s32 lean_r396
let lean_s34 := by timed congr lean_s32 lean_r389
let lean_s35 := by timed congr lean_s32 lean_r280
let lean_s36 := by timed congr lean_s32 lean_r277
let lean_s37 := by timed congr lean_s36 lean_r270
let lean_s38 := by timed congr lean_s35 lean_s37
let lean_s39 := by timed congr lean_s34 lean_s38
have lean_s40 : (Eq let982 let1039) := by timed congr lean_s33 lean_s39
have lean_s41 : (Eq let983 let1039) := by timed Eq.trans lean_r403 lean_s40
have lean_s42 : let1039 := by timed eqResolve lean_a438 lean_s41
have lean_s43 : let734 := by andElim lean_s42, 3
let lean_s44 := by R2 lean_s31, lean_s43, let734, [(- 1), 0]
have lean_s45 : let738 := by andElim lean_s42, 2
let lean_s46 := by R2 lean_s44, lean_s45, let738, [(- 1), 0]
have lean_s47 : let1040 := by timed rfl
have lean_s48 : let1054 := by timed rfl
let lean_s49 := by timed congr lean_s48 lean_r396
let lean_s50 := by timed congr lean_s48 lean_r234
let lean_s51 := by timed congr lean_s48 lean_r269
let lean_s52 := by timed congr lean_s48 lean_r117
let lean_s53 := by timed congr lean_s52 lean_r158
let lean_s54 := by timed congr lean_s51 lean_s53
let lean_s55 := by timed congr lean_s50 lean_s54
have lean_s56 : (Eq let945 let1146) := by timed congr lean_s49 lean_s55
have lean_s57 : (Eq let946 let1146) := by timed Eq.trans lean_r375 lean_s56
let lean_s58 := by timed congr lean_s47 lean_s57
have lean_s59 : let1054 := by timed rfl
let lean_s60 := by timed congr lean_s59 lean_r396
let lean_s61 := by timed congr lean_s59 lean_r352
let lean_s62 := by timed congr lean_s59 lean_r233
let lean_s63 := by timed congr lean_s59 lean_r114
let lean_s64 := by timed congr lean_s63 lean_r154
let lean_s65 := by timed congr lean_s62 lean_s64
let lean_s66 := by timed congr lean_s61 lean_s65
have lean_s67 : (Eq let610 let1145) := by timed congr lean_s60 lean_s66
have lean_s68 : (Eq let611 let1145) := by timed Eq.trans lean_r217 lean_s67
let lean_s69 := by timed congr lean_s47 lean_s68
have lean_s70 : let1054 := by timed rfl
let lean_s71 := by timed congr lean_s70 lean_r371
let lean_s72 := by timed congr lean_s70 lean_r344
let lean_s73 := by timed congr lean_s70 lean_r317
let lean_s74 := by timed congr lean_s70 lean_r223
let lean_s75 := by timed congr lean_s74 lean_r171
let lean_s76 := by timed congr lean_s73 lean_s75
let lean_s77 := by timed congr lean_s72 lean_s76
have lean_s78 : (Eq let887 let1144) := by timed congr lean_s71 lean_s77
have lean_s79 : (Eq let888 let1144) := by timed Eq.trans lean_r325 lean_s78
let lean_s80 := by timed congr lean_s47 lean_s79
have lean_s81 : let1054 := by timed rfl
let lean_s82 := by timed congr lean_s81 lean_r371
let lean_s83 := by timed congr lean_s81 lean_r197
let lean_s84 := by timed congr lean_s81 lean_r321
let lean_s85 := by timed congr lean_s81 lean_r177
let lean_s86 := by timed congr lean_s85 lean_r181
let lean_s87 := by timed congr lean_s84 lean_s86
let lean_s88 := by timed congr lean_s83 lean_s87
have lean_s89 : (Eq let508 let1143) := by timed congr lean_s82 lean_s88
have lean_s90 : (Eq let509 let1143) := by timed Eq.trans lean_r148 lean_s89
let lean_s91 := by timed congr lean_s47 lean_s90
have lean_s92 : let1054 := by timed rfl
let lean_s93 := by timed congr lean_s92 lean_r368
let lean_s94 := by timed congr lean_s92 lean_r118
let lean_s95 := by timed congr lean_s92 lean_r395
let lean_s96 := by timed congr lean_s92 lean_r138
let lean_s97 := by timed congr lean_s96 lean_r186
let lean_s98 := by timed congr lean_s95 lean_s97
let lean_s99 := by timed congr lean_s94 lean_s98
have lean_s100 : (Eq let576 let1142) := by timed congr lean_s93 lean_s99
have lean_s101 : (Eq let577 let1142) := by timed Eq.trans lean_r207 lean_s100
let lean_s102 := by timed congr lean_s47 lean_s101
have lean_s103 : let1054 := by timed rfl
let lean_s104 := by timed congr lean_s103 lean_r368
let lean_s105 := by timed congr lean_s103 lean_r172
let lean_s106 := by timed congr lean_s103 lean_r308
let lean_s107 := by timed congr lean_s103 lean_r133
let lean_s108 := by timed congr lean_s107 lean_r276
let lean_s109 := by timed congr lean_s106 lean_s108
let lean_s110 := by timed congr lean_s105 lean_s109
have lean_s111 : (Eq let939 let1141) := by timed congr lean_s104 lean_s110
have lean_s112 : (Eq let940 let1141) := by timed Eq.trans lean_r370 lean_s111
let lean_s113 := by timed congr lean_s47 lean_s112
have lean_s114 : let1054 := by timed rfl
let lean_s115 := by timed congr lean_s114 lean_r362
let lean_s116 := by timed congr lean_s114 lean_r227
let lean_s117 := by timed congr lean_s114 lean_r129
let lean_s118 := by timed congr lean_s114 lean_r219
let lean_s119 := by timed congr lean_s118 lean_r331
let lean_s120 := by timed congr lean_s117 lean_s119
let lean_s121 := by timed congr lean_s116 lean_s120
have lean_s122 : (Eq let556 let1140) := by timed congr lean_s115 lean_s121
have lean_s123 : (Eq let557 let1140) := by timed Eq.trans lean_r192 lean_s122
let lean_s124 := by timed congr lean_s47 lean_s123
have lean_s125 : let1054 := by timed rfl
let lean_s126 := by timed congr lean_s125 lean_r362
let lean_s127 := by timed congr lean_s125 lean_r343
let lean_s128 := by timed congr lean_s125 lean_r126
let lean_s129 := by timed congr lean_s125 lean_r298
let lean_s130 := by timed congr lean_s129 lean_r208
let lean_s131 := by timed congr lean_s128 lean_s130
let lean_s132 := by timed congr lean_s127 lean_s131
have lean_s133 : (Eq let931 let1139) := by timed congr lean_s126 lean_s132
have lean_s134 : (Eq let932 let1139) := by timed Eq.trans lean_r364 lean_s133
let lean_s135 := by timed congr lean_s47 lean_s134
have lean_s136 : let1054 := by timed rfl
let lean_s137 := by timed congr lean_s136 lean_r164
let lean_s138 := by timed congr lean_s136 lean_r338
let lean_s139 := by timed congr lean_s136 lean_r252
let lean_s140 := by timed congr lean_s136 lean_r367
let lean_s141 := by timed congr lean_s140 lean_r273
let lean_s142 := by timed congr lean_s139 lean_s141
let lean_s143 := by timed congr lean_s138 lean_s142
have lean_s144 : (Eq let926 let1138) := by timed congr lean_s137 lean_s143
have lean_s145 : (Eq let927 let1138) := by timed Eq.trans lean_r358 lean_s144
let lean_s146 := by timed congr lean_s47 lean_s145
have lean_s147 : let1054 := by timed rfl
let lean_s148 := by timed congr lean_s147 lean_r164
let lean_s149 := by timed congr lean_s147 lean_r330
let lean_s150 := by timed congr lean_s147 lean_r182
let lean_s151 := by timed congr lean_s147 lean_r313
let lean_s152 := by timed congr lean_s151 lean_r278
let lean_s153 := by timed congr lean_s150 lean_s152
let lean_s154 := by timed congr lean_s149 lean_s153
have lean_s155 : (Eq let522 let1137) := by timed congr lean_s148 lean_s154
have lean_s156 : (Eq let523 let1137) := by timed Eq.trans lean_r162 lean_s155
let lean_s157 := by timed congr lean_s47 lean_s156
have lean_s158 : let1054 := by timed rfl
let lean_s159 := by timed congr lean_s158 lean_r352
let lean_s160 := by timed congr lean_s158 lean_r292
let lean_s161 := by timed congr lean_s158 lean_r261
let lean_s162 := by timed congr lean_s158 lean_r119
let lean_s163 := by timed congr lean_s162 lean_r159
let lean_s164 := by timed congr lean_s161 lean_s163
let lean_s165 := by timed congr lean_s160 lean_s164
have lean_s166 : (Eq let922 let1136) := by timed congr lean_s159 lean_s165
have lean_s167 : (Eq let923 let1136) := by timed Eq.trans lean_r356 lean_s166
let lean_s168 := by timed congr lean_s47 lean_s167
have lean_s169 : let1054 := by timed rfl
let lean_s170 := by timed congr lean_s169 lean_r234
let lean_s171 := by timed congr lean_s169 lean_r292
let lean_s172 := by timed congr lean_s169 lean_r290
let lean_s173 := by timed congr lean_s169 lean_r149
let lean_s174 := by timed congr lean_s173 lean_r363
let lean_s175 := by timed congr lean_s172 lean_s174
let lean_s176 := by timed congr lean_s171 lean_s175
have lean_s177 : (Eq let960 let1135) := by timed congr lean_s170 lean_s176
have lean_s178 : (Eq let949 let1135) := by timed Eq.trans lean_r383 lean_s177
let lean_s179 := by timed congr lean_s47 lean_s178
have lean_s180 : let1054 := by timed rfl
let lean_s181 := by timed congr lean_s180 lean_r197
let lean_s182 := by timed congr lean_s180 lean_r389
let lean_s183 := by timed congr lean_s180 lean_r314
let lean_s184 := by timed congr lean_s180 lean_r341
let lean_s185 := by timed congr lean_s184 lean_r209
let lean_s186 := by timed congr lean_s183 lean_s185
let lean_s187 := by timed congr lean_s182 lean_s186
have lean_s188 : (Eq let919 let1134) := by timed congr lean_s181 lean_s187
have lean_s189 : (Eq let920 let1134) := by timed Eq.trans lean_r354 lean_s188
let lean_s190 := by timed congr lean_s47 lean_s189
have lean_s191 : let1054 := by timed rfl
let lean_s192 := by timed congr lean_s191 lean_r344
let lean_s193 := by timed congr lean_s191 lean_r389
let lean_s194 := by timed congr lean_s191 lean_r318
let lean_s195 := by timed congr lean_s191 lean_r239
let lean_s196 := by timed congr lean_s195 lean_r243
let lean_s197 := by timed congr lean_s194 lean_s196
let lean_s198 := by timed congr lean_s193 lean_s197
have lean_s199 : (Eq let910 let1133) := by timed congr lean_s192 lean_s198
have lean_s200 : (Eq let911 let1133) := by timed Eq.trans lean_r347 lean_s199
let lean_s201 := by timed congr lean_s47 lean_s200
have lean_s202 : let1054 := by timed rfl
let lean_s203 := by timed congr lean_s202 lean_r172
let lean_s204 := by timed congr lean_s202 lean_r416
let lean_s205 := by timed congr lean_s202 lean_r390
let lean_s206 := by timed congr lean_s202 lean_r140
let lean_s207 := by timed congr lean_s206 lean_r228
let lean_s208 := by timed congr lean_s205 lean_s207
let lean_s209 := by timed congr lean_s204 lean_s208
have lean_s210 : (Eq let915 let1132) := by timed congr lean_s203 lean_s209
have lean_s211 : (Eq let916 let1132) := by timed Eq.trans lean_r350 lean_s210
let lean_s212 := by timed congr lean_s47 lean_s211
have lean_s213 : let1054 := by timed rfl
let lean_s214 := by timed congr lean_s213 lean_r118
let lean_s215 := by timed congr lean_s213 lean_r416
let lean_s216 := by timed congr lean_s213 lean_r307
let lean_s217 := by timed congr lean_s213 lean_r136
let lean_s218 := by timed congr lean_s217 lean_r420
let lean_s219 := by timed congr lean_s216 lean_s218
let lean_s220 := by timed congr lean_s215 lean_s219
have lean_s221 : (Eq let395 let1131) := by timed congr lean_s214 lean_s220
have lean_s222 : (Eq let396 let1131) := by timed Eq.trans lean_r116 lean_s221
let lean_s223 := by timed congr lean_s47 lean_s222
have lean_s224 : let1054 := by timed rfl
let lean_s225 := by timed congr lean_s224 lean_r343
let lean_s226 := by timed congr lean_s224 lean_r336
let lean_s227 := by timed congr lean_s224 lean_r135
let lean_s228 := by timed congr lean_s224 lean_r324
let lean_s229 := by timed congr lean_s228 lean_r329
let lean_s230 := by timed congr lean_s227 lean_s229
let lean_s231 := by timed congr lean_s226 lean_s230
have lean_s232 : (Eq let561 let1130) := by timed congr lean_s225 lean_s231
have lean_s233 : (Eq let562 let1130) := by timed Eq.trans lean_r195 lean_s232
let lean_s234 := by timed congr lean_s47 lean_s233
have lean_s235 : let1054 := by timed rfl
let lean_s236 := by timed congr lean_s235 lean_r227
let lean_s237 := by timed congr lean_s235 lean_r336
let lean_s238 := by timed congr lean_s235 lean_r306
let lean_s239 := by timed congr lean_s235 lean_r204
let lean_s240 := by timed congr lean_s239 lean_r221
let lean_s241 := by timed congr lean_s238 lean_s240
let lean_s242 := by timed congr lean_s237 lean_s241
have lean_s243 : (Eq let903 let1129) := by timed congr lean_s236 lean_s242
have lean_s244 : (Eq let904 let1129) := by timed Eq.trans lean_r342 lean_s243
let lean_s245 := by timed congr lean_s47 lean_s244
have lean_s246 : let1054 := by timed rfl
let lean_s247 := by timed congr lean_s246 lean_r330
let lean_s248 := by timed congr lean_s246 lean_r130
let lean_s249 := by timed congr lean_s246 lean_r427
let lean_s250 := by timed congr lean_s246 lean_r216
let lean_s251 := by timed congr lean_s250 lean_r268
let lean_s252 := by timed congr lean_s249 lean_s251
let lean_s253 := by timed congr lean_s248 lean_s252
have lean_s254 : (Eq let893 let1128) := by timed congr lean_s247 lean_s253
have lean_s255 : (Eq let894 let1128) := by timed Eq.trans lean_r332 lean_s254
let lean_s256 := by timed congr lean_s47 lean_s255
have lean_s257 : let1054 := by timed rfl
let lean_s258 := by timed congr lean_s257 lean_r338
let lean_s259 := by timed congr lean_s257 lean_r130
let lean_s260 := by timed congr lean_s257 lean_r244
let lean_s261 := by timed congr lean_s257 lean_r310
let lean_s262 := by timed congr lean_s261 lean_r275
let lean_s263 := by timed congr lean_s260 lean_s262
let lean_s264 := by timed congr lean_s259 lean_s263
have lean_s265 : (Eq let891 let1127) := by timed congr lean_s258 lean_s264
have lean_s266 : (Eq let892 let1127) := by timed Eq.trans lean_r328 lean_s265
let lean_s267 := by timed congr lean_s47 lean_s266
have lean_s268 : let1054 := by timed rfl
let lean_s269 := by timed congr lean_s268 lean_r233
let lean_s270 := by timed congr lean_s268 lean_r290
let lean_s271 := by timed congr lean_s268 lean_r286
let lean_s272 := by timed congr lean_s268 lean_r121
let lean_s273 := by timed congr lean_s272 lean_r161
let lean_s274 := by timed congr lean_s271 lean_s273
let lean_s275 := by timed congr lean_s270 lean_s274
have lean_s276 : (Eq let751 let1126) := by timed congr lean_s269 lean_s275
have lean_s277 : (Eq let752 let1126) := by timed Eq.trans lean_r293 lean_s276
let lean_s278 := by timed congr lean_s47 lean_s277
have lean_s279 : let1054 := by timed rfl
let lean_s280 := by timed congr lean_s279 lean_r269
let lean_s281 := by timed congr lean_s279 lean_r261
let lean_s282 := by timed congr lean_s279 lean_r286
let lean_s283 := by timed congr lean_s279 lean_r346
let lean_s284 := by timed congr lean_s283 lean_r361
let lean_s285 := by timed congr lean_s282 lean_s284
let lean_s286 := by timed congr lean_s281 lean_s285
have lean_s287 : (Eq let731 let1125) := by timed congr lean_s280 lean_s286
have lean_s288 : (Eq let732 let1125) := by timed Eq.trans lean_r274 lean_s287
let lean_s289 := by timed congr lean_s47 lean_s288
have lean_s290 : let1054 := by timed rfl
let lean_s291 := by timed congr lean_s290 lean_r321
let lean_s292 := by timed congr lean_s290 lean_r318
let lean_s293 := by timed congr lean_s290 lean_r311
let lean_s294 := by timed congr lean_s290 lean_r226
let lean_s295 := by timed congr lean_s294 lean_r353
let lean_s296 := by timed congr lean_s293 lean_s295
let lean_s297 := by timed congr lean_s292 lean_s296
have lean_s298 : (Eq let889 let1124) := by timed congr lean_s291 lean_s297
have lean_s299 : (Eq let890 let1124) := by timed Eq.trans lean_r326 lean_s298
let lean_s300 := by timed congr lean_s47 lean_s299
have lean_s301 : let1054 := by timed rfl
let lean_s302 := by timed congr lean_s301 lean_r317
let lean_s303 := by timed congr lean_s301 lean_r314
let lean_s304 := by timed congr lean_s301 lean_r311
let lean_s305 := by timed congr lean_s301 lean_r173
let lean_s306 := by timed congr lean_s305 lean_r166
let lean_s307 := by timed congr lean_s304 lean_s306
let lean_s308 := by timed congr lean_s303 lean_s307
have lean_s309 : (Eq let632 let1123) := by timed congr lean_s302 lean_s308
have lean_s310 : (Eq let633 let1123) := by timed Eq.trans lean_r236 lean_s309
let lean_s311 := by timed congr lean_s47 lean_s310
have lean_s312 : let1054 := by timed rfl
let lean_s313 := by timed congr lean_s312 lean_r308
let lean_s314 := by timed congr lean_s312 lean_r307
let lean_s315 := by timed congr lean_s312 lean_r280
let lean_s316 := by timed congr lean_s312 lean_r144
let lean_s317 := by timed congr lean_s316 lean_r212
let lean_s318 := by timed congr lean_s315 lean_s317
let lean_s319 := by timed congr lean_s314 lean_s318
have lean_s320 : (Eq let569 let1122) := by timed congr lean_s313 lean_s319
have lean_s321 : (Eq let570 let1122) := by timed Eq.trans lean_r202 lean_s320
let lean_s322 := by timed congr lean_s47 lean_s321
have lean_s323 : let1054 := by timed rfl
let lean_s324 := by timed congr lean_s323 lean_r395
let lean_s325 := by timed congr lean_s323 lean_r390
let lean_s326 := by timed congr lean_s323 lean_r280
let lean_s327 := by timed congr lean_s323 lean_r137
let lean_s328 := by timed congr lean_s327 lean_r256
let lean_s329 := by timed congr lean_s326 lean_s328
let lean_s330 := by timed congr lean_s325 lean_s329
have lean_s331 : (Eq let984 let1121) := by timed congr lean_s324 lean_s330
have lean_s332 : (Eq let948 let1121) := by timed Eq.trans lean_r404 lean_s331
let lean_s333 := by timed congr lean_s47 lean_s332
have lean_s334 : let1054 := by timed rfl
let lean_s335 := by timed congr lean_s334 lean_r126
let lean_s336 := by timed congr lean_s334 lean_r306
let lean_s337 := by timed congr lean_s334 lean_r178
let lean_s338 := by timed congr lean_s334 lean_r320
let lean_s339 := by timed congr lean_s338 lean_r231
let lean_s340 := by timed congr lean_s337 lean_s339
let lean_s341 := by timed congr lean_s336 lean_s340
have lean_s342 : (Eq let417 let1120) := by timed congr lean_s335 lean_s341
have lean_s343 : (Eq let418 let1120) := by timed Eq.trans lean_r125 lean_s342
let lean_s344 := by timed congr lean_s47 lean_s343
have lean_s345 : let1054 := by timed rfl
let lean_s346 := by timed congr lean_s345 lean_r129
let lean_s347 := by timed congr lean_s345 lean_r135
let lean_s348 := by timed congr lean_s345 lean_r178
let lean_s349 := by timed congr lean_s345 lean_r146
let lean_s350 := by timed congr lean_s349 lean_r296
let lean_s351 := by timed congr lean_s348 lean_s350
let lean_s352 := by timed congr lean_s347 lean_s351
have lean_s353 : (Eq let863 let1119) := by timed congr lean_s346 lean_s352
have lean_s354 : (Eq let864 let1119) := by timed Eq.trans lean_r305 lean_s353
let lean_s355 := by timed congr lean_s47 lean_s354
have lean_s356 : let1054 := by timed rfl
let lean_s357 := by timed congr lean_s356 lean_r182
let lean_s358 := by timed congr lean_s356 lean_r244
let lean_s359 := by timed congr lean_s356 lean_r425
let lean_s360 := by timed congr lean_s356 lean_r373
let lean_s361 := by timed congr lean_s360 lean_r260
let lean_s362 := by timed congr lean_s359 lean_s361
let lean_s363 := by timed congr lean_s358 lean_s362
have lean_s364 : (Eq let861 let1118) := by timed congr lean_s357 lean_s363
have lean_s365 : (Eq let862 let1118) := by timed Eq.trans lean_r303 lean_s364
let lean_s366 := by timed congr lean_s47 lean_s365
have lean_s367 : let1054 := by timed rfl
let lean_s368 := by timed congr lean_s367 lean_r252
let lean_s369 := by timed congr lean_s367 lean_r427
let lean_s370 := by timed congr lean_s367 lean_r425
let lean_s371 := by timed congr lean_s367 lean_r191
let lean_s372 := by timed congr lean_s371 lean_r262
let lean_s373 := by timed congr lean_s370 lean_s372
let lean_s374 := by timed congr lean_s369 lean_s373
have lean_s375 : (Eq let526 let1117) := by timed congr lean_s368 lean_s374
have lean_s376 : (Eq let527 let1117) := by timed Eq.trans lean_r167 lean_s375
let lean_s377 := by timed congr lean_s47 lean_s376
have lean_s378 : let1054 := by timed rfl
let lean_s379 := by timed congr lean_s378 lean_r114
let lean_s380 := by timed congr lean_s378 lean_r149
let lean_s381 := by timed congr lean_s378 lean_r346
let lean_s382 := by timed congr lean_s378 lean_r156
let lean_s383 := by timed congr lean_s382 lean_r163
let lean_s384 := by timed congr lean_s381 lean_s383
let lean_s385 := by timed congr lean_s380 lean_s384
have lean_s386 : (Eq let387 let1116) := by timed congr lean_s379 lean_s385
have lean_s387 : (Eq let388 let1116) := by timed Eq.trans lean_r113 lean_s386
let lean_s388 := by timed congr lean_s47 lean_s387
have lean_s389 : let1054 := by timed rfl
let lean_s390 := by timed congr lean_s389 lean_r117
let lean_s391 := by timed congr lean_s389 lean_r119
let lean_s392 := by timed congr lean_s389 lean_r121
let lean_s393 := by timed congr lean_s389 lean_r156
let lean_s394 := by timed congr lean_s393 lean_r251
let lean_s395 := by timed congr lean_s392 lean_s394
let lean_s396 := by timed congr lean_s391 lean_s395
have lean_s397 : (Eq let391 let1115) := by timed congr lean_s390 lean_s396
have lean_s398 : (Eq let392 let1115) := by timed Eq.trans lean_r115 lean_s397
let lean_s399 := by timed congr lean_s47 lean_s398
have lean_s400 : let1054 := by timed rfl
let lean_s401 := by timed congr lean_s400 lean_r177
let lean_s402 := by timed congr lean_s400 lean_r239
let lean_s403 := by timed congr lean_s400 lean_r173
let lean_s404 := by timed congr lean_s400 lean_r335
let lean_s405 := by timed congr lean_s404 lean_r196
let lean_s406 := by timed congr lean_s403 lean_s405
let lean_s407 := by timed congr lean_s402 lean_s406
have lean_s408 : (Eq let405 let1114) := by timed congr lean_s401 lean_s407
have lean_s409 : (Eq let406 let1114) := by timed Eq.trans lean_r122 lean_s408
let lean_s410 := by timed congr lean_s47 lean_s409
have lean_s411 : let1054 := by timed rfl
let lean_s412 := by timed congr lean_s411 lean_r223
let lean_s413 := by timed congr lean_s411 lean_r341
let lean_s414 := by timed congr lean_s411 lean_r226
let lean_s415 := by timed congr lean_s411 lean_r335
let lean_s416 := by timed congr lean_s415 lean_r168
let lean_s417 := by timed congr lean_s414 lean_s416
let lean_s418 := by timed congr lean_s413 lean_s417
have lean_s419 : (Eq let413 let1113) := by timed congr lean_s412 lean_s418
have lean_s420 : (Eq let414 let1113) := by timed Eq.trans lean_r124 lean_s419
let lean_s421 := by timed congr lean_s47 lean_s420
have lean_s422 : let1054 := by timed rfl
let lean_s423 := by timed congr lean_s422 lean_r133
let lean_s424 := by timed congr lean_s422 lean_r136
let lean_s425 := by timed congr lean_s422 lean_r137
let lean_s426 := by timed congr lean_s422 lean_r145
let lean_s427 := by timed congr lean_s426 lean_r189
let lean_s428 := by timed congr lean_s425 lean_s427
let lean_s429 := by timed congr lean_s424 lean_s428
have lean_s430 : (Eq let421 let1112) := by timed congr lean_s423 lean_s429
have lean_s431 : (Eq let422 let1112) := by timed Eq.trans lean_r127 lean_s430
let lean_s432 := by timed congr lean_s47 lean_s431
have lean_s433 : let1054 := by timed rfl
let lean_s434 := by timed congr lean_s433 lean_r138
let lean_s435 := by timed congr lean_s433 lean_r140
let lean_s436 := by timed congr lean_s433 lean_r144
let lean_s437 := by timed congr lean_s433 lean_r145
let lean_s438 := by timed congr lean_s437 lean_r201
let lean_s439 := by timed congr lean_s436 lean_s438
let lean_s440 := by timed congr lean_s435 lean_s439
have lean_s441 : (Eq let566 let1111) := by timed congr lean_s434 lean_s440
have lean_s442 : (Eq let567 let1111) := by timed Eq.trans lean_r199 lean_s441
let lean_s443 := by timed congr lean_s47 lean_s442
have lean_s444 : let1054 := by timed rfl
let lean_s445 := by timed congr lean_s444 lean_r298
let lean_s446 := by timed congr lean_s444 lean_r204
let lean_s447 := by timed congr lean_s444 lean_r146
let lean_s448 := by timed congr lean_s444 lean_r277
let lean_s449 := by timed congr lean_s448 lean_r289
let lean_s450 := by timed congr lean_s447 lean_s449
let lean_s451 := by timed congr lean_s446 lean_s450
have lean_s452 : (Eq let552 let1110) := by timed congr lean_s445 lean_s451
have lean_s453 : (Eq let553 let1110) := by timed Eq.trans lean_r188 lean_s452
let lean_s454 := by timed congr lean_s47 lean_s453
have lean_s455 : let1054 := by timed rfl
let lean_s456 := by timed congr lean_s455 lean_r219
let lean_s457 := by timed congr lean_s455 lean_r324
let lean_s458 := by timed congr lean_s455 lean_r320
let lean_s459 := by timed congr lean_s455 lean_r277
let lean_s460 := by timed congr lean_s459 lean_r399
let lean_s461 := by timed congr lean_s458 lean_s460
let lean_s462 := by timed congr lean_s457 lean_s461
have lean_s463 : (Eq let574 let1109) := by timed congr lean_s456 lean_s462
have lean_s464 : (Eq let575 let1109) := by timed Eq.trans lean_r206 lean_s463
let lean_s465 := by timed congr lean_s47 lean_s464
have lean_s466 : let1054 := by timed rfl
let lean_s467 := by timed congr lean_s466 lean_r313
let lean_s468 := by timed congr lean_s466 lean_r310
let lean_s469 := by timed congr lean_s466 lean_r191
let lean_s470 := by timed congr lean_s466 lean_r235
let lean_s471 := by timed congr lean_s470 lean_r285
let lean_s472 := by timed congr lean_s469 lean_s471
let lean_s473 := by timed congr lean_s468 lean_s472
have lean_s474 : (Eq let876 let1108) := by timed congr lean_s467 lean_s473
have lean_s475 : (Eq let877 let1108) := by timed Eq.trans lean_r316 lean_s474
let lean_s476 := by timed congr lean_s47 lean_s475
have lean_s477 : let1054 := by timed rfl
let lean_s478 := by timed congr lean_s477 lean_r367
let lean_s479 := by timed congr lean_s477 lean_r216
let lean_s480 := by timed congr lean_s477 lean_r373
let lean_s481 := by timed congr lean_s477 lean_r235
let lean_s482 := by timed congr lean_s481 lean_r255
let lean_s483 := by timed congr lean_s480 lean_s482
let lean_s484 := by timed congr lean_s479 lean_s483
have lean_s485 : (Eq let937 let1107) := by timed congr lean_s478 lean_s484
have lean_s486 : (Eq let938 let1107) := by timed Eq.trans lean_r369 lean_s485
let lean_s487 := by timed congr lean_s47 lean_s486
have lean_s488 : let1054 := by timed rfl
let lean_s489 := by timed congr lean_s488 lean_r154
let lean_s490 := by timed congr lean_s488 lean_r363
let lean_s491 := by timed congr lean_s488 lean_r361
let lean_s492 := by timed congr lean_s488 lean_r251
let lean_s493 := by timed congr lean_s492 lean_r165
let lean_s494 := by timed congr lean_s491 lean_s493
let lean_s495 := by timed congr lean_s490 lean_s494
have lean_s496 : (Eq let513 let1105) := by timed congr lean_s489 lean_s495
have lean_s497 : (Eq let514 let1105) := by timed Eq.trans lean_r152 lean_s496
let lean_s498 := by timed congr lean_s47 lean_s497
have lean_s499 : let1054 := by timed rfl
let lean_s500 := by timed congr lean_s499 lean_r158
let lean_s501 := by timed congr lean_s499 lean_r159
let lean_s502 := by timed congr lean_s499 lean_r161
let lean_s503 := by timed congr lean_s499 lean_r163
let lean_s504 := by timed congr lean_s503 lean_r165
let lean_s505 := by timed congr lean_s502 lean_s504
let lean_s506 := by timed congr lean_s501 lean_s505
have lean_s507 : (Eq let518 let1103) := by timed congr lean_s500 lean_s506
have lean_s508 : (Eq let519 let1103) := by timed Eq.trans lean_r157 lean_s507
let lean_s509 := by timed congr lean_s47 lean_s508
have lean_s510 : let1054 := by timed rfl
let lean_s511 := by timed congr lean_s510 lean_r181
let lean_s512 := by timed congr lean_s510 lean_r243
let lean_s513 := by timed congr lean_s510 lean_r166
let lean_s514 := by timed congr lean_s510 lean_r168
let lean_s515 := by timed congr lean_s514 lean_r190
let lean_s516 := by timed congr lean_s513 lean_s515
let lean_s517 := by timed congr lean_s512 lean_s516
have lean_s518 : (Eq let859 let1091) := by timed congr lean_s511 lean_s517
have lean_s519 : (Eq let860 let1091) := by timed Eq.trans lean_r302 lean_s518
let lean_s520 := by timed congr lean_s47 lean_s519
have lean_s521 : let1054 := by timed rfl
let lean_s522 := by timed congr lean_s521 lean_r171
let lean_s523 := by timed congr lean_s521 lean_r209
let lean_s524 := by timed congr lean_s521 lean_r353
let lean_s525 := by timed congr lean_s521 lean_r196
let lean_s526 := by timed congr lean_s525 lean_r190
let lean_s527 := by timed congr lean_s524 lean_s526
let lean_s528 := by timed congr lean_s523 lean_s527
have lean_s529 : (Eq let528 let1101) := by timed congr lean_s522 lean_s528
have lean_s530 : (Eq let529 let1101) := by timed Eq.trans lean_r169 lean_s529
let lean_s531 := by timed congr lean_s47 lean_s530
have lean_s532 : let1054 := by timed rfl
let lean_s533 := by timed congr lean_s532 lean_r276
let lean_s534 := by timed congr lean_s532 lean_r420
let lean_s535 := by timed congr lean_s532 lean_r256
let lean_s536 := by timed congr lean_s532 lean_r201
let lean_s537 := by timed congr lean_s536 lean_r300
let lean_s538 := by timed congr lean_s535 lean_s537
let lean_s539 := by timed congr lean_s534 lean_s538
have lean_s540 : (Eq let736 let1100) := by timed congr lean_s533 lean_s539
have lean_s541 : (Eq let737 let1100) := by timed Eq.trans lean_r279 lean_s540
let lean_s542 := by timed congr lean_s47 lean_s541
have lean_s543 : let1054 := by timed rfl
let lean_s544 := by timed congr lean_s543 lean_r186
let lean_s545 := by timed congr lean_s543 lean_r228
let lean_s546 := by timed congr lean_s543 lean_r212
let lean_s547 := by timed congr lean_s543 lean_r189
let lean_s548 := by timed congr lean_s547 lean_r300
let lean_s549 := by timed congr lean_s546 lean_s548
let lean_s550 := by timed congr lean_s545 lean_s549
have lean_s551 : (Eq let700 let1099) := by timed congr lean_s544 lean_s550
have lean_s552 : (Eq let701 let1099) := by timed Eq.trans lean_r254 lean_s551
let lean_s553 := by timed congr lean_s47 lean_s552
have lean_s554 : let1054 := by timed rfl
let lean_s555 := by timed congr lean_s554 lean_r208
let lean_s556 := by timed congr lean_s554 lean_r221
let lean_s557 := by timed congr lean_s554 lean_r296
let lean_s558 := by timed congr lean_s554 lean_r399
let lean_s559 := by timed congr lean_s558 lean_r288
let lean_s560 := by timed congr lean_s557 lean_s559
let lean_s561 := by timed congr lean_s556 lean_s560
have lean_s562 : (Eq let600 let1097) := by timed congr lean_s555 lean_s561
have lean_s563 : (Eq let601 let1097) := by timed Eq.trans lean_r213 lean_s562
let lean_s564 := by timed congr lean_s47 lean_s563
have lean_s565 : let1054 := by timed rfl
let lean_s566 := by timed congr lean_s565 lean_r331
let lean_s567 := by timed congr lean_s565 lean_r329
let lean_s568 := by timed congr lean_s565 lean_r231
let lean_s569 := by timed congr lean_s565 lean_r289
let lean_s570 := by timed congr lean_s569 lean_r288
let lean_s571 := by timed congr lean_s568 lean_s570
let lean_s572 := by timed congr lean_s567 lean_s571
have lean_s573 : (Eq let753 let1095) := by timed congr lean_s566 lean_s572
have lean_s574 : (Eq let754 let1095) := by timed Eq.trans lean_r294 lean_s573
let lean_s575 := by timed congr lean_s47 lean_s574
have lean_s576 : let1054 := by timed rfl
let lean_s577 := by timed congr lean_s576 lean_r278
let lean_s578 := by timed congr lean_s576 lean_r275
let lean_s579 := by timed congr lean_s576 lean_r262
let lean_s580 := by timed congr lean_s576 lean_r255
let lean_s581 := by timed congr lean_s580 lean_r270
let lean_s582 := by timed congr lean_s579 lean_s581
let lean_s583 := by timed congr lean_s578 lean_s582
have lean_s584 : (Eq let740 let1093) := by timed congr lean_s577 lean_s583
have lean_s585 : (Eq let741 let1093) := by timed Eq.trans lean_r282 lean_s584
let lean_s586 := by timed congr lean_s47 lean_s585
have lean_s587 : let1054 := by timed rfl
let lean_s588 := by timed congr lean_s587 lean_r273
let lean_s589 := by timed congr lean_s587 lean_r268
let lean_s590 := by timed congr lean_s587 lean_r260
let lean_s591 := by timed congr lean_s587 lean_r285
let lean_s592 := by timed congr lean_s591 lean_r270
let lean_s593 := by timed congr lean_s590 lean_s592
let lean_s594 := by timed congr lean_s589 lean_s593
have lean_s595 : (Eq let511 let1092) := by timed congr lean_s588 lean_s594
have lean_s596 : (Eq let512 let1092) := by timed Eq.trans lean_r150 lean_s595
let lean_s597 := by timed congr lean_s586 lean_s596
let lean_s598 := by timed congr lean_s575 lean_s597
let lean_s599 := by timed congr lean_s564 lean_s598
let lean_s600 := by timed congr lean_s553 lean_s599
let lean_s601 := by timed congr lean_s542 lean_s600
let lean_s602 := by timed congr lean_s531 lean_s601
let lean_s603 := by timed congr lean_s520 lean_s602
let lean_s604 := by timed congr lean_s509 lean_s603
let lean_s605 := by timed congr lean_s498 lean_s604
let lean_s606 := by timed congr lean_s487 lean_s605
let lean_s607 := by timed congr lean_s476 lean_s606
let lean_s608 := by timed congr lean_s465 lean_s607
let lean_s609 := by timed congr lean_s454 lean_s608
let lean_s610 := by timed congr lean_s443 lean_s609
let lean_s611 := by timed congr lean_s432 lean_s610
let lean_s612 := by timed congr lean_s421 lean_s611
let lean_s613 := by timed congr lean_s410 lean_s612
let lean_s614 := by timed congr lean_s399 lean_s613
let lean_s615 := by timed congr lean_s388 lean_s614
let lean_s616 := by timed congr lean_s377 lean_s615
let lean_s617 := by timed congr lean_s366 lean_s616
let lean_s618 := by timed congr lean_s355 lean_s617
let lean_s619 := by timed congr lean_s344 lean_s618
let lean_s620 := by timed congr lean_s333 lean_s619
let lean_s621 := by timed congr lean_s322 lean_s620
let lean_s622 := by timed congr lean_s311 lean_s621
let lean_s623 := by timed congr lean_s300 lean_s622
let lean_s624 := by timed congr lean_s289 lean_s623
let lean_s625 := by timed congr lean_s278 lean_s624
let lean_s626 := by timed congr lean_s267 lean_s625
let lean_s627 := by timed congr lean_s256 lean_s626
let lean_s628 := by timed congr lean_s245 lean_s627
let lean_s629 := by timed congr lean_s234 lean_s628
let lean_s630 := by timed congr lean_s223 lean_s629
let lean_s631 := by timed congr lean_s212 lean_s630
let lean_s632 := by timed congr lean_s201 lean_s631
let lean_s633 := by timed congr lean_s190 lean_s632
let lean_s634 := by timed congr lean_s179 lean_s633
let lean_s635 := by timed congr lean_s168 lean_s634
let lean_s636 := by timed congr lean_s157 lean_s635
let lean_s637 := by timed congr lean_s146 lean_s636
let lean_s638 := by timed congr lean_s135 lean_s637
let lean_s639 := by timed congr lean_s124 lean_s638
let lean_s640 := by timed congr lean_s113 lean_s639
let lean_s641 := by timed congr lean_s102 lean_s640
let lean_s642 := by timed congr lean_s91 lean_s641
let lean_s643 := by timed congr lean_s80 lean_s642
let lean_s644 := by timed congr lean_s69 lean_s643
have lean_s645 : (Eq let950 let1147) := by timed congr lean_s58 lean_s644
have lean_s646 : (Eq let951 let1147) := by timed Eq.trans lean_r376 lean_s645
have lean_s647 : let1147 := by timed eqResolve lean_a431 lean_s646
have lean_s648 : let1100 := by andElim lean_s647, 44
have lean_s649 : (Or let314 (Or let98 (Or let717 (Or let703 let857)))) := by permutateOr lean_s648, [1, 3, 0, 2, 4], (- 1)
let lean_s650 := by R2 lean_s46, lean_s649, let314, [(- 1), (- 1)]
have lean_s651 : (Or let1314 (Or let608 let1155)) := by timed cnfAndNeg [let607, let738]
have lean_s652 : let1313 :=
  (scope (fun lean_a566 : let607 =>
    (scope (fun lean_a567 : let738 =>
      have lean_s652 : let210 := by timed Eq.symm lean_a567
      have lean_s653 : let738 := by timed Eq.symm lean_s652
      let lean_s654 := by timed flipCongrArg lean_s653 [Eq]
      have lean_s655 : (Eq let2 let2) := by timed rfl
      have lean_s656 : (Eq let703 let606) := by timed congr lean_s654 lean_s655
      have lean_s657 : let1281 := by timed falseIntro lean_a566
      have lean_s658 : (Eq let703 False) := by timed Eq.trans lean_s656 lean_s657
      have lean_s659 : let1310 := by timed falseElim lean_s658
      show let1310 from lean_s659
  ))))
have lean_s653 : (Implies let1314 let1310) := by liftOrNToImp lean_s652, 2
have lean_s654 : (Or (Not let1314) let1310) := by timed impliesElim lean_s653
have lean_s655 : let1313 := by R1 lean_s651, lean_s654, let1314, [(- 1), (- 1)]
have lean_s656 : let1054 := by timed rfl
have lean_s657 : let944 := by timed rfl
let lean_s658 := by timed flipCongrArg lean_s657 [Eq]
have lean_s659 : (Eq let934 let944) := by timed congr lean_s658 lean_r215
have lean_s660 : (Eq let934 True) := by timed Eq.trans lean_s659 lean_r374
have lean_s661 : (Eq let609 True) := by timed Eq.trans lean_r366 lean_s660
have lean_s662 : let609 := by timed trueElim lean_s661
let lean_s663 := by timed congr lean_s656 lean_s662
let lean_s664 := by timed congr lean_s656 lean_s13
have lean_s665 : (Eq let1310 let1310) := by timed rfl
let lean_s666 := by timed congr lean_s664 lean_s665
have lean_s667 : (Eq let1313 let1312) := by timed congr lean_s663 lean_s666
have lean_s668 : let1312 := by timed eqResolve lean_s655 lean_s667
have lean_s669 : let607 := by andElim lean_s29, 28
let lean_s670 := by R1 lean_s668, lean_s669, let606, [(- 1), 0]
have lean_s671 : let1310 := by R2 lean_s670, lean_s45, let738, [(- 1), 0]
let lean_s672 := by R1 lean_s650, lean_s671, let703, [(- 1), 0]
have lean_s673 : (Or let1309 (Or let1307 let1043)) := by timed cnfAndNeg [let857, let727]
have lean_s674 : let1308 :=
  (scope (fun lean_a567 : let857 =>
    (scope (fun lean_a568 : let727 =>
      have lean_s674 : let458 := by timed Eq.symm lean_a568
      have lean_s675 : let727 := by timed Eq.symm lean_s674
      have lean_s676 : let460 := by timed Eq.symm lean_a567
      have lean_s677 : let306 := by timed Eq.trans lean_s675 lean_s676
      show let306 from lean_s677
  ))))
have lean_s675 : (Implies let1309 let306) := by liftOrNToImp lean_s674, 2
have lean_s676 : (Or (Not let1309) let306) := by timed impliesElim lean_s675
have lean_s677 : let1308 := by R1 lean_s673, lean_s676, let1309, [(- 1), (- 1)]
have lean_s678 : (Or let306 (Or let1043 let1307)) := by permutateOr lean_s677, [2, 1, 0], (- 1)
have lean_s679 : let1040 := by timed rfl
have lean_s680 : (Eq let765 let595) := by timed flipCongrArg lean_r205 [Not]
let lean_s681 := by timed congr lean_s679 lean_s680
have lean_s682 : (Eq let764 let721) := by timed flipCongrArg lean_r194 [Not]
let lean_s683 := by timed congr lean_s679 lean_s682
have lean_s684 : (Eq let763 let339) := by timed flipCongrArg lean_r284 [Not]
let lean_s685 := by timed congr lean_s679 lean_s684
have lean_s686 : (Eq let762 let24) := by timed flipCongrArg lean_r218 [Not]
let lean_s687 := by timed congr lean_s679 lean_s686
have lean_s688 : (Eq let761 let1041) := by timed flipCongrArg lean_r230 [Not]
let lean_s689 := by timed congr lean_s679 lean_s688
have lean_s690 : (Eq let760 let83) := by timed flipCongrArg lean_r240 [Not]
let lean_s691 := by timed congr lean_s679 lean_s690
have lean_s692 : (Eq let759 let271) := by timed flipCongrArg lean_r187 [Not]
let lean_s693 := by timed congr lean_s679 lean_s692
have lean_s694 : (Eq let758 let433) := by timed flipCongrArg lean_r184 [Not]
let lean_s695 := by timed congr lean_s679 lean_s694
have lean_s696 : (Eq let757 let307) := by timed flipCongrArg lean_r225 [Not]
let lean_s697 := by timed congr lean_s679 lean_s696
have lean_s698 : (Eq let756 let18) := by timed flipCongrArg lean_r323 [Not]
let lean_s699 := by timed congr lean_s697 lean_s698
let lean_s700 := by timed congr lean_s695 lean_s699
let lean_s701 := by timed congr lean_s693 lean_s700
let lean_s702 := by timed congr lean_s691 lean_s701
let lean_s703 := by timed congr lean_s689 lean_s702
let lean_s704 := by timed congr lean_s687 lean_s703
let lean_s705 := by timed congr lean_s685 lean_s704
let lean_s706 := by timed congr lean_s683 lean_s705
have lean_s707 : (Eq let766 let1042) := by timed congr lean_s681 lean_s706
have lean_s708 : (Eq let767 let1042) := by timed Eq.trans lean_r297 lean_s707
have lean_s709 : let1042 := by timed eqResolve lean_a440 lean_s708
have lean_s710 : let307 := by andElim lean_s709, 8
let lean_s711 := by R1 lean_s678, lean_s710, let306, [(- 1), 0]
have lean_s712 : let727 := by andElim lean_s42, 4
have lean_s713 : let1307 := by R2 lean_s711, lean_s712, let727, [(- 1), 0]
let lean_s714 := by R1 lean_s672, lean_s713, let857, [(- 1), 0]
have lean_s715 : (Or let1724 (Or let153 (Or let400 let1687))) := by timed cnfAndNeg [let152, let120, let967, let56]
have lean_s716 : let1723 :=
  (scope (fun lean_a569 : let152 =>
    (scope (fun lean_a570 : let120 =>
      (scope (fun lean_a571 : let967 =>
        (scope (fun lean_a572 : let56 =>
          have lean_s716 : let1529 := by timed rfl
          let lean_s717 := by timed flipCongrArg lean_s716 [Eq]
          have lean_s718 : let188 := by timed Eq.symm lean_a571
          have lean_s719 : let404 := by timed Eq.symm lean_a570
          have lean_s720 : let120 := by timed Eq.symm lean_s719
          have lean_s721 : let1528 := by timed Eq.trans lean_s718 lean_s720
          have lean_s722 : let1616 := by timed Eq.symm lean_s721
          have lean_s723 : let262 := by timed Eq.symm lean_a572
          have lean_s724 : let56 := by timed Eq.symm lean_s723
          have lean_s725 : let262 := by timed Eq.symm lean_s724
          have lean_s726 : let1684 := by timed Eq.trans lean_s725 lean_a571
          have lean_s727 : let1683 := by timed Eq.symm lean_s726
          have lean_s728 : (Eq let30 let2) := by timed Eq.trans lean_s722 lean_s727
          have lean_s729 : (Eq let2 let30) := by timed Eq.symm lean_s728
          have lean_s730 : (Eq let123 let151) := by timed congr lean_s717 lean_s729
          have lean_s731 : let1527 := by timed falseIntro lean_a569
          have lean_s732 : let1682 := by timed Eq.trans lean_s730 lean_s731
          have lean_s733 : let1211 := by timed falseElim lean_s732
          show let1211 from lean_s733
  ))))))))
have lean_s717 : (Implies let1724 let1211) := by liftOrNToImp lean_s716, 4
have lean_s718 : (Or (Not let1724) let1211) := by timed impliesElim lean_s717
have lean_s719 : let1723 := by R1 lean_s715, lean_s718, let1724, [(- 1), (- 1)]
have lean_s720 : let1054 := by timed rfl
have lean_s721 : let964 := by timed rfl
let lean_s722 := by timed flipCongrArg lean_s721 [Eq]
have lean_s723 : (Eq let154 let964) := by timed congr lean_s722 lean_r50
have lean_s724 : (Eq let154 True) := by timed Eq.trans lean_s723 lean_r386
have lean_s725 : (Eq let155 True) := by timed Eq.trans lean_r49 lean_s724
have lean_s726 : let155 := by timed trueElim lean_s725
let lean_s727 := by timed congr lean_s720 lean_s726
have lean_s728 : (Eq let400 let400) := by timed rfl
let lean_s729 := by timed congr lean_s720 lean_s728
have lean_s730 : (Eq let1085 let1085) := by timed rfl
let lean_s731 := by timed congr lean_s720 lean_s730
have lean_s732 : (Eq let1664 let1664) := by timed rfl
let lean_s733 := by timed congr lean_s720 lean_s732
have lean_s734 : (Eq let1211 let1211) := by timed rfl
let lean_s735 := by timed congr lean_s733 lean_s734
let lean_s736 := by timed congr lean_s731 lean_s735
let lean_s737 := by timed congr lean_s729 lean_s736
have lean_s738 : (Eq let1723 let1722) := by timed congr lean_s727 lean_s737
have lean_s739 : let1722 := by timed eqResolve lean_s719 lean_s738
have lean_s740 : (Or let151 (Or let1085 (Or let400 let1675))) := by permutateOr lean_s739, [0, 2, 1, 4, 3], (- 1)
have lean_s741 : let967 := by andElim lean_s42, 1
let lean_s742 := by R2 lean_s740, lean_s741, let967, [(- 1), 0]
have lean_s743 : let1105 := by andElim lean_s647, 40
have lean_s744 : (Or let123 (Or let108 (Or let138 (Or let516 let525)))) := by permutateOr lean_s743, [2, 3, 1, 0, 4], (- 1)
let lean_s745 := by R2 lean_s742, lean_s744, let123, [(- 1), (- 1)]
have lean_s746 : (Or let1219 (Or let976 let1156)) := by timed cnfAndNeg [let854, let975]
have lean_s747 : let1218 :=
  (scope (fun lean_a573 : let854 =>
    (scope (fun lean_a574 : let975 =>
      have lean_s747 : let160 := by timed Eq.symm lean_a574
      have lean_s748 : let975 := by timed Eq.symm lean_s747
      let lean_s749 := by timed flipCongrArg lean_s748 [Eq]
      have lean_s750 : (Eq let61 let61) := by timed rfl
      have lean_s751 : (Eq let516 let853) := by timed congr lean_s749 lean_s750
      have lean_s752 : let1220 := by timed falseIntro lean_a573
      have lean_s753 : (Eq let516 False) := by timed Eq.trans lean_s751 lean_s752
      have lean_s754 : let1215 := by timed falseElim lean_s753
      show let1215 from lean_s754
  ))))
have lean_s748 : (Implies let1219 let1215) := by liftOrNToImp lean_s747, 2
have lean_s749 : (Or (Not let1219) let1215) := by timed impliesElim lean_s748
have lean_s750 : let1218 := by R1 lean_s746, lean_s749, let1219, [(- 1), (- 1)]
have lean_s751 : let1054 := by timed rfl
have lean_s752 : let969 := by timed rfl
let lean_s753 := by timed flipCongrArg lean_s752 [Eq]
have lean_s754 : (Eq let985 let969) := by timed congr lean_s753 lean_r397
have lean_s755 : (Eq let985 True) := by timed Eq.trans lean_s754 lean_r391
have lean_s756 : (Eq let977 True) := by timed Eq.trans lean_r405 lean_s755
have lean_s757 : let977 := by timed trueElim lean_s756
let lean_s758 := by timed congr lean_s751 lean_s757
have lean_s759 : (Eq let1156 let1156) := by timed rfl
let lean_s760 := by timed congr lean_s751 lean_s759
have lean_s761 : (Eq let1215 let1215) := by timed rfl
let lean_s762 := by timed congr lean_s760 lean_s761
have lean_s763 : (Eq let1218 let1217) := by timed congr lean_s758 lean_s762
have lean_s764 : let1217 := by timed eqResolve lean_s750 lean_s763
have lean_s765 : let854 := by andElim lean_s29, 3
let lean_s766 := by R1 lean_s764, lean_s765, let853, [(- 1), 0]
have lean_s767 : let975 := by andElim lean_s42, 0
have lean_s768 : let1215 := by R2 lean_s766, lean_s767, let975, [(- 1), 0]
let lean_s769 := by R1 lean_s745, lean_s768, let516, [(- 1), 0]
have lean_s770 : (Or let1055 (Or let596 let152)) := by timed cnfAndNeg [let595, let151]
have lean_s771 : let1053 :=
  (scope (fun lean_a575 : let595 =>
    (scope (fun lean_a576 : let151 =>
      have lean_s771 : let1058 := by timed rfl
      let lean_s772 := by timed flipCongrArg lean_s771 [Eq]
      have lean_s773 : let386 := by timed Eq.symm lean_a576
      have lean_s774 : (Eq let120 let530) := by timed congr lean_s772 lean_s773
      have lean_s775 : let1057 := by timed falseIntro lean_a575
      have lean_s776 : let1056 := by timed Eq.trans lean_s774 lean_s775
      have lean_s777 : let400 := by timed falseElim lean_s776
      show let400 from lean_s777
  ))))
have lean_s772 : (Implies let1055 let400) := by liftOrNToImp lean_s771, 2
have lean_s773 : (Or (Not let1055) let400) := by timed impliesElim lean_s772
have lean_s774 : let1053 := by R1 lean_s770, lean_s773, let1055, [(- 1), (- 1)]
have lean_s775 : let1054 := by timed rfl
have lean_s776 : let531 := by timed rfl
let lean_s777 := by timed flipCongrArg lean_s776 [Eq]
have lean_s778 : (Eq let597 let531) := by timed congr lean_s777 lean_r247
have lean_s779 : (Eq let597 True) := by timed Eq.trans lean_s778 lean_r170
have lean_s780 : (Eq let598 True) := by timed Eq.trans lean_r211 lean_s779
have lean_s781 : let598 := by timed trueElim lean_s780
let lean_s782 := by timed congr lean_s775 lean_s781
have lean_s783 : (Eq let152 let152) := by timed rfl
let lean_s784 := by timed congr lean_s775 lean_s783
let lean_s785 := by timed congr lean_s784 lean_s728
have lean_s786 : (Eq let1053 let1052) := by timed congr lean_s782 lean_s785
have lean_s787 : let1052 := by timed eqResolve lean_s774 lean_s786
let lean_s788 := by R1 lean_s769, lean_s787, let151, [(- 1), (- 1)]
have lean_s789 : let595 := by andElim lean_s709, 0
let lean_s790 := by R1 lean_s788, lean_s789, let530, [(- 1), 0]
have lean_s791 : (Eq let1033 let1559) := by timed flipCongrArg lean_r45 [Not]
have lean_s792 : let1559 := by timed eqResolve lean_a535 lean_s791
have lean_s793 : (Or let543 (Or let1221 let400)) := by timed flipNotAnd lean_s792 [let87, let138, let120]
have lean_s794 : (Or let543 let1558) := by permutateOr lean_s793, [0, 2, 1], (- 1)
have lean_s795 : (Or let400 (Or let1664 (Or let108 (Or let525 (Or let400 let1547))))) := by R1 lean_s790, lean_s794, let138, [(- 1), (- 1)]
have lean_s796 : (Or let400 (Or let1664 (Or let108 let1546))) := by factor lean_s795, 6
have lean_s797 : let1101 := by andElim lean_s647, 43
have lean_s798 : (Or let100 (Or let120 (Or let313 (Or let578 let554)))) := by permutateOr lean_s797, [2, 3, 0, 1, 4], (- 1)
let lean_s799 := by R2 lean_s796, lean_s798, let120, [(- 1), (- 1)]
have lean_s800 : (Or let1188 (Or let912 let1085)) := by timed cnfAndNeg [let798, let967]
have lean_s801 : let1187 :=
  (scope (fun lean_a577 : let798 =>
    (scope (fun lean_a578 : let967 =>
      have lean_s801 : let188 := by timed Eq.symm lean_a578
      have lean_s802 : let967 := by timed Eq.symm lean_s801
      let lean_s803 := by timed flipCongrArg lean_s802 [Eq]
      have lean_s804 : (Eq let57 let57) := by timed rfl
      have lean_s805 : (Eq let578 let564) := by timed congr lean_s803 lean_s804
      have lean_s806 : let1189 := by timed falseIntro lean_a577
      have lean_s807 : (Eq let578 False) := by timed Eq.trans lean_s805 lean_s806
      have lean_s808 : let1184 := by timed falseElim lean_s807
      show let1184 from lean_s808
  ))))
have lean_s802 : (Implies let1188 let1184) := by liftOrNToImp lean_s801, 2
have lean_s803 : (Or (Not let1188) let1184) := by timed impliesElim lean_s802
have lean_s804 : let1187 := by R1 lean_s800, lean_s803, let1188, [(- 1), (- 1)]
have lean_s805 : let1054 := by timed rfl
have lean_s806 : let565 := by timed rfl
let lean_s807 := by timed flipCongrArg lean_s806 [Eq]
have lean_s808 : (Eq let957 let565) := by timed congr lean_s807 lean_r348
have lean_s809 : (Eq let957 True) := by timed Eq.trans lean_s808 lean_r198
have lean_s810 : (Eq let913 True) := by timed Eq.trans lean_r381 lean_s809
have lean_s811 : let913 := by timed trueElim lean_s810
let lean_s812 := by timed congr lean_s805 lean_s811
let lean_s813 := by timed congr lean_s805 lean_s730
have lean_s814 : (Eq let1184 let1184) := by timed rfl
let lean_s815 := by timed congr lean_s813 lean_s814
have lean_s816 : (Eq let1187 let1186) := by timed congr lean_s812 lean_s815
have lean_s817 : let1186 := by timed eqResolve lean_s804 lean_s816
have lean_s818 : let798 := by andElim lean_s29, 66
let lean_s819 := by R1 lean_s817, lean_s818, let564, [(- 1), 0]
have lean_s820 : let1184 := by R2 lean_s819, lean_s741, let967, [(- 1), 0]
let lean_s821 := by R1 lean_s799, lean_s820, let578, [(- 1), 0]
have lean_s822 : (Or let1917 (Or let346 (Or let1664 let1183))) := by timed cnfAndNeg [let345, let56, let98, let738, let87]
have lean_s823 : let1916 :=
  (scope (fun lean_a578 : let345 =>
    (scope (fun lean_a579 : let56 =>
      (scope (fun lean_a580 : let98 =>
        (scope (fun lean_a581 : let738 =>
          (scope (fun lean_a582 : let87 =>
            have lean_s823 : let262 := by timed Eq.symm lean_a579
            have lean_s824 : let56 := by timed Eq.symm lean_s823
            let lean_s825 := by timed flipCongrArg lean_s824 [Eq]
            have lean_s826 : let210 := by timed Eq.symm lean_a581
            have lean_s827 : let363 := by timed Eq.symm lean_a580
            have lean_s828 : let98 := by timed Eq.symm lean_s827
            have lean_s829 : let1166 := by timed Eq.trans lean_s826 lean_s828
            have lean_s830 : let1167 := by timed Eq.symm lean_s829
            have lean_s831 : let172 := by timed Eq.symm lean_a582
            have lean_s832 : let1168 := by timed Eq.trans lean_s831 lean_a581
            have lean_s833 : let1169 := by timed Eq.symm lean_s832
            have lean_s834 : let1164 := by timed Eq.trans lean_s830 lean_s833
            have lean_s835 : let1165 := by timed Eq.symm lean_s834
            have lean_s836 : (Eq let313 let344) := by timed congr lean_s825 lean_s835
            have lean_s837 : let1361 := by timed falseIntro lean_a578
            have lean_s838 : let1180 := by timed Eq.trans lean_s836 lean_s837
            have lean_s839 : let1171 := by timed falseElim lean_s838
            show let1171 from lean_s839
  ))))))))))
have lean_s824 : (Implies let1917 let1171) := by liftOrNToImp lean_s823, 5
have lean_s825 : (Or (Not let1917) let1171) := by timed impliesElim lean_s824
have lean_s826 : let1916 := by R1 lean_s822, lean_s825, let1917, [(- 1), (- 1)]
have lean_s827 : let1054 := by timed rfl
have lean_s828 : let349 := by timed rfl
let lean_s829 := by timed flipCongrArg lean_s828 [Eq]
have lean_s830 : (Eq let347 let349) := by timed congr lean_s829 lean_r98
have lean_s831 : (Eq let347 True) := by timed Eq.trans lean_s830 lean_r99
have lean_s832 : (Eq let348 True) := by timed Eq.trans lean_r97 lean_s831
have lean_s833 : let348 := by timed trueElim lean_s832
let lean_s834 := by timed congr lean_s827 lean_s833
let lean_s835 := by timed congr lean_s827 lean_s732
have lean_s836 : (Eq let1046 let1046) := by timed rfl
let lean_s837 := by timed congr lean_s827 lean_s836
let lean_s838 := by timed congr lean_s827 lean_s13
have lean_s839 : (Eq let543 let543) := by timed rfl
let lean_s840 := by timed congr lean_s827 lean_s839
have lean_s841 : (Eq let1171 let1171) := by timed rfl
let lean_s842 := by timed congr lean_s840 lean_s841
let lean_s843 := by timed congr lean_s838 lean_s842
let lean_s844 := by timed congr lean_s837 lean_s843
let lean_s845 := by timed congr lean_s835 lean_s844
have lean_s846 : (Eq let1916 let1915) := by timed congr lean_s834 lean_s845
have lean_s847 : let1915 := by timed eqResolve lean_s826 lean_s846
have lean_s848 : (Or let344 (Or let1155 (Or let1171 (Or let543 let1671)))) := by permutateOr lean_s847, [0, 3, 5, 4, 1, 2], (- 1)
let lean_s849 := by R1 lean_s821, lean_s848, let313, [(- 1), (- 1)]
have lean_s850 : let345 := by andElim lean_s29, 97
let lean_s851 := by R1 lean_s849, lean_s850, let344, [(- 1), 0]
let lean_s852 := by R2 lean_s851, lean_s45, let738, [(- 1), 0]
have lean_s853 : (Or let1913 (Or let953 (Or let1156 (Or let543 (Or let1155 let1909))))) := by timed cnfAndNeg [let809, let975, let87, let738, let98, let62]
have lean_s854 : let1912 :=
  (scope (fun lean_a581 : let809 =>
    (scope (fun lean_a582 : let975 =>
      (scope (fun lean_a583 : let87 =>
        (scope (fun lean_a584 : let738 =>
          (scope (fun lean_a585 : let98 =>
            (scope (fun lean_a586 : let62 =>
              have lean_s854 : let160 := by timed Eq.symm lean_a582
              have lean_s855 : let975 := by timed Eq.symm lean_s854
              let lean_s856 := by timed flipCongrArg lean_s855 [Eq]
              have lean_s857 : let210 := by timed Eq.symm lean_a584
              have lean_s858 : let172 := by timed Eq.symm lean_a583
              have lean_s859 : let87 := by timed Eq.symm lean_s858
              have lean_s860 : let1169 := by timed Eq.trans lean_s857 lean_s859
              have lean_s861 : let1168 := by timed Eq.symm lean_s860
              have lean_s862 : let1208 := by timed rfl
              let lean_s863 := by timed flipCongrArg lean_s862 [op]
              have lean_s864 : let253 := by timed Eq.symm lean_a586
              have lean_s865 : (Eq let590 let91) := by timed congr lean_s863 lean_s864
              have lean_s866 : let363 := by timed Eq.symm lean_a585
              have lean_s867 : let98 := by timed Eq.symm lean_s866
              have lean_s868 : let363 := by timed Eq.symm lean_s867
              let lean_s869 := by timed Eq.trans lean_s865 lean_s868
              have lean_s870 : (Eq let590 let207) := by timed Eq.trans lean_s869 lean_a584
              have lean_s871 : (Eq let207 let590) := by timed Eq.symm lean_s870
              let lean_s872 := by timed Eq.trans lean_s861 lean_s871
              have lean_s873 : let1165 := by timed Eq.trans lean_s872 lean_s865
              have lean_s874 : let1164 := by timed Eq.symm lean_s873
              have lean_s875 : let1163 := by timed congr lean_s856 lean_s874
              have lean_s876 : let1162 := by timed falseIntro lean_a581
              have lean_s877 : let1161 := by timed Eq.trans lean_s875 lean_s876
              have lean_s878 : let1153 := by timed falseElim lean_s877
              show let1153 from lean_s878
  ))))))))))))
have lean_s855 : (Implies let1913 let1153) := by liftOrNToImp lean_s854, 6
have lean_s856 : (Or (Not let1913) let1153) := by timed impliesElim lean_s855
have lean_s857 : let1912 := by R1 lean_s853, lean_s856, let1913, [(- 1), (- 1)]
have lean_s858 : let1054 := by timed rfl
have lean_s859 : let952 := by timed rfl
let lean_s860 := by timed flipCongrArg lean_s859 [Eq]
have lean_s861 : (Eq let954 let952) := by timed congr lean_s860 lean_r410
have lean_s862 : (Eq let954 True) := by timed Eq.trans lean_s861 lean_r377
have lean_s863 : (Eq let955 True) := by timed Eq.trans lean_r378 lean_s862
have lean_s864 : let955 := by timed trueElim lean_s863
let lean_s865 := by timed congr lean_s858 lean_s864
let lean_s866 := by timed congr lean_s858 lean_s759
let lean_s867 := by timed congr lean_s858 lean_s839
let lean_s868 := by timed congr lean_s858 lean_s13
let lean_s869 := by timed congr lean_s858 lean_s836
have lean_s870 : (Eq let1149 let1149) := by timed rfl
let lean_s871 := by timed congr lean_s858 lean_s870
have lean_s872 : (Eq let1153 let1153) := by timed rfl
let lean_s873 := by timed congr lean_s871 lean_s872
let lean_s874 := by timed congr lean_s869 lean_s873
let lean_s875 := by timed congr lean_s868 lean_s874
let lean_s876 := by timed congr lean_s867 lean_s875
let lean_s877 := by timed congr lean_s866 lean_s876
have lean_s878 : (Eq let1912 let1911) := by timed congr lean_s865 lean_s877
have lean_s879 : let1911 := by timed eqResolve lean_s857 lean_s878
have lean_s880 : (Or let808 (Or let1156 (Or let1155 (Or let543 (Or let1149 let1154))))) := by permutateOr lean_s879, [0, 1, 3, 2, 5, 6, 4], (- 1)
let lean_s881 := by R1 lean_s852, lean_s880, let108, [(- 1), (- 1)]
have lean_s882 : let809 := by andElim lean_s29, 53
let lean_s883 := by R1 lean_s881, lean_s882, let808, [(- 1), 0]
let lean_s884 := by R2 lean_s883, lean_s45, let738, [(- 1), 0]
have lean_s885 : (Or let1664 (Or let525 (Or let543 (Or let100 (Or let554 (Or let543 (Or let1664 (Or let1046 (Or let543 (Or let1149 let1046)))))))))) := by R2 lean_s884, lean_s767, let975, [(- 1), 0]
have lean_s886 : (Or let1664 (Or let525 (Or let543 (Or let100 (Or let554 let1909))))) := by factor lean_s885, 10
let lean_s887 := by R1 lean_s787, lean_s789, let530, [(- 1), 0]
let lean_s888 := by R2 lean_s887, lean_s798, let120, [(- 1), (- 1)]
let lean_s889 := by R1 lean_s888, lean_s820, let578, [(- 1), 0]
have lean_s890 : (Eq let1012 let1422) := by timed flipCongrArg lean_r85 [Not]
have lean_s891 : let1422 := by timed eqResolve lean_a464 lean_s890
have lean_s892 : (Or let1303 (Or let1323 let1171)) := by timed flipNotAnd lean_s891 [let141, let314, let313]
have lean_s893 : (Or let1171 (Or let1303 let1323)) := by permutateOr lean_s892, [2, 0, 1], (- 1)
let lean_s894 := by R1 lean_s889, lean_s893, let313, [(- 1), (- 1)]
have lean_s895 : let1040 := by timed rfl
have lean_s896 : let1054 := by timed rfl
have lean_s897 : (Eq let696 let1255) := by timed flipCongrArg lean_r426 [Not]
let lean_s898 := by timed congr lean_s896 lean_s897
have lean_s899 : (Eq let693 let1254) := by timed flipCongrArg lean_r387 [Not]
let lean_s900 := by timed congr lean_s896 lean_s899
have lean_s901 : (Eq let690 let1253) := by timed flipCongrArg lean_r131 [Not]
let lean_s902 := by timed congr lean_s896 lean_s901
have lean_s903 : (Eq let689 let1252) := by timed flipCongrArg lean_r355 [Not]
let lean_s904 := by timed congr lean_s896 lean_s903
have lean_s905 : (Eq let686 let1251) := by timed flipCongrArg lean_r424 [Not]
let lean_s906 := by timed congr lean_s904 lean_s905
let lean_s907 := by timed congr lean_s902 lean_s906
let lean_s908 := by timed congr lean_s900 lean_s907
have lean_s909 : (Eq let1004 let1256) := by timed congr lean_s898 lean_s908
have lean_s910 : (Eq let697 let1256) := by timed Eq.trans lean_r428 lean_s909
let lean_s911 := by timed congr lean_s895 lean_s910
have lean_s912 : let1054 := by timed rfl
have lean_s913 : (Eq let455 let1249) := by timed flipCongrArg lean_r142 [Not]
let lean_s914 := by timed congr lean_s912 lean_s913
have lean_s915 : (Eq let452 let1248) := by timed flipCongrArg lean_r421 [Not]
let lean_s916 := by timed congr lean_s912 lean_s915
have lean_s917 : (Eq let449 let1247) := by timed flipCongrArg lean_r281 [Not]
let lean_s918 := by timed congr lean_s912 lean_s917
have lean_s919 : (Eq let446 let1246) := by timed flipCongrArg lean_r419 [Not]
let lean_s920 := by timed congr lean_s912 lean_s919
have lean_s921 : (Eq let443 let1245) := by timed flipCongrArg lean_r351 [Not]
let lean_s922 := by timed congr lean_s920 lean_s921
let lean_s923 := by timed congr lean_s918 lean_s922
let lean_s924 := by timed congr lean_s916 lean_s923
have lean_s925 : (Eq let456 let1250) := by timed congr lean_s914 lean_s924
have lean_s926 : (Eq let457 let1250) := by timed Eq.trans lean_r139 lean_s925
let lean_s927 := by timed congr lean_s895 lean_s926
have lean_s928 : let1054 := by timed rfl
have lean_s929 : (Eq let682 let1243) := by timed flipCongrArg lean_r415 [Not]
let lean_s930 := by timed congr lean_s928 lean_s929
have lean_s931 : (Eq let679 let1242) := by timed flipCongrArg lean_r322 [Not]
let lean_s932 := by timed congr lean_s928 lean_s931
have lean_s933 : (Eq let676 let1241) := by timed flipCongrArg lean_r414 [Not]
let lean_s934 := by timed congr lean_s928 lean_s933
have lean_s935 : (Eq let673 let1240) := by timed flipCongrArg lean_r238 [Not]
let lean_s936 := by timed congr lean_s928 lean_s935
have lean_s937 : (Eq let672 let1239) := by timed flipCongrArg lean_r412 [Not]
let lean_s938 := by timed congr lean_s936 lean_s937
let lean_s939 := by timed congr lean_s934 lean_s938
let lean_s940 := by timed congr lean_s932 lean_s939
have lean_s941 : (Eq let997 let1244) := by timed congr lean_s930 lean_s940
have lean_s942 : (Eq let683 let1244) := by timed Eq.trans lean_r417 lean_s941
let lean_s943 := by timed congr lean_s895 lean_s942
have lean_s944 : let1054 := by timed rfl
have lean_s945 : (Eq let668 let1237) := by timed flipCongrArg lean_r392 [Not]
let lean_s946 := by timed congr lean_s944 lean_s945
have lean_s947 : (Eq let665 let1236) := by timed flipCongrArg lean_r334 [Not]
let lean_s948 := by timed congr lean_s944 lean_s947
have lean_s949 : (Eq let662 let1235) := by timed flipCongrArg lean_r411 [Not]
let lean_s950 := by timed congr lean_s944 lean_s949
have lean_s951 : (Eq let659 let1234) := by timed flipCongrArg lean_r265 [Not]
let lean_s952 := by timed congr lean_s944 lean_s951
have lean_s953 : (Eq let656 let1233) := by timed flipCongrArg lean_r409 [Not]
let lean_s954 := by timed congr lean_s952 lean_s953
let lean_s955 := by timed congr lean_s950 lean_s954
let lean_s956 := by timed congr lean_s948 lean_s955
have lean_s957 : (Eq let980 let1238) := by timed congr lean_s946 lean_s956
have lean_s958 : (Eq let669 let1238) := by timed Eq.trans lean_r400 lean_s957
let lean_s959 := by timed congr lean_s895 lean_s958
have lean_s960 : let1054 := by timed rfl
have lean_s961 : (Eq let592 let1231) := by timed flipCongrArg lean_r248 [Not]
let lean_s962 := by timed congr lean_s960 lean_s961
have lean_s963 : (Eq let589 let1230) := by timed flipCongrArg lean_r229 [Not]
let lean_s964 := by timed congr lean_s960 lean_s963
have lean_s965 : (Eq let586 let714) := by timed flipCongrArg lean_r339 [Not]
let lean_s966 := by timed congr lean_s960 lean_s965
have lean_s967 : (Eq let583 let352) := by timed flipCongrArg lean_r408 [Not]
let lean_s968 := by timed congr lean_s960 lean_s967
have lean_s969 : (Eq let581 let1229) := by timed flipCongrArg lean_r407 [Not]
let lean_s970 := by timed congr lean_s968 lean_s969
let lean_s971 := by timed congr lean_s966 lean_s970
let lean_s972 := by timed congr lean_s964 lean_s971
have lean_s973 : (Eq let593 let1232) := by timed congr lean_s962 lean_s972
have lean_s974 : (Eq let594 let1232) := by timed Eq.trans lean_r210 lean_s973
let lean_s975 := by timed congr lean_s959 lean_s974
let lean_s976 := by timed congr lean_s943 lean_s975
let lean_s977 := by timed congr lean_s927 lean_s976
have lean_s978 : (Eq let698 let1257) := by timed congr lean_s911 lean_s977
have lean_s979 : (Eq let699 let1257) := by timed Eq.trans lean_r253 lean_s978
have lean_s980 : let1257 := by timed eqResolve lean_a437 lean_s979
have lean_s981 : let1232 := by andElim lean_s980, 4
have lean_s982 : let1228 :=
  (scope (fun lean_a583 : let727 =>
    have lean_s982 : let458 := by timed Eq.symm lean_a583
    have lean_s983 : let727 := by timed Eq.symm lean_s982
    have lean_s984 : let1208 := by timed rfl
    let lean_s985 := by timed flipCongrArg lean_s984 [op]
    have lean_s986 : (Eq let1 let579) := by timed congr lean_s985 lean_s983
    have lean_s987 : let988 := by timed Eq.trans lean_s983 lean_s986
    show let988 from lean_s987
  ))
have lean_s983 : (Implies let727 let988) := by liftOrNToImp lean_s982, 1
have lean_s984 : let1228 := by timed impliesElim lean_s983
have lean_s985 : (Or let988 let1043) := by permutateOr lean_s984, [1, 0], (- 1)
have lean_s986 : let988 := by R2 lean_s985, lean_s712, let727, [(- 1), 0]
let lean_s987 := by R2 lean_s981, lean_s986, let988, [(- 1), 0]
have lean_s988 : (Or let1803 let1342) := by timed cnfAndNeg [let62, let108]
have lean_s989 : let1802 :=
  (scope (fun lean_a583 : let62 =>
    (scope (fun lean_a584 : let108 =>
      have lean_s989 : let365 := by timed Eq.symm lean_a584
      have lean_s990 : let108 := by timed Eq.symm lean_s989
      have lean_s991 : let1208 := by timed rfl
      let lean_s992 := by timed flipCongrArg lean_s991 [op]
      have lean_s993 : let253 := by timed Eq.symm lean_a583
      have lean_s994 : let62 := by timed Eq.symm lean_s993
      have lean_s995 : (Eq let91 let590) := by timed congr lean_s992 lean_s994
      have lean_s996 : let647 := by timed Eq.trans lean_s990 lean_s995
      show let647 from lean_s996
  ))))
have lean_s990 : (Implies let1803 let647) := by liftOrNToImp lean_s989, 2
have lean_s991 : (Or (Not let1803) let647) := by timed impliesElim lean_s990
have lean_s992 : let1802 := by R1 lean_s988, lean_s991, let1803, [(- 1), (- 1)]
have lean_s993 : (Or let647 let1342) := by permutateOr lean_s992, [2, 0, 1], (- 1)
let lean_s994 := by R2 lean_s987, lean_s993, let647, [(- 1), (- 1)]
have lean_s995 : (Or let1800 let1794) := by timed cnfAndNeg [let314, let56]
have lean_s996 : let1799 :=
  (scope (fun lean_a584 : let314 =>
    (scope (fun lean_a585 : let56 =>
      have lean_s996 : let262 := by timed Eq.symm lean_a585
      have lean_s997 : let56 := by timed Eq.symm lean_s996
      have lean_s998 : let1208 := by timed rfl
      let lean_s999 := by timed flipCongrArg lean_s998 [op]
      have lean_s1000 : let393 := by timed Eq.symm lean_a584
      have lean_s1001 : let314 := by timed Eq.symm lean_s1000
      have lean_s1002 : (Eq let2 let587) := by timed congr lean_s999 lean_s1001
      have lean_s1003 : let624 := by timed Eq.trans lean_s997 lean_s1002
      show let624 from lean_s1003
  ))))
have lean_s997 : (Implies let1800 let624) := by liftOrNToImp lean_s996, 2
have lean_s998 : (Or (Not let1800) let624) := by timed impliesElim lean_s997
have lean_s999 : let1799 := by R1 lean_s995, lean_s998, let1800, [(- 1), (- 1)]
have lean_s1000 : (Or let624 let1794) := by permutateOr lean_s999, [2, 0, 1], (- 1)
let lean_s1001 := by R2 lean_s994, lean_s1000, let624, [(- 1), (- 1)]
have lean_s1002 : (Or let1346 (Or let353 let1153)) := by timed cnfAndNeg [let352, let108]
have lean_s1003 : let1345 :=
  (scope (fun lean_a585 : let352 =>
    (scope (fun lean_a586 : let108 =>
      have lean_s1003 : let1265 := by timed rfl
      let lean_s1004 := by timed flipCongrArg lean_s1003 [Eq]
      have lean_s1005 : let1208 := by timed rfl
      let lean_s1006 := by timed flipCongrArg lean_s1005 [op]
      have lean_s1007 : let365 := by timed Eq.symm lean_a586
      have lean_s1008 : let108 := by timed Eq.symm lean_s1007
      have lean_s1009 : (Eq let61 let350) := by timed congr lean_s1006 lean_s1008
      have lean_s1010 : (Eq let62 let351) := by timed congr lean_s1004 lean_s1009
      have lean_s1011 : let1341 := by timed falseIntro lean_a585
      have lean_s1012 : let1347 := by timed Eq.trans lean_s1010 lean_s1011
      have lean_s1013 : let1149 := by timed falseElim lean_s1012
      show let1149 from lean_s1013
  ))))
have lean_s1004 : (Implies let1346 let1149) := by liftOrNToImp lean_s1003, 2
have lean_s1005 : (Or (Not let1346) let1149) := by timed impliesElim lean_s1004
have lean_s1006 : let1345 := by R1 lean_s1002, lean_s1005, let1346, [(- 1), (- 1)]
have lean_s1007 : let1054 := by timed rfl
have lean_s1008 : let423 := by timed rfl
let lean_s1009 := by timed flipCongrArg lean_s1008 [Eq]
have lean_s1010 : (Eq let354 let423) := by timed congr lean_s1009 lean_r304
have lean_s1011 : (Eq let354 True) := by timed Eq.trans lean_s1010 lean_r128
have lean_s1012 : (Eq let355 True) := by timed Eq.trans lean_r100 lean_s1011
have lean_s1013 : let355 := by timed trueElim lean_s1012
let lean_s1014 := by timed congr lean_s1007 lean_s1013
let lean_s1015 := by timed congr lean_s1007 lean_s872
let lean_s1016 := by timed congr lean_s1015 lean_s870
have lean_s1017 : (Eq let1345 let1344) := by timed congr lean_s1014 lean_s1016
have lean_s1018 : let1344 := by timed eqResolve lean_s1006 lean_s1017
have lean_s1019 : (Or let351 let1342) := by permutateOr lean_s1018, [0, 2, 1], (- 1)
have lean_s1020 : (Or let714 (Or let1149 (Or let1153 let1881))) := by R2 lean_s1001, lean_s1019, let351, [(- 1), (- 1)]
have lean_s1021 : (Or let714 (Or let1149 (Or let1153 let1794))) := by factor lean_s1020, 6
let lean_s1022 := by R2 lean_s1021, lean_s744, let108, [(- 1), (- 1)]
let lean_s1023 := by R1 lean_s1022, lean_s768, let516, [(- 1), 0]
have lean_s1024 : (Or let1798 (Or let715 let1664)) := by timed cnfAndNeg [let714, let56]
have lean_s1025 : let1797 :=
  (scope (fun lean_a586 : let714 =>
    (scope (fun lean_a587 : let56 =>
      have lean_s1025 : let1066 := by timed rfl
      let lean_s1026 := by timed flipCongrArg lean_s1025 [Eq]
      have lean_s1027 : let1208 := by timed rfl
      let lean_s1028 := by timed flipCongrArg lean_s1027 [op]
      have lean_s1029 : let262 := by timed Eq.symm lean_a587
      have lean_s1030 : let56 := by timed Eq.symm lean_s1029
      have lean_s1031 : (Eq let79 let584) := by timed congr lean_s1028 lean_s1030
      have lean_s1032 : (Eq let314 let704) := by timed congr lean_s1026 lean_s1031
      have lean_s1033 : (Eq let704 False) := by timed falseIntro lean_a586
      have lean_s1034 : let1571 := by timed Eq.trans lean_s1032 lean_s1033
      have lean_s1035 : let1323 := by timed falseElim lean_s1034
      show let1323 from lean_s1035
  ))))
have lean_s1026 : (Implies let1798 let1323) := by liftOrNToImp lean_s1025, 2
have lean_s1027 : (Or (Not let1798) let1323) := by timed impliesElim lean_s1026
have lean_s1028 : let1797 := by R1 lean_s1024, lean_s1027, let1798, [(- 1), (- 1)]
have lean_s1029 : let1054 := by timed rfl
have lean_s1030 : let705 := by timed rfl
let lean_s1031 := by timed flipCongrArg lean_s1030 [Eq]
have lean_s1032 : (Eq let728 let705) := by timed congr lean_s1031 lean_r263
have lean_s1033 : (Eq let728 True) := by timed Eq.trans lean_s1032 lean_r257
have lean_s1034 : (Eq let716 True) := by timed Eq.trans lean_r271 lean_s1033
have lean_s1035 : let716 := by timed trueElim lean_s1034
let lean_s1036 := by timed congr lean_s1029 lean_s1035
let lean_s1037 := by timed congr lean_s1029 lean_s732
let lean_s1038 := by timed congr lean_s1037 lean_s21
have lean_s1039 : (Eq let1797 let1796) := by timed congr lean_s1036 lean_s1038
have lean_s1040 : let1796 := by timed eqResolve lean_s1028 lean_s1039
have lean_s1041 : (Or let704 let1794) := by permutateOr lean_s1040, [0, 2, 1], (- 1)
let lean_s1042 := by R2 lean_s1023, lean_s1041, let704, [(- 1), (- 1)]
have lean_s1043 : (Or let1149 (Or let1323 (Or let1664 (Or let123 (Or let525 (Or let1323 (Or let1664 let1547))))))) := by R1 lean_s1042, lean_s794, let138, [(- 1), (- 1)]
have lean_s1044 : (Or let1149 (Or let1323 (Or let1664 (Or let123 (Or let525 let1547))))) := by factor lean_s1043, (- 1)
let lean_s1045 := by R2 lean_s1044, lean_s649, let314, [(- 1), (- 1)]
let lean_s1046 := by R1 lean_s1045, lean_s671, let703, [(- 1), 0]
have lean_s1047 : let1099 := by andElim lean_s647, 45
have lean_s1048 : (Or let122 (Or let31 (Or let87 (Or let599 let857)))) := by permutateOr lean_s1047, [1, 3, 0, 2, 4], (- 1)
let lean_s1049 := by R2 lean_s1046, lean_s1048, let87, [(- 1), (- 1)]
have lean_s1050 : (Or let1405 (Or let323 let1155)) := by timed cnfAndNeg [let322, let738]
have lean_s1051 : let1404 :=
  (scope (fun lean_a587 : let322 =>
    (scope (fun lean_a588 : let738 =>
      have lean_s1051 : let210 := by timed Eq.symm lean_a588
      have lean_s1052 : let738 := by timed Eq.symm lean_s1051
      let lean_s1053 := by timed flipCongrArg lean_s1052 [Eq]
      have lean_s1054 : let1406 := by timed rfl
      have lean_s1055 : (Eq let599 let321) := by timed congr lean_s1053 lean_s1054
      have lean_s1056 : let1395 := by timed falseIntro lean_a587
      have lean_s1057 : (Eq let599 False) := by timed Eq.trans lean_s1055 lean_s1056
      have lean_s1058 : let1401 := by timed falseElim lean_s1057
      show let1401 from lean_s1058
  ))))
have lean_s1052 : (Implies let1405 let1401) := by liftOrNToImp lean_s1051, 2
have lean_s1053 : (Or (Not let1405) let1401) := by timed impliesElim lean_s1052
have lean_s1054 : let1404 := by R1 lean_s1050, lean_s1053, let1405, [(- 1), (- 1)]
have lean_s1055 : let1054 := by timed rfl
let lean_s1056 := by timed congr lean_s1055 lean_s11
let lean_s1057 := by timed congr lean_s1055 lean_s13
have lean_s1058 : (Eq let1401 let1401) := by timed rfl
let lean_s1059 := by timed congr lean_s1057 lean_s1058
have lean_s1060 : (Eq let1404 let1403) := by timed congr lean_s1056 lean_s1059
have lean_s1061 : let1403 := by timed eqResolve lean_s1054 lean_s1060
let lean_s1062 := by R1 lean_s1061, lean_s30, let321, [(- 1), 0]
have lean_s1063 : let1401 := by R2 lean_s1062, lean_s45, let738, [(- 1), 0]
have lean_s1064 : (Or let1149 (Or let1664 (Or let123 (Or let525 (Or let400 (Or let98 (Or let717 (Or let857 (Or let122 let1098))))))))) := by R1 lean_s1049, lean_s1063, let599, [(- 1), 0]
have lean_s1065 : (Or let1149 (Or let1664 (Or let123 (Or let525 (Or let400 (Or let98 (Or let717 (Or let857 let1896)))))))) := by factor lean_s1064, 10
have lean_s1066 : (Or let122 (Or let31 (Or let98 (Or let717 (Or let123 (Or let525 (Or let857 (Or let400 let1902)))))))) := by permutateOr lean_s1065, [8, 9, 5, 6, 2, 3, 7, 4, 0, 1], (- 1)
let lean_s1067 := by R1 lean_s1066, lean_s713, let857, [(- 1), 0]
let lean_s1068 := by R1 lean_s1067, lean_s740, let123, [(- 1), (- 1)]
have lean_s1069 : (Or let122 (Or let31 (Or let98 (Or let717 (Or let525 (Or let400 (Or let1149 (Or let1664 (Or let151 (Or let400 let1664)))))))))) := by R2 lean_s1068, lean_s741, let967, [(- 1), 0]
have lean_s1070 : (Or let122 (Or let31 (Or let98 (Or let717 (Or let525 (Or let400 let1908)))))) := by factor lean_s1069, 10
have lean_s1071 : let1040 := by timed rfl
have lean_s1072 : let1054 := by timed rfl
let lean_s1073 := by timed congr lean_s1072 lean_r396
let lean_s1074 := by timed congr lean_s1072 lean_r371
let lean_s1075 := by timed congr lean_s1072 lean_r368
let lean_s1076 := by timed congr lean_s1072 lean_r362
let lean_s1077 := by timed congr lean_s1076 lean_r164
let lean_s1078 := by timed congr lean_s1075 lean_s1077
let lean_s1079 := by timed congr lean_s1074 lean_s1078
have lean_s1080 : (Eq let161 let1518) := by timed congr lean_s1073 lean_s1079
have lean_s1081 : (Eq let162 let1518) := by timed Eq.trans lean_r51 lean_s1080
let lean_s1082 := by timed congr lean_s1071 lean_s1081
have lean_s1083 : let1054 := by timed rfl
let lean_s1084 := by timed congr lean_s1083 lean_r234
let lean_s1085 := by timed congr lean_s1083 lean_r344
let lean_s1086 := by timed congr lean_s1083 lean_r118
let lean_s1087 := by timed congr lean_s1083 lean_r227
let lean_s1088 := by timed congr lean_s1087 lean_r338
let lean_s1089 := by timed congr lean_s1086 lean_s1088
let lean_s1090 := by timed congr lean_s1085 lean_s1089
have lean_s1091 : (Eq let168 let1517) := by timed congr lean_s1084 lean_s1090
have lean_s1092 : (Eq let169 let1517) := by timed Eq.trans lean_r52 lean_s1091
let lean_s1093 := by timed congr lean_s1071 lean_s1092
have lean_s1094 : let1054 := by timed rfl
let lean_s1095 := by timed congr lean_s1094 lean_r269
let lean_s1096 := by timed congr lean_s1094 lean_r317
let lean_s1097 := by timed congr lean_s1094 lean_r395
let lean_s1098 := by timed congr lean_s1094 lean_r129
let lean_s1099 := by timed congr lean_s1098 lean_r252
let lean_s1100 := by timed congr lean_s1097 lean_s1099
let lean_s1101 := by timed congr lean_s1096 lean_s1100
have lean_s1102 : (Eq let550 let1516) := by timed congr lean_s1095 lean_s1101
have lean_s1103 : (Eq let499 let1516) := by timed Eq.trans lean_r185 lean_s1102
let lean_s1104 := by timed congr lean_s1071 lean_s1103
have lean_s1105 : let1054 := by timed rfl
let lean_s1106 := by timed congr lean_s1105 lean_r117
let lean_s1107 := by timed congr lean_s1105 lean_r223
let lean_s1108 := by timed congr lean_s1105 lean_r138
let lean_s1109 := by timed congr lean_s1105 lean_r219
let lean_s1110 := by timed congr lean_s1109 lean_r367
let lean_s1111 := by timed congr lean_s1108 lean_s1110
let lean_s1112 := by timed congr lean_s1107 lean_s1111
have lean_s1113 : (Eq let634 let1515) := by timed congr lean_s1106 lean_s1112
have lean_s1114 : (Eq let494 let1515) := by timed Eq.trans lean_r237 lean_s1113
let lean_s1115 := by timed congr lean_s1071 lean_s1114
have lean_s1116 : let1054 := by timed rfl
let lean_s1117 := by timed congr lean_s1116 lean_r158
let lean_s1118 := by timed congr lean_s1116 lean_r171
let lean_s1119 := by timed congr lean_s1116 lean_r186
let lean_s1120 := by timed congr lean_s1116 lean_r331
let lean_s1121 := by timed congr lean_s1120 lean_r273
let lean_s1122 := by timed congr lean_s1119 lean_s1121
let lean_s1123 := by timed congr lean_s1118 lean_s1122
have lean_s1124 : (Eq let175 let1514) := by timed congr lean_s1117 lean_s1123
have lean_s1125 : (Eq let176 let1514) := by timed Eq.trans lean_r53 lean_s1124
let lean_s1126 := by timed congr lean_s1071 lean_s1125
have lean_s1127 : let1054 := by timed rfl
let lean_s1128 := by timed congr lean_s1127 lean_r352
let lean_s1129 := by timed congr lean_s1127 lean_r197
let lean_s1130 := by timed congr lean_s1127 lean_r172
let lean_s1131 := by timed congr lean_s1127 lean_r343
let lean_s1132 := by timed congr lean_s1131 lean_r330
let lean_s1133 := by timed congr lean_s1130 lean_s1132
let lean_s1134 := by timed congr lean_s1129 lean_s1133
have lean_s1135 : (Eq let183 let1513) := by timed congr lean_s1128 lean_s1134
have lean_s1136 : (Eq let184 let1513) := by timed Eq.trans lean_r54 lean_s1135
let lean_s1137 := by timed congr lean_s1071 lean_s1136
have lean_s1138 : let1054 := by timed rfl
let lean_s1139 := by timed congr lean_s1138 lean_r292
let lean_s1140 := by timed congr lean_s1138 lean_r389
let lean_s1141 := by timed congr lean_s1138 lean_r416
let lean_s1142 := by timed congr lean_s1138 lean_r336
let lean_s1143 := by timed congr lean_s1142 lean_r130
let lean_s1144 := by timed congr lean_s1141 lean_s1143
let lean_s1145 := by timed congr lean_s1140 lean_s1144
have lean_s1146 : (Eq let190 let1512) := by timed congr lean_s1139 lean_s1145
have lean_s1147 : (Eq let191 let1512) := by timed Eq.trans lean_r55 lean_s1146
let lean_s1148 := by timed congr lean_s1071 lean_s1147
have lean_s1149 : let1054 := by timed rfl
let lean_s1150 := by timed congr lean_s1149 lean_r261
let lean_s1151 := by timed congr lean_s1149 lean_r314
let lean_s1152 := by timed congr lean_s1149 lean_r390
let lean_s1153 := by timed congr lean_s1149 lean_r135
let lean_s1154 := by timed congr lean_s1153 lean_r427
let lean_s1155 := by timed congr lean_s1152 lean_s1154
let lean_s1156 := by timed congr lean_s1151 lean_s1155
have lean_s1157 : (Eq let746 let1511) := by timed congr lean_s1150 lean_s1156
have lean_s1158 : (Eq let491 let1511) := by timed Eq.trans lean_r287 lean_s1157
let lean_s1159 := by timed congr lean_s1071 lean_s1158
have lean_s1160 : let1054 := by timed rfl
let lean_s1161 := by timed congr lean_s1160 lean_r119
let lean_s1162 := by timed congr lean_s1160 lean_r341
let lean_s1163 := by timed congr lean_s1160 lean_r140
let lean_s1164 := by timed congr lean_s1160 lean_r324
let lean_s1165 := by timed congr lean_s1164 lean_r216
let lean_s1166 := by timed congr lean_s1163 lean_s1165
let lean_s1167 := by timed congr lean_s1162 lean_s1166
have lean_s1168 : (Eq let197 let1510) := by timed congr lean_s1161 lean_s1167
have lean_s1169 : (Eq let198 let1510) := by timed Eq.trans lean_r56 lean_s1168
let lean_s1170 := by timed congr lean_s1071 lean_s1169
have lean_s1171 : let1054 := by timed rfl
let lean_s1172 := by timed congr lean_s1171 lean_r159
let lean_s1173 := by timed congr lean_s1171 lean_r209
let lean_s1174 := by timed congr lean_s1171 lean_r228
let lean_s1175 := by timed congr lean_s1171 lean_r329
let lean_s1176 := by timed congr lean_s1175 lean_r268
let lean_s1177 := by timed congr lean_s1174 lean_s1176
let lean_s1178 := by timed congr lean_s1173 lean_s1177
have lean_s1179 : (Eq let503 let1509) := by timed congr lean_s1172 lean_s1178
have lean_s1180 : (Eq let486 let1509) := by timed Eq.trans lean_r143 lean_s1179
let lean_s1181 := by timed congr lean_s1071 lean_s1180
have lean_s1182 : let1054 := by timed rfl
let lean_s1183 := by timed congr lean_s1182 lean_r233
let lean_s1184 := by timed congr lean_s1182 lean_r321
let lean_s1185 := by timed congr lean_s1182 lean_r308
let lean_s1186 := by timed congr lean_s1182 lean_r126
let lean_s1187 := by timed congr lean_s1186 lean_r182
let lean_s1188 := by timed congr lean_s1185 lean_s1187
let lean_s1189 := by timed congr lean_s1184 lean_s1188
have lean_s1190 : (Eq let205 let1508) := by timed congr lean_s1183 lean_s1189
have lean_s1191 : (Eq let206 let1508) := by timed Eq.trans lean_r57 lean_s1190
let lean_s1192 := by timed congr lean_s1071 lean_s1191
have lean_s1193 : let1054 := by timed rfl
let lean_s1194 := by timed congr lean_s1193 lean_r290
let lean_s1195 := by timed congr lean_s1193 lean_r318
let lean_s1196 := by timed congr lean_s1193 lean_r307
let lean_s1197 := by timed congr lean_s1193 lean_r306
let lean_s1198 := by timed congr lean_s1197 lean_r244
let lean_s1199 := by timed congr lean_s1196 lean_s1198
let lean_s1200 := by timed congr lean_s1195 lean_s1199
have lean_s1201 : (Eq let571 let1507) := by timed congr lean_s1194 lean_s1200
have lean_s1202 : (Eq let480 let1507) := by timed Eq.trans lean_r203 lean_s1201
let lean_s1203 := by timed congr lean_s1071 lean_s1202
have lean_s1204 : let1054 := by timed rfl
let lean_s1205 := by timed congr lean_s1204 lean_r286
let lean_s1206 := by timed congr lean_s1204 lean_r311
let lean_s1207 := by timed congr lean_s1204 lean_r280
let lean_s1208 := by timed congr lean_s1204 lean_r178
let lean_s1209 := by timed congr lean_s1208 lean_r425
let lean_s1210 := by timed congr lean_s1207 lean_s1209
let lean_s1211 := by timed congr lean_s1206 lean_s1210
have lean_s1212 : (Eq let213 let1506) := by timed congr lean_s1205 lean_s1211
have lean_s1213 : (Eq let214 let1506) := by timed Eq.trans lean_r58 lean_s1212
let lean_s1214 := by timed congr lean_s1071 lean_s1213
have lean_s1215 : let1054 := by timed rfl
let lean_s1216 := by timed congr lean_s1215 lean_r121
let lean_s1217 := by timed congr lean_s1215 lean_r226
let lean_s1218 := by timed congr lean_s1215 lean_r144
let lean_s1219 := by timed congr lean_s1215 lean_r320
let lean_s1220 := by timed congr lean_s1219 lean_r373
let lean_s1221 := by timed congr lean_s1218 lean_s1220
let lean_s1222 := by timed congr lean_s1217 lean_s1221
have lean_s1223 : (Eq let220 let1505) := by timed congr lean_s1216 lean_s1222
have lean_s1224 : (Eq let221 let1505) := by timed Eq.trans lean_r59 lean_s1223
let lean_s1225 := by timed congr lean_s1071 lean_s1224
have lean_s1226 : let1054 := by timed rfl
let lean_s1227 := by timed congr lean_s1226 lean_r161
let lean_s1228 := by timed congr lean_s1226 lean_r353
let lean_s1229 := by timed congr lean_s1226 lean_r212
let lean_s1230 := by timed congr lean_s1226 lean_r231
let lean_s1231 := by timed congr lean_s1230 lean_r260
let lean_s1232 := by timed congr lean_s1229 lean_s1231
let lean_s1233 := by timed congr lean_s1228 lean_s1232
have lean_s1234 : (Eq let507 let1504) := by timed congr lean_s1227 lean_s1233
have lean_s1235 : (Eq let476 let1504) := by timed Eq.trans lean_r147 lean_s1234
let lean_s1236 := by timed congr lean_s1071 lean_s1235
have lean_s1237 : let1054 := by timed rfl
let lean_s1238 := by timed congr lean_s1237 lean_r114
let lean_s1239 := by timed congr lean_s1237 lean_r177
let lean_s1240 := by timed congr lean_s1237 lean_r133
let lean_s1241 := by timed congr lean_s1237 lean_r298
let lean_s1242 := by timed congr lean_s1241 lean_r313
let lean_s1243 := by timed congr lean_s1240 lean_s1242
let lean_s1244 := by timed congr lean_s1239 lean_s1243
have lean_s1245 : (Eq let227 let1503) := by timed congr lean_s1238 lean_s1244
have lean_s1246 : (Eq let228 let1503) := by timed Eq.trans lean_r60 lean_s1245
let lean_s1247 := by timed congr lean_s1071 lean_s1246
have lean_s1248 : let1054 := by timed rfl
let lean_s1249 := by timed congr lean_s1248 lean_r149
let lean_s1250 := by timed congr lean_s1248 lean_r239
let lean_s1251 := by timed congr lean_s1248 lean_r136
let lean_s1252 := by timed congr lean_s1248 lean_r204
let lean_s1253 := by timed congr lean_s1252 lean_r310
let lean_s1254 := by timed congr lean_s1251 lean_s1253
let lean_s1255 := by timed congr lean_s1250 lean_s1254
have lean_s1256 : (Eq let235 let1502) := by timed congr lean_s1249 lean_s1255
have lean_s1257 : (Eq let236 let1502) := by timed Eq.trans lean_r61 lean_s1256
let lean_s1258 := by timed congr lean_s1071 lean_s1257
have lean_s1259 : let1054 := by timed rfl
let lean_s1260 := by timed congr lean_s1259 lean_r346
let lean_s1261 := by timed congr lean_s1259 lean_r173
let lean_s1262 := by timed congr lean_s1259 lean_r137
let lean_s1263 := by timed congr lean_s1259 lean_r146
let lean_s1264 := by timed congr lean_s1263 lean_r191
let lean_s1265 := by timed congr lean_s1262 lean_s1264
let lean_s1266 := by timed congr lean_s1261 lean_s1265
have lean_s1267 : (Eq let243 let1501) := by timed congr lean_s1260 lean_s1266
have lean_s1268 : (Eq let244 let1501) := by timed Eq.trans lean_r62 lean_s1267
let lean_s1269 := by timed congr lean_s1071 lean_s1268
have lean_s1270 : let1054 := by timed rfl
let lean_s1271 := by timed congr lean_s1270 lean_r156
let lean_s1272 := by timed congr lean_s1270 lean_r335
let lean_s1273 := by timed congr lean_s1270 lean_r145
let lean_s1274 := by timed congr lean_s1270 lean_r277
let lean_s1275 := by timed congr lean_s1274 lean_r235
let lean_s1276 := by timed congr lean_s1273 lean_s1275
let lean_s1277 := by timed congr lean_s1272 lean_s1276
have lean_s1278 : (Eq let250 let1500) := by timed congr lean_s1271 lean_s1277
have lean_s1279 : (Eq let251 let1500) := by timed Eq.trans lean_r63 lean_s1278
let lean_s1280 := by timed congr lean_s1071 lean_s1279
have lean_s1281 : let1054 := by timed rfl
let lean_s1282 := by timed congr lean_s1281 lean_r163
let lean_s1283 := by timed congr lean_s1281 lean_r196
let lean_s1284 := by timed congr lean_s1281 lean_r189
let lean_s1285 := by timed congr lean_s1281 lean_r289
let lean_s1286 := by timed congr lean_s1285 lean_r285
let lean_s1287 := by timed congr lean_s1284 lean_s1286
let lean_s1288 := by timed congr lean_s1283 lean_s1287
have lean_s1289 : (Eq let928 let1493) := by timed congr lean_s1282 lean_s1288
have lean_s1290 : (Eq let471 let1493) := by timed Eq.trans lean_r359 lean_s1289
let lean_s1291 := by timed congr lean_s1071 lean_s1290
have lean_s1292 : let1054 := by timed rfl
let lean_s1293 := by timed congr lean_s1292 lean_r154
let lean_s1294 := by timed congr lean_s1292 lean_r181
let lean_s1295 := by timed congr lean_s1292 lean_r276
let lean_s1296 := by timed congr lean_s1292 lean_r208
let lean_s1297 := by timed congr lean_s1296 lean_r278
let lean_s1298 := by timed congr lean_s1295 lean_s1297
let lean_s1299 := by timed congr lean_s1294 lean_s1298
have lean_s1300 : (Eq let257 let1499) := by timed congr lean_s1293 lean_s1299
have lean_s1301 : (Eq let258 let1499) := by timed Eq.trans lean_r64 lean_s1300
let lean_s1302 := by timed congr lean_s1071 lean_s1301
have lean_s1303 : let1054 := by timed rfl
let lean_s1304 := by timed congr lean_s1303 lean_r363
let lean_s1305 := by timed congr lean_s1303 lean_r243
let lean_s1306 := by timed congr lean_s1303 lean_r420
let lean_s1307 := by timed congr lean_s1303 lean_r221
let lean_s1308 := by timed congr lean_s1307 lean_r275
let lean_s1309 := by timed congr lean_s1306 lean_s1308
let lean_s1310 := by timed congr lean_s1305 lean_s1309
have lean_s1311 : (Eq let521 let1498) := by timed congr lean_s1304 lean_s1310
have lean_s1312 : (Eq let468 let1498) := by timed Eq.trans lean_r160 lean_s1311
let lean_s1313 := by timed congr lean_s1071 lean_s1312
have lean_s1314 : let1054 := by timed rfl
let lean_s1315 := by timed congr lean_s1314 lean_r361
let lean_s1316 := by timed congr lean_s1314 lean_r166
let lean_s1317 := by timed congr lean_s1314 lean_r256
let lean_s1318 := by timed congr lean_s1314 lean_r296
let lean_s1319 := by timed congr lean_s1318 lean_r262
let lean_s1320 := by timed congr lean_s1317 lean_s1319
let lean_s1321 := by timed congr lean_s1316 lean_s1320
have lean_s1322 : (Eq let264 let1497) := by timed congr lean_s1315 lean_s1321
have lean_s1323 : (Eq let265 let1497) := by timed Eq.trans lean_r65 lean_s1322
let lean_s1324 := by timed congr lean_s1071 lean_s1323
have lean_s1325 : let1054 := by timed rfl
let lean_s1326 := by timed congr lean_s1325 lean_r251
let lean_s1327 := by timed congr lean_s1325 lean_r168
let lean_s1328 := by timed congr lean_s1325 lean_r201
let lean_s1329 := by timed congr lean_s1325 lean_r399
let lean_s1330 := by timed congr lean_s1329 lean_r255
let lean_s1331 := by timed congr lean_s1328 lean_s1330
let lean_s1332 := by timed congr lean_s1327 lean_s1331
have lean_s1333 : (Eq let366 let1496) := by timed congr lean_s1326 lean_s1332
have lean_s1334 : (Eq let367 let1496) := by timed Eq.trans lean_r102 lean_s1333
let lean_s1335 := by timed congr lean_s1071 lean_s1334
have lean_s1336 : let1054 := by timed rfl
let lean_s1337 := by timed congr lean_s1336 lean_r165
let lean_s1338 := by timed congr lean_s1336 lean_r190
let lean_s1339 := by timed congr lean_s1336 lean_r300
let lean_s1340 := by timed congr lean_s1336 lean_r288
let lean_s1341 := by timed congr lean_s1340 lean_r270
let lean_s1342 := by timed congr lean_s1339 lean_s1341
let lean_s1343 := by timed congr lean_s1338 lean_s1342
have lean_s1344 : (Eq let749 let1494) := by timed congr lean_s1337 lean_s1343
have lean_s1345 : (Eq let463 let1494) := by timed Eq.trans lean_r291 lean_s1344
let lean_s1346 := by timed congr lean_s1335 lean_s1345
let lean_s1347 := by timed congr lean_s1324 lean_s1346
let lean_s1348 := by timed congr lean_s1313 lean_s1347
let lean_s1349 := by timed congr lean_s1302 lean_s1348
let lean_s1350 := by timed congr lean_s1291 lean_s1349
let lean_s1351 := by timed congr lean_s1280 lean_s1350
let lean_s1352 := by timed congr lean_s1269 lean_s1351
let lean_s1353 := by timed congr lean_s1258 lean_s1352
let lean_s1354 := by timed congr lean_s1247 lean_s1353
let lean_s1355 := by timed congr lean_s1236 lean_s1354
let lean_s1356 := by timed congr lean_s1225 lean_s1355
let lean_s1357 := by timed congr lean_s1214 lean_s1356
let lean_s1358 := by timed congr lean_s1203 lean_s1357
let lean_s1359 := by timed congr lean_s1192 lean_s1358
let lean_s1360 := by timed congr lean_s1181 lean_s1359
let lean_s1361 := by timed congr lean_s1170 lean_s1360
let lean_s1362 := by timed congr lean_s1159 lean_s1361
let lean_s1363 := by timed congr lean_s1148 lean_s1362
let lean_s1364 := by timed congr lean_s1137 lean_s1363
let lean_s1365 := by timed congr lean_s1126 lean_s1364
let lean_s1366 := by timed congr lean_s1115 lean_s1365
let lean_s1367 := by timed congr lean_s1104 lean_s1366
let lean_s1368 := by timed congr lean_s1093 lean_s1367
have lean_s1369 : (Eq let500 let1519) := by timed congr lean_s1082 lean_s1368
have lean_s1370 : (Eq let501 let1519) := by timed Eq.trans lean_r141 lean_s1369
have lean_s1371 : let1519 := by timed eqResolve lean_a430 lean_s1370
have lean_s1372 : let1493 := by andElim lean_s1371, 19
have lean_s1373 : (Or let31 (Or let120 (Or let151 let1492))) := by permutateOr lean_s1372, [2, 1, 0, 3, 4], (- 1)
let lean_s1374 := by R2 lean_s1070, lean_s1373, let120, [(- 1), (- 1)]
have lean_s1375 : (Or let1491 let1489) := by timed cnfAndNeg [let727, let744]
have lean_s1376 : let1490 :=
  (scope (fun lean_a587 : let727 =>
    (scope (fun lean_a588 : let744 =>
      have lean_s1376 : let469 := by timed Eq.symm lean_a588
      have lean_s1377 : let458 := by timed Eq.symm lean_a587
      have lean_s1378 : let727 := by timed Eq.symm lean_s1377
      have lean_s1379 : let707 := by timed Eq.trans lean_s1376 lean_s1378
      show let707 from lean_s1379
  ))))
have lean_s1377 : (Implies let1491 let707) := by liftOrNToImp lean_s1376, 2
have lean_s1378 : (Or (Not let1491) let707) := by timed impliesElim lean_s1377
have lean_s1379 : let1490 := by R1 lean_s1375, lean_s1378, let1491, [(- 1), (- 1)]
have lean_s1380 : (Or let707 let1489) := by permutateOr lean_s1379, [2, 0, 1], (- 1)
have lean_s1381 : let708 := by andElim lean_s29, 49
let lean_s1382 := by R1 lean_s1380, lean_s1381, let707, [(- 1), 0]
have lean_s1383 : let1488 := by R2 lean_s1382, lean_s712, let727, [(- 1), 0]
let lean_s1384 := by R1 lean_s1374, lean_s1383, let744, [(- 1), 0]
have lean_s1385 : (Or let1319 (Or let371 let1194)) := by timed cnfAndNeg [let370, let734]
have lean_s1386 : let1318 :=
  (scope (fun lean_a588 : let370 =>
    (scope (fun lean_a589 : let734 =>
      have lean_s1386 : let246 := by timed Eq.symm lean_a589
      have lean_s1387 : let734 := by timed Eq.symm lean_s1386
      let lean_s1388 := by timed flipCongrArg lean_s1387 [Eq]
      have lean_s1389 : let1320 := by timed rfl
      have lean_s1390 : (Eq let748 let369) := by timed congr lean_s1388 lean_s1389
      have lean_s1391 : (Eq let369 False) := by timed falseIntro lean_a588
      have lean_s1392 : (Eq let748 False) := by timed Eq.trans lean_s1390 lean_s1391
      have lean_s1393 : let1315 := by timed falseElim lean_s1392
      show let1315 from lean_s1393
  ))))
have lean_s1387 : (Implies let1319 let1315) := by liftOrNToImp lean_s1386, 2
have lean_s1388 : (Or (Not let1319) let1315) := by timed impliesElim lean_s1387
have lean_s1389 : let1318 := by R1 lean_s1385, lean_s1388, let1319, [(- 1), (- 1)]
have lean_s1390 : let1054 := by timed rfl
have lean_s1391 : let374 := by timed rfl
let lean_s1392 := by timed flipCongrArg lean_s1391 [Eq]
have lean_s1393 : (Eq let372 let374) := by timed congr lean_s1392 lean_r106
have lean_s1394 : (Eq let372 True) := by timed Eq.trans lean_s1393 lean_r107
have lean_s1395 : (Eq let373 True) := by timed Eq.trans lean_r105 lean_s1394
have lean_s1396 : let373 := by timed trueElim lean_s1395
let lean_s1397 := by timed congr lean_s1390 lean_s1396
let lean_s1398 := by timed congr lean_s1390 lean_s17
have lean_s1399 : (Eq let1315 let1315) := by timed rfl
let lean_s1400 := by timed congr lean_s1398 lean_s1399
have lean_s1401 : (Eq let1318 let1317) := by timed congr lean_s1397 lean_s1400
have lean_s1402 : let1317 := by timed eqResolve lean_s1389 lean_s1401
have lean_s1403 : let370 := by andElim lean_s29, 89
let lean_s1404 := by R1 lean_s1402, lean_s1403, let369, [(- 1), 0]
have lean_s1405 : let1315 := by R2 lean_s1404, lean_s43, let734, [(- 1), 0]
let lean_s1406 := by R1 lean_s1384, lean_s1405, let748, [(- 1), 0]
have lean_s1407 : (Or let1394 (Or let1194 (Or let1149 (Or let323 (Or let1303 let1155))))) := by timed cnfAndNeg [let734, let62, let322, let141, let738]
have lean_s1408 : let1393 :=
  (scope (fun lean_a589 : let734 =>
    (scope (fun lean_a590 : let62 =>
      (scope (fun lean_a591 : let322 =>
        (scope (fun lean_a592 : let141 =>
          (scope (fun lean_a593 : let738 =>
            have lean_s1408 : let210 := by timed Eq.symm lean_a593
            have lean_s1409 : let738 := by timed Eq.symm lean_s1408
            let lean_s1410 := by timed flipCongrArg lean_s1409 [Eq]
            have lean_s1411 : let246 := by timed Eq.symm lean_a589
            have lean_s1412 : let415 := by timed Eq.symm lean_a592
            have lean_s1413 : let141 := by timed Eq.symm lean_s1412
            have lean_s1414 : let1397 := by timed Eq.trans lean_s1411 lean_s1413
            have lean_s1415 : let1396 := by timed Eq.symm lean_s1414
            have lean_s1416 : let253 := by timed Eq.symm lean_a590
            have lean_s1417 : (Eq let61 let9) := by timed Eq.trans lean_s1416 lean_a589
            have lean_s1418 : (Eq let9 let61) := by timed Eq.symm lean_s1417
            have lean_s1419 : (Eq let99 let61) := by timed Eq.trans lean_s1415 lean_s1418
            have lean_s1420 : (Eq let61 let99) := by timed Eq.symm lean_s1419
            have lean_s1421 : (Eq let717 let321) := by timed congr lean_s1410 lean_s1420
            have lean_s1422 : let1395 := by timed falseIntro lean_a591
            have lean_s1423 : (Eq let717 False) := by timed Eq.trans lean_s1421 lean_s1422
            have lean_s1424 : let1301 := by timed falseElim lean_s1423
            show let1301 from lean_s1424
  ))))))))))
have lean_s1409 : (Implies let1394 let1301) := by liftOrNToImp lean_s1408, 5
have lean_s1410 : (Or (Not let1394) let1301) := by timed impliesElim lean_s1409
have lean_s1411 : let1393 := by R1 lean_s1407, lean_s1410, let1394, [(- 1), (- 1)]
have lean_s1412 : let1054 := by timed rfl
let lean_s1413 := by timed congr lean_s1412 lean_s17
let lean_s1414 := by timed congr lean_s1412 lean_s870
let lean_s1415 := by timed congr lean_s1412 lean_s11
let lean_s1416 := by timed congr lean_s1412 lean_s15
let lean_s1417 := by timed congr lean_s1412 lean_s13
have lean_s1418 : (Eq let1301 let1301) := by timed rfl
let lean_s1419 := by timed congr lean_s1417 lean_s1418
let lean_s1420 := by timed congr lean_s1416 lean_s1419
let lean_s1421 := by timed congr lean_s1415 lean_s1420
let lean_s1422 := by timed congr lean_s1414 lean_s1421
have lean_s1423 : (Eq let1393 let1392) := by timed congr lean_s1413 lean_s1422
have lean_s1424 : let1392 := by timed eqResolve lean_s1411 lean_s1423
have lean_s1425 : (Or let321 (Or let1155 (Or let1194 (Or let1303 let1390)))) := by permutateOr lean_s1424, [2, 4, 0, 3, 5, 1], (- 1)
let lean_s1426 := by R1 lean_s1406, lean_s1425, let717, [(- 1), (- 1)]
have lean_s1427 : let1095 := by andElim lean_s647, 47
have lean_s1428 : (Or let88 (Or let141 (Or let97 let1094))) := by permutateOr lean_s1427, [1, 2, 0, 3, 4], (- 1)
let lean_s1429 := by R2 lean_s1426, lean_s1428, let141, [(- 1), (- 1)]
have lean_s1430 : (Or let1263 (Or let434 let543)) := by timed cnfAndNeg [let433, let87]
have lean_s1431 : let1262 :=
  (scope (fun lean_a589 : let433 =>
    (scope (fun lean_a590 : let87 =>
      have lean_s1431 : let1265 := by timed rfl
      let lean_s1432 := by timed flipCongrArg lean_s1431 [Eq]
      have lean_s1433 : let172 := by timed Eq.symm lean_a590
      have lean_s1434 : (Eq let97 let432) := by timed congr lean_s1432 lean_s1433
      have lean_s1435 : let1264 := by timed falseIntro lean_a589
      have lean_s1436 : (Eq let97 False) := by timed Eq.trans lean_s1434 lean_s1435
      have lean_s1437 : let1259 := by timed falseElim lean_s1436
      show let1259 from lean_s1437
  ))))
have lean_s1432 : (Implies let1263 let1259) := by liftOrNToImp lean_s1431, 2
have lean_s1433 : (Or (Not let1263) let1259) := by timed impliesElim lean_s1432
have lean_s1434 : let1262 := by R1 lean_s1430, lean_s1433, let1263, [(- 1), (- 1)]
have lean_s1435 : let1054 := by timed rfl
have lean_s1436 : let640 := by timed rfl
let lean_s1437 := by timed flipCongrArg lean_s1436 [Eq]
have lean_s1438 : (Eq let435 let640) := by timed congr lean_s1437 lean_r179
have lean_s1439 : (Eq let435 True) := by timed Eq.trans lean_s1438 lean_r241
have lean_s1440 : (Eq let436 True) := by timed Eq.trans lean_r134 lean_s1439
have lean_s1441 : let436 := by timed trueElim lean_s1440
let lean_s1442 := by timed congr lean_s1435 lean_s1441
let lean_s1443 := by timed congr lean_s1435 lean_s839
have lean_s1444 : (Eq let1259 let1259) := by timed rfl
let lean_s1445 := by timed congr lean_s1443 lean_s1444
have lean_s1446 : (Eq let1262 let1261) := by timed congr lean_s1442 lean_s1445
have lean_s1447 : let1261 := by timed eqResolve lean_s1434 lean_s1446
let lean_s1448 := by R1 lean_s1429, lean_s1447, let97, [(- 1), (- 1)]
have lean_s1449 : let433 := by andElim lean_s709, 7
let lean_s1450 := by R1 lean_s1448, lean_s1449, let432, [(- 1), 0]
let lean_s1451 := by R1 lean_s1450, lean_s1402, let748, [(- 1), (- 1)]
let lean_s1452 := by R1 lean_s1451, lean_s1403, let369, [(- 1), 0]
have lean_s1453 : (Or let1202 (Or let1200 let1043)) := by timed cnfAndNeg [let747, let727]
have lean_s1454 : let1201 :=
  (scope (fun lean_a590 : let747 =>
    (scope (fun lean_a591 : let727 =>
      have lean_s1454 : let458 := by timed Eq.symm lean_a591
      have lean_s1455 : let727 := by timed Eq.symm lean_s1454
      have lean_s1456 : let459 := by timed Eq.symm lean_a590
      have lean_s1457 : let17 := by timed Eq.trans lean_s1455 lean_s1456
      show let17 from lean_s1457
  ))))
have lean_s1455 : (Implies let1202 let17) := by liftOrNToImp lean_s1454, 2
have lean_s1456 : (Or (Not let1202) let17) := by timed impliesElim lean_s1455
have lean_s1457 : let1201 := by R1 lean_s1453, lean_s1456, let1202, [(- 1), (- 1)]
have lean_s1458 : (Or let17 (Or let1043 let1200)) := by permutateOr lean_s1457, [2, 1, 0], (- 1)
let lean_s1459 := by R1 lean_s1452, lean_s1458, let747, [(- 1), (- 1)]
have lean_s1460 : let18 := by andElim lean_s709, 9
let lean_s1461 := by R1 lean_s1459, lean_s1460, let17, [(- 1), 0]
have lean_s1462 : (Eq let1011 let1716) := by timed flipCongrArg lean_r29 [Not]
have lean_s1463 : let1716 := by timed eqResolve lean_a463 lean_s1462
have lean_s1464 : (Or let1321 let1715) := by timed flipNotAnd lean_s1463 [let88, let56, let87]
have lean_s1465 : (Or let543 let1713) := by permutateOr lean_s1464, [2, 0, 1], (- 1)
have lean_s1466 : (Or let122 (Or let31 (Or let98 (Or let525 (Or let1149 (Or let1664 (Or let151 (Or let31 (Or let151 (Or let321 (Or let1155 (Or let1194 (Or let1149 let1907))))))))))))) := by R1 lean_s1461, lean_s1465, let88, [(- 1), (- 1)]
have lean_s1467 : (Or let122 (Or let31 (Or let98 (Or let525 (Or let1149 (Or let1664 (Or let151 let1906))))))) := by factor lean_s1466, 17
let lean_s1468 := by R2 lean_s1467, lean_s1048, let87, [(- 1), (- 1)]
let lean_s1469 := by R1 lean_s1468, lean_s678, let857, [(- 1), (- 1)]
let lean_s1470 := by R1 lean_s1469, lean_s710, let306, [(- 1), 0]
have lean_s1471 : (Or let122 (Or let31 (Or let98 (Or let525 (Or let1149 (Or let1664 (Or let151 let1905))))))) := by R1 lean_s1470, lean_s1061, let599, [(- 1), (- 1)]
have lean_s1472 : (Or let122 (Or let31 (Or let98 (Or let525 (Or let1149 (Or let1664 (Or let151 let1904))))))) := by factor lean_s1471, 15
let lean_s1473 := by R2 lean_s1472, lean_s43, let734, [(- 1), 0]
let lean_s1474 := by R2 lean_s1473, lean_s712, let727, [(- 1), 0]
let lean_s1475 := by R1 lean_s1474, lean_s30, let321, [(- 1), 0]
have lean_s1476 : (Or let122 (Or let31 (Or let98 (Or let525 let1908)))) := by R2 lean_s1475, lean_s45, let738, [(- 1), 0]
have lean_s1477 : (Or let122 (Or let31 (Or let98 (Or let151 let1903)))) := by permutateOr lean_s1476, [0, 1, 2, 6, 3, 4, 5], (- 1)
let lean_s1478 := by R2 lean_s894, lean_s1477, let151, [(- 1), (- 1)]
let lean_s1479 := by R2 lean_s1478, lean_s649, let314, [(- 1), (- 1)]
let lean_s1480 := by R1 lean_s1479, lean_s671, let703, [(- 1), 0]
let lean_s1481 := by R1 lean_s1480, lean_s713, let857, [(- 1), 0]
let lean_s1482 := by R1 lean_s1481, lean_s1425, let717, [(- 1), (- 1)]
have lean_s1483 : (Or let1900 (Or let5 let1664)) := by timed cnfAndNeg [let4, let56]
have lean_s1484 : let1899 :=
  (scope (fun lean_a591 : let4 =>
    (scope (fun lean_a592 : let56 =>
      have lean_s1484 : let262 := by timed Eq.symm lean_a592
      have lean_s1485 : let56 := by timed Eq.symm lean_s1484
      let lean_s1486 := by timed flipCongrArg lean_s1485 [Eq]
      have lean_s1487 : let1006 := by timed rfl
      have lean_s1488 : (Eq let554 let3) := by timed congr lean_s1486 lean_s1487
      have lean_s1489 : (Eq let3 False) := by timed falseIntro lean_a591
      have lean_s1490 : let1555 := by timed Eq.trans lean_s1488 lean_s1489
      have lean_s1491 : let1081 := by timed falseElim lean_s1490
      show let1081 from lean_s1491
  ))))
have lean_s1485 : (Implies let1900 let1081) := by liftOrNToImp lean_s1484, 2
have lean_s1486 : (Or (Not let1900) let1081) := by timed impliesElim lean_s1485
have lean_s1487 : let1899 := by R1 lean_s1483, lean_s1486, let1900, [(- 1), (- 1)]
have lean_s1488 : let1054 := by timed rfl
have lean_s1489 : let8 := by timed rfl
let lean_s1490 := by timed flipCongrArg lean_s1489 [Eq]
have lean_s1491 : (Eq let6 let8) := by timed congr lean_s1490 lean_r1
have lean_s1492 : (Eq let6 True) := by timed Eq.trans lean_s1491 lean_r2
have lean_s1493 : (Eq let7 True) := by timed Eq.trans lean_r0 lean_s1492
have lean_s1494 : let7 := by timed trueElim lean_s1493
let lean_s1495 := by timed congr lean_s1488 lean_s1494
let lean_s1496 := by timed congr lean_s1488 lean_s732
have lean_s1497 : (Eq let1081 let1081) := by timed rfl
let lean_s1498 := by timed congr lean_s1496 lean_s1497
have lean_s1499 : (Eq let1899 let1898) := by timed congr lean_s1495 lean_s1498
have lean_s1500 : let1898 := by timed eqResolve lean_s1487 lean_s1499
let lean_s1501 := by R1 lean_s1482, lean_s1500, let554, [(- 1), (- 1)]
have lean_s1502 : let4 := by andElim lean_s29, 98
let lean_s1503 := by R1 lean_s1501, lean_s1502, let3, [(- 1), 0]
have lean_s1504 : (Or let1306 let1304) := by timed cnfAndNeg [let100, let141]
have lean_s1505 : let1305 :=
  (scope (fun lean_a592 : let100 =>
    (scope (fun lean_a593 : let141 =>
      have lean_s1505 : let415 := by timed Eq.symm lean_a593
      have lean_s1506 : let141 := by timed Eq.symm lean_s1505
      have lean_s1507 : let474 := by timed Eq.symm lean_a592
      have lean_s1508 : let82 := by timed Eq.trans lean_s1506 lean_s1507
      show let82 from lean_s1508
  ))))
have lean_s1506 : (Implies let1306 let82) := by liftOrNToImp lean_s1505, 2
have lean_s1507 : (Or (Not let1306) let82) := by timed impliesElim lean_s1506
have lean_s1508 : let1305 := by R1 lean_s1504, lean_s1507, let1306, [(- 1), (- 1)]
have lean_s1509 : (Or let82 let1304) := by permutateOr lean_s1508, [2, 0, 1], (- 1)
let lean_s1510 := by R1 lean_s1503, lean_s1509, let100, [(- 1), (- 1)]
have lean_s1511 : let83 := by andElim lean_s709, 5
have lean_s1512 : (Or let1303 (Or let122 (Or let31 (Or let98 (Or let525 (Or let1149 (Or let1664 (Or let98 (Or let321 (Or let1155 (Or let1194 (Or let1303 let1901)))))))))))) := by R1 lean_s1510, lean_s1511, let82, [(- 1), 0]
have lean_s1513 : (Or let1303 (Or let122 (Or let31 (Or let98 (Or let525 (Or let1149 (Or let1664 (Or let321 (Or let1155 let1194))))))))) := by factor lean_s1512, 14
let lean_s1514 := by R2 lean_s1513, lean_s1428, let141, [(- 1), (- 1)]
let lean_s1515 := by R1 lean_s1514, lean_s1447, let97, [(- 1), (- 1)]
let lean_s1516 := by R1 lean_s1515, lean_s1449, let432, [(- 1), 0]
let lean_s1517 := by R1 lean_s1516, lean_s1402, let748, [(- 1), (- 1)]
let lean_s1518 := by R1 lean_s1517, lean_s1403, let369, [(- 1), 0]
let lean_s1519 := by R1 lean_s1518, lean_s1458, let747, [(- 1), (- 1)]
let lean_s1520 := by R1 lean_s1519, lean_s1460, let17, [(- 1), 0]
have lean_s1521 : (Or let122 (Or let31 (Or let98 (Or let525 (Or let1149 (Or let1664 (Or let321 (Or let1155 (Or let1194 let1907))))))))) := by R1 lean_s1520, lean_s1465, let88, [(- 1), (- 1)]
have lean_s1522 : (Or let122 (Or let31 (Or let98 (Or let525 (Or let1149 (Or let1664 let1906)))))) := by factor lean_s1521, 13
let lean_s1523 := by R2 lean_s1522, lean_s1048, let87, [(- 1), (- 1)]
let lean_s1524 := by R1 lean_s1523, lean_s678, let857, [(- 1), (- 1)]
let lean_s1525 := by R1 lean_s1524, lean_s710, let306, [(- 1), 0]
have lean_s1526 : (Or let122 (Or let31 (Or let98 (Or let525 (Or let1149 (Or let1664 let1905)))))) := by R1 lean_s1525, lean_s1061, let599, [(- 1), (- 1)]
have lean_s1527 : (Or let122 (Or let31 (Or let98 (Or let525 (Or let1149 (Or let1664 let1904)))))) := by factor lean_s1526, 14
let lean_s1528 := by R2 lean_s1527, lean_s43, let734, [(- 1), 0]
let lean_s1529 := by R2 lean_s1528, lean_s712, let727, [(- 1), 0]
let lean_s1530 := by R1 lean_s1529, lean_s30, let321, [(- 1), 0]
have lean_s1531 : (Or let122 (Or let31 (Or let98 let1903))) := by R2 lean_s1530, lean_s45, let738, [(- 1), 0]
let lean_s1532 := by R2 lean_s886, lean_s1531, let98, [(- 1), (- 1)]
let lean_s1533 := by R1 lean_s1532, lean_s1509, let100, [(- 1), (- 1)]
have lean_s1534 : (Or let1664 (Or let525 (Or let543 (Or let554 (Or let1149 (Or let122 (Or let31 (Or let525 let1901)))))))) := by R1 lean_s1533, lean_s1511, let82, [(- 1), 0]
have lean_s1535 : (Or let1664 (Or let525 (Or let543 (Or let554 (Or let1149 (Or let122 (Or let31 let1303))))))) := by factor lean_s1534, (- 1)
have lean_s1536 : let1097 := by andElim lean_s647, 46
have lean_s1537 : (Or let278 (Or let148 (Or let62 let1096))) := by permutateOr lean_s1536, [1, 2, 0, 3, 4], (- 1)
let lean_s1538 := by R2 lean_s1535, lean_s1537, let62, [(- 1), (- 1)]
let lean_s1539 := by R1 lean_s1458, lean_s1460, let17, [(- 1), 0]
have lean_s1540 : let1200 := by R2 lean_s1539, lean_s712, let727, [(- 1), 0]
let lean_s1541 := by R1 lean_s1538, lean_s1540, let747, [(- 1), 0]
have lean_s1542 : (Or let1198 (Or let962 let1194)) := by timed cnfAndNeg [let816, let734]
have lean_s1543 : let1197 :=
  (scope (fun lean_a593 : let816 =>
    (scope (fun lean_a594 : let734 =>
      have lean_s1543 : let246 := by timed Eq.symm lean_a594
      have lean_s1544 : let734 := by timed Eq.symm lean_s1543
      let lean_s1545 := by timed flipCongrArg lean_s1544 [Eq]
      have lean_s1546 : let1199 := by timed rfl
      have lean_s1547 : (Eq let979 let815) := by timed congr lean_s1545 lean_s1546
      have lean_s1548 : (Eq let815 False) := by timed falseIntro lean_a593
      have lean_s1549 : (Eq let979 False) := by timed Eq.trans lean_s1547 lean_s1548
      have lean_s1550 : let1193 := by timed falseElim lean_s1549
      show let1193 from lean_s1550
  ))))
have lean_s1544 : (Implies let1198 let1193) := by liftOrNToImp lean_s1543, 2
have lean_s1545 : (Or (Not let1198) let1193) := by timed impliesElim lean_s1544
have lean_s1546 : let1197 := by R1 lean_s1542, lean_s1545, let1198, [(- 1), (- 1)]
have lean_s1547 : let1054 := by timed rfl
have lean_s1548 : let961 := by timed rfl
let lean_s1549 := by timed flipCongrArg lean_s1548 [Eq]
have lean_s1550 : (Eq let966 let961) := by timed congr lean_s1549 lean_r385
have lean_s1551 : (Eq let966 True) := by timed Eq.trans lean_s1550 lean_r384
have lean_s1552 : (Eq let963 True) := by timed Eq.trans lean_r388 lean_s1551
have lean_s1553 : let963 := by timed trueElim lean_s1552
let lean_s1554 := by timed congr lean_s1547 lean_s1553
let lean_s1555 := by timed congr lean_s1547 lean_s17
have lean_s1556 : (Eq let1193 let1193) := by timed rfl
let lean_s1557 := by timed congr lean_s1555 lean_s1556
have lean_s1558 : (Eq let1197 let1196) := by timed congr lean_s1554 lean_s1557
have lean_s1559 : let1196 := by timed eqResolve lean_s1546 lean_s1558
have lean_s1560 : let816 := by andElim lean_s29, 39
let lean_s1561 := by R1 lean_s1559, lean_s1560, let815, [(- 1), 0]
have lean_s1562 : let1193 := by R2 lean_s1561, lean_s43, let734, [(- 1), 0]
let lean_s1563 := by R1 lean_s1541, lean_s1562, let979, [(- 1), 0]
have lean_s1564 : (Or let1720 (Or let84 let1664)) := by timed cnfAndNeg [let83, let56]
have lean_s1565 : let1719 :=
  (scope (fun lean_a594 : let83 =>
    (scope (fun lean_a595 : let56 =>
      have lean_s1565 : let1265 := by timed rfl
      let lean_s1566 := by timed flipCongrArg lean_s1565 [Eq]
      have lean_s1567 : let262 := by timed Eq.symm lean_a595
      have lean_s1568 : (Eq let148 let82) := by timed congr lean_s1566 lean_s1567
      have lean_s1569 : (Eq let82 False) := by timed falseIntro lean_a594
      have lean_s1570 : (Eq let148 False) := by timed Eq.trans lean_s1568 lean_s1569
      have lean_s1571 : let1203 := by timed falseElim lean_s1570
      show let1203 from lean_s1571
  ))))
have lean_s1566 : (Implies let1720 let1203) := by liftOrNToImp lean_s1565, 2
have lean_s1567 : (Or (Not let1720) let1203) := by timed impliesElim lean_s1566
have lean_s1568 : let1719 := by R1 lean_s1564, lean_s1567, let1720, [(- 1), (- 1)]
have lean_s1569 : let1054 := by timed rfl
have lean_s1570 : let86 := by timed rfl
let lean_s1571 := by timed flipCongrArg lean_s1570 [Eq]
have lean_s1572 : (Eq let293 let86) := by timed congr lean_s1571 lean_r27
have lean_s1573 : (Eq let293 True) := by timed Eq.trans lean_s1572 lean_r28
have lean_s1574 : (Eq let85 True) := by timed Eq.trans lean_r75 lean_s1573
have lean_s1575 : let85 := by timed trueElim lean_s1574
let lean_s1576 := by timed congr lean_s1569 lean_s1575
let lean_s1577 := by timed congr lean_s1569 lean_s732
have lean_s1578 : (Eq let1203 let1203) := by timed rfl
let lean_s1579 := by timed congr lean_s1577 lean_s1578
have lean_s1580 : (Eq let1719 let1718) := by timed congr lean_s1576 lean_s1579
have lean_s1581 : let1718 := by timed eqResolve lean_s1568 lean_s1580
let lean_s1582 := by R1 lean_s1563, lean_s1581, let148, [(- 1), (- 1)]
let lean_s1583 := by R1 lean_s1582, lean_s1511, let82, [(- 1), 0]
let lean_s1584 := by R1 lean_s1583, lean_s1500, let554, [(- 1), (- 1)]
let lean_s1585 := by R1 lean_s1584, lean_s1502, let3, [(- 1), 0]
let lean_s1586 := by R2 lean_s1585, lean_s1428, let141, [(- 1), (- 1)]
let lean_s1587 := by R1 lean_s1586, lean_s1540, let747, [(- 1), 0]
let lean_s1588 := by R1 lean_s1587, lean_s1405, let748, [(- 1), 0]
let lean_s1589 := by R1 lean_s1588, lean_s1465, let88, [(- 1), (- 1)]
let lean_s1590 := by R1 lean_s1589, lean_s1447, let97, [(- 1), (- 1)]
have lean_s1591 : (Or let1664 (Or let525 (Or let543 (Or let122 (Or let31 (Or let278 (Or let1664 (Or let1664 (Or let543 let1715))))))))) := by R1 lean_s1590, lean_s1449, let432, [(- 1), 0]
have lean_s1592 : (Or let1664 (Or let525 (Or let543 let1895))) := by factor lean_s1591, 10
let lean_s1593 := by R2 lean_s1592, lean_s1048, let87, [(- 1), (- 1)]
let lean_s1594 := by R1 lean_s1593, lean_s678, let857, [(- 1), (- 1)]
let lean_s1595 := by R2 lean_s1594, lean_s712, let727, [(- 1), 0]
let lean_s1596 := by R1 lean_s1595, lean_s710, let306, [(- 1), 0]
let lean_s1597 := by R1 lean_s1596, lean_s1061, let599, [(- 1), (- 1)]
let lean_s1598 := by R2 lean_s1597, lean_s45, let738, [(- 1), 0]
have lean_s1599 : (Or let1664 (Or let525 (Or let122 (Or let31 (Or let278 let1896))))) := by R1 lean_s1598, lean_s30, let321, [(- 1), 0]
have lean_s1600 : (Or let1664 (Or let525 let1895)) := by factor lean_s1599, 6
have lean_s1601 : (Or let122 (Or let278 (Or let31 (Or let525 let1664)))) := by permutateOr lean_s1600, [2, 4, 3, 1, 0], (- 1)
let lean_s1602 := by R2 lean_s714, lean_s1601, let278, [(- 1), (- 1)]
have lean_s1603 : (Eq let1020 let1563) := by timed flipCongrArg lean_r264 [Not]
have lean_s1604 : let1563 := by timed eqResolve lean_a488 lean_s1603
have lean_s1605 : (Or let1303 (Or let1301 let1363)) := by timed flipNotAnd lean_s1604 [let141, let717, let58]
have lean_s1606 : (Or let1363 (Or let1303 let1301)) := by permutateOr lean_s1605, [2, 0, 1], (- 1)
let lean_s1607 := by R1 lean_s1602, lean_s1606, let717, [(- 1), (- 1)]
have lean_s1608 : (Or let1534 (Or let722 let1363)) := by timed cnfAndNeg [let721, let58]
have lean_s1609 : let1533 :=
  (scope (fun lean_a595 : let721 =>
    (scope (fun lean_a596 : let58 =>
      have lean_s1609 : let1066 := by timed rfl
      let lean_s1610 := by timed flipCongrArg lean_s1609 [Eq]
      have lean_s1611 : let485 := by timed Eq.symm lean_a596
      have lean_s1612 : (Eq let122 let559) := by timed congr lean_s1610 lean_s1611
      have lean_s1613 : let1065 := by timed falseIntro lean_a595
      have lean_s1614 : (Eq let122 False) := by timed Eq.trans lean_s1612 lean_s1613
      have lean_s1615 : let1407 := by timed falseElim lean_s1614
      show let1407 from lean_s1615
  ))))
have lean_s1610 : (Implies let1534 let1407) := by liftOrNToImp lean_s1609, 2
have lean_s1611 : (Or (Not let1534) let1407) := by timed impliesElim lean_s1610
have lean_s1612 : let1533 := by R1 lean_s1608, lean_s1611, let1534, [(- 1), (- 1)]
have lean_s1613 : let1054 := by timed rfl
have lean_s1614 : let706 := by timed rfl
let lean_s1615 := by timed flipCongrArg lean_s1614 [Eq]
have lean_s1616 : (Eq let729 let706) := by timed congr lean_s1615 lean_r266
have lean_s1617 : (Eq let729 True) := by timed Eq.trans lean_s1616 lean_r258
have lean_s1618 : (Eq let723 True) := by timed Eq.trans lean_r272 lean_s1617
have lean_s1619 : let723 := by timed trueElim lean_s1618
let lean_s1620 := by timed congr lean_s1613 lean_s1619
have lean_s1621 : (Eq let1363 let1363) := by timed rfl
let lean_s1622 := by timed congr lean_s1613 lean_s1621
have lean_s1623 : (Eq let1407 let1407) := by timed rfl
let lean_s1624 := by timed congr lean_s1622 lean_s1623
have lean_s1625 : (Eq let1533 let1532) := by timed congr lean_s1620 lean_s1624
have lean_s1626 : let1532 := by timed eqResolve lean_s1612 lean_s1625
let lean_s1627 := by R1 lean_s1607, lean_s1626, let122, [(- 1), (- 1)]
have lean_s1628 : let721 := by andElim lean_s709, 1
have lean_s1629 : (Or let1303 (Or let98 (Or let31 (Or let525 (Or let1664 let1732))))) := by R1 lean_s1627, lean_s1628, let559, [(- 1), 0]
have lean_s1630 : (Or let1303 (Or let98 (Or let31 (Or let525 (Or let1664 let1363))))) := by factor lean_s1629, (- 1)
have lean_s1631 : let1103 := by andElim lean_s647, 41
have lean_s1632 : (Or let145 (Or let151 (Or let58 (Or let520 let525)))) := by permutateOr lean_s1631, [2, 3, 1, 0, 4], (- 1)
let lean_s1633 := by R2 lean_s1630, lean_s1632, let58, [(- 1), (- 1)]
have lean_s1634 : (Or let1539 (Or let953 let1156)) := by timed cnfAndNeg [let809, let975]
have lean_s1635 : let1538 :=
  (scope (fun lean_a597 : let809 =>
    (scope (fun lean_a598 : let975 =>
      have lean_s1635 : let160 := by timed Eq.symm lean_a598
      have lean_s1636 : let975 := by timed Eq.symm lean_s1635
      let lean_s1637 := by timed flipCongrArg lean_s1636 [Eq]
      have lean_s1638 : let1272 := by timed rfl
      have lean_s1639 : (Eq let520 let808) := by timed congr lean_s1637 lean_s1638
      have lean_s1640 : let1162 := by timed falseIntro lean_a597
      have lean_s1641 : (Eq let520 False) := by timed Eq.trans lean_s1639 lean_s1640
      have lean_s1642 : let1535 := by timed falseElim lean_s1641
      show let1535 from lean_s1642
  ))))
have lean_s1636 : (Implies let1539 let1535) := by liftOrNToImp lean_s1635, 2
have lean_s1637 : (Or (Not let1539) let1535) := by timed impliesElim lean_s1636
have lean_s1638 : let1538 := by R1 lean_s1634, lean_s1637, let1539, [(- 1), (- 1)]
have lean_s1639 : let1054 := by timed rfl
let lean_s1640 := by timed congr lean_s1639 lean_s864
let lean_s1641 := by timed congr lean_s1639 lean_s759
have lean_s1642 : (Eq let1535 let1535) := by timed rfl
let lean_s1643 := by timed congr lean_s1641 lean_s1642
have lean_s1644 : (Eq let1538 let1537) := by timed congr lean_s1640 lean_s1643
have lean_s1645 : let1537 := by timed eqResolve lean_s1638 lean_s1644
let lean_s1646 := by R1 lean_s1645, lean_s882, let808, [(- 1), 0]
have lean_s1647 : let1535 := by R2 lean_s1646, lean_s767, let975, [(- 1), 0]
let lean_s1648 := by R1 lean_s1633, lean_s1647, let520, [(- 1), 0]
have lean_s1649 : (Or let1421 (Or let340 let1417)) := by timed cnfAndNeg [let339, let145]
have lean_s1650 : let1420 :=
  (scope (fun lean_a597 : let339 =>
    (scope (fun lean_a598 : let145 =>
      have lean_s1650 : let1265 := by timed rfl
      let lean_s1651 := by timed flipCongrArg lean_s1650 [Eq]
      have lean_s1652 : let475 := by timed Eq.symm lean_a598
      have lean_s1653 : (Eq let141 let338) := by timed congr lean_s1651 lean_s1652
      have lean_s1654 : let1369 := by timed falseIntro lean_a597
      have lean_s1655 : (Eq let141 False) := by timed Eq.trans lean_s1653 lean_s1654
      have lean_s1656 : let1303 := by timed falseElim lean_s1655
      show let1303 from lean_s1656
  ))))
have lean_s1651 : (Implies let1421 let1303) := by liftOrNToImp lean_s1650, 2
have lean_s1652 : (Or (Not let1421) let1303) := by timed impliesElim lean_s1651
have lean_s1653 : let1420 := by R1 lean_s1649, lean_s1652, let1421, [(- 1), (- 1)]
have lean_s1654 : let1054 := by timed rfl
have lean_s1655 : let343 := by timed rfl
let lean_s1656 := by timed flipCongrArg lean_s1655 [Eq]
have lean_s1657 : (Eq let341 let343) := by timed congr lean_s1656 lean_r95
have lean_s1658 : (Eq let341 True) := by timed Eq.trans lean_s1657 lean_r96
have lean_s1659 : (Eq let342 True) := by timed Eq.trans lean_r94 lean_s1658
have lean_s1660 : let342 := by timed trueElim lean_s1659
let lean_s1661 := by timed congr lean_s1654 lean_s1660
have lean_s1662 : (Eq let1417 let1417) := by timed rfl
let lean_s1663 := by timed congr lean_s1654 lean_s1662
let lean_s1664 := by timed congr lean_s1663 lean_s15
have lean_s1665 : (Eq let1420 let1419) := by timed congr lean_s1661 lean_s1664
have lean_s1666 : let1419 := by timed eqResolve lean_s1653 lean_s1665
let lean_s1667 := by R1 lean_s1648, lean_s1666, let145, [(- 1), (- 1)]
have lean_s1668 : let339 := by andElim lean_s709, 2
have lean_s1669 : (Or let1303 (Or let98 (Or let31 (Or let525 (Or let1664 let1562))))) := by R1 lean_s1667, lean_s1668, let338, [(- 1), 0]
have lean_s1670 : (Or let1303 let1885) := by factor lean_s1669, 7
let lean_s1671 := by R2 lean_s1670, lean_s1428, let141, [(- 1), (- 1)]
let lean_s1672 := by R1 lean_s1671, lean_s1540, let747, [(- 1), 0]
let lean_s1673 := by R1 lean_s1672, lean_s1405, let748, [(- 1), 0]
have lean_s1674 : let1135 := by andElim lean_s647, 11
have lean_s1675 : (Or let510 (Or let138 (Or let280 (Or let630 let750)))) := by permutateOr lean_s1674, [3, 4, 2, 0, 1], (- 1)
have lean_s1676 : (Or let1657 (Or let116 let1156)) := by timed cnfAndNeg [let115, let975]
have lean_s1677 : let1656 :=
  (scope (fun lean_a599 : let115 =>
    (scope (fun lean_a600 : let975 =>
      have lean_s1677 : let160 := by timed Eq.symm lean_a600
      have lean_s1678 : let975 := by timed Eq.symm lean_s1677
      let lean_s1679 := by timed flipCongrArg lean_s1678 [Eq]
      have lean_s1680 : (Eq let113 let113) := by timed rfl
      have lean_s1681 : (Eq let630 let114) := by timed congr lean_s1679 lean_s1680
      have lean_s1682 : (Eq let114 False) := by timed falseIntro lean_a599
      have lean_s1683 : (Eq let630 False) := by timed Eq.trans lean_s1681 lean_s1682
      have lean_s1684 : let1653 := by timed falseElim lean_s1683
      show let1653 from lean_s1684
  ))))
have lean_s1678 : (Implies let1657 let1653) := by liftOrNToImp lean_s1677, 2
have lean_s1679 : (Or (Not let1657) let1653) := by timed impliesElim lean_s1678
have lean_s1680 : let1656 := by R1 lean_s1676, lean_s1679, let1657, [(- 1), (- 1)]
have lean_s1681 : let1054 := by timed rfl
have lean_s1682 : let119 := by timed rfl
let lean_s1683 := by timed flipCongrArg lean_s1682 [Eq]
have lean_s1684 : (Eq let117 let119) := by timed congr lean_s1683 lean_r37
have lean_s1685 : (Eq let117 True) := by timed Eq.trans lean_s1684 lean_r38
have lean_s1686 : (Eq let118 True) := by timed Eq.trans lean_r36 lean_s1685
have lean_s1687 : let118 := by timed trueElim lean_s1686
let lean_s1688 := by timed congr lean_s1681 lean_s1687
let lean_s1689 := by timed congr lean_s1681 lean_s759
have lean_s1690 : (Eq let1653 let1653) := by timed rfl
let lean_s1691 := by timed congr lean_s1689 lean_s1690
have lean_s1692 : (Eq let1656 let1655) := by timed congr lean_s1688 lean_s1691
have lean_s1693 : let1655 := by timed eqResolve lean_s1680 lean_s1692
have lean_s1694 : let115 := by andElim lean_s29, 50
let lean_s1695 := by R1 lean_s1693, lean_s1694, let114, [(- 1), 0]
have lean_s1696 : let1653 := by R2 lean_s1695, lean_s767, let975, [(- 1), 0]
let lean_s1697 := by R1 lean_s1675, lean_s1696, let630, [(- 1), 0]
have lean_s1698 : (Or let1643 (Or let953 (Or let1156 (Or let1259 let1574)))) := by timed cnfAndNeg [let809, let975, let97, let734, let278]
have lean_s1699 : let1642 :=
  (scope (fun lean_a600 : let809 =>
    (scope (fun lean_a601 : let975 =>
      (scope (fun lean_a602 : let97 =>
        (scope (fun lean_a603 : let734 =>
          (scope (fun lean_a604 : let278 =>
            have lean_s1699 : let160 := by timed Eq.symm lean_a601
            have lean_s1700 : let975 := by timed Eq.symm lean_s1699
            let lean_s1701 := by timed flipCongrArg lean_s1700 [Eq]
            have lean_s1702 : let246 := by timed Eq.symm lean_a603
            have lean_s1703 : let171 := by timed Eq.symm lean_a602
            have lean_s1704 : let97 := by timed Eq.symm lean_s1703
            have lean_s1705 : let1644 := by timed Eq.trans lean_s1702 lean_s1704
            have lean_s1706 : (Eq let36 let9) := by timed Eq.symm lean_s1705
            have lean_s1707 : let465 := by timed Eq.symm lean_a604
            have lean_s1708 : let1573 := by timed Eq.trans lean_s1707 lean_a603
            have lean_s1709 : let1572 := by timed Eq.symm lean_s1708
            have lean_s1710 : let1332 := by timed Eq.trans lean_s1706 lean_s1709
            have lean_s1711 : let1331 := by timed Eq.symm lean_s1710
            have lean_s1712 : let1330 := by timed congr lean_s1701 lean_s1711
            have lean_s1713 : let1162 := by timed falseIntro lean_a600
            have lean_s1714 : let1329 := by timed Eq.trans lean_s1712 lean_s1713
            have lean_s1715 : let1221 := by timed falseElim lean_s1714
            show let1221 from lean_s1715
  ))))))))))
have lean_s1700 : (Implies let1643 let1221) := by liftOrNToImp lean_s1699, 5
have lean_s1701 : (Or (Not let1643) let1221) := by timed impliesElim lean_s1700
have lean_s1702 : let1642 := by R1 lean_s1698, lean_s1701, let1643, [(- 1), (- 1)]
have lean_s1703 : let1054 := by timed rfl
let lean_s1704 := by timed congr lean_s1703 lean_s864
let lean_s1705 := by timed congr lean_s1703 lean_s759
let lean_s1706 := by timed congr lean_s1703 lean_s1444
let lean_s1707 := by timed congr lean_s1703 lean_s17
let lean_s1708 := by timed congr lean_s1703 lean_s19
have lean_s1709 : (Eq let1221 let1221) := by timed rfl
let lean_s1710 := by timed congr lean_s1708 lean_s1709
let lean_s1711 := by timed congr lean_s1707 lean_s1710
let lean_s1712 := by timed congr lean_s1706 lean_s1711
let lean_s1713 := by timed congr lean_s1705 lean_s1712
have lean_s1714 : (Eq let1642 let1641) := by timed congr lean_s1704 lean_s1713
have lean_s1715 : let1641 := by timed eqResolve lean_s1702 lean_s1714
have lean_s1716 : (Or let808 (Or let1156 (Or let1194 (Or let1259 (Or let1221 let1190))))) := by permutateOr lean_s1715, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s1717 := by R1 lean_s1697, lean_s1716, let138, [(- 1), (- 1)]
let lean_s1718 := by R1 lean_s1717, lean_s882, let808, [(- 1), 0]
let lean_s1719 := by R2 lean_s1718, lean_s43, let734, [(- 1), 0]
let lean_s1720 := by R2 lean_s1719, lean_s767, let975, [(- 1), 0]
have lean_s1721 : (Or let1894 (Or let976 (Or let1156 (Or let1301 (Or let1155 let1456))))) := by timed cnfAndNeg [let854, let975, let717, let738, let266]
have lean_s1722 : let1893 :=
  (scope (fun lean_a601 : let854 =>
    (scope (fun lean_a602 : let975 =>
      (scope (fun lean_a603 : let717 =>
        (scope (fun lean_a604 : let738 =>
          (scope (fun lean_a605 : let266 =>
            have lean_s1722 : let160 := by timed Eq.symm lean_a602
            have lean_s1723 : let975 := by timed Eq.symm lean_s1722
            let lean_s1724 := by timed flipCongrArg lean_s1723 [Eq]
            have lean_s1725 : let210 := by timed Eq.symm lean_a604
            have lean_s1726 : let254 := by timed Eq.symm lean_a603
            have lean_s1727 : let717 := by timed Eq.symm lean_s1726
            have lean_s1728 : let1445 := by timed Eq.trans lean_s1725 lean_s1727
            have lean_s1729 : (Eq let61 let207) := by timed Eq.symm lean_s1728
            have lean_s1730 : let232 := by timed Eq.symm lean_a605
            have lean_s1731 : (Eq let229 let207) := by timed Eq.trans lean_s1730 lean_a604
            have lean_s1732 : (Eq let207 let229) := by timed Eq.symm lean_s1731
            have lean_s1733 : (Eq let61 let229) := by timed Eq.trans lean_s1729 lean_s1732
            have lean_s1734 : (Eq let229 let61) := by timed Eq.symm lean_s1733
            have lean_s1735 : (Eq let510 let853) := by timed congr lean_s1724 lean_s1734
            have lean_s1736 : let1220 := by timed falseIntro lean_a601
            have lean_s1737 : (Eq let510 False) := by timed Eq.trans lean_s1735 lean_s1736
            have lean_s1738 : let1659 := by timed falseElim lean_s1737
            show let1659 from lean_s1738
  ))))))))))
have lean_s1723 : (Implies let1894 let1659) := by liftOrNToImp lean_s1722, 5
have lean_s1724 : (Or (Not let1894) let1659) := by timed impliesElim lean_s1723
have lean_s1725 : let1893 := by R1 lean_s1721, lean_s1724, let1894, [(- 1), (- 1)]
have lean_s1726 : let1054 := by timed rfl
let lean_s1727 := by timed congr lean_s1726 lean_s757
let lean_s1728 := by timed congr lean_s1726 lean_s759
let lean_s1729 := by timed congr lean_s1726 lean_s1418
let lean_s1730 := by timed congr lean_s1726 lean_s13
have lean_s1731 : (Eq let1456 let1456) := by timed rfl
let lean_s1732 := by timed congr lean_s1726 lean_s1731
have lean_s1733 : (Eq let1659 let1659) := by timed rfl
let lean_s1734 := by timed congr lean_s1732 lean_s1733
let lean_s1735 := by timed congr lean_s1730 lean_s1734
let lean_s1736 := by timed congr lean_s1729 lean_s1735
let lean_s1737 := by timed congr lean_s1728 lean_s1736
have lean_s1738 : (Eq let1893 let1892) := by timed congr lean_s1727 lean_s1737
have lean_s1739 : let1892 := by timed eqResolve lean_s1725 lean_s1738
have lean_s1740 : (Or let853 (Or let1156 (Or let1155 (Or let1659 (Or let1456 let1301))))) := by permutateOr lean_s1739, [0, 1, 3, 5, 4, 2], (- 1)
let lean_s1741 := by R1 lean_s1720, lean_s1740, let510, [(- 1), (- 1)]
let lean_s1742 := by R1 lean_s1741, lean_s765, let853, [(- 1), 0]
let lean_s1743 := by R2 lean_s1742, lean_s45, let738, [(- 1), 0]
let lean_s1744 := by R2 lean_s1743, lean_s767, let975, [(- 1), 0]
let lean_s1745 := by R2 lean_s1744, lean_s1428, let97, [(- 1), (- 1)]
let lean_s1746 := by R1 lean_s1745, lean_s1405, let748, [(- 1), 0]
have lean_s1747 : let1112 := by andElim lean_s647, 34
have lean_s1748 : (Or let266 (Or let31 (Or let109 (Or let439 let505)))) := by permutateOr lean_s1747, [1, 4, 0, 2, 3], (- 1)
let lean_s1749 := by R2 lean_s1746, lean_s1748, let266, [(- 1), (- 1)]
have lean_s1750 : (Or let1455 (Or let299 let1155)) := by timed cnfAndNeg [let298, let738]
have lean_s1751 : let1454 :=
  (scope (fun lean_a603 : let298 =>
    (scope (fun lean_a604 : let738 =>
      have lean_s1751 : let210 := by timed Eq.symm lean_a604
      have lean_s1752 : let738 := by timed Eq.symm lean_s1751
      let lean_s1753 := by timed flipCongrArg lean_s1752 [Eq]
      have lean_s1754 : (Eq let237 let237) := by timed rfl
      have lean_s1755 : (Eq let439 let297) := by timed congr lean_s1753 lean_s1754
      have lean_s1756 : (Eq let297 False) := by timed falseIntro lean_a603
      have lean_s1757 : (Eq let439 False) := by timed Eq.trans lean_s1755 lean_s1756
      have lean_s1758 : let1451 := by timed falseElim lean_s1757
      show let1451 from lean_s1758
  ))))
have lean_s1752 : (Implies let1455 let1451) := by liftOrNToImp lean_s1751, 2
have lean_s1753 : (Or (Not let1455) let1451) := by timed impliesElim lean_s1752
have lean_s1754 : let1454 := by R1 lean_s1750, lean_s1753, let1455, [(- 1), (- 1)]
have lean_s1755 : let1054 := by timed rfl
have lean_s1756 : let914 := by timed rfl
let lean_s1757 := by timed flipCongrArg lean_s1756 [Eq]
have lean_s1758 : (Eq let568 let914) := by timed congr lean_s1757 lean_r78
have lean_s1759 : (Eq let568 True) := by timed Eq.trans lean_s1758 lean_r349
have lean_s1760 : (Eq let300 True) := by timed Eq.trans lean_r200 lean_s1759
have lean_s1761 : let300 := by timed trueElim lean_s1760
let lean_s1762 := by timed congr lean_s1755 lean_s1761
let lean_s1763 := by timed congr lean_s1755 lean_s13
have lean_s1764 : (Eq let1451 let1451) := by timed rfl
let lean_s1765 := by timed congr lean_s1763 lean_s1764
have lean_s1766 : (Eq let1454 let1453) := by timed congr lean_s1762 lean_s1765
have lean_s1767 : let1453 := by timed eqResolve lean_s1754 lean_s1766
have lean_s1768 : let298 := by andElim lean_s29, 27
let lean_s1769 := by R1 lean_s1767, lean_s1768, let297, [(- 1), 0]
have lean_s1770 : let1451 := by R2 lean_s1769, lean_s45, let738, [(- 1), 0]
let lean_s1771 := by R1 lean_s1749, lean_s1770, let439, [(- 1), 0]
let lean_s1772 := by R1 lean_s1771, lean_s1666, let141, [(- 1), (- 1)]
let lean_s1773 := by R1 lean_s1772, lean_s1668, let338, [(- 1), 0]
have lean_s1774 : (Or let1413 (Or let434 let1407)) := by timed cnfAndNeg [let433, let122]
have lean_s1775 : let1412 :=
  (scope (fun lean_a604 : let433 =>
    (scope (fun lean_a605 : let122 =>
      have lean_s1775 : let1265 := by timed rfl
      let lean_s1776 := by timed flipCongrArg lean_s1775 [Eq]
      have lean_s1777 : let483 := by timed Eq.symm lean_a605
      have lean_s1778 : (Eq let88 let432) := by timed congr lean_s1776 lean_s1777
      have lean_s1779 : let1264 := by timed falseIntro lean_a604
      have lean_s1780 : let1368 := by timed Eq.trans lean_s1778 lean_s1779
      have lean_s1781 : let1321 := by timed falseElim lean_s1780
      show let1321 from lean_s1781
  ))))
have lean_s1776 : (Implies let1413 let1321) := by liftOrNToImp lean_s1775, 2
have lean_s1777 : (Or (Not let1413) let1321) := by timed impliesElim lean_s1776
have lean_s1778 : let1412 := by R1 lean_s1774, lean_s1777, let1413, [(- 1), (- 1)]
have lean_s1779 : let1054 := by timed rfl
let lean_s1780 := by timed congr lean_s1779 lean_s1441
let lean_s1781 := by timed congr lean_s1779 lean_s1623
have lean_s1782 : (Eq let1321 let1321) := by timed rfl
let lean_s1783 := by timed congr lean_s1781 lean_s1782
have lean_s1784 : (Eq let1412 let1411) := by timed congr lean_s1780 lean_s1783
have lean_s1785 : let1411 := by timed eqResolve lean_s1778 lean_s1784
let lean_s1786 := by R1 lean_s1773, lean_s1785, let88, [(- 1), (- 1)]
let lean_s1787 := by R1 lean_s1786, lean_s1449, let432, [(- 1), 0]
have lean_s1788 : (Or let1890 (Or let616 let1407)) := by timed cnfAndNeg [let615, let122]
have lean_s1789 : let1889 :=
  (scope (fun lean_a605 : let615 =>
    (scope (fun lean_a606 : let122 =>
      have lean_s1789 : let483 := by timed Eq.symm lean_a606
      have lean_s1790 : let122 := by timed Eq.symm lean_s1789
      let lean_s1791 := by timed flipCongrArg lean_s1790 [Eq]
      have lean_s1792 : let1320 := by timed rfl
      have lean_s1793 : (Eq let31 let614) := by timed congr lean_s1791 lean_s1792
      have lean_s1794 : (Eq let614 False) := by timed falseIntro lean_a605
      have lean_s1795 : let1064 := by timed Eq.trans lean_s1793 lean_s1794
      have lean_s1796 : let1059 := by timed falseElim lean_s1795
      show let1059 from lean_s1796
  ))))
have lean_s1790 : (Implies let1890 let1059) := by liftOrNToImp lean_s1789, 2
have lean_s1791 : (Or (Not let1890) let1059) := by timed impliesElim lean_s1790
have lean_s1792 : let1889 := by R1 lean_s1788, lean_s1791, let1890, [(- 1), (- 1)]
have lean_s1793 : let1054 := by timed rfl
have lean_s1794 : let978 := by timed rfl
let lean_s1795 := by timed flipCongrArg lean_s1794 [Eq]
have lean_s1796 : (Eq let617 let978) := by timed congr lean_s1795 lean_r295
have lean_s1797 : (Eq let617 True) := by timed Eq.trans lean_s1796 lean_r398
have lean_s1798 : (Eq let618 True) := by timed Eq.trans lean_r220 lean_s1797
have lean_s1799 : let618 := by timed trueElim lean_s1798
let lean_s1800 := by timed congr lean_s1793 lean_s1799
let lean_s1801 := by timed congr lean_s1793 lean_s1623
have lean_s1802 : (Eq let1059 let1059) := by timed rfl
let lean_s1803 := by timed congr lean_s1801 lean_s1802
have lean_s1804 : (Eq let1889 let1888) := by timed congr lean_s1800 lean_s1803
have lean_s1805 : let1888 := by timed eqResolve lean_s1792 lean_s1804
let lean_s1806 := by R1 lean_s1787, lean_s1805, let31, [(- 1), (- 1)]
have lean_s1807 : let615 := by andElim lean_s29, 45
let lean_s1808 := by R1 lean_s1806, lean_s1807, let614, [(- 1), 0]
have lean_s1809 : (Or let1632 (Or let409 let1465)) := by timed cnfAndNeg [let408, let280]
have lean_s1810 : let1631 :=
  (scope (fun lean_a606 : let408 =>
    (scope (fun lean_a607 : let280 =>
      have lean_s1810 : let479 := by timed Eq.symm lean_a607
      have lean_s1811 : let280 := by timed Eq.symm lean_s1810
      let lean_s1812 := by timed flipCongrArg lean_s1811 [Eq]
      have lean_s1813 : let1406 := by timed rfl
      have lean_s1814 : (Eq let145 let407) := by timed congr lean_s1812 lean_s1813
      have lean_s1815 : (Eq let407 False) := by timed falseIntro lean_a606
      have lean_s1816 : (Eq let145 False) := by timed Eq.trans lean_s1814 lean_s1815
      have lean_s1817 : let1417 := by timed falseElim lean_s1816
      show let1417 from lean_s1817
  ))))
have lean_s1811 : (Implies let1632 let1417) := by liftOrNToImp lean_s1810, 2
have lean_s1812 : (Or (Not let1632) let1417) := by timed impliesElim lean_s1811
have lean_s1813 : let1631 := by R1 lean_s1809, lean_s1812, let1632, [(- 1), (- 1)]
have lean_s1814 : let1054 := by timed rfl
have lean_s1815 : let901 := by timed rfl
let lean_s1816 := by timed flipCongrArg lean_s1815 [Eq]
have lean_s1817 : (Eq let410 let901) := by timed congr lean_s1816 lean_r222
have lean_s1818 : (Eq let410 True) := by timed Eq.trans lean_s1817 lean_r340
have lean_s1819 : (Eq let411 True) := by timed Eq.trans lean_r123 lean_s1818
have lean_s1820 : let411 := by timed trueElim lean_s1819
let lean_s1821 := by timed congr lean_s1814 lean_s1820
have lean_s1822 : (Eq let1465 let1465) := by timed rfl
let lean_s1823 := by timed congr lean_s1814 lean_s1822
let lean_s1824 := by timed congr lean_s1823 lean_s1662
have lean_s1825 : (Eq let1631 let1630) := by timed congr lean_s1821 lean_s1824
have lean_s1826 : let1630 := by timed eqResolve lean_s1813 lean_s1825
let lean_s1827 := by R1 lean_s1808, lean_s1826, let280, [(- 1), (- 1)]
have lean_s1828 : let408 := by andElim lean_s29, 76
have lean_s1829 : (Or let750 (Or let1190 (Or let1301 (Or let747 (Or let109 (Or let505 (Or let1417 (Or let1407 (Or let1407 let1417))))))))) := by R1 lean_s1827, lean_s1828, let407, [(- 1), 0]
have lean_s1830 : (Or let750 (Or let1190 (Or let1301 (Or let747 (Or let109 (Or let505 (Or let1417 let1407))))))) := by factor lean_s1829, 9
let lean_s1831 := by R2 lean_s1830, lean_s1632, let145, [(- 1), (- 1)]
let lean_s1832 := by R1 lean_s1831, lean_s1647, let520, [(- 1), 0]
let lean_s1833 := by R1 lean_s1832, lean_s1626, let58, [(- 1), (- 1)]
let lean_s1834 := by R1 lean_s1833, lean_s1628, let559, [(- 1), 0]
have lean_s1835 : (Or let1426 (Or let1301 let1424)) := by timed cnfAndNeg [let717, let109]
have lean_s1836 : let1425 :=
  (scope (fun lean_a608 : let717 =>
    (scope (fun lean_a609 : let109 =>
      have lean_s1836 : let224 := by timed Eq.symm lean_a609
      have lean_s1837 : let254 := by timed Eq.symm lean_a608
      have lean_s1838 : let717 := by timed Eq.symm lean_s1837
      have lean_s1839 : let846 := by timed Eq.trans lean_s1836 lean_s1838
      show let846 from lean_s1839
  ))))
have lean_s1837 : (Implies let1426 let846) := by liftOrNToImp lean_s1836, 2
have lean_s1838 : (Or (Not let1426) let846) := by timed impliesElim lean_s1837
have lean_s1839 : let1425 := by R1 lean_s1835, lean_s1838, let1426, [(- 1), (- 1)]
have lean_s1840 : (Or let846 (Or let1424 let1301)) := by permutateOr lean_s1839, [2, 1, 0], (- 1)
let lean_s1841 := by R1 lean_s1834, lean_s1840, let109, [(- 1), (- 1)]
have lean_s1842 : let847 := by andElim lean_s29, 9
have lean_s1843 : (Or let750 (Or let1190 (Or let1301 (Or let747 (Or let505 (Or let1407 (Or let151 (Or let525 (Or let1407 let1301))))))))) := by R1 lean_s1841, lean_s1842, let846, [(- 1), 0]
have lean_s1844 : (Or let750 (Or let1190 (Or let1301 (Or let747 (Or let505 (Or let1407 let1102)))))) := by factor lean_s1843, 9
have lean_s1845 : (Or let151 (Or let750 (Or let505 (Or let525 (Or let747 (Or let1407 (Or let1301 let1190))))))) := by permutateOr lean_s1844, [6, 0, 4, 7, 3, 5, 2, 1], (- 1)
let lean_s1846 := by R1 lean_s1845, lean_s1540, let747, [(- 1), 0]
let lean_s1847 := by R2 lean_s1846, lean_s649, let717, [(- 1), (- 1)]
let lean_s1848 := by R1 lean_s1847, lean_s671, let703, [(- 1), 0]
let lean_s1849 := by R1 lean_s1848, lean_s713, let857, [(- 1), 0]
let lean_s1850 := by R2 lean_s1849, lean_s1537, let278, [(- 1), (- 1)]
let lean_s1851 := by R1 lean_s1850, lean_s1540, let747, [(- 1), 0]
let lean_s1852 := by R1 lean_s1851, lean_s1562, let979, [(- 1), 0]
have lean_s1853 : (Eq let1030 let1542) := by timed flipCongrArg lean_r249 [Not]
have lean_s1854 : let1542 := by timed eqResolve lean_a532 lean_s1853
have lean_s1855 : (Or let1417 (Or let1323 let400)) := by timed flipNotAnd lean_s1854 [let145, let314, let120]
have lean_s1856 : (Or let1417 (Or let400 let1323)) := by permutateOr lean_s1855, [0, 2, 1], (- 1)
let lean_s1857 := by R1 lean_s1852, lean_s1856, let314, [(- 1), (- 1)]
have lean_s1858 : (Eq let1025 let1550) := by timed flipCongrArg lean_r47 [Not]
have lean_s1859 : let1550 := by timed eqResolve lean_a510 lean_s1858
have lean_s1860 : (Or let400 (Or let1149 let1417)) := by timed flipNotAnd lean_s1859 [let120, let62, let145]
have lean_s1861 : (Or let1417 let1549) := by permutateOr lean_s1860, [2, 0, 1], (- 1)
have lean_s1862 : (Or let151 (Or let750 (Or let505 (Or let525 (Or let1407 (Or let98 (Or let148 (Or let1417 (Or let400 let1540))))))))) := by R1 lean_s1857, lean_s1861, let62, [(- 1), (- 1)]
have lean_s1863 : (Or let151 (Or let750 (Or let505 (Or let525 (Or let1407 (Or let98 let1725)))))) := by factor lean_s1862, (- 1)
let lean_s1864 := by R2 lean_s1863, lean_s1632, let145, [(- 1), (- 1)]
let lean_s1865 := by R1 lean_s1864, lean_s1647, let520, [(- 1), 0]
let lean_s1866 := by R1 lean_s1865, lean_s1626, let58, [(- 1), (- 1)]
have lean_s1867 : (Or let151 (Or let750 (Or let505 (Or let525 (Or let1407 (Or let98 (Or let148 (Or let400 let1627)))))))) := by R1 lean_s1866, lean_s1628, let559, [(- 1), 0]
have lean_s1868 : (Or let151 (Or let750 (Or let505 (Or let525 (Or let1407 (Or let98 (Or let148 let400))))))) := by factor lean_s1867, 10
let lean_s1869 := by R2 lean_s1868, lean_s1048, let122, [(- 1), (- 1)]
let lean_s1870 := by R1 lean_s1869, lean_s1063, let599, [(- 1), 0]
let lean_s1871 := by R1 lean_s1870, lean_s713, let857, [(- 1), 0]
have lean_s1872 : (Or let1651 (Or let544 let1652)) := by timed cnfAndNeg [let543, let97, let734]
have lean_s1873 : let1649 :=
  (scope (fun lean_a609 : let543 =>
    (scope (fun lean_a610 : let97 =>
      (scope (fun lean_a611 : let734 =>
        have lean_s1873 : let1066 := by timed rfl
        let lean_s1874 := by timed flipCongrArg lean_s1873 [Eq]
        have lean_s1875 : let246 := by timed Eq.symm lean_a611
        have lean_s1876 : let171 := by timed Eq.symm lean_a610
        have lean_s1877 : let97 := by timed Eq.symm lean_s1876
        have lean_s1878 : let1644 := by timed Eq.trans lean_s1875 lean_s1877
        have lean_s1879 : (Eq let505 let87) := by timed congr lean_s1874 lean_s1878
        have lean_s1880 : let1271 := by timed falseIntro lean_a609
        have lean_s1881 : let1280 := by timed Eq.trans lean_s1879 lean_s1880
        have lean_s1882 : let1273 := by timed falseElim lean_s1881
        show let1273 from lean_s1882
  ))))))
have lean_s1874 : (Implies let1651 let1273) := by liftOrNToImp lean_s1873, 3
have lean_s1875 : (Or (Not let1651) let1273) := by timed impliesElim lean_s1874
have lean_s1876 : let1649 := by R1 lean_s1872, lean_s1875, let1651, [(- 1), (- 1)]
have lean_s1877 : let1054 := by timed rfl
have lean_s1878 : let641 := by timed rfl
let lean_s1879 := by timed flipCongrArg lean_s1878 [Eq]
have lean_s1880 : (Eq let858 let641) := by timed congr lean_s1879 lean_r180
have lean_s1881 : (Eq let858 True) := by timed Eq.trans lean_s1880 lean_r242
have lean_s1882 : (Eq let545 True) := by timed Eq.trans lean_r301 lean_s1881
have lean_s1883 : let545 := by timed trueElim lean_s1882
let lean_s1884 := by timed congr lean_s1877 lean_s1883
let lean_s1885 := by timed congr lean_s1877 lean_s1444
let lean_s1886 := by timed congr lean_s1877 lean_s17
have lean_s1887 : (Eq let1273 let1273) := by timed rfl
let lean_s1888 := by timed congr lean_s1886 lean_s1887
let lean_s1889 := by timed congr lean_s1885 lean_s1888
have lean_s1890 : (Eq let1649 let1648) := by timed congr lean_s1884 lean_s1889
have lean_s1891 : let1648 := by timed eqResolve lean_s1876 lean_s1890
have lean_s1892 : (Or let87 (Or let1194 (Or let1259 let1273))) := by permutateOr lean_s1891, [0, 2, 1, 3], (- 1)
let lean_s1893 := by R1 lean_s1871, lean_s1892, let505, [(- 1), (- 1)]
have lean_s1894 : (Or let151 (Or let750 (Or let525 (Or let98 (Or let148 (Or let400 (Or let31 (Or let87 let1645)))))))) := by R2 lean_s1893, lean_s43, let734, [(- 1), 0]
have lean_s1895 : (Or let151 (Or let750 (Or let525 (Or let98 (Or let148 (Or let400 (Or let31 let1645))))))) := by factor lean_s1894, (- 1)
let lean_s1896 := by R1 lean_s1895, lean_s1447, let87, [(- 1), (- 1)]
let lean_s1897 := by R1 lean_s1896, lean_s1449, let432, [(- 1), 0]
let lean_s1898 := by R1 lean_s1897, lean_s1581, let148, [(- 1), (- 1)]
let lean_s1899 := by R1 lean_s1898, lean_s1511, let82, [(- 1), 0]
have lean_s1900 : (Or let1663 (Or let722 let1659)) := by timed cnfAndNeg [let721, let510]
have lean_s1901 : let1662 :=
  (scope (fun lean_a610 : let721 =>
    (scope (fun lean_a611 : let510 =>
      have lean_s1901 : let1066 := by timed rfl
      let lean_s1902 := by timed flipCongrArg lean_s1901 [Eq]
      have lean_s1903 : let234 := by timed Eq.symm lean_a611
      have lean_s1904 : (Eq let266 let559) := by timed congr lean_s1902 lean_s1903
      have lean_s1905 : let1065 := by timed falseIntro lean_a610
      have lean_s1906 : (Eq let266 False) := by timed Eq.trans lean_s1904 lean_s1905
      have lean_s1907 : let1456 := by timed falseElim lean_s1906
      show let1456 from lean_s1907
  ))))
have lean_s1902 : (Implies let1663 let1456) := by liftOrNToImp lean_s1901, 2
have lean_s1903 : (Or (Not let1663) let1456) := by timed impliesElim lean_s1902
have lean_s1904 : let1662 := by R1 lean_s1900, lean_s1903, let1663, [(- 1), (- 1)]
have lean_s1905 : let1054 := by timed rfl
let lean_s1906 := by timed congr lean_s1905 lean_s1619
let lean_s1907 := by timed congr lean_s1905 lean_s1733
let lean_s1908 := by timed congr lean_s1907 lean_s1731
have lean_s1909 : (Eq let1662 let1661) := by timed congr lean_s1906 lean_s1908
have lean_s1910 : let1661 := by timed eqResolve lean_s1904 lean_s1909
let lean_s1911 := by R1 lean_s1910, lean_s1628, let559, [(- 1), 0]
let lean_s1912 := by R2 lean_s1911, lean_s1748, let266, [(- 1), (- 1)]
let lean_s1913 := by R1 lean_s1912, lean_s1770, let439, [(- 1), 0]
have lean_s1914 : (Eq let1037 let1658) := by timed flipCongrArg lean_r35 [Not]
have lean_s1915 : let1658 := by timed eqResolve lean_a558 lean_s1914
have lean_s1916 : (Or let1606 (Or let1424 let1153)) := by timed flipNotAnd lean_s1915 [let110, let109, let108]
let lean_s1917 := by R1 lean_s1913, lean_s1916, let109, [(- 1), (- 1)]
let lean_s1918 := by R2 lean_s1917, lean_s744, let108, [(- 1), (- 1)]
let lean_s1919 := by R1 lean_s1918, lean_s768, let516, [(- 1), 0]
let lean_s1920 := by R2 lean_s1919, lean_s1675, let510, [(- 1), (- 1)]
let lean_s1921 := by R1 lean_s1920, lean_s1696, let630, [(- 1), 0]
let lean_s1922 := by R1 lean_s1921, lean_s1892, let505, [(- 1), (- 1)]
have lean_s1923 : (Or let31 (Or let1606 (Or let123 (Or let138 (Or let525 (Or let138 let1646)))))) := by R2 lean_s1922, lean_s43, let734, [(- 1), 0]
have lean_s1924 : (Or let31 (Or let1606 (Or let123 (Or let138 (Or let525 let1646))))) := by factor lean_s1923, (- 1)
let lean_s1925 := by R2 lean_s981, lean_s986, let988, [(- 1), 0]
have lean_s1926 : (Or let1207 (Or let1046 let1203)) := by timed cnfAndNeg [let98, let148]
have lean_s1927 : let1206 :=
  (scope (fun lean_a611 : let98 =>
    (scope (fun lean_a612 : let148 =>
      have lean_s1927 : let260 := by timed Eq.symm lean_a612
      have lean_s1928 : let148 := by timed Eq.symm lean_s1927
      have lean_s1929 : let1208 := by timed rfl
      let lean_s1930 := by timed flipCongrArg lean_s1929 [op]
      have lean_s1931 : let363 := by timed Eq.symm lean_a611
      have lean_s1932 : let98 := by timed Eq.symm lean_s1931
      have lean_s1933 : (Eq let2 let350) := by timed congr lean_s1930 lean_s1932
      have lean_s1934 : let351 := by timed Eq.trans lean_s1928 lean_s1933
      show let351 from lean_s1934
  ))))
have lean_s1928 : (Implies let1207 let351) := by liftOrNToImp lean_s1927, 2
have lean_s1929 : (Or (Not let1207) let351) := by timed impliesElim lean_s1928
have lean_s1930 : let1206 := by R1 lean_s1926, lean_s1929, let1207, [(- 1), (- 1)]
have lean_s1931 : (Or let351 let1204) := by permutateOr lean_s1930, [2, 1, 0], (- 1)
let lean_s1932 := by R2 lean_s1925, lean_s1931, let351, [(- 1), (- 1)]
have lean_s1933 : (Or let1210 let1204) := by timed cnfAndNeg [let148, let98]
have lean_s1934 : let1209 :=
  (scope (fun lean_a612 : let148 =>
    (scope (fun lean_a613 : let98 =>
      have lean_s1934 : let363 := by timed Eq.symm lean_a613
      have lean_s1935 : let98 := by timed Eq.symm lean_s1934
      have lean_s1936 : let1208 := by timed rfl
      let lean_s1937 := by timed flipCongrArg lean_s1936 [op]
      have lean_s1938 : let260 := by timed Eq.symm lean_a612
      have lean_s1939 : let148 := by timed Eq.symm lean_s1938
      have lean_s1940 : (Eq let91 let584) := by timed congr lean_s1937 lean_s1939
      have lean_s1941 : let704 := by timed Eq.trans lean_s1935 lean_s1940
      show let704 from lean_s1941
  ))))
have lean_s1935 : (Implies let1210 let704) := by liftOrNToImp lean_s1934, 2
have lean_s1936 : (Or (Not let1210) let704) := by timed impliesElim lean_s1935
have lean_s1937 : let1209 := by R1 lean_s1933, lean_s1936, let1210, [(- 1), (- 1)]
have lean_s1938 : (Or let704 let1204) := by permutateOr lean_s1937, [2, 0, 1], (- 1)
have lean_s1939 : (Or let1231 (Or let1230 let1205)) := by R2 lean_s1932, lean_s1938, let704, [(- 1), (- 1)]
have lean_s1940 : (Or let1231 (Or let1230 let1204)) := by factor lean_s1939, (- 1)
let lean_s1941 := by R2 lean_s1940, lean_s1537, let148, [(- 1), (- 1)]
let lean_s1942 := by R1 lean_s1941, lean_s1540, let747, [(- 1), 0]
let lean_s1943 := by R1 lean_s1942, lean_s1562, let979, [(- 1), 0]
have lean_s1944 : (Or let1224 let1222) := by timed cnfAndNeg [let546, let138]
have lean_s1945 : let1223 :=
  (scope (fun lean_a612 : let546 =>
    (scope (fun lean_a613 : let138 =>
      have lean_s1945 : let467 := by timed Eq.symm lean_a613
      have lean_s1946 : let138 := by timed Eq.symm lean_s1945
      have lean_s1947 : let1208 := by timed rfl
      let lean_s1948 := by timed flipCongrArg lean_s1947 [op]
      have lean_s1949 : let255 := by timed Eq.symm lean_a612
      have lean_s1950 : let546 := by timed Eq.symm lean_s1949
      have lean_s1951 : (Eq let79 let590) := by timed congr lean_s1948 lean_s1950
      have lean_s1952 : let647 := by timed Eq.trans lean_s1946 lean_s1951
      show let647 from lean_s1952
  ))))
have lean_s1946 : (Implies let1224 let647) := by liftOrNToImp lean_s1945, 2
have lean_s1947 : (Or (Not let1224) let647) := by timed impliesElim lean_s1946
have lean_s1948 : let1223 := by R1 lean_s1944, lean_s1947, let1224, [(- 1), (- 1)]
have lean_s1949 : (Or let647 let1222) := by permutateOr lean_s1948, [2, 0, 1], (- 1)
let lean_s1950 := by R2 lean_s1943, lean_s1949, let647, [(- 1), (- 1)]
have lean_s1951 : (Or let1226 let1227) := by timed cnfAndNeg [let138, let546]
have lean_s1952 : let1225 :=
  (scope (fun lean_a614 : let138 =>
    (scope (fun lean_a615 : let546 =>
      have lean_s1952 : let255 := by timed Eq.symm lean_a615
      have lean_s1953 : let546 := by timed Eq.symm lean_s1952
      have lean_s1954 : let1208 := by timed rfl
      let lean_s1955 := by timed flipCongrArg lean_s1954 [op]
      have lean_s1956 : let467 := by timed Eq.symm lean_a614
      have lean_s1957 : let138 := by timed Eq.symm lean_s1956
      have lean_s1958 : (Eq let61 let587) := by timed congr lean_s1955 lean_s1957
      have lean_s1959 : let624 := by timed Eq.trans lean_s1953 lean_s1958
      show let624 from lean_s1959
  ))))
have lean_s1953 : (Implies let1226 let624) := by liftOrNToImp lean_s1952, 2
have lean_s1954 : (Or (Not let1226) let624) := by timed impliesElim lean_s1953
have lean_s1955 : let1225 := by R1 lean_s1951, lean_s1954, let1226, [(- 1), (- 1)]
have lean_s1956 : (Or let624 let1222) := by permutateOr lean_s1955, [2, 1, 0], (- 1)
let lean_s1957 := by R2 lean_s1950, lean_s1956, let624, [(- 1), (- 1)]
let lean_s1958 := by R1 lean_s1957, lean_s1716, let278, [(- 1), (- 1)]
let lean_s1959 := by R1 lean_s1958, lean_s882, let808, [(- 1), 0]
let lean_s1960 := by R2 lean_s1959, lean_s43, let734, [(- 1), 0]
let lean_s1961 := by R2 lean_s1960, lean_s767, let975, [(- 1), 0]
have lean_s1962 : (Or let1152 let1150) := by timed cnfAndNeg [let546, let62]
have lean_s1963 : let1151 :=
  (scope (fun lean_a614 : let546 =>
    (scope (fun lean_a615 : let62 =>
      have lean_s1963 : let253 := by timed Eq.symm lean_a615
      have lean_s1964 : let62 := by timed Eq.symm lean_s1963
      have lean_s1965 : let255 := by timed Eq.symm lean_a614
      have lean_s1966 : let82 := by timed Eq.trans lean_s1964 lean_s1965
      show let82 from lean_s1966
  ))))
have lean_s1964 : (Implies let1152 let82) := by liftOrNToImp lean_s1963, 2
have lean_s1965 : (Or (Not let1152) let82) := by timed impliesElim lean_s1964
have lean_s1966 : let1151 := by R1 lean_s1962, lean_s1965, let1152, [(- 1), (- 1)]
have lean_s1967 : (Or let82 let1150) := by permutateOr lean_s1966, [2, 0, 1], (- 1)
let lean_s1968 := by R1 lean_s1961, lean_s1967, let62, [(- 1), (- 1)]
have lean_s1969 : (Or let1046 (Or let1148 (Or let1221 (Or let1148 (Or let1221 (Or let1259 let1227)))))) := by R1 lean_s1968, lean_s1511, let82, [(- 1), 0]
have lean_s1970 : (Or let1046 (Or let1148 (Or let1221 let1259))) := by factor lean_s1969, 7
have lean_s1971 : (Or let1259 (Or let1148 let1639)) := by permutateOr lean_s1970, [3, 1, 2, 0], (- 1)
let lean_s1972 := by R1 lean_s1924, lean_s1971, let138, [(- 1), (- 1)]
have lean_s1973 : (Eq let1019 let1638) := by timed flipCongrArg lean_r40 [Not]
have lean_s1974 : let1638 := by timed eqResolve lean_a487 lean_s1973
have lean_s1975 : (Or let1259 (Or let1211 let1407)) := by timed flipNotAnd lean_s1974 [let97, let123, let122]
have lean_s1976 : (Or let1259 (Or let1407 let1211)) := by permutateOr lean_s1975, [0, 2, 1], (- 1)
let lean_s1977 := by R1 lean_s1972, lean_s1976, let123, [(- 1), (- 1)]
have lean_s1978 : let1124 := by andElim lean_s647, 22
have lean_s1979 : (Or let100 (Or let110 (Or let884 (Or let879 let870)))) := by permutateOr lean_s1978, [4, 3, 0, 1, 2], (- 1)
let lean_s1980 := by R2 lean_s1977, lean_s1979, let110, [(- 1), (- 1)]
have lean_s1981 : (Or let1598 (Or let135 let1085)) := by timed cnfAndNeg [let134, let967]
have lean_s1982 : let1597 :=
  (scope (fun lean_a614 : let134 =>
    (scope (fun lean_a615 : let967 =>
      have lean_s1982 : let188 := by timed Eq.symm lean_a615
      have lean_s1983 : let967 := by timed Eq.symm lean_s1982
      let lean_s1984 := by timed flipCongrArg lean_s1983 [Eq]
      have lean_s1985 : (Eq let132 let132) := by timed rfl
      have lean_s1986 : (Eq let879 let133) := by timed congr lean_s1984 lean_s1985
      have lean_s1987 : (Eq let133 False) := by timed falseIntro lean_a614
      have lean_s1988 : (Eq let879 False) := by timed Eq.trans lean_s1986 lean_s1987
      have lean_s1989 : let1594 := by timed falseElim lean_s1988
      show let1594 from lean_s1989
  ))))
have lean_s1983 : (Implies let1598 let1594) := by liftOrNToImp lean_s1982, 2
have lean_s1984 : (Or (Not let1598) let1594) := by timed impliesElim lean_s1983
have lean_s1985 : let1597 := by R1 lean_s1981, lean_s1984, let1598, [(- 1), (- 1)]
have lean_s1986 : let1054 := by timed rfl
have lean_s1987 : let515 := by timed rfl
let lean_s1988 := by timed flipCongrArg lean_s1987 [Eq]
have lean_s1989 : (Eq let136 let515) := by timed congr lean_s1988 lean_r151
have lean_s1990 : (Eq let136 True) := by timed Eq.trans lean_s1989 lean_r153
have lean_s1991 : (Eq let137 True) := by timed Eq.trans lean_r44 lean_s1990
have lean_s1992 : let137 := by timed trueElim lean_s1991
let lean_s1993 := by timed congr lean_s1986 lean_s1992
let lean_s1994 := by timed congr lean_s1986 lean_s730
have lean_s1995 : (Eq let1594 let1594) := by timed rfl
let lean_s1996 := by timed congr lean_s1994 lean_s1995
have lean_s1997 : (Eq let1597 let1596) := by timed congr lean_s1993 lean_s1996
have lean_s1998 : let1596 := by timed eqResolve lean_s1985 lean_s1997
have lean_s1999 : let134 := by andElim lean_s29, 14
let lean_s2000 := by R1 lean_s1998, lean_s1999, let133, [(- 1), 0]
have lean_s2001 : let1594 := by R2 lean_s2000, lean_s741, let967, [(- 1), 0]
have lean_s2002 : (Or let31 (Or let525 (Or let280 (Or let750 (Or let87 (Or let1259 (Or let1259 (Or let1148 (Or let1046 (Or let1259 let1637)))))))))) := by R1 lean_s1980, lean_s2001, let879, [(- 1), 0]
have lean_s2003 : (Or let31 (Or let525 (Or let280 (Or let750 (Or let87 (Or let1259 (Or let1148 (Or let1046 let1637)))))))) := by factor lean_s2002, (- 1)
let lean_s2004 := by R2 lean_s2003, lean_s1428, let97, [(- 1), (- 1)]
let lean_s2005 := by R1 lean_s2004, lean_s1540, let747, [(- 1), 0]
let lean_s2006 := by R1 lean_s2005, lean_s1405, let748, [(- 1), 0]
have lean_s2007 : (Or let1636 (Or let596 let1417)) := by timed cnfAndNeg [let595, let145]
have lean_s2008 : let1635 :=
  (scope (fun lean_a615 : let595 =>
    (scope (fun lean_a616 : let145 =>
      have lean_s2008 : let1058 := by timed rfl
      let lean_s2009 := by timed flipCongrArg lean_s2008 [Eq]
      have lean_s2010 : let475 := by timed Eq.symm lean_a616
      have lean_s2011 : (Eq let100 let530) := by timed congr lean_s2009 lean_s2010
      have lean_s2012 : let1057 := by timed falseIntro lean_a615
      have lean_s2013 : (Eq let100 False) := by timed Eq.trans lean_s2011 lean_s2012
      have lean_s2014 : let1191 := by timed falseElim lean_s2013
      show let1191 from lean_s2014
  ))))
have lean_s2009 : (Implies let1636 let1191) := by liftOrNToImp lean_s2008, 2
have lean_s2010 : (Or (Not let1636) let1191) := by timed impliesElim lean_s2009
have lean_s2011 : let1635 := by R1 lean_s2007, lean_s2010, let1636, [(- 1), (- 1)]
have lean_s2012 : let1054 := by timed rfl
let lean_s2013 := by timed congr lean_s2012 lean_s781
let lean_s2014 := by timed congr lean_s2012 lean_s1662
have lean_s2015 : (Eq let1191 let1191) := by timed rfl
let lean_s2016 := by timed congr lean_s2014 lean_s2015
have lean_s2017 : (Eq let1635 let1634) := by timed congr lean_s2013 lean_s2016
have lean_s2018 : let1634 := by timed eqResolve lean_s2011 lean_s2017
let lean_s2019 := by R1 lean_s2006, lean_s2018, let100, [(- 1), (- 1)]
let lean_s2020 := by R1 lean_s2019, lean_s789, let530, [(- 1), 0]
let lean_s2021 := by R1 lean_s2020, lean_s1666, let141, [(- 1), (- 1)]
let lean_s2022 := by R1 lean_s2021, lean_s1668, let338, [(- 1), 0]
let lean_s2023 := by R1 lean_s2022, lean_s1826, let280, [(- 1), (- 1)]
have lean_s2024 : (Or let31 (Or let525 (Or let750 (Or let87 (Or let1148 (Or let1046 (Or let1407 (Or let884 (Or let870 (Or let88 (Or let1417 let1628))))))))))) := by R1 lean_s2023, lean_s1828, let407, [(- 1), 0]
have lean_s2025 : (Or let31 (Or let525 (Or let750 (Or let87 (Or let1148 (Or let1046 (Or let1407 (Or let884 (Or let870 (Or let88 let1417)))))))))) := by factor lean_s2024, (- 1)
let lean_s2026 := by R2 lean_s2025, lean_s1632, let145, [(- 1), (- 1)]
let lean_s2027 := by R1 lean_s2026, lean_s1647, let520, [(- 1), 0]
let lean_s2028 := by R1 lean_s2027, lean_s1626, let58, [(- 1), (- 1)]
have lean_s2029 : (Or let31 (Or let525 (Or let750 (Or let87 (Or let1148 (Or let1046 (Or let1407 (Or let884 (Or let870 (Or let88 let1627)))))))))) := by R1 lean_s2028, lean_s1628, let559, [(- 1), 0]
have lean_s2030 : (Or let31 (Or let525 (Or let750 (Or let87 (Or let1148 (Or let1046 (Or let1407 let1626))))))) := by factor lean_s2029, 12
let lean_s2031 := by R2 lean_s2030, lean_s1048, let122, [(- 1), (- 1)]
let lean_s2032 := by R1 lean_s2031, lean_s1063, let599, [(- 1), 0]
have lean_s2033 : (Or let31 (Or let525 (Or let750 (Or let87 (Or let1148 (Or let1046 (Or let884 (Or let870 (Or let88 (Or let151 (Or let31 let87))))))))))) := by R1 lean_s2032, lean_s713, let857, [(- 1), 0]
have lean_s2034 : (Or let31 (Or let525 (Or let750 (Or let87 (Or let1148 (Or let1046 let1626)))))) := by factor lean_s2033, 11
have lean_s2035 : (Or let1625 (Or let1363 let1377)) := by timed cnfAndNeg [let58, let399]
have lean_s2036 : let1624 :=
  (scope (fun lean_a615 : let58 =>
    (scope (fun lean_a616 : let399 =>
      have lean_s2036 : let196 := by timed Eq.symm lean_a616
      have lean_s2037 : let485 := by timed Eq.symm lean_a615
      have lean_s2038 : let58 := by timed Eq.symm lean_s2037
      have lean_s2039 : let793 := by timed Eq.trans lean_s2036 lean_s2038
      show let793 from lean_s2039
  ))))
have lean_s2037 : (Implies let1625 let793) := by liftOrNToImp lean_s2036, 2
have lean_s2038 : (Or (Not let1625) let793) := by timed impliesElim lean_s2037
have lean_s2039 : let1624 := by R1 lean_s2035, lean_s2038, let1625, [(- 1), (- 1)]
have lean_s2040 : (Or let793 (Or let1377 let1363)) := by permutateOr lean_s2039, [2, 1, 0], (- 1)
have lean_s2041 : let794 := by andElim lean_s29, 69
let lean_s2042 := by R1 lean_s2040, lean_s2041, let793, [(- 1), 0]
have lean_s2043 : let1115 := by andElim lean_s647, 31
have lean_s2044 : (Or let33 (Or let108 (Or let399 (Or let397 let517)))) := by permutateOr lean_s2043, [2, 4, 1, 0, 3], (- 1)
let lean_s2045 := by R2 lean_s2042, lean_s2044, let399, [(- 1), (- 1)]
have lean_s2046 : (Or let1622 (Or let377 let1156)) := by timed cnfAndNeg [let376, let975]
have lean_s2047 : let1621 :=
  (scope (fun lean_a616 : let376 =>
    (scope (fun lean_a617 : let975 =>
      have lean_s2047 : let160 := by timed Eq.symm lean_a617
      have lean_s2048 : let975 := by timed Eq.symm lean_s2047
      let lean_s2049 := by timed flipCongrArg lean_s2048 [Eq]
      have lean_s2050 : let1623 := by timed rfl
      have lean_s2051 : (Eq let397 let375) := by timed congr lean_s2049 lean_s2050
      have lean_s2052 : (Eq let375 False) := by timed falseIntro lean_a616
      have lean_s2053 : (Eq let397 False) := by timed Eq.trans lean_s2051 lean_s2052
      have lean_s2054 : let1618 := by timed falseElim lean_s2053
      show let1618 from lean_s2054
  ))))
have lean_s2048 : (Implies let1622 let1618) := by liftOrNToImp lean_s2047, 2
have lean_s2049 : (Or (Not let1622) let1618) := by timed impliesElim lean_s2048
have lean_s2050 : let1621 := by R1 lean_s2046, lean_s2049, let1622, [(- 1), (- 1)]
have lean_s2051 : let1054 := by timed rfl
have lean_s2052 : let384 := by timed rfl
let lean_s2053 := by timed flipCongrArg lean_s2052 [Eq]
have lean_s2054 : (Eq let558 let384) := by timed congr lean_s2053 lean_r108
have lean_s2055 : (Eq let558 True) := by timed Eq.trans lean_s2054 lean_r110
have lean_s2056 : (Eq let378 True) := by timed Eq.trans lean_r193 lean_s2055
have lean_s2057 : let378 := by timed trueElim lean_s2056
let lean_s2058 := by timed congr lean_s2051 lean_s2057
let lean_s2059 := by timed congr lean_s2051 lean_s759
have lean_s2060 : (Eq let1618 let1618) := by timed rfl
let lean_s2061 := by timed congr lean_s2059 lean_s2060
have lean_s2062 : (Eq let1621 let1620) := by timed congr lean_s2058 lean_s2061
have lean_s2063 : let1620 := by timed eqResolve lean_s2050 lean_s2062
have lean_s2064 : let376 := by andElim lean_s29, 52
let lean_s2065 := by R1 lean_s2063, lean_s2064, let375, [(- 1), 0]
have lean_s2066 : let1618 := by R2 lean_s2065, lean_s767, let975, [(- 1), 0]
let lean_s2067 := by R1 lean_s2045, lean_s2066, let397, [(- 1), 0]
have lean_s2068 : (Or let1612 (Or let153 (Or let400 let1617))) := by timed cnfAndNeg [let152, let120, let967, let110]
have lean_s2069 : let1610 :=
  (scope (fun lean_a617 : let152 =>
    (scope (fun lean_a618 : let120 =>
      (scope (fun lean_a619 : let967 =>
        (scope (fun lean_a620 : let110 =>
          have lean_s2069 : let1529 := by timed rfl
          let lean_s2070 := by timed flipCongrArg lean_s2069 [Eq]
          have lean_s2071 : let188 := by timed Eq.symm lean_a619
          have lean_s2072 : let404 := by timed Eq.symm lean_a618
          have lean_s2073 : let120 := by timed Eq.symm lean_s2072
          have lean_s2074 : let1528 := by timed Eq.trans lean_s2071 lean_s2073
          have lean_s2075 : let1616 := by timed Eq.symm lean_s2074
          have lean_s2076 : let218 := by timed Eq.symm lean_a620
          have lean_s2077 : let1615 := by timed Eq.trans lean_s2076 lean_a619
          have lean_s2078 : let1614 := by timed Eq.symm lean_s2077
          have lean_s2079 : (Eq let30 let32) := by timed Eq.trans lean_s2075 lean_s2078
          have lean_s2080 : (Eq let32 let30) := by timed Eq.symm lean_s2079
          have lean_s2081 : (Eq let33 let151) := by timed congr lean_s2070 lean_s2080
          have lean_s2082 : let1527 := by timed falseIntro lean_a617
          have lean_s2083 : let1613 := by timed Eq.trans lean_s2081 lean_s2082
          have lean_s2084 : let1458 := by timed falseElim lean_s2083
          show let1458 from lean_s2084
  ))))))))
have lean_s2070 : (Implies let1612 let1458) := by liftOrNToImp lean_s2069, 4
have lean_s2071 : (Or (Not let1612) let1458) := by timed impliesElim lean_s2070
have lean_s2072 : let1610 := by R1 lean_s2068, lean_s2071, let1612, [(- 1), (- 1)]
have lean_s2073 : let1054 := by timed rfl
let lean_s2074 := by timed congr lean_s2073 lean_s726
let lean_s2075 := by timed congr lean_s2073 lean_s728
let lean_s2076 := by timed congr lean_s2073 lean_s730
have lean_s2077 : (Eq let1606 let1606) := by timed rfl
let lean_s2078 := by timed congr lean_s2073 lean_s2077
have lean_s2079 : (Eq let1458 let1458) := by timed rfl
let lean_s2080 := by timed congr lean_s2078 lean_s2079
let lean_s2081 := by timed congr lean_s2076 lean_s2080
let lean_s2082 := by timed congr lean_s2075 lean_s2081
have lean_s2083 : (Eq let1610 let1609) := by timed congr lean_s2074 lean_s2082
have lean_s2084 : let1609 := by timed eqResolve lean_s2072 lean_s2083
have lean_s2085 : (Or let151 (Or let1085 (Or let1458 (Or let1606 let400)))) := by permutateOr lean_s2084, [0, 2, 4, 3, 1], (- 1)
let lean_s2086 := by R1 lean_s2067, lean_s2085, let33, [(- 1), (- 1)]
let lean_s2087 := by R2 lean_s2086, lean_s741, let967, [(- 1), 0]
have lean_s2088 : (Or let1604 (Or let128 (Or let1363 let1437))) := by timed cnfAndNeg [let127, let58, let141, let734]
have lean_s2089 : let1603 :=
  (scope (fun lean_a618 : let127 =>
    (scope (fun lean_a619 : let58 =>
      (scope (fun lean_a620 : let141 =>
        (scope (fun lean_a621 : let734 =>
          have lean_s2089 : let485 := by timed Eq.symm lean_a619
          have lean_s2090 : let58 := by timed Eq.symm lean_s2089
          let lean_s2091 := by timed flipCongrArg lean_s2090 [Eq]
          have lean_s2092 : let246 := by timed Eq.symm lean_a621
          have lean_s2093 : let415 := by timed Eq.symm lean_a620
          have lean_s2094 : let141 := by timed Eq.symm lean_s2093
          have lean_s2095 : let1397 := by timed Eq.trans lean_s2092 lean_s2094
          have lean_s2096 : (Eq let517 let126) := by timed congr lean_s2091 lean_s2095
          have lean_s2097 : (Eq let126 False) := by timed falseIntro lean_a618
          have lean_s2098 : let1605 := by timed Eq.trans lean_s2096 lean_s2097
          have lean_s2099 : let1599 := by timed falseElim lean_s2098
          show let1599 from lean_s2099
  ))))))))
have lean_s2090 : (Implies let1604 let1599) := by liftOrNToImp lean_s2089, 4
have lean_s2091 : (Or (Not let1604) let1599) := by timed impliesElim lean_s2090
have lean_s2092 : let1603 := by R1 lean_s2088, lean_s2091, let1604, [(- 1), (- 1)]
have lean_s2093 : let1054 := by timed rfl
have lean_s2094 : let131 := by timed rfl
let lean_s2095 := by timed flipCongrArg lean_s2094 [Eq]
have lean_s2096 : (Eq let129 let131) := by timed congr lean_s2095 lean_r42
have lean_s2097 : (Eq let129 True) := by timed Eq.trans lean_s2096 lean_r43
have lean_s2098 : (Eq let130 True) := by timed Eq.trans lean_r41 lean_s2097
have lean_s2099 : let130 := by timed trueElim lean_s2098
let lean_s2100 := by timed congr lean_s2093 lean_s2099
let lean_s2101 := by timed congr lean_s2093 lean_s1621
let lean_s2102 := by timed congr lean_s2093 lean_s15
let lean_s2103 := by timed congr lean_s2093 lean_s17
have lean_s2104 : (Eq let1599 let1599) := by timed rfl
let lean_s2105 := by timed congr lean_s2103 lean_s2104
let lean_s2106 := by timed congr lean_s2102 lean_s2105
let lean_s2107 := by timed congr lean_s2101 lean_s2106
have lean_s2108 : (Eq let1603 let1602) := by timed congr lean_s2100 lean_s2107
have lean_s2109 : let1602 := by timed eqResolve lean_s2092 lean_s2108
have lean_s2110 : (Or let126 (Or let1194 (Or let1363 (Or let1303 let1599)))) := by permutateOr lean_s2109, [0, 3, 1, 2, 4], (- 1)
let lean_s2111 := by R1 lean_s2087, lean_s2110, let517, [(- 1), (- 1)]
have lean_s2112 : let127 := by andElim lean_s29, 44
let lean_s2113 := by R1 lean_s2111, lean_s2112, let126, [(- 1), 0]
let lean_s2114 := by R2 lean_s2113, lean_s43, let734, [(- 1), 0]
let lean_s2115 := by R2 lean_s2114, lean_s1979, let110, [(- 1), (- 1)]
have lean_s2116 : (Or let1363 (Or let108 (Or let151 (Or let400 (Or let1363 let1593))))) := by R1 lean_s2115, lean_s2001, let879, [(- 1), 0]
have lean_s2117 : (Or let1363 (Or let108 (Or let151 (Or let400 let1593)))) := by factor lean_s2116, (- 1)
let lean_s2118 := by R2 lean_s2117, lean_s1632, let58, [(- 1), (- 1)]
let lean_s2119 := by R1 lean_s2118, lean_s1647, let520, [(- 1), 0]
let lean_s2120 := by R1 lean_s2119, lean_s1509, let100, [(- 1), (- 1)]
let lean_s2121 := by R1 lean_s2120, lean_s1511, let82, [(- 1), 0]
let lean_s2122 := by R1 lean_s2121, lean_s1666, let145, [(- 1), (- 1)]
have lean_s2123 : (Or let108 (Or let151 (Or let400 (Or let1303 (Or let884 (Or let870 let1591)))))) := by R1 lean_s2122, lean_s1668, let338, [(- 1), 0]
have lean_s2124 : (Or let108 (Or let151 (Or let400 (Or let1303 (Or let884 (Or let870 let525)))))) := by factor lean_s2123, 9
have lean_s2125 : (Or let108 (Or let151 (Or let884 (Or let870 (Or let525 (Or let1303 let400)))))) := by permutateOr lean_s2124, [0, 1, 4, 5, 6, 3, 2], (- 1)
let lean_s2126 := by R2 lean_s2125, lean_s1428, let141, [(- 1), (- 1)]
let lean_s2127 := by R1 lean_s2126, lean_s1540, let747, [(- 1), 0]
let lean_s2128 := by R1 lean_s2127, lean_s1405, let748, [(- 1), 0]
have lean_s2129 : (Or let1160 (Or let1155 (Or let543 (Or let953 (Or let1046 let1156))))) := by timed cnfAndNeg [let738, let87, let809, let98, let975]
have lean_s2130 : let1159 :=
  (scope (fun lean_a619 : let738 =>
    (scope (fun lean_a620 : let87 =>
      (scope (fun lean_a621 : let809 =>
        (scope (fun lean_a622 : let98 =>
          (scope (fun lean_a623 : let975 =>
            have lean_s2130 : let160 := by timed Eq.symm lean_a623
            have lean_s2131 : let975 := by timed Eq.symm lean_s2130
            let lean_s2132 := by timed flipCongrArg lean_s2131 [Eq]
            have lean_s2133 : let210 := by timed Eq.symm lean_a619
            have lean_s2134 : let172 := by timed Eq.symm lean_a620
            have lean_s2135 : let87 := by timed Eq.symm lean_s2134
            have lean_s2136 : let1169 := by timed Eq.trans lean_s2133 lean_s2135
            have lean_s2137 : let1168 := by timed Eq.symm lean_s2136
            have lean_s2138 : let363 := by timed Eq.symm lean_a622
            have lean_s2139 : let98 := by timed Eq.symm lean_s2138
            have lean_s2140 : let363 := by timed Eq.symm lean_s2139
            have lean_s2141 : let1167 := by timed Eq.trans lean_s2140 lean_a619
            have lean_s2142 : let1166 := by timed Eq.symm lean_s2141
            have lean_s2143 : let1165 := by timed Eq.trans lean_s2137 lean_s2142
            have lean_s2144 : let1164 := by timed Eq.symm lean_s2143
            have lean_s2145 : let1163 := by timed congr lean_s2132 lean_s2144
            have lean_s2146 : let1162 := by timed falseIntro lean_a621
            have lean_s2147 : let1161 := by timed Eq.trans lean_s2145 lean_s2146
            have lean_s2148 : let1153 := by timed falseElim lean_s2147
            show let1153 from lean_s2148
  ))))))))))
have lean_s2131 : (Implies let1160 let1153) := by liftOrNToImp lean_s2130, 5
have lean_s2132 : (Or (Not let1160) let1153) := by timed impliesElim lean_s2131
have lean_s2133 : let1159 := by R1 lean_s2129, lean_s2132, let1160, [(- 1), (- 1)]
have lean_s2134 : let1054 := by timed rfl
let lean_s2135 := by timed congr lean_s2134 lean_s13
let lean_s2136 := by timed congr lean_s2134 lean_s839
let lean_s2137 := by timed congr lean_s2134 lean_s864
let lean_s2138 := by timed congr lean_s2134 lean_s836
let lean_s2139 := by timed congr lean_s2134 lean_s759
let lean_s2140 := by timed congr lean_s2139 lean_s872
let lean_s2141 := by timed congr lean_s2138 lean_s2140
let lean_s2142 := by timed congr lean_s2137 lean_s2141
let lean_s2143 := by timed congr lean_s2136 lean_s2142
have lean_s2144 : (Eq let1159 let1158) := by timed congr lean_s2135 lean_s2143
have lean_s2145 : let1158 := by timed eqResolve lean_s2133 lean_s2144
have lean_s2146 : (Or let808 (Or let1156 (Or let1155 (Or let543 let1154)))) := by permutateOr lean_s2145, [2, 4, 0, 1, 5, 3], (- 1)
let lean_s2147 := by R1 lean_s2128, lean_s2146, let108, [(- 1), (- 1)]
let lean_s2148 := by R1 lean_s2147, lean_s882, let808, [(- 1), 0]
let lean_s2149 := by R2 lean_s2148, lean_s45, let738, [(- 1), 0]
let lean_s2150 := by R2 lean_s2149, lean_s767, let975, [(- 1), 0]
let lean_s2151 := by R1 lean_s2150, lean_s1447, let97, [(- 1), (- 1)]
let lean_s2152 := by R1 lean_s2151, lean_s1449, let432, [(- 1), 0]
let lean_s2153 := by R1 lean_s1632, lean_s1647, let520, [(- 1), 0]
have lean_s2154 : (Eq let1015 let1590) := by timed flipCongrArg lean_r72 [Not]
have lean_s2155 : let1590 := by timed eqResolve lean_a483 lean_s2154
have lean_s2156 : (Or let1417 let1589) := by timed flipNotAnd lean_s2155 [let145, let98, let88]
have lean_s2157 : (Or let1321 (Or let1417 let1046)) := by permutateOr lean_s2156, [2, 0, 1], (- 1)
let lean_s2158 := by R1 lean_s2153, lean_s2157, let145, [(- 1), (- 1)]
have lean_s2159 : (Or let1367 (Or let340 let1363)) := by timed cnfAndNeg [let339, let58]
have lean_s2160 : let1366 :=
  (scope (fun lean_a619 : let339 =>
    (scope (fun lean_a620 : let58 =>
      have lean_s2160 : let1265 := by timed rfl
      let lean_s2161 := by timed flipCongrArg lean_s2160 [Eq]
      have lean_s2162 : let485 := by timed Eq.symm lean_a620
      have lean_s2163 : (Eq let88 let338) := by timed congr lean_s2161 lean_s2162
      have lean_s2164 : let1369 := by timed falseIntro lean_a619
      have lean_s2165 : let1368 := by timed Eq.trans lean_s2163 lean_s2164
      have lean_s2166 : let1321 := by timed falseElim lean_s2165
      show let1321 from lean_s2166
  ))))
have lean_s2161 : (Implies let1367 let1321) := by liftOrNToImp lean_s2160, 2
have lean_s2162 : (Or (Not let1367) let1321) := by timed impliesElim lean_s2161
have lean_s2163 : let1366 := by R1 lean_s2159, lean_s2162, let1367, [(- 1), (- 1)]
have lean_s2164 : let1054 := by timed rfl
let lean_s2165 := by timed congr lean_s2164 lean_s1660
let lean_s2166 := by timed congr lean_s2164 lean_s1621
let lean_s2167 := by timed congr lean_s2166 lean_s1782
have lean_s2168 : (Eq let1366 let1365) := by timed congr lean_s2165 lean_s2167
have lean_s2169 : let1365 := by timed eqResolve lean_s2163 lean_s2168
let lean_s2170 := by R1 lean_s2158, lean_s2169, let58, [(- 1), (- 1)]
have lean_s2171 : (Or let151 (Or let525 (Or let1321 let1589))) := by R1 lean_s2170, lean_s1668, let338, [(- 1), 0]
have lean_s2172 : (Or let151 (Or let525 (Or let1321 let1046))) := by factor lean_s2171, 4
have lean_s2173 : (Or let151 (Or let884 (Or let870 (Or let525 (Or let400 (Or let543 (Or let1046 (Or let543 let1588)))))))) := by R1 lean_s2152, lean_s2172, let88, [(- 1), (- 1)]
have lean_s2174 : (Or let151 (Or let884 (Or let870 (Or let525 (Or let400 (Or let543 let1046)))))) := by factor lean_s2173, (- 1)
have lean_s2175 : (Or let151 (Or let884 (Or let870 (Or let525 (Or let543 (Or let400 let1046)))))) := by permutateOr lean_s2174, [0, 1, 2, 3, 5, 4, 6], (- 1)
let lean_s2176 := by R1 lean_s2034, lean_s2175, let87, [(- 1), (- 1)]
have lean_s2177 : (Or let31 (Or let525 (Or let750 (Or let1148 (Or let1046 (Or let884 (Or let870 (Or let151 (Or let151 (Or let884 (Or let870 (Or let525 (Or let400 (Or let1046 let1588)))))))))))))) := by R1 lean_s2176, lean_s2172, let88, [(- 1), (- 1)]
have lean_s2178 : (Or let31 (Or let525 (Or let750 (Or let1148 (Or let1046 (Or let884 (Or let870 let1521))))))) := by factor lean_s2177, 16
have lean_s2179 : (Or let1587 (Or let1148 let1585)) := by timed cnfAndNeg [let546, let884]
have lean_s2180 : let1586 :=
  (scope (fun lean_a619 : let546 =>
    (scope (fun lean_a620 : let884 =>
      have lean_s2180 : let203 := by timed Eq.symm lean_a620
      have lean_s2181 : let255 := by timed Eq.symm lean_a619
      have lean_s2182 : let546 := by timed Eq.symm lean_s2181
      have lean_s2183 : let848 := by timed Eq.trans lean_s2180 lean_s2182
      show let848 from lean_s2183
  ))))
have lean_s2181 : (Implies let1587 let848) := by liftOrNToImp lean_s2180, 2
have lean_s2182 : (Or (Not let1587) let848) := by timed impliesElim lean_s2181
have lean_s2183 : let1586 := by R1 lean_s2179, lean_s2182, let1587, [(- 1), (- 1)]
have lean_s2184 : (Or let848 (Or let1585 let1148)) := by permutateOr lean_s2183, [2, 1, 0], (- 1)
let lean_s2185 := by R1 lean_s2178, lean_s2184, let884, [(- 1), (- 1)]
have lean_s2186 : let849 := by andElim lean_s29, 8
let lean_s2187 := by R1 lean_s2185, lean_s2186, let848, [(- 1), 0]
have lean_s2188 : (Or let1582 (Or let880 (Or let1148 let1584))) := by timed cnfAndNeg [let774, let546, let98, let738]
have lean_s2189 : let1580 :=
  (scope (fun lean_a620 : let774 =>
    (scope (fun lean_a621 : let546 =>
      (scope (fun lean_a622 : let98 =>
        (scope (fun lean_a623 : let738 =>
          have lean_s2189 : let255 := by timed Eq.symm lean_a621
          have lean_s2190 : let546 := by timed Eq.symm lean_s2189
          let lean_s2191 := by timed flipCongrArg lean_s2190 [Eq]
          have lean_s2192 : let210 := by timed Eq.symm lean_a623
          have lean_s2193 : let363 := by timed Eq.symm lean_a622
          have lean_s2194 : let98 := by timed Eq.symm lean_s2193
          have lean_s2195 : let1166 := by timed Eq.trans lean_s2192 lean_s2194
          have lean_s2196 : (Eq let870 let773) := by timed congr lean_s2191 lean_s2195
          have lean_s2197 : let1181 := by timed falseIntro lean_a620
          have lean_s2198 : let1583 := by timed Eq.trans lean_s2196 lean_s2197
          have lean_s2199 : let1576 := by timed falseElim lean_s2198
          show let1576 from lean_s2199
  ))))))))
have lean_s2190 : (Implies let1582 let1576) := by liftOrNToImp lean_s2189, 4
have lean_s2191 : (Or (Not let1582) let1576) := by timed impliesElim lean_s2190
have lean_s2192 : let1580 := by R1 lean_s2188, lean_s2191, let1582, [(- 1), (- 1)]
have lean_s2193 : let1054 := by timed rfl
have lean_s2194 : let956 := by timed rfl
let lean_s2195 := by timed flipCongrArg lean_s2194 [Eq]
have lean_s2196 : (Eq let881 let956) := by timed congr lean_s2195 lean_r380
have lean_s2197 : (Eq let881 True) := by timed Eq.trans lean_s2196 lean_r379
have lean_s2198 : (Eq let882 True) := by timed Eq.trans lean_r319 lean_s2197
have lean_s2199 : let882 := by timed trueElim lean_s2198
let lean_s2200 := by timed congr lean_s2193 lean_s2199
have lean_s2201 : (Eq let1148 let1148) := by timed rfl
let lean_s2202 := by timed congr lean_s2193 lean_s2201
let lean_s2203 := by timed congr lean_s2193 lean_s836
let lean_s2204 := by timed congr lean_s2193 lean_s13
have lean_s2205 : (Eq let1576 let1576) := by timed rfl
let lean_s2206 := by timed congr lean_s2204 lean_s2205
let lean_s2207 := by timed congr lean_s2203 lean_s2206
let lean_s2208 := by timed congr lean_s2202 lean_s2207
have lean_s2209 : (Eq let1580 let1579) := by timed congr lean_s2200 lean_s2208
have lean_s2210 : let1579 := by timed eqResolve lean_s2192 lean_s2209
have lean_s2211 : (Or let773 (Or let1155 (Or let1576 let1170))) := by permutateOr lean_s2210, [0, 3, 4, 1, 2], (- 1)
let lean_s2212 := by R1 lean_s2187, lean_s2211, let870, [(- 1), (- 1)]
have lean_s2213 : let774 := by andElim lean_s29, 92
let lean_s2214 := by R1 lean_s2212, lean_s2213, let773, [(- 1), 0]
have lean_s2215 : (Or let31 (Or let525 (Or let750 (Or let1148 (Or let1046 (Or let151 (Or let400 (Or let1148 let1170)))))))) := by R2 lean_s2214, lean_s45, let738, [(- 1), 0]
have lean_s2216 : (Or let31 (Or let525 (Or let750 (Or let1148 let1575)))) := by factor lean_s2215, 9
have lean_s2217 : let1091 := by andElim lean_s647, 42
have lean_s2218 : (Or let56 (Or let142 (Or let546 (Or let642 let554)))) := by permutateOr lean_s2217, [2, 3, 0, 1, 4], (- 1)
let lean_s2219 := by R2 lean_s2216, lean_s2218, let546, [(- 1), (- 1)]
have lean_s2220 : (Or let1089 (Or let651 let1085)) := by timed cnfAndNeg [let650, let967]
have lean_s2221 : let1088 :=
  (scope (fun lean_a621 : let650 =>
    (scope (fun lean_a622 : let967 =>
      have lean_s2221 : let188 := by timed Eq.symm lean_a622
      have lean_s2222 : let967 := by timed Eq.symm lean_s2221
      let lean_s2223 := by timed flipCongrArg lean_s2222 [Eq]
      have lean_s2224 : (Eq let79 let79) := by timed rfl
      have lean_s2225 : (Eq let642 let535) := by timed congr lean_s2223 lean_s2224
      have lean_s2226 : let1090 := by timed falseIntro lean_a621
      have lean_s2227 : (Eq let642 False) := by timed Eq.trans lean_s2225 lean_s2226
      have lean_s2228 : let1084 := by timed falseElim lean_s2227
      show let1084 from lean_s2228
  ))))
have lean_s2222 : (Implies let1089 let1084) := by liftOrNToImp lean_s2221, 2
have lean_s2223 : (Or (Not let1089) let1084) := by timed impliesElim lean_s2222
have lean_s2224 : let1088 := by R1 lean_s2220, lean_s2223, let1089, [(- 1), (- 1)]
have lean_s2225 : let1054 := by timed rfl
have lean_s2226 : let536 := by timed rfl
let lean_s2227 := by timed flipCongrArg lean_s2226 [Eq]
have lean_s2228 : (Eq let929 let536) := by timed congr lean_s2227 lean_r250
have lean_s2229 : (Eq let929 True) := by timed Eq.trans lean_s2228 lean_r175
have lean_s2230 : (Eq let652 True) := by timed Eq.trans lean_r360 lean_s2229
have lean_s2231 : let652 := by timed trueElim lean_s2230
let lean_s2232 := by timed congr lean_s2225 lean_s2231
let lean_s2233 := by timed congr lean_s2225 lean_s730
have lean_s2234 : (Eq let1084 let1084) := by timed rfl
let lean_s2235 := by timed congr lean_s2233 lean_s2234
have lean_s2236 : (Eq let1088 let1087) := by timed congr lean_s2232 lean_s2235
have lean_s2237 : let1087 := by timed eqResolve lean_s2224 lean_s2236
have lean_s2238 : let650 := by andElim lean_s29, 16
let lean_s2239 := by R1 lean_s2237, lean_s2238, let535, [(- 1), 0]
have lean_s2240 : let1084 := by R2 lean_s2239, lean_s741, let967, [(- 1), 0]
let lean_s2241 := by R1 lean_s2219, lean_s2240, let642, [(- 1), 0]
have lean_s2242 : (Or let1083 (Or let1081 let1043)) := by timed cnfAndNeg [let554, let727]
have lean_s2243 : let1082 :=
  (scope (fun lean_a622 : let554 =>
    (scope (fun lean_a623 : let727 =>
      have lean_s2243 : let458 := by timed Eq.symm lean_a623
      have lean_s2244 : let727 := by timed Eq.symm lean_s2243
      have lean_s2245 : let461 := by timed Eq.symm lean_a622
      have lean_s2246 : let270 := by timed Eq.trans lean_s2244 lean_s2245
      show let270 from lean_s2246
  ))))
have lean_s2244 : (Implies let1083 let270) := by liftOrNToImp lean_s2243, 2
have lean_s2245 : (Or (Not let1083) let270) := by timed impliesElim lean_s2244
have lean_s2246 : let1082 := by R1 lean_s2242, lean_s2245, let1083, [(- 1), (- 1)]
have lean_s2247 : (Or let270 (Or let1043 let1081)) := by permutateOr lean_s2246, [2, 1, 0], (- 1)
have lean_s2248 : let271 := by andElim lean_s709, 6
let lean_s2249 := by R1 lean_s2247, lean_s2248, let270, [(- 1), 0]
have lean_s2250 : let1081 := by R2 lean_s2249, lean_s712, let727, [(- 1), 0]
let lean_s2251 := by R1 lean_s2241, lean_s2250, let554, [(- 1), 0]
have lean_s2252 : (Or let1080 let1078) := by timed cnfAndNeg [let142, let98]
have lean_s2253 : let1079 :=
  (scope (fun lean_a623 : let142 =>
    (scope (fun lean_a624 : let98 =>
      have lean_s2253 : let363 := by timed Eq.symm lean_a624
      have lean_s2254 : let98 := by timed Eq.symm lean_s2253
      have lean_s2255 : let364 := by timed Eq.symm lean_a623
      have lean_s2256 : let625 := by timed Eq.trans lean_s2254 lean_s2255
      show let625 from lean_s2256
  ))))
have lean_s2254 : (Implies let1080 let625) := by liftOrNToImp lean_s2253, 2
have lean_s2255 : (Or (Not let1080) let625) := by timed impliesElim lean_s2254
have lean_s2256 : let1079 := by R1 lean_s2252, lean_s2255, let1080, [(- 1), (- 1)]
have lean_s2257 : (Or let625 let1078) := by permutateOr lean_s2256, [2, 0, 1], (- 1)
let lean_s2258 := by R1 lean_s2251, lean_s2257, let142, [(- 1), (- 1)]
have lean_s2259 : let1041 := by andElim lean_s709, 4
let lean_s2260 := by R1 lean_s2258, lean_s2259, let625, [(- 1), 0]
have lean_s2261 : (Or let1526 (Or let153 (Or let400 let1085))) := by timed cnfAndNeg [let152, let120, let967]
have lean_s2262 : let1525 :=
  (scope (fun lean_a624 : let152 =>
    (scope (fun lean_a625 : let120 =>
      (scope (fun lean_a626 : let967 =>
        have lean_s2262 : let1529 := by timed rfl
        let lean_s2263 := by timed flipCongrArg lean_s2262 [Eq]
        have lean_s2264 : let188 := by timed Eq.symm lean_a626
        have lean_s2265 : let404 := by timed Eq.symm lean_a625
        have lean_s2266 : let120 := by timed Eq.symm lean_s2265
        have lean_s2267 : let1528 := by timed Eq.trans lean_s2264 lean_s2266
        have lean_s2268 : (Eq let750 let151) := by timed congr lean_s2263 lean_s2267
        have lean_s2269 : let1527 := by timed falseIntro lean_a624
        have lean_s2270 : let1360 := by timed Eq.trans lean_s2268 lean_s2269
        have lean_s2271 : let1354 := by timed falseElim lean_s2270
        show let1354 from lean_s2271
  ))))))
have lean_s2263 : (Implies let1526 let1354) := by liftOrNToImp lean_s2262, 3
have lean_s2264 : (Or (Not let1526) let1354) := by timed impliesElim lean_s2263
have lean_s2265 : let1525 := by R1 lean_s2261, lean_s2264, let1526, [(- 1), (- 1)]
have lean_s2266 : let1054 := by timed rfl
let lean_s2267 := by timed congr lean_s2266 lean_s726
let lean_s2268 := by timed congr lean_s2266 lean_s728
let lean_s2269 := by timed congr lean_s2266 lean_s730
have lean_s2270 : (Eq let1354 let1354) := by timed rfl
let lean_s2271 := by timed congr lean_s2269 lean_s2270
let lean_s2272 := by timed congr lean_s2268 lean_s2271
have lean_s2273 : (Eq let1525 let1524) := by timed congr lean_s2267 lean_s2272
have lean_s2274 : let1524 := by timed eqResolve lean_s2265 lean_s2273
have lean_s2275 : (Or let151 (Or let1085 (Or let1354 let400))) := by permutateOr lean_s2274, [0, 2, 3, 1], (- 1)
let lean_s2276 := by R1 lean_s2260, lean_s2275, let750, [(- 1), (- 1)]
have lean_s2277 : (Or let31 (Or let525 (Or let1046 (Or let151 (Or let400 (Or let56 let1575)))))) := by R2 lean_s2276, lean_s741, let967, [(- 1), 0]
have lean_s2278 : (Or let31 (Or let525 (Or let1046 (Or let151 (Or let400 let56))))) := by factor lean_s2277, 8
let lean_s2279 := by R2 lean_s2278, lean_s1373, let120, [(- 1), (- 1)]
let lean_s2280 := by R1 lean_s2279, lean_s1383, let744, [(- 1), 0]
have lean_s2281 : (Or let31 (Or let525 (Or let1046 (Or let151 (Or let56 let1487))))) := by R1 lean_s2280, lean_s1405, let748, [(- 1), 0]
have lean_s2282 : (Or let31 (Or let525 (Or let1046 (Or let151 let56)))) := by factor lean_s2281, 6
let lean_s2283 := by R2 lean_s981, lean_s986, let988, [(- 1), 0]
have lean_s2284 : (Or let1486 (Or let1211 let1301)) := by timed cnfAndNeg [let123, let717]
have lean_s2285 : let1485 :=
  (scope (fun lean_a624 : let123 =>
    (scope (fun lean_a625 : let717 =>
      have lean_s2285 : let254 := by timed Eq.symm lean_a625
      have lean_s2286 : let717 := by timed Eq.symm lean_s2285
      have lean_s2287 : let1208 := by timed rfl
      let lean_s2288 := by timed flipCongrArg lean_s2287 [op]
      have lean_s2289 : let263 := by timed Eq.symm lean_a624
      have lean_s2290 : let123 := by timed Eq.symm lean_s2289
      have lean_s2291 : (Eq let61 let584) := by timed congr lean_s2288 lean_s2290
      have lean_s2292 : let704 := by timed Eq.trans lean_s2286 lean_s2291
      show let704 from lean_s2292
  ))))
have lean_s2286 : (Implies let1486 let704) := by liftOrNToImp lean_s2285, 2
have lean_s2287 : (Or (Not let1486) let704) := by timed impliesElim lean_s2286
have lean_s2288 : let1485 := by R1 lean_s2284, lean_s2287, let1486, [(- 1), (- 1)]
have lean_s2289 : (Or let704 let1479) := by permutateOr lean_s2288, [2, 1, 0], (- 1)
let lean_s2290 := by R2 lean_s2283, lean_s2289, let704, [(- 1), (- 1)]
have lean_s2291 : (Or let1483 let1479) := by timed cnfAndNeg [let717, let123]
have lean_s2292 : let1482 :=
  (scope (fun lean_a625 : let717 =>
    (scope (fun lean_a626 : let123 =>
      have lean_s2292 : let263 := by timed Eq.symm lean_a626
      have lean_s2293 : let123 := by timed Eq.symm lean_s2292
      have lean_s2294 : let1208 := by timed rfl
      let lean_s2295 := by timed flipCongrArg lean_s2294 [op]
      have lean_s2296 : let254 := by timed Eq.symm lean_a625
      have lean_s2297 : let717 := by timed Eq.symm lean_s2296
      have lean_s2298 : let1484 := by timed congr lean_s2295 lean_s2297
      have lean_s2299 : let647 := by timed Eq.trans lean_s2293 lean_s2298
      show let647 from lean_s2299
  ))))
have lean_s2293 : (Implies let1483 let647) := by liftOrNToImp lean_s2292, 2
have lean_s2294 : (Or (Not let1483) let647) := by timed impliesElim lean_s2293
have lean_s2295 : let1482 := by R1 lean_s2291, lean_s2294, let1483, [(- 1), (- 1)]
have lean_s2296 : (Or let647 let1479) := by permutateOr lean_s2295, [2, 0, 1], (- 1)
have lean_s2297 : let1481 := by R2 lean_s2290, lean_s2296, let647, [(- 1), (- 1)]
have lean_s2298 : let1480 := by factor lean_s2297, (- 1)
let lean_s2299 := by R2 lean_s2298, lean_s744, let123, [(- 1), (- 1)]
let lean_s2300 := by R1 lean_s2299, lean_s768, let516, [(- 1), 0]
have lean_s2301 : (Eq let1028 let1478) := by timed flipCongrArg lean_r66 [Not]
have lean_s2302 : let1478 := by timed eqResolve lean_a520 lean_s2301
have lean_s2303 : (Or let1221 (Or let1477 let1456)) := by timed flipNotAnd lean_s2302 [let138, let267, let266]
have lean_s2304 : (Or let1477 (Or let1456 let1221)) := by permutateOr lean_s2303, [1, 2, 0], (- 1)
let lean_s2305 := by R1 lean_s2300, lean_s2304, let138, [(- 1), (- 1)]
have lean_s2306 : let1128 := by andElim lean_s647, 18
have lean_s2307 : (Or let29 (Or let267 (Or let283 (Or let426 let725)))) := by permutateOr lean_s2306, [3, 2, 0, 1, 4], (- 1)
let lean_s2308 := by R2 lean_s2305, lean_s2307, let267, [(- 1), (- 1)]
have lean_s2309 : (Or let1476 (Or let272 let1085)) := by timed cnfAndNeg [let271, let967]
have lean_s2310 : let1475 :=
  (scope (fun lean_a625 : let271 =>
    (scope (fun lean_a626 : let967 =>
      have lean_s2310 : let1208 := by timed rfl
      let lean_s2311 := by timed flipCongrArg lean_s2310 [Eq]
      have lean_s2312 : let188 := by timed Eq.symm lean_a626
      have lean_s2313 : (Eq let426 let270) := by timed congr lean_s2311 lean_s2312
      have lean_s2314 : (Eq let270 False) := by timed falseIntro lean_a625
      have lean_s2315 : (Eq let426 False) := by timed Eq.trans lean_s2313 lean_s2314
      have lean_s2316 : let1472 := by timed falseElim lean_s2315
      show let1472 from lean_s2316
  ))))
have lean_s2311 : (Implies let1476 let1472) := by liftOrNToImp lean_s2310, 2
have lean_s2312 : (Or (Not let1476) let1472) := by timed impliesElim lean_s2311
have lean_s2313 : let1475 := by R1 lean_s2309, lean_s2312, let1476, [(- 1), (- 1)]
have lean_s2314 : let1054 := by timed rfl
have lean_s2315 : let973 := by timed rfl
let lean_s2316 := by timed flipCongrArg lean_s2315 [Eq]
have lean_s2317 : (Eq let273 let973) := by timed congr lean_s2316 lean_r402
have lean_s2318 : (Eq let273 True) := by timed Eq.trans lean_s2317 lean_r394
have lean_s2319 : (Eq let274 True) := by timed Eq.trans lean_r67 lean_s2318
have lean_s2320 : let274 := by timed trueElim lean_s2319
let lean_s2321 := by timed congr lean_s2314 lean_s2320
let lean_s2322 := by timed congr lean_s2314 lean_s730
have lean_s2323 : (Eq let1472 let1472) := by timed rfl
let lean_s2324 := by timed congr lean_s2322 lean_s2323
have lean_s2325 : (Eq let1475 let1474) := by timed congr lean_s2321 lean_s2324
have lean_s2326 : let1474 := by timed eqResolve lean_s2313 lean_s2325
let lean_s2327 := by R1 lean_s2326, lean_s2248, let270, [(- 1), 0]
have lean_s2328 : let1472 := by R2 lean_s2327, lean_s741, let967, [(- 1), 0]
let lean_s2329 := by R1 lean_s2308, lean_s2328, let426, [(- 1), 0]
have lean_s2330 : (Eq let1014 let1471) := by timed flipCongrArg lean_r68 [Not]
have lean_s2331 : let1471 := by timed eqResolve lean_a479 lean_s2330
have lean_s2332 : (Or let1266 (Or let152 let1470)) := by timed flipNotAnd lean_s2331 [let275, let151, let29]
have lean_s2333 : (Or let1266 (Or let1470 let152)) := by permutateOr lean_s2332, [0, 2, 1], (- 1)
let lean_s2334 := by R1 lean_s2329, lean_s2333, let29, [(- 1), (- 1)]
have lean_s2335 : let1111 := by andElim lean_s647, 35
have lean_s2336 : (Or let279 (Or let275 (Or let98 (Or let504 let505)))) := by permutateOr lean_s2335, [1, 0, 4, 2, 3], (- 1)
let lean_s2337 := by R2 lean_s2334, lean_s2336, let275, [(- 1), (- 1)]
have lean_s2338 : (Or let1288 (Or let539 let1155)) := by timed cnfAndNeg [let538, let738]
have lean_s2339 : let1287 :=
  (scope (fun lean_a626 : let538 =>
    (scope (fun lean_a627 : let738 =>
      have lean_s2339 : let210 := by timed Eq.symm lean_a627
      have lean_s2340 : let738 := by timed Eq.symm lean_s2339
      let lean_s2341 := by timed flipCongrArg lean_s2340 [Eq]
      have lean_s2342 : (Eq let32 let32) := by timed rfl
      have lean_s2343 : (Eq let504 let537) := by timed congr lean_s2341 lean_s2342
      have lean_s2344 : (Eq let537 False) := by timed falseIntro lean_a626
      have lean_s2345 : (Eq let504 False) := by timed Eq.trans lean_s2343 lean_s2344
      have lean_s2346 : let1284 := by timed falseElim lean_s2345
      show let1284 from lean_s2346
  ))))
have lean_s2340 : (Implies let1288 let1284) := by liftOrNToImp lean_s2339, 2
have lean_s2341 : (Or (Not let1288) let1284) := by timed impliesElim lean_s2340
have lean_s2342 : let1287 := by R1 lean_s2338, lean_s2341, let1288, [(- 1), (- 1)]
have lean_s2343 : let1054 := by timed rfl
have lean_s2344 : let1000 := by timed rfl
let lean_s2345 := by timed flipCongrArg lean_s2344 [Eq]
have lean_s2346 : (Eq let644 let1000) := by timed congr lean_s2345 lean_r176
have lean_s2347 : (Eq let644 True) := by timed Eq.trans lean_s2346 lean_r422
have lean_s2348 : (Eq let540 True) := by timed Eq.trans lean_r245 lean_s2347
have lean_s2349 : let540 := by timed trueElim lean_s2348
let lean_s2350 := by timed congr lean_s2343 lean_s2349
let lean_s2351 := by timed congr lean_s2343 lean_s13
have lean_s2352 : (Eq let1284 let1284) := by timed rfl
let lean_s2353 := by timed congr lean_s2351 lean_s2352
have lean_s2354 : (Eq let1287 let1286) := by timed congr lean_s2350 lean_s2353
have lean_s2355 : let1286 := by timed eqResolve lean_s2342 lean_s2354
have lean_s2356 : let538 := by andElim lean_s29, 77
let lean_s2357 := by R1 lean_s2355, lean_s2356, let537, [(- 1), 0]
have lean_s2358 : let1284 := by R2 lean_s2357, lean_s45, let738, [(- 1), 0]
let lean_s2359 := by R1 lean_s2337, lean_s2358, let504, [(- 1), 0]
have lean_s2360 : (Eq let1035 let1469) := by timed flipCongrArg lean_r70 [Not]
have lean_s2361 : let1469 := by timed eqResolve lean_a543 lean_s2360
have lean_s2362 : (Or let1465 (Or let1289 let1190)) := by timed flipNotAnd lean_s2361 [let280, let279, let278]
have lean_s2363 : (Or let1289 let1466) := by permutateOr lean_s2362, [1, 0, 2], (- 1)
let lean_s2364 := by R1 lean_s2359, lean_s2363, let279, [(- 1), (- 1)]
have lean_s2365 : (Eq let1021 let1468) := by timed flipCongrArg lean_r71 [Not]
have lean_s2366 : let1468 := by timed eqResolve lean_a498 lean_s2365
have lean_s2367 : (Or let1190 (Or let1467 let1465)) := by timed flipNotAnd lean_s2366 [let278, let283, let280]
have lean_s2368 : (Or let1467 let1466) := by permutateOr lean_s2367, [1, 2, 0], (- 1)
have lean_s2369 : (Or let1230 (Or let352 (Or let1301 (Or let108 (Or let525 (Or let1456 (Or let725 (Or let152 (Or let98 (Or let505 (Or let1465 (Or let1190 let1466)))))))))))) := by R1 lean_s2364, lean_s2368, let283, [(- 1), (- 1)]
have lean_s2370 : (Or let1230 (Or let352 (Or let1301 (Or let108 (Or let525 (Or let1456 (Or let725 (Or let152 (Or let98 (Or let505 let1466)))))))))) := by factor lean_s2369, (- 1)
have lean_s2371 : let1126 := by andElim lean_s647, 20
have lean_s2372 : (Or let145 (Or let33 (Or let280 (Or let629 let745)))) := by permutateOr lean_s2371, [4, 3, 1, 0, 2], (- 1)
let lean_s2373 := by R2 lean_s2370, lean_s2372, let280, [(- 1), (- 1)]
have lean_s2374 : (Or let1464 (Or let290 let1156)) := by timed cnfAndNeg [let289, let975]
have lean_s2375 : let1463 :=
  (scope (fun lean_a627 : let289 =>
    (scope (fun lean_a628 : let975 =>
      have lean_s2375 : let160 := by timed Eq.symm lean_a628
      have lean_s2376 : let975 := by timed Eq.symm lean_s2375
      let lean_s2377 := by timed flipCongrArg lean_s2376 [Eq]
      have lean_s2378 : (Eq let199 let199) := by timed rfl
      have lean_s2379 : (Eq let629 let288) := by timed congr lean_s2377 lean_s2378
      have lean_s2380 : (Eq let288 False) := by timed falseIntro lean_a627
      have lean_s2381 : (Eq let629 False) := by timed Eq.trans lean_s2379 lean_s2380
      have lean_s2382 : let1460 := by timed falseElim lean_s2381
      show let1460 from lean_s2382
  ))))
have lean_s2376 : (Implies let1464 let1460) := by liftOrNToImp lean_s2375, 2
have lean_s2377 : (Or (Not let1464) let1460) := by timed impliesElim lean_s2376
have lean_s2378 : let1463 := by R1 lean_s2374, lean_s2377, let1464, [(- 1), (- 1)]
have lean_s2379 : let1054 := by timed rfl
have lean_s2380 : let294 := by timed rfl
let lean_s2381 := by timed flipCongrArg lean_s2380 [Eq]
have lean_s2382 : (Eq let291 let294) := by timed congr lean_s2381 lean_r74
have lean_s2383 : (Eq let291 True) := by timed Eq.trans lean_s2382 lean_r76
have lean_s2384 : (Eq let292 True) := by timed Eq.trans lean_r73 lean_s2383
have lean_s2385 : let292 := by timed trueElim lean_s2384
let lean_s2386 := by timed congr lean_s2379 lean_s2385
let lean_s2387 := by timed congr lean_s2379 lean_s759
have lean_s2388 : (Eq let1460 let1460) := by timed rfl
let lean_s2389 := by timed congr lean_s2387 lean_s2388
have lean_s2390 : (Eq let1463 let1462) := by timed congr lean_s2386 lean_s2389
have lean_s2391 : let1462 := by timed eqResolve lean_s2378 lean_s2390
have lean_s2392 : let289 := by andElim lean_s29, 1
let lean_s2393 := by R1 lean_s2391, lean_s2392, let288, [(- 1), 0]
have lean_s2394 : let1460 := by R2 lean_s2393, lean_s767, let975, [(- 1), 0]
let lean_s2395 := by R1 lean_s2373, lean_s2394, let629, [(- 1), 0]
have lean_s2396 : (Eq let1036 let1459) := by timed flipCongrArg lean_r77 [Not]
have lean_s2397 : let1459 := by timed eqResolve lean_a556 lean_s2396
have lean_s2398 : (Or let1458 let1457) := by timed flipNotAnd lean_s2397 [let33, let266, let142]
have lean_s2399 : (Or let1230 (Or let352 (Or let1301 (Or let108 (Or let525 (Or let1456 (Or let725 (Or let152 (Or let98 (Or let505 (Or let1190 (Or let145 (Or let745 let1457))))))))))))) := by R1 lean_s2395, lean_s2398, let33, [(- 1), (- 1)]
have lean_s2400 : (Or let1230 (Or let352 (Or let1301 (Or let108 (Or let525 (Or let1456 (Or let725 (Or let152 (Or let98 (Or let505 (Or let1190 (Or let145 (Or let745 let1077))))))))))))) := by factor lean_s2399, (- 1)
let lean_s2401 := by R2 lean_s2400, lean_s1748, let266, [(- 1), (- 1)]
let lean_s2402 := by R1 lean_s2401, lean_s1770, let439, [(- 1), 0]
have lean_s2403 : (Or let1450 let1446) := by timed cnfAndNeg [let278, let142]
have lean_s2404 : let1449 :=
  (scope (fun lean_a628 : let278 =>
    (scope (fun lean_a629 : let142 =>
      have lean_s2404 : let364 := by timed Eq.symm lean_a629
      have lean_s2405 : let142 := by timed Eq.symm lean_s2404
      have lean_s2406 : let1208 := by timed rfl
      let lean_s2407 := by timed flipCongrArg lean_s2406 [op]
      have lean_s2408 : let465 := by timed Eq.symm lean_a628
      have lean_s2409 : let278 := by timed Eq.symm lean_s2408
      have lean_s2410 : (Eq let91 let587) := by timed congr lean_s2407 lean_s2409
      have lean_s2411 : let624 := by timed Eq.trans lean_s2405 lean_s2410
      show let624 from lean_s2411
  ))))
have lean_s2405 : (Implies let1450 let624) := by liftOrNToImp lean_s2404, 2
have lean_s2406 : (Or (Not let1450) let624) := by timed impliesElim lean_s2405
have lean_s2407 : let1449 := by R1 lean_s2403, lean_s2406, let1450, [(- 1), (- 1)]
have lean_s2408 : (Or let624 let1446) := by permutateOr lean_s2407, [2, 0, 1], (- 1)
let lean_s2409 := by R2 lean_s2402, lean_s2408, let624, [(- 1), (- 1)]
have lean_s2410 : (Or let1448 (Or let1077 let1190)) := by timed cnfAndNeg [let142, let278]
have lean_s2411 : let1447 :=
  (scope (fun lean_a628 : let142 =>
    (scope (fun lean_a629 : let278 =>
      have lean_s2411 : let465 := by timed Eq.symm lean_a629
      have lean_s2412 : let278 := by timed Eq.symm lean_s2411
      have lean_s2413 : let1208 := by timed rfl
      let lean_s2414 := by timed flipCongrArg lean_s2413 [op]
      have lean_s2415 : let364 := by timed Eq.symm lean_a628
      have lean_s2416 : let142 := by timed Eq.symm lean_s2415
      have lean_s2417 : (Eq let79 let350) := by timed congr lean_s2414 lean_s2416
      have lean_s2418 : let351 := by timed Eq.trans lean_s2412 lean_s2417
      show let351 from lean_s2418
  ))))
have lean_s2412 : (Implies let1448 let351) := by liftOrNToImp lean_s2411, 2
have lean_s2413 : (Or (Not let1448) let351) := by timed impliesElim lean_s2412
have lean_s2414 : let1447 := by R1 lean_s2410, lean_s2413, let1448, [(- 1), (- 1)]
have lean_s2415 : (Or let351 let1446) := by permutateOr lean_s2414, [2, 1, 0], (- 1)
let lean_s2416 := by R2 lean_s2409, lean_s2415, let351, [(- 1), (- 1)]
have lean_s2417 : (Or let1443 (Or let976 (Or let1156 (Or let1301 let1155)))) := by timed cnfAndNeg [let854, let975, let717, let738]
have lean_s2418 : let1442 :=
  (scope (fun lean_a628 : let854 =>
    (scope (fun lean_a629 : let975 =>
      (scope (fun lean_a630 : let717 =>
        (scope (fun lean_a631 : let738 =>
          have lean_s2418 : let160 := by timed Eq.symm lean_a629
          have lean_s2419 : let975 := by timed Eq.symm lean_s2418
          let lean_s2420 := by timed flipCongrArg lean_s2419 [Eq]
          have lean_s2421 : let210 := by timed Eq.symm lean_a631
          have lean_s2422 : let254 := by timed Eq.symm lean_a630
          have lean_s2423 : let717 := by timed Eq.symm lean_s2422
          have lean_s2424 : let1445 := by timed Eq.trans lean_s2421 lean_s2423
          have lean_s2425 : (Eq let745 let853) := by timed congr lean_s2420 lean_s2424
          have lean_s2426 : let1220 := by timed falseIntro lean_a628
          have lean_s2427 : let1444 := by timed Eq.trans lean_s2425 lean_s2426
          have lean_s2428 : let1438 := by timed falseElim lean_s2427
          show let1438 from lean_s2428
  ))))))))
have lean_s2419 : (Implies let1443 let1438) := by liftOrNToImp lean_s2418, 4
have lean_s2420 : (Or (Not let1443) let1438) := by timed impliesElim lean_s2419
have lean_s2421 : let1442 := by R1 lean_s2417, lean_s2420, let1443, [(- 1), (- 1)]
have lean_s2422 : let1054 := by timed rfl
let lean_s2423 := by timed congr lean_s2422 lean_s757
let lean_s2424 := by timed congr lean_s2422 lean_s759
let lean_s2425 := by timed congr lean_s2422 lean_s1418
let lean_s2426 := by timed congr lean_s2422 lean_s13
have lean_s2427 : (Eq let1438 let1438) := by timed rfl
let lean_s2428 := by timed congr lean_s2426 lean_s2427
let lean_s2429 := by timed congr lean_s2425 lean_s2428
let lean_s2430 := by timed congr lean_s2424 lean_s2429
have lean_s2431 : (Eq let1442 let1441) := by timed congr lean_s2423 lean_s2430
have lean_s2432 : let1441 := by timed eqResolve lean_s2421 lean_s2431
have lean_s2433 : (Or let853 (Or let1156 (Or let1155 (Or let1438 let1301)))) := by permutateOr lean_s2432, [0, 1, 3, 4, 2], (- 1)
let lean_s2434 := by R1 lean_s2416, lean_s2433, let745, [(- 1), (- 1)]
let lean_s2435 := by R1 lean_s2434, lean_s765, let853, [(- 1), 0]
let lean_s2436 := by R2 lean_s2435, lean_s45, let738, [(- 1), 0]
have lean_s2437 : (Or let1301 (Or let108 (Or let525 (Or let725 (Or let152 (Or let98 (Or let505 (Or let1190 (Or let145 (Or let1077 (Or let31 (Or let109 (Or let505 (Or let1190 (Or let1077 (Or let1190 (Or let1077 let1301))))))))))))))))) := by R2 lean_s2436, lean_s767, let975, [(- 1), 0]
have lean_s2438 : (Or let1301 (Or let108 (Or let525 (Or let725 (Or let152 (Or let98 (Or let505 (Or let1190 (Or let145 (Or let1077 (Or let31 let109))))))))))) := by factor lean_s2437, 17
have lean_s2439 : (Or let1436 (Or let323 (Or let1155 let1437))) := by timed cnfAndNeg [let322, let738, let141, let734]
have lean_s2440 : let1434 :=
  (scope (fun lean_a628 : let322 =>
    (scope (fun lean_a629 : let738 =>
      (scope (fun lean_a630 : let141 =>
        (scope (fun lean_a631 : let734 =>
          have lean_s2440 : let210 := by timed Eq.symm lean_a629
          have lean_s2441 : let738 := by timed Eq.symm lean_s2440
          let lean_s2442 := by timed flipCongrArg lean_s2441 [Eq]
          have lean_s2443 : let246 := by timed Eq.symm lean_a631
          have lean_s2444 : let415 := by timed Eq.symm lean_a630
          have lean_s2445 : let141 := by timed Eq.symm lean_s2444
          have lean_s2446 : let1397 := by timed Eq.trans lean_s2443 lean_s2445
          have lean_s2447 : (Eq let505 let321) := by timed congr lean_s2442 lean_s2446
          have lean_s2448 : let1395 := by timed falseIntro lean_a628
          have lean_s2449 : let1280 := by timed Eq.trans lean_s2447 lean_s2448
          have lean_s2450 : let1273 := by timed falseElim lean_s2449
          show let1273 from lean_s2450
  ))))))))
have lean_s2441 : (Implies let1436 let1273) := by liftOrNToImp lean_s2440, 4
have lean_s2442 : (Or (Not let1436) let1273) := by timed impliesElim lean_s2441
have lean_s2443 : let1434 := by R1 lean_s2439, lean_s2442, let1436, [(- 1), (- 1)]
have lean_s2444 : let1054 := by timed rfl
let lean_s2445 := by timed congr lean_s2444 lean_s11
let lean_s2446 := by timed congr lean_s2444 lean_s13
let lean_s2447 := by timed congr lean_s2444 lean_s15
let lean_s2448 := by timed congr lean_s2444 lean_s17
let lean_s2449 := by timed congr lean_s2448 lean_s1887
let lean_s2450 := by timed congr lean_s2447 lean_s2449
let lean_s2451 := by timed congr lean_s2446 lean_s2450
have lean_s2452 : (Eq let1434 let1433) := by timed congr lean_s2445 lean_s2451
have lean_s2453 : let1433 := by timed eqResolve lean_s2443 lean_s2452
have lean_s2454 : (Or let321 (Or let1155 (Or let1194 (Or let1303 let1273)))) := by permutateOr lean_s2453, [0, 1, 3, 2, 4], (- 1)
let lean_s2455 := by R1 lean_s2438, lean_s2454, let505, [(- 1), (- 1)]
let lean_s2456 := by R1 lean_s2455, lean_s30, let321, [(- 1), 0]
let lean_s2457 := by R2 lean_s2456, lean_s43, let734, [(- 1), 0]
let lean_s2458 := by R2 lean_s2457, lean_s45, let738, [(- 1), 0]
have lean_s2459 : (Or let1431 (Or let308 let1407)) := by timed cnfAndNeg [let307, let122]
have lean_s2460 : let1430 :=
  (scope (fun lean_a628 : let307 =>
    (scope (fun lean_a629 : let122 =>
      have lean_s2460 : let1208 := by timed rfl
      let lean_s2461 := by timed flipCongrArg lean_s2460 [Eq]
      have lean_s2462 : let483 := by timed Eq.symm lean_a629
      have lean_s2463 : (Eq let725 let306) := by timed congr lean_s2461 lean_s2462
      have lean_s2464 : (Eq let306 False) := by timed falseIntro lean_a628
      have lean_s2465 : (Eq let725 False) := by timed Eq.trans lean_s2463 lean_s2464
      have lean_s2466 : let1427 := by timed falseElim lean_s2465
      show let1427 from lean_s2466
  ))))
have lean_s2461 : (Implies let1431 let1427) := by liftOrNToImp lean_s2460, 2
have lean_s2462 : (Or (Not let1431) let1427) := by timed impliesElim lean_s2461
have lean_s2463 : let1430 := by R1 lean_s2459, lean_s2462, let1431, [(- 1), (- 1)]
have lean_s2464 : let1054 := by timed rfl
have lean_s2465 : let312 := by timed rfl
let lean_s2466 := by timed flipCongrArg lean_s2465 [Eq]
have lean_s2467 : (Eq let309 let312) := by timed congr lean_s2466 lean_r82
have lean_s2468 : (Eq let309 True) := by timed Eq.trans lean_s2467 lean_r84
have lean_s2469 : (Eq let310 True) := by timed Eq.trans lean_r80 lean_s2468
have lean_s2470 : let310 := by timed trueElim lean_s2469
let lean_s2471 := by timed congr lean_s2464 lean_s2470
let lean_s2472 := by timed congr lean_s2464 lean_s1623
have lean_s2473 : (Eq let1427 let1427) := by timed rfl
let lean_s2474 := by timed congr lean_s2472 lean_s2473
have lean_s2475 : (Eq let1430 let1429) := by timed congr lean_s2471 lean_s2474
have lean_s2476 : let1429 := by timed eqResolve lean_s2463 lean_s2475
let lean_s2477 := by R1 lean_s2458, lean_s2476, let725, [(- 1), (- 1)]
let lean_s2478 := by R1 lean_s2477, lean_s710, let306, [(- 1), 0]
let lean_s2479 := by R2 lean_s2478, lean_s1537, let278, [(- 1), (- 1)]
let lean_s2480 := by R1 lean_s2479, lean_s1540, let747, [(- 1), 0]
let lean_s2481 := by R1 lean_s2480, lean_s1562, let979, [(- 1), 0]
let lean_s2482 := by R1 lean_s2481, lean_s1425, let62, [(- 1), (- 1)]
let lean_s2483 := by R1 lean_s2482, lean_s30, let321, [(- 1), 0]
let lean_s2484 := by R2 lean_s2483, lean_s43, let734, [(- 1), 0]
let lean_s2485 := by R2 lean_s2484, lean_s45, let738, [(- 1), 0]
let lean_s2486 := by R1 lean_s2485, lean_s1840, let109, [(- 1), (- 1)]
have lean_s2487 : (Or let1301 (Or let108 (Or let525 (Or let152 (Or let98 (Or let145 (Or let1077 (Or let31 (Or let1303 (Or let1407 (Or let148 (Or let1303 (Or let1301 let1301))))))))))))) := by R1 lean_s2486, lean_s1842, let846, [(- 1), 0]
have lean_s2488 : (Or let1301 (Or let108 (Or let525 (Or let152 (Or let98 (Or let145 (Or let1077 (Or let31 (Or let1303 (Or let1407 let148)))))))))) := by factor lean_s2487, 13
let lean_s2489 := by R2 lean_s2488, lean_s649, let717, [(- 1), (- 1)]
let lean_s2490 := by R1 lean_s2489, lean_s671, let703, [(- 1), 0]
let lean_s2491 := by R1 lean_s2490, lean_s713, let857, [(- 1), 0]
have lean_s2492 : (Eq let1024 let1423) := by timed flipCongrArg lean_r224 [Not]
have lean_s2493 : let1423 := by timed eqResolve lean_a509 lean_s2492
have lean_s2494 : (Or let1171 (Or let1153 let1303)) := by timed flipNotAnd lean_s2493 [let313, let108, let141]
have lean_s2495 : (Or let1171 (Or let1303 let1153)) := by permutateOr lean_s2494, [0, 2, 1], (- 1)
let lean_s2496 := by R1 lean_s2491, lean_s2495, let108, [(- 1), (- 1)]
have lean_s2497 : (Or let525 (Or let152 (Or let98 (Or let145 (Or let1077 (Or let31 (Or let1303 (Or let1407 (Or let148 (Or let98 (Or let1171 (Or let1303 (Or let1171 let1303))))))))))))) := by R1 lean_s2496, lean_s893, let314, [(- 1), (- 1)]
have lean_s2498 : (Or let525 (Or let152 (Or let98 (Or let145 (Or let1077 (Or let31 (Or let1303 (Or let1407 (Or let148 let1171))))))))) := by factor lean_s2497, 13
let lean_s2499 := by R2 lean_s2498, lean_s798, let313, [(- 1), (- 1)]
let lean_s2500 := by R1 lean_s2499, lean_s820, let578, [(- 1), 0]
let lean_s2501 := by R1 lean_s2500, lean_s2250, let554, [(- 1), 0]
let lean_s2502 := by R1 lean_s2501, lean_s1509, let100, [(- 1), (- 1)]
let lean_s2503 := by R1 lean_s2502, lean_s1511, let82, [(- 1), 0]
let lean_s2504 := by R1 lean_s2503, lean_s1666, let145, [(- 1), (- 1)]
have lean_s2505 : (Or let525 (Or let152 (Or let98 (Or let1077 (Or let31 (Or let1303 (Or let1407 (Or let148 (Or let120 let1416))))))))) := by R1 lean_s2504, lean_s1668, let338, [(- 1), 0]
have lean_s2506 : (Or let525 (Or let152 (Or let98 (Or let1077 (Or let31 (Or let1303 (Or let1407 (Or let148 let120)))))))) := by factor lean_s2505, 10
let lean_s2507 := by R2 lean_s2506, lean_s1428, let141, [(- 1), (- 1)]
let lean_s2508 := by R1 lean_s2507, lean_s1540, let747, [(- 1), 0]
let lean_s2509 := by R1 lean_s2508, lean_s1405, let748, [(- 1), 0]
let lean_s2510 := by R1 lean_s2509, lean_s2257, let98, [(- 1), (- 1)]
let lean_s2511 := by R1 lean_s2510, lean_s2259, let625, [(- 1), 0]
have lean_s2512 : (Eq let1009 let1415) := by timed flipCongrArg lean_r86 [Not]
have lean_s2513 : let1415 := by timed eqResolve lean_a461 lean_s2512
have lean_s2514 : (Or let1407 (Or let1077 let1259)) := by timed flipNotAnd lean_s2513 [let122, let142, let97]
have lean_s2515 : (Or let1259 let1414) := by permutateOr lean_s2514, [2, 0, 1], (- 1)
have lean_s2516 : (Or let525 (Or let152 (Or let1077 (Or let31 (Or let1407 (Or let148 (Or let120 (Or let88 (Or let1077 let1414))))))))) := by R1 lean_s2511, lean_s2515, let97, [(- 1), (- 1)]
have lean_s2517 : (Or let525 (Or let152 (Or let1077 (Or let31 (Or let1407 (Or let148 (Or let120 let88))))))) := by factor lean_s2516, 10
let lean_s2518 := by R2 lean_s2517, lean_s2218, let142, [(- 1), (- 1)]
let lean_s2519 := by R1 lean_s2518, lean_s2240, let642, [(- 1), 0]
let lean_s2520 := by R1 lean_s2519, lean_s2250, let554, [(- 1), 0]
let lean_s2521 := by R1 lean_s2520, lean_s1785, let88, [(- 1), (- 1)]
let lean_s2522 := by R1 lean_s2521, lean_s1449, let432, [(- 1), 0]
have lean_s2523 : (Eq let1034 let1409) := by timed flipCongrArg lean_r357 [Not]
have lean_s2524 : let1409 := by timed eqResolve lean_a536 lean_s2523
have lean_s2525 : (Or let1407 (Or let1148 let152)) := by timed flipNotAnd lean_s2524 [let122, let546, let151]
have lean_s2526 : (Or let1407 (Or let152 let1148)) := by permutateOr lean_s2525, [0, 2, 1], (- 1)
let lean_s2527 := by R1 lean_s2522, lean_s2526, let546, [(- 1), (- 1)]
have lean_s2528 : (Eq let1016 let1408) := by timed flipCongrArg lean_r87 [Not]
have lean_s2529 : let1408 := by timed eqResolve lean_a484 lean_s2528
have lean_s2530 : (Or let152 (Or let1203 let1407)) := by timed flipNotAnd lean_s2529 [let151, let148, let122]
have lean_s2531 : (Or let1407 let1258) := by permutateOr lean_s2530, [2, 0, 1], (- 1)
have lean_s2532 : (Or let525 (Or let152 (Or let31 (Or let1407 (Or let120 (Or let56 (Or let1407 (Or let1407 (Or let152 (Or let1407 let152)))))))))) := by R1 lean_s2527, lean_s2531, let148, [(- 1), (- 1)]
have lean_s2533 : (Or let525 (Or let152 (Or let31 (Or let1407 (Or let120 let56))))) := by factor lean_s2532, 10
let lean_s2534 := by R2 lean_s2533, lean_s1048, let122, [(- 1), (- 1)]
let lean_s2535 := by R1 lean_s2534, lean_s1063, let599, [(- 1), 0]
let lean_s2536 := by R1 lean_s2535, lean_s713, let857, [(- 1), 0]
have lean_s2537 : (Or let1400 let1398) := by timed cnfAndNeg [let313, let87]
have lean_s2538 : let1399 :=
  (scope (fun lean_a629 : let313 =>
    (scope (fun lean_a630 : let87 =>
      have lean_s2538 : let172 := by timed Eq.symm lean_a630
      have lean_s2539 : let87 := by timed Eq.symm lean_s2538
      have lean_s2540 : let173 := by timed Eq.symm lean_a629
      have lean_s2541 : let625 := by timed Eq.trans lean_s2539 lean_s2540
      show let625 from lean_s2541
  ))))
have lean_s2539 : (Implies let1400 let625) := by liftOrNToImp lean_s2538, 2
have lean_s2540 : (Or (Not let1400) let625) := by timed impliesElim lean_s2539
have lean_s2541 : let1399 := by R1 lean_s2537, lean_s2540, let1400, [(- 1), (- 1)]
have lean_s2542 : (Or let625 let1398) := by permutateOr lean_s2541, [2, 0, 1], (- 1)
let lean_s2543 := by R1 lean_s2542, lean_s2259, let625, [(- 1), 0]
let lean_s2544 := by R2 lean_s2543, lean_s798, let313, [(- 1), (- 1)]
let lean_s2545 := by R1 lean_s2544, lean_s820, let578, [(- 1), 0]
let lean_s2546 := by R1 lean_s2545, lean_s2250, let554, [(- 1), 0]
have lean_s2547 : (Eq let1023 let1192) := by timed flipCongrArg lean_r382 [Not]
have lean_s2548 : let1192 := by timed eqResolve lean_a508 lean_s2547
have lean_s2549 : (Or let152 (Or let1190 let1191)) := by timed flipNotAnd lean_s2548 [let151, let278, let100]
have lean_s2550 : (Or let1191 (Or let152 let1190)) := by permutateOr lean_s2549, [2, 0, 1], (- 1)
let lean_s2551 := by R1 lean_s2546, lean_s2550, let100, [(- 1), (- 1)]
let lean_s2552 := by R2 lean_s2551, lean_s1537, let278, [(- 1), (- 1)]
let lean_s2553 := by R1 lean_s2552, lean_s1540, let747, [(- 1), 0]
let lean_s2554 := by R1 lean_s2553, lean_s1562, let979, [(- 1), 0]
let lean_s2555 := by R1 lean_s2336, lean_s2358, let504, [(- 1), 0]
have lean_s2556 : (Or let1293 (Or let381 (Or let1085 (Or let1289 let1182)))) := by timed cnfAndNeg [let380, let967, let279, let738, let87]
have lean_s2557 : let1292 :=
  (scope (fun lean_a630 : let380 =>
    (scope (fun lean_a631 : let967 =>
      (scope (fun lean_a632 : let279 =>
        (scope (fun lean_a633 : let738 =>
          (scope (fun lean_a634 : let87 =>
            have lean_s2557 : let188 := by timed Eq.symm lean_a631
            have lean_s2558 : let967 := by timed Eq.symm lean_s2557
            let lean_s2559 := by timed flipCongrArg lean_s2558 [Eq]
            have lean_s2560 : let210 := by timed Eq.symm lean_a633
            have lean_s2561 : let194 := by timed Eq.symm lean_a632
            have lean_s2562 : let279 := by timed Eq.symm lean_s2561
            have lean_s2563 : let1298 := by timed Eq.trans lean_s2560 lean_s2562
            have lean_s2564 : let1297 := by timed Eq.symm lean_s2563
            have lean_s2565 : let172 := by timed Eq.symm lean_a634
            have lean_s2566 : let87 := by timed Eq.symm lean_s2565
            have lean_s2567 : let172 := by timed Eq.symm lean_s2566
            have lean_s2568 : let1168 := by timed Eq.trans lean_s2567 lean_a633
            have lean_s2569 : let1169 := by timed Eq.symm lean_s2568
            have lean_s2570 : let1296 := by timed Eq.trans lean_s2564 lean_s2569
            have lean_s2571 : let1295 := by timed Eq.symm lean_s2570
            have lean_s2572 : (Eq let313 let379) := by timed congr lean_s2559 lean_s2571
            have lean_s2573 : let1294 := by timed falseIntro lean_a630
            have lean_s2574 : let1180 := by timed Eq.trans lean_s2572 lean_s2573
            have lean_s2575 : let1171 := by timed falseElim lean_s2574
            show let1171 from lean_s2575
  ))))))))))
have lean_s2558 : (Implies let1293 let1171) := by liftOrNToImp lean_s2557, 5
have lean_s2559 : (Or (Not let1293) let1171) := by timed impliesElim lean_s2558
have lean_s2560 : let1292 := by R1 lean_s2556, lean_s2559, let1293, [(- 1), (- 1)]
have lean_s2561 : let1054 := by timed rfl
have lean_s2562 : let385 := by timed rfl
let lean_s2563 := by timed flipCongrArg lean_s2562 [Eq]
have lean_s2564 : (Eq let382 let385) := by timed congr lean_s2563 lean_r111
have lean_s2565 : (Eq let382 True) := by timed Eq.trans lean_s2564 lean_r112
have lean_s2566 : (Eq let383 True) := by timed Eq.trans lean_r109 lean_s2565
have lean_s2567 : let383 := by timed trueElim lean_s2566
let lean_s2568 := by timed congr lean_s2561 lean_s2567
let lean_s2569 := by timed congr lean_s2561 lean_s730
have lean_s2570 : (Eq let1289 let1289) := by timed rfl
let lean_s2571 := by timed congr lean_s2561 lean_s2570
let lean_s2572 := by timed congr lean_s2561 lean_s13
let lean_s2573 := by timed congr lean_s2561 lean_s839
let lean_s2574 := by timed congr lean_s2573 lean_s841
let lean_s2575 := by timed congr lean_s2572 lean_s2574
let lean_s2576 := by timed congr lean_s2571 lean_s2575
let lean_s2577 := by timed congr lean_s2569 lean_s2576
have lean_s2578 : (Eq let1292 let1291) := by timed congr lean_s2568 lean_s2577
have lean_s2579 : let1291 := by timed eqResolve lean_s2560 lean_s2578
have lean_s2580 : (Or let379 (Or let1085 (Or let1155 (Or let1171 (Or let543 let1289))))) := by permutateOr lean_s2579, [0, 1, 3, 5, 4, 2], (- 1)
let lean_s2581 := by R1 lean_s2555, lean_s2580, let279, [(- 1), (- 1)]
have lean_s2582 : let380 := by andElim lean_s29, 65
let lean_s2583 := by R1 lean_s2581, lean_s2582, let379, [(- 1), 0]
let lean_s2584 := by R2 lean_s2583, lean_s45, let738, [(- 1), 0]
let lean_s2585 := by R2 lean_s2584, lean_s741, let967, [(- 1), 0]
have lean_s2586 : (Or let1374 (Or let335 (Or let543 let1376))) := by timed cnfAndNeg [let334, let87, let88, let734]
have lean_s2587 : let1372 :=
  (scope (fun lean_a632 : let334 =>
    (scope (fun lean_a633 : let87 =>
      (scope (fun lean_a634 : let88 =>
        (scope (fun lean_a635 : let734 =>
          have lean_s2587 : let172 := by timed Eq.symm lean_a633
          have lean_s2588 : let87 := by timed Eq.symm lean_s2587
          let lean_s2589 := by timed flipCongrArg lean_s2588 [Eq]
          have lean_s2590 : let246 := by timed Eq.symm lean_a635
          have lean_s2591 : let482 := by timed Eq.symm lean_a634
          have lean_s2592 : let88 := by timed Eq.symm lean_s2591
          have lean_s2593 : let1375 := by timed Eq.trans lean_s2590 lean_s2592
          have lean_s2594 : (Eq let505 let333) := by timed congr lean_s2589 lean_s2593
          have lean_s2595 : (Eq let333 False) := by timed falseIntro lean_a632
          have lean_s2596 : let1280 := by timed Eq.trans lean_s2594 lean_s2595
          have lean_s2597 : let1273 := by timed falseElim lean_s2596
          show let1273 from lean_s2597
  ))))))))
have lean_s2588 : (Implies let1374 let1273) := by liftOrNToImp lean_s2587, 4
have lean_s2589 : (Or (Not let1374) let1273) := by timed impliesElim lean_s2588
have lean_s2590 : let1372 := by R1 lean_s2586, lean_s2589, let1374, [(- 1), (- 1)]
have lean_s2591 : let1054 := by timed rfl
have lean_s2592 : let899 := by timed rfl
let lean_s2593 := by timed flipCongrArg lean_s2592 [Eq]
have lean_s2594 : (Eq let336 let899) := by timed congr lean_s2593 lean_r327
have lean_s2595 : (Eq let336 True) := by timed Eq.trans lean_s2594 lean_r337
have lean_s2596 : (Eq let337 True) := by timed Eq.trans lean_r93 lean_s2595
have lean_s2597 : let337 := by timed trueElim lean_s2596
let lean_s2598 := by timed congr lean_s2591 lean_s2597
let lean_s2599 := by timed congr lean_s2591 lean_s839
let lean_s2600 := by timed congr lean_s2591 lean_s1782
let lean_s2601 := by timed congr lean_s2591 lean_s17
let lean_s2602 := by timed congr lean_s2601 lean_s1887
let lean_s2603 := by timed congr lean_s2600 lean_s2602
let lean_s2604 := by timed congr lean_s2599 lean_s2603
have lean_s2605 : (Eq let1372 let1371) := by timed congr lean_s2598 lean_s2604
have lean_s2606 : let1371 := by timed eqResolve lean_s2590 lean_s2605
have lean_s2607 : (Or let333 (Or let1194 (Or let543 (Or let1321 let1273)))) := by permutateOr lean_s2606, [0, 3, 1, 2, 4], (- 1)
let lean_s2608 := by R1 lean_s2585, lean_s2607, let505, [(- 1), (- 1)]
have lean_s2609 : let334 := by andElim lean_s29, 40
let lean_s2610 := by R1 lean_s2608, lean_s2609, let333, [(- 1), 0]
let lean_s2611 := by R2 lean_s2610, lean_s43, let734, [(- 1), 0]
let lean_s2612 := by R2 lean_s2611, lean_s798, let313, [(- 1), (- 1)]
let lean_s2613 := by R1 lean_s2612, lean_s820, let578, [(- 1), 0]
let lean_s2614 := by R1 lean_s2613, lean_s2250, let554, [(- 1), 0]
let lean_s2615 := by R2 lean_s2614, lean_s1428, let88, [(- 1), (- 1)]
let lean_s2616 := by R1 lean_s2615, lean_s1540, let747, [(- 1), 0]
let lean_s2617 := by R1 lean_s2616, lean_s1405, let748, [(- 1), 0]
have lean_s2618 : (Eq let1032 let1302) := by timed flipCongrArg lean_r406 [Not]
have lean_s2619 : let1302 := by timed eqResolve lean_a534 lean_s2618
have lean_s2620 : (Or let1191 (Or let1301 let152)) := by timed flipNotAnd lean_s2619 [let100, let717, let151]
have lean_s2621 : (Or let1191 (Or let152 let1301)) := by permutateOr lean_s2620, [0, 2, 1], (- 1)
let lean_s2622 := by R1 lean_s2617, lean_s2621, let100, [(- 1), (- 1)]
let lean_s2623 := by R1 lean_s2622, lean_s1425, let141, [(- 1), (- 1)]
let lean_s2624 := by R1 lean_s2623, lean_s30, let321, [(- 1), 0]
let lean_s2625 := by R2 lean_s2624, lean_s43, let734, [(- 1), 0]
have lean_s2626 : (Or let275 (Or let98 (Or let543 (Or let543 (Or let120 (Or let97 (Or let152 (Or let1301 let1390)))))))) := by R2 lean_s2625, lean_s45, let738, [(- 1), 0]
have lean_s2627 : (Or let275 (Or let98 (Or let543 (Or let120 (Or let97 (Or let152 let1390)))))) := by factor lean_s2626, (- 1)
let lean_s2628 := by R2 lean_s2627, lean_s649, let717, [(- 1), (- 1)]
let lean_s2629 := by R1 lean_s2628, lean_s671, let703, [(- 1), 0]
let lean_s2630 := by R1 lean_s2629, lean_s713, let857, [(- 1), 0]
have lean_s2631 : (Or let1389 (Or let1211 let1387)) := by timed cnfAndNeg [let123, let712]
have lean_s2632 : let1388 :=
  (scope (fun lean_a634 : let123 =>
    (scope (fun lean_a635 : let712 =>
      have lean_s2632 : let490 := by timed Eq.symm lean_a635
      have lean_s2633 : let263 := by timed Eq.symm lean_a634
      have lean_s2634 : let123 := by timed Eq.symm lean_s2633
      have lean_s2635 : let827 := by timed Eq.trans lean_s2632 lean_s2634
      show let827 from lean_s2635
  ))))
have lean_s2633 : (Implies let1389 let827) := by liftOrNToImp lean_s2632, 2
have lean_s2634 : (Or (Not let1389) let827) := by timed impliesElim lean_s2633
have lean_s2635 : let1388 := by R1 lean_s2631, lean_s2634, let1389, [(- 1), (- 1)]
have lean_s2636 : (Or let827 (Or let1387 let1211)) := by permutateOr lean_s2635, [2, 1, 0], (- 1)
have lean_s2637 : let828 := by andElim lean_s29, 26
let lean_s2638 := by R1 lean_s2636, lean_s2637, let827, [(- 1), 0]
have lean_s2639 : let1136 := by andElim lean_s647, 10
have lean_s2640 : (Or let712 (Or let399 (Or let58 (Or let918 let750)))) := by permutateOr lean_s2639, [2, 3, 4, 0, 1], (- 1)
let lean_s2641 := by R2 lean_s2638, lean_s2640, let712, [(- 1), (- 1)]
have lean_s2642 : (Or let1386 (Or let329 let1156)) := by timed cnfAndNeg [let328, let975]
have lean_s2643 : let1385 :=
  (scope (fun lean_a635 : let328 =>
    (scope (fun lean_a636 : let975 =>
      have lean_s2643 : let160 := by timed Eq.symm lean_a636
      have lean_s2644 : let975 := by timed Eq.symm lean_s2643
      let lean_s2645 := by timed flipCongrArg lean_s2644 [Eq]
      have lean_s2646 : (Eq let177 let177) := by timed rfl
      have lean_s2647 : (Eq let918 let327) := by timed congr lean_s2645 lean_s2646
      have lean_s2648 : (Eq let327 False) := by timed falseIntro lean_a635
      have lean_s2649 : (Eq let918 False) := by timed Eq.trans lean_s2647 lean_s2648
      have lean_s2650 : let1382 := by timed falseElim lean_s2649
      show let1382 from lean_s2650
  ))))
have lean_s2644 : (Implies let1386 let1382) := by liftOrNToImp lean_s2643, 2
have lean_s2645 : (Or (Not let1386) let1382) := by timed impliesElim lean_s2644
have lean_s2646 : let1385 := by R1 lean_s2642, lean_s2645, let1386, [(- 1), (- 1)]
have lean_s2647 : let1054 := by timed rfl
have lean_s2648 : let332 := by timed rfl
let lean_s2649 := by timed flipCongrArg lean_s2648 [Eq]
have lean_s2650 : (Eq let330 let332) := by timed congr lean_s2649 lean_r91
have lean_s2651 : (Eq let330 True) := by timed Eq.trans lean_s2650 lean_r92
have lean_s2652 : (Eq let331 True) := by timed Eq.trans lean_r90 lean_s2651
have lean_s2653 : let331 := by timed trueElim lean_s2652
let lean_s2654 := by timed congr lean_s2647 lean_s2653
let lean_s2655 := by timed congr lean_s2647 lean_s759
have lean_s2656 : (Eq let1382 let1382) := by timed rfl
let lean_s2657 := by timed congr lean_s2655 lean_s2656
have lean_s2658 : (Eq let1385 let1384) := by timed congr lean_s2654 lean_s2657
have lean_s2659 : let1384 := by timed eqResolve lean_s2646 lean_s2658
have lean_s2660 : let328 := by andElim lean_s29, 0
let lean_s2661 := by R1 lean_s2659, lean_s2660, let327, [(- 1), 0]
have lean_s2662 : let1382 := by R2 lean_s2661, lean_s767, let975, [(- 1), 0]
let lean_s2663 := by R1 lean_s2641, lean_s2662, let918, [(- 1), 0]
have lean_s2664 : (Or let1381 (Or let953 (Or let1156 (Or let543 (Or let1155 let1289))))) := by timed cnfAndNeg [let809, let975, let87, let738, let279]
have lean_s2665 : let1380 :=
  (scope (fun lean_a636 : let809 =>
    (scope (fun lean_a637 : let975 =>
      (scope (fun lean_a638 : let87 =>
        (scope (fun lean_a639 : let738 =>
          (scope (fun lean_a640 : let279 =>
            have lean_s2665 : let160 := by timed Eq.symm lean_a637
            have lean_s2666 : let975 := by timed Eq.symm lean_s2665
            let lean_s2667 := by timed flipCongrArg lean_s2666 [Eq]
            have lean_s2668 : let210 := by timed Eq.symm lean_a639
            have lean_s2669 : let172 := by timed Eq.symm lean_a638
            have lean_s2670 : let87 := by timed Eq.symm lean_s2669
            have lean_s2671 : let1169 := by timed Eq.trans lean_s2668 lean_s2670
            have lean_s2672 : let1168 := by timed Eq.symm lean_s2671
            have lean_s2673 : let194 := by timed Eq.symm lean_a640
            have lean_s2674 : let1297 := by timed Eq.trans lean_s2673 lean_a639
            have lean_s2675 : let1298 := by timed Eq.symm lean_s2674
            have lean_s2676 : let1295 := by timed Eq.trans lean_s2672 lean_s2675
            have lean_s2677 : let1296 := by timed Eq.symm lean_s2676
            have lean_s2678 : (Eq let399 let808) := by timed congr lean_s2667 lean_s2677
            have lean_s2679 : let1162 := by timed falseIntro lean_a636
            have lean_s2680 : (Eq let399 False) := by timed Eq.trans lean_s2678 lean_s2679
            have lean_s2681 : let1377 := by timed falseElim lean_s2680
            show let1377 from lean_s2681
  ))))))))))
have lean_s2666 : (Implies let1381 let1377) := by liftOrNToImp lean_s2665, 5
have lean_s2667 : (Or (Not let1381) let1377) := by timed impliesElim lean_s2666
have lean_s2668 : let1380 := by R1 lean_s2664, lean_s2667, let1381, [(- 1), (- 1)]
have lean_s2669 : let1054 := by timed rfl
let lean_s2670 := by timed congr lean_s2669 lean_s864
let lean_s2671 := by timed congr lean_s2669 lean_s759
let lean_s2672 := by timed congr lean_s2669 lean_s839
let lean_s2673 := by timed congr lean_s2669 lean_s13
let lean_s2674 := by timed congr lean_s2669 lean_s2570
have lean_s2675 : (Eq let1377 let1377) := by timed rfl
let lean_s2676 := by timed congr lean_s2674 lean_s2675
let lean_s2677 := by timed congr lean_s2673 lean_s2676
let lean_s2678 := by timed congr lean_s2672 lean_s2677
let lean_s2679 := by timed congr lean_s2671 lean_s2678
have lean_s2680 : (Eq let1380 let1379) := by timed congr lean_s2670 lean_s2679
have lean_s2681 : let1379 := by timed eqResolve lean_s2668 lean_s2680
have lean_s2682 : (Or let808 (Or let1156 (Or let1155 (Or let543 (Or let1377 let1289))))) := by permutateOr lean_s2681, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s2683 := by R1 lean_s2663, lean_s2682, let399, [(- 1), (- 1)]
let lean_s2684 := by R1 lean_s2683, lean_s882, let808, [(- 1), 0]
let lean_s2685 := by R2 lean_s2684, lean_s45, let738, [(- 1), 0]
let lean_s2686 := by R2 lean_s2685, lean_s767, let975, [(- 1), 0]
let lean_s2687 := by R2 lean_s2686, lean_s2336, let279, [(- 1), (- 1)]
let lean_s2688 := by R1 lean_s2687, lean_s2358, let504, [(- 1), 0]
let lean_s2689 := by R1 lean_s2688, lean_s2607, let505, [(- 1), (- 1)]
let lean_s2690 := by R1 lean_s2689, lean_s2609, let333, [(- 1), 0]
let lean_s2691 := by R2 lean_s2690, lean_s43, let734, [(- 1), 0]
let lean_s2692 := by R1 lean_s2691, lean_s2169, let58, [(- 1), (- 1)]
have lean_s2693 : (Or let1211 (Or let750 (Or let543 (Or let275 (Or let98 (Or let543 (Or let1321 let1321))))))) := by R1 lean_s2692, lean_s1668, let338, [(- 1), 0]
have lean_s2694 : (Or let1211 (Or let750 (Or let543 (Or let275 (Or let98 let1321))))) := by factor lean_s2693, (- 1)
let lean_s2695 := by R2 lean_s2694, lean_s1428, let88, [(- 1), (- 1)]
let lean_s2696 := by R1 lean_s2695, lean_s1540, let747, [(- 1), 0]
let lean_s2697 := by R1 lean_s2696, lean_s1405, let748, [(- 1), 0]
let lean_s2698 := by R1 lean_s2697, lean_s1509, let141, [(- 1), (- 1)]
let lean_s2699 := by R1 lean_s2698, lean_s1511, let82, [(- 1), 0]
let lean_s2700 := by R2 lean_s2699, lean_s798, let100, [(- 1), (- 1)]
let lean_s2701 := by R1 lean_s2700, lean_s820, let578, [(- 1), 0]
let lean_s2702 := by R1 lean_s2701, lean_s2250, let554, [(- 1), 0]
have lean_s2703 : (Or let1359 (Or let346 (Or let1211 (Or let1077 let1085)))) := by timed cnfAndNeg [let345, let123, let142, let967]
have lean_s2704 : let1358 :=
  (scope (fun lean_a636 : let345 =>
    (scope (fun lean_a637 : let123 =>
      (scope (fun lean_a638 : let142 =>
        (scope (fun lean_a639 : let967 =>
          have lean_s2704 : let263 := by timed Eq.symm lean_a637
          have lean_s2705 : let123 := by timed Eq.symm lean_s2704
          let lean_s2706 := by timed flipCongrArg lean_s2705 [Eq]
          have lean_s2707 : let188 := by timed Eq.symm lean_a639
          have lean_s2708 : let364 := by timed Eq.symm lean_a638
          have lean_s2709 : let142 := by timed Eq.symm lean_s2708
          have lean_s2710 : let1362 := by timed Eq.trans lean_s2707 lean_s2709
          have lean_s2711 : (Eq let750 let344) := by timed congr lean_s2706 lean_s2710
          have lean_s2712 : let1361 := by timed falseIntro lean_a636
          have lean_s2713 : let1360 := by timed Eq.trans lean_s2711 lean_s2712
          have lean_s2714 : let1354 := by timed falseElim lean_s2713
          show let1354 from lean_s2714
  ))))))))
have lean_s2705 : (Implies let1359 let1354) := by liftOrNToImp lean_s2704, 4
have lean_s2706 : (Or (Not let1359) let1354) := by timed impliesElim lean_s2705
have lean_s2707 : let1358 := by R1 lean_s2703, lean_s2706, let1359, [(- 1), (- 1)]
have lean_s2708 : let1054 := by timed rfl
let lean_s2709 := by timed congr lean_s2708 lean_s833
let lean_s2710 := by timed congr lean_s2708 lean_s734
have lean_s2711 : (Eq let1077 let1077) := by timed rfl
let lean_s2712 := by timed congr lean_s2708 lean_s2711
let lean_s2713 := by timed congr lean_s2708 lean_s730
let lean_s2714 := by timed congr lean_s2713 lean_s2270
let lean_s2715 := by timed congr lean_s2712 lean_s2714
let lean_s2716 := by timed congr lean_s2710 lean_s2715
have lean_s2717 : (Eq let1358 let1357) := by timed congr lean_s2709 lean_s2716
have lean_s2718 : let1357 := by timed eqResolve lean_s2707 lean_s2717
have lean_s2719 : (Or let344 (Or let1085 (Or let1354 (Or let1211 let1077)))) := by permutateOr lean_s2718, [0, 3, 4, 1, 2], (- 1)
let lean_s2720 := by R1 lean_s2702, lean_s2719, let750, [(- 1), (- 1)]
let lean_s2721 := by R1 lean_s2720, lean_s850, let344, [(- 1), 0]
let lean_s2722 := by R2 lean_s2721, lean_s741, let967, [(- 1), 0]
have lean_s2723 : (Or let1353 (Or let651 (Or let1085 (Or let1323 let1182)))) := by timed cnfAndNeg [let650, let967, let314, let738, let87]
have lean_s2724 : let1352 :=
  (scope (fun lean_a636 : let650 =>
    (scope (fun lean_a637 : let967 =>
      (scope (fun lean_a638 : let314 =>
        (scope (fun lean_a639 : let738 =>
          (scope (fun lean_a640 : let87 =>
            have lean_s2724 : let188 := by timed Eq.symm lean_a637
            have lean_s2725 : let967 := by timed Eq.symm lean_s2724
            let lean_s2726 := by timed flipCongrArg lean_s2725 [Eq]
            have lean_s2727 : let210 := by timed Eq.symm lean_a639
            have lean_s2728 : let393 := by timed Eq.symm lean_a638
            have lean_s2729 : let314 := by timed Eq.symm lean_s2728
            have lean_s2730 : let1333 := by timed Eq.trans lean_s2727 lean_s2729
            have lean_s2731 : let1334 := by timed Eq.symm lean_s2730
            have lean_s2732 : let172 := by timed Eq.symm lean_a640
            have lean_s2733 : let87 := by timed Eq.symm lean_s2732
            have lean_s2734 : let172 := by timed Eq.symm lean_s2733
            have lean_s2735 : let1168 := by timed Eq.trans lean_s2734 lean_a639
            have lean_s2736 : let1169 := by timed Eq.symm lean_s2735
            have lean_s2737 : let1331 := by timed Eq.trans lean_s2731 lean_s2736
            have lean_s2738 : let1332 := by timed Eq.symm lean_s2737
            have lean_s2739 : (Eq let313 let535) := by timed congr lean_s2726 lean_s2738
            have lean_s2740 : let1090 := by timed falseIntro lean_a636
            have lean_s2741 : let1180 := by timed Eq.trans lean_s2739 lean_s2740
            have lean_s2742 : let1171 := by timed falseElim lean_s2741
            show let1171 from lean_s2742
  ))))))))))
have lean_s2725 : (Implies let1353 let1171) := by liftOrNToImp lean_s2724, 5
have lean_s2726 : (Or (Not let1353) let1171) := by timed impliesElim lean_s2725
have lean_s2727 : let1352 := by R1 lean_s2723, lean_s2726, let1353, [(- 1), (- 1)]
have lean_s2728 : let1054 := by timed rfl
let lean_s2729 := by timed congr lean_s2728 lean_s2231
let lean_s2730 := by timed congr lean_s2728 lean_s730
let lean_s2731 := by timed congr lean_s2728 lean_s21
let lean_s2732 := by timed congr lean_s2728 lean_s13
let lean_s2733 := by timed congr lean_s2728 lean_s839
let lean_s2734 := by timed congr lean_s2733 lean_s841
let lean_s2735 := by timed congr lean_s2732 lean_s2734
let lean_s2736 := by timed congr lean_s2731 lean_s2735
let lean_s2737 := by timed congr lean_s2730 lean_s2736
have lean_s2738 : (Eq let1352 let1351) := by timed congr lean_s2729 lean_s2737
have lean_s2739 : let1351 := by timed eqResolve lean_s2727 lean_s2738
have lean_s2740 : (Or let535 (Or let1085 (Or let1155 (Or let1171 let1349)))) := by permutateOr lean_s2739, [0, 1, 3, 5, 4, 2], (- 1)
let lean_s2741 := by R1 lean_s2722, lean_s2740, let313, [(- 1), (- 1)]
let lean_s2742 := by R1 lean_s2741, lean_s2238, let535, [(- 1), 0]
let lean_s2743 := by R2 lean_s2742, lean_s45, let738, [(- 1), 0]
have lean_s2744 : (Or let1211 (Or let543 (Or let275 (Or let98 (Or let97 (Or let120 (Or let1211 (Or let1077 let1349)))))))) := by R2 lean_s2743, lean_s741, let967, [(- 1), 0]
have lean_s2745 : (Or let1211 (Or let543 (Or let275 (Or let98 (Or let97 (Or let120 (Or let1077 let1323))))))) := by factor lean_s2744, (- 1)
let lean_s2746 := by R2 lean_s2745, lean_s744, let123, [(- 1), (- 1)]
let lean_s2747 := by R1 lean_s2746, lean_s768, let516, [(- 1), 0]
have lean_s2748 : (Or let1328 (Or let953 (Or let1156 (Or let543 (Or let1155 let1323))))) := by timed cnfAndNeg [let809, let975, let87, let738, let314]
have lean_s2749 : let1327 :=
  (scope (fun lean_a636 : let809 =>
    (scope (fun lean_a637 : let975 =>
      (scope (fun lean_a638 : let87 =>
        (scope (fun lean_a639 : let738 =>
          (scope (fun lean_a640 : let314 =>
            have lean_s2749 : let160 := by timed Eq.symm lean_a637
            have lean_s2750 : let975 := by timed Eq.symm lean_s2749
            let lean_s2751 := by timed flipCongrArg lean_s2750 [Eq]
            have lean_s2752 : let210 := by timed Eq.symm lean_a639
            have lean_s2753 : let172 := by timed Eq.symm lean_a638
            have lean_s2754 : let87 := by timed Eq.symm lean_s2753
            have lean_s2755 : let1169 := by timed Eq.trans lean_s2752 lean_s2754
            have lean_s2756 : let1168 := by timed Eq.symm lean_s2755
            have lean_s2757 : let393 := by timed Eq.symm lean_a640
            have lean_s2758 : let1334 := by timed Eq.trans lean_s2757 lean_a639
            have lean_s2759 : let1333 := by timed Eq.symm lean_s2758
            have lean_s2760 : let1332 := by timed Eq.trans lean_s2756 lean_s2759
            have lean_s2761 : let1331 := by timed Eq.symm lean_s2760
            have lean_s2762 : let1330 := by timed congr lean_s2751 lean_s2761
            have lean_s2763 : let1162 := by timed falseIntro lean_a636
            have lean_s2764 : let1329 := by timed Eq.trans lean_s2762 lean_s2763
            have lean_s2765 : let1221 := by timed falseElim lean_s2764
            show let1221 from lean_s2765
  ))))))))))
have lean_s2750 : (Implies let1328 let1221) := by liftOrNToImp lean_s2749, 5
have lean_s2751 : (Or (Not let1328) let1221) := by timed impliesElim lean_s2750
have lean_s2752 : let1327 := by R1 lean_s2748, lean_s2751, let1328, [(- 1), (- 1)]
have lean_s2753 : let1054 := by timed rfl
let lean_s2754 := by timed congr lean_s2753 lean_s864
let lean_s2755 := by timed congr lean_s2753 lean_s759
let lean_s2756 := by timed congr lean_s2753 lean_s839
let lean_s2757 := by timed congr lean_s2753 lean_s13
let lean_s2758 := by timed congr lean_s2753 lean_s21
let lean_s2759 := by timed congr lean_s2758 lean_s1709
let lean_s2760 := by timed congr lean_s2757 lean_s2759
let lean_s2761 := by timed congr lean_s2756 lean_s2760
let lean_s2762 := by timed congr lean_s2755 lean_s2761
have lean_s2763 : (Eq let1327 let1326) := by timed congr lean_s2754 lean_s2762
have lean_s2764 : let1326 := by timed eqResolve lean_s2752 lean_s2763
have lean_s2765 : (Or let808 (Or let1156 (Or let1155 (Or let543 let1324)))) := by permutateOr lean_s2764, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s2766 := by R1 lean_s2747, lean_s2765, let138, [(- 1), (- 1)]
let lean_s2767 := by R1 lean_s2766, lean_s882, let808, [(- 1), 0]
let lean_s2768 := by R2 lean_s2767, lean_s45, let738, [(- 1), 0]
let lean_s2769 := by R2 lean_s2768, lean_s767, let975, [(- 1), 0]
let lean_s2770 := by R1 lean_s2769, lean_s1447, let97, [(- 1), (- 1)]
let lean_s2771 := by R1 lean_s2770, lean_s1449, let432, [(- 1), 0]
have lean_s2772 : (Or let1270 (Or let971 let1266)) := by timed cnfAndNeg [let804, let275]
have lean_s2773 : let1269 :=
  (scope (fun lean_a636 : let804 =>
    (scope (fun lean_a637 : let275 =>
      have lean_s2773 : let440 := by timed Eq.symm lean_a637
      have lean_s2774 : let275 := by timed Eq.symm lean_s2773
      let lean_s2775 := by timed flipCongrArg lean_s2774 [Eq]
      have lean_s2776 : let1272 := by timed rfl
      have lean_s2777 : (Eq let87 let803) := by timed congr lean_s2775 lean_s2776
      have lean_s2778 : (Eq let803 False) := by timed falseIntro lean_a636
      have lean_s2779 : let1271 := by timed Eq.trans lean_s2777 lean_s2778
      have lean_s2780 : let543 := by timed falseElim lean_s2779
      show let543 from lean_s2780
  ))))
have lean_s2774 : (Implies let1270 let543) := by liftOrNToImp lean_s2773, 2
have lean_s2775 : (Or (Not let1270) let543) := by timed impliesElim lean_s2774
have lean_s2776 : let1269 := by R1 lean_s2772, lean_s2775, let1270, [(- 1), (- 1)]
have lean_s2777 : let1054 := by timed rfl
have lean_s2778 : let1005 := by timed rfl
let lean_s2779 := by timed flipCongrArg lean_s2778 [Eq]
have lean_s2780 : (Eq let981 let1005) := by timed congr lean_s2779 lean_r393
have lean_s2781 : (Eq let981 True) := by timed Eq.trans lean_s2780 lean_r429
have lean_s2782 : (Eq let972 True) := by timed Eq.trans lean_r401 lean_s2781
have lean_s2783 : let972 := by timed trueElim lean_s2782
let lean_s2784 := by timed congr lean_s2777 lean_s2783
have lean_s2785 : (Eq let1266 let1266) := by timed rfl
let lean_s2786 := by timed congr lean_s2777 lean_s2785
let lean_s2787 := by timed congr lean_s2786 lean_s839
have lean_s2788 : (Eq let1269 let1268) := by timed congr lean_s2784 lean_s2787
have lean_s2789 : let1268 := by timed eqResolve lean_s2776 lean_s2788
let lean_s2790 := by R1 lean_s2771, lean_s2789, let275, [(- 1), (- 1)]
have lean_s2791 : let804 := by andElim lean_s29, 59
have lean_s2792 : (Or let543 (Or let98 (Or let120 (Or let1077 (Or let1323 (Or let108 (Or let525 (Or let543 (Or let1323 let1348))))))))) := by R1 lean_s2790, lean_s2791, let803, [(- 1), 0]
have lean_s2793 : (Or let543 (Or let98 (Or let120 (Or let1077 (Or let1323 let1104))))) := by factor lean_s2792, 10
have lean_s2794 : (Or let120 (Or let98 (Or let108 (Or let525 (Or let543 (Or let1323 let1077)))))) := by permutateOr lean_s2793, [2, 1, 5, 6, 0, 4, 3], (- 1)
let lean_s2795 := by R1 lean_s2630, lean_s2794, let314, [(- 1), (- 1)]
let lean_s2796 := by R1 lean_s2795, lean_s1019, let108, [(- 1), (- 1)]
have lean_s2797 : (Or let1340 (Or let358 let1336)) := by timed cnfAndNeg [let357, let62, let142]
have lean_s2798 : let1339 :=
  (scope (fun lean_a638 : let357 =>
    (scope (fun lean_a639 : let62 =>
      (scope (fun lean_a640 : let142 =>
        have lean_s2798 : let253 := by timed Eq.symm lean_a639
        have lean_s2799 : let62 := by timed Eq.symm lean_s2798
        let lean_s2800 := by timed flipCongrArg lean_s2799 [Eq]
        have lean_s2801 : let1208 := by timed rfl
        let lean_s2802 := by timed flipCongrArg lean_s2801 [op]
        have lean_s2803 : let364 := by timed Eq.symm lean_a640
        have lean_s2804 : let142 := by timed Eq.symm lean_s2803
        have lean_s2805 : let364 := by timed Eq.symm lean_s2804
        have lean_s2806 : (Eq let350 let79) := by timed congr lean_s2802 lean_s2805
        have lean_s2807 : (Eq let351 let356) := by timed congr lean_s2800 lean_s2806
        have lean_s2808 : (Eq let356 False) := by timed falseIntro lean_a638
        have lean_s2809 : let1341 := by timed Eq.trans lean_s2807 lean_s2808
        have lean_s2810 : let352 := by timed falseElim lean_s2809
        show let352 from lean_s2810
  ))))))
have lean_s2799 : (Implies let1340 let352) := by liftOrNToImp lean_s2798, 3
have lean_s2800 : (Or (Not let1340) let352) := by timed impliesElim lean_s2799
have lean_s2801 : let1339 := by R1 lean_s2797, lean_s2800, let1340, [(- 1), (- 1)]
have lean_s2802 : let1054 := by timed rfl
have lean_s2803 : let368 := by timed rfl
let lean_s2804 := by timed flipCongrArg lean_s2803 [Eq]
have lean_s2805 : (Eq let359 let368) := by timed congr lean_s2804 lean_r103
have lean_s2806 : (Eq let359 True) := by timed Eq.trans lean_s2805 lean_r104
have lean_s2807 : (Eq let360 True) := by timed Eq.trans lean_r101 lean_s2806
have lean_s2808 : let360 := by timed trueElim lean_s2807
let lean_s2809 := by timed congr lean_s2802 lean_s2808
let lean_s2810 := by timed congr lean_s2802 lean_s870
let lean_s2811 := by timed congr lean_s2802 lean_s2711
have lean_s2812 : (Eq let352 let352) := by timed rfl
let lean_s2813 := by timed congr lean_s2811 lean_s2812
let lean_s2814 := by timed congr lean_s2810 lean_s2813
have lean_s2815 : (Eq let1339 let1338) := by timed congr lean_s2809 lean_s2814
have lean_s2816 : let1338 := by timed eqResolve lean_s2801 lean_s2815
have lean_s2817 : (Or let356 (Or let352 let1336)) := by permutateOr lean_s2816, [0, 3, 1, 2], (- 1)
let lean_s2818 := by R1 lean_s2796, lean_s2817, let351, [(- 1), (- 1)]
have lean_s2819 : let357 := by andElim lean_s29, 90
have lean_s2820 : (Or let275 (Or let98 (Or let543 (Or let120 (Or let97 (Or let152 (Or let1149 (Or let98 (Or let120 (Or let98 (Or let525 (Or let543 (Or let1077 (Or let1149 let1336)))))))))))))) := by R1 lean_s2818, lean_s2819, let356, [(- 1), 0]
have lean_s2821 : (Or let275 (Or let98 (Or let543 (Or let120 (Or let97 (Or let152 (Or let1149 let1335))))))) := by factor lean_s2820, (- 1)
let lean_s2822 := by R2 lean_s2821, lean_s2218, let142, [(- 1), (- 1)]
let lean_s2823 := by R1 lean_s2822, lean_s2240, let642, [(- 1), 0]
let lean_s2824 := by R1 lean_s2823, lean_s2250, let554, [(- 1), 0]
let lean_s2825 := by R1 lean_s2824, lean_s1967, let546, [(- 1), (- 1)]
let lean_s2826 := by R1 lean_s2825, lean_s1511, let82, [(- 1), 0]
let lean_s2827 := by R1 lean_s2826, lean_s1447, let97, [(- 1), (- 1)]
let lean_s2828 := by R1 lean_s2827, lean_s1449, let432, [(- 1), 0]
let lean_s2829 := by R1 lean_s2828, lean_s787, let120, [(- 1), (- 1)]
let lean_s2830 := by R1 lean_s2829, lean_s789, let530, [(- 1), 0]
let lean_s2831 := by R1 lean_s2830, lean_s2789, let275, [(- 1), (- 1)]
let lean_s2832 := by R1 lean_s2831, lean_s2791, let803, [(- 1), 0]
let lean_s2833 := by R2 lean_s981, lean_s986, let988, [(- 1), 0]
let lean_s2834 := by R2 lean_s2833, lean_s1956, let624, [(- 1), (- 1)]
have lean_s2835 : (Or let714 (Or let352 (Or let1148 (Or let1221 let1222)))) := by R2 lean_s2834, lean_s1949, let647, [(- 1), (- 1)]
have lean_s2836 : (Or let714 (Or let352 let1222)) := by factor lean_s2835, (- 1)
let lean_s2837 := by R2 lean_s2836, lean_s744, let138, [(- 1), (- 1)]
let lean_s2838 := by R1 lean_s2837, lean_s768, let516, [(- 1), 0]
have lean_s2839 : (Or let1214 let1212) := by timed cnfAndNeg [let123, let148]
have lean_s2840 : let1213 :=
  (scope (fun lean_a639 : let123 =>
    (scope (fun lean_a640 : let148 =>
      have lean_s2840 : let260 := by timed Eq.symm lean_a640
      have lean_s2841 : let148 := by timed Eq.symm lean_s2840
      have lean_s2842 : let263 := by timed Eq.symm lean_a639
      have lean_s2843 : let338 := by timed Eq.trans lean_s2841 lean_s2842
      show let338 from lean_s2843
  ))))
have lean_s2841 : (Implies let1214 let338) := by liftOrNToImp lean_s2840, 2
have lean_s2842 : (Or (Not let1214) let338) := by timed impliesElim lean_s2841
have lean_s2843 : let1213 := by R1 lean_s2839, lean_s2842, let1214, [(- 1), (- 1)]
have lean_s2844 : (Or let338 let1212) := by permutateOr lean_s2843, [2, 0, 1], (- 1)
let lean_s2845 := by R1 lean_s2838, lean_s2844, let123, [(- 1), (- 1)]
let lean_s2846 := by R1 lean_s2845, lean_s1668, let338, [(- 1), 0]
let lean_s2847 := by R2 lean_s2846, lean_s1938, let704, [(- 1), (- 1)]
have lean_s2848 : (Or let1148 (Or let108 (Or let525 (Or let1203 let1205)))) := by R2 lean_s2847, lean_s1931, let351, [(- 1), (- 1)]
have lean_s2849 : (Or let1148 (Or let108 (Or let525 let1204))) := by factor lean_s2848, (- 1)
let lean_s2850 := by R2 lean_s2849, lean_s1537, let148, [(- 1), (- 1)]
let lean_s2851 := by R1 lean_s2850, lean_s1540, let747, [(- 1), 0]
let lean_s2852 := by R1 lean_s2851, lean_s1562, let979, [(- 1), 0]
let lean_s2853 := by R1 lean_s2852, lean_s2550, let278, [(- 1), (- 1)]
let lean_s2854 := by R2 lean_s2853, lean_s798, let100, [(- 1), (- 1)]
let lean_s2855 := by R1 lean_s2854, lean_s820, let578, [(- 1), 0]
let lean_s2856 := by R1 lean_s2855, lean_s2250, let554, [(- 1), 0]
have lean_s2857 : (Or let1179 (Or let880 (Or let1148 let1183))) := by timed cnfAndNeg [let774, let546, let98, let738, let87]
have lean_s2858 : let1176 :=
  (scope (fun lean_a639 : let774 =>
    (scope (fun lean_a640 : let546 =>
      (scope (fun lean_a641 : let98 =>
        (scope (fun lean_a642 : let738 =>
          (scope (fun lean_a643 : let87 =>
            have lean_s2858 : let255 := by timed Eq.symm lean_a640
            have lean_s2859 : let546 := by timed Eq.symm lean_s2858
            let lean_s2860 := by timed flipCongrArg lean_s2859 [Eq]
            have lean_s2861 : let210 := by timed Eq.symm lean_a642
            have lean_s2862 : let363 := by timed Eq.symm lean_a641
            have lean_s2863 : let98 := by timed Eq.symm lean_s2862
            have lean_s2864 : let1166 := by timed Eq.trans lean_s2861 lean_s2863
            have lean_s2865 : let1167 := by timed Eq.symm lean_s2864
            have lean_s2866 : let172 := by timed Eq.symm lean_a643
            have lean_s2867 : let1168 := by timed Eq.trans lean_s2866 lean_a642
            have lean_s2868 : let1169 := by timed Eq.symm lean_s2867
            have lean_s2869 : let1164 := by timed Eq.trans lean_s2865 lean_s2868
            have lean_s2870 : let1165 := by timed Eq.symm lean_s2869
            have lean_s2871 : (Eq let313 let773) := by timed congr lean_s2860 lean_s2870
            have lean_s2872 : let1181 := by timed falseIntro lean_a639
            have lean_s2873 : let1180 := by timed Eq.trans lean_s2871 lean_s2872
            have lean_s2874 : let1171 := by timed falseElim lean_s2873
            show let1171 from lean_s2874
  ))))))))))
have lean_s2859 : (Implies let1179 let1171) := by liftOrNToImp lean_s2858, 5
have lean_s2860 : (Or (Not let1179) let1171) := by timed impliesElim lean_s2859
have lean_s2861 : let1176 := by R1 lean_s2857, lean_s2860, let1179, [(- 1), (- 1)]
have lean_s2862 : let1054 := by timed rfl
let lean_s2863 := by timed congr lean_s2862 lean_s2199
let lean_s2864 := by timed congr lean_s2862 lean_s2201
let lean_s2865 := by timed congr lean_s2862 lean_s836
let lean_s2866 := by timed congr lean_s2862 lean_s13
let lean_s2867 := by timed congr lean_s2862 lean_s839
let lean_s2868 := by timed congr lean_s2867 lean_s841
let lean_s2869 := by timed congr lean_s2866 lean_s2868
let lean_s2870 := by timed congr lean_s2865 lean_s2869
let lean_s2871 := by timed congr lean_s2864 lean_s2870
have lean_s2872 : (Eq let1176 let1175) := by timed congr lean_s2863 lean_s2871
have lean_s2873 : let1175 := by timed eqResolve lean_s2861 lean_s2872
have lean_s2874 : (Or let773 (Or let1155 (Or let1171 (Or let543 let1170)))) := by permutateOr lean_s2873, [0, 3, 5, 4, 1, 2], (- 1)
let lean_s2875 := by R1 lean_s2856, lean_s2874, let313, [(- 1), (- 1)]
let lean_s2876 := by R1 lean_s2875, lean_s2213, let773, [(- 1), 0]
let lean_s2877 := by R2 lean_s2876, lean_s45, let738, [(- 1), 0]
let lean_s2878 := by R1 lean_s2877, lean_s2146, let108, [(- 1), (- 1)]
let lean_s2879 := by R1 lean_s2878, lean_s882, let808, [(- 1), 0]
let lean_s2880 := by R2 lean_s2879, lean_s45, let738, [(- 1), 0]
let lean_s2881 := by R2 lean_s2880, lean_s767, let975, [(- 1), 0]
let lean_s2882 := by R1 lean_s2881, lean_s1967, let62, [(- 1), (- 1)]
have lean_s2883 : (Or let1148 (Or let525 (Or let1046 (Or let152 (Or let120 (Or let543 (Or let1148 (Or let1046 (Or let543 (Or let1046 let1148)))))))))) := by R1 lean_s2882, lean_s1511, let82, [(- 1), 0]
have lean_s2884 : (Or let1148 (Or let525 (Or let1046 (Or let152 (Or let120 let543))))) := by factor lean_s2883, 10
let lean_s2885 := by R2 lean_s2884, lean_s2218, let546, [(- 1), (- 1)]
let lean_s2886 := by R1 lean_s2885, lean_s2240, let642, [(- 1), 0]
let lean_s2887 := by R1 lean_s2886, lean_s2250, let554, [(- 1), 0]
let lean_s2888 := by R1 lean_s2887, lean_s2257, let142, [(- 1), (- 1)]
let lean_s2889 := by R1 lean_s2888, lean_s2259, let625, [(- 1), 0]
let lean_s2890 := by R1 lean_s2889, lean_s787, let120, [(- 1), (- 1)]
have lean_s2891 : (Or let525 (Or let1046 (Or let152 (Or let543 (Or let56 let1049))))) := by R1 lean_s2890, lean_s789, let530, [(- 1), 0]
have lean_s2892 : (Or let525 (Or let1046 (Or let152 (Or let543 let56)))) := by factor lean_s2891, 6
have lean_s2893 : (Or let56 (Or let525 (Or let543 let1048))) := by permutateOr lean_s2892, [4, 0, 3, 2, 1], (- 1)
have lean_s2894 : (Or let543 (Or let152 (Or let1149 (Or let525 (Or let56 (Or let1149 (Or let543 (Or let152 (Or let543 let1076))))))))) := by R1 lean_s2832, lean_s2893, let98, [(- 1), (- 1)]
have lean_s2895 : (Or let543 (Or let152 (Or let1149 let1071))) := by factor lean_s2894, 12
have lean_s2896 : (Or let56 (Or let525 (Or let543 (Or let152 let1149)))) := by permutateOr lean_s2895, [4, 3, 0, 1, 2], (- 1)
let lean_s2897 := by R1 lean_s2554, lean_s2896, let62, [(- 1), (- 1)]
let lean_s2898 := by R1 lean_s2765, lean_s882, let808, [(- 1), 0]
let lean_s2899 := by R2 lean_s2898, lean_s45, let738, [(- 1), 0]
let lean_s2900 := by R2 lean_s2899, lean_s767, let975, [(- 1), 0]
let lean_s2901 := by R2 lean_s2900, lean_s744, let138, [(- 1), (- 1)]
let lean_s2902 := by R1 lean_s2901, lean_s768, let516, [(- 1), 0]
have lean_s2903 : (Eq let1017 let1322) := by timed flipCongrArg lean_r413 [Not]
have lean_s2904 : let1322 := by timed eqResolve lean_a485 lean_s2903
have lean_s2905 : (Or let543 (Or let1153 let1321)) := by timed flipNotAnd lean_s2904 [let87, let108, let88]
have lean_s2906 : (Or let543 (Or let1321 let1153)) := by permutateOr lean_s2905, [0, 2, 1], (- 1)
let lean_s2907 := by R1 lean_s2902, lean_s2906, let108, [(- 1), (- 1)]
let lean_s2908 := by R2 lean_s2907, lean_s1428, let88, [(- 1), (- 1)]
let lean_s2909 := by R1 lean_s2908, lean_s1540, let747, [(- 1), 0]
let lean_s2910 := by R1 lean_s2909, lean_s1405, let748, [(- 1), 0]
let lean_s2911 := by R2 lean_s2910, lean_s649, let314, [(- 1), (- 1)]
let lean_s2912 := by R1 lean_s2911, lean_s671, let703, [(- 1), 0]
let lean_s2913 := by R1 lean_s2912, lean_s713, let857, [(- 1), 0]
let lean_s2914 := by R1 lean_s2913, lean_s1509, let141, [(- 1), (- 1)]
let lean_s2915 := by R1 lean_s2914, lean_s1511, let82, [(- 1), 0]
have lean_s2916 : (Or let543 (Or let123 (Or let525 (Or let543 (Or let97 (Or let98 (Or let1191 let1299))))))) := by R1 lean_s2915, lean_s2621, let717, [(- 1), (- 1)]
have lean_s2917 : (Or let543 (Or let123 (Or let525 (Or let97 let1300)))) := by factor lean_s2916, (- 1)
let lean_s2918 := by R2 lean_s2917, lean_s798, let100, [(- 1), (- 1)]
let lean_s2919 := by R1 lean_s2918, lean_s820, let578, [(- 1), 0]
let lean_s2920 := by R1 lean_s2919, lean_s2250, let554, [(- 1), 0]
let lean_s2921 := by R1 lean_s2920, lean_s2580, let313, [(- 1), (- 1)]
let lean_s2922 := by R1 lean_s2921, lean_s2582, let379, [(- 1), 0]
let lean_s2923 := by R2 lean_s2922, lean_s45, let738, [(- 1), 0]
let lean_s2924 := by R2 lean_s2923, lean_s741, let967, [(- 1), 0]
let lean_s2925 := by R2 lean_s2924, lean_s2336, let279, [(- 1), (- 1)]
let lean_s2926 := by R1 lean_s2925, lean_s2358, let504, [(- 1), 0]
have lean_s2927 : (Or let1279 (Or let608 (Or let1155 let1283))) := by timed cnfAndNeg [let607, let738, let148, let734]
have lean_s2928 : let1277 :=
  (scope (fun lean_a639 : let607 =>
    (scope (fun lean_a640 : let738 =>
      (scope (fun lean_a641 : let148 =>
        (scope (fun lean_a642 : let734 =>
          have lean_s2928 : let210 := by timed Eq.symm lean_a640
          have lean_s2929 : let738 := by timed Eq.symm lean_s2928
          let lean_s2930 := by timed flipCongrArg lean_s2929 [Eq]
          have lean_s2931 : let246 := by timed Eq.symm lean_a642
          have lean_s2932 : let260 := by timed Eq.symm lean_a641
          have lean_s2933 : let148 := by timed Eq.symm lean_s2932
          have lean_s2934 : let1282 := by timed Eq.trans lean_s2931 lean_s2933
          have lean_s2935 : (Eq let505 let606) := by timed congr lean_s2930 lean_s2934
          have lean_s2936 : let1281 := by timed falseIntro lean_a639
          have lean_s2937 : let1280 := by timed Eq.trans lean_s2935 lean_s2936
          have lean_s2938 : let1273 := by timed falseElim lean_s2937
          show let1273 from lean_s2938
  ))))))))
have lean_s2929 : (Implies let1279 let1273) := by liftOrNToImp lean_s2928, 4
have lean_s2930 : (Or (Not let1279) let1273) := by timed impliesElim lean_s2929
have lean_s2931 : let1277 := by R1 lean_s2927, lean_s2930, let1279, [(- 1), (- 1)]
have lean_s2932 : let1054 := by timed rfl
let lean_s2933 := by timed congr lean_s2932 lean_s662
let lean_s2934 := by timed congr lean_s2932 lean_s13
let lean_s2935 := by timed congr lean_s2932 lean_s1578
let lean_s2936 := by timed congr lean_s2932 lean_s17
let lean_s2937 := by timed congr lean_s2936 lean_s1887
let lean_s2938 := by timed congr lean_s2935 lean_s2937
let lean_s2939 := by timed congr lean_s2934 lean_s2938
have lean_s2940 : (Eq let1277 let1276) := by timed congr lean_s2933 lean_s2939
have lean_s2941 : let1276 := by timed eqResolve lean_s2931 lean_s2940
have lean_s2942 : (Or let606 (Or let1155 (Or let1194 (Or let1273 let1203)))) := by permutateOr lean_s2941, [0, 1, 3, 4, 2], (- 1)
let lean_s2943 := by R1 lean_s2926, lean_s2942, let505, [(- 1), (- 1)]
let lean_s2944 := by R1 lean_s2943, lean_s669, let606, [(- 1), 0]
let lean_s2945 := by R2 lean_s2944, lean_s43, let734, [(- 1), 0]
let lean_s2946 := by R2 lean_s2945, lean_s45, let738, [(- 1), 0]
let lean_s2947 := by R1 lean_s2946, lean_s2844, let123, [(- 1), (- 1)]
let lean_s2948 := by R1 lean_s2947, lean_s1668, let338, [(- 1), 0]
let lean_s2949 := by R1 lean_s2948, lean_s2789, let275, [(- 1), (- 1)]
let lean_s2950 := by R1 lean_s2949, lean_s2791, let803, [(- 1), 0]
let lean_s2951 := by R1 lean_s2950, lean_s787, let120, [(- 1), (- 1)]
let lean_s2952 := by R1 lean_s2951, lean_s789, let530, [(- 1), 0]
let lean_s2953 := by R1 lean_s2952, lean_s1447, let97, [(- 1), (- 1)]
have lean_s2954 : (Or let543 (Or let525 (Or let98 (Or let152 (Or let543 (Or let98 (Or let1203 (Or let1203 (Or let543 (Or let152 let543)))))))))) := by R1 lean_s2953, lean_s1449, let432, [(- 1), 0]
have lean_s2955 : (Or let543 (Or let525 (Or let98 let1258))) := by factor lean_s2954, 10
have lean_s2956 : (Or let98 (Or let525 (Or let543 let1258))) := by permutateOr lean_s2955, [2, 1, 0, 3, 4], (- 1)
let lean_s2957 := by R1 lean_s2897, lean_s2956, let148, [(- 1), (- 1)]
let lean_s2958 := by R1 lean_s2957, lean_s2893, let98, [(- 1), (- 1)]
let lean_s2959 := by R1 lean_s2958, lean_s787, let120, [(- 1), (- 1)]
have lean_s2960 : (Or let543 (Or let152 (Or let56 (Or let525 (Or let543 (Or let152 (Or let525 (Or let543 (Or let152 (Or let56 (Or let525 (Or let543 let1050)))))))))))) := by R1 lean_s2959, lean_s789, let530, [(- 1), 0]
have lean_s2961 : (Or let543 (Or let152 (Or let56 let525))) := by factor lean_s2960, 13
have lean_s2962 : let1076 := by permutateOr lean_s2961, [2, 3, 0, 1], (- 1)
let lean_s2963 := by R1 lean_s2536, lean_s2962, let87, [(- 1), (- 1)]
let lean_s2964 := by R1 lean_s2963, lean_s787, let120, [(- 1), (- 1)]
have lean_s2965 : (Or let525 (Or let152 (Or let31 (Or let56 (Or let31 (Or let56 (Or let525 let1050))))))) := by R1 lean_s2964, lean_s789, let530, [(- 1), 0]
have lean_s2966 : (Or let525 (Or let152 (Or let31 let56))) := by factor lean_s2965, 8
have lean_s2967 : (Or let56 (Or let31 let1075)) := by permutateOr lean_s2966, [3, 2, 0, 1], (- 1)
let lean_s2968 := by R1 lean_s2282, lean_s2967, let151, [(- 1), (- 1)]
let lean_s2969 := by R1 lean_s28, lean_s30, let321, [(- 1), 0]
let lean_s2970 := by R2 lean_s2969, lean_s43, let734, [(- 1), 0]
let lean_s2971 := by R2 lean_s2970, lean_s45, let738, [(- 1), 0]
let lean_s2972 := by R2 lean_s2971, lean_s649, let314, [(- 1), (- 1)]
let lean_s2973 := by R1 lean_s2972, lean_s671, let703, [(- 1), 0]
let lean_s2974 := by R1 lean_s2973, lean_s713, let857, [(- 1), 0]
let lean_s2975 := by R1 lean_s2974, lean_s1606, let717, [(- 1), (- 1)]
let lean_s2976 := by R2 lean_s2975, lean_s1632, let58, [(- 1), (- 1)]
let lean_s2977 := by R1 lean_s2976, lean_s1647, let520, [(- 1), 0]
let lean_s2978 := by R1 lean_s2977, lean_s1666, let145, [(- 1), (- 1)]
have lean_s2979 : (Or let1303 (Or let1190 (Or let98 (Or let1303 let1562)))) := by R1 lean_s2978, lean_s1668, let338, [(- 1), 0]
have lean_s2980 : (Or let1303 (Or let1190 let1561)) := by factor lean_s2979, 6
let lean_s2981 := by R2 lean_s2980, lean_s1428, let141, [(- 1), (- 1)]
let lean_s2982 := by R1 lean_s2981, lean_s1540, let747, [(- 1), 0]
let lean_s2983 := by R1 lean_s2982, lean_s1405, let748, [(- 1), 0]
let lean_s2984 := by R1 lean_s2640, lean_s2662, let918, [(- 1), 0]
let lean_s2985 := by R1 lean_s2984, lean_s2682, let399, [(- 1), (- 1)]
let lean_s2986 := by R1 lean_s2985, lean_s882, let808, [(- 1), 0]
let lean_s2987 := by R2 lean_s2986, lean_s45, let738, [(- 1), 0]
let lean_s2988 := by R2 lean_s2987, lean_s767, let975, [(- 1), 0]
let lean_s2989 := by R1 lean_s2988, lean_s2636, let712, [(- 1), (- 1)]
let lean_s2990 := by R1 lean_s2989, lean_s2637, let827, [(- 1), 0]
let lean_s2991 := by R2 lean_s2990, lean_s2336, let279, [(- 1), (- 1)]
let lean_s2992 := by R1 lean_s2991, lean_s2358, let504, [(- 1), 0]
let lean_s2993 := by R2 lean_s2992, lean_s744, let123, [(- 1), (- 1)]
let lean_s2994 := by R1 lean_s2993, lean_s768, let516, [(- 1), 0]
let lean_s2995 := by R1 lean_s2994, lean_s2607, let505, [(- 1), (- 1)]
let lean_s2996 := by R1 lean_s2995, lean_s2609, let333, [(- 1), 0]
let lean_s2997 := by R2 lean_s2996, lean_s43, let734, [(- 1), 0]
let lean_s2998 := by R1 lean_s2997, lean_s2169, let58, [(- 1), (- 1)]
let lean_s2999 := by R1 lean_s2998, lean_s1668, let338, [(- 1), 0]
let lean_s3000 := by R1 lean_s2999, lean_s2906, let108, [(- 1), (- 1)]
let lean_s3001 := by R1 lean_s3000, lean_s2789, let275, [(- 1), (- 1)]
have lean_s3002 : (Or let750 (Or let543 (Or let98 (Or let138 (Or let525 (Or let543 (Or let1321 (Or let1321 (Or let543 (Or let1321 let543)))))))))) := by R1 lean_s3001, lean_s2791, let803, [(- 1), 0]
have lean_s3003 : (Or let750 (Or let543 (Or let98 (Or let138 let1560)))) := by factor lean_s3002, 10
have lean_s3004 : (Or let98 (Or let138 (Or let750 (Or let525 (Or let543 let1321))))) := by permutateOr lean_s3003, [2, 3, 0, 4, 1, 5], (- 1)
let lean_s3005 := by R1 lean_s2983, lean_s3004, let88, [(- 1), (- 1)]
let lean_s3006 := by R1 lean_s3005, lean_s794, let138, [(- 1), (- 1)]
let lean_s3007 := by R1 lean_s1967, lean_s1511, let82, [(- 1), 0]
let lean_s3008 := by R2 lean_s3007, lean_s2218, let546, [(- 1), (- 1)]
let lean_s3009 := by R1 lean_s3008, lean_s2240, let642, [(- 1), 0]
have lean_s3010 : (Eq let1022 let1557) := by timed flipCongrArg lean_r46 [Not]
have lean_s3011 : let1557 := by timed eqResolve lean_a507 lean_s3010
have lean_s3012 : (Or let1363 (Or let1077 let1303)) := by timed flipNotAnd lean_s3011 [let58, let142, let141]
have lean_s3013 : (Or let1363 (Or let1303 let1077)) := by permutateOr lean_s3012, [0, 2, 1], (- 1)
let lean_s3014 := by R1 lean_s3009, lean_s3013, let142, [(- 1), (- 1)]
let lean_s3015 := by R2 lean_s3014, lean_s1428, let141, [(- 1), (- 1)]
let lean_s3016 := by R1 lean_s3015, lean_s1540, let747, [(- 1), 0]
let lean_s3017 := by R1 lean_s3016, lean_s1405, let748, [(- 1), 0]
let lean_s3018 := by R1 lean_s3017, lean_s2169, let88, [(- 1), (- 1)]
let lean_s3019 := by R1 lean_s3018, lean_s1668, let338, [(- 1), 0]
have lean_s3020 : (Or let1554 (Or let709 let400)) := by timed cnfAndNeg [let708, let120]
have lean_s3021 : let1553 :=
  (scope (fun lean_a639 : let708 =>
    (scope (fun lean_a640 : let120 =>
      have lean_s3021 : let404 := by timed Eq.symm lean_a640
      have lean_s3022 : let120 := by timed Eq.symm lean_s3021
      let lean_s3023 := by timed flipCongrArg lean_s3022 [Eq]
      have lean_s3024 : let1006 := by timed rfl
      have lean_s3025 : (Eq let554 let707) := by timed congr lean_s3023 lean_s3024
      have lean_s3026 : let1556 := by timed falseIntro lean_a639
      have lean_s3027 : let1555 := by timed Eq.trans lean_s3025 lean_s3026
      have lean_s3028 : let1081 := by timed falseElim lean_s3027
      show let1081 from lean_s3028
  ))))
have lean_s3022 : (Implies let1554 let1081) := by liftOrNToImp lean_s3021, 2
have lean_s3023 : (Or (Not let1554) let1081) := by timed impliesElim lean_s3022
have lean_s3024 : let1553 := by R1 lean_s3020, lean_s3023, let1554, [(- 1), (- 1)]
have lean_s3025 : let1054 := by timed rfl
have lean_s3026 : let742 := by timed rfl
let lean_s3027 := by timed flipCongrArg lean_s3026 [Eq]
have lean_s3028 : (Eq let724 let742) := by timed congr lean_s3027 lean_r259
have lean_s3029 : (Eq let724 True) := by timed Eq.trans lean_s3028 lean_r283
have lean_s3030 : (Eq let710 True) := by timed Eq.trans lean_r267 lean_s3029
have lean_s3031 : let710 := by timed trueElim lean_s3030
let lean_s3032 := by timed congr lean_s3025 lean_s3031
let lean_s3033 := by timed congr lean_s3025 lean_s728
let lean_s3034 := by timed congr lean_s3033 lean_s1497
have lean_s3035 : (Eq let1553 let1552) := by timed congr lean_s3032 lean_s3034
have lean_s3036 : let1552 := by timed eqResolve lean_s3024 lean_s3035
let lean_s3037 := by R1 lean_s3019, lean_s3036, let554, [(- 1), (- 1)]
have lean_s3038 : (Or let1149 (Or let56 (Or let1363 (Or let97 (Or let1363 let400))))) := by R1 lean_s3037, lean_s1381, let707, [(- 1), 0]
have lean_s3039 : (Or let1149 (Or let56 (Or let1363 (Or let97 let400)))) := by factor lean_s3038, (- 1)
let lean_s3040 := by R2 lean_s3039, lean_s1632, let58, [(- 1), (- 1)]
let lean_s3041 := by R1 lean_s3040, lean_s1647, let520, [(- 1), 0]
have lean_s3042 : (Or let1149 (Or let56 (Or let97 (Or let400 (Or let151 (Or let525 let1549)))))) := by R1 lean_s3041, lean_s1861, let145, [(- 1), (- 1)]
have lean_s3043 : (Or let1149 (Or let56 (Or let97 let1530))) := by factor lean_s3042, 7
let lean_s3044 := by R2 lean_s3043, lean_s1537, let62, [(- 1), (- 1)]
let lean_s3045 := by R1 lean_s3044, lean_s1540, let747, [(- 1), 0]
let lean_s3046 := by R1 lean_s3045, lean_s1562, let979, [(- 1), 0]
have lean_s3047 : (Eq let1008 let1548) := by timed flipCongrArg lean_r48 [Not]
have lean_s3048 : let1548 := by timed eqResolve lean_a460 lean_s3047
have lean_s3049 : (Or let400 (Or let1203 let543)) := by timed flipNotAnd lean_s3048 [let120, let148, let87]
have lean_s3050 : (Or let543 (Or let400 let1203)) := by permutateOr lean_s3049, [2, 0, 1], (- 1)
have lean_s3051 : (Or let56 (Or let97 (Or let400 (Or let151 (Or let525 (Or let278 let1547)))))) := by R1 lean_s3046, lean_s3050, let148, [(- 1), (- 1)]
have lean_s3052 : (Or let56 (Or let97 (Or let400 (Or let151 (Or let525 (Or let278 let543)))))) := by factor lean_s3051, 7
let lean_s3053 := by R2 lean_s3052, lean_s1373, let120, [(- 1), (- 1)]
let lean_s3054 := by R1 lean_s3053, lean_s1383, let744, [(- 1), 0]
let lean_s3055 := by R1 lean_s3054, lean_s1405, let748, [(- 1), 0]
let lean_s3056 := by R1 lean_s3055, lean_s1447, let97, [(- 1), (- 1)]
have lean_s3057 : (Or let56 (Or let151 (Or let525 (Or let278 (Or let543 (Or let31 (Or let151 let543))))))) := by R1 lean_s3056, lean_s1449, let432, [(- 1), 0]
have lean_s3058 : (Or let56 (Or let151 (Or let525 (Or let278 (Or let543 let31))))) := by factor lean_s3057, 7
have lean_s3059 : (Or let278 (Or let56 (Or let31 (Or let151 let1546)))) := by permutateOr lean_s3058, [3, 0, 5, 1, 2, 4], (- 1)
let lean_s3060 := by R2 lean_s3006, lean_s3059, let278, [(- 1), (- 1)]
let lean_s3061 := by R1 lean_s3060, lean_s1447, let97, [(- 1), (- 1)]
have lean_s3062 : (Or let98 (Or let151 (Or let525 (Or let98 (Or let750 (Or let525 (Or let543 (Or let543 (Or let400 (Or let56 (Or let31 (Or let151 (Or let525 let1348))))))))))))) := by R1 lean_s3061, lean_s1449, let432, [(- 1), 0]
have lean_s3063 : (Or let98 (Or let151 (Or let525 (Or let750 (Or let543 let1520))))) := by factor lean_s3062, 14
let lean_s3064 := by R2 lean_s3063, lean_s1048, let87, [(- 1), (- 1)]
let lean_s3065 := by R1 lean_s3064, lean_s1063, let599, [(- 1), 0]
let lean_s3066 := by R1 lean_s3065, lean_s713, let857, [(- 1), 0]
let lean_s3067 := by R1 lean_s2218, lean_s2240, let642, [(- 1), 0]
let lean_s3068 := by R1 lean_s3067, lean_s2250, let554, [(- 1), 0]
let lean_s3069 := by R1 lean_s3068, lean_s2515, let142, [(- 1), (- 1)]
have lean_s3070 : (Or let1545 let1543) := by timed cnfAndNeg [let546, let717]
have lean_s3071 : let1544 :=
  (scope (fun lean_a640 : let546 =>
    (scope (fun lean_a641 : let717 =>
      have lean_s3071 : let254 := by timed Eq.symm lean_a641
      have lean_s3072 : let717 := by timed Eq.symm lean_s3071
      have lean_s3073 : let255 := by timed Eq.symm lean_a640
      have lean_s3074 : let625 := by timed Eq.trans lean_s3072 lean_s3073
      show let625 from lean_s3074
  ))))
have lean_s3072 : (Implies let1545 let625) := by liftOrNToImp lean_s3071, 2
have lean_s3073 : (Or (Not let1545) let625) := by timed impliesElim lean_s3072
have lean_s3074 : let1544 := by R1 lean_s3070, lean_s3073, let1545, [(- 1), (- 1)]
have lean_s3075 : (Or let625 let1543) := by permutateOr lean_s3074, [2, 0, 1], (- 1)
let lean_s3076 := by R1 lean_s3069, lean_s3075, let546, [(- 1), (- 1)]
let lean_s3077 := by R1 lean_s3076, lean_s2259, let625, [(- 1), 0]
let lean_s3078 := by R2 lean_s3077, lean_s1428, let97, [(- 1), (- 1)]
let lean_s3079 := by R1 lean_s3078, lean_s1540, let747, [(- 1), 0]
let lean_s3080 := by R1 lean_s3079, lean_s1405, let748, [(- 1), 0]
let lean_s3081 := by R2 lean_s3080, lean_s649, let717, [(- 1), (- 1)]
let lean_s3082 := by R1 lean_s3081, lean_s671, let703, [(- 1), 0]
let lean_s3083 := by R1 lean_s3082, lean_s713, let857, [(- 1), 0]
let lean_s3084 := by R1 lean_s3083, lean_s1666, let141, [(- 1), (- 1)]
let lean_s3085 := by R1 lean_s3084, lean_s1668, let338, [(- 1), 0]
have lean_s3086 : (Or let56 (Or let1407 (Or let88 (Or let98 let1541)))) := by R1 lean_s3085, lean_s1856, let314, [(- 1), (- 1)]
have lean_s3087 : (Or let56 (Or let1407 (Or let88 (Or let98 let1540)))) := by factor lean_s3086, (- 1)
let lean_s3088 := by R2 lean_s3087, lean_s1632, let145, [(- 1), (- 1)]
let lean_s3089 := by R1 lean_s3088, lean_s1647, let520, [(- 1), 0]
let lean_s3090 := by R1 lean_s3089, lean_s1785, let88, [(- 1), (- 1)]
let lean_s3091 := by R1 lean_s3090, lean_s1449, let432, [(- 1), 0]
let lean_s3092 := by R1 lean_s3091, lean_s1626, let58, [(- 1), (- 1)]
have lean_s3093 : (Or let56 (Or let1407 (Or let98 (Or let400 (Or let151 (Or let525 (Or let1407 let1407))))))) := by R1 lean_s3092, lean_s1628, let559, [(- 1), 0]
have lean_s3094 : (Or let56 (Or let1407 (Or let98 let1530))) := by factor lean_s3093, 7
have lean_s3095 : (Or let56 (Or let98 (Or let151 (Or let525 (Or let1407 let400))))) := by permutateOr lean_s3094, [0, 2, 4, 5, 1, 3], (- 1)
let lean_s3096 := by R1 lean_s3066, lean_s3095, let122, [(- 1), (- 1)]
let lean_s3097 := by R1 lean_s3096, lean_s2275, let750, [(- 1), (- 1)]
have lean_s3098 : (Or let98 (Or let151 (Or let525 (Or let400 (Or let56 (Or let31 (Or let31 (Or let56 (Or let98 (Or let151 (Or let525 let1522))))))))))) := by R2 lean_s3097, lean_s741, let967, [(- 1), 0]
have lean_s3099 : (Or let98 (Or let151 (Or let525 let1520))) := by factor lean_s3098, 13
let lean_s3100 := by R2 lean_s3099, lean_s1373, let120, [(- 1), (- 1)]
let lean_s3101 := by R1 lean_s3100, lean_s1402, let748, [(- 1), (- 1)]
let lean_s3102 := by R2 lean_s3101, lean_s43, let734, [(- 1), 0]
let lean_s3103 := by R1 lean_s3102, lean_s1403, let369, [(- 1), 0]
let lean_s3104 := by R1 lean_s3103, lean_s1380, let744, [(- 1), (- 1)]
let lean_s3105 := by R2 lean_s3104, lean_s712, let727, [(- 1), 0]
have lean_s3106 : (Or let98 (Or let151 (Or let525 (Or let56 (Or let31 let1487))))) := by R1 lean_s3105, lean_s1381, let707, [(- 1), 0]
have lean_s3107 : (Or let98 (Or let151 let1074)) := by factor lean_s3106, 6
have lean_s3108 : (Or let98 (Or let525 (Or let56 (Or let31 let1070)))) := by R1 lean_s3107, lean_s2967, let151, [(- 1), (- 1)]
have lean_s3109 : (Or let98 let1074) := by factor lean_s3108, 6
have lean_s3110 : (Or let56 (Or let31 let1072)) := by permutateOr lean_s3109, [2, 3, 0, 1], (- 1)
have lean_s3111 : (Or let31 (Or let525 (Or let56 (Or let56 (Or let31 (Or let525 let1070)))))) := by R2 lean_s2968, lean_s3110, let98, [(- 1), (- 1)]
have lean_s3112 : (Or let31 let1071) := by factor lean_s3111, 8
have lean_s3113 : let1070 := by permutateOr lean_s3112, [2, 0, 1], (- 1)
have lean_s3114 : (Or let151 (Or let750 (Or let525 (Or let98 (Or let400 (Or let31 (Or let1259 (Or let1259 let1068)))))))) := by R2 lean_s1899, lean_s3113, let56, [(- 1), (- 1)]
have lean_s3115 : (Or let151 (Or let750 (Or let525 (Or let98 (Or let400 (Or let31 let1259)))))) := by factor lean_s3114, 9
have lean_s3116 : (Or let1728 let1726) := by timed cnfAndNeg [let120, let31]
have lean_s3117 : let1727 :=
  (scope (fun lean_a640 : let120 =>
    (scope (fun lean_a641 : let31 =>
      have lean_s3117 : let420 := by timed Eq.symm lean_a641
      have lean_s3118 : let31 := by timed Eq.symm lean_s3117
      have lean_s3119 : let404 := by timed Eq.symm lean_a640
      have lean_s3120 : let625 := by timed Eq.trans lean_s3118 lean_s3119
      show let625 from lean_s3120
  ))))
have lean_s3118 : (Implies let1728 let625) := by liftOrNToImp lean_s3117, 2
have lean_s3119 : (Or (Not let1728) let625) := by timed impliesElim lean_s3118
have lean_s3120 : let1727 := by R1 lean_s3116, lean_s3119, let1728, [(- 1), (- 1)]
have lean_s3121 : (Or let625 let1726) := by permutateOr lean_s3120, [2, 0, 1], (- 1)
let lean_s3122 := by R1 lean_s3115, lean_s3121, let31, [(- 1), (- 1)]
let lean_s3123 := by R1 lean_s3122, lean_s2259, let625, [(- 1), 0]
let lean_s3124 := by R1 lean_s3123, lean_s2275, let750, [(- 1), (- 1)]
have lean_s3125 : (Or let151 (Or let525 (Or let98 (Or let400 (Or let1259 let1522))))) := by R2 lean_s3124, lean_s741, let967, [(- 1), 0]
have lean_s3126 : (Or let151 let1886) := by factor lean_s3125, 7
let lean_s3127 := by R1 lean_s3126, lean_s787, let151, [(- 1), (- 1)]
have lean_s3128 : (Or let525 (Or let98 (Or let400 (Or let1259 let400)))) := by R1 lean_s3127, lean_s789, let530, [(- 1), 0]
have lean_s3129 : let1886 := by factor lean_s3128, 4
let lean_s3130 := by R1 lean_s1785, lean_s1449, let432, [(- 1), 0]
let lean_s3131 := by R2 lean_s3130, lean_s1428, let88, [(- 1), (- 1)]
let lean_s3132 := by R1 lean_s3131, lean_s1540, let747, [(- 1), 0]
let lean_s3133 := by R1 lean_s3132, lean_s1405, let748, [(- 1), 0]
let lean_s3134 := by R2 lean_s3133, lean_s1048, let122, [(- 1), (- 1)]
let lean_s3135 := by R1 lean_s3134, lean_s1063, let599, [(- 1), 0]
let lean_s3136 := by R1 lean_s3135, lean_s713, let857, [(- 1), 0]
let lean_s3137 := by R1 lean_s3136, lean_s2495, let141, [(- 1), (- 1)]
have lean_s3138 : (Or let1670 let1668) := by timed cnfAndNeg [let313, let97]
have lean_s3139 : let1669 :=
  (scope (fun lean_a641 : let313 =>
    (scope (fun lean_a642 : let97 =>
      have lean_s3139 : let171 := by timed Eq.symm lean_a642
      have lean_s3140 : let97 := by timed Eq.symm lean_s3139
      have lean_s3141 : let173 := by timed Eq.symm lean_a641
      have lean_s3142 : let82 := by timed Eq.trans lean_s3140 lean_s3141
      show let82 from lean_s3142
  ))))
have lean_s3140 : (Implies let1670 let82) := by liftOrNToImp lean_s3139, 2
have lean_s3141 : (Or (Not let1670) let82) := by timed impliesElim lean_s3140
have lean_s3142 : let1669 := by R1 lean_s3138, lean_s3141, let1670, [(- 1), (- 1)]
have lean_s3143 : (Or let82 let1668) := by permutateOr lean_s3142, [2, 0, 1], (- 1)
let lean_s3144 := by R1 lean_s3137, lean_s3143, let97, [(- 1), (- 1)]
let lean_s3145 := by R1 lean_s3144, lean_s1511, let82, [(- 1), 0]
let lean_s3146 := by R1 lean_s3145, lean_s2542, let87, [(- 1), (- 1)]
have lean_s3147 : (Or let31 (Or let1171 (Or let1153 (Or let1171 let1171)))) := by R1 lean_s3146, lean_s2259, let625, [(- 1), 0]
have lean_s3148 : (Or let31 (Or let1171 let1153)) := by factor lean_s3147, 4
let lean_s3149 := by R2 lean_s3148, lean_s798, let313, [(- 1), (- 1)]
let lean_s3150 := by R1 lean_s3149, lean_s820, let578, [(- 1), 0]
let lean_s3151 := by R1 lean_s3150, lean_s2250, let554, [(- 1), 0]
let lean_s3152 := by R2 lean_s981, lean_s986, let988, [(- 1), 0]
let lean_s3153 := by R2 lean_s3152, lean_s1000, let624, [(- 1), (- 1)]
let lean_s3154 := by R2 lean_s3153, lean_s1041, let704, [(- 1), (- 1)]
let lean_s3155 := by R2 lean_s3154, lean_s993, let647, [(- 1), (- 1)]
have lean_s3156 : (Or let1323 (Or let1664 (Or let1323 (Or let1664 let1801)))) := by R2 lean_s3155, lean_s1019, let351, [(- 1), (- 1)]
have lean_s3157 : let1881 := by factor lean_s3156, (- 1)
let lean_s3158 := by R2 lean_s3157, lean_s649, let314, [(- 1), (- 1)]
let lean_s3159 := by R1 lean_s3158, lean_s671, let703, [(- 1), 0]
let lean_s3160 := by R1 lean_s3159, lean_s713, let857, [(- 1), 0]
let lean_s3161 := by R2 lean_s3160, lean_s1537, let62, [(- 1), (- 1)]
let lean_s3162 := by R1 lean_s3161, lean_s1540, let747, [(- 1), 0]
let lean_s3163 := by R1 lean_s3162, lean_s1562, let979, [(- 1), 0]
let lean_s3164 := by R1 lean_s3163, lean_s2621, let717, [(- 1), (- 1)]
let lean_s3165 := by R1 lean_s3164, lean_s2550, let278, [(- 1), (- 1)]
let lean_s3166 := by R1 lean_s3165, lean_s1581, let148, [(- 1), (- 1)]
let lean_s3167 := by R1 lean_s3166, lean_s1511, let82, [(- 1), 0]
have lean_s3168 : let1496 := by andElim lean_s1371, 23
have lean_s3169 : (Or let142 (Or let98 (Or let108 let1495))) := by permutateOr lean_s3168, [1, 2, 0, 3, 4], (- 1)
let lean_s3170 := by R2 lean_s3167, lean_s3169, let108, [(- 1), (- 1)]
let lean_s3171 := by R1 lean_s3170, lean_s1559, let979, [(- 1), (- 1)]
let lean_s3172 := by R2 lean_s3171, lean_s43, let734, [(- 1), 0]
let lean_s3173 := by R1 lean_s3172, lean_s1560, let815, [(- 1), 0]
have lean_s3174 : (Or let1848 let1846) := by timed cnfAndNeg [let727, let702]
have lean_s3175 : let1847 :=
  (scope (fun lean_a641 : let727 =>
    (scope (fun lean_a642 : let702 =>
      have lean_s3175 : let361 := by timed Eq.symm lean_a642
      have lean_s3176 : let458 := by timed Eq.symm lean_a641
      have lean_s3177 : let727 := by timed Eq.symm lean_s3176
      have lean_s3178 : let769 := by timed Eq.trans lean_s3175 lean_s3177
      show let769 from lean_s3178
  ))))
have lean_s3176 : (Implies let1848 let769) := by liftOrNToImp lean_s3175, 2
have lean_s3177 : (Or (Not let1848) let769) := by timed impliesElim lean_s3176
have lean_s3178 : let1847 := by R1 lean_s3174, lean_s3177, let1848, [(- 1), (- 1)]
have lean_s3179 : (Or let769 let1846) := by permutateOr lean_s3178, [2, 0, 1], (- 1)
let lean_s3180 := by R1 lean_s3173, lean_s3179, let702, [(- 1), (- 1)]
let lean_s3181 := by R2 lean_s3180, lean_s712, let727, [(- 1), 0]
have lean_s3182 : let770 := by andElim lean_s29, 99
let lean_s3183 := by R1 lean_s3181, lean_s3182, let769, [(- 1), 0]
have lean_s3184 : (Or let1880 (Or let346 let1664)) := by timed cnfAndNeg [let345, let56]
have lean_s3185 : let1879 :=
  (scope (fun lean_a642 : let345 =>
    (scope (fun lean_a643 : let56 =>
      have lean_s3185 : let262 := by timed Eq.symm lean_a643
      have lean_s3186 : let56 := by timed Eq.symm lean_s3185
      let lean_s3187 := by timed flipCongrArg lean_s3186 [Eq]
      have lean_s3188 : let1199 := by timed rfl
      have lean_s3189 : (Eq let142 let344) := by timed congr lean_s3187 lean_s3188
      have lean_s3190 : let1361 := by timed falseIntro lean_a642
      have lean_s3191 : let1825 := by timed Eq.trans lean_s3189 lean_s3190
      have lean_s3192 : let1077 := by timed falseElim lean_s3191
      show let1077 from lean_s3192
  ))))
have lean_s3186 : (Implies let1880 let1077) := by liftOrNToImp lean_s3185, 2
have lean_s3187 : (Or (Not let1880) let1077) := by timed impliesElim lean_s3186
have lean_s3188 : let1879 := by R1 lean_s3184, lean_s3187, let1880, [(- 1), (- 1)]
have lean_s3189 : let1054 := by timed rfl
let lean_s3190 := by timed congr lean_s3189 lean_s833
let lean_s3191 := by timed congr lean_s3189 lean_s732
let lean_s3192 := by timed congr lean_s3191 lean_s2711
have lean_s3193 : (Eq let1879 let1878) := by timed congr lean_s3190 lean_s3192
have lean_s3194 : let1878 := by timed eqResolve lean_s3188 lean_s3193
let lean_s3195 := by R1 lean_s3183, lean_s3194, let142, [(- 1), (- 1)]
have lean_s3196 : (Or let1664 (Or let98 (Or let1191 (Or let152 (Or let1191 let1876))))) := by R1 lean_s3195, lean_s850, let344, [(- 1), 0]
have lean_s3197 : (Or let1664 let1300) := by factor lean_s3196, 8
have lean_s3198 : (Or let98 (Or let1191 let1875)) := by permutateOr lean_s3197, [1, 2, 3, 0], (- 1)
let lean_s3199 := by R1 lean_s3151, lean_s3198, let100, [(- 1), (- 1)]
let lean_s3200 := by R2 lean_s3199, lean_s3169, let108, [(- 1), (- 1)]
let lean_s3201 := by R1 lean_s3179, lean_s3182, let769, [(- 1), 0]
have lean_s3202 : let1845 := by R2 lean_s3201, lean_s712, let727, [(- 1), 0]
let lean_s3203 := by R1 lean_s3200, lean_s3202, let702, [(- 1), 0]
let lean_s3204 := by R1 lean_s3203, lean_s1562, let979, [(- 1), 0]
let lean_s3205 := by R1 lean_s3204, lean_s3194, let142, [(- 1), (- 1)]
have lean_s3206 : (Or let31 (Or let120 (Or let98 let1876))) := by R1 lean_s3205, lean_s850, let344, [(- 1), 0]
have lean_s3207 : (Or let31 (Or let120 (Or let98 let1875))) := by factor lean_s3206, (- 1)
have lean_s3208 : (Or let31 (Or let120 (Or let98 (Or let152 let1068)))) := by R2 lean_s3207, lean_s3113, let56, [(- 1), (- 1)]
have lean_s3209 : (Or let31 let1874) := by factor lean_s3208, (- 1)
have lean_s3210 : (Or let1063 (Or let722 let152)) := by timed cnfAndNeg [let721, let151]
have lean_s3211 : let1062 :=
  (scope (fun lean_a642 : let721 =>
    (scope (fun lean_a643 : let151 =>
      have lean_s3211 : let1066 := by timed rfl
      let lean_s3212 := by timed flipCongrArg lean_s3211 [Eq]
      have lean_s3213 : let386 := by timed Eq.symm lean_a643
      have lean_s3214 : (Eq let31 let559) := by timed congr lean_s3212 lean_s3213
      have lean_s3215 : let1065 := by timed falseIntro lean_a642
      have lean_s3216 : let1064 := by timed Eq.trans lean_s3214 lean_s3215
      have lean_s3217 : let1059 := by timed falseElim lean_s3216
      show let1059 from lean_s3217
  ))))
have lean_s3212 : (Implies let1063 let1059) := by liftOrNToImp lean_s3211, 2
have lean_s3213 : (Or (Not let1063) let1059) := by timed impliesElim lean_s3212
have lean_s3214 : let1062 := by R1 lean_s3210, lean_s3213, let1063, [(- 1), (- 1)]
have lean_s3215 : let1054 := by timed rfl
let lean_s3216 := by timed congr lean_s3215 lean_s1619
let lean_s3217 := by timed congr lean_s3215 lean_s783
let lean_s3218 := by timed congr lean_s3217 lean_s1802
have lean_s3219 : (Eq let1062 let1061) := by timed congr lean_s3216 lean_s3218
have lean_s3220 : let1061 := by timed eqResolve lean_s3214 lean_s3219
let lean_s3221 := by R1 lean_s3209, lean_s3220, let31, [(- 1), (- 1)]
have lean_s3222 : (Or let120 (Or let98 (Or let152 let1075))) := by R1 lean_s3221, lean_s1628, let559, [(- 1), 0]
have lean_s3223 : let1874 := by factor lean_s3222, 4
let lean_s3224 := by R2 lean_s981, lean_s986, let988, [(- 1), 0]
let lean_s3225 := by R2 lean_s3224, lean_s2296, let647, [(- 1), (- 1)]
have lean_s3226 : let1481 := by R2 lean_s3225, lean_s2289, let704, [(- 1), (- 1)]
have lean_s3227 : let1480 := by factor lean_s3226, (- 1)
let lean_s3228 := by R2 lean_s3227, lean_s649, let717, [(- 1), (- 1)]
let lean_s3229 := by R1 lean_s3228, lean_s671, let703, [(- 1), 0]
let lean_s3230 := by R1 lean_s3229, lean_s713, let857, [(- 1), 0]
have lean_s3231 : (Or let1873 (Or let13 (Or let1289 let1574))) := by timed cnfAndNeg [let12, let279, let734, let278]
have lean_s3232 : let1872 :=
  (scope (fun lean_a642 : let12 =>
    (scope (fun lean_a643 : let279 =>
      (scope (fun lean_a644 : let734 =>
        (scope (fun lean_a645 : let278 =>
          have lean_s3232 : let194 := by timed Eq.symm lean_a643
          have lean_s3233 : let279 := by timed Eq.symm lean_s3232
          let lean_s3234 := by timed flipCongrArg lean_s3233 [Eq]
          have lean_s3235 : let465 := by timed Eq.symm lean_a645
          have lean_s3236 : let246 := by timed Eq.symm lean_a644
          have lean_s3237 : let734 := by timed Eq.symm lean_s3236
          have lean_s3238 : let1573 := by timed Eq.trans lean_s3235 lean_s3237
          have lean_s3239 : (Eq let314 let11) := by timed congr lean_s3234 lean_s3238
          have lean_s3240 : (Eq let11 False) := by timed falseIntro lean_a642
          have lean_s3241 : let1571 := by timed Eq.trans lean_s3239 lean_s3240
          have lean_s3242 : let1323 := by timed falseElim lean_s3241
          show let1323 from lean_s3242
  ))))))))
have lean_s3233 : (Implies let1873 let1323) := by liftOrNToImp lean_s3232, 4
have lean_s3234 : (Or (Not let1873) let1323) := by timed impliesElim lean_s3233
have lean_s3235 : let1872 := by R1 lean_s3231, lean_s3234, let1873, [(- 1), (- 1)]
have lean_s3236 : let1054 := by timed rfl
have lean_s3237 : let16 := by timed rfl
let lean_s3238 := by timed flipCongrArg lean_s3237 [Eq]
have lean_s3239 : (Eq let14 let16) := by timed congr lean_s3238 lean_r4
have lean_s3240 : (Eq let14 True) := by timed Eq.trans lean_s3239 lean_r5
have lean_s3241 : (Eq let15 True) := by timed Eq.trans lean_r3 lean_s3240
have lean_s3242 : let15 := by timed trueElim lean_s3241
let lean_s3243 := by timed congr lean_s3236 lean_s3242
let lean_s3244 := by timed congr lean_s3236 lean_s2570
let lean_s3245 := by timed congr lean_s3236 lean_s17
let lean_s3246 := by timed congr lean_s3236 lean_s19
let lean_s3247 := by timed congr lean_s3246 lean_s21
let lean_s3248 := by timed congr lean_s3245 lean_s3247
let lean_s3249 := by timed congr lean_s3244 lean_s3248
have lean_s3250 : (Eq let1872 let1871) := by timed congr lean_s3243 lean_s3249
have lean_s3251 : let1871 := by timed eqResolve lean_s3235 lean_s3250
have lean_s3252 : (Or let11 (Or let1194 (Or let1289 let1564))) := by permutateOr lean_s3251, [0, 2, 1, 4, 3], (- 1)
let lean_s3253 := by R1 lean_s3230, lean_s3252, let314, [(- 1), (- 1)]
have lean_s3254 : let12 := by andElim lean_s29, 35
let lean_s3255 := by R1 lean_s3253, lean_s3254, let11, [(- 1), 0]
let lean_s3256 := by R2 lean_s3255, lean_s43, let734, [(- 1), 0]
let lean_s3257 := by R2 lean_s3256, lean_s2336, let279, [(- 1), (- 1)]
let lean_s3258 := by R1 lean_s3257, lean_s2358, let504, [(- 1), 0]
have lean_s3259 : (Or let1869 (Or let709 (Or let1059 (Or let1043 let1865)))) := by timed cnfAndNeg [let708, let31, let727, let935]
have lean_s3260 : let1868 :=
  (scope (fun lean_a643 : let708 =>
    (scope (fun lean_a644 : let31 =>
      (scope (fun lean_a645 : let727 =>
        (scope (fun lean_a646 : let935 =>
          have lean_s3260 : let420 := by timed Eq.symm lean_a644
          have lean_s3261 : let31 := by timed Eq.symm lean_s3260
          let lean_s3262 := by timed flipCongrArg lean_s3261 [Eq]
          have lean_s3263 : let492 := by timed Eq.symm lean_a646
          have lean_s3264 : let458 := by timed Eq.symm lean_a645
          have lean_s3265 : let727 := by timed Eq.symm lean_s3264
          have lean_s3266 : (Eq let65 let1) := by timed Eq.trans lean_s3263 lean_s3265
          have lean_s3267 : (Eq let275 let707) := by timed congr lean_s3262 lean_s3266
          have lean_s3268 : let1556 := by timed falseIntro lean_a643
          have lean_s3269 : (Eq let275 False) := by timed Eq.trans lean_s3267 lean_s3268
          have lean_s3270 : let1266 := by timed falseElim lean_s3269
          show let1266 from lean_s3270
  ))))))))
have lean_s3261 : (Implies let1869 let1266) := by liftOrNToImp lean_s3260, 4
have lean_s3262 : (Or (Not let1869) let1266) := by timed impliesElim lean_s3261
have lean_s3263 : let1868 := by R1 lean_s3259, lean_s3262, let1869, [(- 1), (- 1)]
have lean_s3264 : let1054 := by timed rfl
let lean_s3265 := by timed congr lean_s3264 lean_s3031
let lean_s3266 := by timed congr lean_s3264 lean_s1802
have lean_s3267 : (Eq let1043 let1043) := by timed rfl
let lean_s3268 := by timed congr lean_s3264 lean_s3267
have lean_s3269 : (Eq let1865 let1865) := by timed rfl
let lean_s3270 := by timed congr lean_s3264 lean_s3269
let lean_s3271 := by timed congr lean_s3270 lean_s2785
let lean_s3272 := by timed congr lean_s3268 lean_s3271
let lean_s3273 := by timed congr lean_s3266 lean_s3272
have lean_s3274 : (Eq let1868 let1867) := by timed congr lean_s3265 lean_s3273
have lean_s3275 : let1867 := by timed eqResolve lean_s3263 lean_s3274
have lean_s3276 : (Or let707 (Or let1043 (Or let1266 (Or let1865 let1059)))) := by permutateOr lean_s3275, [0, 2, 4, 3, 1], (- 1)
let lean_s3277 := by R1 lean_s3258, lean_s3276, let275, [(- 1), (- 1)]
let lean_s3278 := by R1 lean_s3277, lean_s1381, let707, [(- 1), 0]
let lean_s3279 := by R2 lean_s3278, lean_s712, let727, [(- 1), 0]
have lean_s3280 : let1107 := by andElim lean_s647, 39
have lean_s3281 : (Or let29 (Or let943 (Or let935 let1106))) := by permutateOr lean_s3280, [1, 2, 0, 3, 4], (- 1)
let lean_s3282 := by R2 lean_s3279, lean_s3281, let935, [(- 1), (- 1)]
let lean_s3283 := by R1 lean_s3282, lean_s3202, let702, [(- 1), 0]
have lean_s3284 : (Or let1864 (Or let19 let1194)) := by timed cnfAndNeg [let18, let734]
have lean_s3285 : let1863 :=
  (scope (fun lean_a644 : let18 =>
    (scope (fun lean_a645 : let734 =>
      have lean_s3285 : let1208 := by timed rfl
      let lean_s3286 := by timed flipCongrArg lean_s3285 [Eq]
      have lean_s3287 : let246 := by timed Eq.symm lean_a645
      have lean_s3288 : (Eq let631 let17) := by timed congr lean_s3286 lean_s3287
      have lean_s3289 : (Eq let17 False) := by timed falseIntro lean_a644
      have lean_s3290 : (Eq let631 False) := by timed Eq.trans lean_s3288 lean_s3289
      have lean_s3291 : let1860 := by timed falseElim lean_s3290
      show let1860 from lean_s3291
  ))))
have lean_s3286 : (Implies let1864 let1860) := by liftOrNToImp lean_s3285, 2
have lean_s3287 : (Or (Not let1864) let1860) := by timed impliesElim lean_s3286
have lean_s3288 : let1863 := by R1 lean_s3284, lean_s3287, let1864, [(- 1), (- 1)]
have lean_s3289 : let1054 := by timed rfl
have lean_s3290 : let22 := by timed rfl
let lean_s3291 := by timed flipCongrArg lean_s3290 [Eq]
have lean_s3292 : (Eq let20 let22) := by timed congr lean_s3291 lean_r7
have lean_s3293 : (Eq let20 True) := by timed Eq.trans lean_s3292 lean_r8
have lean_s3294 : (Eq let21 True) := by timed Eq.trans lean_r6 lean_s3293
have lean_s3295 : let21 := by timed trueElim lean_s3294
let lean_s3296 := by timed congr lean_s3289 lean_s3295
let lean_s3297 := by timed congr lean_s3289 lean_s17
have lean_s3298 : (Eq let1860 let1860) := by timed rfl
let lean_s3299 := by timed congr lean_s3297 lean_s3298
have lean_s3300 : (Eq let1863 let1862) := by timed congr lean_s3296 lean_s3299
have lean_s3301 : let1862 := by timed eqResolve lean_s3288 lean_s3300
let lean_s3302 := by R1 lean_s3301, lean_s1460, let17, [(- 1), 0]
have lean_s3303 : let1860 := by R2 lean_s3302, lean_s43, let734, [(- 1), 0]
let lean_s3304 := by R1 lean_s3283, lean_s3303, let631, [(- 1), 0]
have lean_s3305 : (Or let1859 (Or let25 let1458)) := by timed cnfAndNeg [let24, let33]
have lean_s3306 : let1858 :=
  (scope (fun lean_a645 : let24 =>
    (scope (fun lean_a646 : let33 =>
      have lean_s3306 : let1208 := by timed rfl
      let lean_s3307 := by timed flipCongrArg lean_s3306 [Eq]
      have lean_s3308 : let219 := by timed Eq.symm lean_a646
      have lean_s3309 : (Eq let943 let23) := by timed congr lean_s3307 lean_s3308
      have lean_s3310 : (Eq let23 False) := by timed falseIntro lean_a645
      have lean_s3311 : (Eq let943 False) := by timed Eq.trans lean_s3309 lean_s3310
      have lean_s3312 : let1855 := by timed falseElim lean_s3311
      show let1855 from lean_s3312
  ))))
have lean_s3307 : (Implies let1859 let1855) := by liftOrNToImp lean_s3306, 2
have lean_s3308 : (Or (Not let1859) let1855) := by timed impliesElim lean_s3307
have lean_s3309 : let1858 := by R1 lean_s3305, lean_s3308, let1859, [(- 1), (- 1)]
have lean_s3310 : let1054 := by timed rfl
have lean_s3311 : let28 := by timed rfl
let lean_s3312 := by timed flipCongrArg lean_s3311 [Eq]
have lean_s3313 : (Eq let26 let28) := by timed congr lean_s3312 lean_r418
have lean_s3314 : (Eq let26 True) := by timed Eq.trans lean_s3313 lean_r10
have lean_s3315 : (Eq let27 True) := by timed Eq.trans lean_r9 lean_s3314
have lean_s3316 : let27 := by timed trueElim lean_s3315
let lean_s3317 := by timed congr lean_s3310 lean_s3316
let lean_s3318 := by timed congr lean_s3310 lean_s2079
have lean_s3319 : (Eq let1855 let1855) := by timed rfl
let lean_s3320 := by timed congr lean_s3318 lean_s3319
have lean_s3321 : (Eq let1858 let1857) := by timed congr lean_s3317 lean_s3320
have lean_s3322 : let1857 := by timed eqResolve lean_s3309 lean_s3321
let lean_s3323 := by R1 lean_s3304, lean_s3322, let943, [(- 1), (- 1)]
have lean_s3324 : let24 := by andElim lean_s709, 3
let lean_s3325 := by R1 lean_s3323, lean_s3324, let23, [(- 1), 0]
have lean_s3326 : (Eq let1013 let1854) := by timed flipCongrArg lean_r11 [Not]
have lean_s3327 : let1854 := by timed eqResolve lean_a477 lean_s3326
have lean_s3328 : (Or let1458 (Or let1059 let1470)) := by timed flipNotAnd lean_s3327 [let33, let31, let29]
have lean_s3329 : (Or let1470 let1853) := by permutateOr lean_s3328, [2, 0, 1], (- 1)
have lean_s3330 : (Or let1230 (Or let352 (Or let1211 (Or let98 (Or let1190 (Or let98 (Or let505 (Or let1059 (Or let1458 let1853))))))))) := by R1 lean_s3325, lean_s3329, let29, [(- 1), (- 1)]
have lean_s3331 : (Or let1230 (Or let352 (Or let1211 (Or let98 (Or let1190 (Or let505 (Or let1059 let1458))))))) := by factor lean_s3330, 10
let lean_s3332 := by R2 lean_s3331, lean_s2044, let33, [(- 1), (- 1)]
let lean_s3333 := by R1 lean_s3332, lean_s2066, let397, [(- 1), 0]
have lean_s3334 : (Or let1852 (Or let953 (Or let1156 let1652))) := by timed cnfAndNeg [let809, let975, let97, let734]
have lean_s3335 : let1851 :=
  (scope (fun lean_a647 : let809 =>
    (scope (fun lean_a648 : let975 =>
      (scope (fun lean_a649 : let97 =>
        (scope (fun lean_a650 : let734 =>
          have lean_s3335 : let160 := by timed Eq.symm lean_a648
          have lean_s3336 : let975 := by timed Eq.symm lean_s3335
          let lean_s3337 := by timed flipCongrArg lean_s3336 [Eq]
          have lean_s3338 : let246 := by timed Eq.symm lean_a650
          have lean_s3339 : let734 := by timed Eq.symm lean_s3338
          have lean_s3340 : let246 := by timed Eq.symm lean_s3339
          have lean_s3341 : let171 := by timed Eq.symm lean_a649
          have lean_s3342 : let97 := by timed Eq.symm lean_s3341
          have lean_s3343 : let1644 := by timed Eq.trans lean_s3340 lean_s3342
          have lean_s3344 : (Eq let517 let808) := by timed congr lean_s3337 lean_s3343
          have lean_s3345 : let1162 := by timed falseIntro lean_a647
          have lean_s3346 : let1605 := by timed Eq.trans lean_s3344 lean_s3345
          have lean_s3347 : let1599 := by timed falseElim lean_s3346
          show let1599 from lean_s3347
  ))))))))
have lean_s3336 : (Implies let1852 let1599) := by liftOrNToImp lean_s3335, 4
have lean_s3337 : (Or (Not let1852) let1599) := by timed impliesElim lean_s3336
have lean_s3338 : let1851 := by R1 lean_s3334, lean_s3337, let1852, [(- 1), (- 1)]
have lean_s3339 : let1054 := by timed rfl
let lean_s3340 := by timed congr lean_s3339 lean_s864
let lean_s3341 := by timed congr lean_s3339 lean_s759
let lean_s3342 := by timed congr lean_s3339 lean_s1444
let lean_s3343 := by timed congr lean_s3339 lean_s17
let lean_s3344 := by timed congr lean_s3343 lean_s2104
let lean_s3345 := by timed congr lean_s3342 lean_s3344
let lean_s3346 := by timed congr lean_s3341 lean_s3345
have lean_s3347 : (Eq let1851 let1850) := by timed congr lean_s3340 lean_s3346
have lean_s3348 : let1850 := by timed eqResolve lean_s3338 lean_s3347
have lean_s3349 : (Or let808 (Or let1156 (Or let1194 (Or let1259 let1599)))) := by permutateOr lean_s3348, [0, 1, 3, 2, 4], (- 1)
let lean_s3350 := by R1 lean_s3333, lean_s3349, let517, [(- 1), (- 1)]
let lean_s3351 := by R1 lean_s3350, lean_s882, let808, [(- 1), 0]
let lean_s3352 := by R2 lean_s3351, lean_s43, let734, [(- 1), 0]
let lean_s3353 := by R2 lean_s3352, lean_s767, let975, [(- 1), 0]
let lean_s3354 := by R2 lean_s3353, lean_s2408, let624, [(- 1), (- 1)]
have lean_s3355 : (Or let1211 (Or let98 (Or let1190 (Or let505 (Or let1059 (Or let108 (Or let399 (Or let1259 (Or let1190 (Or let1077 let1446)))))))))) := by R2 lean_s3354, lean_s2415, let351, [(- 1), (- 1)]
have lean_s3356 : (Or let1211 (Or let98 (Or let1190 (Or let505 (Or let1059 (Or let108 (Or let399 (Or let1259 let1077)))))))) := by factor lean_s3355, (- 1)
let lean_s3357 := by R2 lean_s3356, lean_s1537, let278, [(- 1), (- 1)]
let lean_s3358 := by R1 lean_s3357, lean_s1540, let747, [(- 1), 0]
let lean_s3359 := by R1 lean_s3358, lean_s1562, let979, [(- 1), 0]
let lean_s3360 := by R1 lean_s3359, lean_s2844, let148, [(- 1), (- 1)]
have lean_s3361 : (Or let1211 (Or let98 (Or let505 (Or let1059 (Or let108 (Or let399 (Or let1259 (Or let1077 (Or let62 let1211))))))))) := by R1 lean_s3360, lean_s1668, let338, [(- 1), 0]
have lean_s3362 : (Or let1211 (Or let98 (Or let505 (Or let1059 (Or let108 (Or let399 (Or let1259 (Or let1077 let62)))))))) := by factor lean_s3361, 9
let lean_s3363 := by R2 lean_s3362, lean_s3169, let142, [(- 1), (- 1)]
let lean_s3364 := by R1 lean_s3363, lean_s3202, let702, [(- 1), 0]
let lean_s3365 := by R1 lean_s3364, lean_s1562, let979, [(- 1), 0]
let lean_s3366 := by R2 lean_s3365, lean_s744, let123, [(- 1), (- 1)]
have lean_s3367 : (Or let98 (Or let505 (Or let1059 (Or let108 (Or let399 (Or let1259 (Or let62 (Or let98 (Or let108 (Or let108 let1844)))))))))) := by R1 lean_s3366, lean_s768, let516, [(- 1), 0]
have lean_s3368 : (Or let98 (Or let505 (Or let1059 (Or let108 (Or let399 (Or let1259 (Or let62 let1844))))))) := by factor lean_s3367, (- 1)
have lean_s3369 : let1113 := by andElim lean_s647, 33
have lean_s3370 : (Or let110 (Or let142 (Or let619 (Or let902 let897)))) := by permutateOr lean_s3369, [2, 4, 0, 1, 3], (- 1)
have lean_s3371 : (Or let1706 (Or let381 let1085)) := by timed cnfAndNeg [let380, let967]
have lean_s3372 : let1705 :=
  (scope (fun lean_a647 : let380 =>
    (scope (fun lean_a648 : let967 =>
      have lean_s3372 : let188 := by timed Eq.symm lean_a648
      have lean_s3373 : let967 := by timed Eq.symm lean_s3372
      let lean_s3374 := by timed flipCongrArg lean_s3373 [Eq]
      have lean_s3375 : (Eq let10 let10) := by timed rfl
      have lean_s3376 : (Eq let902 let379) := by timed congr lean_s3374 lean_s3375
      have lean_s3377 : let1294 := by timed falseIntro lean_a647
      have lean_s3378 : (Eq let902 False) := by timed Eq.trans lean_s3376 lean_s3377
      have lean_s3379 : let1702 := by timed falseElim lean_s3378
      show let1702 from lean_s3379
  ))))
have lean_s3373 : (Implies let1706 let1702) := by liftOrNToImp lean_s3372, 2
have lean_s3374 : (Or (Not let1706) let1702) := by timed impliesElim lean_s3373
have lean_s3375 : let1705 := by R1 lean_s3371, lean_s3374, let1706, [(- 1), (- 1)]
have lean_s3376 : let1054 := by timed rfl
let lean_s3377 := by timed congr lean_s3376 lean_s2567
let lean_s3378 := by timed congr lean_s3376 lean_s730
have lean_s3379 : (Eq let1702 let1702) := by timed rfl
let lean_s3380 := by timed congr lean_s3378 lean_s3379
have lean_s3381 : (Eq let1705 let1704) := by timed congr lean_s3377 lean_s3380
have lean_s3382 : let1704 := by timed eqResolve lean_s3375 lean_s3381
let lean_s3383 := by R1 lean_s3382, lean_s2582, let379, [(- 1), 0]
have lean_s3384 : let1702 := by R2 lean_s3383, lean_s741, let967, [(- 1), 0]
let lean_s3385 := by R1 lean_s3370, lean_s3384, let902, [(- 1), 0]
have lean_s3386 : (Or let1843 (Or let68 let1834)) := by timed cnfAndNeg [let67, let878]
have lean_s3387 : let1842 :=
  (scope (fun lean_a647 : let67 =>
    (scope (fun lean_a648 : let878 =>
      have lean_s3387 : let497 := by timed Eq.symm lean_a648
      have lean_s3388 : let878 := by timed Eq.symm lean_s3387
      let lean_s3389 := by timed flipCongrArg lean_s3388 [Eq]
      have lean_s3390 : let1623 := by timed rfl
      have lean_s3391 : (Eq let619 let66) := by timed congr lean_s3389 lean_s3390
      have lean_s3392 : (Eq let66 False) := by timed falseIntro lean_a647
      have lean_s3393 : (Eq let619 False) := by timed Eq.trans lean_s3391 lean_s3392
      have lean_s3394 : let1699 := by timed falseElim lean_s3393
      show let1699 from lean_s3394
  ))))
have lean_s3388 : (Implies let1843 let1699) := by liftOrNToImp lean_s3387, 2
have lean_s3389 : (Or (Not let1843) let1699) := by timed impliesElim lean_s3388
have lean_s3390 : let1842 := by R1 lean_s3386, lean_s3389, let1843, [(- 1), (- 1)]
have lean_s3391 : let1054 := by timed rfl
have lean_s3392 : let77 := by timed rfl
let lean_s3393 := by timed flipCongrArg lean_s3392 [Eq]
have lean_s3394 : (Eq let69 let77) := by timed congr lean_s3393 lean_r22
have lean_s3395 : (Eq let69 True) := by timed Eq.trans lean_s3394 lean_r24
have lean_s3396 : (Eq let70 True) := by timed Eq.trans lean_r20 lean_s3395
have lean_s3397 : let70 := by timed trueElim lean_s3396
let lean_s3398 := by timed congr lean_s3391 lean_s3397
have lean_s3399 : (Eq let1834 let1834) := by timed rfl
let lean_s3400 := by timed congr lean_s3391 lean_s3399
have lean_s3401 : (Eq let1699 let1699) := by timed rfl
let lean_s3402 := by timed congr lean_s3400 lean_s3401
have lean_s3403 : (Eq let1842 let1841) := by timed congr lean_s3398 lean_s3402
have lean_s3404 : let1841 := by timed eqResolve lean_s3390 lean_s3403
let lean_s3405 := by R1 lean_s3385, lean_s3404, let619, [(- 1), (- 1)]
have lean_s3406 : let67 := by andElim lean_s29, 57
let lean_s3407 := by R1 lean_s3405, lean_s3406, let66, [(- 1), 0]
have lean_s3408 : (Or let1839 (Or let40 (Or let1834 let1652))) := by timed cnfAndNeg [let39, let878, let97, let734]
have lean_s3409 : let1838 :=
  (scope (fun lean_a649 : let39 =>
    (scope (fun lean_a650 : let878 =>
      (scope (fun lean_a651 : let97 =>
        (scope (fun lean_a652 : let734 =>
          have lean_s3409 : let497 := by timed Eq.symm lean_a650
          have lean_s3410 : let878 := by timed Eq.symm lean_s3409
          let lean_s3411 := by timed flipCongrArg lean_s3410 [Eq]
          have lean_s3412 : let246 := by timed Eq.symm lean_a652
          have lean_s3413 : let171 := by timed Eq.symm lean_a651
          have lean_s3414 : let97 := by timed Eq.symm lean_s3413
          have lean_s3415 : let1644 := by timed Eq.trans lean_s3412 lean_s3414
          have lean_s3416 : (Eq let897 let38) := by timed congr lean_s3411 lean_s3415
          have lean_s3417 : (Eq let38 False) := by timed falseIntro lean_a649
          have lean_s3418 : let1694 := by timed Eq.trans lean_s3416 lean_s3417
          have lean_s3419 : let1688 := by timed falseElim lean_s3418
          show let1688 from lean_s3419
  ))))))))
have lean_s3410 : (Implies let1839 let1688) := by liftOrNToImp lean_s3409, 4
have lean_s3411 : (Or (Not let1839) let1688) := by timed impliesElim lean_s3410
have lean_s3412 : let1838 := by R1 lean_s3408, lean_s3411, let1839, [(- 1), (- 1)]
have lean_s3413 : let1054 := by timed rfl
have lean_s3414 : let548 := by timed rfl
let lean_s3415 := by timed flipCongrArg lean_s3414 [Eq]
have lean_s3416 : (Eq let41 let548) := by timed congr lean_s3415 lean_r13
have lean_s3417 : (Eq let41 True) := by timed Eq.trans lean_s3416 lean_r183
have lean_s3418 : (Eq let42 True) := by timed Eq.trans lean_r12 lean_s3417
have lean_s3419 : let42 := by timed trueElim lean_s3418
let lean_s3420 := by timed congr lean_s3413 lean_s3419
let lean_s3421 := by timed congr lean_s3413 lean_s3399
let lean_s3422 := by timed congr lean_s3413 lean_s1444
let lean_s3423 := by timed congr lean_s3413 lean_s17
have lean_s3424 : (Eq let1688 let1688) := by timed rfl
let lean_s3425 := by timed congr lean_s3423 lean_s3424
let lean_s3426 := by timed congr lean_s3422 lean_s3425
let lean_s3427 := by timed congr lean_s3421 lean_s3426
have lean_s3428 : (Eq let1838 let1837) := by timed congr lean_s3420 lean_s3427
have lean_s3429 : let1837 := by timed eqResolve lean_s3412 lean_s3428
have lean_s3430 : (Or let38 (Or let1194 (Or let1834 (Or let1259 let1688)))) := by permutateOr lean_s3429, [0, 3, 1, 2, 4], (- 1)
let lean_s3431 := by R1 lean_s3407, lean_s3430, let897, [(- 1), (- 1)]
have lean_s3432 : let39 := by andElim lean_s29, 58
let lean_s3433 := by R1 lean_s3431, lean_s3432, let38, [(- 1), 0]
have lean_s3434 : (Or let110 (Or let142 (Or let1834 let1835))) := by R2 lean_s3433, lean_s43, let734, [(- 1), 0]
have lean_s3435 : (Or let110 (Or let142 let1835)) := by factor lean_s3434, (- 1)
have lean_s3436 : let1123 := by andElim lean_s647, 23
have lean_s3437 : (Or let533 (Or let56 (Or let878 (Or let874 let870)))) := by permutateOr lean_s3436, [3, 4, 0, 1, 2], (- 1)
let lean_s3438 := by R2 lean_s3435, lean_s3437, let878, [(- 1), (- 1)]
have lean_s3439 : (Or let1833 (Or let47 let1085)) := by timed cnfAndNeg [let46, let967]
have lean_s3440 : let1832 :=
  (scope (fun lean_a650 : let46 =>
    (scope (fun lean_a651 : let967 =>
      have lean_s3440 : let188 := by timed Eq.symm lean_a651
      have lean_s3441 : let967 := by timed Eq.symm lean_s3440
      let lean_s3442 := by timed flipCongrArg lean_s3441 [Eq]
      have lean_s3443 : (Eq let43 let43) := by timed rfl
      have lean_s3444 : (Eq let874 let45) := by timed congr lean_s3442 lean_s3443
      have lean_s3445 : (Eq let45 False) := by timed falseIntro lean_a650
      have lean_s3446 : (Eq let874 False) := by timed Eq.trans lean_s3444 lean_s3445
      have lean_s3447 : let1829 := by timed falseElim lean_s3446
      show let1829 from lean_s3447
  ))))
have lean_s3441 : (Implies let1833 let1829) := by liftOrNToImp lean_s3440, 2
have lean_s3442 : (Or (Not let1833) let1829) := by timed impliesElim lean_s3441
have lean_s3443 : let1832 := by R1 lean_s3439, lean_s3442, let1833, [(- 1), (- 1)]
have lean_s3444 : let1054 := by timed rfl
have lean_s3445 : let50 := by timed rfl
let lean_s3446 := by timed flipCongrArg lean_s3445 [Eq]
have lean_s3447 : (Eq let48 let50) := by timed congr lean_s3446 lean_r15
have lean_s3448 : (Eq let48 True) := by timed Eq.trans lean_s3447 lean_r16
have lean_s3449 : (Eq let49 True) := by timed Eq.trans lean_r14 lean_s3448
have lean_s3450 : let49 := by timed trueElim lean_s3449
let lean_s3451 := by timed congr lean_s3444 lean_s3450
let lean_s3452 := by timed congr lean_s3444 lean_s730
have lean_s3453 : (Eq let1829 let1829) := by timed rfl
let lean_s3454 := by timed congr lean_s3452 lean_s3453
have lean_s3455 : (Eq let1832 let1831) := by timed congr lean_s3451 lean_s3454
have lean_s3456 : let1831 := by timed eqResolve lean_s3443 lean_s3455
have lean_s3457 : let46 := by andElim lean_s29, 64
let lean_s3458 := by R1 lean_s3456, lean_s3457, let45, [(- 1), 0]
have lean_s3459 : let1829 := by R2 lean_s3458, lean_s741, let967, [(- 1), 0]
let lean_s3460 := by R1 lean_s3438, lean_s3459, let874, [(- 1), 0]
have lean_s3461 : (Or let1828 (Or let596 let1781)) := by timed cnfAndNeg [let595, let909]
have lean_s3462 : let1827 :=
  (scope (fun lean_a651 : let595 =>
    (scope (fun lean_a652 : let909 =>
      have lean_s3462 : let1058 := by timed rfl
      let lean_s3463 := by timed flipCongrArg lean_s3462 [Eq]
      have lean_s3464 : let242 := by timed Eq.symm lean_a652
      have lean_s3465 : (Eq let533 let530) := by timed congr lean_s3463 lean_s3464
      have lean_s3466 : let1057 := by timed falseIntro lean_a651
      have lean_s3467 : (Eq let533 False) := by timed Eq.trans lean_s3465 lean_s3466
      have lean_s3468 : let1780 := by timed falseElim lean_s3467
      show let1780 from lean_s3468
  ))))
have lean_s3463 : (Implies let1828 let1780) := by liftOrNToImp lean_s3462, 2
have lean_s3464 : (Or (Not let1828) let1780) := by timed impliesElim lean_s3463
have lean_s3465 : let1827 := by R1 lean_s3461, lean_s3464, let1828, [(- 1), (- 1)]
have lean_s3466 : let1054 := by timed rfl
let lean_s3467 := by timed congr lean_s3466 lean_s781
have lean_s3468 : (Eq let1781 let1781) := by timed rfl
let lean_s3469 := by timed congr lean_s3466 lean_s3468
have lean_s3470 : (Eq let1780 let1780) := by timed rfl
let lean_s3471 := by timed congr lean_s3469 lean_s3470
have lean_s3472 : (Eq let1827 let1826) := by timed congr lean_s3467 lean_s3471
have lean_s3473 : let1826 := by timed eqResolve lean_s3465 lean_s3472
let lean_s3474 := by R1 lean_s3460, lean_s3473, let533, [(- 1), (- 1)]
let lean_s3475 := by R1 lean_s3474, lean_s789, let530, [(- 1), 0]
have lean_s3476 : (Or let1824 (Or let596 let1153)) := by timed cnfAndNeg [let595, let108]
have lean_s3477 : let1823 :=
  (scope (fun lean_a652 : let595 =>
    (scope (fun lean_a653 : let108 =>
      have lean_s3477 : let1058 := by timed rfl
      let lean_s3478 := by timed flipCongrArg lean_s3477 [Eq]
      have lean_s3479 : let365 := by timed Eq.symm lean_a653
      have lean_s3480 : (Eq let142 let530) := by timed congr lean_s3478 lean_s3479
      have lean_s3481 : let1057 := by timed falseIntro lean_a652
      have lean_s3482 : let1825 := by timed Eq.trans lean_s3480 lean_s3481
      have lean_s3483 : let1077 := by timed falseElim lean_s3482
      show let1077 from lean_s3483
  ))))
have lean_s3478 : (Implies let1824 let1077) := by liftOrNToImp lean_s3477, 2
have lean_s3479 : (Or (Not let1824) let1077) := by timed impliesElim lean_s3478
have lean_s3480 : let1823 := by R1 lean_s3476, lean_s3479, let1824, [(- 1), (- 1)]
have lean_s3481 : let1054 := by timed rfl
let lean_s3482 := by timed congr lean_s3481 lean_s781
let lean_s3483 := by timed congr lean_s3481 lean_s872
let lean_s3484 := by timed congr lean_s3483 lean_s2711
have lean_s3485 : (Eq let1823 let1822) := by timed congr lean_s3482 lean_s3484
have lean_s3486 : let1822 := by timed eqResolve lean_s3480 lean_s3485
let lean_s3487 := by R1 lean_s3475, lean_s3486, let142, [(- 1), (- 1)]
let lean_s3488 := by R1 lean_s3487, lean_s789, let530, [(- 1), 0]
have lean_s3489 : let1125 := by andElim lean_s647, 21
have lean_s3490 : (Or let909 (Or let123 (Or let712 (Or let726 let745)))) := by permutateOr lean_s3489, [3, 4, 1, 0, 2], (- 1)
let lean_s3491 := by R2 lean_s3488, lean_s3490, let909, [(- 1), (- 1)]
have lean_s3492 : (Or let1821 (Or let54 let1156)) := by timed cnfAndNeg [let53, let975]
have lean_s3493 : let1820 :=
  (scope (fun lean_a652 : let53 =>
    (scope (fun lean_a653 : let975 =>
      have lean_s3493 : let160 := by timed Eq.symm lean_a653
      have lean_s3494 : let975 := by timed Eq.symm lean_s3493
      let lean_s3495 := by timed flipCongrArg lean_s3494 [Eq]
      have lean_s3496 : (Eq let37 let37) := by timed rfl
      have lean_s3497 : (Eq let726 let52) := by timed congr lean_s3495 lean_s3496
      have lean_s3498 : (Eq let52 False) := by timed falseIntro lean_a652
      have lean_s3499 : (Eq let726 False) := by timed Eq.trans lean_s3497 lean_s3498
      have lean_s3500 : let1817 := by timed falseElim lean_s3499
      show let1817 from lean_s3500
  ))))
have lean_s3494 : (Implies let1821 let1817) := by liftOrNToImp lean_s3493, 2
have lean_s3495 : (Or (Not let1821) let1817) := by timed impliesElim lean_s3494
have lean_s3496 : let1820 := by R1 lean_s3492, lean_s3495, let1821, [(- 1), (- 1)]
have lean_s3497 : let1054 := by timed rfl
have lean_s3498 : let103 := by timed rfl
let lean_s3499 := by timed flipCongrArg lean_s3498 [Eq]
have lean_s3500 : (Eq let534 let103) := by timed congr lean_s3499 lean_r17
have lean_s3501 : (Eq let534 True) := by timed Eq.trans lean_s3500 lean_r33
have lean_s3502 : (Eq let55 True) := by timed Eq.trans lean_r174 lean_s3501
have lean_s3503 : let55 := by timed trueElim lean_s3502
let lean_s3504 := by timed congr lean_s3497 lean_s3503
let lean_s3505 := by timed congr lean_s3497 lean_s759
have lean_s3506 : (Eq let1817 let1817) := by timed rfl
let lean_s3507 := by timed congr lean_s3505 lean_s3506
have lean_s3508 : (Eq let1820 let1819) := by timed congr lean_s3504 lean_s3507
have lean_s3509 : let1819 := by timed eqResolve lean_s3496 lean_s3508
have lean_s3510 : let53 := by andElim lean_s29, 51
let lean_s3511 := by R1 lean_s3509, lean_s3510, let52, [(- 1), 0]
have lean_s3512 : let1817 := by R2 lean_s3511, lean_s767, let975, [(- 1), 0]
let lean_s3513 := by R1 lean_s3491, lean_s3512, let726, [(- 1), 0]
have lean_s3514 : (Or let1816 (Or let1153 let1211)) := by timed cnfAndNeg [let108, let123]
have lean_s3515 : let1815 :=
  (scope (fun lean_a653 : let108 =>
    (scope (fun lean_a654 : let123 =>
      have lean_s3515 : let263 := by timed Eq.symm lean_a654
      have lean_s3516 : let365 := by timed Eq.symm lean_a653
      have lean_s3517 : let108 := by timed Eq.symm lean_s3516
      have lean_s3518 : let344 := by timed Eq.trans lean_s3515 lean_s3517
      show let344 from lean_s3518
  ))))
have lean_s3516 : (Implies let1816 let344) := by liftOrNToImp lean_s3515, 2
have lean_s3517 : (Or (Not let1816) let344) := by timed impliesElim lean_s3516
have lean_s3518 : let1815 := by R1 lean_s3514, lean_s3517, let1816, [(- 1), (- 1)]
have lean_s3519 : (Or let344 (Or let1211 let1153)) := by permutateOr lean_s3518, [2, 1, 0], (- 1)
let lean_s3520 := by R1 lean_s3513, lean_s3519, let123, [(- 1), (- 1)]
have lean_s3521 : (Or let110 (Or let1259 (Or let56 (Or let870 (Or let1153 (Or let712 (Or let745 let1153))))))) := by R1 lean_s3520, lean_s850, let344, [(- 1), 0]
have lean_s3522 : (Or let110 (Or let1259 (Or let56 (Or let870 (Or let1153 (Or let712 let745)))))) := by factor lean_s3521, 7
have lean_s3523 : (Or let56 (Or let110 (Or let712 (Or let745 (Or let870 (Or let1259 let1153)))))) := by permutateOr lean_s3522, [2, 0, 5, 6, 3, 1, 4], (- 1)
let lean_s3524 := by R1 lean_s3368, lean_s3523, let108, [(- 1), (- 1)]
have lean_s3525 : (Or let1814 (Or let1363 let1387)) := by timed cnfAndNeg [let58, let712]
have lean_s3526 : let1813 :=
  (scope (fun lean_a653 : let58 =>
    (scope (fun lean_a654 : let712 =>
      have lean_s3526 : let490 := by timed Eq.symm lean_a654
      have lean_s3527 : let485 := by timed Eq.symm lean_a653
      have lean_s3528 : let58 := by timed Eq.symm lean_s3527
      have lean_s3529 : let795 := by timed Eq.trans lean_s3526 lean_s3528
      show let795 from lean_s3529
  ))))
have lean_s3527 : (Implies let1814 let795) := by liftOrNToImp lean_s3526, 2
have lean_s3528 : (Or (Not let1814) let795) := by timed impliesElim lean_s3527
have lean_s3529 : let1813 := by R1 lean_s3525, lean_s3528, let1814, [(- 1), (- 1)]
have lean_s3530 : (Or let795 (Or let1387 let1363)) := by permutateOr lean_s3529, [2, 1, 0], (- 1)
let lean_s3531 := by R1 lean_s3524, lean_s3530, let712, [(- 1), (- 1)]
have lean_s3532 : let796 := by andElim lean_s29, 68
let lean_s3533 := by R1 lean_s3531, lean_s3532, let795, [(- 1), 0]
let lean_s3534 := by R1 lean_s3533, lean_s2040, let399, [(- 1), (- 1)]
let lean_s3535 := by R1 lean_s3534, lean_s2041, let793, [(- 1), 0]
have lean_s3536 : (Eq let1029 let1812) := by timed flipCongrArg lean_r18 [Not]
have lean_s3537 : let1812 := by timed eqResolve lean_a531 lean_s3536
have lean_s3538 : (Or let1363 (Or let1664 let1059)) := by timed flipNotAnd lean_s3537 [let58, let56, let31]
have lean_s3539 : (Or let1363 (Or let1059 let1664)) := by permutateOr lean_s3538, [0, 2, 1], (- 1)
let lean_s3540 := by R1 lean_s3535, lean_s3539, let56, [(- 1), (- 1)]
have lean_s3541 : (Eq let1018 let1811) := by timed flipCongrArg lean_r19 [Not]
have lean_s3542 : let1811 := by timed eqResolve lean_a486 lean_s3541
have lean_s3543 : (Or let1059 (Or let1149 let1363)) := by timed flipNotAnd lean_s3542 [let31, let62, let58]
have lean_s3544 : (Or let1363 (Or let1059 let1149)) := by permutateOr lean_s3543, [2, 0, 1], (- 1)
have lean_s3545 : (Or let98 (Or let505 (Or let1059 (Or let1259 (Or let138 (Or let525 (Or let110 (Or let745 (Or let870 (Or let1259 (Or let1363 (Or let1363 (Or let1363 (Or let1059 (Or let1363 let1059))))))))))))))) := by R1 lean_s3540, lean_s3544, let62, [(- 1), (- 1)]
have lean_s3546 : (Or let98 (Or let505 (Or let1059 (Or let1259 (Or let138 (Or let525 (Or let110 (Or let745 (Or let870 let1363))))))))) := by factor lean_s3545, 15
let lean_s3547 := by R2 lean_s3546, lean_s1632, let58, [(- 1), (- 1)]
let lean_s3548 := by R1 lean_s3547, lean_s1647, let520, [(- 1), 0]
have lean_s3549 : (Or let1810 (Or let1191 let1606)) := by timed cnfAndNeg [let100, let110]
have lean_s3550 : let1809 :=
  (scope (fun lean_a653 : let100 =>
    (scope (fun lean_a654 : let110 =>
      have lean_s3550 : let218 := by timed Eq.symm lean_a654
      have lean_s3551 : let474 := by timed Eq.symm lean_a653
      have lean_s3552 : let100 := by timed Eq.symm lean_s3551
      have lean_s3553 : let785 := by timed Eq.trans lean_s3550 lean_s3552
      show let785 from lean_s3553
  ))))
have lean_s3551 : (Implies let1810 let785) := by liftOrNToImp lean_s3550, 2
have lean_s3552 : (Or (Not let1810) let785) := by timed impliesElim lean_s3551
have lean_s3553 : let1809 := by R1 lean_s3549, lean_s3552, let1810, [(- 1), (- 1)]
have lean_s3554 : (Or let785 (Or let1606 let1191)) := by permutateOr lean_s3553, [2, 1, 0], (- 1)
let lean_s3555 := by R1 lean_s3548, lean_s3554, let110, [(- 1), (- 1)]
have lean_s3556 : let786 := by andElim lean_s29, 79
let lean_s3557 := by R1 lean_s3555, lean_s3556, let785, [(- 1), 0]
let lean_s3558 := by R1 lean_s3557, lean_s2018, let145, [(- 1), (- 1)]
let lean_s3559 := by R1 lean_s3558, lean_s789, let530, [(- 1), 0]
have lean_s3560 : (Eq let1026 let1808) := by timed flipCongrArg lean_r345 [Not]
have lean_s3561 : let1808 := by timed eqResolve lean_a511 lean_s3560
have lean_s3562 : (Or let1259 (Or let1221 let1191)) := by timed flipNotAnd lean_s3561 [let97, let138, let100]
have lean_s3563 : (Or let1259 (Or let1191 let1221)) := by permutateOr lean_s3562, [0, 2, 1], (- 1)
have lean_s3564 : (Or let98 (Or let505 (Or let1059 (Or let1259 (Or let525 (Or let745 (Or let870 (Or let151 (Or let525 (Or let1191 (Or let1191 (Or let1259 let1191)))))))))))) := by R1 lean_s3559, lean_s3563, let138, [(- 1), (- 1)]
have lean_s3565 : (Or let98 (Or let505 (Or let1059 (Or let1259 (Or let525 (Or let745 (Or let870 (Or let151 let1191)))))))) := by factor lean_s3564, (- 1)
let lean_s3566 := by R2 lean_s3565, lean_s798, let100, [(- 1), (- 1)]
let lean_s3567 := by R1 lean_s3566, lean_s820, let578, [(- 1), 0]
let lean_s3568 := by R1 lean_s3567, lean_s2250, let554, [(- 1), 0]
let lean_s3569 := by R1 lean_s3568, lean_s3143, let313, [(- 1), (- 1)]
let lean_s3570 := by R1 lean_s3569, lean_s1511, let82, [(- 1), 0]
let lean_s3571 := by R1 lean_s3570, lean_s1892, let505, [(- 1), (- 1)]
let lean_s3572 := by R2 lean_s3571, lean_s43, let734, [(- 1), 0]
let lean_s3573 := by R1 lean_s3572, lean_s1447, let87, [(- 1), (- 1)]
have lean_s3574 : (Or let98 (Or let1059 (Or let1259 (Or let525 (Or let745 (Or let870 (Or let151 (Or let120 (Or let1259 (Or let1259 let1259)))))))))) := by R1 lean_s3573, lean_s1449, let432, [(- 1), 0]
have lean_s3575 : (Or let98 (Or let1059 (Or let1259 (Or let525 (Or let745 (Or let870 let1734)))))) := by factor lean_s3574, 10
let lean_s3576 := by R2 lean_s3575, lean_s1428, let97, [(- 1), (- 1)]
let lean_s3577 := by R1 lean_s3576, lean_s1540, let747, [(- 1), 0]
let lean_s3578 := by R1 lean_s3577, lean_s1405, let748, [(- 1), 0]
have lean_s3579 : (Or let1807 (Or let153 let1751)) := by timed cnfAndNeg [let152, let31, let738]
have lean_s3580 : let1806 :=
  (scope (fun lean_a653 : let152 =>
    (scope (fun lean_a654 : let31 =>
      (scope (fun lean_a655 : let738 =>
        have lean_s3580 : let1529 := by timed rfl
        let lean_s3581 := by timed flipCongrArg lean_s3580 [Eq]
        have lean_s3582 : let210 := by timed Eq.symm lean_a655
        have lean_s3583 : let420 := by timed Eq.symm lean_a654
        have lean_s3584 : let31 := by timed Eq.symm lean_s3583
        have lean_s3585 : let1750 := by timed Eq.trans lean_s3582 lean_s3584
        have lean_s3586 : (Eq let745 let151) := by timed congr lean_s3581 lean_s3585
        have lean_s3587 : let1527 := by timed falseIntro lean_a653
        have lean_s3588 : let1444 := by timed Eq.trans lean_s3586 lean_s3587
        have lean_s3589 : let1438 := by timed falseElim lean_s3588
        show let1438 from lean_s3589
  ))))))
have lean_s3581 : (Implies let1807 let1438) := by liftOrNToImp lean_s3580, 3
have lean_s3582 : (Or (Not let1807) let1438) := by timed impliesElim lean_s3581
have lean_s3583 : let1806 := by R1 lean_s3579, lean_s3582, let1807, [(- 1), (- 1)]
have lean_s3584 : let1054 := by timed rfl
let lean_s3585 := by timed congr lean_s3584 lean_s726
let lean_s3586 := by timed congr lean_s3584 lean_s1802
let lean_s3587 := by timed congr lean_s3584 lean_s13
let lean_s3588 := by timed congr lean_s3587 lean_s2427
let lean_s3589 := by timed congr lean_s3586 lean_s3588
have lean_s3590 : (Eq let1806 let1805) := by timed congr lean_s3585 lean_s3589
have lean_s3591 : let1805 := by timed eqResolve lean_s3583 lean_s3590
have lean_s3592 : (Or let151 (Or let1155 (Or let1438 let1059))) := by permutateOr lean_s3591, [0, 2, 3, 1], (- 1)
let lean_s3593 := by R1 lean_s3578, lean_s3592, let745, [(- 1), (- 1)]
let lean_s3594 := by R2 lean_s3593, lean_s45, let738, [(- 1), 0]
have lean_s3595 : (Or let1749 (Or let401 let1751)) := by timed cnfAndNeg [let400, let31, let738]
have lean_s3596 : let1747 :=
  (scope (fun lean_a653 : let400 =>
    (scope (fun lean_a654 : let31 =>
      (scope (fun lean_a655 : let738 =>
        have lean_s3596 : let1058 := by timed rfl
        let lean_s3597 := by timed flipCongrArg lean_s3596 [Eq]
        have lean_s3598 : let210 := by timed Eq.symm lean_a655
        have lean_s3599 : let420 := by timed Eq.symm lean_a654
        have lean_s3600 : let31 := by timed Eq.symm lean_s3599
        have lean_s3601 : let1750 := by timed Eq.trans lean_s3598 lean_s3600
        have lean_s3602 : (Eq let870 let120) := by timed congr lean_s3597 lean_s3601
        have lean_s3603 : let1056 := by timed falseIntro lean_a653
        have lean_s3604 : let1583 := by timed Eq.trans lean_s3602 lean_s3603
        have lean_s3605 : let1576 := by timed falseElim lean_s3604
        show let1576 from lean_s3605
  ))))))
have lean_s3597 : (Implies let1749 let1576) := by liftOrNToImp lean_s3596, 3
have lean_s3598 : (Or (Not let1749) let1576) := by timed impliesElim lean_s3597
have lean_s3599 : let1747 := by R1 lean_s3595, lean_s3598, let1749, [(- 1), (- 1)]
have lean_s3600 : let1054 := by timed rfl
have lean_s3601 : let121 := by timed rfl
let lean_s3602 := by timed flipCongrArg lean_s3601 [Eq]
have lean_s3603 : (Eq let402 let121) := by timed congr lean_s3602 lean_r155
have lean_s3604 : (Eq let402 True) := by timed Eq.trans lean_s3603 lean_r39
have lean_s3605 : (Eq let403 True) := by timed Eq.trans lean_r120 lean_s3604
have lean_s3606 : let403 := by timed trueElim lean_s3605
let lean_s3607 := by timed congr lean_s3600 lean_s3606
let lean_s3608 := by timed congr lean_s3600 lean_s1802
let lean_s3609 := by timed congr lean_s3600 lean_s13
let lean_s3610 := by timed congr lean_s3609 lean_s2205
let lean_s3611 := by timed congr lean_s3608 lean_s3610
have lean_s3612 : (Eq let1747 let1746) := by timed congr lean_s3607 lean_s3611
have lean_s3613 : let1746 := by timed eqResolve lean_s3599 lean_s3612
have lean_s3614 : (Or let120 (Or let1155 (Or let1576 let1059))) := by permutateOr lean_s3613, [0, 2, 3, 1], (- 1)
let lean_s3615 := by R1 lean_s3594, lean_s3614, let870, [(- 1), (- 1)]
let lean_s3616 := by R2 lean_s3615, lean_s45, let738, [(- 1), 0]
let lean_s3617 := by R2 lean_s981, lean_s986, let988, [(- 1), 0]
let lean_s3618 := by R2 lean_s3617, lean_s993, let647, [(- 1), (- 1)]
have lean_s3619 : (Or let1230 (Or let714 let1801)) := by R2 lean_s3618, lean_s1019, let351, [(- 1), (- 1)]
have lean_s3620 : (Or let1230 (Or let714 let1342)) := by factor lean_s3619, (- 1)
let lean_s3621 := by R2 lean_s3620, lean_s744, let108, [(- 1), (- 1)]
let lean_s3622 := by R1 lean_s3621, lean_s768, let516, [(- 1), 0]
have lean_s3623 : (Or let1759 (Or let722 let1221)) := by timed cnfAndNeg [let721, let138]
have lean_s3624 : let1758 :=
  (scope (fun lean_a654 : let721 =>
    (scope (fun lean_a655 : let138 =>
      have lean_s3624 : let1066 := by timed rfl
      let lean_s3625 := by timed flipCongrArg lean_s3624 [Eq]
      have lean_s3626 : let467 := by timed Eq.symm lean_a655
      have lean_s3627 : let138 := by timed Eq.symm lean_s3626
      have lean_s3628 : let467 := by timed Eq.symm lean_s3627
      have lean_s3629 : (Eq let314 let559) := by timed congr lean_s3625 lean_s3628
      have lean_s3630 : let1065 := by timed falseIntro lean_a654
      have lean_s3631 : let1571 := by timed Eq.trans lean_s3629 lean_s3630
      have lean_s3632 : let1323 := by timed falseElim lean_s3631
      show let1323 from lean_s3632
  ))))
have lean_s3625 : (Implies let1759 let1323) := by liftOrNToImp lean_s3624, 2
have lean_s3626 : (Or (Not let1759) let1323) := by timed impliesElim lean_s3625
have lean_s3627 : let1758 := by R1 lean_s3623, lean_s3626, let1759, [(- 1), (- 1)]
have lean_s3628 : let1054 := by timed rfl
let lean_s3629 := by timed congr lean_s3628 lean_s1619
let lean_s3630 := by timed congr lean_s3628 lean_s1709
let lean_s3631 := by timed congr lean_s3630 lean_s21
have lean_s3632 : (Eq let1758 let1757) := by timed congr lean_s3629 lean_s3631
have lean_s3633 : let1757 := by timed eqResolve lean_s3627 lean_s3632
let lean_s3634 := by R1 lean_s3622, lean_s3633, let138, [(- 1), (- 1)]
let lean_s3635 := by R1 lean_s3634, lean_s1628, let559, [(- 1), 0]
let lean_s3636 := by R2 lean_s3635, lean_s1000, let624, [(- 1), (- 1)]
have lean_s3637 : (Or let1149 (Or let123 (Or let525 (Or let1323 (Or let1323 (Or let1664 let1794)))))) := by R2 lean_s3636, lean_s1041, let704, [(- 1), (- 1)]
have lean_s3638 : (Or let1149 (Or let123 (Or let525 let1794))) := by factor lean_s3637, (- 1)
let lean_s3639 := by R2 lean_s3638, lean_s649, let314, [(- 1), (- 1)]
let lean_s3640 := by R1 lean_s3639, lean_s671, let703, [(- 1), 0]
let lean_s3641 := by R1 lean_s3640, lean_s713, let857, [(- 1), 0]
have lean_s3642 : (Or let1762 (Or let434 let1301)) := by timed cnfAndNeg [let433, let717]
have lean_s3643 : let1761 :=
  (scope (fun lean_a654 : let433 =>
    (scope (fun lean_a655 : let717 =>
      have lean_s3643 : let1265 := by timed rfl
      let lean_s3644 := by timed flipCongrArg lean_s3643 [Eq]
      have lean_s3645 : let254 := by timed Eq.symm lean_a655
      have lean_s3646 : (Eq let62 let432) := by timed congr lean_s3644 lean_s3645
      have lean_s3647 : let1264 := by timed falseIntro lean_a654
      have lean_s3648 : let1347 := by timed Eq.trans lean_s3646 lean_s3647
      have lean_s3649 : let1149 := by timed falseElim lean_s3648
      show let1149 from lean_s3649
  ))))
have lean_s3644 : (Implies let1762 let1149) := by liftOrNToImp lean_s3643, 2
have lean_s3645 : (Or (Not let1762) let1149) := by timed impliesElim lean_s3644
have lean_s3646 : let1761 := by R1 lean_s3642, lean_s3645, let1762, [(- 1), (- 1)]
have lean_s3647 : let1054 := by timed rfl
let lean_s3648 := by timed congr lean_s3647 lean_s1441
let lean_s3649 := by timed congr lean_s3647 lean_s1418
let lean_s3650 := by timed congr lean_s3649 lean_s870
have lean_s3651 : (Eq let1761 let1760) := by timed congr lean_s3648 lean_s3650
have lean_s3652 : let1760 := by timed eqResolve lean_s3646 lean_s3651
let lean_s3653 := by R1 lean_s3641, lean_s3652, let717, [(- 1), (- 1)]
have lean_s3654 : (Or let1149 (Or let123 (Or let525 (Or let1664 (Or let98 let1149))))) := by R1 lean_s3653, lean_s1449, let432, [(- 1), 0]
have lean_s3655 : (Or let1149 (Or let123 (Or let525 (Or let1664 let98)))) := by factor lean_s3654, 5
let lean_s3656 := by R2 lean_s3655, lean_s1537, let62, [(- 1), (- 1)]
let lean_s3657 := by R1 lean_s3656, lean_s1540, let747, [(- 1), 0]
let lean_s3658 := by R1 lean_s3657, lean_s1562, let979, [(- 1), 0]
let lean_s3659 := by R1 lean_s3658, lean_s1581, let148, [(- 1), (- 1)]
have lean_s3660 : (Or let123 (Or let525 (Or let1664 (Or let98 (Or let278 let1664))))) := by R1 lean_s3659, lean_s1511, let82, [(- 1), 0]
have lean_s3661 : (Or let123 (Or let525 (Or let1664 (Or let98 let278)))) := by factor lean_s3660, 5
let lean_s3662 := by R2 lean_s3661, lean_s2218, let56, [(- 1), (- 1)]
let lean_s3663 := by R1 lean_s3662, lean_s2240, let642, [(- 1), 0]
let lean_s3664 := by R1 lean_s3663, lean_s2250, let554, [(- 1), 0]
have lean_s3665 : (Or let1793 (Or let1221 let1659)) := by timed cnfAndNeg [let138, let510]
have lean_s3666 : let1792 :=
  (scope (fun lean_a654 : let138 =>
    (scope (fun lean_a655 : let510 =>
      have lean_s3666 : let234 := by timed Eq.symm lean_a655
      have lean_s3667 : let467 := by timed Eq.symm lean_a654
      have lean_s3668 : let138 := by timed Eq.symm lean_s3667
      have lean_s3669 : let835 := by timed Eq.trans lean_s3666 lean_s3668
      show let835 from lean_s3669
  ))))
have lean_s3667 : (Implies let1793 let835) := by liftOrNToImp lean_s3666, 2
have lean_s3668 : (Or (Not let1793) let835) := by timed impliesElim lean_s3667
have lean_s3669 : let1792 := by R1 lean_s3665, lean_s3668, let1793, [(- 1), (- 1)]
have lean_s3670 : (Or let835 (Or let1659 let1221)) := by permutateOr lean_s3669, [2, 1, 0], (- 1)
have lean_s3671 : let836 := by andElim lean_s29, 19
let lean_s3672 := by R1 lean_s3670, lean_s3671, let835, [(- 1), 0]
have lean_s3673 : let1116 := by andElim lean_s647, 30
have lean_s3674 : (Or let909 (Or let151 (Or let510 (Or let389 let517)))) := by permutateOr lean_s3673, [2, 4, 1, 0, 3], (- 1)
let lean_s3675 := by R2 lean_s3672, lean_s3674, let510, [(- 1), (- 1)]
have lean_s3676 : (Or let1791 (Or let74 let1156)) := by timed cnfAndNeg [let73, let975]
have lean_s3677 : let1790 :=
  (scope (fun lean_a654 : let73 =>
    (scope (fun lean_a655 : let975 =>
      have lean_s3677 : let160 := by timed Eq.symm lean_a655
      have lean_s3678 : let975 := by timed Eq.symm lean_s3677
      let lean_s3679 := by timed flipCongrArg lean_s3678 [Eq]
      have lean_s3680 : let1774 := by timed rfl
      have lean_s3681 : (Eq let389 let72) := by timed congr lean_s3679 lean_s3680
      have lean_s3682 : (Eq let72 False) := by timed falseIntro lean_a654
      have lean_s3683 : (Eq let389 False) := by timed Eq.trans lean_s3681 lean_s3682
      have lean_s3684 : let1787 := by timed falseElim lean_s3683
      show let1787 from lean_s3684
  ))))
have lean_s3678 : (Implies let1791 let1787) := by liftOrNToImp lean_s3677, 2
have lean_s3679 : (Or (Not let1791) let1787) := by timed impliesElim lean_s3678
have lean_s3680 : let1790 := by R1 lean_s3676, lean_s3679, let1791, [(- 1), (- 1)]
have lean_s3681 : let1054 := by timed rfl
have lean_s3682 : let78 := by timed rfl
let lean_s3683 := by timed flipCongrArg lean_s3682 [Eq]
have lean_s3684 : (Eq let75 let78) := by timed congr lean_s3683 lean_r23
have lean_s3685 : (Eq let75 True) := by timed Eq.trans lean_s3684 lean_r25
have lean_s3686 : (Eq let76 True) := by timed Eq.trans lean_r21 lean_s3685
have lean_s3687 : let76 := by timed trueElim lean_s3686
let lean_s3688 := by timed congr lean_s3681 lean_s3687
let lean_s3689 := by timed congr lean_s3681 lean_s759
have lean_s3690 : (Eq let1787 let1787) := by timed rfl
let lean_s3691 := by timed congr lean_s3689 lean_s3690
have lean_s3692 : (Eq let1790 let1789) := by timed congr lean_s3688 lean_s3691
have lean_s3693 : let1789 := by timed eqResolve lean_s3680 lean_s3692
have lean_s3694 : let73 := by andElim lean_s29, 2
let lean_s3695 := by R1 lean_s3693, lean_s3694, let72, [(- 1), 0]
have lean_s3696 : let1787 := by R2 lean_s3695, lean_s767, let975, [(- 1), 0]
let lean_s3697 := by R1 lean_s3675, lean_s3696, let389, [(- 1), 0]
have lean_s3698 : (Or let1786 (Or let953 (Or let1156 (Or let1171 (Or let1085 let1780))))) := by timed cnfAndNeg [let809, let975, let313, let967, let533]
have lean_s3699 : let1785 :=
  (scope (fun lean_a655 : let809 =>
    (scope (fun lean_a656 : let975 =>
      (scope (fun lean_a657 : let313 =>
        (scope (fun lean_a658 : let967 =>
          (scope (fun lean_a659 : let533 =>
            have lean_s3699 : let160 := by timed Eq.symm lean_a656
            have lean_s3700 : let975 := by timed Eq.symm lean_s3699
            let lean_s3701 := by timed flipCongrArg lean_s3700 [Eq]
            have lean_s3702 : let188 := by timed Eq.symm lean_a658
            have lean_s3703 : let173 := by timed Eq.symm lean_a657
            have lean_s3704 : let313 := by timed Eq.symm lean_s3703
            have lean_s3705 : let1686 := by timed Eq.trans lean_s3702 lean_s3704
            have lean_s3706 : let1685 := by timed Eq.symm lean_s3705
            have lean_s3707 : let241 := by timed Eq.symm lean_a659
            have lean_s3708 : (Eq let237 let44) := by timed Eq.trans lean_s3707 lean_a658
            have lean_s3709 : (Eq let44 let237) := by timed Eq.symm lean_s3708
            have lean_s3710 : (Eq let36 let237) := by timed Eq.trans lean_s3706 lean_s3709
            have lean_s3711 : (Eq let237 let36) := by timed Eq.symm lean_s3710
            have lean_s3712 : (Eq let909 let808) := by timed congr lean_s3701 lean_s3711
            have lean_s3713 : let1162 := by timed falseIntro lean_a655
            have lean_s3714 : (Eq let909 False) := by timed Eq.trans lean_s3712 lean_s3713
            have lean_s3715 : let1781 := by timed falseElim lean_s3714
            show let1781 from lean_s3715
  ))))))))))
have lean_s3700 : (Implies let1786 let1781) := by liftOrNToImp lean_s3699, 5
have lean_s3701 : (Or (Not let1786) let1781) := by timed impliesElim lean_s3700
have lean_s3702 : let1785 := by R1 lean_s3698, lean_s3701, let1786, [(- 1), (- 1)]
have lean_s3703 : let1054 := by timed rfl
let lean_s3704 := by timed congr lean_s3703 lean_s864
let lean_s3705 := by timed congr lean_s3703 lean_s759
let lean_s3706 := by timed congr lean_s3703 lean_s841
let lean_s3707 := by timed congr lean_s3703 lean_s730
let lean_s3708 := by timed congr lean_s3703 lean_s3470
let lean_s3709 := by timed congr lean_s3708 lean_s3468
let lean_s3710 := by timed congr lean_s3707 lean_s3709
let lean_s3711 := by timed congr lean_s3706 lean_s3710
let lean_s3712 := by timed congr lean_s3705 lean_s3711
have lean_s3713 : (Eq let1785 let1784) := by timed congr lean_s3704 lean_s3712
have lean_s3714 : let1784 := by timed eqResolve lean_s3702 lean_s3713
have lean_s3715 : (Or let808 (Or let1156 (Or let1085 (Or let1171 let1782)))) := by permutateOr lean_s3714, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s3716 := by R1 lean_s3697, lean_s3715, let909, [(- 1), (- 1)]
let lean_s3717 := by R1 lean_s3716, lean_s882, let808, [(- 1), 0]
let lean_s3718 := by R2 lean_s3717, lean_s741, let967, [(- 1), 0]
let lean_s3719 := by R2 lean_s3718, lean_s767, let975, [(- 1), 0]
have lean_s3720 : let1114 := by andElim lean_s647, 32
have lean_s3721 : (Or let533 (Or let120 (Or let541 (Or let638 let897)))) := by permutateOr lean_s3720, [2, 4, 0, 1, 3], (- 1)
let lean_s3722 := by R2 lean_s3719, lean_s3721, let533, [(- 1), (- 1)]
have lean_s3723 : (Or let1779 (Or let871 let1085)) := by timed cnfAndNeg [let841, let967]
have lean_s3724 : let1778 :=
  (scope (fun lean_a656 : let841 =>
    (scope (fun lean_a657 : let967 =>
      have lean_s3724 : let188 := by timed Eq.symm lean_a657
      have lean_s3725 : let967 := by timed Eq.symm lean_s3724
      let lean_s3726 := by timed flipCongrArg lean_s3725 [Eq]
      have lean_s3727 : (Eq let229 let229) := by timed rfl
      have lean_s3728 : (Eq let638 let840) := by timed congr lean_s3726 lean_s3727
      have lean_s3729 : (Eq let840 False) := by timed falseIntro lean_a656
      have lean_s3730 : (Eq let638 False) := by timed Eq.trans lean_s3728 lean_s3729
      have lean_s3731 : let1775 := by timed falseElim lean_s3730
      show let1775 from lean_s3731
  ))))
have lean_s3725 : (Implies let1779 let1775) := by liftOrNToImp lean_s3724, 2
have lean_s3726 : (Or (Not let1779) let1775) := by timed impliesElim lean_s3725
have lean_s3727 : let1778 := by R1 lean_s3723, lean_s3726, let1779, [(- 1), (- 1)]
have lean_s3728 : let1054 := by timed rfl
have lean_s3729 : let868 := by timed rfl
let lean_s3730 := by timed flipCongrArg lean_s3729 [Eq]
have lean_s3731 : (Eq let875 let868) := by timed congr lean_s3730 lean_r312
have lean_s3732 : (Eq let875 True) := by timed Eq.trans lean_s3731 lean_r309
have lean_s3733 : (Eq let872 True) := by timed Eq.trans lean_r315 lean_s3732
have lean_s3734 : let872 := by timed trueElim lean_s3733
let lean_s3735 := by timed congr lean_s3728 lean_s3734
let lean_s3736 := by timed congr lean_s3728 lean_s730
have lean_s3737 : (Eq let1775 let1775) := by timed rfl
let lean_s3738 := by timed congr lean_s3736 lean_s3737
have lean_s3739 : (Eq let1778 let1777) := by timed congr lean_s3735 lean_s3738
have lean_s3740 : let1777 := by timed eqResolve lean_s3727 lean_s3739
have lean_s3741 : let841 := by andElim lean_s29, 15
let lean_s3742 := by R1 lean_s3740, lean_s3741, let840, [(- 1), 0]
have lean_s3743 : let1775 := by R2 lean_s3742, lean_s741, let967, [(- 1), 0]
let lean_s3744 := by R1 lean_s3722, lean_s3743, let638, [(- 1), 0]
have lean_s3745 : (Or let1773 (Or let604 let1585)) := by timed cnfAndNeg [let603, let884]
have lean_s3746 : let1772 :=
  (scope (fun lean_a657 : let603 =>
    (scope (fun lean_a658 : let884 =>
      have lean_s3746 : let203 := by timed Eq.symm lean_a658
      have lean_s3747 : let884 := by timed Eq.symm lean_s3746
      let lean_s3748 := by timed flipCongrArg lean_s3747 [Eq]
      have lean_s3749 : let1774 := by timed rfl
      have lean_s3750 : (Eq let541 let602) := by timed congr lean_s3748 lean_s3749
      have lean_s3751 : (Eq let602 False) := by timed falseIntro lean_a657
      have lean_s3752 : (Eq let541 False) := by timed Eq.trans lean_s3750 lean_s3751
      have lean_s3753 : let1769 := by timed falseElim lean_s3752
      show let1769 from lean_s3753
  ))))
have lean_s3747 : (Implies let1773 let1769) := by liftOrNToImp lean_s3746, 2
have lean_s3748 : (Or (Not let1773) let1769) := by timed impliesElim lean_s3747
have lean_s3749 : let1772 := by R1 lean_s3745, lean_s3748, let1773, [(- 1), (- 1)]
have lean_s3750 : let1054 := by timed rfl
have lean_s3751 : let942 := by timed rfl
let lean_s3752 := by timed flipCongrArg lean_s3751 [Eq]
have lean_s3753 : (Eq let933 let942) := by timed congr lean_s3752 lean_r214
have lean_s3754 : (Eq let933 True) := by timed Eq.trans lean_s3753 lean_r372
have lean_s3755 : (Eq let605 True) := by timed Eq.trans lean_r365 lean_s3754
have lean_s3756 : let605 := by timed trueElim lean_s3755
let lean_s3757 := by timed congr lean_s3750 lean_s3756
have lean_s3758 : (Eq let1585 let1585) := by timed rfl
let lean_s3759 := by timed congr lean_s3750 lean_s3758
have lean_s3760 : (Eq let1769 let1769) := by timed rfl
let lean_s3761 := by timed congr lean_s3759 lean_s3760
have lean_s3762 : (Eq let1772 let1771) := by timed congr lean_s3757 lean_s3761
have lean_s3763 : let1771 := by timed eqResolve lean_s3749 lean_s3762
let lean_s3764 := by R1 lean_s3744, lean_s3763, let541, [(- 1), (- 1)]
have lean_s3765 : let603 := by andElim lean_s29, 7
let lean_s3766 := by R1 lean_s3764, lean_s3765, let602, [(- 1), 0]
let lean_s3767 := by R2 lean_s3766, lean_s1979, let884, [(- 1), (- 1)]
let lean_s3768 := by R1 lean_s3767, lean_s2001, let879, [(- 1), 0]
have lean_s3769 : (Or let1768 (Or let1077 let1606)) := by timed cnfAndNeg [let142, let110]
have lean_s3770 : let1767 :=
  (scope (fun lean_a658 : let142 =>
    (scope (fun lean_a659 : let110 =>
      have lean_s3770 : let218 := by timed Eq.symm lean_a659
      have lean_s3771 : let364 := by timed Eq.symm lean_a658
      have lean_s3772 : let142 := by timed Eq.symm lean_s3771
      have lean_s3773 : let817 := by timed Eq.trans lean_s3770 lean_s3772
      show let817 from lean_s3773
  ))))
have lean_s3771 : (Implies let1768 let817) := by liftOrNToImp lean_s3770, 2
have lean_s3772 : (Or (Not let1768) let817) := by timed impliesElim lean_s3771
have lean_s3773 : let1767 := by R1 lean_s3769, lean_s3772, let1768, [(- 1), (- 1)]
have lean_s3774 : (Or let817 (Or let1606 let1077)) := by permutateOr lean_s3773, [2, 1, 0], (- 1)
let lean_s3775 := by R1 lean_s3768, lean_s3774, let110, [(- 1), (- 1)]
have lean_s3776 : let818 := by andElim lean_s29, 38
let lean_s3777 := by R1 lean_s3775, lean_s3776, let817, [(- 1), 0]
have lean_s3778 : (Or let1766 (Or let105 (Or let1221 (Or let1301 let1283)))) := by timed cnfAndNeg [let104, let138, let717, let148, let734]
have lean_s3779 : let1765 :=
  (scope (fun lean_a658 : let104 =>
    (scope (fun lean_a659 : let138 =>
      (scope (fun lean_a660 : let717 =>
        (scope (fun lean_a661 : let148 =>
          (scope (fun lean_a662 : let734 =>
            have lean_s3779 : let467 := by timed Eq.symm lean_a659
            have lean_s3780 : let138 := by timed Eq.symm lean_s3779
            let lean_s3781 := by timed flipCongrArg lean_s3780 [Eq]
            have lean_s3782 : let1208 := by timed rfl
            let lean_s3783 := by timed flipCongrArg lean_s3782 [op]
            have lean_s3784 : let254 := by timed Eq.symm lean_a660
            have lean_s3785 : (Eq let590 let2) := by timed congr lean_s3783 lean_s3784
            have lean_s3786 : let1484 := by timed Eq.symm lean_s3785
            have lean_s3787 : let246 := by timed Eq.symm lean_a662
            have lean_s3788 : let260 := by timed Eq.symm lean_a661
            have lean_s3789 : let148 := by timed Eq.symm lean_s3788
            let lean_s3790 := by timed Eq.trans lean_s3787 lean_s3789
            have lean_s3791 : (Eq let9 let590) := by timed Eq.trans lean_s3790 lean_s3786
            have lean_s3792 : (Eq let590 let9) := by timed Eq.symm lean_s3791
            have lean_s3793 : (Eq let2 let9) := by timed Eq.trans lean_s3786 lean_s3792
            have lean_s3794 : let1282 := by timed Eq.symm lean_s3793
            have lean_s3795 : (Eq let517 let80) := by timed congr lean_s3781 lean_s3794
            have lean_s3796 : (Eq let80 False) := by timed falseIntro lean_a658
            have lean_s3797 : let1605 := by timed Eq.trans lean_s3795 lean_s3796
            have lean_s3798 : let1599 := by timed falseElim lean_s3797
            show let1599 from lean_s3798
  ))))))))))
have lean_s3780 : (Implies let1766 let1599) := by liftOrNToImp lean_s3779, 5
have lean_s3781 : (Or (Not let1766) let1599) := by timed impliesElim lean_s3780
have lean_s3782 : let1765 := by R1 lean_s3778, lean_s3781, let1766, [(- 1), (- 1)]
have lean_s3783 : let1054 := by timed rfl
have lean_s3784 : let81 := by timed rfl
let lean_s3785 := by timed flipCongrArg lean_s3784 [Eq]
have lean_s3786 : (Eq let106 let81) := by timed congr lean_s3785 lean_r69
have lean_s3787 : (Eq let106 True) := by timed Eq.trans lean_s3786 lean_r26
have lean_s3788 : (Eq let107 True) := by timed Eq.trans lean_r34 lean_s3787
have lean_s3789 : let107 := by timed trueElim lean_s3788
let lean_s3790 := by timed congr lean_s3783 lean_s3789
let lean_s3791 := by timed congr lean_s3783 lean_s1709
let lean_s3792 := by timed congr lean_s3783 lean_s1418
let lean_s3793 := by timed congr lean_s3783 lean_s1578
let lean_s3794 := by timed congr lean_s3783 lean_s17
let lean_s3795 := by timed congr lean_s3794 lean_s2104
let lean_s3796 := by timed congr lean_s3793 lean_s3795
let lean_s3797 := by timed congr lean_s3792 lean_s3796
let lean_s3798 := by timed congr lean_s3791 lean_s3797
have lean_s3799 : (Eq let1765 let1764) := by timed congr lean_s3790 lean_s3798
have lean_s3800 : let1764 := by timed eqResolve lean_s3782 lean_s3799
have lean_s3801 : (Or let80 (Or let1194 (Or let1599 (Or let1301 (Or let1221 let1203))))) := by permutateOr lean_s3800, [0, 4, 5, 2, 1, 3], (- 1)
let lean_s3802 := by R1 lean_s3777, lean_s3801, let517, [(- 1), (- 1)]
have lean_s3803 : let104 := by andElim lean_s29, 94
let lean_s3804 := by R1 lean_s3802, lean_s3803, let80, [(- 1), 0]
let lean_s3805 := by R2 lean_s3804, lean_s43, let734, [(- 1), 0]
let lean_s3806 := by R2 lean_s3805, lean_s1537, let148, [(- 1), (- 1)]
let lean_s3807 := by R1 lean_s3806, lean_s1540, let747, [(- 1), 0]
let lean_s3808 := by R1 lean_s3807, lean_s1562, let979, [(- 1), 0]
let lean_s3809 := by R1 lean_s3808, lean_s3652, let62, [(- 1), (- 1)]
have lean_s3810 : (Or let1221 (Or let151 (Or let1171 (Or let120 (Or let897 (Or let100 (Or let870 (Or let1077 (Or let1301 (Or let1221 (Or let278 let1301))))))))))) := by R1 lean_s3809, lean_s1449, let432, [(- 1), 0]
have lean_s3811 : (Or let1221 (Or let151 (Or let1171 (Or let120 (Or let897 (Or let100 (Or let870 (Or let1077 (Or let1301 let278))))))))) := by factor lean_s3810, 11
let lean_s3812 := by R2 lean_s3811, lean_s649, let717, [(- 1), (- 1)]
let lean_s3813 := by R1 lean_s3812, lean_s671, let703, [(- 1), 0]
let lean_s3814 := by R1 lean_s3813, lean_s713, let857, [(- 1), 0]
let lean_s3815 := by R1 lean_s3814, lean_s3633, let314, [(- 1), (- 1)]
have lean_s3816 : (Or let1221 (Or let151 (Or let1171 (Or let120 (Or let897 (Or let100 (Or let870 (Or let1077 (Or let278 (Or let98 let1221)))))))))) := by R1 lean_s3815, lean_s1628, let559, [(- 1), 0]
have lean_s3817 : (Or let1221 (Or let151 (Or let1171 (Or let120 (Or let897 (Or let100 (Or let870 (Or let1077 (Or let278 let98))))))))) := by factor lean_s3816, 10
let lean_s3818 := by R2 lean_s3817, lean_s744, let138, [(- 1), (- 1)]
let lean_s3819 := by R1 lean_s3818, lean_s768, let516, [(- 1), 0]
have lean_s3820 : (Or let1756 (Or let953 (Or let1156 (Or let1171 (Or let1085 let1077))))) := by timed cnfAndNeg [let809, let975, let313, let967, let142]
have lean_s3821 : let1755 :=
  (scope (fun lean_a659 : let809 =>
    (scope (fun lean_a660 : let975 =>
      (scope (fun lean_a661 : let313 =>
        (scope (fun lean_a662 : let967 =>
          (scope (fun lean_a663 : let142 =>
            have lean_s3821 : let160 := by timed Eq.symm lean_a660
            have lean_s3822 : let975 := by timed Eq.symm lean_s3821
            let lean_s3823 := by timed flipCongrArg lean_s3822 [Eq]
            have lean_s3824 : let188 := by timed Eq.symm lean_a662
            have lean_s3825 : let173 := by timed Eq.symm lean_a661
            have lean_s3826 : let313 := by timed Eq.symm lean_s3825
            have lean_s3827 : let1686 := by timed Eq.trans lean_s3824 lean_s3826
            have lean_s3828 : let1685 := by timed Eq.symm lean_s3827
            have lean_s3829 : let364 := by timed Eq.symm lean_a663
            have lean_s3830 : (Eq let91 let44) := by timed Eq.trans lean_s3829 lean_a662
            have lean_s3831 : let1362 := by timed Eq.symm lean_s3830
            have lean_s3832 : let1165 := by timed Eq.trans lean_s3828 lean_s3831
            have lean_s3833 : let1164 := by timed Eq.symm lean_s3832
            have lean_s3834 : let1163 := by timed congr lean_s3823 lean_s3833
            have lean_s3835 : let1162 := by timed falseIntro lean_a659
            have lean_s3836 : let1161 := by timed Eq.trans lean_s3834 lean_s3835
            have lean_s3837 : let1153 := by timed falseElim lean_s3836
            show let1153 from lean_s3837
  ))))))))))
have lean_s3822 : (Implies let1756 let1153) := by liftOrNToImp lean_s3821, 5
have lean_s3823 : (Or (Not let1756) let1153) := by timed impliesElim lean_s3822
have lean_s3824 : let1755 := by R1 lean_s3820, lean_s3823, let1756, [(- 1), (- 1)]
have lean_s3825 : let1054 := by timed rfl
let lean_s3826 := by timed congr lean_s3825 lean_s864
let lean_s3827 := by timed congr lean_s3825 lean_s759
let lean_s3828 := by timed congr lean_s3825 lean_s841
let lean_s3829 := by timed congr lean_s3825 lean_s730
let lean_s3830 := by timed congr lean_s3825 lean_s2711
let lean_s3831 := by timed congr lean_s3830 lean_s872
let lean_s3832 := by timed congr lean_s3829 lean_s3831
let lean_s3833 := by timed congr lean_s3828 lean_s3832
let lean_s3834 := by timed congr lean_s3827 lean_s3833
have lean_s3835 : (Eq let1755 let1754) := by timed congr lean_s3826 lean_s3834
have lean_s3836 : let1754 := by timed eqResolve lean_s3824 lean_s3835
have lean_s3837 : (Or let808 (Or let1156 (Or let1085 (Or let1171 let1752)))) := by permutateOr lean_s3836, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s3838 := by R1 lean_s3819, lean_s3837, let108, [(- 1), (- 1)]
let lean_s3839 := by R1 lean_s3838, lean_s882, let808, [(- 1), 0]
let lean_s3840 := by R2 lean_s3839, lean_s741, let967, [(- 1), 0]
let lean_s3841 := by R2 lean_s3840, lean_s767, let975, [(- 1), 0]
have lean_s3842 : (Eq let1031 let1740) := by timed flipCongrArg lean_r132 [Not]
have lean_s3843 : let1740 := by timed eqResolve lean_a533 lean_s3842
have lean_s3844 : (Or let1171 (Or let1211 let1059)) := by timed flipNotAnd lean_s3843 [let313, let123, let31]
have lean_s3845 : (Or let1171 (Or let1059 let1211)) := by permutateOr lean_s3844, [0, 2, 1], (- 1)
let lean_s3846 := by R1 lean_s3841, lean_s3845, let123, [(- 1), (- 1)]
have lean_s3847 : (Or let1710 (Or let953 (Or let1156 (Or let1171 let1617)))) := by timed cnfAndNeg [let809, let975, let313, let967, let110]
have lean_s3848 : let1709 :=
  (scope (fun lean_a659 : let809 =>
    (scope (fun lean_a660 : let975 =>
      (scope (fun lean_a661 : let313 =>
        (scope (fun lean_a662 : let967 =>
          (scope (fun lean_a663 : let110 =>
            have lean_s3848 : let160 := by timed Eq.symm lean_a660
            have lean_s3849 : let975 := by timed Eq.symm lean_s3848
            let lean_s3850 := by timed flipCongrArg lean_s3849 [Eq]
            have lean_s3851 : let188 := by timed Eq.symm lean_a662
            have lean_s3852 : let173 := by timed Eq.symm lean_a661
            have lean_s3853 : let313 := by timed Eq.symm lean_s3852
            have lean_s3854 : let1686 := by timed Eq.trans lean_s3851 lean_s3853
            have lean_s3855 : let1685 := by timed Eq.symm lean_s3854
            have lean_s3856 : let218 := by timed Eq.symm lean_a663
            have lean_s3857 : let1615 := by timed Eq.trans lean_s3856 lean_a662
            have lean_s3858 : let1614 := by timed Eq.symm lean_s3857
            have lean_s3859 : (Eq let36 let32) := by timed Eq.trans lean_s3855 lean_s3858
            have lean_s3860 : (Eq let32 let36) := by timed Eq.symm lean_s3859
            have lean_s3861 : (Eq let33 let808) := by timed congr lean_s3850 lean_s3860
            have lean_s3862 : let1162 := by timed falseIntro lean_a659
            have lean_s3863 : let1613 := by timed Eq.trans lean_s3861 lean_s3862
            have lean_s3864 : let1458 := by timed falseElim lean_s3863
            show let1458 from lean_s3864
  ))))))))))
have lean_s3849 : (Implies let1710 let1458) := by liftOrNToImp lean_s3848, 5
have lean_s3850 : (Or (Not let1710) let1458) := by timed impliesElim lean_s3849
have lean_s3851 : let1709 := by R1 lean_s3847, lean_s3850, let1710, [(- 1), (- 1)]
have lean_s3852 : let1054 := by timed rfl
let lean_s3853 := by timed congr lean_s3852 lean_s864
let lean_s3854 := by timed congr lean_s3852 lean_s759
let lean_s3855 := by timed congr lean_s3852 lean_s841
let lean_s3856 := by timed congr lean_s3852 lean_s730
let lean_s3857 := by timed congr lean_s3852 lean_s2077
let lean_s3858 := by timed congr lean_s3857 lean_s2079
let lean_s3859 := by timed congr lean_s3856 lean_s3858
let lean_s3860 := by timed congr lean_s3855 lean_s3859
let lean_s3861 := by timed congr lean_s3854 lean_s3860
have lean_s3862 : (Eq let1709 let1708) := by timed congr lean_s3853 lean_s3861
have lean_s3863 : let1708 := by timed eqResolve lean_s3851 lean_s3862
have lean_s3864 : (Or let808 (Or let1156 (Or let1085 (Or let1171 (Or let1458 let1606))))) := by permutateOr lean_s3863, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s3865 := by R1 lean_s3864, lean_s882, let808, [(- 1), 0]
let lean_s3866 := by R2 lean_s3865, lean_s741, let967, [(- 1), 0]
let lean_s3867 := by R2 lean_s3866, lean_s767, let975, [(- 1), 0]
let lean_s3868 := by R2 lean_s3867, lean_s3370, let110, [(- 1), (- 1)]
let lean_s3869 := by R1 lean_s3868, lean_s3384, let902, [(- 1), 0]
let lean_s3870 := by R2 lean_s3869, lean_s2044, let33, [(- 1), (- 1)]
let lean_s3871 := by R1 lean_s3870, lean_s2066, let397, [(- 1), 0]
have lean_s3872 : (Or let1693 (Or let303 (Or let1171 let1437))) := by timed cnfAndNeg [let302, let313, let141, let734]
have lean_s3873 : let1692 :=
  (scope (fun lean_a659 : let302 =>
    (scope (fun lean_a660 : let313 =>
      (scope (fun lean_a661 : let141 =>
        (scope (fun lean_a662 : let734 =>
          have lean_s3873 : let173 := by timed Eq.symm lean_a660
          have lean_s3874 : let313 := by timed Eq.symm lean_s3873
          let lean_s3875 := by timed flipCongrArg lean_s3874 [Eq]
          have lean_s3876 : let246 := by timed Eq.symm lean_a662
          have lean_s3877 : let415 := by timed Eq.symm lean_a661
          have lean_s3878 : let141 := by timed Eq.symm lean_s3877
          have lean_s3879 : let1397 := by timed Eq.trans lean_s3876 lean_s3878
          have lean_s3880 : (Eq let897 let301) := by timed congr lean_s3875 lean_s3879
          have lean_s3881 : (Eq let301 False) := by timed falseIntro lean_a659
          have lean_s3882 : let1694 := by timed Eq.trans lean_s3880 lean_s3881
          have lean_s3883 : let1688 := by timed falseElim lean_s3882
          show let1688 from lean_s3883
  ))))))))
have lean_s3874 : (Implies let1693 let1688) := by liftOrNToImp lean_s3873, 4
have lean_s3875 : (Or (Not let1693) let1688) := by timed impliesElim lean_s3874
have lean_s3876 : let1692 := by R1 lean_s3872, lean_s3875, let1693, [(- 1), (- 1)]
have lean_s3877 : let1054 := by timed rfl
have lean_s3878 : let311 := by timed rfl
let lean_s3879 := by timed flipCongrArg lean_s3878 [Eq]
have lean_s3880 : (Eq let304 let311) := by timed congr lean_s3879 lean_r81
have lean_s3881 : (Eq let304 True) := by timed Eq.trans lean_s3880 lean_r83
have lean_s3882 : (Eq let305 True) := by timed Eq.trans lean_r79 lean_s3881
have lean_s3883 : let305 := by timed trueElim lean_s3882
let lean_s3884 := by timed congr lean_s3877 lean_s3883
let lean_s3885 := by timed congr lean_s3877 lean_s841
let lean_s3886 := by timed congr lean_s3877 lean_s15
let lean_s3887 := by timed congr lean_s3877 lean_s17
let lean_s3888 := by timed congr lean_s3887 lean_s3424
let lean_s3889 := by timed congr lean_s3886 lean_s3888
let lean_s3890 := by timed congr lean_s3885 lean_s3889
have lean_s3891 : (Eq let1692 let1691) := by timed congr lean_s3884 lean_s3890
have lean_s3892 : let1691 := by timed eqResolve lean_s3876 lean_s3891
have lean_s3893 : (Or let301 (Or let1194 (Or let1171 (Or let1303 let1688)))) := by permutateOr lean_s3892, [0, 3, 1, 2, 4], (- 1)
let lean_s3894 := by R1 lean_s3871, lean_s3893, let897, [(- 1), (- 1)]
have lean_s3895 : let302 := by andElim lean_s29, 41
let lean_s3896 := by R1 lean_s3894, lean_s3895, let301, [(- 1), 0]
let lean_s3897 := by R2 lean_s3896, lean_s43, let734, [(- 1), 0]
have lean_s3898 : (Or let1701 (Or let1171 let1699)) := by timed cnfAndNeg [let313, let619]
have lean_s3899 : let1700 :=
  (scope (fun lean_a660 : let313 =>
    (scope (fun lean_a661 : let619 =>
      have lean_s3899 : let412 := by timed Eq.symm lean_a661
      have lean_s3900 : let173 := by timed Eq.symm lean_a660
      have lean_s3901 : let313 := by timed Eq.symm lean_s3900
      have lean_s3902 : let803 := by timed Eq.trans lean_s3899 lean_s3901
      show let803 from lean_s3902
  ))))
have lean_s3900 : (Implies let1701 let803) := by liftOrNToImp lean_s3899, 2
have lean_s3901 : (Or (Not let1701) let803) := by timed impliesElim lean_s3900
have lean_s3902 : let1700 := by R1 lean_s3898, lean_s3901, let1701, [(- 1), (- 1)]
have lean_s3903 : (Or let803 (Or let1699 let1171)) := by permutateOr lean_s3902, [2, 1, 0], (- 1)
let lean_s3904 := by R1 lean_s3897, lean_s3903, let619, [(- 1), (- 1)]
let lean_s3905 := by R1 lean_s3904, lean_s2791, let803, [(- 1), 0]
let lean_s3906 := by R1 lean_s3905, lean_s2110, let517, [(- 1), (- 1)]
let lean_s3907 := by R1 lean_s3906, lean_s2112, let126, [(- 1), 0]
let lean_s3908 := by R2 lean_s3907, lean_s43, let734, [(- 1), 0]
let lean_s3909 := by R1 lean_s3908, lean_s2040, let399, [(- 1), (- 1)]
have lean_s3910 : (Or let1171 (Or let142 (Or let108 (Or let1171 (Or let1303 (Or let1171 let1732)))))) := by R1 lean_s3909, lean_s2041, let793, [(- 1), 0]
have lean_s3911 : (Or let1171 (Or let142 (Or let108 let1731))) := by factor lean_s3910, (- 1)
let lean_s3912 := by R2 lean_s3911, lean_s798, let313, [(- 1), (- 1)]
let lean_s3913 := by R1 lean_s3912, lean_s820, let578, [(- 1), 0]
let lean_s3914 := by R1 lean_s3913, lean_s2250, let554, [(- 1), 0]
let lean_s3915 := by R2 lean_s3914, lean_s1632, let58, [(- 1), (- 1)]
let lean_s3916 := by R1 lean_s3915, lean_s1647, let520, [(- 1), 0]
let lean_s3917 := by R1 lean_s3916, lean_s1509, let100, [(- 1), (- 1)]
let lean_s3918 := by R1 lean_s3917, lean_s1511, let82, [(- 1), 0]
let lean_s3919 := by R1 lean_s3918, lean_s1666, let145, [(- 1), (- 1)]
have lean_s3920 : (Or let142 (Or let108 (Or let1303 (Or let120 let1591)))) := by R1 lean_s3919, lean_s1668, let338, [(- 1), 0]
have lean_s3921 : (Or let142 (Or let108 let1730)) := by factor lean_s3920, 7
let lean_s3922 := by R2 lean_s3921, lean_s1428, let141, [(- 1), (- 1)]
let lean_s3923 := by R1 lean_s3922, lean_s1540, let747, [(- 1), 0]
let lean_s3924 := by R1 lean_s3923, lean_s1405, let748, [(- 1), 0]
let lean_s3925 := by R1 lean_s3143, lean_s1511, let82, [(- 1), 0]
let lean_s3926 := by R2 lean_s3925, lean_s798, let313, [(- 1), (- 1)]
let lean_s3927 := by R1 lean_s3926, lean_s820, let578, [(- 1), 0]
let lean_s3928 := by R1 lean_s3927, lean_s2250, let554, [(- 1), 0]
have lean_s3929 : (Eq let1007 let1667) := by timed flipCongrArg lean_r32 [Not]
have lean_s3930 : let1667 := by timed eqResolve lean_a459 lean_s3929
have lean_s3931 : (Or let1191 (Or let1046 let1259)) := by timed flipNotAnd lean_s3930 [let100, let98, let97]
have lean_s3932 : (Or let1259 (Or let1191 let1046)) := by permutateOr lean_s3931, [2, 0, 1], (- 1)
have lean_s3933 : (Or let1259 let1666) := by R1 lean_s3928, lean_s3932, let100, [(- 1), (- 1)]
have lean_s3934 : (Or let1259 let1665) := by factor lean_s3933, (- 1)
have lean_s3935 : let1666 := by permutateOr lean_s3934, [1, 0, 2], (- 1)
have lean_s3936 : (Or let142 (Or let108 (Or let120 (Or let151 (Or let525 (Or let88 let1665)))))) := by R1 lean_s3924, lean_s3935, let97, [(- 1), (- 1)]
have lean_s3937 : (Or let142 (Or let108 (Or let120 (Or let151 (Or let525 (Or let88 let1046)))))) := by factor lean_s3936, (- 1)
let lean_s3938 := by R1 lean_s3937, lean_s3121, let120, [(- 1), (- 1)]
let lean_s3939 := by R1 lean_s3938, lean_s2259, let625, [(- 1), 0]
let lean_s3940 := by R1 lean_s1716, lean_s882, let808, [(- 1), 0]
let lean_s3941 := by R2 lean_s3940, lean_s43, let734, [(- 1), 0]
let lean_s3942 := by R2 lean_s3941, lean_s767, let975, [(- 1), 0]
let lean_s3943 := by R2 lean_s3942, lean_s1428, let97, [(- 1), (- 1)]
let lean_s3944 := by R1 lean_s3943, lean_s1540, let747, [(- 1), 0]
let lean_s3945 := by R1 lean_s3944, lean_s1405, let748, [(- 1), 0]
let lean_s3946 := by R2 lean_s3945, lean_s1537, let278, [(- 1), (- 1)]
let lean_s3947 := by R1 lean_s3946, lean_s1540, let747, [(- 1), 0]
let lean_s3948 := by R1 lean_s3947, lean_s1562, let979, [(- 1), 0]
let lean_s3949 := by R1 lean_s3948, lean_s1666, let141, [(- 1), (- 1)]
let lean_s3950 := by R1 lean_s3949, lean_s1668, let338, [(- 1), 0]
have lean_s3951 : (Or let1221 (Or let88 (Or let148 let1541))) := by R1 lean_s3950, lean_s1861, let62, [(- 1), (- 1)]
have lean_s3952 : (Or let1221 (Or let88 let1725)) := by factor lean_s3951, (- 1)
let lean_s3953 := by R2 lean_s3952, lean_s1632, let145, [(- 1), (- 1)]
let lean_s3954 := by R1 lean_s3953, lean_s1647, let520, [(- 1), 0]
let lean_s3955 := by R1 lean_s3954, lean_s1626, let58, [(- 1), (- 1)]
let lean_s3956 := by R1 lean_s3955, lean_s1628, let559, [(- 1), 0]
let lean_s3957 := by R2 lean_s3956, lean_s1048, let122, [(- 1), (- 1)]
let lean_s3958 := by R1 lean_s3957, lean_s1063, let599, [(- 1), 0]
let lean_s3959 := by R1 lean_s3958, lean_s713, let857, [(- 1), 0]
have lean_s3960 : (Or let1221 (Or let88 (Or let148 (Or let400 (Or let151 (Or let525 (Or let31 let1558))))))) := by R1 lean_s3959, lean_s794, let87, [(- 1), (- 1)]
have lean_s3961 : (Or let1221 (Or let88 (Or let148 (Or let400 (Or let151 (Or let525 let31)))))) := by factor lean_s3960, 8
let lean_s3962 := by R2 lean_s3961, lean_s744, let138, [(- 1), (- 1)]
let lean_s3963 := by R1 lean_s3962, lean_s768, let516, [(- 1), 0]
let lean_s3964 := by R1 lean_s3963, lean_s740, let123, [(- 1), (- 1)]
let lean_s3965 := by R2 lean_s3964, lean_s741, let967, [(- 1), 0]
have lean_s3966 : (Or let148 (Or let400 (Or let151 (Or let525 (Or let31 (Or let108 (Or let525 (Or let151 (Or let400 (Or let1664 let1588)))))))))) := by R1 lean_s3965, lean_s2172, let88, [(- 1), (- 1)]
have lean_s3967 : (Or let148 (Or let400 (Or let151 (Or let525 (Or let31 (Or let108 let1671)))))) := by factor lean_s3966, (- 1)
let lean_s3968 := by R2 lean_s3967, lean_s1373, let120, [(- 1), (- 1)]
let lean_s3969 := by R1 lean_s3968, lean_s1383, let744, [(- 1), 0]
let lean_s3970 := by R1 lean_s3969, lean_s1405, let748, [(- 1), 0]
have lean_s3971 : (Or let1674 let1154) := by timed cnfAndNeg [let108, let98]
have lean_s3972 : let1673 :=
  (scope (fun lean_a661 : let108 =>
    (scope (fun lean_a662 : let98 =>
      have lean_s3972 : let363 := by timed Eq.symm lean_a662
      have lean_s3973 : let98 := by timed Eq.symm lean_s3972
      have lean_s3974 : let365 := by timed Eq.symm lean_a661
      have lean_s3975 : let559 := by timed Eq.trans lean_s3973 lean_s3974
      show let559 from lean_s3975
  ))))
have lean_s3973 : (Implies let1674 let559) := by liftOrNToImp lean_s3972, 2
have lean_s3974 : (Or (Not let1674) let559) := by timed impliesElim lean_s3973
have lean_s3975 : let1673 := by R1 lean_s3971, lean_s3974, let1674, [(- 1), (- 1)]
have lean_s3976 : (Or let559 let1154) := by permutateOr lean_s3975, [2, 0, 1], (- 1)
let lean_s3977 := by R1 lean_s3970, lean_s3976, let108, [(- 1), (- 1)]
let lean_s3978 := by R1 lean_s3977, lean_s1628, let559, [(- 1), 0]
let lean_s3979 := by R1 lean_s3978, lean_s1581, let148, [(- 1), (- 1)]
have lean_s3980 : (Or let151 (Or let525 (Or let31 (Or let1664 (Or let1046 (Or let31 (Or let151 (Or let1046 let1664)))))))) := by R1 lean_s3979, lean_s1511, let82, [(- 1), 0]
have lean_s3981 : (Or let151 (Or let525 (Or let31 let1671))) := by factor lean_s3980, 8
have lean_s3982 : (Or let151 (Or let525 (Or let31 let1069))) := by R2 lean_s3981, lean_s3113, let56, [(- 1), (- 1)]
have lean_s3983 : (Or let151 (Or let525 (Or let31 let1046))) := by factor lean_s3982, 5
have lean_s3984 : (Or let31 let1588) := by permutateOr lean_s3983, [2, 0, 1, 3], (- 1)
let lean_s3985 := by R2 lean_s3939, lean_s3984, let31, [(- 1), (- 1)]
let lean_s3986 := by R1 lean_s3985, lean_s2172, let88, [(- 1), (- 1)]
let lean_s3987 := by R1 lean_s3986, lean_s3976, let108, [(- 1), (- 1)]
let lean_s3988 := by R1 lean_s3987, lean_s1628, let559, [(- 1), 0]
let lean_s3989 := by R1 lean_s3988, lean_s2257, let142, [(- 1), (- 1)]
have lean_s3990 : (Or let151 (Or let525 (Or let1046 (Or let151 (Or let525 (Or let1046 (Or let151 (Or let525 (Or let1046 let1672))))))))) := by R1 lean_s3989, lean_s2259, let625, [(- 1), 0]
have lean_s3991 : let1588 := by factor lean_s3990, (- 1)
let lean_s3992 := by R1 lean_s1048, lean_s1063, let599, [(- 1), 0]
let lean_s3993 := by R1 lean_s3992, lean_s713, let857, [(- 1), 0]
let lean_s3994 := by R1 lean_s3993, lean_s1785, let122, [(- 1), (- 1)]
let lean_s3995 := by R1 lean_s3994, lean_s1449, let432, [(- 1), 0]
have lean_s3996 : (Or let31 (Or let1321 let1713)) := by R1 lean_s3995, lean_s1465, let87, [(- 1), (- 1)]
have lean_s3997 : let1714 := by factor lean_s3996, (- 1)
let lean_s3998 := by R2 lean_s3997, lean_s1428, let88, [(- 1), (- 1)]
let lean_s3999 := by R1 lean_s3998, lean_s1540, let747, [(- 1), 0]
let lean_s4000 := by R1 lean_s3999, lean_s1405, let748, [(- 1), 0]
have lean_s4001 : (Or let1712 (Or let1221 let1465)) := by timed cnfAndNeg [let138, let280]
have lean_s4002 : let1711 :=
  (scope (fun lean_a661 : let138 =>
    (scope (fun lean_a662 : let280 =>
      have lean_s4002 : let479 := by timed Eq.symm lean_a662
      have lean_s4003 : let467 := by timed Eq.symm lean_a661
      have lean_s4004 : let138 := by timed Eq.symm lean_s4003
      have lean_s4005 : let837 := by timed Eq.trans lean_s4002 lean_s4004
      show let837 from lean_s4005
  ))))
have lean_s4003 : (Implies let1712 let837) := by liftOrNToImp lean_s4002, 2
have lean_s4004 : (Or (Not let1712) let837) := by timed impliesElim lean_s4003
have lean_s4005 : let1711 := by R1 lean_s4001, lean_s4004, let1712, [(- 1), (- 1)]
have lean_s4006 : (Or let837 (Or let1465 let1221)) := by permutateOr lean_s4005, [2, 1, 0], (- 1)
have lean_s4007 : let838 := by andElim lean_s29, 18
let lean_s4008 := by R1 lean_s4006, lean_s4007, let837, [(- 1), 0]
let lean_s4009 := by R2 lean_s4008, lean_s2372, let280, [(- 1), (- 1)]
let lean_s4010 := by R1 lean_s4009, lean_s2394, let629, [(- 1), 0]
let lean_s4011 := by R1 lean_s4010, lean_s3864, let33, [(- 1), (- 1)]
let lean_s4012 := by R1 lean_s4011, lean_s882, let808, [(- 1), 0]
let lean_s4013 := by R2 lean_s4012, lean_s741, let967, [(- 1), 0]
let lean_s4014 := by R2 lean_s4013, lean_s767, let975, [(- 1), 0]
let lean_s4015 := by R2 lean_s4014, lean_s3370, let110, [(- 1), (- 1)]
let lean_s4016 := by R1 lean_s4015, lean_s3384, let902, [(- 1), 0]
let lean_s4017 := by R1 lean_s4016, lean_s3903, let619, [(- 1), (- 1)]
let lean_s4018 := by R1 lean_s4017, lean_s2791, let803, [(- 1), 0]
have lean_s4019 : (Or let1698 (Or let94 (Or let1221 let1584))) := by timed cnfAndNeg [let93, let138, let98, let738]
have lean_s4020 : let1697 :=
  (scope (fun lean_a661 : let93 =>
    (scope (fun lean_a662 : let138 =>
      (scope (fun lean_a663 : let98 =>
        (scope (fun lean_a664 : let738 =>
          have lean_s4020 : let467 := by timed Eq.symm lean_a662
          have lean_s4021 : let138 := by timed Eq.symm lean_s4020
          let lean_s4022 := by timed flipCongrArg lean_s4021 [Eq]
          have lean_s4023 : let210 := by timed Eq.symm lean_a664
          have lean_s4024 : let363 := by timed Eq.symm lean_a663
          have lean_s4025 : let98 := by timed Eq.symm lean_s4024
          have lean_s4026 : let1166 := by timed Eq.trans lean_s4023 lean_s4025
          have lean_s4027 : (Eq let745 let92) := by timed congr lean_s4022 lean_s4026
          have lean_s4028 : (Eq let92 False) := by timed falseIntro lean_a661
          have lean_s4029 : let1444 := by timed Eq.trans lean_s4027 lean_s4028
          have lean_s4030 : let1438 := by timed falseElim lean_s4029
          show let1438 from lean_s4030
  ))))))))
have lean_s4021 : (Implies let1698 let1438) := by liftOrNToImp lean_s4020, 4
have lean_s4022 : (Or (Not let1698) let1438) := by timed impliesElim lean_s4021
have lean_s4023 : let1697 := by R1 lean_s4019, lean_s4022, let1698, [(- 1), (- 1)]
have lean_s4024 : let1054 := by timed rfl
have lean_s4025 : let96 := by timed rfl
let lean_s4026 := by timed flipCongrArg lean_s4025 [Eq]
have lean_s4027 : (Eq let895 let96) := by timed congr lean_s4026 lean_r30
have lean_s4028 : (Eq let895 True) := by timed Eq.trans lean_s4027 lean_r31
have lean_s4029 : (Eq let95 True) := by timed Eq.trans lean_r333 lean_s4028
have lean_s4030 : let95 := by timed trueElim lean_s4029
let lean_s4031 := by timed congr lean_s4024 lean_s4030
let lean_s4032 := by timed congr lean_s4024 lean_s1709
let lean_s4033 := by timed congr lean_s4024 lean_s836
let lean_s4034 := by timed congr lean_s4024 lean_s13
let lean_s4035 := by timed congr lean_s4034 lean_s2427
let lean_s4036 := by timed congr lean_s4033 lean_s4035
let lean_s4037 := by timed congr lean_s4032 lean_s4036
have lean_s4038 : (Eq let1697 let1696) := by timed congr lean_s4031 lean_s4037
have lean_s4039 : let1696 := by timed eqResolve lean_s4023 lean_s4038
have lean_s4040 : (Or let92 (Or let1155 (Or let1438 let1639))) := by permutateOr lean_s4039, [0, 3, 4, 1, 2], (- 1)
let lean_s4041 := by R1 lean_s4018, lean_s4040, let745, [(- 1), (- 1)]
have lean_s4042 : let93 := by andElim lean_s29, 95
let lean_s4043 := by R1 lean_s4041, lean_s4042, let92, [(- 1), 0]
have lean_s4044 : (Or let1221 (Or let145 (Or let1171 (Or let142 (Or let897 (Or let1171 let1639)))))) := by R2 lean_s4043, lean_s45, let738, [(- 1), 0]
have lean_s4045 : (Or let1221 (Or let145 (Or let1171 (Or let142 (Or let897 let1046))))) := by factor lean_s4044, (- 1)
let lean_s4046 := by R2 lean_s4045, lean_s744, let138, [(- 1), (- 1)]
let lean_s4047 := by R1 lean_s4046, lean_s768, let516, [(- 1), 0]
let lean_s4048 := by R1 lean_s4047, lean_s3893, let897, [(- 1), (- 1)]
let lean_s4049 := by R1 lean_s4048, lean_s3895, let301, [(- 1), 0]
let lean_s4050 := by R2 lean_s4049, lean_s43, let734, [(- 1), 0]
have lean_s4051 : (Or let1681 (Or let953 (Or let1156 (Or let1171 let1687)))) := by timed cnfAndNeg [let809, let975, let313, let967, let56]
have lean_s4052 : let1679 :=
  (scope (fun lean_a662 : let809 =>
    (scope (fun lean_a663 : let975 =>
      (scope (fun lean_a664 : let313 =>
        (scope (fun lean_a665 : let967 =>
          (scope (fun lean_a666 : let56 =>
            have lean_s4052 : let160 := by timed Eq.symm lean_a663
            have lean_s4053 : let975 := by timed Eq.symm lean_s4052
            let lean_s4054 := by timed flipCongrArg lean_s4053 [Eq]
            have lean_s4055 : let188 := by timed Eq.symm lean_a665
            have lean_s4056 : let173 := by timed Eq.symm lean_a664
            have lean_s4057 : let313 := by timed Eq.symm lean_s4056
            have lean_s4058 : let1686 := by timed Eq.trans lean_s4055 lean_s4057
            have lean_s4059 : let1685 := by timed Eq.symm lean_s4058
            have lean_s4060 : let262 := by timed Eq.symm lean_a666
            have lean_s4061 : let1684 := by timed Eq.trans lean_s4060 lean_a665
            have lean_s4062 : let1683 := by timed Eq.symm lean_s4061
            have lean_s4063 : (Eq let36 let2) := by timed Eq.trans lean_s4059 lean_s4062
            have lean_s4064 : (Eq let2 let36) := by timed Eq.symm lean_s4063
            have lean_s4065 : (Eq let123 let808) := by timed congr lean_s4054 lean_s4064
            have lean_s4066 : let1162 := by timed falseIntro lean_a662
            have lean_s4067 : let1682 := by timed Eq.trans lean_s4065 lean_s4066
            have lean_s4068 : let1211 := by timed falseElim lean_s4067
            show let1211 from lean_s4068
  ))))))))))
have lean_s4053 : (Implies let1681 let1211) := by liftOrNToImp lean_s4052, 5
have lean_s4054 : (Or (Not let1681) let1211) := by timed impliesElim lean_s4053
have lean_s4055 : let1679 := by R1 lean_s4051, lean_s4054, let1681, [(- 1), (- 1)]
have lean_s4056 : let1054 := by timed rfl
let lean_s4057 := by timed congr lean_s4056 lean_s864
let lean_s4058 := by timed congr lean_s4056 lean_s759
let lean_s4059 := by timed congr lean_s4056 lean_s841
let lean_s4060 := by timed congr lean_s4056 lean_s730
let lean_s4061 := by timed congr lean_s4056 lean_s732
let lean_s4062 := by timed congr lean_s4061 lean_s734
let lean_s4063 := by timed congr lean_s4060 lean_s4062
let lean_s4064 := by timed congr lean_s4059 lean_s4063
let lean_s4065 := by timed congr lean_s4058 lean_s4064
have lean_s4066 : (Eq let1679 let1678) := by timed congr lean_s4057 lean_s4065
have lean_s4067 : let1678 := by timed eqResolve lean_s4055 lean_s4066
have lean_s4068 : (Or let808 (Or let1156 (Or let1085 (Or let1171 let1675)))) := by permutateOr lean_s4067, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s4069 := by R1 lean_s4050, lean_s4068, let123, [(- 1), (- 1)]
let lean_s4070 := by R1 lean_s4069, lean_s882, let808, [(- 1), 0]
let lean_s4071 := by R2 lean_s4070, lean_s741, let967, [(- 1), 0]
have lean_s4072 : (Or let145 (Or let1171 (Or let142 (Or let1046 (Or let108 (Or let525 (Or let1171 (Or let1303 (Or let1171 let1664))))))))) := by R2 lean_s4071, lean_s767, let975, [(- 1), 0]
have lean_s4073 : (Or let145 (Or let1171 (Or let142 (Or let1046 (Or let108 (Or let525 (Or let1303 let1664))))))) := by factor lean_s4072, (- 1)
let lean_s4074 := by R2 lean_s4073, lean_s798, let313, [(- 1), (- 1)]
let lean_s4075 := by R1 lean_s4074, lean_s820, let578, [(- 1), 0]
let lean_s4076 := by R1 lean_s4075, lean_s2250, let554, [(- 1), 0]
let lean_s4077 := by R1 lean_s4076, lean_s1509, let100, [(- 1), (- 1)]
let lean_s4078 := by R1 lean_s4077, lean_s1511, let82, [(- 1), 0]
let lean_s4079 := by R1 lean_s4078, lean_s1666, let145, [(- 1), (- 1)]
let lean_s4080 := by R1 lean_s4079, lean_s1668, let338, [(- 1), 0]
let lean_s4081 := by R1 lean_s4080, lean_s3976, let108, [(- 1), (- 1)]
let lean_s4082 := by R1 lean_s4081, lean_s1628, let559, [(- 1), 0]
let lean_s4083 := by R1 lean_s4082, lean_s2257, let142, [(- 1), (- 1)]
have lean_s4084 : (Or let1046 (Or let525 (Or let1303 (Or let1664 (Or let120 (Or let1303 (Or let1303 let1672))))))) := by R1 lean_s4083, lean_s2259, let625, [(- 1), 0]
have lean_s4085 : (Or let1046 (Or let525 (Or let1303 (Or let1664 let120)))) := by factor lean_s4084, 8
have lean_s4086 : (Or let120 (Or let525 (Or let1303 let1671))) := by permutateOr lean_s4085, [4, 1, 2, 3, 0], (- 1)
let lean_s4087 := by R1 lean_s4000, lean_s4086, let141, [(- 1), (- 1)]
have lean_s4088 : (Or let31 (Or let1664 (Or let120 (Or let525 (Or let1664 (Or let1046 let1665)))))) := by R1 lean_s4087, lean_s3935, let97, [(- 1), (- 1)]
have lean_s4089 : (Or let31 (Or let1664 let1067)) := by factor lean_s4088, (- 1)
have lean_s4090 : (Or let31 (Or let120 (Or let525 let1069))) := by R2 lean_s4089, lean_s3113, let56, [(- 1), (- 1)]
have lean_s4091 : (Or let31 let1067) := by factor lean_s4090, 5
let lean_s4092 := by R1 lean_s4091, lean_s3220, let31, [(- 1), (- 1)]
let lean_s4093 := by R1 lean_s4092, lean_s1628, let559, [(- 1), 0]
let lean_s4094 := by R1 lean_s4093, lean_s787, let120, [(- 1), (- 1)]
have lean_s4095 : (Or let525 (Or let1046 let1050)) := by R1 lean_s4094, lean_s789, let530, [(- 1), 0]
have lean_s4096 : (Or let525 let1049) := by factor lean_s4095, (- 1)
have lean_s4097 : (Or let525 let1048) := by permutateOr lean_s4096, [0, 2, 1], (- 1)
have lean_s4098 : (Or let525 (Or let1046 let1047)) := by R1 lean_s3991, lean_s4097, let151, [(- 1), (- 1)]
have lean_s4099 : let1047 := by factor lean_s4098, (- 1)
let lean_s4100 := by R1 lean_s3846, lean_s4099, let98, [(- 1), (- 1)]
have lean_s4101 : (Eq let1010 let1739) := by timed flipCongrArg lean_r246 [Not]
have lean_s4102 : let1739 := by timed eqResolve lean_a462 lean_s4101
have lean_s4103 : (Or let1059 (Or let1190 let1171)) := by timed flipNotAnd lean_s4102 [let31, let278, let313]
have lean_s4104 : (Or let1171 (Or let1059 let1190)) := by permutateOr lean_s4103, [2, 0, 1], (- 1)
let lean_s4105 := by R1 lean_s4100, lean_s4104, let278, [(- 1), (- 1)]
let lean_s4106 := by R1 lean_s4105, lean_s3614, let870, [(- 1), (- 1)]
have lean_s4107 : (Or let151 (Or let1171 (Or let120 (Or let897 (Or let100 (Or let1077 (Or let525 (Or let1171 (Or let1077 (Or let1171 (Or let1059 (Or let525 (Or let1171 (Or let1059 (Or let120 let1059))))))))))))))) := by R2 lean_s4106, lean_s45, let738, [(- 1), 0]
have lean_s4108 : (Or let151 (Or let1171 (Or let120 (Or let897 (Or let100 (Or let1077 (Or let525 let1059))))))) := by factor lean_s4107, (- 1)
let lean_s4109 := by R2 lean_s4108, lean_s1373, let31, [(- 1), (- 1)]
let lean_s4110 := by R1 lean_s4109, lean_s1405, let748, [(- 1), 0]
let lean_s4111 := by R1 lean_s4110, lean_s1383, let744, [(- 1), 0]
let lean_s4112 := by R2 lean_s4111, lean_s798, let313, [(- 1), (- 1)]
let lean_s4113 := by R1 lean_s4112, lean_s2250, let554, [(- 1), 0]
let lean_s4114 := by R1 lean_s4113, lean_s817, let578, [(- 1), (- 1)]
let lean_s4115 := by R2 lean_s4114, lean_s741, let967, [(- 1), 0]
have lean_s4116 : (Or let151 (Or let120 (Or let897 (Or let100 (Or let1077 (Or let525 (Or let120 (Or let151 (Or let100 let120))))))))) := by R1 lean_s4115, lean_s818, let564, [(- 1), 0]
have lean_s4117 : (Or let151 (Or let120 (Or let897 (Or let100 (Or let1077 let525))))) := by factor lean_s4116, 9
have lean_s4118 : (Or let100 (Or let120 (Or let151 (Or let897 let1335)))) := by permutateOr lean_s4117, [3, 1, 0, 2, 5, 4], (- 1)
let lean_s4119 := by R1 lean_s3664, lean_s4118, let142, [(- 1), (- 1)]
have lean_s4120 : (Or let1744 (Or let912 (Or let1085 let1376))) := by timed cnfAndNeg [let798, let967, let88, let734]
have lean_s4121 : let1743 :=
  (scope (fun lean_a662 : let798 =>
    (scope (fun lean_a663 : let967 =>
      (scope (fun lean_a664 : let88 =>
        (scope (fun lean_a665 : let734 =>
          have lean_s4121 : let188 := by timed Eq.symm lean_a663
          have lean_s4122 : let967 := by timed Eq.symm lean_s4121
          let lean_s4123 := by timed flipCongrArg lean_s4122 [Eq]
          have lean_s4124 : let246 := by timed Eq.symm lean_a665
          have lean_s4125 : let482 := by timed Eq.symm lean_a664
          have lean_s4126 : let88 := by timed Eq.symm lean_s4125
          have lean_s4127 : let1375 := by timed Eq.trans lean_s4124 lean_s4126
          have lean_s4128 : (Eq let897 let564) := by timed congr lean_s4123 lean_s4127
          have lean_s4129 : let1189 := by timed falseIntro lean_a662
          have lean_s4130 : let1694 := by timed Eq.trans lean_s4128 lean_s4129
          have lean_s4131 : let1688 := by timed falseElim lean_s4130
          show let1688 from lean_s4131
  ))))))))
have lean_s4122 : (Implies let1744 let1688) := by liftOrNToImp lean_s4121, 4
have lean_s4123 : (Or (Not let1744) let1688) := by timed impliesElim lean_s4122
have lean_s4124 : let1743 := by R1 lean_s4120, lean_s4123, let1744, [(- 1), (- 1)]
have lean_s4125 : let1054 := by timed rfl
let lean_s4126 := by timed congr lean_s4125 lean_s811
let lean_s4127 := by timed congr lean_s4125 lean_s730
let lean_s4128 := by timed congr lean_s4125 lean_s1782
let lean_s4129 := by timed congr lean_s4125 lean_s17
let lean_s4130 := by timed congr lean_s4129 lean_s3424
let lean_s4131 := by timed congr lean_s4128 lean_s4130
let lean_s4132 := by timed congr lean_s4127 lean_s4131
have lean_s4133 : (Eq let1743 let1742) := by timed congr lean_s4126 lean_s4132
have lean_s4134 : let1742 := by timed eqResolve lean_s4124 lean_s4133
have lean_s4135 : (Or let564 (Or let1085 (Or let1194 (Or let1321 let1688)))) := by permutateOr lean_s4134, [0, 1, 3, 2, 4], (- 1)
let lean_s4136 := by R1 lean_s4119, lean_s4135, let897, [(- 1), (- 1)]
let lean_s4137 := by R1 lean_s4136, lean_s818, let564, [(- 1), 0]
let lean_s4138 := by R2 lean_s4137, lean_s43, let734, [(- 1), 0]
let lean_s4139 := by R2 lean_s4138, lean_s741, let967, [(- 1), 0]
let lean_s4140 := by R1 lean_s4139, lean_s3845, let123, [(- 1), (- 1)]
have lean_s4141 : (Or let525 (Or let98 (Or let546 (Or let100 (Or let120 (Or let151 (Or let525 (Or let1321 (Or let1171 (Or let1059 let1738)))))))))) := by R1 lean_s4140, lean_s4104, let278, [(- 1), (- 1)]
have lean_s4142 : (Or let525 (Or let98 (Or let546 (Or let100 (Or let120 (Or let151 (Or let1321 let1738))))))) := by factor lean_s4141, (- 1)
let lean_s4143 := by R2 lean_s4142, lean_s798, let313, [(- 1), (- 1)]
let lean_s4144 := by R1 lean_s4143, lean_s820, let578, [(- 1), 0]
let lean_s4145 := by R1 lean_s4144, lean_s2250, let554, [(- 1), 0]
have lean_s4146 : (Eq let1027 let1737) := by timed flipCongrArg lean_r232 [Not]
have lean_s4147 : let1737 := by timed eqResolve lean_a512 lean_s4146
have lean_s4148 : (Or let1321 (Or let1148 let1417)) := by timed flipNotAnd lean_s4147 [let88, let546, let145]
have lean_s4149 : (Or let1321 (Or let1417 let1148)) := by permutateOr lean_s4148, [0, 2, 1], (- 1)
have lean_s4150 : (Or let525 (Or let98 (Or let100 (Or let120 (Or let151 (Or let1321 (Or let1059 (Or let100 (Or let120 (Or let1321 let1417)))))))))) := by R1 lean_s4145, lean_s4149, let546, [(- 1), (- 1)]
have lean_s4151 : (Or let525 (Or let98 (Or let100 let1736))) := by factor lean_s4150, (- 1)
let lean_s4152 := by R1 lean_s4151, lean_s2018, let100, [(- 1), (- 1)]
have lean_s4153 : (Or let525 (Or let98 (Or let120 (Or let151 (Or let1321 (Or let1059 let1628)))))) := by R1 lean_s4152, lean_s789, let530, [(- 1), 0]
have lean_s4154 : (Or let525 (Or let98 let1736)) := by factor lean_s4153, (- 1)
let lean_s4155 := by R2 lean_s4154, lean_s1632, let145, [(- 1), (- 1)]
let lean_s4156 := by R1 lean_s4155, lean_s1647, let520, [(- 1), 0]
let lean_s4157 := by R1 lean_s4156, lean_s2169, let58, [(- 1), (- 1)]
let lean_s4158 := by R1 lean_s4157, lean_s1668, let338, [(- 1), 0]
let lean_s4159 := by R2 lean_s4158, lean_s1373, let31, [(- 1), (- 1)]
let lean_s4160 := by R1 lean_s4159, lean_s1405, let748, [(- 1), 0]
let lean_s4161 := by R1 lean_s4160, lean_s1383, let744, [(- 1), 0]
have lean_s4162 : (Or let525 (Or let120 (Or let151 (Or let1321 (Or let151 (Or let525 (Or let1321 let1729))))))) := by R1 lean_s4161, lean_s4099, let98, [(- 1), (- 1)]
have lean_s4163 : (Or let525 (Or let120 (Or let151 let1321))) := by factor lean_s4162, 9
have lean_s4164 : (Or let120 (Or let151 let1560)) := by permutateOr lean_s4163, [1, 2, 0, 3], (- 1)
let lean_s4165 := by R1 lean_s3616, lean_s4164, let88, [(- 1), (- 1)]
let lean_s4166 := by R1 lean_s649, lean_s671, let703, [(- 1), 0]
let lean_s4167 := by R1 lean_s4166, lean_s713, let857, [(- 1), 0]
let lean_s4168 := by R1 lean_s4167, lean_s893, let314, [(- 1), (- 1)]
let lean_s4169 := by R1 lean_s4168, lean_s1606, let717, [(- 1), (- 1)]
let lean_s4170 := by R2 lean_s4169, lean_s798, let313, [(- 1), (- 1)]
let lean_s4171 := by R1 lean_s4170, lean_s820, let578, [(- 1), 0]
let lean_s4172 := by R1 lean_s4171, lean_s2250, let554, [(- 1), 0]
let lean_s4173 := by R2 lean_s4172, lean_s1632, let58, [(- 1), (- 1)]
let lean_s4174 := by R1 lean_s4173, lean_s1647, let520, [(- 1), 0]
let lean_s4175 := by R1 lean_s4174, lean_s1509, let100, [(- 1), (- 1)]
let lean_s4176 := by R1 lean_s4175, lean_s1511, let82, [(- 1), 0]
let lean_s4177 := by R1 lean_s4176, lean_s1666, let145, [(- 1), (- 1)]
let lean_s4178 := by R1 lean_s4177, lean_s1668, let338, [(- 1), 0]
have lean_s4179 : (Or let1303 (Or let1303 (Or let120 (Or let151 (Or let525 (Or let1303 (Or let1303 let525))))))) := by R1 lean_s4178, lean_s4099, let98, [(- 1), (- 1)]
have lean_s4180 : let1730 := by factor lean_s4179, (- 1)
have lean_s4181 : (Or let120 let1562) := by permutateOr lean_s4180, [1, 2, 3, 0], (- 1)
have lean_s4182 : (Or let98 (Or let1059 (Or let525 (Or let151 (Or let120 (Or let151 (Or let1059 (Or let120 (Or let1059 (Or let120 (Or let151 (Or let525 let1729)))))))))))) := by R1 lean_s4165, lean_s4181, let141, [(- 1), (- 1)]
have lean_s4183 : (Or let98 (Or let1059 let1735)) := by factor lean_s4182, 14
let lean_s4184 := by R2 lean_s4183, lean_s1373, let31, [(- 1), (- 1)]
let lean_s4185 := by R1 lean_s4184, lean_s1383, let744, [(- 1), 0]
have lean_s4186 : (Or let98 (Or let525 (Or let151 (Or let120 (Or let120 let151))))) := by R1 lean_s4185, lean_s1405, let748, [(- 1), 0]
have lean_s4187 : (Or let98 let1735) := by factor lean_s4186, 5
have lean_s4188 : (Or let120 let1561) := by permutateOr lean_s4187, [3, 0, 2, 1], (- 1)
have lean_s4189 : (Or let120 (Or let98 (Or let525 let1733))) := by R2 lean_s3223, lean_s4188, let151, [(- 1), (- 1)]
have lean_s4190 : let1733 := by factor lean_s4189, (- 1)
have lean_s4191 : (Or let525 (Or let98 (Or let1259 let1072))) := by R2 lean_s3129, lean_s4190, let120, [(- 1), (- 1)]
have lean_s4192 : (Or let525 (Or let98 let1259)) := by factor lean_s4191, 4
have lean_s4193 : (Or let98 (Or let525 let1259)) := by permutateOr lean_s4192, [1, 0, 2], (- 1)
let lean_s4194 := by R1 lean_s1673, lean_s4193, let97, [(- 1), (- 1)]
let lean_s4195 := by R1 lean_s1048, lean_s1063, let599, [(- 1), 0]
let lean_s4196 := by R1 lean_s4195, lean_s713, let857, [(- 1), 0]
let lean_s4197 := by R1 lean_s4196, lean_s1465, let87, [(- 1), (- 1)]
let lean_s4198 := by R1 lean_s4197, lean_s1785, let122, [(- 1), (- 1)]
have lean_s4199 : (Or let31 (Or let1321 (Or let1664 let1321))) := by R1 lean_s4198, lean_s1449, let432, [(- 1), 0]
have lean_s4200 : let1714 := by factor lean_s4199, 3
have lean_s4201 : (Or let98 (Or let31 (Or let525 (Or let1664 (Or let151 (Or let98 (Or let525 (Or let31 let1664)))))))) := by R1 lean_s4194, lean_s4200, let88, [(- 1), (- 1)]
have lean_s4202 : let1885 := by factor lean_s4201, 8
let lean_s4203 := by R2 lean_s4202, lean_s3113, let56, [(- 1), (- 1)]
let lean_s4204 := by R1 lean_s4203, lean_s787, let151, [(- 1), (- 1)]
have lean_s4205 : (Or let98 (Or let31 (Or let525 let1883))) := by R1 lean_s4204, lean_s789, let530, [(- 1), 0]
have lean_s4206 : (Or let98 let1883) := by factor lean_s4205, (- 1)
let lean_s4207 := by R1 lean_s4206, lean_s3121, let31, [(- 1), (- 1)]
have lean_s4208 : (Or let98 (Or let525 (Or let400 let400))) := by R1 lean_s4207, lean_s2259, let625, [(- 1), 0]
have lean_s4209 : (Or let98 let1882) := by factor lean_s4208, (- 1)
have lean_s4210 : (Or let98 (Or let525 let1072)) := by R2 lean_s4209, lean_s4190, let120, [(- 1), (- 1)]
have lean_s4211 : let1072 := by factor lean_s4210, (- 1)
have lean_s4212 : (Or let1045 (Or let1038 let1043)) := by timed cnfAndNeg [let525, let727]
have lean_s4213 : let1044 :=
  (scope (fun lean_a662 : let525 =>
    (scope (fun lean_a663 : let727 =>
      have lean_s4213 : let458 := by timed Eq.symm lean_a663
      have lean_s4214 : let727 := by timed Eq.symm lean_s4213
      have lean_s4215 : let462 := by timed Eq.symm lean_a662
      have lean_s4216 : let23 := by timed Eq.trans lean_s4214 lean_s4215
      show let23 from lean_s4216
  ))))
have lean_s4214 : (Implies let1045 let23) := by liftOrNToImp lean_s4213, 2
have lean_s4215 : (Or (Not let1045) let23) := by timed impliesElim lean_s4214
have lean_s4216 : let1044 := by R1 lean_s4212, lean_s4215, let1045, [(- 1), (- 1)]
have lean_s4217 : (Or let23 (Or let1043 let1038)) := by permutateOr lean_s4216, [2, 1, 0], (- 1)
let lean_s4218 := by R1 lean_s4217, lean_s3324, let23, [(- 1), 0]
have lean_s4219 : let1038 := by R2 lean_s4218, lean_s712, let727, [(- 1), 0]
have lean_s4220 : let1046 := by R1 lean_s4099, lean_s4219, let525, [(- 1), 0]
let lean_s4221 := by R1 lean_s4211, lean_s4220, let98, [(- 1), 0]
exact (show False from by R1 lean_s4221, lean_s4219, let525, [0, 0])


