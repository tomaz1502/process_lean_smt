open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000


universe u
variable {I : Type u} [Nonempty I]
variable {op : (I -> I -> I)}
variable {e0 : I}
variable {e1 : I}
variable {e4 : I}
variable {op : (I -> I -> I)}
variable {e2 : I}
variable {e0 : I}
variable {e1 : I}
variable {e3 : I}
variable {e2 : I}
variable {e3 : I}
variable {e4 : I}

theorem th0 :
  let let1 := (op e0 e0)
  let let2 := (op e0 let1)
  let let3 := (Eq e0 let2)
  let let4 := (Eq let2 e0)
  let let5 := (op e0 e1)
  let let6 := (op e0 let5)
  let let7 := (Eq e1 let6)
  let let8 := (Eq let6 e1)
  let let9 := (op e0 e2)
  let let10 := (op e0 let9)
  let let11 := (Eq e2 let10)
  let let12 := (Eq let10 e2)
  let let13 := (op e0 e3)
  let let14 := (op e0 let13)
  let let15 := (Eq e3 let14)
  let let16 := (Eq let14 e3)
  let let17 := (op e0 e4)
  let let18 := (op e0 let17)
  let let19 := (Eq e4 let18)
  let let20 := (Eq let18 e4)
  let let21 := (op e1 e0)
  let let22 := (op e1 let21)
  let let23 := (Eq e0 let22)
  let let24 := (Eq let22 e0)
  let let25 := (op e4 e4)
  let let26 := (op e4 let25)
  let let27 := (Eq let26 e4)
  let let28 := (op e4 e3)
  let let29 := (op e4 let28)
  let let30 := (Eq let29 e3)
  let let31 := (op e4 e2)
  let let32 := (op e4 let31)
  let let33 := (Eq let32 e2)
  let let34 := (op e4 e1)
  let let35 := (op e4 let34)
  let let36 := (Eq let35 e1)
  let let37 := (op e4 e0)
  let let38 := (op e4 let37)
  let let39 := (Eq let38 e0)
  let let40 := (op e3 e4)
  let let41 := (op e3 let40)
  let let42 := (Eq let41 e4)
  let let43 := (op e3 e3)
  let let44 := (op e3 let43)
  let let45 := (Eq let44 e3)
  let let46 := (op e3 e2)
  let let47 := (op e3 let46)
  let let48 := (Eq let47 e2)
  let let49 := (op e3 e1)
  let let50 := (op e3 let49)
  let let51 := (Eq let50 e1)
  let let52 := (op e3 e0)
  let let53 := (op e3 let52)
  let let54 := (Eq let53 e0)
  let let55 := (op e2 e4)
  let let56 := (op e2 let55)
  let let57 := (Eq let56 e4)
  let let58 := (op e2 e3)
  let let59 := (op e2 let58)
  let let60 := (Eq let59 e3)
  let let61 := (op e2 e2)
  let let62 := (op e2 let61)
  let let63 := (Eq let62 e2)
  let let64 := (op e2 e1)
  let let65 := (op e2 let64)
  let let66 := (Eq let65 e1)
  let let67 := (op e2 e0)
  let let68 := (op e2 let67)
  let let69 := (Eq let68 e0)
  let let70 := (op e1 e4)
  let let71 := (op e1 let70)
  let let72 := (Eq let71 e4)
  let let73 := (op e1 e3)
  let let74 := (op e1 let73)
  let let75 := (Eq let74 e3)
  let let76 := (op e1 e2)
  let let77 := (op e1 let76)
  let let78 := (Eq let77 e2)
  let let79 := (op e1 e1)
  let let80 := (op e1 let79)
  let let81 := (Eq let80 e1)
  let let82 := (Not let27)
  let let83 := (Not let45)
  let let84 := (Not let63)
  let let85 := (Not let81)
  let let86 := (Not let4)
  let let87 := (And let86 (And let85 (And let84 (And let83 (And let82 (And let4 (And let8 (And let12 (And let16 (And let20 (And let24 (And let81 (And let78 (And let75 (And let72 (And let69 (And let66 (And let63 (And let60 (And let57 (And let54 (And let51 (And let48 (And let45 (And let42 (And let39 (And let36 (And let33 (And let30 let27)))))))))))))))))))))))))))))
  let let88 := (And (And (And (And (And let86 let85) let84) let83) let82) (And (And (And (And (And (And (And (And let4 let8) let12) let16) let20) (And (And (And (And let24 let81) let78) let75) let72)) (And (And (And (And let69 let66) let63) let60) let57)) (And (And (And (And let54 let51) let48) let45) let42)) (And (And (And (And let39 let36) let33) let30) let27)))
  let let89 := (Eq e1 let80)
  let let90 := (Eq e2 let77)
  let let91 := (Eq e3 let74)
  let let92 := (Eq e4 let71)
  let let93 := (Eq e0 let68)
  let let94 := (Eq e1 let65)
  let let95 := (Eq e4 let26)
  let let96 := (Eq e3 let29)
  let let97 := (Eq e2 let32)
  let let98 := (Eq e1 let35)
  let let99 := (Eq e0 let38)
  let let100 := (Eq e4 let41)
  let let101 := (Eq e3 let44)
  let let102 := (Eq e2 let47)
  let let103 := (Eq e1 let50)
  let let104 := (Eq e0 let53)
  let let105 := (Eq e4 let56)
  let let106 := (Eq e3 let59)
  let let107 := (Eq e2 let62)
  let let108 := (Eq let25 e4)
  let let109 := (Eq let25 e3)
  let let110 := (Eq let25 e2)
  let let111 := (Eq let25 e1)
  let let112 := (Eq let25 e0)
  let let113 := (Eq let28 e4)
  let let114 := (Eq let28 e3)
  let let115 := (Eq let28 e2)
  let let116 := (Eq let28 e1)
  let let117 := (Eq let28 e0)
  let let118 := (Eq let31 e4)
  let let119 := (Eq let31 e3)
  let let120 := (Eq let31 e2)
  let let121 := (Eq let31 e1)
  let let122 := (Eq let31 e0)
  let let123 := (Eq let34 e4)
  let let124 := (Eq let34 e3)
  let let125 := (Eq let34 e2)
  let let126 := (Eq let34 e1)
  let let127 := (Eq let34 e0)
  let let128 := (Eq let37 e4)
  let let129 := (Eq let37 e3)
  let let130 := (Eq let37 e2)
  let let131 := (Eq let37 e1)
  let let132 := (Eq let37 e0)
  let let133 := (Eq let40 e4)
  let let134 := (Eq let40 e3)
  let let135 := (Eq let40 e2)
  let let136 := (Eq let40 e1)
  let let137 := (Eq let40 e0)
  let let138 := (Eq let43 e4)
  let let139 := (Eq let43 e3)
  let let140 := (Eq let43 e2)
  let let141 := (Eq let43 e1)
  let let142 := (Eq let43 e0)
  let let143 := (Eq let46 e4)
  let let144 := (Eq let46 e3)
  let let145 := (Eq let46 e2)
  let let146 := (Eq let46 e1)
  let let147 := (Eq let46 e0)
  let let148 := (Eq let49 e4)
  let let149 := (Eq let49 e3)
  let let150 := (Eq let49 e2)
  let let151 := (Eq let49 e1)
  let let152 := (Eq let49 e0)
  let let153 := (Eq let52 e4)
  let let154 := (Eq let52 e3)
  let let155 := (Eq let52 e2)
  let let156 := (Eq let52 e1)
  let let157 := (Eq let52 e0)
  let let158 := (Eq let55 e4)
  let let159 := (Eq let55 e3)
  let let160 := (Eq let55 e2)
  let let161 := (Eq let55 e1)
  let let162 := (Eq let55 e0)
  let let163 := (Eq let58 e4)
  let let164 := (Eq let58 e3)
  let let165 := (Eq let58 e2)
  let let166 := (Eq let58 e1)
  let let167 := (Eq let58 e0)
  let let168 := (Eq let61 e4)
  let let169 := (Eq let61 e3)
  let let170 := (Eq let61 e2)
  let let171 := (Eq let61 e1)
  let let172 := (Eq let61 e0)
  let let173 := (Eq let64 e4)
  let let174 := (Eq let64 e3)
  let let175 := (Eq let64 e2)
  let let176 := (Eq let64 e1)
  let let177 := (Eq let64 e0)
  let let178 := (Eq let67 e4)
  let let179 := (Eq let67 e3)
  let let180 := (Eq let67 e2)
  let let181 := (Eq let67 e1)
  let let182 := (Eq let67 e0)
  let let183 := (Eq let70 e4)
  let let184 := (Eq let70 e3)
  let let185 := (Eq let70 e2)
  let let186 := (Eq let70 e1)
  let let187 := (Eq let70 e0)
  let let188 := (Eq let73 e4)
  let let189 := (Eq let73 e3)
  let let190 := (Eq let73 e2)
  let let191 := (Eq let73 e1)
  let let192 := (Eq let73 e0)
  let let193 := (Eq let76 e4)
  let let194 := (Eq let76 e3)
  let let195 := (Eq let76 e2)
  let let196 := (Eq let76 e1)
  let let197 := (Eq let76 e0)
  let let198 := (Eq let79 e4)
  let let199 := (Eq let79 e3)
  let let200 := (Eq let79 e2)
  let let201 := (Eq let79 e1)
  let let202 := (Eq let79 e0)
  let let203 := (Eq let21 e4)
  let let204 := (Eq let21 e3)
  let let205 := (Eq let21 e2)
  let let206 := (Eq let21 e1)
  let let207 := (Eq let21 e0)
  let let208 := (Eq let17 e4)
  let let209 := (Eq let17 e3)
  let let210 := (Eq let17 e2)
  let let211 := (Eq let17 e1)
  let let212 := (Eq let17 e0)
  let let213 := (Eq let13 e4)
  let let214 := (Eq let13 e3)
  let let215 := (Eq let13 e2)
  let let216 := (Eq let13 e1)
  let let217 := (Eq let13 e0)
  let let218 := (Eq let9 e4)
  let let219 := (Eq let9 e3)
  let let220 := (Eq let9 e2)
  let let221 := (Eq let9 e1)
  let let222 := (Eq let9 e0)
  let let223 := (Eq let5 e4)
  let let224 := (Eq let5 e3)
  let let225 := (Eq let5 e2)
  let let226 := (Eq let5 e1)
  let let227 := (Eq let5 e0)
  let let228 := (Eq let1 e4)
  let let229 := (Eq let1 e3)
  let let230 := (Eq let1 e2)
  let let231 := (Eq let1 e1)
  let let232 := (Eq let1 e0)
  let let233 := (Not let3)
  let let234 := (Not let95)
  let let235 := (Not let101)
  let let236 := (Not let107)
  let let237 := (Not let89)
  let let238 := (And let233 (And let237 (And let236 (And let235 (And let234 (And let3 (And let7 (And let11 (And let15 (And let19 (And let23 (And let89 (And let90 (And let91 (And let92 (And let93 (And let94 (And let107 (And let106 (And let105 (And let104 (And let103 (And let102 (And let101 (And let100 (And let99 (And let98 (And let97 (And let96 let95)))))))))))))))))))))))))))))
(Eq let4 let3) → (Eq let8 let7) → (Eq let12 let11) → (Eq let16 let15) → (Eq let20 let19) → (Eq let24 let23) → (Eq let88 let87) → (Eq let81 let89) → (Eq let78 let90) → (Eq let75 let91) → (Eq let72 let92) → (Eq let69 let93) → (Eq let66 let94) → (Eq let27 let95) → (Eq let30 let96) → (Eq let33 let97) → (Eq let36 let98) → (Eq let39 let99) → (Eq let42 let100) → (Eq let45 let101) → (Eq let48 let102) → (Eq let51 let103) → (Eq let54 let104) → (Eq let57 let105) → (Eq let60 let106) → (Eq let63 let107) → (And (And (And (And (And (And (And (And (Or (Or (Or (Or let232 let231) let230) let229) let228) (Or (Or (Or (Or let227 let226) let225) let224) let223)) (Or (Or (Or (Or let222 let221) let220) let219) let218)) (Or (Or (Or (Or let217 let216) let215) let214) let213)) (Or (Or (Or (Or let212 let211) let210) let209) let208)) (And (And (And (And (Or (Or (Or (Or let207 let206) let205) let204) let203) (Or (Or (Or (Or let202 let201) let200) let199) let198)) (Or (Or (Or (Or let197 let196) let195) let194) let193)) (Or (Or (Or (Or let192 let191) let190) let189) let188)) (Or (Or (Or (Or let187 let186) let185) let184) let183))) (And (And (And (And (Or (Or (Or (Or let182 let181) let180) let179) let178) (Or (Or (Or (Or let177 let176) let175) let174) let173)) (Or (Or (Or (Or let172 let171) let170) let169) let168)) (Or (Or (Or (Or let167 let166) let165) let164) let163)) (Or (Or (Or (Or let162 let161) let160) let159) let158))) (And (And (And (And (Or (Or (Or (Or let157 let156) let155) let154) let153) (Or (Or (Or (Or let152 let151) let150) let149) let148)) (Or (Or (Or (Or let147 let146) let145) let144) let143)) (Or (Or (Or (Or let142 let141) let140) let139) let138)) (Or (Or (Or (Or let137 let136) let135) let134) let133))) (And (And (And (And (Or (Or (Or (Or let132 let131) let130) let129) let128) (Or (Or (Or (Or let127 let126) let125) let124) let123)) (Or (Or (Or (Or let122 let121) let120) let119) let118)) (Or (Or (Or (Or let117 let116) let115) let114) let113)) (Or (Or (Or (Or let112 let111) let110) let109) let108))) → (And (And (And (And (And (And (And (And (And (Or (Or (Or (Or let232 let227) let222) let217) let212) (Or (Or (Or (Or let232 let207) let182) let157) let132)) (And (Or (Or (Or (Or let231 let226) let221) let216) let211) (Or (Or (Or (Or let231 let206) let181) let156) let131))) (And (Or (Or (Or (Or let230 let225) let220) let215) let210) (Or (Or (Or (Or let230 let205) let180) let155) let130))) (And (Or (Or (Or (Or let229 let224) let219) let214) let209) (Or (Or (Or (Or let229 let204) let179) let154) let129))) (And (Or (Or (Or (Or let228 let223) let218) let213) let208) (Or (Or (Or (Or let228 let203) let178) let153) let128))) (And (And (And (And (And (Or (Or (Or (Or let207 let202) let197) let192) let187) (Or (Or (Or (Or let227 let202) let177) let152) let127)) (And (Or (Or (Or (Or let206 let201) let196) let191) let186) (Or (Or (Or (Or let226 let201) let176) let151) let126))) (And (Or (Or (Or (Or let205 let200) let195) let190) let185) (Or (Or (Or (Or let225 let200) let175) let150) let125))) (And (Or (Or (Or (Or let204 let199) let194) let189) let184) (Or (Or (Or (Or let224 let199) let174) let149) let124))) (And (Or (Or (Or (Or let203 let198) let193) let188) let183) (Or (Or (Or (Or let223 let198) let173) let148) let123)))) (And (And (And (And (And (Or (Or (Or (Or let182 let177) let172) let167) let162) (Or (Or (Or (Or let222 let197) let172) let147) let122)) (And (Or (Or (Or (Or let181 let176) let171) let166) let161) (Or (Or (Or (Or let221 let196) let171) let146) let121))) (And (Or (Or (Or (Or let180 let175) let170) let165) let160) (Or (Or (Or (Or let220 let195) let170) let145) let120))) (And (Or (Or (Or (Or let179 let174) let169) let164) let159) (Or (Or (Or (Or let219 let194) let169) let144) let119))) (And (Or (Or (Or (Or let178 let173) let168) let163) let158) (Or (Or (Or (Or let218 let193) let168) let143) let118)))) (And (And (And (And (And (Or (Or (Or (Or let157 let152) let147) let142) let137) (Or (Or (Or (Or let217 let192) let167) let142) let117)) (And (Or (Or (Or (Or let156 let151) let146) let141) let136) (Or (Or (Or (Or let216 let191) let166) let141) let116))) (And (Or (Or (Or (Or let155 let150) let145) let140) let135) (Or (Or (Or (Or let215 let190) let165) let140) let115))) (And (Or (Or (Or (Or let154 let149) let144) let139) let134) (Or (Or (Or (Or let214 let189) let164) let139) let114))) (And (Or (Or (Or (Or let153 let148) let143) let138) let133) (Or (Or (Or (Or let213 let188) let163) let138) let113)))) (And (And (And (And (And (Or (Or (Or (Or let132 let127) let122) let117) let112) (Or (Or (Or (Or let212 let187) let162) let137) let112)) (And (Or (Or (Or (Or let131 let126) let121) let116) let111) (Or (Or (Or (Or let211 let186) let161) let136) let111))) (And (Or (Or (Or (Or let130 let125) let120) let115) let110) (Or (Or (Or (Or let210 let185) let160) let135) let110))) (And (Or (Or (Or (Or let129 let124) let119) let114) let109) (Or (Or (Or (Or let209 let184) let159) let134) let109))) (And (Or (Or (Or (Or let128 let123) let118) let113) let108) (Or (Or (Or (Or let208 let183) let158) let133) let108)))) → (And (And (And (And (Or (Or (Or (Or let232 let202) let172) let142) let112) (Or (Or (Or (Or let231 let201) let171) let141) let111)) (Or (Or (Or (Or let230 let200) let170) let140) let110)) (Or (Or (Or (Or let229 let199) let169) let139) let109)) (Or (Or (Or (Or let228 let198) let168) let138) let108)) → (And (And (And (And (Or (Or (Or (Or let232 let206) let180) let154) let128) (Or (Or (Or (Or let227 let201) let175) let149) let123)) (Or (Or (Or (Or let222 let196) let170) let144) let118)) (Or (Or (Or (Or let217 let191) let165) let139) let113)) (Or (Or (Or (Or let212 let186) let160) let134) let108)) → (Or (Or (Or (Or (Or (Or (Or (Or (Not (Eq let1 let1)) (Not (Eq let21 let5))) (Not (Eq let67 let9))) (Not (Eq let52 let13))) (Not (Eq let37 let17))) (Or (Or (Or (Or (Not (Eq let5 let21)) (Not (Eq let79 let79))) (Not (Eq let64 let76))) (Not (Eq let49 let73))) (Not (Eq let34 let70)))) (Or (Or (Or (Or (Not (Eq let9 let67)) (Not (Eq let76 let64))) (Not (Eq let61 let61))) (Not (Eq let46 let58))) (Not (Eq let31 let55)))) (Or (Or (Or (Or (Not (Eq let13 let52)) (Not (Eq let73 let49))) (Not (Eq let58 let46))) (Not (Eq let43 let43))) (Not (Eq let28 let40)))) (Or (Or (Or (Or (Not (Eq let17 let37)) (Not (Eq let70 let34))) (Not (Eq let55 let31))) (Not (Eq let40 let28))) (Not (Eq let25 let25)))) → (And (And (And (And (Not let232) (Not let201)) (Not let170)) (Not let139)) (Not let108)) → let88 → (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq let1 let21)) (Not (Eq let1 let67))) (Not (Eq let1 let52))) (Not (Eq let1 let37))) (Not (Eq let21 let67))) (Not (Eq let21 let52))) (Not (Eq let21 let37))) (Not (Eq let67 let52))) (Not (Eq let67 let37))) (Not (Eq let52 let37))) (And (And (And (And (And (And (And (And (And (Not (Eq let5 let79)) (Not (Eq let5 let64))) (Not (Eq let5 let49))) (Not (Eq let5 let34))) (Not (Eq let79 let64))) (Not (Eq let79 let49))) (Not (Eq let79 let34))) (Not (Eq let64 let49))) (Not (Eq let64 let34))) (Not (Eq let49 let34)))) (And (And (And (And (And (And (And (And (And (Not (Eq let9 let76)) (Not (Eq let9 let61))) (Not (Eq let9 let46))) (Not (Eq let9 let31))) (Not (Eq let76 let61))) (Not (Eq let76 let46))) (Not (Eq let76 let31))) (Not (Eq let61 let46))) (Not (Eq let61 let31))) (Not (Eq let46 let31)))) (And (And (And (And (And (And (And (And (And (Not (Eq let13 let73)) (Not (Eq let13 let58))) (Not (Eq let13 let43))) (Not (Eq let13 let28))) (Not (Eq let73 let58))) (Not (Eq let73 let43))) (Not (Eq let73 let28))) (Not (Eq let58 let43))) (Not (Eq let58 let28))) (Not (Eq let43 let28)))) (And (And (And (And (And (And (And (And (And (Not (Eq let17 let70)) (Not (Eq let17 let55))) (Not (Eq let17 let40))) (Not (Eq let17 let25))) (Not (Eq let70 let55))) (Not (Eq let70 let40))) (Not (Eq let70 let25))) (Not (Eq let55 let40))) (Not (Eq let55 let25))) (Not (Eq let40 let25)))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq let1 let5)) (Not (Eq let1 let9))) (Not (Eq let1 let13))) (Not (Eq let1 let17))) (Not (Eq let5 let9))) (Not (Eq let5 let13))) (Not (Eq let5 let17))) (Not (Eq let9 let13))) (Not (Eq let9 let17))) (Not (Eq let13 let17))) (And (And (And (And (And (And (And (And (And (Not (Eq let21 let79)) (Not (Eq let21 let76))) (Not (Eq let21 let73))) (Not (Eq let21 let70))) (Not (Eq let79 let76))) (Not (Eq let79 let73))) (Not (Eq let79 let70))) (Not (Eq let76 let73))) (Not (Eq let76 let70))) (Not (Eq let73 let70)))) (And (And (And (And (And (And (And (And (And (Not (Eq let67 let64)) (Not (Eq let67 let61))) (Not (Eq let67 let58))) (Not (Eq let67 let55))) (Not (Eq let64 let61))) (Not (Eq let64 let58))) (Not (Eq let64 let55))) (Not (Eq let61 let58))) (Not (Eq let61 let55))) (Not (Eq let58 let55)))) (And (And (And (And (And (And (And (And (And (Not (Eq let52 let49)) (Not (Eq let52 let46))) (Not (Eq let52 let43))) (Not (Eq let52 let40))) (Not (Eq let49 let46))) (Not (Eq let49 let43))) (Not (Eq let49 let40))) (Not (Eq let46 let43))) (Not (Eq let46 let40))) (Not (Eq let43 let40)))) (And (And (And (And (And (And (And (And (And (Not (Eq let37 let34)) (Not (Eq let37 let31))) (Not (Eq let37 let28))) (Not (Eq let37 let25))) (Not (Eq let34 let31))) (Not (Eq let34 let28))) (Not (Eq let34 let25))) (Not (Eq let31 let28))) (Not (Eq let31 let25))) (Not (Eq let28 let25))))) → (And (And (And (And (And (And (And (And (And (Not (Eq e0 e1)) (Not (Eq e0 e2))) (Not (Eq e0 e3))) (Not (Eq e0 e4))) (Not (Eq e1 e2))) (Not (Eq e1 e3))) (Not (Eq e1 e4))) (Not (Eq e2 e3))) (Not (Eq e2 e4))) (Not (Eq e3 e4))) → False :=
  let let1 := (op e0 e0)
  let let2 := (op e0 let1)
  let let3 := (Eq e0 let2)
  let let4 := (Eq let2 e0)
  let let5 := (op e0 e1)
  let let6 := (op e0 let5)
  let let7 := (Eq e1 let6)
  let let8 := (Eq let6 e1)
  let let9 := (op e0 e2)
  let let10 := (op e0 let9)
  let let11 := (Eq e2 let10)
  let let12 := (Eq let10 e2)
  let let13 := (op e0 e3)
  let let14 := (op e0 let13)
  let let15 := (Eq e3 let14)
  let let16 := (Eq let14 e3)
  let let17 := (op e0 e4)
  let let18 := (op e0 let17)
  let let19 := (Eq e4 let18)
  let let20 := (Eq let18 e4)
  let let21 := (op e1 e0)
  let let22 := (op e1 let21)
  let let23 := (Eq e0 let22)
  let let24 := (Eq let22 e0)
  let let25 := (op e4 e4)
  let let26 := (op e4 let25)
  let let27 := (Eq let26 e4)
  let let28 := (op e4 e3)
  let let29 := (op e4 let28)
  let let30 := (Eq let29 e3)
  let let31 := (op e4 e2)
  let let32 := (op e4 let31)
  let let33 := (Eq let32 e2)
  let let34 := (op e4 e1)
  let let35 := (op e4 let34)
  let let36 := (Eq let35 e1)
  let let37 := (op e4 e0)
  let let38 := (op e4 let37)
  let let39 := (Eq let38 e0)
  let let40 := (op e3 e4)
  let let41 := (op e3 let40)
  let let42 := (Eq let41 e4)
  let let43 := (op e3 e3)
  let let44 := (op e3 let43)
  let let45 := (Eq let44 e3)
  let let46 := (op e3 e2)
  let let47 := (op e3 let46)
  let let48 := (Eq let47 e2)
  let let49 := (op e3 e1)
  let let50 := (op e3 let49)
  let let51 := (Eq let50 e1)
  let let52 := (op e3 e0)
  let let53 := (op e3 let52)
  let let54 := (Eq let53 e0)
  let let55 := (op e2 e4)
  let let56 := (op e2 let55)
  let let57 := (Eq let56 e4)
  let let58 := (op e2 e3)
  let let59 := (op e2 let58)
  let let60 := (Eq let59 e3)
  let let61 := (op e2 e2)
  let let62 := (op e2 let61)
  let let63 := (Eq let62 e2)
  let let64 := (op e2 e1)
  let let65 := (op e2 let64)
  let let66 := (Eq let65 e1)
  let let67 := (op e2 e0)
  let let68 := (op e2 let67)
  let let69 := (Eq let68 e0)
  let let70 := (op e1 e4)
  let let71 := (op e1 let70)
  let let72 := (Eq let71 e4)
  let let73 := (op e1 e3)
  let let74 := (op e1 let73)
  let let75 := (Eq let74 e3)
  let let76 := (op e1 e2)
  let let77 := (op e1 let76)
  let let78 := (Eq let77 e2)
  let let79 := (op e1 e1)
  let let80 := (op e1 let79)
  let let81 := (Eq let80 e1)
  let let82 := (Not let27)
  let let83 := (Not let45)
  let let84 := (Not let63)
  let let85 := (Not let81)
  let let86 := (Not let4)
  let let87 := (And let86 (And let85 (And let84 (And let83 (And let82 (And let4 (And let8 (And let12 (And let16 (And let20 (And let24 (And let81 (And let78 (And let75 (And let72 (And let69 (And let66 (And let63 (And let60 (And let57 (And let54 (And let51 (And let48 (And let45 (And let42 (And let39 (And let36 (And let33 (And let30 let27)))))))))))))))))))))))))))))
  let let88 := (And (And (And (And (And let86 let85) let84) let83) let82) (And (And (And (And (And (And (And (And let4 let8) let12) let16) let20) (And (And (And (And let24 let81) let78) let75) let72)) (And (And (And (And let69 let66) let63) let60) let57)) (And (And (And (And let54 let51) let48) let45) let42)) (And (And (And (And let39 let36) let33) let30) let27)))
  let let89 := (Eq e1 let80)
  let let90 := (Eq e2 let77)
  let let91 := (Eq e3 let74)
  let let92 := (Eq e4 let71)
  let let93 := (Eq e0 let68)
  let let94 := (Eq e1 let65)
  let let95 := (Eq e4 let26)
  let let96 := (Eq e3 let29)
  let let97 := (Eq e2 let32)
  let let98 := (Eq e1 let35)
  let let99 := (Eq e0 let38)
  let let100 := (Eq e4 let41)
  let let101 := (Eq e3 let44)
  let let102 := (Eq e2 let47)
  let let103 := (Eq e1 let50)
  let let104 := (Eq e0 let53)
  let let105 := (Eq e4 let56)
  let let106 := (Eq e3 let59)
  let let107 := (Eq e2 let62)
  let let108 := (Eq let25 e4)
  let let109 := (Eq let25 e3)
  let let110 := (Eq let25 e2)
  let let111 := (Eq let25 e1)
  let let112 := (Eq let25 e0)
  let let113 := (Eq let28 e4)
  let let114 := (Eq let28 e3)
  let let115 := (Eq let28 e2)
  let let116 := (Eq let28 e1)
  let let117 := (Eq let28 e0)
  let let118 := (Eq let31 e4)
  let let119 := (Eq let31 e3)
  let let120 := (Eq let31 e2)
  let let121 := (Eq let31 e1)
  let let122 := (Eq let31 e0)
  let let123 := (Eq let34 e4)
  let let124 := (Eq let34 e3)
  let let125 := (Eq let34 e2)
  let let126 := (Eq let34 e1)
  let let127 := (Eq let34 e0)
  let let128 := (Eq let37 e4)
  let let129 := (Eq let37 e3)
  let let130 := (Eq let37 e2)
  let let131 := (Eq let37 e1)
  let let132 := (Eq let37 e0)
  let let133 := (Eq let40 e4)
  let let134 := (Eq let40 e3)
  let let135 := (Eq let40 e2)
  let let136 := (Eq let40 e1)
  let let137 := (Eq let40 e0)
  let let138 := (Eq let43 e4)
  let let139 := (Eq let43 e3)
  let let140 := (Eq let43 e2)
  let let141 := (Eq let43 e1)
  let let142 := (Eq let43 e0)
  let let143 := (Eq let46 e4)
  let let144 := (Eq let46 e3)
  let let145 := (Eq let46 e2)
  let let146 := (Eq let46 e1)
  let let147 := (Eq let46 e0)
  let let148 := (Eq let49 e4)
  let let149 := (Eq let49 e3)
  let let150 := (Eq let49 e2)
  let let151 := (Eq let49 e1)
  let let152 := (Eq let49 e0)
  let let153 := (Eq let52 e4)
  let let154 := (Eq let52 e3)
  let let155 := (Eq let52 e2)
  let let156 := (Eq let52 e1)
  let let157 := (Eq let52 e0)
  let let158 := (Eq let55 e4)
  let let159 := (Eq let55 e3)
  let let160 := (Eq let55 e2)
  let let161 := (Eq let55 e1)
  let let162 := (Eq let55 e0)
  let let163 := (Eq let58 e4)
  let let164 := (Eq let58 e3)
  let let165 := (Eq let58 e2)
  let let166 := (Eq let58 e1)
  let let167 := (Eq let58 e0)
  let let168 := (Eq let61 e4)
  let let169 := (Eq let61 e3)
  let let170 := (Eq let61 e2)
  let let171 := (Eq let61 e1)
  let let172 := (Eq let61 e0)
  let let173 := (Eq let64 e4)
  let let174 := (Eq let64 e3)
  let let175 := (Eq let64 e2)
  let let176 := (Eq let64 e1)
  let let177 := (Eq let64 e0)
  let let178 := (Eq let67 e4)
  let let179 := (Eq let67 e3)
  let let180 := (Eq let67 e2)
  let let181 := (Eq let67 e1)
  let let182 := (Eq let67 e0)
  let let183 := (Eq let70 e4)
  let let184 := (Eq let70 e3)
  let let185 := (Eq let70 e2)
  let let186 := (Eq let70 e1)
  let let187 := (Eq let70 e0)
  let let188 := (Eq let73 e4)
  let let189 := (Eq let73 e3)
  let let190 := (Eq let73 e2)
  let let191 := (Eq let73 e1)
  let let192 := (Eq let73 e0)
  let let193 := (Eq let76 e4)
  let let194 := (Eq let76 e3)
  let let195 := (Eq let76 e2)
  let let196 := (Eq let76 e1)
  let let197 := (Eq let76 e0)
  let let198 := (Eq let79 e4)
  let let199 := (Eq let79 e3)
  let let200 := (Eq let79 e2)
  let let201 := (Eq let79 e1)
  let let202 := (Eq let79 e0)
  let let203 := (Eq let21 e4)
  let let204 := (Eq let21 e3)
  let let205 := (Eq let21 e2)
  let let206 := (Eq let21 e1)
  let let207 := (Eq let21 e0)
  let let208 := (Eq let17 e4)
  let let209 := (Eq let17 e3)
  let let210 := (Eq let17 e2)
  let let211 := (Eq let17 e1)
  let let212 := (Eq let17 e0)
  let let213 := (Eq let13 e4)
  let let214 := (Eq let13 e3)
  let let215 := (Eq let13 e2)
  let let216 := (Eq let13 e1)
  let let217 := (Eq let13 e0)
  let let218 := (Eq let9 e4)
  let let219 := (Eq let9 e3)
  let let220 := (Eq let9 e2)
  let let221 := (Eq let9 e1)
  let let222 := (Eq let9 e0)
  let let223 := (Eq let5 e4)
  let let224 := (Eq let5 e3)
  let let225 := (Eq let5 e2)
  let let226 := (Eq let5 e1)
  let let227 := (Eq let5 e0)
  let let228 := (Eq let1 e4)
  let let229 := (Eq let1 e3)
  let let230 := (Eq let1 e2)
  let let231 := (Eq let1 e1)
  let let232 := (Eq let1 e0)
  let let233 := (Not let3)
  let let234 := (Not let95)
  let let235 := (Not let101)
  let let236 := (Not let107)
  let let237 := (Not let89)
  let let238 := (And let233 (And let237 (And let236 (And let235 (And let234 (And let3 (And let7 (And let11 (And let15 (And let19 (And let23 (And let89 (And let90 (And let91 (And let92 (And let93 (And let94 (And let107 (And let106 (And let105 (And let104 (And let103 (And let102 (And let101 (And let100 (And let99 (And let98 (And let97 (And let96 let95)))))))))))))))))))))))))))))
fun lean_r0 : (Eq let4 let3) => -- THEORY_REWRITE_UF
fun lean_r1 : (Eq let8 let7) => -- THEORY_REWRITE_UF
fun lean_r2 : (Eq let12 let11) => -- THEORY_REWRITE_UF
fun lean_r3 : (Eq let16 let15) => -- THEORY_REWRITE_UF
fun lean_r4 : (Eq let20 let19) => -- THEORY_REWRITE_UF
fun lean_r5 : (Eq let24 let23) => -- THEORY_REWRITE_UF
fun lean_r6 : (Eq let88 let87) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq let81 let89) => -- THEORY_REWRITE_UF
fun lean_r8 : (Eq let78 let90) => -- THEORY_REWRITE_UF
fun lean_r9 : (Eq let75 let91) => -- THEORY_REWRITE_UF
fun lean_r10 : (Eq let72 let92) => -- THEORY_REWRITE_UF
fun lean_r11 : (Eq let69 let93) => -- THEORY_REWRITE_UF
fun lean_r12 : (Eq let66 let94) => -- THEORY_REWRITE_UF
fun lean_r13 : (Eq let27 let95) => -- THEORY_REWRITE_UF
fun lean_r14 : (Eq let30 let96) => -- THEORY_REWRITE_UF
fun lean_r15 : (Eq let33 let97) => -- THEORY_REWRITE_UF
fun lean_r16 : (Eq let36 let98) => -- THEORY_REWRITE_UF
fun lean_r17 : (Eq let39 let99) => -- THEORY_REWRITE_UF
fun lean_r18 : (Eq let42 let100) => -- THEORY_REWRITE_UF
fun lean_r19 : (Eq let45 let101) => -- THEORY_REWRITE_UF
fun lean_r20 : (Eq let48 let102) => -- THEORY_REWRITE_UF
fun lean_r21 : (Eq let51 let103) => -- THEORY_REWRITE_UF
fun lean_r22 : (Eq let54 let104) => -- THEORY_REWRITE_UF
fun lean_r23 : (Eq let57 let105) => -- THEORY_REWRITE_UF
fun lean_r24 : (Eq let60 let106) => -- THEORY_REWRITE_UF
fun lean_r25 : (Eq let63 let107) => -- THEORY_REWRITE_UF
fun lean_a26 : (And (And (And (And (And (And (And (And (Or (Or (Or (Or let232 let231) let230) let229) let228) (Or (Or (Or (Or let227 let226) let225) let224) let223)) (Or (Or (Or (Or let222 let221) let220) let219) let218)) (Or (Or (Or (Or let217 let216) let215) let214) let213)) (Or (Or (Or (Or let212 let211) let210) let209) let208)) (And (And (And (And (Or (Or (Or (Or let207 let206) let205) let204) let203) (Or (Or (Or (Or let202 let201) let200) let199) let198)) (Or (Or (Or (Or let197 let196) let195) let194) let193)) (Or (Or (Or (Or let192 let191) let190) let189) let188)) (Or (Or (Or (Or let187 let186) let185) let184) let183))) (And (And (And (And (Or (Or (Or (Or let182 let181) let180) let179) let178) (Or (Or (Or (Or let177 let176) let175) let174) let173)) (Or (Or (Or (Or let172 let171) let170) let169) let168)) (Or (Or (Or (Or let167 let166) let165) let164) let163)) (Or (Or (Or (Or let162 let161) let160) let159) let158))) (And (And (And (And (Or (Or (Or (Or let157 let156) let155) let154) let153) (Or (Or (Or (Or let152 let151) let150) let149) let148)) (Or (Or (Or (Or let147 let146) let145) let144) let143)) (Or (Or (Or (Or let142 let141) let140) let139) let138)) (Or (Or (Or (Or let137 let136) let135) let134) let133))) (And (And (And (And (Or (Or (Or (Or let132 let131) let130) let129) let128) (Or (Or (Or (Or let127 let126) let125) let124) let123)) (Or (Or (Or (Or let122 let121) let120) let119) let118)) (Or (Or (Or (Or let117 let116) let115) let114) let113)) (Or (Or (Or (Or let112 let111) let110) let109) let108))) =>
fun lean_a27 : (And (And (And (And (And (And (And (And (And (Or (Or (Or (Or let232 let227) let222) let217) let212) (Or (Or (Or (Or let232 let207) let182) let157) let132)) (And (Or (Or (Or (Or let231 let226) let221) let216) let211) (Or (Or (Or (Or let231 let206) let181) let156) let131))) (And (Or (Or (Or (Or let230 let225) let220) let215) let210) (Or (Or (Or (Or let230 let205) let180) let155) let130))) (And (Or (Or (Or (Or let229 let224) let219) let214) let209) (Or (Or (Or (Or let229 let204) let179) let154) let129))) (And (Or (Or (Or (Or let228 let223) let218) let213) let208) (Or (Or (Or (Or let228 let203) let178) let153) let128))) (And (And (And (And (And (Or (Or (Or (Or let207 let202) let197) let192) let187) (Or (Or (Or (Or let227 let202) let177) let152) let127)) (And (Or (Or (Or (Or let206 let201) let196) let191) let186) (Or (Or (Or (Or let226 let201) let176) let151) let126))) (And (Or (Or (Or (Or let205 let200) let195) let190) let185) (Or (Or (Or (Or let225 let200) let175) let150) let125))) (And (Or (Or (Or (Or let204 let199) let194) let189) let184) (Or (Or (Or (Or let224 let199) let174) let149) let124))) (And (Or (Or (Or (Or let203 let198) let193) let188) let183) (Or (Or (Or (Or let223 let198) let173) let148) let123)))) (And (And (And (And (And (Or (Or (Or (Or let182 let177) let172) let167) let162) (Or (Or (Or (Or let222 let197) let172) let147) let122)) (And (Or (Or (Or (Or let181 let176) let171) let166) let161) (Or (Or (Or (Or let221 let196) let171) let146) let121))) (And (Or (Or (Or (Or let180 let175) let170) let165) let160) (Or (Or (Or (Or let220 let195) let170) let145) let120))) (And (Or (Or (Or (Or let179 let174) let169) let164) let159) (Or (Or (Or (Or let219 let194) let169) let144) let119))) (And (Or (Or (Or (Or let178 let173) let168) let163) let158) (Or (Or (Or (Or let218 let193) let168) let143) let118)))) (And (And (And (And (And (Or (Or (Or (Or let157 let152) let147) let142) let137) (Or (Or (Or (Or let217 let192) let167) let142) let117)) (And (Or (Or (Or (Or let156 let151) let146) let141) let136) (Or (Or (Or (Or let216 let191) let166) let141) let116))) (And (Or (Or (Or (Or let155 let150) let145) let140) let135) (Or (Or (Or (Or let215 let190) let165) let140) let115))) (And (Or (Or (Or (Or let154 let149) let144) let139) let134) (Or (Or (Or (Or let214 let189) let164) let139) let114))) (And (Or (Or (Or (Or let153 let148) let143) let138) let133) (Or (Or (Or (Or let213 let188) let163) let138) let113)))) (And (And (And (And (And (Or (Or (Or (Or let132 let127) let122) let117) let112) (Or (Or (Or (Or let212 let187) let162) let137) let112)) (And (Or (Or (Or (Or let131 let126) let121) let116) let111) (Or (Or (Or (Or let211 let186) let161) let136) let111))) (And (Or (Or (Or (Or let130 let125) let120) let115) let110) (Or (Or (Or (Or let210 let185) let160) let135) let110))) (And (Or (Or (Or (Or let129 let124) let119) let114) let109) (Or (Or (Or (Or let209 let184) let159) let134) let109))) (And (Or (Or (Or (Or let128 let123) let118) let113) let108) (Or (Or (Or (Or let208 let183) let158) let133) let108)))) =>
fun lean_a28 : (And (And (And (And (Or (Or (Or (Or let232 let202) let172) let142) let112) (Or (Or (Or (Or let231 let201) let171) let141) let111)) (Or (Or (Or (Or let230 let200) let170) let140) let110)) (Or (Or (Or (Or let229 let199) let169) let139) let109)) (Or (Or (Or (Or let228 let198) let168) let138) let108)) =>
fun lean_a29 : (And (And (And (And (Or (Or (Or (Or let232 let206) let180) let154) let128) (Or (Or (Or (Or let227 let201) let175) let149) let123)) (Or (Or (Or (Or let222 let196) let170) let144) let118)) (Or (Or (Or (Or let217 let191) let165) let139) let113)) (Or (Or (Or (Or let212 let186) let160) let134) let108)) =>
fun lean_a30 : (Or (Or (Or (Or (Or (Or (Or (Or (Not (Eq let1 let1)) (Not (Eq let21 let5))) (Not (Eq let67 let9))) (Not (Eq let52 let13))) (Not (Eq let37 let17))) (Or (Or (Or (Or (Not (Eq let5 let21)) (Not (Eq let79 let79))) (Not (Eq let64 let76))) (Not (Eq let49 let73))) (Not (Eq let34 let70)))) (Or (Or (Or (Or (Not (Eq let9 let67)) (Not (Eq let76 let64))) (Not (Eq let61 let61))) (Not (Eq let46 let58))) (Not (Eq let31 let55)))) (Or (Or (Or (Or (Not (Eq let13 let52)) (Not (Eq let73 let49))) (Not (Eq let58 let46))) (Not (Eq let43 let43))) (Not (Eq let28 let40)))) (Or (Or (Or (Or (Not (Eq let17 let37)) (Not (Eq let70 let34))) (Not (Eq let55 let31))) (Not (Eq let40 let28))) (Not (Eq let25 let25)))) =>
fun lean_a31 : (And (And (And (And (Not let232) (Not let201)) (Not let170)) (Not let139)) (Not let108)) =>
fun lean_a32 : let88 =>
fun lean_a33 : (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq let1 let21)) (Not (Eq let1 let67))) (Not (Eq let1 let52))) (Not (Eq let1 let37))) (Not (Eq let21 let67))) (Not (Eq let21 let52))) (Not (Eq let21 let37))) (Not (Eq let67 let52))) (Not (Eq let67 let37))) (Not (Eq let52 let37))) (And (And (And (And (And (And (And (And (And (Not (Eq let5 let79)) (Not (Eq let5 let64))) (Not (Eq let5 let49))) (Not (Eq let5 let34))) (Not (Eq let79 let64))) (Not (Eq let79 let49))) (Not (Eq let79 let34))) (Not (Eq let64 let49))) (Not (Eq let64 let34))) (Not (Eq let49 let34)))) (And (And (And (And (And (And (And (And (And (Not (Eq let9 let76)) (Not (Eq let9 let61))) (Not (Eq let9 let46))) (Not (Eq let9 let31))) (Not (Eq let76 let61))) (Not (Eq let76 let46))) (Not (Eq let76 let31))) (Not (Eq let61 let46))) (Not (Eq let61 let31))) (Not (Eq let46 let31)))) (And (And (And (And (And (And (And (And (And (Not (Eq let13 let73)) (Not (Eq let13 let58))) (Not (Eq let13 let43))) (Not (Eq let13 let28))) (Not (Eq let73 let58))) (Not (Eq let73 let43))) (Not (Eq let73 let28))) (Not (Eq let58 let43))) (Not (Eq let58 let28))) (Not (Eq let43 let28)))) (And (And (And (And (And (And (And (And (And (Not (Eq let17 let70)) (Not (Eq let17 let55))) (Not (Eq let17 let40))) (Not (Eq let17 let25))) (Not (Eq let70 let55))) (Not (Eq let70 let40))) (Not (Eq let70 let25))) (Not (Eq let55 let40))) (Not (Eq let55 let25))) (Not (Eq let40 let25)))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq let1 let5)) (Not (Eq let1 let9))) (Not (Eq let1 let13))) (Not (Eq let1 let17))) (Not (Eq let5 let9))) (Not (Eq let5 let13))) (Not (Eq let5 let17))) (Not (Eq let9 let13))) (Not (Eq let9 let17))) (Not (Eq let13 let17))) (And (And (And (And (And (And (And (And (And (Not (Eq let21 let79)) (Not (Eq let21 let76))) (Not (Eq let21 let73))) (Not (Eq let21 let70))) (Not (Eq let79 let76))) (Not (Eq let79 let73))) (Not (Eq let79 let70))) (Not (Eq let76 let73))) (Not (Eq let76 let70))) (Not (Eq let73 let70)))) (And (And (And (And (And (And (And (And (And (Not (Eq let67 let64)) (Not (Eq let67 let61))) (Not (Eq let67 let58))) (Not (Eq let67 let55))) (Not (Eq let64 let61))) (Not (Eq let64 let58))) (Not (Eq let64 let55))) (Not (Eq let61 let58))) (Not (Eq let61 let55))) (Not (Eq let58 let55)))) (And (And (And (And (And (And (And (And (And (Not (Eq let52 let49)) (Not (Eq let52 let46))) (Not (Eq let52 let43))) (Not (Eq let52 let40))) (Not (Eq let49 let46))) (Not (Eq let49 let43))) (Not (Eq let49 let40))) (Not (Eq let46 let43))) (Not (Eq let46 let40))) (Not (Eq let43 let40)))) (And (And (And (And (And (And (And (And (And (Not (Eq let37 let34)) (Not (Eq let37 let31))) (Not (Eq let37 let28))) (Not (Eq let37 let25))) (Not (Eq let34 let31))) (Not (Eq let34 let28))) (Not (Eq let34 let25))) (Not (Eq let31 let28))) (Not (Eq let31 let25))) (Not (Eq let28 let25))))) =>
fun lean_a34 : (And (And (And (And (And (And (And (And (And (Not (Eq e0 e1)) (Not (Eq e0 e2))) (Not (Eq e0 e3))) (Not (Eq e0 e4))) (Not (Eq e1 e2))) (Not (Eq e1 e3))) (Not (Eq e1 e4))) (Not (Eq e2 e3))) (Not (Eq e2 e4))) (Not (Eq e3 e4))) => by
have lean_s0 : (Eq And And) := by timed rfl
have lean_s1 : (Eq let86 let233) := by timed flipCongrArg lean_r0 [Not]
let lean_s2 := by timed congr lean_s0 lean_s1
have lean_s3 : (Eq let85 let237) := by timed flipCongrArg lean_r7 [Not]
let lean_s4 := by timed congr lean_s0 lean_s3
have lean_s5 : (Eq let84 let236) := by timed flipCongrArg lean_r25 [Not]
let lean_s6 := by timed congr lean_s0 lean_s5
have lean_s7 : (Eq let83 let235) := by timed flipCongrArg lean_r19 [Not]
let lean_s8 := by timed congr lean_s0 lean_s7
have lean_s9 : (Eq let82 let234) := by timed flipCongrArg lean_r13 [Not]
let lean_s10 := by timed congr lean_s0 lean_s9
let lean_s11 := by timed congr lean_s0 lean_r0
let lean_s12 := by timed congr lean_s0 lean_r1
let lean_s13 := by timed congr lean_s0 lean_r2
let lean_s14 := by timed congr lean_s0 lean_r3
let lean_s15 := by timed congr lean_s0 lean_r4
let lean_s16 := by timed congr lean_s0 lean_r5
let lean_s17 := by timed congr lean_s0 lean_r7
let lean_s18 := by timed congr lean_s0 lean_r8
let lean_s19 := by timed congr lean_s0 lean_r9
let lean_s20 := by timed congr lean_s0 lean_r10
let lean_s21 := by timed congr lean_s0 lean_r11
let lean_s22 := by timed congr lean_s0 lean_r12
let lean_s23 := by timed congr lean_s0 lean_r25
let lean_s24 := by timed congr lean_s0 lean_r24
let lean_s25 := by timed congr lean_s0 lean_r23
let lean_s26 := by timed congr lean_s0 lean_r22
let lean_s27 := by timed congr lean_s0 lean_r21
let lean_s28 := by timed congr lean_s0 lean_r20
let lean_s29 := by timed congr lean_s0 lean_r19
let lean_s30 := by timed congr lean_s0 lean_r18
let lean_s31 := by timed congr lean_s0 lean_r17
let lean_s32 := by timed congr lean_s0 lean_r16
let lean_s33 := by timed congr lean_s0 lean_r15
let lean_s34 := by timed congr lean_s0 lean_r14
let lean_s35 := by timed congr lean_s34 lean_r13
let lean_s36 := by timed congr lean_s33 lean_s35
let lean_s37 := by timed congr lean_s32 lean_s36
let lean_s38 := by timed congr lean_s31 lean_s37
let lean_s39 := by timed congr lean_s30 lean_s38
let lean_s40 := by timed congr lean_s29 lean_s39
let lean_s41 := by timed congr lean_s28 lean_s40
let lean_s42 := by timed congr lean_s27 lean_s41
let lean_s43 := by timed congr lean_s26 lean_s42
let lean_s44 := by timed congr lean_s25 lean_s43
let lean_s45 := by timed congr lean_s24 lean_s44
let lean_s46 := by timed congr lean_s23 lean_s45
let lean_s47 := by timed congr lean_s22 lean_s46
let lean_s48 := by timed congr lean_s21 lean_s47
let lean_s49 := by timed congr lean_s20 lean_s48
let lean_s50 := by timed congr lean_s19 lean_s49
let lean_s51 := by timed congr lean_s18 lean_s50
let lean_s52 := by timed congr lean_s17 lean_s51
let lean_s53 := by timed congr lean_s16 lean_s52
let lean_s54 := by timed congr lean_s15 lean_s53
let lean_s55 := by timed congr lean_s14 lean_s54
let lean_s56 := by timed congr lean_s13 lean_s55
let lean_s57 := by timed congr lean_s12 lean_s56
let lean_s58 := by timed congr lean_s11 lean_s57
let lean_s59 := by timed congr lean_s10 lean_s58
let lean_s60 := by timed congr lean_s8 lean_s59
let lean_s61 := by timed congr lean_s6 lean_s60
let lean_s62 := by timed congr lean_s4 lean_s61
have lean_s63 : (Eq let87 let238) := by timed congr lean_s2 lean_s62
have lean_s64 : (Eq let88 let238) := by timed Eq.trans lean_r6 lean_s63
have lean_s65 : let238 := by timed eqResolve lean_a32 lean_s64
have lean_s66 : let3 := by andElim lean_s65, 5
have lean_s67 : let238 := by timed eqResolve lean_a32 lean_s64
have lean_s68 : let233 := by andElim lean_s67, 0
exact (show False from by timed contradiction lean_s66 lean_s68)


