open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000


universe u
variable {I : Type u} [Nonempty I]
variable {e2 : I}
variable {e1 : I}
variable {e0 : I}
variable {e3 : I}
variable {e2 : I}
variable {e1 : I}
variable {e0 : I}
variable {e4 : I}
variable {op : (I -> I -> I)}
variable {op : (I -> I -> I)}
variable {e4 : I}
variable {e3 : I}

theorem th0 :
  let let1 := (Eq e1 e0)
  let let2 := (Not let1)
  let let3 := (Not let2)
  let let4 := (Eq let1 let3)
  let let5 := (Eq let3 let1)
  let let6 := (Eq let1 let1)
  let let7 := (op e4 e2)
  let let8 := (Eq e3 let7)
  let let9 := (op e2 e3)
  let let10 := (Eq e0 let9)
  let let11 := (op e0 e2)
  let let12 := (Eq e1 let11)
  let let13 := (And let12 (And let10 let8))
  let let14 := (And (And let12 let10) let8)
  let let15 := (op e0 e4)
  let let16 := (Eq e1 let15)
  let let17 := (Not let16)
  let let18 := (Not let17)
  let let19 := (Eq let16 let18)
  let let20 := (Eq let18 let16)
  let let21 := (op e3 e4)
  let let22 := (Eq e2 let21)
  let let23 := (Eq e1 let7)
  let let24 := (op e1 e4)
  let let25 := (Eq e0 let24)
  let let26 := (And let25 (And let23 let22))
  let let27 := (And (And let25 let23) let22)
  let let28 := (Eq e3 let15)
  let let29 := (op e4 e3)
  let let30 := (Eq e2 let29)
  let let31 := (op e2 e4)
  let let32 := (Eq e1 let31)
  let let33 := (And let32 (And let30 let28))
  let let34 := (And (And let32 let30) let28)
  let let35 := (Not let28)
  let let36 := (Not let35)
  let let37 := (Eq let36 let28)
  let let38 := (Eq let28 let28)
  let let39 := (op e3 e3)
  let let40 := (op e1 e3)
  let let41 := (Eq let40 let39)
  let let42 := (Not let41)
  let let43 := (Not let42)
  let let44 := (Eq let41 let43)
  let let45 := (Eq let43 let41)
  let let46 := (Eq e1 let21)
  let let47 := (op e4 e1)
  let let48 := (Eq e2 let47)
  let let49 := (Eq e0 let31)
  let let50 := (And let49 (And let48 let46))
  let let51 := (And (And let49 let48) let46)
  let let52 := (Eq e4 e0)
  let let53 := (Not let52)
  let let54 := (Not let53)
  let let55 := (Eq let52 let54)
  let let56 := (Eq let54 let52)
  let let57 := (Eq let52 let52)
  let let58 := (Eq e4 e3)
  let let59 := (Not let58)
  let let60 := (Not let59)
  let let61 := (Eq let60 let58)
  let let62 := (Eq let58 let58)
  let let63 := (op e3 e2)
  let let64 := (op e2 e2)
  let let65 := (Eq let64 let63)
  let let66 := (Not let65)
  let let67 := (Not let66)
  let let68 := (Eq let65 let67)
  let let69 := (Eq let67 let65)
  let let70 := (Eq let65 let65)
  let let71 := (Eq e4 let9)
  let let72 := (Eq e0 let40)
  let let73 := (And let72 (And let46 let71))
  let let74 := (And (And let72 let46) let71)
  let let75 := (Not let10)
  let let76 := (Not let75)
  let let77 := (Eq let10 let76)
  let let78 := (Eq let76 let10)
  let let79 := (Eq let10 let10)
  let let80 := (Eq let63 let7)
  let let81 := (Not let80)
  let let82 := (Not let81)
  let let83 := (Eq let80 let82)
  let let84 := (Eq let82 let80)
  let let85 := (Eq let80 let80)
  let let86 := (Eq e1 let29)
  let let87 := (Eq e2 let24)
  let let88 := (And let87 (And let86 let28))
  let let89 := (And (And let87 let86) let28)
  let let90 := (Eq e3 let31)
  let let91 := (And let25 (And let86 let90))
  let let92 := (And (And let25 let86) let90)
  let let93 := (Eq e3 e1)
  let let94 := (Not let93)
  let let95 := (Not let94)
  let let96 := (Eq let93 let95)
  let let97 := (Eq let95 let93)
  let let98 := (Eq e3 let47)
  let let99 := (Eq e0 let21)
  let let100 := (And let99 (And let98 let32))
  let let101 := (And (And let99 let98) let32)
  let let102 := (Not let32)
  let let103 := (Not let102)
  let let104 := (Eq let32 let103)
  let let105 := (Eq let103 let32)
  let let106 := (Eq let32 let32)
  let let107 := (op e4 e0)
  let let108 := (Eq e1 let107)
  let let109 := (And let87 (And let108 let99))
  let let110 := (And (And let87 let108) let99)
  let let111 := (Eq let64 let7)
  let let112 := (Not let111)
  let let113 := (Not let112)
  let let114 := (Eq let111 let113)
  let let115 := (Eq let113 let111)
  let let116 := (Eq let9 let63)
  let let117 := (Eq let63 let9)
  let let118 := (Eq e0 let64)
  let let119 := (Eq let64 e0)
  let let120 := (op e1 e1)
  let let121 := (Eq let120 let47)
  let let122 := (Not let121)
  let let123 := (Not let122)
  let let124 := (Eq let121 let123)
  let let125 := (Eq let123 let121)
  let let126 := (Eq e1 let64)
  let let127 := (Eq let64 e1)
  let let128 := (Eq e3 let64)
  let let129 := (Eq let64 e3)
  let let130 := (Eq let121 let121)
  let let131 := (Eq e4 let64)
  let let132 := (Eq let64 e4)
  let let133 := (Eq let24 let31)
  let let134 := (Eq let133 let133)
  let let135 := (Eq e3 let9)
  let let136 := (Eq let9 e3)
  let let137 := (Eq let9 e4)
  let let138 := (Not let86)
  let let139 := (Not let138)
  let let140 := (Eq let139 let86)
  let let141 := (Eq let31 e4)
  let let142 := (Eq let31 e3)
  let let143 := (Eq let31 e2)
  let let144 := (Eq let31 e1)
  let let145 := (Eq let31 e0)
  let let146 := (Or let145 (Or let144 (Or let143 (Or let142 let141))))
  let let147 := (Or (Or (Or (Or let145 let144) let143) let142) let141)
  let let148 := (Eq e2 let31)
  let let149 := (Eq e4 let31)
  let let150 := (op e3 e0)
  let let151 := (Eq let150 e4)
  let let152 := (Eq let150 e3)
  let let153 := (Eq let150 e2)
  let let154 := (Eq let150 e1)
  let let155 := (Eq let150 e0)
  let let156 := (Or let155 (Or let154 (Or let153 (Or let152 let151))))
  let let157 := (Or (Or (Or (Or let155 let154) let153) let152) let151)
  let let158 := (Eq e1 let150)
  let let159 := (Eq e2 let150)
  let let160 := (Eq e3 let150)
  let let161 := (op e3 e1)
  let let162 := (Eq e4 let161)
  let let163 := (Eq let161 e4)
  let let164 := (Eq let15 let24)
  let let165 := (Not let164)
  let let166 := (Not let165)
  let let167 := (Eq let164 let166)
  let let168 := (Eq let166 let164)
  let let169 := (Eq let63 e4)
  let let170 := (Eq let63 e3)
  let let171 := (Eq let63 e2)
  let let172 := (Eq let63 e1)
  let let173 := (Eq let63 e0)
  let let174 := (Or let173 (Or let172 (Or let171 (Or let170 let169))))
  let let175 := (Or (Or (Or (Or let173 let172) let171) let170) let169)
  let let176 := (Eq e4 let63)
  let let177 := (op e0 e0)
  let let178 := (Eq let177 e4)
  let let179 := (Eq let177 e3)
  let let180 := (Eq let177 e2)
  let let181 := (Eq let177 e1)
  let let182 := (Eq let177 e0)
  let let183 := (Or let182 (Or let181 (Or let180 (Or let179 let178))))
  let let184 := (Or (Or (Or (Or let182 let181) let180) let179) let178)
  let let185 := (Eq let24 e4)
  let let186 := (Eq let40 e4)
  let let187 := (op e1 e2)
  let let188 := (Eq let187 e4)
  let let189 := (Eq let120 e4)
  let let190 := (op e1 e0)
  let let191 := (Eq let190 e4)
  let let192 := (Or let191 (Or let189 (Or let188 (Or let186 let185))))
  let let193 := (Or (Or (Or (Or let191 let189) let188) let186) let185)
  let let194 := (Eq let39 e4)
  let let195 := (Eq let39 e3)
  let let196 := (Eq let39 e2)
  let let197 := (Eq let39 e1)
  let let198 := (Eq let39 e0)
  let let199 := (Or let198 (Or let197 (Or let196 (Or let195 let194))))
  let let200 := (Or (Or (Or (Or let198 let197) let196) let195) let194)
  let let201 := (Eq e0 let39)
  let let202 := (op e4 e4)
  let let203 := (Eq let202 e4)
  let let204 := (Eq let202 e3)
  let let205 := (Eq let202 e2)
  let let206 := (Eq let202 e1)
  let let207 := (Eq let202 e0)
  let let208 := (Or let207 (Or let206 (Or let205 (Or let204 let203))))
  let let209 := (Or (Or (Or (Or let207 let206) let205) let204) let203)
  let let210 := (Eq let16 let16)
  let let211 := (Eq let21 e4)
  let let212 := (Eq let21 e3)
  let let213 := (Eq let21 e2)
  let let214 := (Eq let21 e1)
  let let215 := (Eq let21 e0)
  let let216 := (Or let215 (Or let214 (Or let213 (Or let212 let211))))
  let let217 := (Or (Or (Or (Or let215 let214) let213) let212) let211)
  let let218 := (Eq e3 let21)
  let let219 := (Eq let107 e4)
  let let220 := (Eq let107 e3)
  let let221 := (Eq let107 e2)
  let let222 := (Eq let107 e1)
  let let223 := (Eq let107 e0)
  let let224 := (Or let223 (Or let222 (Or let221 (Or let220 let219))))
  let let225 := (Or (Or (Or (Or let223 let222) let221) let220) let219)
  let let226 := (Eq let161 e3)
  let let227 := (Or let152 (Or let226 (Or let170 (Or let195 let212))))
  let let228 := (Or (Or (Or (Or let152 let226) let170) let195) let212)
  let let229 := (And let22 (And let98 let16))
  let let230 := (And (And let22 let98) let16)
  let let231 := (Eq e4 let40)
  let let232 := (op e0 e3)
  let let233 := (Eq e2 let232)
  let let234 := (And let233 (And let99 let231))
  let let235 := (And (And let233 let99) let231)
  let let236 := (Eq e2 let107)
  let let237 := (Or let151 (Or let163 (Or let169 (Or let194 let211))))
  let let238 := (Or (Or (Or (Or let151 let163) let169) let194) let211)
  let let239 := (Eq e0 let47)
  let let240 := (Eq let47 e0)
  let let241 := (Eq let120 let161)
  let let242 := (Not let241)
  let let243 := (Not let242)
  let let244 := (Eq let241 let243)
  let let245 := (Eq let243 let241)
  let let246 := (op e2 e0)
  let let247 := (Eq let246 e3)
  let let248 := (Eq let190 e3)
  let let249 := (Or let179 (Or let248 (Or let247 (Or let152 let220))))
  let let250 := (Or (Or (Or (Or let179 let248) let247) let152) let220)
  let let251 := (Eq e1 let47)
  let let252 := (Eq let47 e1)
  let let253 := (Eq e4 let232)
  let let254 := (Eq e2 let40)
  let let255 := (And let254 (And let46 let253))
  let let256 := (And (And let254 let46) let253)
  let let257 := (Eq let177 let107)
  let let258 := (Not let257)
  let let259 := (Not let258)
  let let260 := (Eq let257 let259)
  let let261 := (Eq let259 let257)
  let let262 := (Eq let47 e2)
  let let263 := (Eq let47 e3)
  let let264 := (Eq e0 let107)
  let let265 := (Eq let241 let241)
  let let266 := (Eq let7 e4)
  let let267 := (Eq let7 e3)
  let let268 := (Eq let7 e2)
  let let269 := (Eq let7 e1)
  let let270 := (Eq let7 e0)
  let let271 := (Or let270 (Or let269 (Or let268 (Or let267 let266))))
  let let272 := (Or (Or (Or (Or let270 let269) let268) let267) let266)
  let let273 := (Eq let29 e0)
  let let274 := (Or let223 (Or let240 (Or let270 (Or let273 let207))))
  let let275 := (Or (Or (Or (Or let223 let240) let270) let273) let207)
  let let276 := (Eq let202 let202)
  let let277 := (Eq let21 let29)
  let let278 := (Eq let31 let7)
  let let279 := (Eq let24 let47)
  let let280 := (Eq let15 let107)
  let let281 := (Eq let29 let21)
  let let282 := (Eq let39 let39)
  let let283 := (Eq let40 let161)
  let let284 := (Eq let232 let150)
  let let285 := (Eq let7 let31)
  let let286 := (Eq let64 let64)
  let let287 := (op e2 e1)
  let let288 := (Eq let187 let287)
  let let289 := (Eq let11 let246)
  let let290 := (Eq let47 let24)
  let let291 := (Eq let161 let40)
  let let292 := (Eq let287 let187)
  let let293 := (Eq let120 let120)
  let let294 := (op e0 e1)
  let let295 := (Eq let294 let190)
  let let296 := (Eq let107 let15)
  let let297 := (Eq let150 let232)
  let let298 := (Eq let246 let11)
  let let299 := (Eq let190 let294)
  let let300 := (Eq let177 let177)
  let let301 := (And let300 (And let299 (And let298 (And let297 (And let296 (And let295 (And let293 (And let292 (And let291 (And let290 (And let289 (And let288 (And let286 (And let117 (And let285 (And let284 (And let283 (And let116 (And let282 (And let281 (And let280 (And let279 (And let278 (And let277 let276))))))))))))))))))))))))
  let let302 := (And (And (And (And (And (And (And (And let300 let299) let298) let297) let296) (And (And (And (And let295 let293) let292) let291) let290)) (And (And (And (And let289 let288) let286) let117) let285)) (And (And (And (And let284 let283) let116) let282) let281)) (And (And (And (And let280 let279) let278) let277) let276))
  let let303 := (Eq let246 e1)
  let let304 := (Eq let190 e1)
  let let305 := (Or let181 (Or let304 (Or let303 (Or let154 let222))))
  let let306 := (Or (Or (Or (Or let181 let304) let303) let154) let222)
  let let307 := (And let295 (And let289 (And let284 (And let280 (And let288 (And let283 (And let279 (And let116 (And let278 let277)))))))))
  let let308 := (And True (And let295 (And let289 (And let284 (And let280 (And let295 (And True (And let288 (And let283 (And let279 (And let289 (And let288 (And True (And let116 (And let278 (And let284 (And let283 (And let116 (And True (And let277 (And let280 (And let279 (And let278 (And let277 True))))))))))))))))))))))))
  let let309 := (Eq let9 e2)
  let let310 := (Eq let9 e1)
  let let311 := (Eq let9 e0)
  let let312 := (Or let311 (Or let310 (Or let309 (Or let136 let137))))
  let let313 := (Or (Or (Or (Or let311 let310) let309) let136) let137)
  let let314 := (Eq let164 let164)
  let let315 := (Eq e1 let63)
  let let316 := (Eq e3 e4)
  let let317 := (Eq let120 let287)
  let let318 := (Eq let317 let317)
  let let319 := (Eq let29 e1)
  let let320 := (Eq e1 let287)
  let let321 := (Eq let287 e1)
  let let322 := (Eq e2 let39)
  let let323 := (Eq let39 let29)
  let let324 := (Not let323)
  let let325 := (Not let324)
  let let326 := (Eq let325 let323)
  let let327 := (Eq let257 let257)
  let let328 := (Eq e4 let47)
  let let329 := (Eq let47 e4)
  let let330 := (Eq let15 e4)
  let let331 := (Eq let15 e3)
  let let332 := (Eq let15 e2)
  let let333 := (Eq let15 e1)
  let let334 := (Eq let15 e0)
  let let335 := (Or let334 (Or let333 (Or let332 (Or let331 let330))))
  let let336 := (Or (Or (Or (Or let334 let333) let332) let331) let330)
  let let337 := (Eq let21 let202)
  let let338 := (Not let337)
  let let339 := (Not let338)
  let let340 := (Eq let339 let337)
  let let341 := (Eq let177 let150)
  let let342 := (Not let341)
  let let343 := (Not let342)
  let let344 := (Eq let343 let341)
  let let345 := (Eq e2 let294)
  let let346 := (Eq let294 e2)
  let let347 := (Eq e2 let63)
  let let348 := (Eq let287 e3)
  let let349 := (Eq let120 e3)
  let let350 := (Eq let294 e3)
  let let351 := (Or let350 (Or let349 (Or let348 (Or let226 let263))))
  let let352 := (Or (Or (Or (Or let350 let349) let348) let226) let263)
  let let353 := (Eq let29 e2)
  let let354 := (Or let222 (Or let252 (Or let269 (Or let319 let206))))
  let let355 := (Or (Or (Or (Or let222 let252) let269) let319) let206)
  let let356 := (Eq e3 let202)
  let let357 := (Eq let29 e4)
  let let358 := (Eq let29 e3)
  let let359 := (Or (Or (Or (Or let273 let319) let353) let358) let357)
  let let360 := (Or (Or (Or (Or let240 let252) let262) let263) let329)
  let let361 := (Eq let161 e2)
  let let362 := (Eq let161 e1)
  let let363 := (Eq let161 e0)
  let let364 := (Or (Or (Or (Or let363 let362) let361) let226) let163)
  let let365 := (Eq let64 e2)
  let let366 := (Or (Or (Or (Or let119 let127) let365) let129) let132)
  let let367 := (Eq let287 e4)
  let let368 := (Eq let287 e2)
  let let369 := (Eq let287 e0)
  let let370 := (Or (Or (Or (Or let369 let321) let368) let348) let367)
  let let371 := (Eq let246 e4)
  let let372 := (Eq let246 e2)
  let let373 := (Eq let246 e0)
  let let374 := (Or (Or (Or (Or let373 let303) let372) let247) let371)
  let let375 := (Eq let24 e3)
  let let376 := (Eq let24 e2)
  let let377 := (Eq let24 e1)
  let let378 := (Eq let24 e0)
  let let379 := (Or (Or (Or (Or let378 let377) let376) let375) let185)
  let let380 := (Eq let40 e3)
  let let381 := (Eq let40 e2)
  let let382 := (Eq let40 e1)
  let let383 := (Eq let40 e0)
  let let384 := (Or (Or (Or (Or let383 let382) let381) let380) let186)
  let let385 := (Eq let187 e3)
  let let386 := (Eq let187 e2)
  let let387 := (Eq let187 e1)
  let let388 := (Eq let187 e0)
  let let389 := (Or (Or (Or (Or let388 let387) let386) let385) let188)
  let let390 := (Eq let120 e2)
  let let391 := (Eq let120 e1)
  let let392 := (Eq let120 e0)
  let let393 := (Or (Or (Or (Or let392 let391) let390) let349) let189)
  let let394 := (Eq let190 e2)
  let let395 := (Eq let190 e0)
  let let396 := (Or (Or (Or (Or let395 let304) let394) let248) let191)
  let let397 := (Eq let232 e4)
  let let398 := (Eq let232 e3)
  let let399 := (Eq let232 e2)
  let let400 := (Eq let232 e1)
  let let401 := (Eq let232 e0)
  let let402 := (Or (Or (Or (Or let401 let400) let399) let398) let397)
  let let403 := (Eq let11 e4)
  let let404 := (Eq let11 e3)
  let let405 := (Eq let11 e2)
  let let406 := (Eq let11 e1)
  let let407 := (Eq let11 e0)
  let let408 := (Or (Or (Or (Or let407 let406) let405) let404) let403)
  let let409 := (Eq let294 e4)
  let let410 := (Eq let294 e1)
  let let411 := (Eq let294 e0)
  let let412 := (Or (Or (Or (Or let411 let410) let346) let350) let409)
  let let413 := (And let184 (And let412 (And let408 (And let402 (And let336 (And let396 (And let393 (And let389 (And let384 (And let379 (And let374 (And let370 (And let366 (And let313 (And let147 (And let157 (And let364 (And let175 (And let200 (And let217 (And let225 (And let360 (And let272 (And let359 let209))))))))))))))))))))))))
  let let414 := (And (And (And (And (And (And (And (And let184 let412) let408) let402) let336) (And (And (And (And let396 let393) let389) let384) let379)) (And (And (And (And let374 let370) let366) let313) let147)) (And (And (And (And let157 let364) let175) let200) let217)) (And (And (And (And let225 let360) let272) let359) let209))
  let let415 := (Or let178 (Or let191 (Or let371 (Or let151 let219))))
  let let416 := (Or (Or (Or (Or let178 let191) let371) let151) let219)
  let let417 := (Eq e0 let7)
  let let418 := (And let16 (And let417 let22))
  let let419 := (And (And let16 let417) let22)
  let let420 := (Eq e2 e0)
  let let421 := (Eq e0 e2)
  let let422 := (Not (Eq let29 let202))
  let let423 := (Not (Eq let7 let202))
  let let424 := (Not (Eq let7 let29))
  let let425 := (Not (Eq let47 let202))
  let let426 := (Not (Eq let47 let29))
  let let427 := (Not (Eq let47 let7))
  let let428 := (Not (Eq let107 let202))
  let let429 := (Not (Eq let107 let29))
  let let430 := (Not (Eq let107 let7))
  let let431 := (Not (Eq let107 let47))
  let let432 := (Not (Eq let39 let21))
  let let433 := (Not (Eq let63 let21))
  let let434 := (Not (Eq let63 let39))
  let let435 := (Not (Eq let161 let21))
  let let436 := (Not (Eq let161 let39))
  let let437 := (Not (Eq let161 let63))
  let let438 := (Not (Eq let150 let21))
  let let439 := (Not (Eq let150 let39))
  let let440 := (Not (Eq let150 let63))
  let let441 := (Not (Eq let150 let161))
  let let442 := (Not (Eq let9 let31))
  let let443 := (Not (Eq let64 let31))
  let let444 := (Not (Eq let64 let9))
  let let445 := (Not (Eq let287 let31))
  let let446 := (Not (Eq let287 let9))
  let let447 := (Not (Eq let287 let64))
  let let448 := (Not (Eq let246 let31))
  let let449 := (Not (Eq let246 let9))
  let let450 := (Not (Eq let246 let64))
  let let451 := (Not (Eq let246 let287))
  let let452 := (Eq let40 let24)
  let let453 := (Not let452)
  let let454 := (Not (Eq let187 let24))
  let let455 := (Not (Eq let187 let40))
  let let456 := (Not (Eq let120 let24))
  let let457 := (Not (Eq let120 let40))
  let let458 := (Not (Eq let120 let187))
  let let459 := (Not (Eq let190 let24))
  let let460 := (Not (Eq let190 let40))
  let let461 := (Not (Eq let190 let187))
  let let462 := (Not (Eq let190 let120))
  let let463 := (Not (Eq let232 let15))
  let let464 := (Not (Eq let11 let15))
  let let465 := (Not (Eq let11 let232))
  let let466 := (Not (Eq let294 let15))
  let let467 := (Not (Eq let294 let232))
  let let468 := (Not (Eq let294 let11))
  let let469 := (Not (Eq let177 let15))
  let let470 := (Not (Eq let177 let232))
  let let471 := (Not (Eq let177 let11))
  let let472 := (Not (Eq let177 let294))
  let let473 := (Not (Eq let31 let202))
  let let474 := (Not (Eq let31 let21))
  let let475 := (Not (Eq let24 let202))
  let let476 := (Not (Eq let24 let21))
  let let477 := (Not let133)
  let let478 := (Not (Eq let15 let202))
  let let479 := (Not (Eq let15 let21))
  let let480 := (Not (Eq let15 let31))
  let let481 := (Not (Eq let9 let29))
  let let482 := (Eq let9 let39)
  let let483 := (Not let482)
  let let484 := (Eq let40 let29)
  let let485 := (Not let484)
  let let486 := (Not (Eq let40 let9))
  let let487 := (Not (Eq let232 let29))
  let let488 := (Not (Eq let232 let39))
  let let489 := (Not (Eq let232 let9))
  let let490 := (Not (Eq let232 let40))
  let let491 := (Not (Eq let187 let7))
  let let492 := (Not (Eq let187 let63))
  let let493 := (Not (Eq let187 let64))
  let let494 := (Not (Eq let11 let7))
  let let495 := (Not (Eq let11 let63))
  let let496 := (Not (Eq let11 let64))
  let let497 := (Not (Eq let11 let187))
  let let498 := (Not (Eq let161 let47))
  let let499 := (Not (Eq let287 let47))
  let let500 := (Not (Eq let287 let161))
  let let501 := (Not let317)
  let let502 := (Not (Eq let294 let47))
  let let503 := (Not (Eq let294 let161))
  let let504 := (Not (Eq let294 let287))
  let let505 := (Not (Eq let294 let120))
  let let506 := (Not (Eq let150 let107))
  let let507 := (Not (Eq let246 let107))
  let let508 := (Not (Eq let246 let150))
  let let509 := (Not (Eq let190 let107))
  let let510 := (Not (Eq let190 let150))
  let let511 := (Not (Eq let190 let246))
  let let512 := (Not (Eq let177 let246))
  let let513 := (Not (Eq let177 let190))
  let let514 := (And let513 (And let512 (And let342 (And let258 (And let511 (And let510 (And let509 (And let508 (And let507 (And let506 (And let505 (And let504 (And let503 (And let502 (And let501 (And let242 (And let122 (And let500 (And let499 (And let498 (And let497 (And let496 (And let495 (And let494 (And let493 (And let492 (And let491 (And let66 (And let112 (And let81 (And let490 (And let489 (And let488 (And let487 (And let486 (And let42 (And let485 (And let483 (And let481 (And let324 (And let165 (And let480 (And let479 (And let478 (And let477 (And let476 (And let475 (And let474 (And let473 (And let338 (And let472 (And let471 (And let470 (And let469 (And let468 (And let467 (And let466 (And let465 (And let464 (And let463 (And let462 (And let461 (And let460 (And let459 (And let458 (And let457 (And let456 (And let455 (And let454 (And let453 (And let451 (And let450 (And let449 (And let448 (And let447 (And let446 (And let445 (And let444 (And let443 (And let442 (And let441 (And let440 (And let439 (And let438 (And let437 (And let436 (And let435 (And let434 (And let433 (And let432 (And let431 (And let430 (And let429 (And let428 (And let427 (And let426 (And let425 (And let424 (And let423 let422)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  let let515 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And let513 let512) let342) let258) let511) let510) let509) let508) let507) let506) (And (And (And (And (And (And (And (And (And let505 let504) let503) let502) let501) let242) let122) let500) let499) let498)) (And (And (And (And (And (And (And (And (And let497 let496) let495) let494) let493) let492) let491) let66) let112) let81)) (And (And (And (And (And (And (And (And (And let490 let489) let488) let487) let486) let42) let485) let483) let481) let324)) (And (And (And (And (And (And (And (And (And let165 let480) let479) let478) let477) let476) let475) let474) let473) let338)) (And (And (And (And (And (And (And (And (And (And (And (And (And let472 let471) let470) let469) let468) let467) let466) let465) let464) let463) (And (And (And (And (And (And (And (And (And let462 let461) let460) let459) let458) let457) let456) let455) let454) let453)) (And (And (And (And (And (And (And (And (And let451 let450) let449) let448) let447) let446) let445) let444) let443) let442)) (And (And (And (And (And (And (And (And (And let441 let440) let439) let438) let437) let436) let435) let434) let433) let432)) (And (And (And (And (And (And (And (And (And let431 let430) let429) let428) let427) let426) let425) let424) let423) let422)))
  let let516 := (Eq e3 let29)
  let let517 := (Not let501)
  let let518 := (Eq let317 let517)
  let let519 := (Eq let517 let317)
  let let520 := (Or let273 (Or let319 (Or let353 (Or let358 let357))))
  let let521 := (Eq e2 let7)
  let let522 := (Eq e1 let202)
  let let523 := (Eq e0 let294)
  let let524 := (Eq let86 let139)
  let let525 := (Or let180 (Or let394 (Or let372 (Or let153 let221))))
  let let526 := (Or (Or (Or (Or let180 let394) let372) let153) let221)
  let let527 := (Eq e1 let161)
  let let528 := (op e4 let29)
  let let529 := (Eq e3 let528)
  let let530 := (Not let529)
  let let531 := (Not let530)
  let let532 := (Eq let531 let529)
  let let533 := (Eq e2 let64)
  let let534 := (Eq e0 let187)
  let let535 := (Eq e0 let202)
  let let536 := (Or let411 (Or let410 (Or let346 (Or let350 let409))))
  let let537 := (Or let154 (Or let362 (Or let172 (Or let197 let214))))
  let let538 := (Or (Or (Or (Or let154 let362) let172) let197) let214)
  let let539 := (Eq e4 let107)
  let let540 := (Eq e2 e1)
  let let541 := (Eq e1 e2)
  let let542 := (Or let401 (Or let400 (Or let399 (Or let398 let397))))
  let let543 := (Eq e0 let29)
  let let544 := (And let16 (And let543 let90))
  let let545 := (And (And let16 let543) let90)
  let let546 := (Eq e0 let150)
  let let547 := (Eq e0 e4)
  let let548 := (Eq e3 let161)
  let let549 := (Eq e0 let161)
  let let550 := (Eq let529 let531)
  let let551 := (Eq e1 let120)
  let let552 := (Or let388 (Or let387 (Or let386 (Or let385 let188))))
  let let553 := (Eq e3 let287)
  let let554 := (Or let363 (Or let362 (Or let361 (Or let226 let163))))
  let let555 := (Eq e0 e1)
  let let556 := (Or let346 (Or let390 (Or let368 (Or let361 let262))))
  let let557 := (Or (Or (Or (Or let346 let390) let368) let361) let262)
  let let558 := (Eq e0 let177)
  let let559 := (Eq e2 let287)
  let let560 := (Eq e4 let39)
  let let561 := (Eq let323 let323)
  let let562 := (Eq e2 let11)
  let let563 := (And let182 (And let391 (And let365 (And let195 let203))))
  let let564 := (And (And (And (And let182 let391) let365) let195) let203)
  let let565 := (Not let477)
  let let566 := (Eq let565 let133)
  let let567 := (Eq e2 let9)
  let let568 := (Or let240 (Or let252 (Or let262 (Or let263 let329))))
  let let569 := (Eq let30 let30)
  let let570 := (Or let397 (Or let186 (Or let137 (Or let194 let357))))
  let let571 := (Or (Or (Or (Or let397 let186) let137) let194) let357)
  let let572 := (Eq e3 let177)
  let let573 := (Eq e0 let63)
  let let574 := (Or let403 (Or let188 (Or let132 (Or let169 let266))))
  let let575 := (Or (Or (Or (Or let403 let188) let132) let169) let266)
  let let576 := (Eq let93 let93)
  let let577 := (Or let119 (Or let127 (Or let365 (Or let129 let132))))
  let let578 := (Eq e4 let150)
  let let579 := (Eq e4 e1)
  let let580 := (Eq e1 e4)
  let let581 := (Not let30)
  let let582 := (Not let581)
  let let583 := (Eq let30 let582)
  let let584 := (Eq let582 let30)
  let let585 := (Not let483)
  let let586 := (Eq let585 let482)
  let let587 := (Eq e2 let202)
  let let588 := (Eq let337 let339)
  let let589 := (Eq let341 let343)
  let let590 := (Eq e1 let294)
  let let591 := (Or let373 (Or let369 (Or let119 (Or let311 let145))))
  let let592 := (Or (Or (Or (Or let373 let369) let119) let311) let145)
  let let593 := (Eq let111 let111)
  let let594 := (Eq e0 let287)
  let let595 := (Eq e1 e3)
  let let596 := (Eq e0 let11)
  let let597 := (Eq e0 let190)
  let let598 := (Eq e4 let7)
  let let599 := (Or let395 (Or let304 (Or let394 (Or let248 let191))))
  let let600 := (Eq let58 let60)
  let let601 := (Eq e4 let21)
  let let602 := (Or let407 (Or let406 (Or let405 (Or let404 let403))))
  let let603 := (Eq e3 e0)
  let let604 := (Eq e0 e3)
  let let605 := (Eq e2 let187)
  let let606 := (Eq e2 let161)
  let let607 := (Eq let529 let529)
  let let608 := (Or let371 (Or let367 (Or let132 (Or let137 let141))))
  let let609 := (Or (Or (Or (Or let371 let367) let132) let137) let141)
  let let610 := (Or let372 (Or let368 (Or let365 (Or let309 let143))))
  let let611 := (Or (Or (Or (Or let372 let368) let365) let309) let143)
  let let612 := (Eq e3 let39)
  let let613 := (Eq e1 let187)
  let let614 := (Eq let41 let41)
  let let615 := (Not let316)
  let let616 := (Eq e2 e4)
  let let617 := (Not let616)
  let let618 := (Eq e2 e3)
  let let619 := (Not let618)
  let let620 := (Not let580)
  let let621 := (Not let595)
  let let622 := (Not let541)
  let let623 := (Not let547)
  let let624 := (Not let604)
  let let625 := (Not let421)
  let let626 := (Not let555)
  let let627 := (And let626 (And let625 (And let624 (And let623 (And let622 (And let621 (And let620 (And let619 (And let617 let615)))))))))
  let let628 := (And (And (And (And (And (And (And (And (And let626 let625) let624) let623) let622) let621) let620) let619) let617) let615)
  let let629 := (Eq let337 let337)
  let let630 := (Eq let341 let341)
  let let631 := (Eq e3 let294)
  let let632 := (Or let153 (Or let361 (Or let171 (Or let196 let213))))
  let let633 := (Or (Or (Or (Or let153 let361) let171) let196) let213)
  let let634 := (Or let178 (Or let409 (Or let403 (Or let397 let330))))
  let let635 := (Or (Or (Or (Or let178 let409) let403) let397) let330)
  let let636 := (Eq let133 let565)
  let let637 := (Or let248 (Or let349 (Or let385 (Or let380 let375))))
  let let638 := (Or (Or (Or (Or let248 let349) let385) let380) let375)
  let let639 := (Eq e1 let9)
  let let640 := (Eq e3 let24)
  let let641 := (And let49 (And let30 let640))
  let let642 := (And (And let49 let30) let640)
  let let643 := (Eq let482 let482)
  let let644 := (Eq e2 let15)
  let let645 := (Eq e4 let29)
  let let646 := (Or let392 (Or let391 (Or let390 (Or let349 let189))))
  let let647 := (Or let369 (Or let321 (Or let368 (Or let348 let367))))
  let let648 := (Eq e4 let246)
  let let649 := (Eq e3 let246)
  let let650 := (Eq e2 let246)
  let let651 := (Eq e1 let246)
  let let652 := (Eq e0 let246)
  let let653 := (Or let373 (Or let303 (Or let372 (Or let247 let371))))
  let let654 := (Eq e4 let24)
  let let655 := (And let233 (And let549 let86))
  let let656 := (And (And let233 let549) let86)
  let let657 := (Eq e1 let24)
  let let658 := (Or let400 (Or let382 (Or let310 (Or let197 let319))))
  let let659 := (Or (Or (Or (Or let400 let382) let310) let197) let319)
  let let660 := (Or let378 (Or let377 (Or let376 (Or let375 let185))))
  let let661 := (Eq e3 let40)
  let let662 := (Or let406 (Or let387 (Or let127 (Or let172 let269))))
  let let663 := (Or (Or (Or (Or let406 let387) let127) let172) let269)
  let let664 := (Eq e1 let40)
  let let665 := (Or let399 (Or let381 (Or let309 (Or let196 let353))))
  let let666 := (Or (Or (Or (Or let399 let381) let309) let196) let353)
  let let667 := (Or let383 (Or let382 (Or let381 (Or let380 let186))))
  let let668 := (Eq e4 let187)
  let let669 := (Eq e4 e2)
  let let670 := (Or let407 (Or let388 (Or let119 (Or let173 let270))))
  let let671 := (Or (Or (Or (Or let407 let388) let119) let173) let270)
  let let672 := (Eq e3 let187)
  let let673 := (Or let332 (Or let376 (Or let143 (Or let213 let205))))
  let let674 := (Or (Or (Or (Or let332 let376) let143) let213) let205)
  let let675 := (Or let182 (Or let395 (Or let373 (Or let155 let223))))
  let let676 := (Or (Or (Or (Or let182 let395) let373) let155) let223)
  let let677 := (Eq e4 let120)
  let let678 := (Or let409 (Or let189 (Or let367 (Or let163 let329))))
  let let679 := (Or (Or (Or (Or let409 let189) let367) let163) let329)
  let let680 := (Eq e3 let120)
  let let681 := (Eq e2 let120)
  let let682 := (Eq e0 let120)
  let let683 := (Or let179 (Or let350 (Or let404 (Or let398 let331))))
  let let684 := (Or (Or (Or (Or let179 let350) let404) let398) let331)
  let let685 := (Eq e4 let190)
  let let686 := (Eq e3 let190)
  let let687 := (Eq e2 let190)
  let let688 := (Or let155 (Or let363 (Or let173 (Or let198 let215))))
  let let689 := (Or (Or (Or (Or let155 let363) let173) let198) let215)
  let let690 := (Or let180 (Or let346 (Or let405 (Or let399 let332))))
  let let691 := (Or (Or (Or (Or let180 let346) let405) let399) let332)
  let let692 := (Eq e1 let190)
  let let693 := (Eq e4 let15)
  let let694 := (Or let181 (Or let410 (Or let406 (Or let400 let333))))
  let let695 := (Or (Or (Or (Or let181 let410) let406) let400) let333)
  let let696 := (Eq let482 let585)
  let let697 := (Or let219 (Or let329 (Or let266 (Or let357 let203))))
  let let698 := (Or (Or (Or (Or let219 let329) let266) let357) let203)
  let let699 := (Eq e0 let15)
  let let700 := (Or (Or (Or (Or let330 let185) let141) let211) let203)
  let let701 := (And let698 let700)
  let let702 := (Or (Or (Or (Or let331 let375) let142) let212) let204)
  let let703 := (Or (Or (Or (Or let220 let263) let267) let358) let204)
  let let704 := (Or (Or (Or (Or let221 let262) let268) let353) let205)
  let let705 := (Or (Or (Or (Or let333 let377) let144) let214) let206)
  let let706 := (Or (Or (Or (Or let334 let378) let145) let215) let207)
  let let707 := (Or (Or (Or (Or let398 let380) let136) let195) let358)
  let let708 := (Or (Or (Or (Or let401 let383) let311) let198) let273)
  let let709 := (Or (Or (Or (Or let404 let385) let129) let170) let267)
  let let710 := (Or (Or (Or (Or let247 let348) let129) let136) let142)
  let let711 := (Or (Or (Or (Or let405 let386) let365) let171) let268)
  let let712 := (Or (Or (Or (Or let303 let321) let127) let310) let144)
  let let713 := (Or (Or (Or (Or let394 let390) let386) let381) let376)
  let let714 := (Or (Or (Or (Or let410 let391) let321) let362) let252)
  let let715 := (Or (Or (Or (Or let304 let391) let387) let382) let377)
  let let716 := (Or (Or (Or (Or let411 let392) let369) let363) let240)
  let let717 := (Or (Or (Or (Or let395 let392) let388) let383) let378)
  let let718 := (Or (Or (Or (Or let182 let411) let407) let401) let334)
  let let719 := (And let718 (And let676 (And let695 (And let306 (And let691 (And let526 (And let684 (And let250 (And let635 (And let416 (And let717 (And let716 (And let715 (And let714 (And let713 (And let557 (And let638 (And let352 (And let193 (And let679 (And let592 (And let671 (And let712 (And let663 (And let611 (And let711 (And let710 (And let709 (And let609 (And let575 (And let689 (And let708 (And let538 (And let659 (And let633 (And let666 (And let228 (And let707 (And let238 (And let571 (And let275 (And let706 (And let355 (And let705 (And let704 (And let674 (And let703 (And let702 let701))))))))))))))))))))))))))))))))))))))))))))))))
  let let720 := (And (And (And (And (And (And (And (And (And let718 let676) (And let695 let306)) (And let691 let526)) (And let684 let250)) (And let635 let416)) (And (And (And (And (And let717 let716) (And let715 let714)) (And let713 let557)) (And let638 let352)) (And let193 let679))) (And (And (And (And (And let592 let671) (And let712 let663)) (And let611 let711)) (And let710 let709)) (And let609 let575))) (And (And (And (And (And let689 let708) (And let538 let659)) (And let633 let666)) (And let228 let707)) (And let238 let571))) (And (And (And (And (And let275 let706) (And let355 let705)) (And let704 let674)) (And let703 let702)) let701))
  let let721 := (Eq e3 e2)
  let let722 := (Eq e3 let232)
  let let723 := (Or let398 (Or let380 (Or let136 (Or let195 let358))))
  let let724 := (Or let220 (Or let263 (Or let267 (Or let358 let204))))
  let let725 := (Eq e1 let232)
  let let726 := (Eq e0 let232)
  let let727 := (Eq e4 let11)
  let let728 := (Eq e3 let11)
  let let729 := (Or let395 (Or let392 (Or let388 (Or let383 let378))))
  let let730 := (Eq e4 let294)
  let let731 := (Eq e4 let177)
  let let732 := (Eq e2 let177)
  let let733 := (Eq let86 let86)
  let let734 := (Eq e4 let202)
  let let735 := (Or let330 (Or let185 (Or let141 (Or let211 let203))))
  let let736 := (Or let331 (Or let375 (Or let142 (Or let212 let204))))
  let let737 := (Or let221 (Or let262 (Or let268 (Or let353 let205))))
  let let738 := (Or let333 (Or let377 (Or let144 (Or let214 let206))))
  let let739 := (Eq let28 let36)
  let let740 := (Or let334 (Or let378 (Or let145 (Or let215 let207))))
  let let741 := (Eq e3 let107)
  let let742 := (Or let401 (Or let383 (Or let311 (Or let198 let273))))
  let let743 := (Eq e1 let39)
  let let744 := (Eq let323 let325)
  let let745 := (Or let404 (Or let385 (Or let129 (Or let170 let267))))
  let let746 := (Or let247 (Or let348 (Or let129 (Or let136 let142))))
  let let747 := (Eq e3 let63)
  let let748 := (Or let405 (Or let386 (Or let365 (Or let171 let268))))
  let let749 := (Or let303 (Or let321 (Or let127 (Or let310 let144))))
  let let750 := (Eq e1 let177)
  let let751 := (Or let394 (Or let390 (Or let386 (Or let381 let376))))
  let let752 := (Or let410 (Or let391 (Or let321 (Or let362 let252))))
  let let753 := (Eq e4 let287)
  let let754 := (Or let304 (Or let391 (Or let387 (Or let382 let377))))
  let let755 := (Or let411 (Or let392 (Or let369 (Or let363 let240))))
  let let756 := (Or let182 (Or let411 (Or let407 (Or let401 let334))))
  let let757 := (And let644 (And let543 let640))
  let let758 := (And (And let644 let543) let640)
  let let759 := (Eq let528 e3)
  let let760 := (Not let256)
  let let761 := (Not let34)
  let let762 := (Not let89)
  let let763 := (Not let230)
  let let764 := (Not let235)
  let let765 := (Not let642)
  let let766 := (Not let758)
  let let767 := (Not let74)
  let let768 := (Not let92)
  let let769 := (Not let101)
  let let770 := (Not let545)
  let let771 := (Not let27)
  let let772 := (Not let51)
  let let773 := (Not let419)
  let let774 := (Not let110)
  let let775 := (Not let14)
  let let776 := (Not let656)
  let let777 := (And let558 (And let551 (And let533 (And let612 let734))))
  let let778 := (Eq And And)
  let let779 := (Not let664)
  let let780 := (Not let283)
  let let781 := (Not let551)
  let let782 := (Or let780 (Or let781 let779))
  let let783 := (Or let241 let782)
  let let784 := (Or let243 let782)
  let let785 := (Eq Or Or)
  let let786 := (And let242 (And let283 let551))
  let let787 := (Not let72)
  let let788 := (Not let645)
  let let789 := (Not let277)
  let let790 := (Not let734)
  let let791 := (Or let790 (Or let788 let789))
  let let792 := (Or let790 (Or let788 (Or let789 let337)))
  let let793 := (And let734 (And let645 let277))
  let let794 := (Not let516)
  let let795 := (Not let612)
  let let796 := (Or let795 let794)
  let let797 := (Or let323 let796)
  let let798 := (Or let325 let796)
  let let799 := (And let324 let612)
  let let800 := (Eq let323 False)
  let let801 := (Not let522)
  let let802 := (Not let579)
  let let803 := (Not let669)
  let let804 := (Not let721)
  let let805 := (Not let540)
  let let806 := (Not let603)
  let let807 := (Not let420)
  let let808 := (And let2 (And let807 (And let806 (And let53 (And let805 (And let94 (And let802 (And let804 (And let803 let59)))))))))
  let let809 := (Or let801 (Or let790 let579))
  let let810 := (And let522 let734)
  let let811 := (Or let522 let581)
  let let812 := (Or let138 let138)
  let let813 := (Or let138 let789)
  let let814 := (Not let99)
  let let815 := (Or let814 (Or let789 (Or let138 let1)))
  let let816 := (And let277 let86)
  let let817 := (And let99 let816)
  let let818 := (Or let789 let138)
  let let819 := (Or let138 let581)
  let let820 := (Or let138 (Or let581 let540))
  let let821 := (And let86 let30)
  let let822 := (Or let789 (Or let138 let46))
  let let823 := (Not let543)
  let let824 := (Or let823 let789)
  let let825 := (Or let789 (Or let823 let99))
  let let826 := (And let277 let543)
  let let827 := (Not let46)
  let let828 := (Or let138 (Or let99 (Or let827 (Or let30 let543))))
  let let829 := (Or let789 (Or let138 let801))
  let let830 := (Or let337 let829)
  let let831 := (Or let339 let829)
  let let832 := (And let338 let816)
  let let833 := (Not let535)
  let let834 := (Or let833 (Or let790 let52))
  let let835 := (And let535 let734)
  let let836 := (Not let587)
  let let837 := (Or let836 (Or let790 let669))
  let let838 := (And let587 let734)
  let let839 := (Not let356)
  let let840 := (Or let839 (Or let790 let58))
  let let841 := (And let356 let734)
  let let842 := (Or let356 let529)
  let let843 := (Or let522 (Or let587 let842))
  let let844 := (Or let30 (Or let645 let843))
  let let845 := (Not let22)
  let let846 := (Or let789 let845)
  let let847 := (Or let30 let846)
  let let848 := (Or let582 let846)
  let let849 := (And let581 let277)
  let let850 := (Or let516 let645)
  let let851 := (Or let543 (Or let86 (Or let30 let850)))
  let let852 := (Or let535 (Or let522 (Or let587 (Or let356 let734))))
  let let853 := (Or let417 (Or let23 (Or let521 (Or let8 let598))))
  let let854 := (Or let239 (Or let251 (Or let48 (Or let98 let328))))
  let let855 := (Or let264 (Or let108 (Or let236 (Or let741 let539))))
  let let856 := (Or let99 (Or let46 (Or let22 (Or let218 let601))))
  let let857 := (Or let201 (Or let743 (Or let322 (Or let612 let560))))
  let let858 := (Or let573 (Or let315 (Or let347 (Or let747 let176))))
  let let859 := (Or let549 (Or let527 (Or let606 (Or let548 let162))))
  let let860 := (Or let546 (Or let158 (Or let159 (Or let160 let578))))
  let let861 := (Or let49 (Or let32 (Or let148 (Or let90 let149))))
  let let862 := (Or let10 (Or let639 (Or let567 (Or let135 let71))))
  let let863 := (Or let118 (Or let126 (Or let533 (Or let128 let131))))
  let let864 := (Or let594 (Or let320 (Or let559 (Or let553 let753))))
  let let865 := (Or let652 (Or let651 (Or let650 (Or let649 let648))))
  let let866 := (Or let25 (Or let657 (Or let87 (Or let640 let654))))
  let let867 := (Or let72 (Or let664 (Or let254 (Or let661 let231))))
  let let868 := (Or let534 (Or let613 (Or let605 (Or let672 let668))))
  let let869 := (Or let682 (Or let551 (Or let681 (Or let680 let677))))
  let let870 := (Or let597 (Or let692 (Or let687 (Or let686 let685))))
  let let871 := (Or let699 (Or let16 (Or let644 (Or let28 let693))))
  let let872 := (Or let726 (Or let725 (Or let233 (Or let722 let253))))
  let let873 := (Or let596 (Or let12 (Or let562 (Or let728 let727))))
  let let874 := (Or let523 (Or let590 (Or let345 (Or let631 let730))))
  let let875 := (Or let558 (Or let750 (Or let732 (Or let572 let731))))
  let let876 := (And let875 (And let874 (And let873 (And let872 (And let871 (And let870 (And let869 (And let868 (And let867 (And let866 (And let865 (And let864 (And let863 (And let862 (And let861 (And let860 (And let859 (And let858 (And let857 (And let856 (And let855 (And let854 (And let853 (And let851 let852))))))))))))))))))))))))
  let let877 := (Not let741)
  let let878 := (Or let823 let877)
  let let879 := (Or let529 let878)
  let let880 := (Or let531 let878)
  let let881 := (And let530 let543)
  let let882 := (Eq let741 False)
  let let883 := (Eq let529 False)
  let let884 := (Eq let107 let528)
  let let885 := (Eq e4 e4)
  let let886 := (Eq e3 e3)
  let let887 := (Not let280)
  let let888 := (Or let823 let887)
  let let889 := (Or let823 (Or let887 let35))
  let let890 := (Or let529 let889)
  let let891 := (Or let531 let889)
  let let892 := (And let530 (And let543 let280))
  let let893 := (Eq let28 False)
  let let894 := (Or let789 let827)
  let let895 := (Or let86 let894)
  let let896 := (Or let139 let894)
  let let897 := (And let138 let277)
  let let898 := (Eq let86 False)
  let let899 := (Eq e1 e1)
  let let900 := (Not let657)
  let let901 := (Not let279)
  let let902 := (Or let901 (Or let781 let900))
  let let903 := (Or let121 let902)
  let let904 := (Or let123 let902)
  let let905 := (And let122 (And let279 let551))
  let let906 := (Eq let121 False)
  let let907 := (Or let46 let522)
  let let908 := (Or let32 let907)
  let let909 := (Or let16 (Or let657 let908))
  let let910 := (Or let693 (Or let654 (Or let149 (Or let601 let734))))
  let let911 := (Or let539 (Or let328 (Or let598 (Or let645 let734))))
  let let912 := (Or let218 let356)
  let let913 := (Or let28 (Or let640 (Or let90 let912)))
  let let914 := (Or let516 let356)
  let let915 := (Or let741 (Or let98 (Or let8 let914)))
  let let916 := (Or let644 (Or let87 (Or let148 (Or let22 let587))))
  let let917 := (Or let236 (Or let48 (Or let521 (Or let30 let587))))
  let let918 := (Or let108 (Or let251 (Or let23 (Or let86 let522))))
  let let919 := (Or let699 (Or let25 (Or let49 (Or let99 let535))))
  let let920 := (Or let264 (Or let239 (Or let417 (Or let543 let535))))
  let let921 := (Or let560 let645)
  let let922 := (Or let253 (Or let231 (Or let71 let921)))
  let let923 := (Or let578 (Or let162 (Or let176 (Or let560 let601))))
  let let924 := (Or let722 (Or let661 (Or let135 (Or let612 let516))))
  let let925 := (Or let160 (Or let548 (Or let747 (Or let612 let218))))
  let let926 := (Or let233 (Or let254 (Or let567 (Or let322 let30))))
  let let927 := (Or let159 (Or let606 (Or let347 (Or let322 let22))))
  let let928 := (Or let725 (Or let664 (Or let639 (Or let743 let86))))
  let let929 := (Or let158 (Or let527 (Or let315 (Or let743 let46))))
  let let930 := (Or let726 (Or let72 (Or let10 (Or let201 let543))))
  let let931 := (Or let546 (Or let549 (Or let573 (Or let201 let99))))
  let let932 := (Or let727 (Or let668 (Or let131 (Or let176 let598))))
  let let933 := (Or let648 (Or let753 (Or let131 (Or let71 let149))))
  let let934 := (Or let728 (Or let672 (Or let128 (Or let747 let8))))
  let let935 := (Or let649 (Or let553 (Or let128 (Or let135 let90))))
  let let936 := (Or let562 (Or let605 (Or let533 (Or let347 let521))))
  let let937 := (Or let650 (Or let559 (Or let533 (Or let567 let148))))
  let let938 := (Or let12 (Or let613 (Or let126 (Or let315 let23))))
  let let939 := (Or let651 (Or let320 (Or let126 (Or let639 let32))))
  let let940 := (Or let596 (Or let534 (Or let118 (Or let573 let417))))
  let let941 := (Or let652 (Or let594 (Or let118 (Or let10 let49))))
  let let942 := (Or let730 (Or let677 (Or let753 (Or let162 let328))))
  let let943 := (Or let685 (Or let677 (Or let668 (Or let231 let654))))
  let let944 := (Or let631 (Or let680 (Or let553 (Or let548 let98))))
  let let945 := (Or let686 (Or let680 (Or let672 (Or let661 let640))))
  let let946 := (Or let345 (Or let681 (Or let559 (Or let606 let48))))
  let let947 := (Or let687 (Or let681 (Or let605 (Or let254 let87))))
  let let948 := (Or let590 (Or let551 (Or let320 (Or let527 let251))))
  let let949 := (Or let692 (Or let551 (Or let613 (Or let664 let657))))
  let let950 := (Or let523 (Or let682 (Or let594 (Or let549 let239))))
  let let951 := (Or let597 (Or let682 (Or let534 (Or let72 let25))))
  let let952 := (Or let731 (Or let685 (Or let648 (Or let578 let539))))
  let let953 := (Or let731 (Or let730 (Or let727 (Or let253 let693))))
  let let954 := (Or let572 (Or let686 (Or let649 (Or let160 let741))))
  let let955 := (Or let572 (Or let631 (Or let728 (Or let722 let28))))
  let let956 := (Or let732 (Or let687 (Or let650 (Or let159 let236))))
  let let957 := (Or let732 (Or let345 (Or let562 (Or let233 let644))))
  let let958 := (Or let750 (Or let692 (Or let651 (Or let158 let108))))
  let let959 := (Or let750 (Or let590 (Or let12 (Or let725 let16))))
  let let960 := (Or let558 (Or let597 (Or let652 (Or let546 let264))))
  let let961 := (Or let558 (Or let523 (Or let596 (Or let726 let699))))
  let let962 := (And let961 (And let960 (And let959 (And let958 (And let957 (And let956 (And let955 (And let954 (And let953 (And let952 (And let951 (And let950 (And let949 (And let948 (And let947 (And let946 (And let945 (And let944 (And let943 (And let942 (And let941 (And let940 (And let939 (And let938 (And let937 (And let936 (And let935 (And let934 (And let933 (And let932 (And let931 (And let930 (And let929 (And let928 (And let927 (And let926 (And let925 (And let924 (And let923 (And let922 (And let920 (And let919 (And let918 (And let909 (And let917 (And let916 (And let915 (And let913 (And let911 let910)))))))))))))))))))))))))))))))))))))))))))))))))
  let let963 := (Not let90)
  let let964 := (Not let544)
  let let965 := (Not let218)
  let let966 := (Or let789 (Or let795 let965))
  let let967 := (Or let323 let966)
  let let968 := (Or let325 let966)
  let let969 := (And let324 (And let277 let612))
  let let970 := (Not let640)
  let let971 := (Not let644)
  let let972 := (Not let757)
  let let973 := (Not let148)
  let let974 := (Not let278)
  let let975 := (Not let533)
  let let976 := (Or let974 (Or let975 let973))
  let let977 := (Or let111 let976)
  let let978 := (Or let113 let976)
  let let979 := (And let112 (And let278 let533))
  let let980 := (Eq let111 False)
  let let981 := (Not let108)
  let let982 := (Not let87)
  let let983 := (Not let109)
  let let984 := (Not let251)
  let let985 := (Or let781 let984)
  let let986 := (Or let121 let985)
  let let987 := (Or let123 let985)
  let let988 := (And let122 let551)
  let let989 := (Not let23)
  let let990 := (Or let974 let989)
  let let991 := (Or let32 let990)
  let let992 := (Or let103 let990)
  let let993 := (And let102 let278)
  let let994 := (Not let98)
  let let995 := (Not let100)
  let let996 := (Not let8)
  let let997 := (Or let102 (Or let974 let996))
  let let998 := (Or let93 let997)
  let let999 := (Or let95 let997)
  let let1000 := (And let94 (And let32 let278))
  let let1001 := (Or let138 let901)
  let let1002 := (Or let901 let970)
  let let1003 := (Or let138 let1002)
  let let1004 := (Or let529 let1003)
  let let1005 := (Or let531 let1003)
  let let1006 := (And let530 (And let86 let279))
  let let1007 := (Eq let47 let528)
  let let1008 := (Or let963 let138)
  let let1009 := (Not let25)
  let let1010 := (Not let91)
  let let1011 := (Not let699)
  let let1012 := (Not let558)
  let let1013 := (Or let887 (Or let1012 let1011))
  let let1014 := (Or let257 let1013)
  let let1015 := (Or let259 let1013)
  let let1016 := (And let258 (And let280 let558))
  let let1017 := (Eq let257 False)
  let let1018 := (Not let49)
  let let1019 := (Or let1018 let963)
  let let1020 := (Or let1018 (Or let963 let603))
  let let1021 := (And let49 let90)
  let let1022 := (Not let88)
  let let1023 := (Or let971 let35)
  let let1024 := (Or let971 (Or let35 let721))
  let let1025 := (And let644 let28)
  let let1026 := (Or let901 (Or let138 (Or let530 let640)))
  let let1027 := (And let279 (And let86 let529))
  let let1028 := (Not let116)
  let let1029 := (Not let417)
  let let1030 := (Or let1028 (Or let75 let1029))
  let let1031 := (Or let80 let1030)
  let let1032 := (Or let82 let1030)
  let let1033 := (And let81 (And let116 let10))
  let let1034 := (Eq let7 let7)
  let let1035 := (Not let239)
  let let1036 := (Or let1035 let901)
  let let1037 := (Or let75 (Or let795 (Or let970 (Or let901 let1035))))
  let let1038 := (Or let482 let1037)
  let let1039 := (Or let585 let1037)
  let let1040 := (And let483 (And let10 (And let612 (And let640 let279))))
  let let1041 := (Eq let47 let39)
  let let1042 := (Eq let39 let47)
  let let1043 := (Eq let39 let24)
  let let1044 := (Eq let24 let39)
  let let1045 := (Or let970 let901)
  let let1046 := (Not let264)
  let let1047 := (Or let1012 let1046)
  let let1048 := (Or let257 let1047)
  let let1049 := (Or let259 let1047)
  let let1050 := (And let258 let558)
  let let1051 := (Or let10 let543)
  let let1052 := (Not let201)
  let let1053 := (Or let795 let1052)
  let let1054 := (Or let1052 (Or let795 let603))
  let let1055 := (And let201 let612)
  let let1056 := (Not let726)
  let let1057 := (Not let284)
  let let1058 := (Or let1057 (Or let1012 let1056))
  let let1059 := (Or let341 let1058)
  let let1060 := (Or let343 let1058)
  let let1061 := (And let342 (And let284 let558))
  let let1062 := (Eq let341 False)
  let let1063 := (Or let201 (Or let10 let789))
  let let1064 := (Not let573)
  let let1065 := (Or let1028 let1064)
  let let1066 := (Or let10 let1065)
  let let1067 := (Or let76 let1065)
  let let1068 := (And let75 let116)
  let let1069 := (Or let573 (Or let99 let201))
  let let1070 := (Not let546)
  let let1071 := (Or let1012 let1070)
  let let1072 := (Or let341 let1071)
  let let1073 := (Or let343 let1071)
  let let1074 := (And let342 let558)
  let let1075 := (Not let71)
  let let1076 := (Not let73)
  let let1077 := (Not let233)
  let let1078 := (Not let655)
  let let1079 := (Not let567)
  let let1080 := (Or let1028 (Or let975 let1079))
  let let1081 := (Or let65 let1080)
  let let1082 := (Or let67 let1080)
  let let1083 := (And let66 (And let116 let533))
  let let1084 := (Not let254)
  let let1085 := (Not let253)
  let let1086 := (Not let255)
  let let1087 := (Not let560)
  let let1088 := (Or let795 let1087)
  let let1089 := (Or let58 let1088)
  let let1090 := (Or let60 let1088)
  let let1091 := (And let59 let612)
  let let1092 := (Not let231)
  let let1093 := (Or let787 let1092)
  let let1094 := (Or let52 let1093)
  let let1095 := (Or let54 let1093)
  let let1096 := (And let53 let72)
  let let1097 := (Not let236)
  let let1098 := (Not let322)
  let let1099 := (Or let795 let1098)
  let let1100 := (Or let887 (Or let1097 (Or let970 let1099)))
  let let1101 := (Or let164 let1100)
  let let1102 := (Or let166 let1100)
  let let1103 := (And let165 (And let280 (And let236 (And let640 let612))))
  let let1104 := (Not let521)
  let let1105 := (Or let975 let1104)
  let let1106 := (Or let111 let1105)
  let let1107 := (Or let113 let1105)
  let let1108 := (And let112 let533)
  let let1109 := (Not let48)
  let let1110 := (Not let50)
  let let1111 := (Or let901 (Or let138 (Or let795 (Or let787 let1009))))
  let let1112 := (Or let530 (Or let41 let1111))
  let let1113 := (Or let530 (Or let43 let1111))
  let let1114 := (And let529 (And let42 (And let279 (And let86 (And let612 let72)))))
  let let1115 := (Or let28 let522)
  let let1116 := (Or let86 let1115)
  let let1117 := (Or let887 let877)
  let let1118 := (Or let28 let1117)
  let let1119 := (Or let36 let1117)
  let let1120 := (And let35 let280)
  let let1121 := (Or let102 let823)
  let let1122 := (Or let522 let86)
  let let1123 := (Or let581 let86)
  let let1124 := (Or let581 let789)
  let let1125 := (Or let789 (Or let581 let22))
  let let1126 := (And let277 let30)
  let let1127 := (Or let581 let581)
  let let1128 := (Or let581 let974)
  let let1129 := (Or let581 (Or let974 let963))
  let let1130 := (Or let529 let1129)
  let let1131 := (Or let531 let1129)
  let let1132 := (And let530 (And let30 let278))
  let let1133 := (Not let33)
  let let1134 := (Or let17 let35)
  let let1135 := (Or let17 (Or let35 let93))
  let let1136 := (And let16 let28)
  let let1137 := (Or let970 let581)
  let let1138 := (Not let641)
  let let1139 := (Or let901 (Or let970 let98))
  let let1140 := (And let279 let640)
  let let1141 := (Or let86 (Or let522 (Or let845 (Or let49 (Or let535 (Or let994 let46))))))
  let let1142 := (Or let845 let994)
  let let1143 := (Not let229)
  let let1144 := (Not let26)
  let let1145 := (Or let887 let981)
  let let1146 := (Or let16 let1145)
  let let1147 := (Or let18 let1145)
  let let1148 := (And let17 let280)
  let let1149 := (Not let126)
  let let1150 := (Or let789 (Or let581 (Or let975 let1149)))
  let let1151 := (Or let86 let1150)
  let let1152 := (Or let139 let1150)
  let let1153 := (And let138 (And let277 (And let30 let533)))
  let let1154 := (Or let974 (Or let581 (Or let530 let90)))
  let let1155 := (And let30 let529)
  let let1156 := (And let278 let1155)
  let let1157 := (Eq let528 let7)
  let let1158 := (Or let581 let530)
  let let1159 := (Or let530 let581)
  let let1160 := (Or let581 (Or let530 let8))
  let let1161 := (Or let17 let845)
  let let1162 := (Not let418)
  let let1163 := (Or let901 (Or let1035 (Or let974 (Or let581 (Or let530 let1053)))))
  let let1164 := (Or let133 let1163)
  let let1165 := (Or let565 let1163)
  let let1166 := (And let477 (And let279 (And let239 (And let278 (And let30 (And let529 let612))))))
  let let1167 := (Or let901 (Or let1035 (Or let787 let452)))
  let let1168 := (And let279 (And let239 let72))
  let let1169 := (Or let75 let996)
  let let1170 := (Not let13)
  let let1171 := (Not let613)
  let let1172 := (Not let288)
  let let1173 := (Or let1172 (Or let781 let1171))
  let let1174 := (Or let317 let1173)
  let let1175 := (Or let517 let1173)
  let let1176 := (And let501 (And let288 let551))
  let let1177 := (Not let315)
  let let1178 := (Or let75 (Or let1028 let1177))
  let let1179 := (Or let1 let1178)
  let let1180 := (Or let3 let1178)
  let let1181 := (And let2 (And let10 let116))
  let let1182 := (Or let823 (Or let787 let484))
  let let1183 := (And let543 let72)
  let let1184 := (Or let982 (Or let1084 let452))
  let let1185 := (And let87 let254)
  let let1186 := (Or let1098 (Or let795 let721))
  let let1187 := (And let322 let612)
  let let1188 := (Not let234)
  let let1189 := (Not let661)
  let let1190 := (Or let795 let1189)
  let let1191 := (Or let795 (Or let1189 let41))
  let let1192 := (And let612 let661)
(Eq let5 let4) → let5 → (Eq let6 True) → (Eq let14 let13) → (Eq let20 let19) → let20 → (Eq let27 let26) → (Eq let34 let33) → let37 → (Eq let38 True) → (Eq let45 let44) → let45 → (Eq let51 let50) → (Eq let56 let55) → let56 → (Eq let57 True) → let61 → (Eq let62 True) → (Eq let69 let68) → (Eq let70 True) → (Eq let74 let73) → (Eq let78 let77) → let78 → (Eq let79 True) → (Eq let84 let83) → let84 → (Eq let85 True) → (Eq let89 let88) → (Eq let92 let91) → (Eq let97 let96) → let97 → (Eq let101 let100) → (Eq let105 let104) → let105 → (Eq let106 True) → (Eq let110 let109) → (Eq let115 let114) → (Eq let117 let116) → (Eq let119 let118) → (Eq let125 let124) → (Eq let127 let126) → let125 → (Eq let129 let128) → (Eq let130 True) → (Eq let132 let131) → (Eq let134 True) → (Eq let136 let135) → (Eq let137 let71) → let140 → (Eq let147 let146) → (Eq let144 let32) → (Eq let143 let148) → (Eq let142 let90) → (Eq let141 let149) → (Eq let157 let156) → (Eq let154 let158) → (Eq let153 let159) → (Eq let152 let160) → (Eq let163 let162) → (Eq let168 let167) → (Eq let175 let174) → (Eq let169 let176) → (Eq let184 let183) → (Eq let193 let192) → (Eq let200 let199) → (Eq let198 let201) → (Eq let209 let208) → (Eq let210 True) → (Eq let217 let216) → (Eq let215 let99) → (Eq let214 let46) → (Eq let212 let218) → (Eq let225 let224) → (Eq let228 let227) → (Eq let230 let229) → (Eq let222 let108) → (Eq let235 let234) → (Eq let221 let236) → (Eq let238 let237) → (Eq let240 let239) → (Eq let245 let244) → (Eq let250 let249) → (Eq let252 let251) → (Eq let256 let255) → let245 → (Eq let261 let260) → (Eq let262 let48) → let261 → (Eq let263 let98) → (Eq let223 let264) → (Eq let265 True) → (Eq let272 let271) → (Eq let269 let23) → (Eq let267 let8) → (Eq let275 let274) → (Eq let302 let301) → (Eq let306 let305) → (Eq let308 let307) → (Eq let313 let312) → (Eq let314 True) → (Eq let172 let315) → (Eq let292 let288) → (Eq let316 let58) → (Eq let318 True) → (Eq let319 let86) → (Eq let321 let320) → (Eq let196 let322) → let326 → (Eq let298 let289) → (Eq let327 True) → (Eq let329 let328) → (Eq let336 let335) → let340 → let344 → (Eq let346 let345) → (Eq let171 let347) → (Eq let291 let283) → (Eq let352 let351) → (Eq let353 let30) → (Eq let355 let354) → (Eq let204 let356) → (Eq let414 let413) → (Eq let290 let279) → (Eq let416 let415) → (Eq let270 let417) → (Eq let419 let418) → (Eq let421 let420) → (Eq let406 let12) → (Eq let515 let514) → (Eq let358 let516) → (Eq let519 let518) → (Eq let359 let520) → (Eq let268 let521) → (Eq let206 let522) → (Eq let411 let523) → let115 → (Eq let285 let278) → (Eq let140 let524) → (Eq let526 let525) → (Eq let362 let527) → let532 → (Eq let365 let533) → (Eq let388 let534) → (Eq let207 let535) → (Eq let412 let536) → let69 → (Eq let538 let537) → (Eq let219 let539) → (Eq let541 let540) → (Eq let402 let542) → (Eq let545 let544) → (Eq let155 let546) → (Eq let547 let52) → (Eq let226 let548) → (Eq let363 let549) → (Eq let532 let550) → (Eq let391 let551) → (Eq let389 let552) → (Eq let286 True) → (Eq let348 let553) → (Eq let364 let554) → (Eq let555 let1) → (Eq let557 let556) → (Eq let182 let558) → (Eq let368 let559) → (Eq let194 let560) → (Eq let561 True) → (Eq let405 let562) → (Eq let564 let563) → let566 → (Eq let309 let567) → (Eq let360 let568) → (Eq let569 True) → (Eq let331 let28) → (Eq let571 let570) → (Eq let276 True) → (Eq let179 let572) → let168 → (Eq let173 let573) → (Eq let293 True) → (Eq let213 let22) → (Eq let575 let574) → let519 → (Eq let273 let543) → (Eq let576 True) → (Eq let366 let577) → (Eq let281 let277) → (Eq let151 let578) → (Eq let580 let579) → (Eq let311 let10) → (Eq let584 let583) → let586 → (Eq let333 let16) → (Eq let205 let587) → (Eq let340 let588) → (Eq let344 let589) → (Eq let410 let590) → (Eq let592 let591) → (Eq let593 True) → (Eq let282 True) → (Eq let369 let594) → (Eq let299 let295) → (Eq let595 let93) → (Eq let407 let596) → (Eq let145 let49) → (Eq let395 let597) → (Eq let300 True) → (Eq let266 let598) → (Eq let396 let599) → (Eq let61 let600) → (Eq let211 let601) → (Eq let408 let602) → (Eq let604 let603) → (Eq let386 let605) → (Eq let361 let606) → (Eq let607 True) → (Eq let609 let608) → (Eq let611 let610) → (Eq let195 let612) → (Eq let387 let613) → (Eq let614 True) → (Eq let628 let627) → (Eq let629 True) → (Eq let630 True) → (Eq let350 let631) → (Eq let633 let632) → (Eq let635 let634) → (Eq let566 let636) → (Eq let638 let637) → (Eq let310 let639) → (Eq let642 let641) → let584 → (Eq let643 True) → (Eq let332 let644) → (Eq let357 let645) → (Eq let393 let646) → (Eq let370 let647) → (Eq let371 let648) → (Eq let247 let649) → (Eq let372 let650) → (Eq let303 let651) → (Eq let373 let652) → (Eq let374 let653) → (Eq let185 let654) → (Eq let656 let655) → (Eq let375 let640) → (Eq let376 let87) → (Eq let377 let657) → (Eq let296 let280) → (Eq let378 let25) → (Eq let297 let284) → (Eq let659 let658) → (Eq let379 let660) → (Eq let186 let231) → (Eq let380 let661) → (Eq let381 let254) → (Eq let663 let662) → (Eq let382 let664) → (Eq let383 let72) → (Eq let666 let665) → (Eq let384 let667) → (Eq let188 let668) → (Eq let616 let669) → (Eq let671 let670) → (Eq let385 let672) → (Eq let674 let673) → (Eq let676 let675) → (Eq let189 let677) → (Eq let679 let678) → (Eq let349 let680) → (Eq let390 let681) → (Eq let392 let682) → (Eq let684 let683) → (Eq let191 let685) → (Eq let248 let686) → (Eq let394 let687) → (Eq let689 let688) → (Eq let691 let690) → (Eq let304 let692) → (Eq let330 let693) → (Eq let695 let694) → (Eq let586 let696) → (Eq let698 let697) → (Eq let334 let699) → (Eq let397 let253) → (Eq let720 let719) → (Eq let618 let721) → (Eq let398 let722) → (Eq let399 let233) → (Eq let707 let723) → (Eq let703 let724) → (Eq let400 let725) → (Eq let401 let726) → (Eq let403 let727) → (Eq let404 let728) → (Eq let717 let729) → (Eq let409 let730) → (Eq let178 let731) → (Eq let180 let732) → (Eq let733 True) → (Eq let203 let734) → (Eq let700 let735) → (Eq let702 let736) → (Eq let704 let737) → (Eq let705 let738) → (Eq let37 let739) → (Eq let706 let740) → (Eq let220 let741) → (Eq let708 let742) → (Eq let197 let743) → (Eq let326 let744) → (Eq let709 let745) → (Eq let710 let746) → (Eq let170 let747) → (Eq let711 let748) → (Eq let712 let749) → (Eq let181 let750) → (Eq let713 let751) → (Eq let714 let752) → (Eq let367 let753) → (Eq let715 let754) → (Eq let716 let755) → (Eq let718 let756) → (Eq let758 let757) → let414 → let720 → (And (And (And (And (Or (Or (Or (Or let182 let392) let119) let198) let207) (Or (Or (Or (Or let181 let391) let127) let197) let206)) (Or (Or (Or (Or let180 let390) let365) let196) let205)) (Or (Or (Or (Or let179 let349) let129) let195) let204)) (Or (Or (Or (Or let178 let189) let132) let194) let203)) → (And (And (And (And (Or (Or (Or (Or let182 let304) let372) let152) let219) (Or (Or (Or (Or let411 let391) let368) let226) let329)) (Or (Or (Or (Or let407 let387) let365) let170) let266)) (Or (Or (Or (Or let401 let382) let309) let195) let357)) (Or (Or (Or (Or let334 let377) let143) let212) let203)) → let302 → (Or (Or (Or (Or let182 let391) let365) let195) let203) → (Or (Or (Or (Or (Or (Or (Or (Or (Not (Eq (op e0 let177) e0)) (Not (Eq (op e0 let294) e1))) (Not (Eq (op e0 let11) e2))) (Not (Eq (op e0 let232) e3))) (Not (Eq (op e0 let15) e4))) (Or (Or (Or (Or (Not (Eq (op e1 let190) e0)) (Not (Eq (op e1 let120) e1))) (Not (Eq (op e1 let187) e2))) (Not (Eq (op e1 let40) e3))) (Not (Eq (op e1 let24) e4)))) (Or (Or (Or (Or (Not (Eq (op e2 let246) e0)) (Not (Eq (op e2 let287) e1))) (Not (Eq (op e2 let64) e2))) (Not (Eq (op e2 let9) e3))) (Not (Eq (op e2 let31) e4)))) (Or (Or (Or (Or (Not (Eq (op e3 let150) e0)) (Not (Eq (op e3 let161) e1))) (Not (Eq (op e3 let63) e2))) (Not (Eq (op e3 let39) e3))) (Not (Eq (op e3 let21) e4)))) (Or (Or (Or (Or (Not (Eq (op e4 let107) e0)) (Not (Eq (op e4 let47) e1))) (Not (Eq (op e4 let7) e2))) (Not let759)) (Not (Eq (op e4 let202) e4)))) → let564 → let515 → let628 → (Not (And (And let606 let640) let730)) → (Not (And (And let48 let231) let631)) → (Not (And (And let553 let87) let730)) → (Not (And (And let98 let668) let345)) → (Not (And (And let753 let254) let631)) → (Not (And (And let162 let672) let345)) → (Not (And (And let315 let90) let727)) → (Not (And (And let23 let71) let728)) → (Not (And (And let672 let32) let727)) → (Not (And (And let8 let753) let12)) → (Not (And (And let668 let639) let728)) → (Not (And (And let176 let553) let12)) → (Not (And (And let639 let22) let253)) → (Not (And (And let86 let176) let233)) → let760 → (Not (And (And let30 let162) let725)) → (Not (And (And let231 let315) let233)) → (Not (And (And let71 let606) let725)) → let761 → (Not (And (And let46 let8) let644)) → let762 → let763 → (Not (And (And let640 let23) let644)) → (Not (And (And let90 let48) let16)) → (Not (And (And let159 let28) let685)) → (Not (And (And let236 let253) let686)) → (Not (And (And let649 let644) let685)) → (Not (And (And let741 let727) let687)) → (Not (And (And let648 let233) let686)) → (Not (And (And let578 let728) let687)) → (Not (And (And let573 let90) let668)) → (Not (And (And let417 let71) let672)) → (Not (And (And let728 let49) let668)) → (Not (And (And let8 let648) let534)) → (Not (And (And let727 let10) let672)) → (Not (And (And let176 let649) let534)) → (Not (And (And let10 let22) let231)) → (Not (And (And let543 let176) let254)) → let764 → (Not (And (And let30 let578) let72)) → (Not (And (And let253 let573) let254)) → (Not (And (And let71 let159) let72)) → let765 → (Not (And (And let99 let8) let87)) → let766 → (Not (And (And let22 let741) let25)) → (Not (And (And let28 let417) let87)) → (Not (And (And let90 let236) let25)) → (Not (And (And let158 let28) let648)) → (Not (And (And let108 let253) let649)) → (Not (And (And let686 let16) let648)) → (Not (And (And let741 let730) let651)) → (Not (And (And let685 let725) let649)) → (Not (And (And let578 let631) let651)) → (Not (And (And let549 let640) let753)) → (Not (And (And let239 let231) let553)) → (Not (And (And let631 let25) let753)) → (Not (And (And let98 let685) let594)) → (Not (And (And let730 let72) let553)) → (Not (And (And let162 let686) let594)) → let767 → (Not (And (And let543 let162) let639)) → (Not (And (And let725 let99) let71)) → (Not (And (And let86 let578) let10)) → (Not (And (And let253 let549) let639)) → (Not (And (And let231 let158) let10)) → let768 → let769 → let770 → (Not (And (And let46 let741) let49)) → (Not (And (And let28 let239) let32)) → (Not (And (And let640 let108) let49)) → (Not (And (And let651 let644) let578)) → (Not (And (And let108 let727) let159)) → (Not (And (And let687 let16) let578)) → (Not (And (And let236 let730) let158)) → (Not (And (And let685 let12) let159)) → (Not (And (And let648 let345) let158)) → (Not (And (And let594 let87) let162)) → (Not (And (And let239 let668) let606)) → (Not (And (And let345 let25) let162)) → (Not (And (And let48 let685) let549)) → (Not (And (And let730 let534) let606)) → (Not (And (And let753 let687) let549)) → (Not (And (And let534 let32) let176)) → (Not (And (And let417 let753) let315)) → (Not (And (And let12 let49) let176)) → (Not (And (And let23 let648) let573)) → (Not (And (And let727 let594) let315)) → (Not (And (And let668 let651) let573)) → let771 → let772 → let773 → (Not (And (And let32 let236) let99)) → (Not (And (And let644 let239) let46)) → let774 → (Not (And (And let651 let233) let741)) → (Not (And (And let158 let728) let236)) → (Not (And (And let687 let725) let741)) → (Not (And (And let159 let631) let108)) → (Not (And (And let686 let12) let236)) → (Not (And (And let649 let345) let108)) → (Not (And (And let594 let254) let98)) → (Not (And (And let549 let672) let48)) → (Not (And (And let345 let72) let98)) → (Not (And (And let606 let686) let239)) → (Not (And (And let631 let534) let48)) → (Not (And (And let553 let687) let239)) → (Not (And (And let534 let639) let8)) → (Not (And (And let573 let553) let23)) → let775 → (Not (And (And let315 let649) let417)) → (Not (And (And let728 let594) let23)) → (Not (And (And let672 let651) let417)) → (Not (And (And let72 let315) let30)) → (Not (And (And let10 let606) let86)) → (Not (And (And let725 let573) let30)) → (Not (And (And let639 let159) let543)) → let776 → (Not (And (And let254 let158) let543)) → False :=
  let let1 := (Eq e1 e0)
  let let2 := (Not let1)
  let let3 := (Not let2)
  let let4 := (Eq let1 let3)
  let let5 := (Eq let3 let1)
  let let6 := (Eq let1 let1)
  let let7 := (op e4 e2)
  let let8 := (Eq e3 let7)
  let let9 := (op e2 e3)
  let let10 := (Eq e0 let9)
  let let11 := (op e0 e2)
  let let12 := (Eq e1 let11)
  let let13 := (And let12 (And let10 let8))
  let let14 := (And (And let12 let10) let8)
  let let15 := (op e0 e4)
  let let16 := (Eq e1 let15)
  let let17 := (Not let16)
  let let18 := (Not let17)
  let let19 := (Eq let16 let18)
  let let20 := (Eq let18 let16)
  let let21 := (op e3 e4)
  let let22 := (Eq e2 let21)
  let let23 := (Eq e1 let7)
  let let24 := (op e1 e4)
  let let25 := (Eq e0 let24)
  let let26 := (And let25 (And let23 let22))
  let let27 := (And (And let25 let23) let22)
  let let28 := (Eq e3 let15)
  let let29 := (op e4 e3)
  let let30 := (Eq e2 let29)
  let let31 := (op e2 e4)
  let let32 := (Eq e1 let31)
  let let33 := (And let32 (And let30 let28))
  let let34 := (And (And let32 let30) let28)
  let let35 := (Not let28)
  let let36 := (Not let35)
  let let37 := (Eq let36 let28)
  let let38 := (Eq let28 let28)
  let let39 := (op e3 e3)
  let let40 := (op e1 e3)
  let let41 := (Eq let40 let39)
  let let42 := (Not let41)
  let let43 := (Not let42)
  let let44 := (Eq let41 let43)
  let let45 := (Eq let43 let41)
  let let46 := (Eq e1 let21)
  let let47 := (op e4 e1)
  let let48 := (Eq e2 let47)
  let let49 := (Eq e0 let31)
  let let50 := (And let49 (And let48 let46))
  let let51 := (And (And let49 let48) let46)
  let let52 := (Eq e4 e0)
  let let53 := (Not let52)
  let let54 := (Not let53)
  let let55 := (Eq let52 let54)
  let let56 := (Eq let54 let52)
  let let57 := (Eq let52 let52)
  let let58 := (Eq e4 e3)
  let let59 := (Not let58)
  let let60 := (Not let59)
  let let61 := (Eq let60 let58)
  let let62 := (Eq let58 let58)
  let let63 := (op e3 e2)
  let let64 := (op e2 e2)
  let let65 := (Eq let64 let63)
  let let66 := (Not let65)
  let let67 := (Not let66)
  let let68 := (Eq let65 let67)
  let let69 := (Eq let67 let65)
  let let70 := (Eq let65 let65)
  let let71 := (Eq e4 let9)
  let let72 := (Eq e0 let40)
  let let73 := (And let72 (And let46 let71))
  let let74 := (And (And let72 let46) let71)
  let let75 := (Not let10)
  let let76 := (Not let75)
  let let77 := (Eq let10 let76)
  let let78 := (Eq let76 let10)
  let let79 := (Eq let10 let10)
  let let80 := (Eq let63 let7)
  let let81 := (Not let80)
  let let82 := (Not let81)
  let let83 := (Eq let80 let82)
  let let84 := (Eq let82 let80)
  let let85 := (Eq let80 let80)
  let let86 := (Eq e1 let29)
  let let87 := (Eq e2 let24)
  let let88 := (And let87 (And let86 let28))
  let let89 := (And (And let87 let86) let28)
  let let90 := (Eq e3 let31)
  let let91 := (And let25 (And let86 let90))
  let let92 := (And (And let25 let86) let90)
  let let93 := (Eq e3 e1)
  let let94 := (Not let93)
  let let95 := (Not let94)
  let let96 := (Eq let93 let95)
  let let97 := (Eq let95 let93)
  let let98 := (Eq e3 let47)
  let let99 := (Eq e0 let21)
  let let100 := (And let99 (And let98 let32))
  let let101 := (And (And let99 let98) let32)
  let let102 := (Not let32)
  let let103 := (Not let102)
  let let104 := (Eq let32 let103)
  let let105 := (Eq let103 let32)
  let let106 := (Eq let32 let32)
  let let107 := (op e4 e0)
  let let108 := (Eq e1 let107)
  let let109 := (And let87 (And let108 let99))
  let let110 := (And (And let87 let108) let99)
  let let111 := (Eq let64 let7)
  let let112 := (Not let111)
  let let113 := (Not let112)
  let let114 := (Eq let111 let113)
  let let115 := (Eq let113 let111)
  let let116 := (Eq let9 let63)
  let let117 := (Eq let63 let9)
  let let118 := (Eq e0 let64)
  let let119 := (Eq let64 e0)
  let let120 := (op e1 e1)
  let let121 := (Eq let120 let47)
  let let122 := (Not let121)
  let let123 := (Not let122)
  let let124 := (Eq let121 let123)
  let let125 := (Eq let123 let121)
  let let126 := (Eq e1 let64)
  let let127 := (Eq let64 e1)
  let let128 := (Eq e3 let64)
  let let129 := (Eq let64 e3)
  let let130 := (Eq let121 let121)
  let let131 := (Eq e4 let64)
  let let132 := (Eq let64 e4)
  let let133 := (Eq let24 let31)
  let let134 := (Eq let133 let133)
  let let135 := (Eq e3 let9)
  let let136 := (Eq let9 e3)
  let let137 := (Eq let9 e4)
  let let138 := (Not let86)
  let let139 := (Not let138)
  let let140 := (Eq let139 let86)
  let let141 := (Eq let31 e4)
  let let142 := (Eq let31 e3)
  let let143 := (Eq let31 e2)
  let let144 := (Eq let31 e1)
  let let145 := (Eq let31 e0)
  let let146 := (Or let145 (Or let144 (Or let143 (Or let142 let141))))
  let let147 := (Or (Or (Or (Or let145 let144) let143) let142) let141)
  let let148 := (Eq e2 let31)
  let let149 := (Eq e4 let31)
  let let150 := (op e3 e0)
  let let151 := (Eq let150 e4)
  let let152 := (Eq let150 e3)
  let let153 := (Eq let150 e2)
  let let154 := (Eq let150 e1)
  let let155 := (Eq let150 e0)
  let let156 := (Or let155 (Or let154 (Or let153 (Or let152 let151))))
  let let157 := (Or (Or (Or (Or let155 let154) let153) let152) let151)
  let let158 := (Eq e1 let150)
  let let159 := (Eq e2 let150)
  let let160 := (Eq e3 let150)
  let let161 := (op e3 e1)
  let let162 := (Eq e4 let161)
  let let163 := (Eq let161 e4)
  let let164 := (Eq let15 let24)
  let let165 := (Not let164)
  let let166 := (Not let165)
  let let167 := (Eq let164 let166)
  let let168 := (Eq let166 let164)
  let let169 := (Eq let63 e4)
  let let170 := (Eq let63 e3)
  let let171 := (Eq let63 e2)
  let let172 := (Eq let63 e1)
  let let173 := (Eq let63 e0)
  let let174 := (Or let173 (Or let172 (Or let171 (Or let170 let169))))
  let let175 := (Or (Or (Or (Or let173 let172) let171) let170) let169)
  let let176 := (Eq e4 let63)
  let let177 := (op e0 e0)
  let let178 := (Eq let177 e4)
  let let179 := (Eq let177 e3)
  let let180 := (Eq let177 e2)
  let let181 := (Eq let177 e1)
  let let182 := (Eq let177 e0)
  let let183 := (Or let182 (Or let181 (Or let180 (Or let179 let178))))
  let let184 := (Or (Or (Or (Or let182 let181) let180) let179) let178)
  let let185 := (Eq let24 e4)
  let let186 := (Eq let40 e4)
  let let187 := (op e1 e2)
  let let188 := (Eq let187 e4)
  let let189 := (Eq let120 e4)
  let let190 := (op e1 e0)
  let let191 := (Eq let190 e4)
  let let192 := (Or let191 (Or let189 (Or let188 (Or let186 let185))))
  let let193 := (Or (Or (Or (Or let191 let189) let188) let186) let185)
  let let194 := (Eq let39 e4)
  let let195 := (Eq let39 e3)
  let let196 := (Eq let39 e2)
  let let197 := (Eq let39 e1)
  let let198 := (Eq let39 e0)
  let let199 := (Or let198 (Or let197 (Or let196 (Or let195 let194))))
  let let200 := (Or (Or (Or (Or let198 let197) let196) let195) let194)
  let let201 := (Eq e0 let39)
  let let202 := (op e4 e4)
  let let203 := (Eq let202 e4)
  let let204 := (Eq let202 e3)
  let let205 := (Eq let202 e2)
  let let206 := (Eq let202 e1)
  let let207 := (Eq let202 e0)
  let let208 := (Or let207 (Or let206 (Or let205 (Or let204 let203))))
  let let209 := (Or (Or (Or (Or let207 let206) let205) let204) let203)
  let let210 := (Eq let16 let16)
  let let211 := (Eq let21 e4)
  let let212 := (Eq let21 e3)
  let let213 := (Eq let21 e2)
  let let214 := (Eq let21 e1)
  let let215 := (Eq let21 e0)
  let let216 := (Or let215 (Or let214 (Or let213 (Or let212 let211))))
  let let217 := (Or (Or (Or (Or let215 let214) let213) let212) let211)
  let let218 := (Eq e3 let21)
  let let219 := (Eq let107 e4)
  let let220 := (Eq let107 e3)
  let let221 := (Eq let107 e2)
  let let222 := (Eq let107 e1)
  let let223 := (Eq let107 e0)
  let let224 := (Or let223 (Or let222 (Or let221 (Or let220 let219))))
  let let225 := (Or (Or (Or (Or let223 let222) let221) let220) let219)
  let let226 := (Eq let161 e3)
  let let227 := (Or let152 (Or let226 (Or let170 (Or let195 let212))))
  let let228 := (Or (Or (Or (Or let152 let226) let170) let195) let212)
  let let229 := (And let22 (And let98 let16))
  let let230 := (And (And let22 let98) let16)
  let let231 := (Eq e4 let40)
  let let232 := (op e0 e3)
  let let233 := (Eq e2 let232)
  let let234 := (And let233 (And let99 let231))
  let let235 := (And (And let233 let99) let231)
  let let236 := (Eq e2 let107)
  let let237 := (Or let151 (Or let163 (Or let169 (Or let194 let211))))
  let let238 := (Or (Or (Or (Or let151 let163) let169) let194) let211)
  let let239 := (Eq e0 let47)
  let let240 := (Eq let47 e0)
  let let241 := (Eq let120 let161)
  let let242 := (Not let241)
  let let243 := (Not let242)
  let let244 := (Eq let241 let243)
  let let245 := (Eq let243 let241)
  let let246 := (op e2 e0)
  let let247 := (Eq let246 e3)
  let let248 := (Eq let190 e3)
  let let249 := (Or let179 (Or let248 (Or let247 (Or let152 let220))))
  let let250 := (Or (Or (Or (Or let179 let248) let247) let152) let220)
  let let251 := (Eq e1 let47)
  let let252 := (Eq let47 e1)
  let let253 := (Eq e4 let232)
  let let254 := (Eq e2 let40)
  let let255 := (And let254 (And let46 let253))
  let let256 := (And (And let254 let46) let253)
  let let257 := (Eq let177 let107)
  let let258 := (Not let257)
  let let259 := (Not let258)
  let let260 := (Eq let257 let259)
  let let261 := (Eq let259 let257)
  let let262 := (Eq let47 e2)
  let let263 := (Eq let47 e3)
  let let264 := (Eq e0 let107)
  let let265 := (Eq let241 let241)
  let let266 := (Eq let7 e4)
  let let267 := (Eq let7 e3)
  let let268 := (Eq let7 e2)
  let let269 := (Eq let7 e1)
  let let270 := (Eq let7 e0)
  let let271 := (Or let270 (Or let269 (Or let268 (Or let267 let266))))
  let let272 := (Or (Or (Or (Or let270 let269) let268) let267) let266)
  let let273 := (Eq let29 e0)
  let let274 := (Or let223 (Or let240 (Or let270 (Or let273 let207))))
  let let275 := (Or (Or (Or (Or let223 let240) let270) let273) let207)
  let let276 := (Eq let202 let202)
  let let277 := (Eq let21 let29)
  let let278 := (Eq let31 let7)
  let let279 := (Eq let24 let47)
  let let280 := (Eq let15 let107)
  let let281 := (Eq let29 let21)
  let let282 := (Eq let39 let39)
  let let283 := (Eq let40 let161)
  let let284 := (Eq let232 let150)
  let let285 := (Eq let7 let31)
  let let286 := (Eq let64 let64)
  let let287 := (op e2 e1)
  let let288 := (Eq let187 let287)
  let let289 := (Eq let11 let246)
  let let290 := (Eq let47 let24)
  let let291 := (Eq let161 let40)
  let let292 := (Eq let287 let187)
  let let293 := (Eq let120 let120)
  let let294 := (op e0 e1)
  let let295 := (Eq let294 let190)
  let let296 := (Eq let107 let15)
  let let297 := (Eq let150 let232)
  let let298 := (Eq let246 let11)
  let let299 := (Eq let190 let294)
  let let300 := (Eq let177 let177)
  let let301 := (And let300 (And let299 (And let298 (And let297 (And let296 (And let295 (And let293 (And let292 (And let291 (And let290 (And let289 (And let288 (And let286 (And let117 (And let285 (And let284 (And let283 (And let116 (And let282 (And let281 (And let280 (And let279 (And let278 (And let277 let276))))))))))))))))))))))))
  let let302 := (And (And (And (And (And (And (And (And let300 let299) let298) let297) let296) (And (And (And (And let295 let293) let292) let291) let290)) (And (And (And (And let289 let288) let286) let117) let285)) (And (And (And (And let284 let283) let116) let282) let281)) (And (And (And (And let280 let279) let278) let277) let276))
  let let303 := (Eq let246 e1)
  let let304 := (Eq let190 e1)
  let let305 := (Or let181 (Or let304 (Or let303 (Or let154 let222))))
  let let306 := (Or (Or (Or (Or let181 let304) let303) let154) let222)
  let let307 := (And let295 (And let289 (And let284 (And let280 (And let288 (And let283 (And let279 (And let116 (And let278 let277)))))))))
  let let308 := (And True (And let295 (And let289 (And let284 (And let280 (And let295 (And True (And let288 (And let283 (And let279 (And let289 (And let288 (And True (And let116 (And let278 (And let284 (And let283 (And let116 (And True (And let277 (And let280 (And let279 (And let278 (And let277 True))))))))))))))))))))))))
  let let309 := (Eq let9 e2)
  let let310 := (Eq let9 e1)
  let let311 := (Eq let9 e0)
  let let312 := (Or let311 (Or let310 (Or let309 (Or let136 let137))))
  let let313 := (Or (Or (Or (Or let311 let310) let309) let136) let137)
  let let314 := (Eq let164 let164)
  let let315 := (Eq e1 let63)
  let let316 := (Eq e3 e4)
  let let317 := (Eq let120 let287)
  let let318 := (Eq let317 let317)
  let let319 := (Eq let29 e1)
  let let320 := (Eq e1 let287)
  let let321 := (Eq let287 e1)
  let let322 := (Eq e2 let39)
  let let323 := (Eq let39 let29)
  let let324 := (Not let323)
  let let325 := (Not let324)
  let let326 := (Eq let325 let323)
  let let327 := (Eq let257 let257)
  let let328 := (Eq e4 let47)
  let let329 := (Eq let47 e4)
  let let330 := (Eq let15 e4)
  let let331 := (Eq let15 e3)
  let let332 := (Eq let15 e2)
  let let333 := (Eq let15 e1)
  let let334 := (Eq let15 e0)
  let let335 := (Or let334 (Or let333 (Or let332 (Or let331 let330))))
  let let336 := (Or (Or (Or (Or let334 let333) let332) let331) let330)
  let let337 := (Eq let21 let202)
  let let338 := (Not let337)
  let let339 := (Not let338)
  let let340 := (Eq let339 let337)
  let let341 := (Eq let177 let150)
  let let342 := (Not let341)
  let let343 := (Not let342)
  let let344 := (Eq let343 let341)
  let let345 := (Eq e2 let294)
  let let346 := (Eq let294 e2)
  let let347 := (Eq e2 let63)
  let let348 := (Eq let287 e3)
  let let349 := (Eq let120 e3)
  let let350 := (Eq let294 e3)
  let let351 := (Or let350 (Or let349 (Or let348 (Or let226 let263))))
  let let352 := (Or (Or (Or (Or let350 let349) let348) let226) let263)
  let let353 := (Eq let29 e2)
  let let354 := (Or let222 (Or let252 (Or let269 (Or let319 let206))))
  let let355 := (Or (Or (Or (Or let222 let252) let269) let319) let206)
  let let356 := (Eq e3 let202)
  let let357 := (Eq let29 e4)
  let let358 := (Eq let29 e3)
  let let359 := (Or (Or (Or (Or let273 let319) let353) let358) let357)
  let let360 := (Or (Or (Or (Or let240 let252) let262) let263) let329)
  let let361 := (Eq let161 e2)
  let let362 := (Eq let161 e1)
  let let363 := (Eq let161 e0)
  let let364 := (Or (Or (Or (Or let363 let362) let361) let226) let163)
  let let365 := (Eq let64 e2)
  let let366 := (Or (Or (Or (Or let119 let127) let365) let129) let132)
  let let367 := (Eq let287 e4)
  let let368 := (Eq let287 e2)
  let let369 := (Eq let287 e0)
  let let370 := (Or (Or (Or (Or let369 let321) let368) let348) let367)
  let let371 := (Eq let246 e4)
  let let372 := (Eq let246 e2)
  let let373 := (Eq let246 e0)
  let let374 := (Or (Or (Or (Or let373 let303) let372) let247) let371)
  let let375 := (Eq let24 e3)
  let let376 := (Eq let24 e2)
  let let377 := (Eq let24 e1)
  let let378 := (Eq let24 e0)
  let let379 := (Or (Or (Or (Or let378 let377) let376) let375) let185)
  let let380 := (Eq let40 e3)
  let let381 := (Eq let40 e2)
  let let382 := (Eq let40 e1)
  let let383 := (Eq let40 e0)
  let let384 := (Or (Or (Or (Or let383 let382) let381) let380) let186)
  let let385 := (Eq let187 e3)
  let let386 := (Eq let187 e2)
  let let387 := (Eq let187 e1)
  let let388 := (Eq let187 e0)
  let let389 := (Or (Or (Or (Or let388 let387) let386) let385) let188)
  let let390 := (Eq let120 e2)
  let let391 := (Eq let120 e1)
  let let392 := (Eq let120 e0)
  let let393 := (Or (Or (Or (Or let392 let391) let390) let349) let189)
  let let394 := (Eq let190 e2)
  let let395 := (Eq let190 e0)
  let let396 := (Or (Or (Or (Or let395 let304) let394) let248) let191)
  let let397 := (Eq let232 e4)
  let let398 := (Eq let232 e3)
  let let399 := (Eq let232 e2)
  let let400 := (Eq let232 e1)
  let let401 := (Eq let232 e0)
  let let402 := (Or (Or (Or (Or let401 let400) let399) let398) let397)
  let let403 := (Eq let11 e4)
  let let404 := (Eq let11 e3)
  let let405 := (Eq let11 e2)
  let let406 := (Eq let11 e1)
  let let407 := (Eq let11 e0)
  let let408 := (Or (Or (Or (Or let407 let406) let405) let404) let403)
  let let409 := (Eq let294 e4)
  let let410 := (Eq let294 e1)
  let let411 := (Eq let294 e0)
  let let412 := (Or (Or (Or (Or let411 let410) let346) let350) let409)
  let let413 := (And let184 (And let412 (And let408 (And let402 (And let336 (And let396 (And let393 (And let389 (And let384 (And let379 (And let374 (And let370 (And let366 (And let313 (And let147 (And let157 (And let364 (And let175 (And let200 (And let217 (And let225 (And let360 (And let272 (And let359 let209))))))))))))))))))))))))
  let let414 := (And (And (And (And (And (And (And (And let184 let412) let408) let402) let336) (And (And (And (And let396 let393) let389) let384) let379)) (And (And (And (And let374 let370) let366) let313) let147)) (And (And (And (And let157 let364) let175) let200) let217)) (And (And (And (And let225 let360) let272) let359) let209))
  let let415 := (Or let178 (Or let191 (Or let371 (Or let151 let219))))
  let let416 := (Or (Or (Or (Or let178 let191) let371) let151) let219)
  let let417 := (Eq e0 let7)
  let let418 := (And let16 (And let417 let22))
  let let419 := (And (And let16 let417) let22)
  let let420 := (Eq e2 e0)
  let let421 := (Eq e0 e2)
  let let422 := (Not (Eq let29 let202))
  let let423 := (Not (Eq let7 let202))
  let let424 := (Not (Eq let7 let29))
  let let425 := (Not (Eq let47 let202))
  let let426 := (Not (Eq let47 let29))
  let let427 := (Not (Eq let47 let7))
  let let428 := (Not (Eq let107 let202))
  let let429 := (Not (Eq let107 let29))
  let let430 := (Not (Eq let107 let7))
  let let431 := (Not (Eq let107 let47))
  let let432 := (Not (Eq let39 let21))
  let let433 := (Not (Eq let63 let21))
  let let434 := (Not (Eq let63 let39))
  let let435 := (Not (Eq let161 let21))
  let let436 := (Not (Eq let161 let39))
  let let437 := (Not (Eq let161 let63))
  let let438 := (Not (Eq let150 let21))
  let let439 := (Not (Eq let150 let39))
  let let440 := (Not (Eq let150 let63))
  let let441 := (Not (Eq let150 let161))
  let let442 := (Not (Eq let9 let31))
  let let443 := (Not (Eq let64 let31))
  let let444 := (Not (Eq let64 let9))
  let let445 := (Not (Eq let287 let31))
  let let446 := (Not (Eq let287 let9))
  let let447 := (Not (Eq let287 let64))
  let let448 := (Not (Eq let246 let31))
  let let449 := (Not (Eq let246 let9))
  let let450 := (Not (Eq let246 let64))
  let let451 := (Not (Eq let246 let287))
  let let452 := (Eq let40 let24)
  let let453 := (Not let452)
  let let454 := (Not (Eq let187 let24))
  let let455 := (Not (Eq let187 let40))
  let let456 := (Not (Eq let120 let24))
  let let457 := (Not (Eq let120 let40))
  let let458 := (Not (Eq let120 let187))
  let let459 := (Not (Eq let190 let24))
  let let460 := (Not (Eq let190 let40))
  let let461 := (Not (Eq let190 let187))
  let let462 := (Not (Eq let190 let120))
  let let463 := (Not (Eq let232 let15))
  let let464 := (Not (Eq let11 let15))
  let let465 := (Not (Eq let11 let232))
  let let466 := (Not (Eq let294 let15))
  let let467 := (Not (Eq let294 let232))
  let let468 := (Not (Eq let294 let11))
  let let469 := (Not (Eq let177 let15))
  let let470 := (Not (Eq let177 let232))
  let let471 := (Not (Eq let177 let11))
  let let472 := (Not (Eq let177 let294))
  let let473 := (Not (Eq let31 let202))
  let let474 := (Not (Eq let31 let21))
  let let475 := (Not (Eq let24 let202))
  let let476 := (Not (Eq let24 let21))
  let let477 := (Not let133)
  let let478 := (Not (Eq let15 let202))
  let let479 := (Not (Eq let15 let21))
  let let480 := (Not (Eq let15 let31))
  let let481 := (Not (Eq let9 let29))
  let let482 := (Eq let9 let39)
  let let483 := (Not let482)
  let let484 := (Eq let40 let29)
  let let485 := (Not let484)
  let let486 := (Not (Eq let40 let9))
  let let487 := (Not (Eq let232 let29))
  let let488 := (Not (Eq let232 let39))
  let let489 := (Not (Eq let232 let9))
  let let490 := (Not (Eq let232 let40))
  let let491 := (Not (Eq let187 let7))
  let let492 := (Not (Eq let187 let63))
  let let493 := (Not (Eq let187 let64))
  let let494 := (Not (Eq let11 let7))
  let let495 := (Not (Eq let11 let63))
  let let496 := (Not (Eq let11 let64))
  let let497 := (Not (Eq let11 let187))
  let let498 := (Not (Eq let161 let47))
  let let499 := (Not (Eq let287 let47))
  let let500 := (Not (Eq let287 let161))
  let let501 := (Not let317)
  let let502 := (Not (Eq let294 let47))
  let let503 := (Not (Eq let294 let161))
  let let504 := (Not (Eq let294 let287))
  let let505 := (Not (Eq let294 let120))
  let let506 := (Not (Eq let150 let107))
  let let507 := (Not (Eq let246 let107))
  let let508 := (Not (Eq let246 let150))
  let let509 := (Not (Eq let190 let107))
  let let510 := (Not (Eq let190 let150))
  let let511 := (Not (Eq let190 let246))
  let let512 := (Not (Eq let177 let246))
  let let513 := (Not (Eq let177 let190))
  let let514 := (And let513 (And let512 (And let342 (And let258 (And let511 (And let510 (And let509 (And let508 (And let507 (And let506 (And let505 (And let504 (And let503 (And let502 (And let501 (And let242 (And let122 (And let500 (And let499 (And let498 (And let497 (And let496 (And let495 (And let494 (And let493 (And let492 (And let491 (And let66 (And let112 (And let81 (And let490 (And let489 (And let488 (And let487 (And let486 (And let42 (And let485 (And let483 (And let481 (And let324 (And let165 (And let480 (And let479 (And let478 (And let477 (And let476 (And let475 (And let474 (And let473 (And let338 (And let472 (And let471 (And let470 (And let469 (And let468 (And let467 (And let466 (And let465 (And let464 (And let463 (And let462 (And let461 (And let460 (And let459 (And let458 (And let457 (And let456 (And let455 (And let454 (And let453 (And let451 (And let450 (And let449 (And let448 (And let447 (And let446 (And let445 (And let444 (And let443 (And let442 (And let441 (And let440 (And let439 (And let438 (And let437 (And let436 (And let435 (And let434 (And let433 (And let432 (And let431 (And let430 (And let429 (And let428 (And let427 (And let426 (And let425 (And let424 (And let423 let422)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  let let515 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And let513 let512) let342) let258) let511) let510) let509) let508) let507) let506) (And (And (And (And (And (And (And (And (And let505 let504) let503) let502) let501) let242) let122) let500) let499) let498)) (And (And (And (And (And (And (And (And (And let497 let496) let495) let494) let493) let492) let491) let66) let112) let81)) (And (And (And (And (And (And (And (And (And let490 let489) let488) let487) let486) let42) let485) let483) let481) let324)) (And (And (And (And (And (And (And (And (And let165 let480) let479) let478) let477) let476) let475) let474) let473) let338)) (And (And (And (And (And (And (And (And (And (And (And (And (And let472 let471) let470) let469) let468) let467) let466) let465) let464) let463) (And (And (And (And (And (And (And (And (And let462 let461) let460) let459) let458) let457) let456) let455) let454) let453)) (And (And (And (And (And (And (And (And (And let451 let450) let449) let448) let447) let446) let445) let444) let443) let442)) (And (And (And (And (And (And (And (And (And let441 let440) let439) let438) let437) let436) let435) let434) let433) let432)) (And (And (And (And (And (And (And (And (And let431 let430) let429) let428) let427) let426) let425) let424) let423) let422)))
  let let516 := (Eq e3 let29)
  let let517 := (Not let501)
  let let518 := (Eq let317 let517)
  let let519 := (Eq let517 let317)
  let let520 := (Or let273 (Or let319 (Or let353 (Or let358 let357))))
  let let521 := (Eq e2 let7)
  let let522 := (Eq e1 let202)
  let let523 := (Eq e0 let294)
  let let524 := (Eq let86 let139)
  let let525 := (Or let180 (Or let394 (Or let372 (Or let153 let221))))
  let let526 := (Or (Or (Or (Or let180 let394) let372) let153) let221)
  let let527 := (Eq e1 let161)
  let let528 := (op e4 let29)
  let let529 := (Eq e3 let528)
  let let530 := (Not let529)
  let let531 := (Not let530)
  let let532 := (Eq let531 let529)
  let let533 := (Eq e2 let64)
  let let534 := (Eq e0 let187)
  let let535 := (Eq e0 let202)
  let let536 := (Or let411 (Or let410 (Or let346 (Or let350 let409))))
  let let537 := (Or let154 (Or let362 (Or let172 (Or let197 let214))))
  let let538 := (Or (Or (Or (Or let154 let362) let172) let197) let214)
  let let539 := (Eq e4 let107)
  let let540 := (Eq e2 e1)
  let let541 := (Eq e1 e2)
  let let542 := (Or let401 (Or let400 (Or let399 (Or let398 let397))))
  let let543 := (Eq e0 let29)
  let let544 := (And let16 (And let543 let90))
  let let545 := (And (And let16 let543) let90)
  let let546 := (Eq e0 let150)
  let let547 := (Eq e0 e4)
  let let548 := (Eq e3 let161)
  let let549 := (Eq e0 let161)
  let let550 := (Eq let529 let531)
  let let551 := (Eq e1 let120)
  let let552 := (Or let388 (Or let387 (Or let386 (Or let385 let188))))
  let let553 := (Eq e3 let287)
  let let554 := (Or let363 (Or let362 (Or let361 (Or let226 let163))))
  let let555 := (Eq e0 e1)
  let let556 := (Or let346 (Or let390 (Or let368 (Or let361 let262))))
  let let557 := (Or (Or (Or (Or let346 let390) let368) let361) let262)
  let let558 := (Eq e0 let177)
  let let559 := (Eq e2 let287)
  let let560 := (Eq e4 let39)
  let let561 := (Eq let323 let323)
  let let562 := (Eq e2 let11)
  let let563 := (And let182 (And let391 (And let365 (And let195 let203))))
  let let564 := (And (And (And (And let182 let391) let365) let195) let203)
  let let565 := (Not let477)
  let let566 := (Eq let565 let133)
  let let567 := (Eq e2 let9)
  let let568 := (Or let240 (Or let252 (Or let262 (Or let263 let329))))
  let let569 := (Eq let30 let30)
  let let570 := (Or let397 (Or let186 (Or let137 (Or let194 let357))))
  let let571 := (Or (Or (Or (Or let397 let186) let137) let194) let357)
  let let572 := (Eq e3 let177)
  let let573 := (Eq e0 let63)
  let let574 := (Or let403 (Or let188 (Or let132 (Or let169 let266))))
  let let575 := (Or (Or (Or (Or let403 let188) let132) let169) let266)
  let let576 := (Eq let93 let93)
  let let577 := (Or let119 (Or let127 (Or let365 (Or let129 let132))))
  let let578 := (Eq e4 let150)
  let let579 := (Eq e4 e1)
  let let580 := (Eq e1 e4)
  let let581 := (Not let30)
  let let582 := (Not let581)
  let let583 := (Eq let30 let582)
  let let584 := (Eq let582 let30)
  let let585 := (Not let483)
  let let586 := (Eq let585 let482)
  let let587 := (Eq e2 let202)
  let let588 := (Eq let337 let339)
  let let589 := (Eq let341 let343)
  let let590 := (Eq e1 let294)
  let let591 := (Or let373 (Or let369 (Or let119 (Or let311 let145))))
  let let592 := (Or (Or (Or (Or let373 let369) let119) let311) let145)
  let let593 := (Eq let111 let111)
  let let594 := (Eq e0 let287)
  let let595 := (Eq e1 e3)
  let let596 := (Eq e0 let11)
  let let597 := (Eq e0 let190)
  let let598 := (Eq e4 let7)
  let let599 := (Or let395 (Or let304 (Or let394 (Or let248 let191))))
  let let600 := (Eq let58 let60)
  let let601 := (Eq e4 let21)
  let let602 := (Or let407 (Or let406 (Or let405 (Or let404 let403))))
  let let603 := (Eq e3 e0)
  let let604 := (Eq e0 e3)
  let let605 := (Eq e2 let187)
  let let606 := (Eq e2 let161)
  let let607 := (Eq let529 let529)
  let let608 := (Or let371 (Or let367 (Or let132 (Or let137 let141))))
  let let609 := (Or (Or (Or (Or let371 let367) let132) let137) let141)
  let let610 := (Or let372 (Or let368 (Or let365 (Or let309 let143))))
  let let611 := (Or (Or (Or (Or let372 let368) let365) let309) let143)
  let let612 := (Eq e3 let39)
  let let613 := (Eq e1 let187)
  let let614 := (Eq let41 let41)
  let let615 := (Not let316)
  let let616 := (Eq e2 e4)
  let let617 := (Not let616)
  let let618 := (Eq e2 e3)
  let let619 := (Not let618)
  let let620 := (Not let580)
  let let621 := (Not let595)
  let let622 := (Not let541)
  let let623 := (Not let547)
  let let624 := (Not let604)
  let let625 := (Not let421)
  let let626 := (Not let555)
  let let627 := (And let626 (And let625 (And let624 (And let623 (And let622 (And let621 (And let620 (And let619 (And let617 let615)))))))))
  let let628 := (And (And (And (And (And (And (And (And (And let626 let625) let624) let623) let622) let621) let620) let619) let617) let615)
  let let629 := (Eq let337 let337)
  let let630 := (Eq let341 let341)
  let let631 := (Eq e3 let294)
  let let632 := (Or let153 (Or let361 (Or let171 (Or let196 let213))))
  let let633 := (Or (Or (Or (Or let153 let361) let171) let196) let213)
  let let634 := (Or let178 (Or let409 (Or let403 (Or let397 let330))))
  let let635 := (Or (Or (Or (Or let178 let409) let403) let397) let330)
  let let636 := (Eq let133 let565)
  let let637 := (Or let248 (Or let349 (Or let385 (Or let380 let375))))
  let let638 := (Or (Or (Or (Or let248 let349) let385) let380) let375)
  let let639 := (Eq e1 let9)
  let let640 := (Eq e3 let24)
  let let641 := (And let49 (And let30 let640))
  let let642 := (And (And let49 let30) let640)
  let let643 := (Eq let482 let482)
  let let644 := (Eq e2 let15)
  let let645 := (Eq e4 let29)
  let let646 := (Or let392 (Or let391 (Or let390 (Or let349 let189))))
  let let647 := (Or let369 (Or let321 (Or let368 (Or let348 let367))))
  let let648 := (Eq e4 let246)
  let let649 := (Eq e3 let246)
  let let650 := (Eq e2 let246)
  let let651 := (Eq e1 let246)
  let let652 := (Eq e0 let246)
  let let653 := (Or let373 (Or let303 (Or let372 (Or let247 let371))))
  let let654 := (Eq e4 let24)
  let let655 := (And let233 (And let549 let86))
  let let656 := (And (And let233 let549) let86)
  let let657 := (Eq e1 let24)
  let let658 := (Or let400 (Or let382 (Or let310 (Or let197 let319))))
  let let659 := (Or (Or (Or (Or let400 let382) let310) let197) let319)
  let let660 := (Or let378 (Or let377 (Or let376 (Or let375 let185))))
  let let661 := (Eq e3 let40)
  let let662 := (Or let406 (Or let387 (Or let127 (Or let172 let269))))
  let let663 := (Or (Or (Or (Or let406 let387) let127) let172) let269)
  let let664 := (Eq e1 let40)
  let let665 := (Or let399 (Or let381 (Or let309 (Or let196 let353))))
  let let666 := (Or (Or (Or (Or let399 let381) let309) let196) let353)
  let let667 := (Or let383 (Or let382 (Or let381 (Or let380 let186))))
  let let668 := (Eq e4 let187)
  let let669 := (Eq e4 e2)
  let let670 := (Or let407 (Or let388 (Or let119 (Or let173 let270))))
  let let671 := (Or (Or (Or (Or let407 let388) let119) let173) let270)
  let let672 := (Eq e3 let187)
  let let673 := (Or let332 (Or let376 (Or let143 (Or let213 let205))))
  let let674 := (Or (Or (Or (Or let332 let376) let143) let213) let205)
  let let675 := (Or let182 (Or let395 (Or let373 (Or let155 let223))))
  let let676 := (Or (Or (Or (Or let182 let395) let373) let155) let223)
  let let677 := (Eq e4 let120)
  let let678 := (Or let409 (Or let189 (Or let367 (Or let163 let329))))
  let let679 := (Or (Or (Or (Or let409 let189) let367) let163) let329)
  let let680 := (Eq e3 let120)
  let let681 := (Eq e2 let120)
  let let682 := (Eq e0 let120)
  let let683 := (Or let179 (Or let350 (Or let404 (Or let398 let331))))
  let let684 := (Or (Or (Or (Or let179 let350) let404) let398) let331)
  let let685 := (Eq e4 let190)
  let let686 := (Eq e3 let190)
  let let687 := (Eq e2 let190)
  let let688 := (Or let155 (Or let363 (Or let173 (Or let198 let215))))
  let let689 := (Or (Or (Or (Or let155 let363) let173) let198) let215)
  let let690 := (Or let180 (Or let346 (Or let405 (Or let399 let332))))
  let let691 := (Or (Or (Or (Or let180 let346) let405) let399) let332)
  let let692 := (Eq e1 let190)
  let let693 := (Eq e4 let15)
  let let694 := (Or let181 (Or let410 (Or let406 (Or let400 let333))))
  let let695 := (Or (Or (Or (Or let181 let410) let406) let400) let333)
  let let696 := (Eq let482 let585)
  let let697 := (Or let219 (Or let329 (Or let266 (Or let357 let203))))
  let let698 := (Or (Or (Or (Or let219 let329) let266) let357) let203)
  let let699 := (Eq e0 let15)
  let let700 := (Or (Or (Or (Or let330 let185) let141) let211) let203)
  let let701 := (And let698 let700)
  let let702 := (Or (Or (Or (Or let331 let375) let142) let212) let204)
  let let703 := (Or (Or (Or (Or let220 let263) let267) let358) let204)
  let let704 := (Or (Or (Or (Or let221 let262) let268) let353) let205)
  let let705 := (Or (Or (Or (Or let333 let377) let144) let214) let206)
  let let706 := (Or (Or (Or (Or let334 let378) let145) let215) let207)
  let let707 := (Or (Or (Or (Or let398 let380) let136) let195) let358)
  let let708 := (Or (Or (Or (Or let401 let383) let311) let198) let273)
  let let709 := (Or (Or (Or (Or let404 let385) let129) let170) let267)
  let let710 := (Or (Or (Or (Or let247 let348) let129) let136) let142)
  let let711 := (Or (Or (Or (Or let405 let386) let365) let171) let268)
  let let712 := (Or (Or (Or (Or let303 let321) let127) let310) let144)
  let let713 := (Or (Or (Or (Or let394 let390) let386) let381) let376)
  let let714 := (Or (Or (Or (Or let410 let391) let321) let362) let252)
  let let715 := (Or (Or (Or (Or let304 let391) let387) let382) let377)
  let let716 := (Or (Or (Or (Or let411 let392) let369) let363) let240)
  let let717 := (Or (Or (Or (Or let395 let392) let388) let383) let378)
  let let718 := (Or (Or (Or (Or let182 let411) let407) let401) let334)
  let let719 := (And let718 (And let676 (And let695 (And let306 (And let691 (And let526 (And let684 (And let250 (And let635 (And let416 (And let717 (And let716 (And let715 (And let714 (And let713 (And let557 (And let638 (And let352 (And let193 (And let679 (And let592 (And let671 (And let712 (And let663 (And let611 (And let711 (And let710 (And let709 (And let609 (And let575 (And let689 (And let708 (And let538 (And let659 (And let633 (And let666 (And let228 (And let707 (And let238 (And let571 (And let275 (And let706 (And let355 (And let705 (And let704 (And let674 (And let703 (And let702 let701))))))))))))))))))))))))))))))))))))))))))))))))
  let let720 := (And (And (And (And (And (And (And (And (And let718 let676) (And let695 let306)) (And let691 let526)) (And let684 let250)) (And let635 let416)) (And (And (And (And (And let717 let716) (And let715 let714)) (And let713 let557)) (And let638 let352)) (And let193 let679))) (And (And (And (And (And let592 let671) (And let712 let663)) (And let611 let711)) (And let710 let709)) (And let609 let575))) (And (And (And (And (And let689 let708) (And let538 let659)) (And let633 let666)) (And let228 let707)) (And let238 let571))) (And (And (And (And (And let275 let706) (And let355 let705)) (And let704 let674)) (And let703 let702)) let701))
  let let721 := (Eq e3 e2)
  let let722 := (Eq e3 let232)
  let let723 := (Or let398 (Or let380 (Or let136 (Or let195 let358))))
  let let724 := (Or let220 (Or let263 (Or let267 (Or let358 let204))))
  let let725 := (Eq e1 let232)
  let let726 := (Eq e0 let232)
  let let727 := (Eq e4 let11)
  let let728 := (Eq e3 let11)
  let let729 := (Or let395 (Or let392 (Or let388 (Or let383 let378))))
  let let730 := (Eq e4 let294)
  let let731 := (Eq e4 let177)
  let let732 := (Eq e2 let177)
  let let733 := (Eq let86 let86)
  let let734 := (Eq e4 let202)
  let let735 := (Or let330 (Or let185 (Or let141 (Or let211 let203))))
  let let736 := (Or let331 (Or let375 (Or let142 (Or let212 let204))))
  let let737 := (Or let221 (Or let262 (Or let268 (Or let353 let205))))
  let let738 := (Or let333 (Or let377 (Or let144 (Or let214 let206))))
  let let739 := (Eq let28 let36)
  let let740 := (Or let334 (Or let378 (Or let145 (Or let215 let207))))
  let let741 := (Eq e3 let107)
  let let742 := (Or let401 (Or let383 (Or let311 (Or let198 let273))))
  let let743 := (Eq e1 let39)
  let let744 := (Eq let323 let325)
  let let745 := (Or let404 (Or let385 (Or let129 (Or let170 let267))))
  let let746 := (Or let247 (Or let348 (Or let129 (Or let136 let142))))
  let let747 := (Eq e3 let63)
  let let748 := (Or let405 (Or let386 (Or let365 (Or let171 let268))))
  let let749 := (Or let303 (Or let321 (Or let127 (Or let310 let144))))
  let let750 := (Eq e1 let177)
  let let751 := (Or let394 (Or let390 (Or let386 (Or let381 let376))))
  let let752 := (Or let410 (Or let391 (Or let321 (Or let362 let252))))
  let let753 := (Eq e4 let287)
  let let754 := (Or let304 (Or let391 (Or let387 (Or let382 let377))))
  let let755 := (Or let411 (Or let392 (Or let369 (Or let363 let240))))
  let let756 := (Or let182 (Or let411 (Or let407 (Or let401 let334))))
  let let757 := (And let644 (And let543 let640))
  let let758 := (And (And let644 let543) let640)
  let let759 := (Eq let528 e3)
  let let760 := (Not let256)
  let let761 := (Not let34)
  let let762 := (Not let89)
  let let763 := (Not let230)
  let let764 := (Not let235)
  let let765 := (Not let642)
  let let766 := (Not let758)
  let let767 := (Not let74)
  let let768 := (Not let92)
  let let769 := (Not let101)
  let let770 := (Not let545)
  let let771 := (Not let27)
  let let772 := (Not let51)
  let let773 := (Not let419)
  let let774 := (Not let110)
  let let775 := (Not let14)
  let let776 := (Not let656)
  let let777 := (And let558 (And let551 (And let533 (And let612 let734))))
  let let778 := (Eq And And)
  let let779 := (Not let664)
  let let780 := (Not let283)
  let let781 := (Not let551)
  let let782 := (Or let780 (Or let781 let779))
  let let783 := (Or let241 let782)
  let let784 := (Or let243 let782)
  let let785 := (Eq Or Or)
  let let786 := (And let242 (And let283 let551))
  let let787 := (Not let72)
  let let788 := (Not let645)
  let let789 := (Not let277)
  let let790 := (Not let734)
  let let791 := (Or let790 (Or let788 let789))
  let let792 := (Or let790 (Or let788 (Or let789 let337)))
  let let793 := (And let734 (And let645 let277))
  let let794 := (Not let516)
  let let795 := (Not let612)
  let let796 := (Or let795 let794)
  let let797 := (Or let323 let796)
  let let798 := (Or let325 let796)
  let let799 := (And let324 let612)
  let let800 := (Eq let323 False)
  let let801 := (Not let522)
  let let802 := (Not let579)
  let let803 := (Not let669)
  let let804 := (Not let721)
  let let805 := (Not let540)
  let let806 := (Not let603)
  let let807 := (Not let420)
  let let808 := (And let2 (And let807 (And let806 (And let53 (And let805 (And let94 (And let802 (And let804 (And let803 let59)))))))))
  let let809 := (Or let801 (Or let790 let579))
  let let810 := (And let522 let734)
  let let811 := (Or let522 let581)
  let let812 := (Or let138 let138)
  let let813 := (Or let138 let789)
  let let814 := (Not let99)
  let let815 := (Or let814 (Or let789 (Or let138 let1)))
  let let816 := (And let277 let86)
  let let817 := (And let99 let816)
  let let818 := (Or let789 let138)
  let let819 := (Or let138 let581)
  let let820 := (Or let138 (Or let581 let540))
  let let821 := (And let86 let30)
  let let822 := (Or let789 (Or let138 let46))
  let let823 := (Not let543)
  let let824 := (Or let823 let789)
  let let825 := (Or let789 (Or let823 let99))
  let let826 := (And let277 let543)
  let let827 := (Not let46)
  let let828 := (Or let138 (Or let99 (Or let827 (Or let30 let543))))
  let let829 := (Or let789 (Or let138 let801))
  let let830 := (Or let337 let829)
  let let831 := (Or let339 let829)
  let let832 := (And let338 let816)
  let let833 := (Not let535)
  let let834 := (Or let833 (Or let790 let52))
  let let835 := (And let535 let734)
  let let836 := (Not let587)
  let let837 := (Or let836 (Or let790 let669))
  let let838 := (And let587 let734)
  let let839 := (Not let356)
  let let840 := (Or let839 (Or let790 let58))
  let let841 := (And let356 let734)
  let let842 := (Or let356 let529)
  let let843 := (Or let522 (Or let587 let842))
  let let844 := (Or let30 (Or let645 let843))
  let let845 := (Not let22)
  let let846 := (Or let789 let845)
  let let847 := (Or let30 let846)
  let let848 := (Or let582 let846)
  let let849 := (And let581 let277)
  let let850 := (Or let516 let645)
  let let851 := (Or let543 (Or let86 (Or let30 let850)))
  let let852 := (Or let535 (Or let522 (Or let587 (Or let356 let734))))
  let let853 := (Or let417 (Or let23 (Or let521 (Or let8 let598))))
  let let854 := (Or let239 (Or let251 (Or let48 (Or let98 let328))))
  let let855 := (Or let264 (Or let108 (Or let236 (Or let741 let539))))
  let let856 := (Or let99 (Or let46 (Or let22 (Or let218 let601))))
  let let857 := (Or let201 (Or let743 (Or let322 (Or let612 let560))))
  let let858 := (Or let573 (Or let315 (Or let347 (Or let747 let176))))
  let let859 := (Or let549 (Or let527 (Or let606 (Or let548 let162))))
  let let860 := (Or let546 (Or let158 (Or let159 (Or let160 let578))))
  let let861 := (Or let49 (Or let32 (Or let148 (Or let90 let149))))
  let let862 := (Or let10 (Or let639 (Or let567 (Or let135 let71))))
  let let863 := (Or let118 (Or let126 (Or let533 (Or let128 let131))))
  let let864 := (Or let594 (Or let320 (Or let559 (Or let553 let753))))
  let let865 := (Or let652 (Or let651 (Or let650 (Or let649 let648))))
  let let866 := (Or let25 (Or let657 (Or let87 (Or let640 let654))))
  let let867 := (Or let72 (Or let664 (Or let254 (Or let661 let231))))
  let let868 := (Or let534 (Or let613 (Or let605 (Or let672 let668))))
  let let869 := (Or let682 (Or let551 (Or let681 (Or let680 let677))))
  let let870 := (Or let597 (Or let692 (Or let687 (Or let686 let685))))
  let let871 := (Or let699 (Or let16 (Or let644 (Or let28 let693))))
  let let872 := (Or let726 (Or let725 (Or let233 (Or let722 let253))))
  let let873 := (Or let596 (Or let12 (Or let562 (Or let728 let727))))
  let let874 := (Or let523 (Or let590 (Or let345 (Or let631 let730))))
  let let875 := (Or let558 (Or let750 (Or let732 (Or let572 let731))))
  let let876 := (And let875 (And let874 (And let873 (And let872 (And let871 (And let870 (And let869 (And let868 (And let867 (And let866 (And let865 (And let864 (And let863 (And let862 (And let861 (And let860 (And let859 (And let858 (And let857 (And let856 (And let855 (And let854 (And let853 (And let851 let852))))))))))))))))))))))))
  let let877 := (Not let741)
  let let878 := (Or let823 let877)
  let let879 := (Or let529 let878)
  let let880 := (Or let531 let878)
  let let881 := (And let530 let543)
  let let882 := (Eq let741 False)
  let let883 := (Eq let529 False)
  let let884 := (Eq let107 let528)
  let let885 := (Eq e4 e4)
  let let886 := (Eq e3 e3)
  let let887 := (Not let280)
  let let888 := (Or let823 let887)
  let let889 := (Or let823 (Or let887 let35))
  let let890 := (Or let529 let889)
  let let891 := (Or let531 let889)
  let let892 := (And let530 (And let543 let280))
  let let893 := (Eq let28 False)
  let let894 := (Or let789 let827)
  let let895 := (Or let86 let894)
  let let896 := (Or let139 let894)
  let let897 := (And let138 let277)
  let let898 := (Eq let86 False)
  let let899 := (Eq e1 e1)
  let let900 := (Not let657)
  let let901 := (Not let279)
  let let902 := (Or let901 (Or let781 let900))
  let let903 := (Or let121 let902)
  let let904 := (Or let123 let902)
  let let905 := (And let122 (And let279 let551))
  let let906 := (Eq let121 False)
  let let907 := (Or let46 let522)
  let let908 := (Or let32 let907)
  let let909 := (Or let16 (Or let657 let908))
  let let910 := (Or let693 (Or let654 (Or let149 (Or let601 let734))))
  let let911 := (Or let539 (Or let328 (Or let598 (Or let645 let734))))
  let let912 := (Or let218 let356)
  let let913 := (Or let28 (Or let640 (Or let90 let912)))
  let let914 := (Or let516 let356)
  let let915 := (Or let741 (Or let98 (Or let8 let914)))
  let let916 := (Or let644 (Or let87 (Or let148 (Or let22 let587))))
  let let917 := (Or let236 (Or let48 (Or let521 (Or let30 let587))))
  let let918 := (Or let108 (Or let251 (Or let23 (Or let86 let522))))
  let let919 := (Or let699 (Or let25 (Or let49 (Or let99 let535))))
  let let920 := (Or let264 (Or let239 (Or let417 (Or let543 let535))))
  let let921 := (Or let560 let645)
  let let922 := (Or let253 (Or let231 (Or let71 let921)))
  let let923 := (Or let578 (Or let162 (Or let176 (Or let560 let601))))
  let let924 := (Or let722 (Or let661 (Or let135 (Or let612 let516))))
  let let925 := (Or let160 (Or let548 (Or let747 (Or let612 let218))))
  let let926 := (Or let233 (Or let254 (Or let567 (Or let322 let30))))
  let let927 := (Or let159 (Or let606 (Or let347 (Or let322 let22))))
  let let928 := (Or let725 (Or let664 (Or let639 (Or let743 let86))))
  let let929 := (Or let158 (Or let527 (Or let315 (Or let743 let46))))
  let let930 := (Or let726 (Or let72 (Or let10 (Or let201 let543))))
  let let931 := (Or let546 (Or let549 (Or let573 (Or let201 let99))))
  let let932 := (Or let727 (Or let668 (Or let131 (Or let176 let598))))
  let let933 := (Or let648 (Or let753 (Or let131 (Or let71 let149))))
  let let934 := (Or let728 (Or let672 (Or let128 (Or let747 let8))))
  let let935 := (Or let649 (Or let553 (Or let128 (Or let135 let90))))
  let let936 := (Or let562 (Or let605 (Or let533 (Or let347 let521))))
  let let937 := (Or let650 (Or let559 (Or let533 (Or let567 let148))))
  let let938 := (Or let12 (Or let613 (Or let126 (Or let315 let23))))
  let let939 := (Or let651 (Or let320 (Or let126 (Or let639 let32))))
  let let940 := (Or let596 (Or let534 (Or let118 (Or let573 let417))))
  let let941 := (Or let652 (Or let594 (Or let118 (Or let10 let49))))
  let let942 := (Or let730 (Or let677 (Or let753 (Or let162 let328))))
  let let943 := (Or let685 (Or let677 (Or let668 (Or let231 let654))))
  let let944 := (Or let631 (Or let680 (Or let553 (Or let548 let98))))
  let let945 := (Or let686 (Or let680 (Or let672 (Or let661 let640))))
  let let946 := (Or let345 (Or let681 (Or let559 (Or let606 let48))))
  let let947 := (Or let687 (Or let681 (Or let605 (Or let254 let87))))
  let let948 := (Or let590 (Or let551 (Or let320 (Or let527 let251))))
  let let949 := (Or let692 (Or let551 (Or let613 (Or let664 let657))))
  let let950 := (Or let523 (Or let682 (Or let594 (Or let549 let239))))
  let let951 := (Or let597 (Or let682 (Or let534 (Or let72 let25))))
  let let952 := (Or let731 (Or let685 (Or let648 (Or let578 let539))))
  let let953 := (Or let731 (Or let730 (Or let727 (Or let253 let693))))
  let let954 := (Or let572 (Or let686 (Or let649 (Or let160 let741))))
  let let955 := (Or let572 (Or let631 (Or let728 (Or let722 let28))))
  let let956 := (Or let732 (Or let687 (Or let650 (Or let159 let236))))
  let let957 := (Or let732 (Or let345 (Or let562 (Or let233 let644))))
  let let958 := (Or let750 (Or let692 (Or let651 (Or let158 let108))))
  let let959 := (Or let750 (Or let590 (Or let12 (Or let725 let16))))
  let let960 := (Or let558 (Or let597 (Or let652 (Or let546 let264))))
  let let961 := (Or let558 (Or let523 (Or let596 (Or let726 let699))))
  let let962 := (And let961 (And let960 (And let959 (And let958 (And let957 (And let956 (And let955 (And let954 (And let953 (And let952 (And let951 (And let950 (And let949 (And let948 (And let947 (And let946 (And let945 (And let944 (And let943 (And let942 (And let941 (And let940 (And let939 (And let938 (And let937 (And let936 (And let935 (And let934 (And let933 (And let932 (And let931 (And let930 (And let929 (And let928 (And let927 (And let926 (And let925 (And let924 (And let923 (And let922 (And let920 (And let919 (And let918 (And let909 (And let917 (And let916 (And let915 (And let913 (And let911 let910)))))))))))))))))))))))))))))))))))))))))))))))))
  let let963 := (Not let90)
  let let964 := (Not let544)
  let let965 := (Not let218)
  let let966 := (Or let789 (Or let795 let965))
  let let967 := (Or let323 let966)
  let let968 := (Or let325 let966)
  let let969 := (And let324 (And let277 let612))
  let let970 := (Not let640)
  let let971 := (Not let644)
  let let972 := (Not let757)
  let let973 := (Not let148)
  let let974 := (Not let278)
  let let975 := (Not let533)
  let let976 := (Or let974 (Or let975 let973))
  let let977 := (Or let111 let976)
  let let978 := (Or let113 let976)
  let let979 := (And let112 (And let278 let533))
  let let980 := (Eq let111 False)
  let let981 := (Not let108)
  let let982 := (Not let87)
  let let983 := (Not let109)
  let let984 := (Not let251)
  let let985 := (Or let781 let984)
  let let986 := (Or let121 let985)
  let let987 := (Or let123 let985)
  let let988 := (And let122 let551)
  let let989 := (Not let23)
  let let990 := (Or let974 let989)
  let let991 := (Or let32 let990)
  let let992 := (Or let103 let990)
  let let993 := (And let102 let278)
  let let994 := (Not let98)
  let let995 := (Not let100)
  let let996 := (Not let8)
  let let997 := (Or let102 (Or let974 let996))
  let let998 := (Or let93 let997)
  let let999 := (Or let95 let997)
  let let1000 := (And let94 (And let32 let278))
  let let1001 := (Or let138 let901)
  let let1002 := (Or let901 let970)
  let let1003 := (Or let138 let1002)
  let let1004 := (Or let529 let1003)
  let let1005 := (Or let531 let1003)
  let let1006 := (And let530 (And let86 let279))
  let let1007 := (Eq let47 let528)
  let let1008 := (Or let963 let138)
  let let1009 := (Not let25)
  let let1010 := (Not let91)
  let let1011 := (Not let699)
  let let1012 := (Not let558)
  let let1013 := (Or let887 (Or let1012 let1011))
  let let1014 := (Or let257 let1013)
  let let1015 := (Or let259 let1013)
  let let1016 := (And let258 (And let280 let558))
  let let1017 := (Eq let257 False)
  let let1018 := (Not let49)
  let let1019 := (Or let1018 let963)
  let let1020 := (Or let1018 (Or let963 let603))
  let let1021 := (And let49 let90)
  let let1022 := (Not let88)
  let let1023 := (Or let971 let35)
  let let1024 := (Or let971 (Or let35 let721))
  let let1025 := (And let644 let28)
  let let1026 := (Or let901 (Or let138 (Or let530 let640)))
  let let1027 := (And let279 (And let86 let529))
  let let1028 := (Not let116)
  let let1029 := (Not let417)
  let let1030 := (Or let1028 (Or let75 let1029))
  let let1031 := (Or let80 let1030)
  let let1032 := (Or let82 let1030)
  let let1033 := (And let81 (And let116 let10))
  let let1034 := (Eq let7 let7)
  let let1035 := (Not let239)
  let let1036 := (Or let1035 let901)
  let let1037 := (Or let75 (Or let795 (Or let970 (Or let901 let1035))))
  let let1038 := (Or let482 let1037)
  let let1039 := (Or let585 let1037)
  let let1040 := (And let483 (And let10 (And let612 (And let640 let279))))
  let let1041 := (Eq let47 let39)
  let let1042 := (Eq let39 let47)
  let let1043 := (Eq let39 let24)
  let let1044 := (Eq let24 let39)
  let let1045 := (Or let970 let901)
  let let1046 := (Not let264)
  let let1047 := (Or let1012 let1046)
  let let1048 := (Or let257 let1047)
  let let1049 := (Or let259 let1047)
  let let1050 := (And let258 let558)
  let let1051 := (Or let10 let543)
  let let1052 := (Not let201)
  let let1053 := (Or let795 let1052)
  let let1054 := (Or let1052 (Or let795 let603))
  let let1055 := (And let201 let612)
  let let1056 := (Not let726)
  let let1057 := (Not let284)
  let let1058 := (Or let1057 (Or let1012 let1056))
  let let1059 := (Or let341 let1058)
  let let1060 := (Or let343 let1058)
  let let1061 := (And let342 (And let284 let558))
  let let1062 := (Eq let341 False)
  let let1063 := (Or let201 (Or let10 let789))
  let let1064 := (Not let573)
  let let1065 := (Or let1028 let1064)
  let let1066 := (Or let10 let1065)
  let let1067 := (Or let76 let1065)
  let let1068 := (And let75 let116)
  let let1069 := (Or let573 (Or let99 let201))
  let let1070 := (Not let546)
  let let1071 := (Or let1012 let1070)
  let let1072 := (Or let341 let1071)
  let let1073 := (Or let343 let1071)
  let let1074 := (And let342 let558)
  let let1075 := (Not let71)
  let let1076 := (Not let73)
  let let1077 := (Not let233)
  let let1078 := (Not let655)
  let let1079 := (Not let567)
  let let1080 := (Or let1028 (Or let975 let1079))
  let let1081 := (Or let65 let1080)
  let let1082 := (Or let67 let1080)
  let let1083 := (And let66 (And let116 let533))
  let let1084 := (Not let254)
  let let1085 := (Not let253)
  let let1086 := (Not let255)
  let let1087 := (Not let560)
  let let1088 := (Or let795 let1087)
  let let1089 := (Or let58 let1088)
  let let1090 := (Or let60 let1088)
  let let1091 := (And let59 let612)
  let let1092 := (Not let231)
  let let1093 := (Or let787 let1092)
  let let1094 := (Or let52 let1093)
  let let1095 := (Or let54 let1093)
  let let1096 := (And let53 let72)
  let let1097 := (Not let236)
  let let1098 := (Not let322)
  let let1099 := (Or let795 let1098)
  let let1100 := (Or let887 (Or let1097 (Or let970 let1099)))
  let let1101 := (Or let164 let1100)
  let let1102 := (Or let166 let1100)
  let let1103 := (And let165 (And let280 (And let236 (And let640 let612))))
  let let1104 := (Not let521)
  let let1105 := (Or let975 let1104)
  let let1106 := (Or let111 let1105)
  let let1107 := (Or let113 let1105)
  let let1108 := (And let112 let533)
  let let1109 := (Not let48)
  let let1110 := (Not let50)
  let let1111 := (Or let901 (Or let138 (Or let795 (Or let787 let1009))))
  let let1112 := (Or let530 (Or let41 let1111))
  let let1113 := (Or let530 (Or let43 let1111))
  let let1114 := (And let529 (And let42 (And let279 (And let86 (And let612 let72)))))
  let let1115 := (Or let28 let522)
  let let1116 := (Or let86 let1115)
  let let1117 := (Or let887 let877)
  let let1118 := (Or let28 let1117)
  let let1119 := (Or let36 let1117)
  let let1120 := (And let35 let280)
  let let1121 := (Or let102 let823)
  let let1122 := (Or let522 let86)
  let let1123 := (Or let581 let86)
  let let1124 := (Or let581 let789)
  let let1125 := (Or let789 (Or let581 let22))
  let let1126 := (And let277 let30)
  let let1127 := (Or let581 let581)
  let let1128 := (Or let581 let974)
  let let1129 := (Or let581 (Or let974 let963))
  let let1130 := (Or let529 let1129)
  let let1131 := (Or let531 let1129)
  let let1132 := (And let530 (And let30 let278))
  let let1133 := (Not let33)
  let let1134 := (Or let17 let35)
  let let1135 := (Or let17 (Or let35 let93))
  let let1136 := (And let16 let28)
  let let1137 := (Or let970 let581)
  let let1138 := (Not let641)
  let let1139 := (Or let901 (Or let970 let98))
  let let1140 := (And let279 let640)
  let let1141 := (Or let86 (Or let522 (Or let845 (Or let49 (Or let535 (Or let994 let46))))))
  let let1142 := (Or let845 let994)
  let let1143 := (Not let229)
  let let1144 := (Not let26)
  let let1145 := (Or let887 let981)
  let let1146 := (Or let16 let1145)
  let let1147 := (Or let18 let1145)
  let let1148 := (And let17 let280)
  let let1149 := (Not let126)
  let let1150 := (Or let789 (Or let581 (Or let975 let1149)))
  let let1151 := (Or let86 let1150)
  let let1152 := (Or let139 let1150)
  let let1153 := (And let138 (And let277 (And let30 let533)))
  let let1154 := (Or let974 (Or let581 (Or let530 let90)))
  let let1155 := (And let30 let529)
  let let1156 := (And let278 let1155)
  let let1157 := (Eq let528 let7)
  let let1158 := (Or let581 let530)
  let let1159 := (Or let530 let581)
  let let1160 := (Or let581 (Or let530 let8))
  let let1161 := (Or let17 let845)
  let let1162 := (Not let418)
  let let1163 := (Or let901 (Or let1035 (Or let974 (Or let581 (Or let530 let1053)))))
  let let1164 := (Or let133 let1163)
  let let1165 := (Or let565 let1163)
  let let1166 := (And let477 (And let279 (And let239 (And let278 (And let30 (And let529 let612))))))
  let let1167 := (Or let901 (Or let1035 (Or let787 let452)))
  let let1168 := (And let279 (And let239 let72))
  let let1169 := (Or let75 let996)
  let let1170 := (Not let13)
  let let1171 := (Not let613)
  let let1172 := (Not let288)
  let let1173 := (Or let1172 (Or let781 let1171))
  let let1174 := (Or let317 let1173)
  let let1175 := (Or let517 let1173)
  let let1176 := (And let501 (And let288 let551))
  let let1177 := (Not let315)
  let let1178 := (Or let75 (Or let1028 let1177))
  let let1179 := (Or let1 let1178)
  let let1180 := (Or let3 let1178)
  let let1181 := (And let2 (And let10 let116))
  let let1182 := (Or let823 (Or let787 let484))
  let let1183 := (And let543 let72)
  let let1184 := (Or let982 (Or let1084 let452))
  let let1185 := (And let87 let254)
  let let1186 := (Or let1098 (Or let795 let721))
  let let1187 := (And let322 let612)
  let let1188 := (Not let234)
  let let1189 := (Not let661)
  let let1190 := (Or let795 let1189)
  let let1191 := (Or let795 (Or let1189 let41))
  let let1192 := (And let612 let661)
fun lean_r0 : (Eq let5 let4) => -- THEORY_REWRITE_BOOL
fun lean_r1 : let5 => -- THEORY_REWRITE_BOOL
fun lean_r2 : (Eq let6 True) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq let14 let13) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq let20 let19) => -- THEORY_REWRITE_BOOL
fun lean_r5 : let20 => -- THEORY_REWRITE_BOOL
fun lean_r6 : (Eq let27 let26) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq let34 let33) => -- THEORY_REWRITE_BOOL
fun lean_r8 : let37 => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let38 True) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq let45 let44) => -- THEORY_REWRITE_BOOL
fun lean_r11 : let45 => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let51 let50) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let56 let55) => -- THEORY_REWRITE_BOOL
fun lean_r14 : let56 => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let57 True) => -- THEORY_REWRITE_BOOL
fun lean_r16 : let61 => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let62 True) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let69 let68) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let70 True) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let74 let73) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq let78 let77) => -- THEORY_REWRITE_BOOL
fun lean_r22 : let78 => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let79 True) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let84 let83) => -- THEORY_REWRITE_BOOL
fun lean_r25 : let84 => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq let85 True) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let89 let88) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let92 let91) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let97 let96) => -- THEORY_REWRITE_BOOL
fun lean_r30 : let97 => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let101 let100) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let105 let104) => -- THEORY_REWRITE_BOOL
fun lean_r33 : let105 => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let106 True) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let110 let109) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let115 let114) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq let117 let116) => -- THEORY_REWRITE_UF
fun lean_r38 : (Eq let119 let118) => -- THEORY_REWRITE_UF
fun lean_r39 : (Eq let125 let124) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let127 let126) => -- THEORY_REWRITE_UF
fun lean_r41 : let125 => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq let129 let128) => -- THEORY_REWRITE_UF
fun lean_r43 : (Eq let130 True) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let132 let131) => -- THEORY_REWRITE_UF
fun lean_r45 : (Eq let134 True) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let136 let135) => -- THEORY_REWRITE_UF
fun lean_r47 : (Eq let137 let71) => -- THEORY_REWRITE_UF
fun lean_r48 : let140 => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let147 let146) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq let144 let32) => -- THEORY_REWRITE_UF
fun lean_r51 : (Eq let143 let148) => -- THEORY_REWRITE_UF
fun lean_r52 : (Eq let142 let90) => -- THEORY_REWRITE_UF
fun lean_r53 : (Eq let141 let149) => -- THEORY_REWRITE_UF
fun lean_r54 : (Eq let157 let156) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq let154 let158) => -- THEORY_REWRITE_UF
fun lean_r56 : (Eq let153 let159) => -- THEORY_REWRITE_UF
fun lean_r57 : (Eq let152 let160) => -- THEORY_REWRITE_UF
fun lean_r58 : (Eq let163 let162) => -- THEORY_REWRITE_UF
fun lean_r59 : (Eq let168 let167) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let175 let174) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq let169 let176) => -- THEORY_REWRITE_UF
fun lean_r62 : (Eq let184 let183) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let193 let192) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq let200 let199) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq let198 let201) => -- THEORY_REWRITE_UF
fun lean_r66 : (Eq let209 let208) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq let210 True) => -- THEORY_REWRITE_BOOL
fun lean_r68 : (Eq let217 let216) => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq let215 let99) => -- THEORY_REWRITE_UF
fun lean_r70 : (Eq let214 let46) => -- THEORY_REWRITE_UF
fun lean_r71 : (Eq let212 let218) => -- THEORY_REWRITE_UF
fun lean_r72 : (Eq let225 let224) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let228 let227) => -- THEORY_REWRITE_BOOL
fun lean_r74 : (Eq let230 let229) => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq let222 let108) => -- THEORY_REWRITE_UF
fun lean_r76 : (Eq let235 let234) => -- THEORY_REWRITE_BOOL
fun lean_r77 : (Eq let221 let236) => -- THEORY_REWRITE_UF
fun lean_r78 : (Eq let238 let237) => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq let240 let239) => -- THEORY_REWRITE_UF
fun lean_r80 : (Eq let245 let244) => -- THEORY_REWRITE_BOOL
fun lean_r81 : (Eq let250 let249) => -- THEORY_REWRITE_BOOL
fun lean_r82 : (Eq let252 let251) => -- THEORY_REWRITE_UF
fun lean_r83 : (Eq let256 let255) => -- THEORY_REWRITE_BOOL
fun lean_r84 : let245 => -- THEORY_REWRITE_BOOL
fun lean_r85 : (Eq let261 let260) => -- THEORY_REWRITE_BOOL
fun lean_r86 : (Eq let262 let48) => -- THEORY_REWRITE_UF
fun lean_r87 : let261 => -- THEORY_REWRITE_BOOL
fun lean_r88 : (Eq let263 let98) => -- THEORY_REWRITE_UF
fun lean_r89 : (Eq let223 let264) => -- THEORY_REWRITE_UF
fun lean_r90 : (Eq let265 True) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq let272 let271) => -- THEORY_REWRITE_BOOL
fun lean_r92 : (Eq let269 let23) => -- THEORY_REWRITE_UF
fun lean_r93 : (Eq let267 let8) => -- THEORY_REWRITE_UF
fun lean_r94 : (Eq let275 let274) => -- THEORY_REWRITE_BOOL
fun lean_r95 : (Eq let302 let301) => -- THEORY_REWRITE_BOOL
fun lean_r96 : (Eq let306 let305) => -- THEORY_REWRITE_BOOL
fun lean_r97 : (Eq let308 let307) => -- THEORY_REWRITE_BOOL
fun lean_r98 : (Eq let313 let312) => -- THEORY_REWRITE_BOOL
fun lean_r99 : (Eq let314 True) => -- THEORY_REWRITE_BOOL
fun lean_r100 : (Eq let172 let315) => -- THEORY_REWRITE_UF
fun lean_r101 : (Eq let292 let288) => -- THEORY_REWRITE_UF
fun lean_r102 : (Eq let316 let58) => -- THEORY_REWRITE_UF
fun lean_r103 : (Eq let318 True) => -- THEORY_REWRITE_BOOL
fun lean_r104 : (Eq let319 let86) => -- THEORY_REWRITE_UF
fun lean_r105 : (Eq let321 let320) => -- THEORY_REWRITE_UF
fun lean_r106 : (Eq let196 let322) => -- THEORY_REWRITE_UF
fun lean_r107 : let326 => -- THEORY_REWRITE_BOOL
fun lean_r108 : (Eq let298 let289) => -- THEORY_REWRITE_UF
fun lean_r109 : (Eq let327 True) => -- THEORY_REWRITE_BOOL
fun lean_r110 : (Eq let329 let328) => -- THEORY_REWRITE_UF
fun lean_r111 : (Eq let336 let335) => -- THEORY_REWRITE_BOOL
fun lean_r112 : let340 => -- THEORY_REWRITE_BOOL
fun lean_r113 : let344 => -- THEORY_REWRITE_BOOL
fun lean_r114 : (Eq let346 let345) => -- THEORY_REWRITE_UF
fun lean_r115 : (Eq let171 let347) => -- THEORY_REWRITE_UF
fun lean_r116 : (Eq let291 let283) => -- THEORY_REWRITE_UF
fun lean_r117 : (Eq let352 let351) => -- THEORY_REWRITE_BOOL
fun lean_r118 : (Eq let353 let30) => -- THEORY_REWRITE_UF
fun lean_r119 : (Eq let355 let354) => -- THEORY_REWRITE_BOOL
fun lean_r120 : (Eq let204 let356) => -- THEORY_REWRITE_UF
fun lean_r121 : (Eq let414 let413) => -- THEORY_REWRITE_BOOL
fun lean_r122 : (Eq let290 let279) => -- THEORY_REWRITE_UF
fun lean_r123 : (Eq let416 let415) => -- THEORY_REWRITE_BOOL
fun lean_r124 : (Eq let270 let417) => -- THEORY_REWRITE_UF
fun lean_r125 : (Eq let419 let418) => -- THEORY_REWRITE_BOOL
fun lean_r126 : (Eq let421 let420) => -- THEORY_REWRITE_UF
fun lean_r127 : (Eq let406 let12) => -- THEORY_REWRITE_UF
fun lean_r128 : (Eq let515 let514) => -- THEORY_REWRITE_BOOL
fun lean_r129 : (Eq let358 let516) => -- THEORY_REWRITE_UF
fun lean_r130 : (Eq let519 let518) => -- THEORY_REWRITE_BOOL
fun lean_r131 : (Eq let359 let520) => -- THEORY_REWRITE_BOOL
fun lean_r132 : (Eq let268 let521) => -- THEORY_REWRITE_UF
fun lean_r133 : (Eq let206 let522) => -- THEORY_REWRITE_UF
fun lean_r134 : (Eq let411 let523) => -- THEORY_REWRITE_UF
fun lean_r135 : let115 => -- THEORY_REWRITE_BOOL
fun lean_r136 : (Eq let285 let278) => -- THEORY_REWRITE_UF
fun lean_r137 : (Eq let140 let524) => -- THEORY_REWRITE_BOOL
fun lean_r138 : (Eq let526 let525) => -- THEORY_REWRITE_BOOL
fun lean_r139 : (Eq let362 let527) => -- THEORY_REWRITE_UF
fun lean_r140 : let532 => -- THEORY_REWRITE_BOOL
fun lean_r141 : (Eq let365 let533) => -- THEORY_REWRITE_UF
fun lean_r142 : (Eq let388 let534) => -- THEORY_REWRITE_UF
fun lean_r143 : (Eq let207 let535) => -- THEORY_REWRITE_UF
fun lean_r144 : (Eq let412 let536) => -- THEORY_REWRITE_BOOL
fun lean_r145 : let69 => -- THEORY_REWRITE_BOOL
fun lean_r146 : (Eq let538 let537) => -- THEORY_REWRITE_BOOL
fun lean_r147 : (Eq let219 let539) => -- THEORY_REWRITE_UF
fun lean_r148 : (Eq let541 let540) => -- THEORY_REWRITE_UF
fun lean_r149 : (Eq let402 let542) => -- THEORY_REWRITE_BOOL
fun lean_r150 : (Eq let545 let544) => -- THEORY_REWRITE_BOOL
fun lean_r151 : (Eq let155 let546) => -- THEORY_REWRITE_UF
fun lean_r152 : (Eq let547 let52) => -- THEORY_REWRITE_UF
fun lean_r153 : (Eq let226 let548) => -- THEORY_REWRITE_UF
fun lean_r154 : (Eq let363 let549) => -- THEORY_REWRITE_UF
fun lean_r155 : (Eq let532 let550) => -- THEORY_REWRITE_BOOL
fun lean_r156 : (Eq let391 let551) => -- THEORY_REWRITE_UF
fun lean_r157 : (Eq let389 let552) => -- THEORY_REWRITE_BOOL
fun lean_r158 : (Eq let286 True) => -- THEORY_REWRITE_UF
fun lean_r159 : (Eq let348 let553) => -- THEORY_REWRITE_UF
fun lean_r160 : (Eq let364 let554) => -- THEORY_REWRITE_BOOL
fun lean_r161 : (Eq let555 let1) => -- THEORY_REWRITE_UF
fun lean_r162 : (Eq let557 let556) => -- THEORY_REWRITE_BOOL
fun lean_r163 : (Eq let182 let558) => -- THEORY_REWRITE_UF
fun lean_r164 : (Eq let368 let559) => -- THEORY_REWRITE_UF
fun lean_r165 : (Eq let194 let560) => -- THEORY_REWRITE_UF
fun lean_r166 : (Eq let561 True) => -- THEORY_REWRITE_BOOL
fun lean_r167 : (Eq let405 let562) => -- THEORY_REWRITE_UF
fun lean_r168 : (Eq let564 let563) => -- THEORY_REWRITE_BOOL
fun lean_r169 : let566 => -- THEORY_REWRITE_BOOL
fun lean_r170 : (Eq let309 let567) => -- THEORY_REWRITE_UF
fun lean_r171 : (Eq let360 let568) => -- THEORY_REWRITE_BOOL
fun lean_r172 : (Eq let569 True) => -- THEORY_REWRITE_BOOL
fun lean_r173 : (Eq let331 let28) => -- THEORY_REWRITE_UF
fun lean_r174 : (Eq let571 let570) => -- THEORY_REWRITE_BOOL
fun lean_r175 : (Eq let276 True) => -- THEORY_REWRITE_UF
fun lean_r176 : (Eq let179 let572) => -- THEORY_REWRITE_UF
fun lean_r177 : let168 => -- THEORY_REWRITE_BOOL
fun lean_r178 : (Eq let173 let573) => -- THEORY_REWRITE_UF
fun lean_r179 : (Eq let293 True) => -- THEORY_REWRITE_UF
fun lean_r180 : (Eq let213 let22) => -- THEORY_REWRITE_UF
fun lean_r181 : (Eq let575 let574) => -- THEORY_REWRITE_BOOL
fun lean_r182 : let519 => -- THEORY_REWRITE_BOOL
fun lean_r183 : (Eq let273 let543) => -- THEORY_REWRITE_UF
fun lean_r184 : (Eq let576 True) => -- THEORY_REWRITE_BOOL
fun lean_r185 : (Eq let366 let577) => -- THEORY_REWRITE_BOOL
fun lean_r186 : (Eq let281 let277) => -- THEORY_REWRITE_UF
fun lean_r187 : (Eq let151 let578) => -- THEORY_REWRITE_UF
fun lean_r188 : (Eq let580 let579) => -- THEORY_REWRITE_UF
fun lean_r189 : (Eq let311 let10) => -- THEORY_REWRITE_UF
fun lean_r190 : (Eq let584 let583) => -- THEORY_REWRITE_BOOL
fun lean_r191 : let586 => -- THEORY_REWRITE_BOOL
fun lean_r192 : (Eq let333 let16) => -- THEORY_REWRITE_UF
fun lean_r193 : (Eq let205 let587) => -- THEORY_REWRITE_UF
fun lean_r194 : (Eq let340 let588) => -- THEORY_REWRITE_BOOL
fun lean_r195 : (Eq let344 let589) => -- THEORY_REWRITE_BOOL
fun lean_r196 : (Eq let410 let590) => -- THEORY_REWRITE_UF
fun lean_r197 : (Eq let592 let591) => -- THEORY_REWRITE_BOOL
fun lean_r198 : (Eq let593 True) => -- THEORY_REWRITE_BOOL
fun lean_r199 : (Eq let282 True) => -- THEORY_REWRITE_UF
fun lean_r200 : (Eq let369 let594) => -- THEORY_REWRITE_UF
fun lean_r201 : (Eq let299 let295) => -- THEORY_REWRITE_UF
fun lean_r202 : (Eq let595 let93) => -- THEORY_REWRITE_UF
fun lean_r203 : (Eq let407 let596) => -- THEORY_REWRITE_UF
fun lean_r204 : (Eq let145 let49) => -- THEORY_REWRITE_UF
fun lean_r205 : (Eq let395 let597) => -- THEORY_REWRITE_UF
fun lean_r206 : (Eq let300 True) => -- THEORY_REWRITE_UF
fun lean_r207 : (Eq let266 let598) => -- THEORY_REWRITE_UF
fun lean_r208 : (Eq let396 let599) => -- THEORY_REWRITE_BOOL
fun lean_r209 : (Eq let61 let600) => -- THEORY_REWRITE_BOOL
fun lean_r210 : (Eq let211 let601) => -- THEORY_REWRITE_UF
fun lean_r211 : (Eq let408 let602) => -- THEORY_REWRITE_BOOL
fun lean_r212 : (Eq let604 let603) => -- THEORY_REWRITE_UF
fun lean_r213 : (Eq let386 let605) => -- THEORY_REWRITE_UF
fun lean_r214 : (Eq let361 let606) => -- THEORY_REWRITE_UF
fun lean_r215 : (Eq let607 True) => -- THEORY_REWRITE_BOOL
fun lean_r216 : (Eq let609 let608) => -- THEORY_REWRITE_BOOL
fun lean_r217 : (Eq let611 let610) => -- THEORY_REWRITE_BOOL
fun lean_r218 : (Eq let195 let612) => -- THEORY_REWRITE_UF
fun lean_r219 : (Eq let387 let613) => -- THEORY_REWRITE_UF
fun lean_r220 : (Eq let614 True) => -- THEORY_REWRITE_BOOL
fun lean_r221 : (Eq let628 let627) => -- THEORY_REWRITE_BOOL
fun lean_r222 : (Eq let629 True) => -- THEORY_REWRITE_BOOL
fun lean_r223 : (Eq let630 True) => -- THEORY_REWRITE_BOOL
fun lean_r224 : (Eq let350 let631) => -- THEORY_REWRITE_UF
fun lean_r225 : (Eq let633 let632) => -- THEORY_REWRITE_BOOL
fun lean_r226 : (Eq let635 let634) => -- THEORY_REWRITE_BOOL
fun lean_r227 : (Eq let566 let636) => -- THEORY_REWRITE_BOOL
fun lean_r228 : (Eq let638 let637) => -- THEORY_REWRITE_BOOL
fun lean_r229 : (Eq let310 let639) => -- THEORY_REWRITE_UF
fun lean_r230 : (Eq let642 let641) => -- THEORY_REWRITE_BOOL
fun lean_r231 : let584 => -- THEORY_REWRITE_BOOL
fun lean_r232 : (Eq let643 True) => -- THEORY_REWRITE_BOOL
fun lean_r233 : (Eq let332 let644) => -- THEORY_REWRITE_UF
fun lean_r234 : (Eq let357 let645) => -- THEORY_REWRITE_UF
fun lean_r235 : (Eq let393 let646) => -- THEORY_REWRITE_BOOL
fun lean_r236 : (Eq let370 let647) => -- THEORY_REWRITE_BOOL
fun lean_r237 : (Eq let371 let648) => -- THEORY_REWRITE_UF
fun lean_r238 : (Eq let247 let649) => -- THEORY_REWRITE_UF
fun lean_r239 : (Eq let372 let650) => -- THEORY_REWRITE_UF
fun lean_r240 : (Eq let303 let651) => -- THEORY_REWRITE_UF
fun lean_r241 : (Eq let373 let652) => -- THEORY_REWRITE_UF
fun lean_r242 : (Eq let374 let653) => -- THEORY_REWRITE_BOOL
fun lean_r243 : (Eq let185 let654) => -- THEORY_REWRITE_UF
fun lean_r244 : (Eq let656 let655) => -- THEORY_REWRITE_BOOL
fun lean_r245 : (Eq let375 let640) => -- THEORY_REWRITE_UF
fun lean_r246 : (Eq let376 let87) => -- THEORY_REWRITE_UF
fun lean_r247 : (Eq let377 let657) => -- THEORY_REWRITE_UF
fun lean_r248 : (Eq let296 let280) => -- THEORY_REWRITE_UF
fun lean_r249 : (Eq let378 let25) => -- THEORY_REWRITE_UF
fun lean_r250 : (Eq let297 let284) => -- THEORY_REWRITE_UF
fun lean_r251 : (Eq let659 let658) => -- THEORY_REWRITE_BOOL
fun lean_r252 : (Eq let379 let660) => -- THEORY_REWRITE_BOOL
fun lean_r253 : (Eq let186 let231) => -- THEORY_REWRITE_UF
fun lean_r254 : (Eq let380 let661) => -- THEORY_REWRITE_UF
fun lean_r255 : (Eq let381 let254) => -- THEORY_REWRITE_UF
fun lean_r256 : (Eq let663 let662) => -- THEORY_REWRITE_BOOL
fun lean_r257 : (Eq let382 let664) => -- THEORY_REWRITE_UF
fun lean_r258 : (Eq let383 let72) => -- THEORY_REWRITE_UF
fun lean_r259 : (Eq let666 let665) => -- THEORY_REWRITE_BOOL
fun lean_r260 : (Eq let384 let667) => -- THEORY_REWRITE_BOOL
fun lean_r261 : (Eq let188 let668) => -- THEORY_REWRITE_UF
fun lean_r262 : (Eq let616 let669) => -- THEORY_REWRITE_UF
fun lean_r263 : (Eq let671 let670) => -- THEORY_REWRITE_BOOL
fun lean_r264 : (Eq let385 let672) => -- THEORY_REWRITE_UF
fun lean_r265 : (Eq let674 let673) => -- THEORY_REWRITE_BOOL
fun lean_r266 : (Eq let676 let675) => -- THEORY_REWRITE_BOOL
fun lean_r267 : (Eq let189 let677) => -- THEORY_REWRITE_UF
fun lean_r268 : (Eq let679 let678) => -- THEORY_REWRITE_BOOL
fun lean_r269 : (Eq let349 let680) => -- THEORY_REWRITE_UF
fun lean_r270 : (Eq let390 let681) => -- THEORY_REWRITE_UF
fun lean_r271 : (Eq let392 let682) => -- THEORY_REWRITE_UF
fun lean_r272 : (Eq let684 let683) => -- THEORY_REWRITE_BOOL
fun lean_r273 : (Eq let191 let685) => -- THEORY_REWRITE_UF
fun lean_r274 : (Eq let248 let686) => -- THEORY_REWRITE_UF
fun lean_r275 : (Eq let394 let687) => -- THEORY_REWRITE_UF
fun lean_r276 : (Eq let689 let688) => -- THEORY_REWRITE_BOOL
fun lean_r277 : (Eq let691 let690) => -- THEORY_REWRITE_BOOL
fun lean_r278 : (Eq let304 let692) => -- THEORY_REWRITE_UF
fun lean_r279 : (Eq let330 let693) => -- THEORY_REWRITE_UF
fun lean_r280 : (Eq let695 let694) => -- THEORY_REWRITE_BOOL
fun lean_r281 : (Eq let586 let696) => -- THEORY_REWRITE_BOOL
fun lean_r282 : (Eq let698 let697) => -- THEORY_REWRITE_BOOL
fun lean_r283 : (Eq let334 let699) => -- THEORY_REWRITE_UF
fun lean_r284 : (Eq let397 let253) => -- THEORY_REWRITE_UF
fun lean_r285 : (Eq let720 let719) => -- THEORY_REWRITE_BOOL
fun lean_r286 : (Eq let618 let721) => -- THEORY_REWRITE_UF
fun lean_r287 : (Eq let398 let722) => -- THEORY_REWRITE_UF
fun lean_r288 : (Eq let399 let233) => -- THEORY_REWRITE_UF
fun lean_r289 : (Eq let707 let723) => -- THEORY_REWRITE_BOOL
fun lean_r290 : (Eq let703 let724) => -- THEORY_REWRITE_BOOL
fun lean_r291 : (Eq let400 let725) => -- THEORY_REWRITE_UF
fun lean_r292 : (Eq let401 let726) => -- THEORY_REWRITE_UF
fun lean_r293 : (Eq let403 let727) => -- THEORY_REWRITE_UF
fun lean_r294 : (Eq let404 let728) => -- THEORY_REWRITE_UF
fun lean_r295 : (Eq let717 let729) => -- THEORY_REWRITE_BOOL
fun lean_r296 : (Eq let409 let730) => -- THEORY_REWRITE_UF
fun lean_r297 : (Eq let178 let731) => -- THEORY_REWRITE_UF
fun lean_r298 : (Eq let180 let732) => -- THEORY_REWRITE_UF
fun lean_r299 : (Eq let733 True) => -- THEORY_REWRITE_BOOL
fun lean_r300 : (Eq let203 let734) => -- THEORY_REWRITE_UF
fun lean_r301 : (Eq let700 let735) => -- THEORY_REWRITE_BOOL
fun lean_r302 : (Eq let702 let736) => -- THEORY_REWRITE_BOOL
fun lean_r303 : (Eq let704 let737) => -- THEORY_REWRITE_BOOL
fun lean_r304 : (Eq let705 let738) => -- THEORY_REWRITE_BOOL
fun lean_r305 : (Eq let37 let739) => -- THEORY_REWRITE_BOOL
fun lean_r306 : (Eq let706 let740) => -- THEORY_REWRITE_BOOL
fun lean_r307 : (Eq let220 let741) => -- THEORY_REWRITE_UF
fun lean_r308 : (Eq let708 let742) => -- THEORY_REWRITE_BOOL
fun lean_r309 : (Eq let197 let743) => -- THEORY_REWRITE_UF
fun lean_r310 : (Eq let326 let744) => -- THEORY_REWRITE_BOOL
fun lean_r311 : (Eq let709 let745) => -- THEORY_REWRITE_BOOL
fun lean_r312 : (Eq let710 let746) => -- THEORY_REWRITE_BOOL
fun lean_r313 : (Eq let170 let747) => -- THEORY_REWRITE_UF
fun lean_r314 : (Eq let711 let748) => -- THEORY_REWRITE_BOOL
fun lean_r315 : (Eq let712 let749) => -- THEORY_REWRITE_BOOL
fun lean_r316 : (Eq let181 let750) => -- THEORY_REWRITE_UF
fun lean_r317 : (Eq let713 let751) => -- THEORY_REWRITE_BOOL
fun lean_r318 : (Eq let714 let752) => -- THEORY_REWRITE_BOOL
fun lean_r319 : (Eq let367 let753) => -- THEORY_REWRITE_UF
fun lean_r320 : (Eq let715 let754) => -- THEORY_REWRITE_BOOL
fun lean_r321 : (Eq let716 let755) => -- THEORY_REWRITE_BOOL
fun lean_r322 : (Eq let718 let756) => -- THEORY_REWRITE_BOOL
fun lean_r323 : (Eq let758 let757) => -- THEORY_REWRITE_BOOL
fun lean_a324 : let414 =>
fun lean_a325 : let720 =>
fun lean_a326 : (And (And (And (And (Or (Or (Or (Or let182 let392) let119) let198) let207) (Or (Or (Or (Or let181 let391) let127) let197) let206)) (Or (Or (Or (Or let180 let390) let365) let196) let205)) (Or (Or (Or (Or let179 let349) let129) let195) let204)) (Or (Or (Or (Or let178 let189) let132) let194) let203)) =>
fun lean_a327 : (And (And (And (And (Or (Or (Or (Or let182 let304) let372) let152) let219) (Or (Or (Or (Or let411 let391) let368) let226) let329)) (Or (Or (Or (Or let407 let387) let365) let170) let266)) (Or (Or (Or (Or let401 let382) let309) let195) let357)) (Or (Or (Or (Or let334 let377) let143) let212) let203)) =>
fun lean_a328 : let302 =>
fun lean_a329 : (Or (Or (Or (Or let182 let391) let365) let195) let203) =>
fun lean_a330 : (Or (Or (Or (Or (Or (Or (Or (Or (Not (Eq (op e0 let177) e0)) (Not (Eq (op e0 let294) e1))) (Not (Eq (op e0 let11) e2))) (Not (Eq (op e0 let232) e3))) (Not (Eq (op e0 let15) e4))) (Or (Or (Or (Or (Not (Eq (op e1 let190) e0)) (Not (Eq (op e1 let120) e1))) (Not (Eq (op e1 let187) e2))) (Not (Eq (op e1 let40) e3))) (Not (Eq (op e1 let24) e4)))) (Or (Or (Or (Or (Not (Eq (op e2 let246) e0)) (Not (Eq (op e2 let287) e1))) (Not (Eq (op e2 let64) e2))) (Not (Eq (op e2 let9) e3))) (Not (Eq (op e2 let31) e4)))) (Or (Or (Or (Or (Not (Eq (op e3 let150) e0)) (Not (Eq (op e3 let161) e1))) (Not (Eq (op e3 let63) e2))) (Not (Eq (op e3 let39) e3))) (Not (Eq (op e3 let21) e4)))) (Or (Or (Or (Or (Not (Eq (op e4 let107) e0)) (Not (Eq (op e4 let47) e1))) (Not (Eq (op e4 let7) e2))) (Not let759)) (Not (Eq (op e4 let202) e4)))) =>
fun lean_a331 : let564 =>
fun lean_a332 : let515 =>
fun lean_a333 : let628 =>
fun lean_a334 : (Not (And (And let606 let640) let730)) =>
fun lean_a335 : (Not (And (And let48 let231) let631)) =>
fun lean_a336 : (Not (And (And let553 let87) let730)) =>
fun lean_a337 : (Not (And (And let98 let668) let345)) =>
fun lean_a338 : (Not (And (And let753 let254) let631)) =>
fun lean_a339 : (Not (And (And let162 let672) let345)) =>
fun lean_a340 : (Not (And (And let315 let90) let727)) =>
fun lean_a341 : (Not (And (And let23 let71) let728)) =>
fun lean_a342 : (Not (And (And let672 let32) let727)) =>
fun lean_a343 : (Not (And (And let8 let753) let12)) =>
fun lean_a344 : (Not (And (And let668 let639) let728)) =>
fun lean_a345 : (Not (And (And let176 let553) let12)) =>
fun lean_a346 : (Not (And (And let639 let22) let253)) =>
fun lean_a347 : (Not (And (And let86 let176) let233)) =>
fun lean_a348 : let760 =>
fun lean_a349 : (Not (And (And let30 let162) let725)) =>
fun lean_a350 : (Not (And (And let231 let315) let233)) =>
fun lean_a351 : (Not (And (And let71 let606) let725)) =>
fun lean_a352 : let761 =>
fun lean_a353 : (Not (And (And let46 let8) let644)) =>
fun lean_a354 : let762 =>
fun lean_a355 : let763 =>
fun lean_a356 : (Not (And (And let640 let23) let644)) =>
fun lean_a357 : (Not (And (And let90 let48) let16)) =>
fun lean_a358 : (Not (And (And let159 let28) let685)) =>
fun lean_a359 : (Not (And (And let236 let253) let686)) =>
fun lean_a360 : (Not (And (And let649 let644) let685)) =>
fun lean_a361 : (Not (And (And let741 let727) let687)) =>
fun lean_a362 : (Not (And (And let648 let233) let686)) =>
fun lean_a363 : (Not (And (And let578 let728) let687)) =>
fun lean_a364 : (Not (And (And let573 let90) let668)) =>
fun lean_a365 : (Not (And (And let417 let71) let672)) =>
fun lean_a366 : (Not (And (And let728 let49) let668)) =>
fun lean_a367 : (Not (And (And let8 let648) let534)) =>
fun lean_a368 : (Not (And (And let727 let10) let672)) =>
fun lean_a369 : (Not (And (And let176 let649) let534)) =>
fun lean_a370 : (Not (And (And let10 let22) let231)) =>
fun lean_a371 : (Not (And (And let543 let176) let254)) =>
fun lean_a372 : let764 =>
fun lean_a373 : (Not (And (And let30 let578) let72)) =>
fun lean_a374 : (Not (And (And let253 let573) let254)) =>
fun lean_a375 : (Not (And (And let71 let159) let72)) =>
fun lean_a376 : let765 =>
fun lean_a377 : (Not (And (And let99 let8) let87)) =>
fun lean_a378 : let766 =>
fun lean_a379 : (Not (And (And let22 let741) let25)) =>
fun lean_a380 : (Not (And (And let28 let417) let87)) =>
fun lean_a381 : (Not (And (And let90 let236) let25)) =>
fun lean_a382 : (Not (And (And let158 let28) let648)) =>
fun lean_a383 : (Not (And (And let108 let253) let649)) =>
fun lean_a384 : (Not (And (And let686 let16) let648)) =>
fun lean_a385 : (Not (And (And let741 let730) let651)) =>
fun lean_a386 : (Not (And (And let685 let725) let649)) =>
fun lean_a387 : (Not (And (And let578 let631) let651)) =>
fun lean_a388 : (Not (And (And let549 let640) let753)) =>
fun lean_a389 : (Not (And (And let239 let231) let553)) =>
fun lean_a390 : (Not (And (And let631 let25) let753)) =>
fun lean_a391 : (Not (And (And let98 let685) let594)) =>
fun lean_a392 : (Not (And (And let730 let72) let553)) =>
fun lean_a393 : (Not (And (And let162 let686) let594)) =>
fun lean_a394 : let767 =>
fun lean_a395 : (Not (And (And let543 let162) let639)) =>
fun lean_a396 : (Not (And (And let725 let99) let71)) =>
fun lean_a397 : (Not (And (And let86 let578) let10)) =>
fun lean_a398 : (Not (And (And let253 let549) let639)) =>
fun lean_a399 : (Not (And (And let231 let158) let10)) =>
fun lean_a400 : let768 =>
fun lean_a401 : let769 =>
fun lean_a402 : let770 =>
fun lean_a403 : (Not (And (And let46 let741) let49)) =>
fun lean_a404 : (Not (And (And let28 let239) let32)) =>
fun lean_a405 : (Not (And (And let640 let108) let49)) =>
fun lean_a406 : (Not (And (And let651 let644) let578)) =>
fun lean_a407 : (Not (And (And let108 let727) let159)) =>
fun lean_a408 : (Not (And (And let687 let16) let578)) =>
fun lean_a409 : (Not (And (And let236 let730) let158)) =>
fun lean_a410 : (Not (And (And let685 let12) let159)) =>
fun lean_a411 : (Not (And (And let648 let345) let158)) =>
fun lean_a412 : (Not (And (And let594 let87) let162)) =>
fun lean_a413 : (Not (And (And let239 let668) let606)) =>
fun lean_a414 : (Not (And (And let345 let25) let162)) =>
fun lean_a415 : (Not (And (And let48 let685) let549)) =>
fun lean_a416 : (Not (And (And let730 let534) let606)) =>
fun lean_a417 : (Not (And (And let753 let687) let549)) =>
fun lean_a418 : (Not (And (And let534 let32) let176)) =>
fun lean_a419 : (Not (And (And let417 let753) let315)) =>
fun lean_a420 : (Not (And (And let12 let49) let176)) =>
fun lean_a421 : (Not (And (And let23 let648) let573)) =>
fun lean_a422 : (Not (And (And let727 let594) let315)) =>
fun lean_a423 : (Not (And (And let668 let651) let573)) =>
fun lean_a424 : let771 =>
fun lean_a425 : let772 =>
fun lean_a426 : let773 =>
fun lean_a427 : (Not (And (And let32 let236) let99)) =>
fun lean_a428 : (Not (And (And let644 let239) let46)) =>
fun lean_a429 : let774 =>
fun lean_a430 : (Not (And (And let651 let233) let741)) =>
fun lean_a431 : (Not (And (And let158 let728) let236)) =>
fun lean_a432 : (Not (And (And let687 let725) let741)) =>
fun lean_a433 : (Not (And (And let159 let631) let108)) =>
fun lean_a434 : (Not (And (And let686 let12) let236)) =>
fun lean_a435 : (Not (And (And let649 let345) let108)) =>
fun lean_a436 : (Not (And (And let594 let254) let98)) =>
fun lean_a437 : (Not (And (And let549 let672) let48)) =>
fun lean_a438 : (Not (And (And let345 let72) let98)) =>
fun lean_a439 : (Not (And (And let606 let686) let239)) =>
fun lean_a440 : (Not (And (And let631 let534) let48)) =>
fun lean_a441 : (Not (And (And let553 let687) let239)) =>
fun lean_a442 : (Not (And (And let534 let639) let8)) =>
fun lean_a443 : (Not (And (And let573 let553) let23)) =>
fun lean_a444 : let775 =>
fun lean_a445 : (Not (And (And let315 let649) let417)) =>
fun lean_a446 : (Not (And (And let728 let594) let23)) =>
fun lean_a447 : (Not (And (And let672 let651) let417)) =>
fun lean_a448 : (Not (And (And let72 let315) let30)) =>
fun lean_a449 : (Not (And (And let10 let606) let86)) =>
fun lean_a450 : (Not (And (And let725 let573) let30)) =>
fun lean_a451 : (Not (And (And let639 let159) let543)) =>
fun lean_a452 : let776 =>
fun lean_a453 : (Not (And (And let254 let158) let543)) => by
have lean_s0 : (Or let1192 let1190) := by timed cnfAndNeg [let612, let661]
have lean_s1 : let1191 :=
  (scope (fun lean_a454 : let612 =>
    (scope (fun lean_a455 : let661 =>
      have lean_s1 : let380 := by timed Eq.symm lean_a455
      have lean_s2 : let195 := by timed Eq.symm lean_a454
      have lean_s3 : let612 := by timed Eq.symm lean_s2
      have lean_s4 : let41 := by timed Eq.trans lean_s1 lean_s3
      show let41 from lean_s4
  ))))
have lean_s2 : (Implies let1192 let41) := by liftOrNToImp lean_s1, 2
have lean_s3 : (Or (Not let1192) let41) := by timed impliesElim lean_s2
have lean_s4 : let1191 := by R1 lean_s0, lean_s3, let1192, [(- 1), (- 1)]
have lean_s5 : (Or let41 let1190) := by permutateOr lean_s4, [2, 0, 1], (- 1)
have lean_s6 : let778 := by timed rfl
have lean_s7 : let785 := by timed rfl
let lean_s8 := by timed congr lean_s7 lean_r163
let lean_s9 := by timed congr lean_s7 lean_r316
let lean_s10 := by timed congr lean_s7 lean_r298
let lean_s11 := by timed congr lean_s7 lean_r176
let lean_s12 := by timed congr lean_s11 lean_r297
let lean_s13 := by timed congr lean_s10 lean_s12
let lean_s14 := by timed congr lean_s9 lean_s13
have lean_s15 : (Eq let183 let875) := by timed congr lean_s8 lean_s14
have lean_s16 : (Eq let184 let875) := by timed Eq.trans lean_r62 lean_s15
let lean_s17 := by timed congr lean_s6 lean_s16
have lean_s18 : let785 := by timed rfl
let lean_s19 := by timed congr lean_s18 lean_r134
let lean_s20 := by timed congr lean_s18 lean_r196
let lean_s21 := by timed congr lean_s18 lean_r114
let lean_s22 := by timed congr lean_s18 lean_r224
let lean_s23 := by timed congr lean_s22 lean_r296
let lean_s24 := by timed congr lean_s21 lean_s23
let lean_s25 := by timed congr lean_s20 lean_s24
have lean_s26 : (Eq let536 let874) := by timed congr lean_s19 lean_s25
have lean_s27 : (Eq let412 let874) := by timed Eq.trans lean_r144 lean_s26
let lean_s28 := by timed congr lean_s6 lean_s27
have lean_s29 : let785 := by timed rfl
let lean_s30 := by timed congr lean_s29 lean_r203
let lean_s31 := by timed congr lean_s29 lean_r127
let lean_s32 := by timed congr lean_s29 lean_r167
let lean_s33 := by timed congr lean_s29 lean_r294
let lean_s34 := by timed congr lean_s33 lean_r293
let lean_s35 := by timed congr lean_s32 lean_s34
let lean_s36 := by timed congr lean_s31 lean_s35
have lean_s37 : (Eq let602 let873) := by timed congr lean_s30 lean_s36
have lean_s38 : (Eq let408 let873) := by timed Eq.trans lean_r211 lean_s37
let lean_s39 := by timed congr lean_s6 lean_s38
have lean_s40 : let785 := by timed rfl
let lean_s41 := by timed congr lean_s40 lean_r292
let lean_s42 := by timed congr lean_s40 lean_r291
let lean_s43 := by timed congr lean_s40 lean_r288
let lean_s44 := by timed congr lean_s40 lean_r287
let lean_s45 := by timed congr lean_s44 lean_r284
let lean_s46 := by timed congr lean_s43 lean_s45
let lean_s47 := by timed congr lean_s42 lean_s46
have lean_s48 : (Eq let542 let872) := by timed congr lean_s41 lean_s47
have lean_s49 : (Eq let402 let872) := by timed Eq.trans lean_r149 lean_s48
let lean_s50 := by timed congr lean_s6 lean_s49
have lean_s51 : let785 := by timed rfl
let lean_s52 := by timed congr lean_s51 lean_r283
let lean_s53 := by timed congr lean_s51 lean_r192
let lean_s54 := by timed congr lean_s51 lean_r233
let lean_s55 := by timed congr lean_s51 lean_r173
let lean_s56 := by timed congr lean_s55 lean_r279
let lean_s57 := by timed congr lean_s54 lean_s56
let lean_s58 := by timed congr lean_s53 lean_s57
have lean_s59 : (Eq let335 let871) := by timed congr lean_s52 lean_s58
have lean_s60 : (Eq let336 let871) := by timed Eq.trans lean_r111 lean_s59
let lean_s61 := by timed congr lean_s6 lean_s60
have lean_s62 : let785 := by timed rfl
let lean_s63 := by timed congr lean_s62 lean_r205
let lean_s64 := by timed congr lean_s62 lean_r278
let lean_s65 := by timed congr lean_s62 lean_r275
let lean_s66 := by timed congr lean_s62 lean_r274
let lean_s67 := by timed congr lean_s66 lean_r273
let lean_s68 := by timed congr lean_s65 lean_s67
let lean_s69 := by timed congr lean_s64 lean_s68
have lean_s70 : (Eq let599 let870) := by timed congr lean_s63 lean_s69
have lean_s71 : (Eq let396 let870) := by timed Eq.trans lean_r208 lean_s70
let lean_s72 := by timed congr lean_s6 lean_s71
have lean_s73 : let785 := by timed rfl
let lean_s74 := by timed congr lean_s73 lean_r271
let lean_s75 := by timed congr lean_s73 lean_r156
let lean_s76 := by timed congr lean_s73 lean_r270
let lean_s77 := by timed congr lean_s73 lean_r269
let lean_s78 := by timed congr lean_s77 lean_r267
let lean_s79 := by timed congr lean_s76 lean_s78
let lean_s80 := by timed congr lean_s75 lean_s79
have lean_s81 : (Eq let646 let869) := by timed congr lean_s74 lean_s80
have lean_s82 : (Eq let393 let869) := by timed Eq.trans lean_r235 lean_s81
let lean_s83 := by timed congr lean_s6 lean_s82
have lean_s84 : let785 := by timed rfl
let lean_s85 := by timed congr lean_s84 lean_r142
let lean_s86 := by timed congr lean_s84 lean_r219
let lean_s87 := by timed congr lean_s84 lean_r213
let lean_s88 := by timed congr lean_s84 lean_r264
let lean_s89 := by timed congr lean_s88 lean_r261
let lean_s90 := by timed congr lean_s87 lean_s89
let lean_s91 := by timed congr lean_s86 lean_s90
have lean_s92 : (Eq let552 let868) := by timed congr lean_s85 lean_s91
have lean_s93 : (Eq let389 let868) := by timed Eq.trans lean_r157 lean_s92
let lean_s94 := by timed congr lean_s6 lean_s93
have lean_s95 : let785 := by timed rfl
let lean_s96 := by timed congr lean_s95 lean_r258
let lean_s97 := by timed congr lean_s95 lean_r257
let lean_s98 := by timed congr lean_s95 lean_r255
let lean_s99 := by timed congr lean_s95 lean_r254
let lean_s100 := by timed congr lean_s99 lean_r253
let lean_s101 := by timed congr lean_s98 lean_s100
let lean_s102 := by timed congr lean_s97 lean_s101
have lean_s103 : (Eq let667 let867) := by timed congr lean_s96 lean_s102
have lean_s104 : (Eq let384 let867) := by timed Eq.trans lean_r260 lean_s103
let lean_s105 := by timed congr lean_s6 lean_s104
have lean_s106 : let785 := by timed rfl
let lean_s107 := by timed congr lean_s106 lean_r249
let lean_s108 := by timed congr lean_s106 lean_r247
let lean_s109 := by timed congr lean_s106 lean_r246
let lean_s110 := by timed congr lean_s106 lean_r245
let lean_s111 := by timed congr lean_s110 lean_r243
let lean_s112 := by timed congr lean_s109 lean_s111
let lean_s113 := by timed congr lean_s108 lean_s112
have lean_s114 : (Eq let660 let866) := by timed congr lean_s107 lean_s113
have lean_s115 : (Eq let379 let866) := by timed Eq.trans lean_r252 lean_s114
let lean_s116 := by timed congr lean_s6 lean_s115
have lean_s117 : let785 := by timed rfl
let lean_s118 := by timed congr lean_s117 lean_r241
let lean_s119 := by timed congr lean_s117 lean_r240
let lean_s120 := by timed congr lean_s117 lean_r239
let lean_s121 := by timed congr lean_s117 lean_r238
let lean_s122 := by timed congr lean_s121 lean_r237
let lean_s123 := by timed congr lean_s120 lean_s122
let lean_s124 := by timed congr lean_s119 lean_s123
have lean_s125 : (Eq let653 let865) := by timed congr lean_s118 lean_s124
have lean_s126 : (Eq let374 let865) := by timed Eq.trans lean_r242 lean_s125
let lean_s127 := by timed congr lean_s6 lean_s126
have lean_s128 : let785 := by timed rfl
let lean_s129 := by timed congr lean_s128 lean_r200
let lean_s130 := by timed congr lean_s128 lean_r105
let lean_s131 := by timed congr lean_s128 lean_r164
let lean_s132 := by timed congr lean_s128 lean_r159
let lean_s133 := by timed congr lean_s132 lean_r319
let lean_s134 := by timed congr lean_s131 lean_s133
let lean_s135 := by timed congr lean_s130 lean_s134
have lean_s136 : (Eq let647 let864) := by timed congr lean_s129 lean_s135
have lean_s137 : (Eq let370 let864) := by timed Eq.trans lean_r236 lean_s136
let lean_s138 := by timed congr lean_s6 lean_s137
have lean_s139 : let785 := by timed rfl
let lean_s140 := by timed congr lean_s139 lean_r38
let lean_s141 := by timed congr lean_s139 lean_r40
let lean_s142 := by timed congr lean_s139 lean_r141
let lean_s143 := by timed congr lean_s139 lean_r42
let lean_s144 := by timed congr lean_s143 lean_r44
let lean_s145 := by timed congr lean_s142 lean_s144
let lean_s146 := by timed congr lean_s141 lean_s145
have lean_s147 : (Eq let577 let863) := by timed congr lean_s140 lean_s146
have lean_s148 : (Eq let366 let863) := by timed Eq.trans lean_r185 lean_s147
let lean_s149 := by timed congr lean_s6 lean_s148
have lean_s150 : let785 := by timed rfl
let lean_s151 := by timed congr lean_s150 lean_r189
let lean_s152 := by timed congr lean_s150 lean_r229
let lean_s153 := by timed congr lean_s150 lean_r170
let lean_s154 := by timed congr lean_s150 lean_r46
let lean_s155 := by timed congr lean_s154 lean_r47
let lean_s156 := by timed congr lean_s153 lean_s155
let lean_s157 := by timed congr lean_s152 lean_s156
have lean_s158 : (Eq let312 let862) := by timed congr lean_s151 lean_s157
have lean_s159 : (Eq let313 let862) := by timed Eq.trans lean_r98 lean_s158
let lean_s160 := by timed congr lean_s6 lean_s159
have lean_s161 : let785 := by timed rfl
let lean_s162 := by timed congr lean_s161 lean_r204
let lean_s163 := by timed congr lean_s161 lean_r50
let lean_s164 := by timed congr lean_s161 lean_r51
let lean_s165 := by timed congr lean_s161 lean_r52
let lean_s166 := by timed congr lean_s165 lean_r53
let lean_s167 := by timed congr lean_s164 lean_s166
let lean_s168 := by timed congr lean_s163 lean_s167
have lean_s169 : (Eq let146 let861) := by timed congr lean_s162 lean_s168
have lean_s170 : (Eq let147 let861) := by timed Eq.trans lean_r49 lean_s169
let lean_s171 := by timed congr lean_s6 lean_s170
have lean_s172 : let785 := by timed rfl
let lean_s173 := by timed congr lean_s172 lean_r151
let lean_s174 := by timed congr lean_s172 lean_r55
let lean_s175 := by timed congr lean_s172 lean_r56
let lean_s176 := by timed congr lean_s172 lean_r57
let lean_s177 := by timed congr lean_s176 lean_r187
let lean_s178 := by timed congr lean_s175 lean_s177
let lean_s179 := by timed congr lean_s174 lean_s178
have lean_s180 : (Eq let156 let860) := by timed congr lean_s173 lean_s179
have lean_s181 : (Eq let157 let860) := by timed Eq.trans lean_r54 lean_s180
let lean_s182 := by timed congr lean_s6 lean_s181
have lean_s183 : let785 := by timed rfl
let lean_s184 := by timed congr lean_s183 lean_r154
let lean_s185 := by timed congr lean_s183 lean_r139
let lean_s186 := by timed congr lean_s183 lean_r214
let lean_s187 := by timed congr lean_s183 lean_r153
let lean_s188 := by timed congr lean_s187 lean_r58
let lean_s189 := by timed congr lean_s186 lean_s188
let lean_s190 := by timed congr lean_s185 lean_s189
have lean_s191 : (Eq let554 let859) := by timed congr lean_s184 lean_s190
have lean_s192 : (Eq let364 let859) := by timed Eq.trans lean_r160 lean_s191
let lean_s193 := by timed congr lean_s6 lean_s192
have lean_s194 : let785 := by timed rfl
let lean_s195 := by timed congr lean_s194 lean_r178
let lean_s196 := by timed congr lean_s194 lean_r100
let lean_s197 := by timed congr lean_s194 lean_r115
let lean_s198 := by timed congr lean_s194 lean_r313
let lean_s199 := by timed congr lean_s198 lean_r61
let lean_s200 := by timed congr lean_s197 lean_s199
let lean_s201 := by timed congr lean_s196 lean_s200
have lean_s202 : (Eq let174 let858) := by timed congr lean_s195 lean_s201
have lean_s203 : (Eq let175 let858) := by timed Eq.trans lean_r60 lean_s202
let lean_s204 := by timed congr lean_s6 lean_s203
have lean_s205 : let785 := by timed rfl
let lean_s206 := by timed congr lean_s205 lean_r65
let lean_s207 := by timed congr lean_s205 lean_r309
let lean_s208 := by timed congr lean_s205 lean_r106
let lean_s209 := by timed congr lean_s205 lean_r218
let lean_s210 := by timed congr lean_s209 lean_r165
let lean_s211 := by timed congr lean_s208 lean_s210
let lean_s212 := by timed congr lean_s207 lean_s211
have lean_s213 : (Eq let199 let857) := by timed congr lean_s206 lean_s212
have lean_s214 : (Eq let200 let857) := by timed Eq.trans lean_r64 lean_s213
let lean_s215 := by timed congr lean_s6 lean_s214
have lean_s216 : let785 := by timed rfl
let lean_s217 := by timed congr lean_s216 lean_r69
let lean_s218 := by timed congr lean_s216 lean_r70
let lean_s219 := by timed congr lean_s216 lean_r180
let lean_s220 := by timed congr lean_s216 lean_r71
let lean_s221 := by timed congr lean_s220 lean_r210
let lean_s222 := by timed congr lean_s219 lean_s221
let lean_s223 := by timed congr lean_s218 lean_s222
have lean_s224 : (Eq let216 let856) := by timed congr lean_s217 lean_s223
have lean_s225 : (Eq let217 let856) := by timed Eq.trans lean_r68 lean_s224
let lean_s226 := by timed congr lean_s6 lean_s225
have lean_s227 : let785 := by timed rfl
let lean_s228 := by timed congr lean_s227 lean_r89
let lean_s229 := by timed congr lean_s227 lean_r75
let lean_s230 := by timed congr lean_s227 lean_r77
let lean_s231 := by timed congr lean_s227 lean_r307
let lean_s232 := by timed congr lean_s231 lean_r147
let lean_s233 := by timed congr lean_s230 lean_s232
let lean_s234 := by timed congr lean_s229 lean_s233
have lean_s235 : (Eq let224 let855) := by timed congr lean_s228 lean_s234
have lean_s236 : (Eq let225 let855) := by timed Eq.trans lean_r72 lean_s235
let lean_s237 := by timed congr lean_s6 lean_s236
have lean_s238 : let785 := by timed rfl
let lean_s239 := by timed congr lean_s238 lean_r79
let lean_s240 := by timed congr lean_s238 lean_r82
let lean_s241 := by timed congr lean_s238 lean_r86
let lean_s242 := by timed congr lean_s238 lean_r88
let lean_s243 := by timed congr lean_s242 lean_r110
let lean_s244 := by timed congr lean_s241 lean_s243
let lean_s245 := by timed congr lean_s240 lean_s244
have lean_s246 : (Eq let568 let854) := by timed congr lean_s239 lean_s245
have lean_s247 : (Eq let360 let854) := by timed Eq.trans lean_r171 lean_s246
let lean_s248 := by timed congr lean_s6 lean_s247
have lean_s249 : let785 := by timed rfl
let lean_s250 := by timed congr lean_s249 lean_r124
let lean_s251 := by timed congr lean_s249 lean_r92
let lean_s252 := by timed congr lean_s249 lean_r132
let lean_s253 := by timed congr lean_s249 lean_r93
let lean_s254 := by timed congr lean_s253 lean_r207
let lean_s255 := by timed congr lean_s252 lean_s254
let lean_s256 := by timed congr lean_s251 lean_s255
have lean_s257 : (Eq let271 let853) := by timed congr lean_s250 lean_s256
have lean_s258 : (Eq let272 let853) := by timed Eq.trans lean_r91 lean_s257
let lean_s259 := by timed congr lean_s6 lean_s258
have lean_s260 : let785 := by timed rfl
let lean_s261 := by timed congr lean_s260 lean_r183
let lean_s262 := by timed congr lean_s260 lean_r104
let lean_s263 := by timed congr lean_s260 lean_r118
let lean_s264 := by timed congr lean_s260 lean_r129
let lean_s265 := by timed congr lean_s264 lean_r234
let lean_s266 := by timed congr lean_s263 lean_s265
let lean_s267 := by timed congr lean_s262 lean_s266
have lean_s268 : (Eq let520 let851) := by timed congr lean_s261 lean_s267
have lean_s269 : (Eq let359 let851) := by timed Eq.trans lean_r131 lean_s268
let lean_s270 := by timed congr lean_s6 lean_s269
have lean_s271 : let785 := by timed rfl
let lean_s272 := by timed congr lean_s271 lean_r143
let lean_s273 := by timed congr lean_s271 lean_r133
let lean_s274 := by timed congr lean_s271 lean_r193
let lean_s275 := by timed congr lean_s271 lean_r120
let lean_s276 := by timed congr lean_s275 lean_r300
let lean_s277 := by timed congr lean_s274 lean_s276
let lean_s278 := by timed congr lean_s273 lean_s277
have lean_s279 : (Eq let208 let852) := by timed congr lean_s272 lean_s278
have lean_s280 : (Eq let209 let852) := by timed Eq.trans lean_r66 lean_s279
let lean_s281 := by timed congr lean_s270 lean_s280
let lean_s282 := by timed congr lean_s259 lean_s281
let lean_s283 := by timed congr lean_s248 lean_s282
let lean_s284 := by timed congr lean_s237 lean_s283
let lean_s285 := by timed congr lean_s226 lean_s284
let lean_s286 := by timed congr lean_s215 lean_s285
let lean_s287 := by timed congr lean_s204 lean_s286
let lean_s288 := by timed congr lean_s193 lean_s287
let lean_s289 := by timed congr lean_s182 lean_s288
let lean_s290 := by timed congr lean_s171 lean_s289
let lean_s291 := by timed congr lean_s160 lean_s290
let lean_s292 := by timed congr lean_s149 lean_s291
let lean_s293 := by timed congr lean_s138 lean_s292
let lean_s294 := by timed congr lean_s127 lean_s293
let lean_s295 := by timed congr lean_s116 lean_s294
let lean_s296 := by timed congr lean_s105 lean_s295
let lean_s297 := by timed congr lean_s94 lean_s296
let lean_s298 := by timed congr lean_s83 lean_s297
let lean_s299 := by timed congr lean_s72 lean_s298
let lean_s300 := by timed congr lean_s61 lean_s299
let lean_s301 := by timed congr lean_s50 lean_s300
let lean_s302 := by timed congr lean_s39 lean_s301
let lean_s303 := by timed congr lean_s28 lean_s302
have lean_s304 : (Eq let413 let876) := by timed congr lean_s17 lean_s303
have lean_s305 : (Eq let414 let876) := by timed Eq.trans lean_r121 lean_s304
have lean_s306 : let876 := by timed eqResolve lean_a324 lean_s305
have lean_s307 : let867 := by andElim lean_s306, 8
have lean_s308 : (Or let231 (Or let254 (Or let72 (Or let664 let661)))) := by permutateOr lean_s307, [4, 2, 0, 1, 3], (- 1)
have lean_s309 : (Eq let764 let1188) := by timed flipCongrArg lean_r76 [Not]
have lean_s310 : let1188 := by timed eqResolve lean_a372 lean_s309
have lean_s311 : (Or let1077 (Or let814 let1092)) := by timed flipNotAnd lean_s310 [let233, let99, let231]
have lean_s312 : (Or let1077 (Or let1092 let814)) := by permutateOr lean_s311, [0, 2, 1], (- 1)
have lean_s313 : let778 := by timed rfl
have lean_s314 : let785 := by timed rfl
let lean_s315 := by timed congr lean_s314 lean_r163
let lean_s316 := by timed congr lean_s314 lean_r134
let lean_s317 := by timed congr lean_s314 lean_r203
let lean_s318 := by timed congr lean_s314 lean_r292
let lean_s319 := by timed congr lean_s318 lean_r283
let lean_s320 := by timed congr lean_s317 lean_s319
let lean_s321 := by timed congr lean_s316 lean_s320
have lean_s322 : (Eq let756 let961) := by timed congr lean_s315 lean_s321
have lean_s323 : (Eq let718 let961) := by timed Eq.trans lean_r322 lean_s322
let lean_s324 := by timed congr lean_s313 lean_s323
have lean_s325 : let785 := by timed rfl
let lean_s326 := by timed congr lean_s325 lean_r163
let lean_s327 := by timed congr lean_s325 lean_r205
let lean_s328 := by timed congr lean_s325 lean_r241
let lean_s329 := by timed congr lean_s325 lean_r151
let lean_s330 := by timed congr lean_s329 lean_r89
let lean_s331 := by timed congr lean_s328 lean_s330
let lean_s332 := by timed congr lean_s327 lean_s331
have lean_s333 : (Eq let675 let960) := by timed congr lean_s326 lean_s332
have lean_s334 : (Eq let676 let960) := by timed Eq.trans lean_r266 lean_s333
let lean_s335 := by timed congr lean_s313 lean_s334
have lean_s336 : let785 := by timed rfl
let lean_s337 := by timed congr lean_s336 lean_r316
let lean_s338 := by timed congr lean_s336 lean_r196
let lean_s339 := by timed congr lean_s336 lean_r127
let lean_s340 := by timed congr lean_s336 lean_r291
let lean_s341 := by timed congr lean_s340 lean_r192
let lean_s342 := by timed congr lean_s339 lean_s341
let lean_s343 := by timed congr lean_s338 lean_s342
have lean_s344 : (Eq let694 let959) := by timed congr lean_s337 lean_s343
have lean_s345 : (Eq let695 let959) := by timed Eq.trans lean_r280 lean_s344
let lean_s346 := by timed congr lean_s313 lean_s345
have lean_s347 : let785 := by timed rfl
let lean_s348 := by timed congr lean_s347 lean_r316
let lean_s349 := by timed congr lean_s347 lean_r278
let lean_s350 := by timed congr lean_s347 lean_r240
let lean_s351 := by timed congr lean_s347 lean_r55
let lean_s352 := by timed congr lean_s351 lean_r75
let lean_s353 := by timed congr lean_s350 lean_s352
let lean_s354 := by timed congr lean_s349 lean_s353
have lean_s355 : (Eq let305 let958) := by timed congr lean_s348 lean_s354
have lean_s356 : (Eq let306 let958) := by timed Eq.trans lean_r96 lean_s355
let lean_s357 := by timed congr lean_s313 lean_s356
have lean_s358 : let785 := by timed rfl
let lean_s359 := by timed congr lean_s358 lean_r298
let lean_s360 := by timed congr lean_s358 lean_r114
let lean_s361 := by timed congr lean_s358 lean_r167
let lean_s362 := by timed congr lean_s358 lean_r288
let lean_s363 := by timed congr lean_s362 lean_r233
let lean_s364 := by timed congr lean_s361 lean_s363
let lean_s365 := by timed congr lean_s360 lean_s364
have lean_s366 : (Eq let690 let957) := by timed congr lean_s359 lean_s365
have lean_s367 : (Eq let691 let957) := by timed Eq.trans lean_r277 lean_s366
let lean_s368 := by timed congr lean_s313 lean_s367
have lean_s369 : let785 := by timed rfl
let lean_s370 := by timed congr lean_s369 lean_r298
let lean_s371 := by timed congr lean_s369 lean_r275
let lean_s372 := by timed congr lean_s369 lean_r239
let lean_s373 := by timed congr lean_s369 lean_r56
let lean_s374 := by timed congr lean_s373 lean_r77
let lean_s375 := by timed congr lean_s372 lean_s374
let lean_s376 := by timed congr lean_s371 lean_s375
have lean_s377 : (Eq let525 let956) := by timed congr lean_s370 lean_s376
have lean_s378 : (Eq let526 let956) := by timed Eq.trans lean_r138 lean_s377
let lean_s379 := by timed congr lean_s313 lean_s378
have lean_s380 : let785 := by timed rfl
let lean_s381 := by timed congr lean_s380 lean_r176
let lean_s382 := by timed congr lean_s380 lean_r224
let lean_s383 := by timed congr lean_s380 lean_r294
let lean_s384 := by timed congr lean_s380 lean_r287
let lean_s385 := by timed congr lean_s384 lean_r173
let lean_s386 := by timed congr lean_s383 lean_s385
let lean_s387 := by timed congr lean_s382 lean_s386
have lean_s388 : (Eq let683 let955) := by timed congr lean_s381 lean_s387
have lean_s389 : (Eq let684 let955) := by timed Eq.trans lean_r272 lean_s388
let lean_s390 := by timed congr lean_s313 lean_s389
have lean_s391 : let785 := by timed rfl
let lean_s392 := by timed congr lean_s391 lean_r176
let lean_s393 := by timed congr lean_s391 lean_r274
let lean_s394 := by timed congr lean_s391 lean_r238
let lean_s395 := by timed congr lean_s391 lean_r57
let lean_s396 := by timed congr lean_s395 lean_r307
let lean_s397 := by timed congr lean_s394 lean_s396
let lean_s398 := by timed congr lean_s393 lean_s397
have lean_s399 : (Eq let249 let954) := by timed congr lean_s392 lean_s398
have lean_s400 : (Eq let250 let954) := by timed Eq.trans lean_r81 lean_s399
let lean_s401 := by timed congr lean_s313 lean_s400
have lean_s402 : let785 := by timed rfl
let lean_s403 := by timed congr lean_s402 lean_r297
let lean_s404 := by timed congr lean_s402 lean_r296
let lean_s405 := by timed congr lean_s402 lean_r293
let lean_s406 := by timed congr lean_s402 lean_r284
let lean_s407 := by timed congr lean_s406 lean_r279
let lean_s408 := by timed congr lean_s405 lean_s407
let lean_s409 := by timed congr lean_s404 lean_s408
have lean_s410 : (Eq let634 let953) := by timed congr lean_s403 lean_s409
have lean_s411 : (Eq let635 let953) := by timed Eq.trans lean_r226 lean_s410
let lean_s412 := by timed congr lean_s313 lean_s411
have lean_s413 : let785 := by timed rfl
let lean_s414 := by timed congr lean_s413 lean_r297
let lean_s415 := by timed congr lean_s413 lean_r273
let lean_s416 := by timed congr lean_s413 lean_r237
let lean_s417 := by timed congr lean_s413 lean_r187
let lean_s418 := by timed congr lean_s417 lean_r147
let lean_s419 := by timed congr lean_s416 lean_s418
let lean_s420 := by timed congr lean_s415 lean_s419
have lean_s421 : (Eq let415 let952) := by timed congr lean_s414 lean_s420
have lean_s422 : (Eq let416 let952) := by timed Eq.trans lean_r123 lean_s421
let lean_s423 := by timed congr lean_s313 lean_s422
have lean_s424 : let785 := by timed rfl
let lean_s425 := by timed congr lean_s424 lean_r205
let lean_s426 := by timed congr lean_s424 lean_r271
let lean_s427 := by timed congr lean_s424 lean_r142
let lean_s428 := by timed congr lean_s424 lean_r258
let lean_s429 := by timed congr lean_s428 lean_r249
let lean_s430 := by timed congr lean_s427 lean_s429
let lean_s431 := by timed congr lean_s426 lean_s430
have lean_s432 : (Eq let729 let951) := by timed congr lean_s425 lean_s431
have lean_s433 : (Eq let717 let951) := by timed Eq.trans lean_r295 lean_s432
let lean_s434 := by timed congr lean_s313 lean_s433
have lean_s435 : let785 := by timed rfl
let lean_s436 := by timed congr lean_s435 lean_r134
let lean_s437 := by timed congr lean_s435 lean_r271
let lean_s438 := by timed congr lean_s435 lean_r200
let lean_s439 := by timed congr lean_s435 lean_r154
let lean_s440 := by timed congr lean_s439 lean_r79
let lean_s441 := by timed congr lean_s438 lean_s440
let lean_s442 := by timed congr lean_s437 lean_s441
have lean_s443 : (Eq let755 let950) := by timed congr lean_s436 lean_s442
have lean_s444 : (Eq let716 let950) := by timed Eq.trans lean_r321 lean_s443
let lean_s445 := by timed congr lean_s313 lean_s444
have lean_s446 : let785 := by timed rfl
let lean_s447 := by timed congr lean_s446 lean_r278
let lean_s448 := by timed congr lean_s446 lean_r156
let lean_s449 := by timed congr lean_s446 lean_r219
let lean_s450 := by timed congr lean_s446 lean_r257
let lean_s451 := by timed congr lean_s450 lean_r247
let lean_s452 := by timed congr lean_s449 lean_s451
let lean_s453 := by timed congr lean_s448 lean_s452
have lean_s454 : (Eq let754 let949) := by timed congr lean_s447 lean_s453
have lean_s455 : (Eq let715 let949) := by timed Eq.trans lean_r320 lean_s454
let lean_s456 := by timed congr lean_s313 lean_s455
have lean_s457 : let785 := by timed rfl
let lean_s458 := by timed congr lean_s457 lean_r196
let lean_s459 := by timed congr lean_s457 lean_r156
let lean_s460 := by timed congr lean_s457 lean_r105
let lean_s461 := by timed congr lean_s457 lean_r139
let lean_s462 := by timed congr lean_s461 lean_r82
let lean_s463 := by timed congr lean_s460 lean_s462
let lean_s464 := by timed congr lean_s459 lean_s463
have lean_s465 : (Eq let752 let948) := by timed congr lean_s458 lean_s464
have lean_s466 : (Eq let714 let948) := by timed Eq.trans lean_r318 lean_s465
let lean_s467 := by timed congr lean_s313 lean_s466
have lean_s468 : let785 := by timed rfl
let lean_s469 := by timed congr lean_s468 lean_r275
let lean_s470 := by timed congr lean_s468 lean_r270
let lean_s471 := by timed congr lean_s468 lean_r213
let lean_s472 := by timed congr lean_s468 lean_r255
let lean_s473 := by timed congr lean_s472 lean_r246
let lean_s474 := by timed congr lean_s471 lean_s473
let lean_s475 := by timed congr lean_s470 lean_s474
have lean_s476 : (Eq let751 let947) := by timed congr lean_s469 lean_s475
have lean_s477 : (Eq let713 let947) := by timed Eq.trans lean_r317 lean_s476
let lean_s478 := by timed congr lean_s313 lean_s477
have lean_s479 : let785 := by timed rfl
let lean_s480 := by timed congr lean_s479 lean_r114
let lean_s481 := by timed congr lean_s479 lean_r270
let lean_s482 := by timed congr lean_s479 lean_r164
let lean_s483 := by timed congr lean_s479 lean_r214
let lean_s484 := by timed congr lean_s483 lean_r86
let lean_s485 := by timed congr lean_s482 lean_s484
let lean_s486 := by timed congr lean_s481 lean_s485
have lean_s487 : (Eq let556 let946) := by timed congr lean_s480 lean_s486
have lean_s488 : (Eq let557 let946) := by timed Eq.trans lean_r162 lean_s487
let lean_s489 := by timed congr lean_s313 lean_s488
have lean_s490 : let785 := by timed rfl
let lean_s491 := by timed congr lean_s490 lean_r274
let lean_s492 := by timed congr lean_s490 lean_r269
let lean_s493 := by timed congr lean_s490 lean_r264
let lean_s494 := by timed congr lean_s490 lean_r254
let lean_s495 := by timed congr lean_s494 lean_r245
let lean_s496 := by timed congr lean_s493 lean_s495
let lean_s497 := by timed congr lean_s492 lean_s496
have lean_s498 : (Eq let637 let945) := by timed congr lean_s491 lean_s497
have lean_s499 : (Eq let638 let945) := by timed Eq.trans lean_r228 lean_s498
let lean_s500 := by timed congr lean_s313 lean_s499
have lean_s501 : let785 := by timed rfl
let lean_s502 := by timed congr lean_s501 lean_r224
let lean_s503 := by timed congr lean_s501 lean_r269
let lean_s504 := by timed congr lean_s501 lean_r159
let lean_s505 := by timed congr lean_s501 lean_r153
let lean_s506 := by timed congr lean_s505 lean_r88
let lean_s507 := by timed congr lean_s504 lean_s506
let lean_s508 := by timed congr lean_s503 lean_s507
have lean_s509 : (Eq let351 let944) := by timed congr lean_s502 lean_s508
have lean_s510 : (Eq let352 let944) := by timed Eq.trans lean_r117 lean_s509
let lean_s511 := by timed congr lean_s313 lean_s510
have lean_s512 : let785 := by timed rfl
let lean_s513 := by timed congr lean_s512 lean_r273
let lean_s514 := by timed congr lean_s512 lean_r267
let lean_s515 := by timed congr lean_s512 lean_r261
let lean_s516 := by timed congr lean_s512 lean_r253
let lean_s517 := by timed congr lean_s516 lean_r243
let lean_s518 := by timed congr lean_s515 lean_s517
let lean_s519 := by timed congr lean_s514 lean_s518
have lean_s520 : (Eq let192 let943) := by timed congr lean_s513 lean_s519
have lean_s521 : (Eq let193 let943) := by timed Eq.trans lean_r63 lean_s520
let lean_s522 := by timed congr lean_s313 lean_s521
have lean_s523 : let785 := by timed rfl
let lean_s524 := by timed congr lean_s523 lean_r296
let lean_s525 := by timed congr lean_s523 lean_r267
let lean_s526 := by timed congr lean_s523 lean_r319
let lean_s527 := by timed congr lean_s523 lean_r58
let lean_s528 := by timed congr lean_s527 lean_r110
let lean_s529 := by timed congr lean_s526 lean_s528
let lean_s530 := by timed congr lean_s525 lean_s529
have lean_s531 : (Eq let678 let942) := by timed congr lean_s524 lean_s530
have lean_s532 : (Eq let679 let942) := by timed Eq.trans lean_r268 lean_s531
let lean_s533 := by timed congr lean_s313 lean_s532
have lean_s534 : let785 := by timed rfl
let lean_s535 := by timed congr lean_s534 lean_r241
let lean_s536 := by timed congr lean_s534 lean_r200
let lean_s537 := by timed congr lean_s534 lean_r38
let lean_s538 := by timed congr lean_s534 lean_r189
let lean_s539 := by timed congr lean_s538 lean_r204
let lean_s540 := by timed congr lean_s537 lean_s539
let lean_s541 := by timed congr lean_s536 lean_s540
have lean_s542 : (Eq let591 let941) := by timed congr lean_s535 lean_s541
have lean_s543 : (Eq let592 let941) := by timed Eq.trans lean_r197 lean_s542
let lean_s544 := by timed congr lean_s313 lean_s543
have lean_s545 : let785 := by timed rfl
let lean_s546 := by timed congr lean_s545 lean_r203
let lean_s547 := by timed congr lean_s545 lean_r142
let lean_s548 := by timed congr lean_s545 lean_r38
let lean_s549 := by timed congr lean_s545 lean_r178
let lean_s550 := by timed congr lean_s549 lean_r124
let lean_s551 := by timed congr lean_s548 lean_s550
let lean_s552 := by timed congr lean_s547 lean_s551
have lean_s553 : (Eq let670 let940) := by timed congr lean_s546 lean_s552
have lean_s554 : (Eq let671 let940) := by timed Eq.trans lean_r263 lean_s553
let lean_s555 := by timed congr lean_s313 lean_s554
have lean_s556 : let785 := by timed rfl
let lean_s557 := by timed congr lean_s556 lean_r240
let lean_s558 := by timed congr lean_s556 lean_r105
let lean_s559 := by timed congr lean_s556 lean_r40
let lean_s560 := by timed congr lean_s556 lean_r229
let lean_s561 := by timed congr lean_s560 lean_r50
let lean_s562 := by timed congr lean_s559 lean_s561
let lean_s563 := by timed congr lean_s558 lean_s562
have lean_s564 : (Eq let749 let939) := by timed congr lean_s557 lean_s563
have lean_s565 : (Eq let712 let939) := by timed Eq.trans lean_r315 lean_s564
let lean_s566 := by timed congr lean_s313 lean_s565
have lean_s567 : let785 := by timed rfl
let lean_s568 := by timed congr lean_s567 lean_r127
let lean_s569 := by timed congr lean_s567 lean_r219
let lean_s570 := by timed congr lean_s567 lean_r40
let lean_s571 := by timed congr lean_s567 lean_r100
let lean_s572 := by timed congr lean_s571 lean_r92
let lean_s573 := by timed congr lean_s570 lean_s572
let lean_s574 := by timed congr lean_s569 lean_s573
have lean_s575 : (Eq let662 let938) := by timed congr lean_s568 lean_s574
have lean_s576 : (Eq let663 let938) := by timed Eq.trans lean_r256 lean_s575
let lean_s577 := by timed congr lean_s313 lean_s576
have lean_s578 : let785 := by timed rfl
let lean_s579 := by timed congr lean_s578 lean_r239
let lean_s580 := by timed congr lean_s578 lean_r164
let lean_s581 := by timed congr lean_s578 lean_r141
let lean_s582 := by timed congr lean_s578 lean_r170
let lean_s583 := by timed congr lean_s582 lean_r51
let lean_s584 := by timed congr lean_s581 lean_s583
let lean_s585 := by timed congr lean_s580 lean_s584
have lean_s586 : (Eq let610 let937) := by timed congr lean_s579 lean_s585
have lean_s587 : (Eq let611 let937) := by timed Eq.trans lean_r217 lean_s586
let lean_s588 := by timed congr lean_s313 lean_s587
have lean_s589 : let785 := by timed rfl
let lean_s590 := by timed congr lean_s589 lean_r167
let lean_s591 := by timed congr lean_s589 lean_r213
let lean_s592 := by timed congr lean_s589 lean_r141
let lean_s593 := by timed congr lean_s589 lean_r115
let lean_s594 := by timed congr lean_s593 lean_r132
let lean_s595 := by timed congr lean_s592 lean_s594
let lean_s596 := by timed congr lean_s591 lean_s595
have lean_s597 : (Eq let748 let936) := by timed congr lean_s590 lean_s596
have lean_s598 : (Eq let711 let936) := by timed Eq.trans lean_r314 lean_s597
let lean_s599 := by timed congr lean_s313 lean_s598
have lean_s600 : let785 := by timed rfl
let lean_s601 := by timed congr lean_s600 lean_r238
let lean_s602 := by timed congr lean_s600 lean_r159
let lean_s603 := by timed congr lean_s600 lean_r42
let lean_s604 := by timed congr lean_s600 lean_r46
let lean_s605 := by timed congr lean_s604 lean_r52
let lean_s606 := by timed congr lean_s603 lean_s605
let lean_s607 := by timed congr lean_s602 lean_s606
have lean_s608 : (Eq let746 let935) := by timed congr lean_s601 lean_s607
have lean_s609 : (Eq let710 let935) := by timed Eq.trans lean_r312 lean_s608
let lean_s610 := by timed congr lean_s313 lean_s609
have lean_s611 : let785 := by timed rfl
let lean_s612 := by timed congr lean_s611 lean_r294
let lean_s613 := by timed congr lean_s611 lean_r264
let lean_s614 := by timed congr lean_s611 lean_r42
let lean_s615 := by timed congr lean_s611 lean_r313
let lean_s616 := by timed congr lean_s615 lean_r93
let lean_s617 := by timed congr lean_s614 lean_s616
let lean_s618 := by timed congr lean_s613 lean_s617
have lean_s619 : (Eq let745 let934) := by timed congr lean_s612 lean_s618
have lean_s620 : (Eq let709 let934) := by timed Eq.trans lean_r311 lean_s619
let lean_s621 := by timed congr lean_s313 lean_s620
have lean_s622 : let785 := by timed rfl
let lean_s623 := by timed congr lean_s622 lean_r237
let lean_s624 := by timed congr lean_s622 lean_r319
let lean_s625 := by timed congr lean_s622 lean_r44
let lean_s626 := by timed congr lean_s622 lean_r47
let lean_s627 := by timed congr lean_s626 lean_r53
let lean_s628 := by timed congr lean_s625 lean_s627
let lean_s629 := by timed congr lean_s624 lean_s628
have lean_s630 : (Eq let608 let933) := by timed congr lean_s623 lean_s629
have lean_s631 : (Eq let609 let933) := by timed Eq.trans lean_r216 lean_s630
let lean_s632 := by timed congr lean_s313 lean_s631
have lean_s633 : let785 := by timed rfl
let lean_s634 := by timed congr lean_s633 lean_r293
let lean_s635 := by timed congr lean_s633 lean_r261
let lean_s636 := by timed congr lean_s633 lean_r44
let lean_s637 := by timed congr lean_s633 lean_r61
let lean_s638 := by timed congr lean_s637 lean_r207
let lean_s639 := by timed congr lean_s636 lean_s638
let lean_s640 := by timed congr lean_s635 lean_s639
have lean_s641 : (Eq let574 let932) := by timed congr lean_s634 lean_s640
have lean_s642 : (Eq let575 let932) := by timed Eq.trans lean_r181 lean_s641
let lean_s643 := by timed congr lean_s313 lean_s642
have lean_s644 : let785 := by timed rfl
let lean_s645 := by timed congr lean_s644 lean_r151
let lean_s646 := by timed congr lean_s644 lean_r154
let lean_s647 := by timed congr lean_s644 lean_r178
let lean_s648 := by timed congr lean_s644 lean_r65
let lean_s649 := by timed congr lean_s648 lean_r69
let lean_s650 := by timed congr lean_s647 lean_s649
let lean_s651 := by timed congr lean_s646 lean_s650
have lean_s652 : (Eq let688 let931) := by timed congr lean_s645 lean_s651
have lean_s653 : (Eq let689 let931) := by timed Eq.trans lean_r276 lean_s652
let lean_s654 := by timed congr lean_s313 lean_s653
have lean_s655 : let785 := by timed rfl
let lean_s656 := by timed congr lean_s655 lean_r292
let lean_s657 := by timed congr lean_s655 lean_r258
let lean_s658 := by timed congr lean_s655 lean_r189
let lean_s659 := by timed congr lean_s655 lean_r65
let lean_s660 := by timed congr lean_s659 lean_r183
let lean_s661 := by timed congr lean_s658 lean_s660
let lean_s662 := by timed congr lean_s657 lean_s661
have lean_s663 : (Eq let742 let930) := by timed congr lean_s656 lean_s662
have lean_s664 : (Eq let708 let930) := by timed Eq.trans lean_r308 lean_s663
let lean_s665 := by timed congr lean_s313 lean_s664
have lean_s666 : let785 := by timed rfl
let lean_s667 := by timed congr lean_s666 lean_r55
let lean_s668 := by timed congr lean_s666 lean_r139
let lean_s669 := by timed congr lean_s666 lean_r100
let lean_s670 := by timed congr lean_s666 lean_r309
let lean_s671 := by timed congr lean_s670 lean_r70
let lean_s672 := by timed congr lean_s669 lean_s671
let lean_s673 := by timed congr lean_s668 lean_s672
have lean_s674 : (Eq let537 let929) := by timed congr lean_s667 lean_s673
have lean_s675 : (Eq let538 let929) := by timed Eq.trans lean_r146 lean_s674
let lean_s676 := by timed congr lean_s313 lean_s675
have lean_s677 : let785 := by timed rfl
let lean_s678 := by timed congr lean_s677 lean_r291
let lean_s679 := by timed congr lean_s677 lean_r257
let lean_s680 := by timed congr lean_s677 lean_r229
let lean_s681 := by timed congr lean_s677 lean_r309
let lean_s682 := by timed congr lean_s681 lean_r104
let lean_s683 := by timed congr lean_s680 lean_s682
let lean_s684 := by timed congr lean_s679 lean_s683
have lean_s685 : (Eq let658 let928) := by timed congr lean_s678 lean_s684
have lean_s686 : (Eq let659 let928) := by timed Eq.trans lean_r251 lean_s685
let lean_s687 := by timed congr lean_s313 lean_s686
have lean_s688 : let785 := by timed rfl
let lean_s689 := by timed congr lean_s688 lean_r56
let lean_s690 := by timed congr lean_s688 lean_r214
let lean_s691 := by timed congr lean_s688 lean_r115
let lean_s692 := by timed congr lean_s688 lean_r106
let lean_s693 := by timed congr lean_s692 lean_r180
let lean_s694 := by timed congr lean_s691 lean_s693
let lean_s695 := by timed congr lean_s690 lean_s694
have lean_s696 : (Eq let632 let927) := by timed congr lean_s689 lean_s695
have lean_s697 : (Eq let633 let927) := by timed Eq.trans lean_r225 lean_s696
let lean_s698 := by timed congr lean_s313 lean_s697
have lean_s699 : let785 := by timed rfl
let lean_s700 := by timed congr lean_s699 lean_r288
let lean_s701 := by timed congr lean_s699 lean_r255
let lean_s702 := by timed congr lean_s699 lean_r170
let lean_s703 := by timed congr lean_s699 lean_r106
let lean_s704 := by timed congr lean_s703 lean_r118
let lean_s705 := by timed congr lean_s702 lean_s704
let lean_s706 := by timed congr lean_s701 lean_s705
have lean_s707 : (Eq let665 let926) := by timed congr lean_s700 lean_s706
have lean_s708 : (Eq let666 let926) := by timed Eq.trans lean_r259 lean_s707
let lean_s709 := by timed congr lean_s313 lean_s708
have lean_s710 : let785 := by timed rfl
let lean_s711 := by timed congr lean_s710 lean_r57
let lean_s712 := by timed congr lean_s710 lean_r153
let lean_s713 := by timed congr lean_s710 lean_r313
let lean_s714 := by timed congr lean_s710 lean_r218
let lean_s715 := by timed congr lean_s714 lean_r71
let lean_s716 := by timed congr lean_s713 lean_s715
let lean_s717 := by timed congr lean_s712 lean_s716
have lean_s718 : (Eq let227 let925) := by timed congr lean_s711 lean_s717
have lean_s719 : (Eq let228 let925) := by timed Eq.trans lean_r73 lean_s718
let lean_s720 := by timed congr lean_s313 lean_s719
have lean_s721 : let785 := by timed rfl
let lean_s722 := by timed congr lean_s721 lean_r287
let lean_s723 := by timed congr lean_s721 lean_r254
let lean_s724 := by timed congr lean_s721 lean_r46
let lean_s725 := by timed congr lean_s721 lean_r218
let lean_s726 := by timed congr lean_s725 lean_r129
let lean_s727 := by timed congr lean_s724 lean_s726
let lean_s728 := by timed congr lean_s723 lean_s727
have lean_s729 : (Eq let723 let924) := by timed congr lean_s722 lean_s728
have lean_s730 : (Eq let707 let924) := by timed Eq.trans lean_r289 lean_s729
let lean_s731 := by timed congr lean_s313 lean_s730
have lean_s732 : let785 := by timed rfl
let lean_s733 := by timed congr lean_s732 lean_r187
let lean_s734 := by timed congr lean_s732 lean_r58
let lean_s735 := by timed congr lean_s732 lean_r61
let lean_s736 := by timed congr lean_s732 lean_r165
let lean_s737 := by timed congr lean_s736 lean_r210
let lean_s738 := by timed congr lean_s735 lean_s737
let lean_s739 := by timed congr lean_s734 lean_s738
have lean_s740 : (Eq let237 let923) := by timed congr lean_s733 lean_s739
have lean_s741 : (Eq let238 let923) := by timed Eq.trans lean_r78 lean_s740
let lean_s742 := by timed congr lean_s313 lean_s741
have lean_s743 : let785 := by timed rfl
let lean_s744 := by timed congr lean_s743 lean_r284
let lean_s745 := by timed congr lean_s743 lean_r253
let lean_s746 := by timed congr lean_s743 lean_r47
let lean_s747 := by timed congr lean_s743 lean_r165
let lean_s748 := by timed congr lean_s747 lean_r234
let lean_s749 := by timed congr lean_s746 lean_s748
let lean_s750 := by timed congr lean_s745 lean_s749
have lean_s751 : (Eq let570 let922) := by timed congr lean_s744 lean_s750
have lean_s752 : (Eq let571 let922) := by timed Eq.trans lean_r174 lean_s751
let lean_s753 := by timed congr lean_s313 lean_s752
have lean_s754 : let785 := by timed rfl
let lean_s755 := by timed congr lean_s754 lean_r89
let lean_s756 := by timed congr lean_s754 lean_r79
let lean_s757 := by timed congr lean_s754 lean_r124
let lean_s758 := by timed congr lean_s754 lean_r183
let lean_s759 := by timed congr lean_s758 lean_r143
let lean_s760 := by timed congr lean_s757 lean_s759
let lean_s761 := by timed congr lean_s756 lean_s760
have lean_s762 : (Eq let274 let920) := by timed congr lean_s755 lean_s761
have lean_s763 : (Eq let275 let920) := by timed Eq.trans lean_r94 lean_s762
let lean_s764 := by timed congr lean_s313 lean_s763
have lean_s765 : let785 := by timed rfl
let lean_s766 := by timed congr lean_s765 lean_r283
let lean_s767 := by timed congr lean_s765 lean_r249
let lean_s768 := by timed congr lean_s765 lean_r204
let lean_s769 := by timed congr lean_s765 lean_r69
let lean_s770 := by timed congr lean_s769 lean_r143
let lean_s771 := by timed congr lean_s768 lean_s770
let lean_s772 := by timed congr lean_s767 lean_s771
have lean_s773 : (Eq let740 let919) := by timed congr lean_s766 lean_s772
have lean_s774 : (Eq let706 let919) := by timed Eq.trans lean_r306 lean_s773
let lean_s775 := by timed congr lean_s313 lean_s774
have lean_s776 : let785 := by timed rfl
let lean_s777 := by timed congr lean_s776 lean_r75
let lean_s778 := by timed congr lean_s776 lean_r82
let lean_s779 := by timed congr lean_s776 lean_r92
let lean_s780 := by timed congr lean_s776 lean_r104
let lean_s781 := by timed congr lean_s780 lean_r133
let lean_s782 := by timed congr lean_s779 lean_s781
let lean_s783 := by timed congr lean_s778 lean_s782
have lean_s784 : (Eq let354 let918) := by timed congr lean_s777 lean_s783
have lean_s785 : (Eq let355 let918) := by timed Eq.trans lean_r119 lean_s784
let lean_s786 := by timed congr lean_s313 lean_s785
have lean_s787 : let785 := by timed rfl
let lean_s788 := by timed congr lean_s787 lean_r192
let lean_s789 := by timed congr lean_s787 lean_r247
let lean_s790 := by timed congr lean_s787 lean_r50
let lean_s791 := by timed congr lean_s787 lean_r70
let lean_s792 := by timed congr lean_s791 lean_r133
let lean_s793 := by timed congr lean_s790 lean_s792
let lean_s794 := by timed congr lean_s789 lean_s793
have lean_s795 : (Eq let738 let909) := by timed congr lean_s788 lean_s794
have lean_s796 : (Eq let705 let909) := by timed Eq.trans lean_r304 lean_s795
let lean_s797 := by timed congr lean_s313 lean_s796
have lean_s798 : let785 := by timed rfl
let lean_s799 := by timed congr lean_s798 lean_r77
let lean_s800 := by timed congr lean_s798 lean_r86
let lean_s801 := by timed congr lean_s798 lean_r132
let lean_s802 := by timed congr lean_s798 lean_r118
let lean_s803 := by timed congr lean_s802 lean_r193
let lean_s804 := by timed congr lean_s801 lean_s803
let lean_s805 := by timed congr lean_s800 lean_s804
have lean_s806 : (Eq let737 let917) := by timed congr lean_s799 lean_s805
have lean_s807 : (Eq let704 let917) := by timed Eq.trans lean_r303 lean_s806
let lean_s808 := by timed congr lean_s313 lean_s807
have lean_s809 : let785 := by timed rfl
let lean_s810 := by timed congr lean_s809 lean_r233
let lean_s811 := by timed congr lean_s809 lean_r246
let lean_s812 := by timed congr lean_s809 lean_r51
let lean_s813 := by timed congr lean_s809 lean_r180
let lean_s814 := by timed congr lean_s813 lean_r193
let lean_s815 := by timed congr lean_s812 lean_s814
let lean_s816 := by timed congr lean_s811 lean_s815
have lean_s817 : (Eq let673 let916) := by timed congr lean_s810 lean_s816
have lean_s818 : (Eq let674 let916) := by timed Eq.trans lean_r265 lean_s817
let lean_s819 := by timed congr lean_s313 lean_s818
have lean_s820 : let785 := by timed rfl
let lean_s821 := by timed congr lean_s820 lean_r307
let lean_s822 := by timed congr lean_s820 lean_r88
let lean_s823 := by timed congr lean_s820 lean_r93
let lean_s824 := by timed congr lean_s820 lean_r129
let lean_s825 := by timed congr lean_s824 lean_r120
let lean_s826 := by timed congr lean_s823 lean_s825
let lean_s827 := by timed congr lean_s822 lean_s826
have lean_s828 : (Eq let724 let915) := by timed congr lean_s821 lean_s827
have lean_s829 : (Eq let703 let915) := by timed Eq.trans lean_r290 lean_s828
let lean_s830 := by timed congr lean_s313 lean_s829
have lean_s831 : let785 := by timed rfl
let lean_s832 := by timed congr lean_s831 lean_r173
let lean_s833 := by timed congr lean_s831 lean_r245
let lean_s834 := by timed congr lean_s831 lean_r52
let lean_s835 := by timed congr lean_s831 lean_r71
let lean_s836 := by timed congr lean_s835 lean_r120
let lean_s837 := by timed congr lean_s834 lean_s836
let lean_s838 := by timed congr lean_s833 lean_s837
have lean_s839 : (Eq let736 let913) := by timed congr lean_s832 lean_s838
have lean_s840 : (Eq let702 let913) := by timed Eq.trans lean_r302 lean_s839
let lean_s841 := by timed congr lean_s313 lean_s840
have lean_s842 : let785 := by timed rfl
let lean_s843 := by timed congr lean_s842 lean_r147
let lean_s844 := by timed congr lean_s842 lean_r110
let lean_s845 := by timed congr lean_s842 lean_r207
let lean_s846 := by timed congr lean_s842 lean_r234
let lean_s847 := by timed congr lean_s846 lean_r300
let lean_s848 := by timed congr lean_s845 lean_s847
let lean_s849 := by timed congr lean_s844 lean_s848
have lean_s850 : (Eq let697 let911) := by timed congr lean_s843 lean_s849
have lean_s851 : (Eq let698 let911) := by timed Eq.trans lean_r282 lean_s850
let lean_s852 := by timed congr lean_s313 lean_s851
have lean_s853 : let785 := by timed rfl
let lean_s854 := by timed congr lean_s853 lean_r279
let lean_s855 := by timed congr lean_s853 lean_r243
let lean_s856 := by timed congr lean_s853 lean_r53
let lean_s857 := by timed congr lean_s853 lean_r210
let lean_s858 := by timed congr lean_s857 lean_r300
let lean_s859 := by timed congr lean_s856 lean_s858
let lean_s860 := by timed congr lean_s855 lean_s859
have lean_s861 : (Eq let735 let910) := by timed congr lean_s854 lean_s860
have lean_s862 : (Eq let700 let910) := by timed Eq.trans lean_r301 lean_s861
let lean_s863 := by timed congr lean_s852 lean_s862
let lean_s864 := by timed congr lean_s841 lean_s863
let lean_s865 := by timed congr lean_s830 lean_s864
let lean_s866 := by timed congr lean_s819 lean_s865
let lean_s867 := by timed congr lean_s808 lean_s866
let lean_s868 := by timed congr lean_s797 lean_s867
let lean_s869 := by timed congr lean_s786 lean_s868
let lean_s870 := by timed congr lean_s775 lean_s869
let lean_s871 := by timed congr lean_s764 lean_s870
let lean_s872 := by timed congr lean_s753 lean_s871
let lean_s873 := by timed congr lean_s742 lean_s872
let lean_s874 := by timed congr lean_s731 lean_s873
let lean_s875 := by timed congr lean_s720 lean_s874
let lean_s876 := by timed congr lean_s709 lean_s875
let lean_s877 := by timed congr lean_s698 lean_s876
let lean_s878 := by timed congr lean_s687 lean_s877
let lean_s879 := by timed congr lean_s676 lean_s878
let lean_s880 := by timed congr lean_s665 lean_s879
let lean_s881 := by timed congr lean_s654 lean_s880
let lean_s882 := by timed congr lean_s643 lean_s881
let lean_s883 := by timed congr lean_s632 lean_s882
let lean_s884 := by timed congr lean_s621 lean_s883
let lean_s885 := by timed congr lean_s610 lean_s884
let lean_s886 := by timed congr lean_s599 lean_s885
let lean_s887 := by timed congr lean_s588 lean_s886
let lean_s888 := by timed congr lean_s577 lean_s887
let lean_s889 := by timed congr lean_s566 lean_s888
let lean_s890 := by timed congr lean_s555 lean_s889
let lean_s891 := by timed congr lean_s544 lean_s890
let lean_s892 := by timed congr lean_s533 lean_s891
let lean_s893 := by timed congr lean_s522 lean_s892
let lean_s894 := by timed congr lean_s511 lean_s893
let lean_s895 := by timed congr lean_s500 lean_s894
let lean_s896 := by timed congr lean_s489 lean_s895
let lean_s897 := by timed congr lean_s478 lean_s896
let lean_s898 := by timed congr lean_s467 lean_s897
let lean_s899 := by timed congr lean_s456 lean_s898
let lean_s900 := by timed congr lean_s445 lean_s899
let lean_s901 := by timed congr lean_s434 lean_s900
let lean_s902 := by timed congr lean_s423 lean_s901
let lean_s903 := by timed congr lean_s412 lean_s902
let lean_s904 := by timed congr lean_s401 lean_s903
let lean_s905 := by timed congr lean_s390 lean_s904
let lean_s906 := by timed congr lean_s379 lean_s905
let lean_s907 := by timed congr lean_s368 lean_s906
let lean_s908 := by timed congr lean_s357 lean_s907
let lean_s909 := by timed congr lean_s346 lean_s908
let lean_s910 := by timed congr lean_s335 lean_s909
have lean_s911 : (Eq let719 let962) := by timed congr lean_s324 lean_s910
have lean_s912 : (Eq let720 let962) := by timed Eq.trans lean_r285 lean_s911
have lean_s913 : let962 := by timed eqResolve lean_a325 lean_s912
have lean_s914 : let926 := by andElim lean_s913, 35
have lean_s915 : (Or let254 (Or let233 (Or let30 (Or let567 let322)))) := by permutateOr lean_s914, [1, 0, 4, 2, 3], (- 1)
have lean_s916 : (Or let1185 (Or let982 let1084)) := by timed cnfAndNeg [let87, let254]
have lean_s917 : let1184 :=
  (scope (fun lean_a456 : let87 =>
    (scope (fun lean_a457 : let254 =>
      have lean_s917 : let381 := by timed Eq.symm lean_a457
      have lean_s918 : let376 := by timed Eq.symm lean_a456
      have lean_s919 : let87 := by timed Eq.symm lean_s918
      have lean_s920 : let452 := by timed Eq.trans lean_s917 lean_s919
      show let452 from lean_s920
  ))))
have lean_s918 : (Implies let1185 let452) := by liftOrNToImp lean_s917, 2
have lean_s919 : (Or (Not let1185) let452) := by timed impliesElim lean_s918
have lean_s920 : let1184 := by R1 lean_s916, lean_s919, let1185, [(- 1), (- 1)]
have lean_s921 : (Or let452 (Or let1084 let982)) := by permutateOr lean_s920, [2, 1, 0], (- 1)
have lean_s922 : let514 := by timed eqResolve lean_a332 lean_r128
have lean_s923 : let453 := by andElim lean_s922, 69
let lean_s924 := by R1 lean_s921, lean_s923, let452, [(- 1), 0]
have lean_s925 : let916 := by andElim lean_s913, 45
have lean_s926 : (Or let87 (Or let22 (Or let644 (Or let148 let587)))) := by permutateOr lean_s925, [1, 3, 0, 2, 4], (- 1)
have lean_s927 : (Or let849 (Or let582 let789)) := by timed cnfAndNeg [let581, let277]
have lean_s928 : let848 :=
  (scope (fun lean_a458 : let581 =>
    (scope (fun lean_a459 : let277 =>
      have lean_s928 : (Eq e2 e2) := by timed rfl
      let lean_s929 := by timed flipCongrArg lean_s928 [Eq]
      have lean_s930 : let281 := by timed Eq.symm lean_a459
      have lean_s931 : let277 := by timed Eq.symm lean_s930
      have lean_s932 : (Eq let22 let30) := by timed congr lean_s929 lean_s931
      have lean_s933 : (Eq let30 False) := by timed falseIntro lean_a458
      have lean_s934 : (Eq let22 False) := by timed Eq.trans lean_s932 lean_s933
      have lean_s935 : let845 := by timed falseElim lean_s934
      show let845 from lean_s935
  ))))
have lean_s929 : (Implies let849 let845) := by liftOrNToImp lean_s928, 2
have lean_s930 : (Or (Not let849) let845) := by timed impliesElim lean_s929
have lean_s931 : let848 := by R1 lean_s927, lean_s930, let849, [(- 1), (- 1)]
have lean_s932 : let785 := by timed rfl
have lean_s933 : let569 := by timed rfl
let lean_s934 := by timed flipCongrArg lean_s933 [Eq]
have lean_s935 : (Eq let583 let569) := by timed congr lean_s934 lean_r231
have lean_s936 : (Eq let583 True) := by timed Eq.trans lean_s935 lean_r172
have lean_s937 : (Eq let584 True) := by timed Eq.trans lean_r190 lean_s936
have lean_s938 : let584 := by timed trueElim lean_s937
let lean_s939 := by timed congr lean_s932 lean_s938
have lean_s940 : (Eq let789 let789) := by timed rfl
let lean_s941 := by timed congr lean_s932 lean_s940
have lean_s942 : (Eq let845 let845) := by timed rfl
let lean_s943 := by timed congr lean_s941 lean_s942
have lean_s944 : (Eq let848 let847) := by timed congr lean_s939 lean_s943
have lean_s945 : let847 := by timed eqResolve lean_s931 lean_s944
have lean_s946 : (Or let30 (Or let845 let789)) := by permutateOr lean_s945, [0, 2, 1], (- 1)
have lean_s947 : (Or let1136 let1134) := by timed cnfAndNeg [let16, let28]
have lean_s948 : let1135 :=
  (scope (fun lean_a460 : let16 =>
    (scope (fun lean_a461 : let28 =>
      have lean_s948 : let331 := by timed Eq.symm lean_a461
      have lean_s949 : let28 := by timed Eq.symm lean_s948
      have lean_s950 : let333 := by timed Eq.symm lean_a460
      have lean_s951 : let93 := by timed Eq.trans lean_s949 lean_s950
      show let93 from lean_s951
  ))))
have lean_s949 : (Implies let1136 let93) := by liftOrNToImp lean_s948, 2
have lean_s950 : (Or (Not let1136) let93) := by timed impliesElim lean_s949
have lean_s951 : let1135 := by R1 lean_s947, lean_s950, let1136, [(- 1), (- 1)]
have lean_s952 : (Or let93 let1134) := by permutateOr lean_s951, [2, 0, 1], (- 1)
have lean_s953 : let778 := by timed rfl
have lean_s954 : (Eq let626 let2) := by timed flipCongrArg lean_r161 [Not]
let lean_s955 := by timed congr lean_s953 lean_s954
have lean_s956 : (Eq let625 let807) := by timed flipCongrArg lean_r126 [Not]
let lean_s957 := by timed congr lean_s953 lean_s956
have lean_s958 : (Eq let624 let806) := by timed flipCongrArg lean_r212 [Not]
let lean_s959 := by timed congr lean_s953 lean_s958
have lean_s960 : (Eq let623 let53) := by timed flipCongrArg lean_r152 [Not]
let lean_s961 := by timed congr lean_s953 lean_s960
have lean_s962 : (Eq let622 let805) := by timed flipCongrArg lean_r148 [Not]
let lean_s963 := by timed congr lean_s953 lean_s962
have lean_s964 : (Eq let621 let94) := by timed flipCongrArg lean_r202 [Not]
let lean_s965 := by timed congr lean_s953 lean_s964
have lean_s966 : (Eq let620 let802) := by timed flipCongrArg lean_r188 [Not]
let lean_s967 := by timed congr lean_s953 lean_s966
have lean_s968 : (Eq let619 let804) := by timed flipCongrArg lean_r286 [Not]
let lean_s969 := by timed congr lean_s953 lean_s968
have lean_s970 : (Eq let617 let803) := by timed flipCongrArg lean_r262 [Not]
let lean_s971 := by timed congr lean_s953 lean_s970
have lean_s972 : (Eq let615 let59) := by timed flipCongrArg lean_r102 [Not]
let lean_s973 := by timed congr lean_s971 lean_s972
let lean_s974 := by timed congr lean_s969 lean_s973
let lean_s975 := by timed congr lean_s967 lean_s974
let lean_s976 := by timed congr lean_s965 lean_s975
let lean_s977 := by timed congr lean_s963 lean_s976
let lean_s978 := by timed congr lean_s961 lean_s977
let lean_s979 := by timed congr lean_s959 lean_s978
let lean_s980 := by timed congr lean_s957 lean_s979
have lean_s981 : (Eq let627 let808) := by timed congr lean_s955 lean_s980
have lean_s982 : (Eq let628 let808) := by timed Eq.trans lean_r221 lean_s981
have lean_s983 : let808 := by timed eqResolve lean_a333 lean_s982
have lean_s984 : let94 := by andElim lean_s983, 5
let lean_s985 := by R1 lean_s952, lean_s984, let93, [(- 1), 0]
have lean_s986 : let909 := by andElim lean_s913, 43
have lean_s987 : (Or let32 (Or let46 (Or let16 (Or let657 let522)))) := by permutateOr lean_s986, [2, 3, 0, 1, 4], (- 1)
let lean_s988 := by R2 lean_s985, lean_s987, let16, [(- 1), (- 1)]
have lean_s989 : (Or let905 (Or let123 (Or let901 let781))) := by timed cnfAndNeg [let122, let279, let551]
have lean_s990 : let904 :=
  (scope (fun lean_a462 : let122 =>
    (scope (fun lean_a463 : let279 =>
      (scope (fun lean_a464 : let551 =>
        have lean_s990 : let391 := by timed Eq.symm lean_a464
        have lean_s991 : let551 := by timed Eq.symm lean_s990
        let lean_s992 := by timed flipCongrArg lean_s991 [Eq]
        have lean_s993 : let290 := by timed Eq.symm lean_a463
        have lean_s994 : let279 := by timed Eq.symm lean_s993
        have lean_s995 : (Eq let657 let121) := by timed congr lean_s992 lean_s994
        have lean_s996 : let906 := by timed falseIntro lean_a462
        have lean_s997 : (Eq let657 False) := by timed Eq.trans lean_s995 lean_s996
        have lean_s998 : let900 := by timed falseElim lean_s997
        show let900 from lean_s998
  ))))))
have lean_s991 : (Implies let905 let900) := by liftOrNToImp lean_s990, 3
have lean_s992 : (Or (Not let905) let900) := by timed impliesElim lean_s991
have lean_s993 : let904 := by R1 lean_s989, lean_s992, let905, [(- 1), (- 1)]
have lean_s994 : let785 := by timed rfl
have lean_s995 : let130 := by timed rfl
let lean_s996 := by timed flipCongrArg lean_s995 [Eq]
have lean_s997 : (Eq let124 let130) := by timed congr lean_s996 lean_r41
have lean_s998 : (Eq let124 True) := by timed Eq.trans lean_s997 lean_r43
have lean_s999 : (Eq let125 True) := by timed Eq.trans lean_r39 lean_s998
have lean_s1000 : let125 := by timed trueElim lean_s999
let lean_s1001 := by timed congr lean_s994 lean_s1000
have lean_s1002 : (Eq let901 let901) := by timed rfl
let lean_s1003 := by timed congr lean_s994 lean_s1002
have lean_s1004 : (Eq let781 let781) := by timed rfl
let lean_s1005 := by timed congr lean_s994 lean_s1004
have lean_s1006 : (Eq let900 let900) := by timed rfl
let lean_s1007 := by timed congr lean_s1005 lean_s1006
let lean_s1008 := by timed congr lean_s1003 lean_s1007
have lean_s1009 : (Eq let904 let903) := by timed congr lean_s1001 lean_s1008
have lean_s1010 : let903 := by timed eqResolve lean_s993 lean_s1009
have lean_s1011 : (Or let121 (Or let781 (Or let900 let901))) := by permutateOr lean_s1010, [0, 2, 3, 1], (- 1)
have lean_s1012 : let122 := by andElim lean_s922, 16
let lean_s1013 := by R1 lean_s1011, lean_s1012, let121, [(- 1), 0]
have lean_s1014 : let778 := by timed rfl
let lean_s1015 := by timed congr lean_s1014 lean_r163
let lean_s1016 := by timed congr lean_s1014 lean_r156
let lean_s1017 := by timed congr lean_s1014 lean_r141
let lean_s1018 := by timed congr lean_s1014 lean_r218
let lean_s1019 := by timed congr lean_s1018 lean_r300
let lean_s1020 := by timed congr lean_s1017 lean_s1019
let lean_s1021 := by timed congr lean_s1016 lean_s1020
have lean_s1022 : (Eq let563 let777) := by timed congr lean_s1015 lean_s1021
have lean_s1023 : (Eq let564 let777) := by timed Eq.trans lean_r168 lean_s1022
have lean_s1024 : let777 := by timed eqResolve lean_a331 lean_s1023
have lean_s1025 : let551 := by andElim lean_s1024, 1
let lean_s1026 := by R2 lean_s1013, lean_s1025, let551, [(- 1), 0]
have lean_s1027 : let778 := by timed rfl
let lean_s1028 := by timed congr lean_s1027 lean_r206
let lean_s1029 := by timed congr lean_s1027 lean_r201
let lean_s1030 := by timed congr lean_s1027 lean_r108
let lean_s1031 := by timed congr lean_s1027 lean_r250
let lean_s1032 := by timed congr lean_s1027 lean_r248
have lean_s1033 : (Eq let295 let295) := by timed rfl
let lean_s1034 := by timed congr lean_s1027 lean_s1033
let lean_s1035 := by timed congr lean_s1027 lean_r179
let lean_s1036 := by timed congr lean_s1027 lean_r101
let lean_s1037 := by timed congr lean_s1027 lean_r116
let lean_s1038 := by timed congr lean_s1027 lean_r122
have lean_s1039 : (Eq let289 let289) := by timed rfl
let lean_s1040 := by timed congr lean_s1027 lean_s1039
have lean_s1041 : (Eq let288 let288) := by timed rfl
let lean_s1042 := by timed congr lean_s1027 lean_s1041
let lean_s1043 := by timed congr lean_s1027 lean_r158
let lean_s1044 := by timed congr lean_s1027 lean_r37
let lean_s1045 := by timed congr lean_s1027 lean_r136
have lean_s1046 : (Eq let284 let284) := by timed rfl
let lean_s1047 := by timed congr lean_s1027 lean_s1046
have lean_s1048 : (Eq let283 let283) := by timed rfl
let lean_s1049 := by timed congr lean_s1027 lean_s1048
have lean_s1050 : (Eq let116 let116) := by timed rfl
let lean_s1051 := by timed congr lean_s1027 lean_s1050
let lean_s1052 := by timed congr lean_s1027 lean_r199
let lean_s1053 := by timed congr lean_s1027 lean_r186
have lean_s1054 : (Eq let280 let280) := by timed rfl
let lean_s1055 := by timed congr lean_s1027 lean_s1054
have lean_s1056 : (Eq let279 let279) := by timed rfl
let lean_s1057 := by timed congr lean_s1027 lean_s1056
have lean_s1058 : (Eq let278 let278) := by timed rfl
let lean_s1059 := by timed congr lean_s1027 lean_s1058
have lean_s1060 : (Eq let277 let277) := by timed rfl
let lean_s1061 := by timed congr lean_s1027 lean_s1060
let lean_s1062 := by timed congr lean_s1061 lean_r175
let lean_s1063 := by timed congr lean_s1059 lean_s1062
let lean_s1064 := by timed congr lean_s1057 lean_s1063
let lean_s1065 := by timed congr lean_s1055 lean_s1064
let lean_s1066 := by timed congr lean_s1053 lean_s1065
let lean_s1067 := by timed congr lean_s1052 lean_s1066
let lean_s1068 := by timed congr lean_s1051 lean_s1067
let lean_s1069 := by timed congr lean_s1049 lean_s1068
let lean_s1070 := by timed congr lean_s1047 lean_s1069
let lean_s1071 := by timed congr lean_s1045 lean_s1070
let lean_s1072 := by timed congr lean_s1044 lean_s1071
let lean_s1073 := by timed congr lean_s1043 lean_s1072
let lean_s1074 := by timed congr lean_s1042 lean_s1073
let lean_s1075 := by timed congr lean_s1040 lean_s1074
let lean_s1076 := by timed congr lean_s1038 lean_s1075
let lean_s1077 := by timed congr lean_s1037 lean_s1076
let lean_s1078 := by timed congr lean_s1036 lean_s1077
let lean_s1079 := by timed congr lean_s1035 lean_s1078
let lean_s1080 := by timed congr lean_s1034 lean_s1079
let lean_s1081 := by timed congr lean_s1032 lean_s1080
let lean_s1082 := by timed congr lean_s1031 lean_s1081
let lean_s1083 := by timed congr lean_s1030 lean_s1082
let lean_s1084 := by timed congr lean_s1029 lean_s1083
have lean_s1085 : (Eq let301 let308) := by timed congr lean_s1028 lean_s1084
have lean_s1086 : (Eq let301 let307) := by timed Eq.trans lean_s1085 lean_r97
have lean_s1087 : (Eq let302 let307) := by timed Eq.trans lean_r95 lean_s1086
have lean_s1088 : let307 := by timed eqResolve lean_a328 lean_s1087
have lean_s1089 : let279 := by andElim lean_s1088, 6
have lean_s1090 : let900 := by R2 lean_s1026, lean_s1089, let279, [(- 1), 0]
let lean_s1091 := by R1 lean_s988, lean_s1090, let657, [(- 1), 0]
have lean_s1092 : (Eq let761 let1133) := by timed flipCongrArg lean_r7 [Not]
have lean_s1093 : let1133 := by timed eqResolve lean_a352 lean_s1092
have lean_s1094 : (Or let102 (Or let581 let35)) := by timed flipNotAnd lean_s1093 [let32, let30, let28]
have lean_s1095 : (Or let35 (Or let102 let581)) := by permutateOr lean_s1094, [2, 0, 1], (- 1)
let lean_s1096 := by R1 lean_s1091, lean_s1095, let32, [(- 1), (- 1)]
have lean_s1097 : (Or let897 (Or let139 let789)) := by timed cnfAndNeg [let138, let277]
have lean_s1098 : let896 :=
  (scope (fun lean_a465 : let138 =>
    (scope (fun lean_a466 : let277 =>
      have lean_s1098 : let899 := by timed rfl
      let lean_s1099 := by timed flipCongrArg lean_s1098 [Eq]
      have lean_s1100 : let281 := by timed Eq.symm lean_a466
      have lean_s1101 : let277 := by timed Eq.symm lean_s1100
      have lean_s1102 : (Eq let46 let86) := by timed congr lean_s1099 lean_s1101
      have lean_s1103 : let898 := by timed falseIntro lean_a465
      have lean_s1104 : (Eq let46 False) := by timed Eq.trans lean_s1102 lean_s1103
      have lean_s1105 : let827 := by timed falseElim lean_s1104
      show let827 from lean_s1105
  ))))
have lean_s1099 : (Implies let897 let827) := by liftOrNToImp lean_s1098, 2
have lean_s1100 : (Or (Not let897) let827) := by timed impliesElim lean_s1099
have lean_s1101 : let896 := by R1 lean_s1097, lean_s1100, let897, [(- 1), (- 1)]
have lean_s1102 : let785 := by timed rfl
have lean_s1103 : let733 := by timed rfl
let lean_s1104 := by timed flipCongrArg lean_s1103 [Eq]
have lean_s1105 : (Eq let524 let733) := by timed congr lean_s1104 lean_r48
have lean_s1106 : (Eq let524 True) := by timed Eq.trans lean_s1105 lean_r299
have lean_s1107 : (Eq let140 True) := by timed Eq.trans lean_r137 lean_s1106
have lean_s1108 : let140 := by timed trueElim lean_s1107
let lean_s1109 := by timed congr lean_s1102 lean_s1108
let lean_s1110 := by timed congr lean_s1102 lean_s940
have lean_s1111 : (Eq let827 let827) := by timed rfl
let lean_s1112 := by timed congr lean_s1110 lean_s1111
have lean_s1113 : (Eq let896 let895) := by timed congr lean_s1109 lean_s1112
have lean_s1114 : let895 := by timed eqResolve lean_s1101 lean_s1113
have lean_s1115 : (Or let86 (Or let827 let789)) := by permutateOr lean_s1114, [0, 2, 1], (- 1)
let lean_s1116 := by R1 lean_s1096, lean_s1115, let46, [(- 1), (- 1)]
have lean_s1117 : let277 := by andElim lean_s1088, 9
let lean_s1118 := by R2 lean_s1116, lean_s1117, let277, [(- 1), 0]
have lean_s1119 : (Or let821 let819) := by timed cnfAndNeg [let86, let30]
have lean_s1120 : let820 :=
  (scope (fun lean_a466 : let86 =>
    (scope (fun lean_a467 : let30 =>
      have lean_s1120 : let353 := by timed Eq.symm lean_a467
      have lean_s1121 : let30 := by timed Eq.symm lean_s1120
      have lean_s1122 : let319 := by timed Eq.symm lean_a466
      have lean_s1123 : let540 := by timed Eq.trans lean_s1121 lean_s1122
      show let540 from lean_s1123
  ))))
have lean_s1121 : (Implies let821 let540) := by liftOrNToImp lean_s1120, 2
have lean_s1122 : (Or (Not let821) let540) := by timed impliesElim lean_s1121
have lean_s1123 : let820 := by R1 lean_s1119, lean_s1122, let821, [(- 1), (- 1)]
have lean_s1124 : (Or let540 let819) := by permutateOr lean_s1123, [2, 0, 1], (- 1)
let lean_s1125 := by R1 lean_s1118, lean_s1124, let86, [(- 1), (- 1)]
have lean_s1126 : let805 := by andElim lean_s983, 4
have lean_s1127 : (Or let35 (Or let522 (Or let35 let1127))) := by R1 lean_s1125, lean_s1126, let540, [(- 1), 0]
have lean_s1128 : (Or let35 let811) := by factor lean_s1127, (- 1)
have lean_s1129 : (Or let522 (Or let35 let581)) := by permutateOr lean_s1128, [1, 0, 2], (- 1)
have lean_s1130 : (Or let1181 (Or let3 (Or let75 let1028))) := by timed cnfAndNeg [let2, let10, let116]
have lean_s1131 : let1180 :=
  (scope (fun lean_a468 : let2 =>
    (scope (fun lean_a469 : let10 =>
      (scope (fun lean_a470 : let116 =>
        have lean_s1131 : let899 := by timed rfl
        let lean_s1132 := by timed flipCongrArg lean_s1131 [Eq]
        have lean_s1133 : let573 := by timed Eq.trans lean_a469 lean_a470
        have lean_s1134 : let173 := by timed Eq.symm lean_s1133
        have lean_s1135 : (Eq let315 let1) := by timed congr lean_s1132 lean_s1134
        have lean_s1136 : (Eq let1 False) := by timed falseIntro lean_a468
        have lean_s1137 : (Eq let315 False) := by timed Eq.trans lean_s1135 lean_s1136
        have lean_s1138 : let1177 := by timed falseElim lean_s1137
        show let1177 from lean_s1138
  ))))))
have lean_s1132 : (Implies let1181 let1177) := by liftOrNToImp lean_s1131, 3
have lean_s1133 : (Or (Not let1181) let1177) := by timed impliesElim lean_s1132
have lean_s1134 : let1180 := by R1 lean_s1130, lean_s1133, let1181, [(- 1), (- 1)]
have lean_s1135 : let785 := by timed rfl
have lean_s1136 : let6 := by timed rfl
let lean_s1137 := by timed flipCongrArg lean_s1136 [Eq]
have lean_s1138 : (Eq let4 let6) := by timed congr lean_s1137 lean_r1
have lean_s1139 : (Eq let4 True) := by timed Eq.trans lean_s1138 lean_r2
have lean_s1140 : (Eq let5 True) := by timed Eq.trans lean_r0 lean_s1139
have lean_s1141 : let5 := by timed trueElim lean_s1140
let lean_s1142 := by timed congr lean_s1135 lean_s1141
have lean_s1143 : (Eq let75 let75) := by timed rfl
let lean_s1144 := by timed congr lean_s1135 lean_s1143
have lean_s1145 : (Eq let1028 let1028) := by timed rfl
let lean_s1146 := by timed congr lean_s1135 lean_s1145
have lean_s1147 : (Eq let1177 let1177) := by timed rfl
let lean_s1148 := by timed congr lean_s1146 lean_s1147
let lean_s1149 := by timed congr lean_s1144 lean_s1148
have lean_s1150 : (Eq let1180 let1179) := by timed congr lean_s1142 lean_s1149
have lean_s1151 : let1179 := by timed eqResolve lean_s1134 lean_s1150
have lean_s1152 : (Or let1 (Or let75 (Or let1177 let1028))) := by permutateOr lean_s1151, [0, 1, 3, 2], (- 1)
have lean_s1153 : let2 := by andElim lean_s983, 0
let lean_s1154 := by R1 lean_s1152, lean_s1153, let1, [(- 1), 0]
have lean_s1155 : let116 := by andElim lean_s1088, 7
let lean_s1156 := by R2 lean_s1154, lean_s1155, let116, [(- 1), 0]
have lean_s1157 : let938 := by andElim lean_s913, 23
have lean_s1158 : (Or let315 (Or let23 (Or let12 (Or let613 let126)))) := by permutateOr lean_s1157, [3, 4, 0, 1, 2], (- 1)
let lean_s1159 := by R2 lean_s1156, lean_s1158, let315, [(- 1), (- 1)]
have lean_s1160 : (Or let1176 (Or let517 (Or let1172 let781))) := by timed cnfAndNeg [let501, let288, let551]
have lean_s1161 : let1175 :=
  (scope (fun lean_a471 : let501 =>
    (scope (fun lean_a472 : let288 =>
      (scope (fun lean_a473 : let551 =>
        have lean_s1161 : let391 := by timed Eq.symm lean_a473
        have lean_s1162 : let551 := by timed Eq.symm lean_s1161
        let lean_s1163 := by timed flipCongrArg lean_s1162 [Eq]
        have lean_s1164 : let292 := by timed Eq.symm lean_a472
        have lean_s1165 : let288 := by timed Eq.symm lean_s1164
        have lean_s1166 : (Eq let613 let317) := by timed congr lean_s1163 lean_s1165
        have lean_s1167 : (Eq let317 False) := by timed falseIntro lean_a471
        have lean_s1168 : (Eq let613 False) := by timed Eq.trans lean_s1166 lean_s1167
        have lean_s1169 : let1171 := by timed falseElim lean_s1168
        show let1171 from lean_s1169
  ))))))
have lean_s1162 : (Implies let1176 let1171) := by liftOrNToImp lean_s1161, 3
have lean_s1163 : (Or (Not let1176) let1171) := by timed impliesElim lean_s1162
have lean_s1164 : let1175 := by R1 lean_s1160, lean_s1163, let1176, [(- 1), (- 1)]
have lean_s1165 : let785 := by timed rfl
have lean_s1166 : let318 := by timed rfl
let lean_s1167 := by timed flipCongrArg lean_s1166 [Eq]
have lean_s1168 : (Eq let518 let318) := by timed congr lean_s1167 lean_r182
have lean_s1169 : (Eq let518 True) := by timed Eq.trans lean_s1168 lean_r103
have lean_s1170 : (Eq let519 True) := by timed Eq.trans lean_r130 lean_s1169
have lean_s1171 : let519 := by timed trueElim lean_s1170
let lean_s1172 := by timed congr lean_s1165 lean_s1171
have lean_s1173 : (Eq let1172 let1172) := by timed rfl
let lean_s1174 := by timed congr lean_s1165 lean_s1173
let lean_s1175 := by timed congr lean_s1165 lean_s1004
have lean_s1176 : (Eq let1171 let1171) := by timed rfl
let lean_s1177 := by timed congr lean_s1175 lean_s1176
let lean_s1178 := by timed congr lean_s1174 lean_s1177
have lean_s1179 : (Eq let1175 let1174) := by timed congr lean_s1172 lean_s1178
have lean_s1180 : let1174 := by timed eqResolve lean_s1164 lean_s1179
have lean_s1181 : (Or let317 (Or let781 (Or let1171 let1172))) := by permutateOr lean_s1180, [0, 2, 3, 1], (- 1)
have lean_s1182 : let501 := by andElim lean_s922, 14
let lean_s1183 := by R1 lean_s1181, lean_s1182, let317, [(- 1), 0]
let lean_s1184 := by R2 lean_s1183, lean_s1025, let551, [(- 1), 0]
have lean_s1185 : let288 := by andElim lean_s1088, 4
have lean_s1186 : let1171 := by R2 lean_s1184, lean_s1185, let288, [(- 1), 0]
let lean_s1187 := by R1 lean_s1159, lean_s1186, let613, [(- 1), 0]
have lean_s1188 : (Eq let775 let1170) := by timed flipCongrArg lean_r3 [Not]
have lean_s1189 : let1170 := by timed eqResolve lean_a444 lean_s1188
have lean_s1190 : (Or (Not let12) let1169) := by timed flipNotAnd lean_s1189 [let12, let10, let8]
have lean_s1191 : (Or let75 (Or let23 (Or let126 let1169))) := by R1 lean_s1187, lean_s1190, let12, [(- 1), (- 1)]
have lean_s1192 : (Or let75 (Or let23 (Or let126 let996))) := by factor lean_s1191, (- 1)
have lean_s1193 : let930 := by andElim lean_s913, 31
have lean_s1194 : (Or let10 (Or let543 (Or let72 (Or let726 let201)))) := by permutateOr lean_s1193, [2, 4, 1, 0, 3], (- 1)
let lean_s1195 := by R2 lean_s1192, lean_s1194, let10, [(- 1), (- 1)]
have lean_s1196 : (Or let1061 (Or let343 (Or let1057 let1012))) := by timed cnfAndNeg [let342, let284, let558]
have lean_s1197 : let1060 :=
  (scope (fun lean_a473 : let342 =>
    (scope (fun lean_a474 : let284 =>
      (scope (fun lean_a475 : let558 =>
        have lean_s1197 : let182 := by timed Eq.symm lean_a475
        have lean_s1198 : let558 := by timed Eq.symm lean_s1197
        let lean_s1199 := by timed flipCongrArg lean_s1198 [Eq]
        have lean_s1200 : let297 := by timed Eq.symm lean_a474
        have lean_s1201 : let284 := by timed Eq.symm lean_s1200
        have lean_s1202 : (Eq let726 let341) := by timed congr lean_s1199 lean_s1201
        have lean_s1203 : let1062 := by timed falseIntro lean_a473
        have lean_s1204 : (Eq let726 False) := by timed Eq.trans lean_s1202 lean_s1203
        have lean_s1205 : let1056 := by timed falseElim lean_s1204
        show let1056 from lean_s1205
  ))))))
have lean_s1198 : (Implies let1061 let1056) := by liftOrNToImp lean_s1197, 3
have lean_s1199 : (Or (Not let1061) let1056) := by timed impliesElim lean_s1198
have lean_s1200 : let1060 := by R1 lean_s1196, lean_s1199, let1061, [(- 1), (- 1)]
have lean_s1201 : let785 := by timed rfl
have lean_s1202 : let630 := by timed rfl
let lean_s1203 := by timed flipCongrArg lean_s1202 [Eq]
have lean_s1204 : (Eq let589 let630) := by timed congr lean_s1203 lean_r113
have lean_s1205 : (Eq let589 True) := by timed Eq.trans lean_s1204 lean_r223
have lean_s1206 : (Eq let344 True) := by timed Eq.trans lean_r195 lean_s1205
have lean_s1207 : let344 := by timed trueElim lean_s1206
let lean_s1208 := by timed congr lean_s1201 lean_s1207
have lean_s1209 : (Eq let1057 let1057) := by timed rfl
let lean_s1210 := by timed congr lean_s1201 lean_s1209
have lean_s1211 : (Eq let1012 let1012) := by timed rfl
let lean_s1212 := by timed congr lean_s1201 lean_s1211
have lean_s1213 : (Eq let1056 let1056) := by timed rfl
let lean_s1214 := by timed congr lean_s1212 lean_s1213
let lean_s1215 := by timed congr lean_s1210 lean_s1214
have lean_s1216 : (Eq let1060 let1059) := by timed congr lean_s1208 lean_s1215
have lean_s1217 : let1059 := by timed eqResolve lean_s1200 lean_s1216
have lean_s1218 : (Or let341 (Or let1012 (Or let1056 let1057))) := by permutateOr lean_s1217, [0, 2, 3, 1], (- 1)
have lean_s1219 : let342 := by andElim lean_s922, 2
let lean_s1220 := by R1 lean_s1218, lean_s1219, let341, [(- 1), 0]
have lean_s1221 : let558 := by andElim lean_s1024, 0
let lean_s1222 := by R2 lean_s1220, lean_s1221, let558, [(- 1), 0]
have lean_s1223 : let284 := by andElim lean_s1088, 2
have lean_s1224 : let1056 := by R2 lean_s1222, lean_s1223, let284, [(- 1), 0]
let lean_s1225 := by R1 lean_s1195, lean_s1224, let726, [(- 1), 0]
have lean_s1226 : (Or let1168 (Or let901 (Or let1035 let787))) := by timed cnfAndNeg [let279, let239, let72]
have lean_s1227 : let1167 :=
  (scope (fun lean_a476 : let279 =>
    (scope (fun lean_a477 : let239 =>
      (scope (fun lean_a478 : let72 =>
        have lean_s1227 : let383 := by timed Eq.symm lean_a478
        have lean_s1228 : let240 := by timed Eq.symm lean_a477
        have lean_s1229 : let239 := by timed Eq.symm lean_s1228
        let lean_s1230 := by timed Eq.trans lean_s1227 lean_s1229
        have lean_s1231 : let290 := by timed Eq.symm lean_a476
        have lean_s1232 : let452 := by timed Eq.trans lean_s1230 lean_s1231
        show let452 from lean_s1232
  ))))))
have lean_s1228 : (Implies let1168 let452) := by liftOrNToImp lean_s1227, 3
have lean_s1229 : (Or (Not let1168) let452) := by timed impliesElim lean_s1228
have lean_s1230 : let1167 := by R1 lean_s1226, lean_s1229, let1168, [(- 1), (- 1)]
have lean_s1231 : (Or let452 (Or let787 let1036)) := by permutateOr lean_s1230, [3, 2, 1, 0], (- 1)
let lean_s1232 := by R1 lean_s1225, lean_s1231, let72, [(- 1), (- 1)]
let lean_s1233 := by R1 lean_s1232, lean_s923, let452, [(- 1), 0]
let lean_s1234 := by R2 lean_s1233, lean_s1089, let279, [(- 1), 0]
have lean_s1235 : (Or let1166 (Or let565 (Or let901 (Or let1035 (Or let974 (Or let581 (Or let530 let795))))))) := by timed cnfAndNeg [let477, let279, let239, let278, let30, let529, let612]
have lean_s1236 : let1165 :=
  (scope (fun lean_a478 : let477 =>
    (scope (fun lean_a479 : let279 =>
      (scope (fun lean_a480 : let239 =>
        (scope (fun lean_a481 : let278 =>
          (scope (fun lean_a482 : let30 =>
            (scope (fun lean_a483 : let529 =>
              (scope (fun lean_a484 : let612 =>
                have lean_s1236 : let240 := by timed Eq.symm lean_a480
                have lean_s1237 : let239 := by timed Eq.symm lean_s1236
                have lean_s1238 : let290 := by timed Eq.symm lean_a479
                have lean_s1239 : let25 := by timed Eq.trans lean_s1237 lean_s1238
                let lean_s1240 := by timed flipCongrArg lean_s1239 [Eq]
                have lean_s1241 : let195 := by timed Eq.symm lean_a484
                have lean_s1242 : let759 := by timed Eq.symm lean_a483
                have lean_s1243 : let529 := by timed Eq.symm lean_s1242
                let lean_s1244 := by timed Eq.trans lean_s1241 lean_s1243
                have lean_s1245 : let885 := by timed rfl
                let lean_s1246 := by timed flipCongrArg lean_s1245 [op]
                have lean_s1247 : let353 := by timed Eq.symm lean_a482
                have lean_s1248 : let1157 := by timed congr lean_s1246 lean_s1247
                let lean_s1249 := by timed Eq.trans lean_s1244 lean_s1248
                have lean_s1250 : let285 := by timed Eq.symm lean_a481
                have lean_s1251 : (Eq let39 let31) := by timed Eq.trans lean_s1249 lean_s1250
                have lean_s1252 : (Eq let201 let133) := by timed congr lean_s1240 lean_s1251
                have lean_s1253 : (Eq let133 False) := by timed falseIntro lean_a478
                have lean_s1254 : (Eq let201 False) := by timed Eq.trans lean_s1252 lean_s1253
                have lean_s1255 : let1052 := by timed falseElim lean_s1254
                show let1052 from lean_s1255
  ))))))))))))))
have lean_s1237 : (Implies let1166 let1052) := by liftOrNToImp lean_s1236, 7
have lean_s1238 : (Or (Not let1166) let1052) := by timed impliesElim lean_s1237
have lean_s1239 : let1165 := by R1 lean_s1235, lean_s1238, let1166, [(- 1), (- 1)]
have lean_s1240 : let785 := by timed rfl
have lean_s1241 : let134 := by timed rfl
let lean_s1242 := by timed flipCongrArg lean_s1241 [Eq]
have lean_s1243 : (Eq let636 let134) := by timed congr lean_s1242 lean_r169
have lean_s1244 : (Eq let636 True) := by timed Eq.trans lean_s1243 lean_r45
have lean_s1245 : (Eq let566 True) := by timed Eq.trans lean_r227 lean_s1244
have lean_s1246 : let566 := by timed trueElim lean_s1245
let lean_s1247 := by timed congr lean_s1240 lean_s1246
let lean_s1248 := by timed congr lean_s1240 lean_s1002
have lean_s1249 : (Eq let1035 let1035) := by timed rfl
let lean_s1250 := by timed congr lean_s1240 lean_s1249
have lean_s1251 : (Eq let974 let974) := by timed rfl
let lean_s1252 := by timed congr lean_s1240 lean_s1251
have lean_s1253 : (Eq let581 let581) := by timed rfl
let lean_s1254 := by timed congr lean_s1240 lean_s1253
have lean_s1255 : (Eq let530 let530) := by timed rfl
let lean_s1256 := by timed congr lean_s1240 lean_s1255
have lean_s1257 : (Eq let795 let795) := by timed rfl
let lean_s1258 := by timed congr lean_s1240 lean_s1257
have lean_s1259 : (Eq let1052 let1052) := by timed rfl
let lean_s1260 := by timed congr lean_s1258 lean_s1259
let lean_s1261 := by timed congr lean_s1256 lean_s1260
let lean_s1262 := by timed congr lean_s1254 lean_s1261
let lean_s1263 := by timed congr lean_s1252 lean_s1262
let lean_s1264 := by timed congr lean_s1250 lean_s1263
let lean_s1265 := by timed congr lean_s1248 lean_s1264
have lean_s1266 : (Eq let1165 let1164) := by timed congr lean_s1247 lean_s1265
have lean_s1267 : let1164 := by timed eqResolve lean_s1239 lean_s1266
have lean_s1268 : (Or let133 (Or let530 (Or let795 (Or let1052 (Or let1035 (Or let581 (Or let901 let974))))))) := by permutateOr lean_s1267, [0, 5, 6, 7, 2, 4, 1, 3], (- 1)
let lean_s1269 := by R1 lean_s1234, lean_s1268, let201, [(- 1), (- 1)]
have lean_s1270 : let477 := by andElim lean_s922, 44
let lean_s1271 := by R1 lean_s1269, lean_s1270, let133, [(- 1), 0]
have lean_s1272 : let612 := by andElim lean_s1024, 3
let lean_s1273 := by R2 lean_s1271, lean_s1272, let612, [(- 1), 0]
have lean_s1274 : let278 := by andElim lean_s1088, 8
let lean_s1275 := by R2 lean_s1273, lean_s1274, let278, [(- 1), 0]
have lean_s1276 : (Or let23 (Or let126 (Or let996 (Or let543 (Or let1035 (Or let530 (Or let1035 let581))))))) := by R2 lean_s1275, lean_s1089, let279, [(- 1), 0]
have lean_s1277 : (Or let23 (Or let126 (Or let996 (Or let543 (Or let1035 let1159))))) := by factor lean_s1276, (- 1)
have lean_s1278 : let920 := by andElim lean_s913, 40
have lean_s1279 : (Or let417 (Or let543 (Or let239 (Or let264 let535)))) := by permutateOr lean_s1278, [2, 3, 1, 0, 4], (- 1)
let lean_s1280 := by R2 lean_s1277, lean_s1279, let239, [(- 1), (- 1)]
have lean_s1281 : (Or let1050 (Or let259 let1012)) := by timed cnfAndNeg [let258, let558]
have lean_s1282 : let1049 :=
  (scope (fun lean_a481 : let258 =>
    (scope (fun lean_a482 : let558 =>
      have lean_s1282 : let182 := by timed Eq.symm lean_a482
      have lean_s1283 : let558 := by timed Eq.symm lean_s1282
      let lean_s1284 := by timed flipCongrArg lean_s1283 [Eq]
      have lean_s1285 : (Eq let107 let107) := by timed rfl
      have lean_s1286 : (Eq let264 let257) := by timed congr lean_s1284 lean_s1285
      have lean_s1287 : let1017 := by timed falseIntro lean_a481
      have lean_s1288 : (Eq let264 False) := by timed Eq.trans lean_s1286 lean_s1287
      have lean_s1289 : let1046 := by timed falseElim lean_s1288
      show let1046 from lean_s1289
  ))))
have lean_s1283 : (Implies let1050 let1046) := by liftOrNToImp lean_s1282, 2
have lean_s1284 : (Or (Not let1050) let1046) := by timed impliesElim lean_s1283
have lean_s1285 : let1049 := by R1 lean_s1281, lean_s1284, let1050, [(- 1), (- 1)]
have lean_s1286 : let785 := by timed rfl
have lean_s1287 : let327 := by timed rfl
let lean_s1288 := by timed flipCongrArg lean_s1287 [Eq]
have lean_s1289 : (Eq let260 let327) := by timed congr lean_s1288 lean_r87
have lean_s1290 : (Eq let260 True) := by timed Eq.trans lean_s1289 lean_r109
have lean_s1291 : (Eq let261 True) := by timed Eq.trans lean_r85 lean_s1290
have lean_s1292 : let261 := by timed trueElim lean_s1291
let lean_s1293 := by timed congr lean_s1286 lean_s1292
let lean_s1294 := by timed congr lean_s1286 lean_s1211
have lean_s1295 : (Eq let1046 let1046) := by timed rfl
let lean_s1296 := by timed congr lean_s1294 lean_s1295
have lean_s1297 : (Eq let1049 let1048) := by timed congr lean_s1293 lean_s1296
have lean_s1298 : let1048 := by timed eqResolve lean_s1285 lean_s1297
have lean_s1299 : let258 := by andElim lean_s922, 3
let lean_s1300 := by R1 lean_s1298, lean_s1299, let257, [(- 1), 0]
have lean_s1301 : let1046 := by R2 lean_s1300, lean_s1221, let558, [(- 1), 0]
let lean_s1302 := by R1 lean_s1280, lean_s1301, let264, [(- 1), 0]
have lean_s1303 : (Or let835 (Or let833 let790)) := by timed cnfAndNeg [let535, let734]
have lean_s1304 : let834 :=
  (scope (fun lean_a482 : let535 =>
    (scope (fun lean_a483 : let734 =>
      have lean_s1304 : let203 := by timed Eq.symm lean_a483
      have lean_s1305 : let734 := by timed Eq.symm lean_s1304
      have lean_s1306 : let207 := by timed Eq.symm lean_a482
      have lean_s1307 : let52 := by timed Eq.trans lean_s1305 lean_s1306
      show let52 from lean_s1307
  ))))
have lean_s1305 : (Implies let835 let52) := by liftOrNToImp lean_s1304, 2
have lean_s1306 : (Or (Not let835) let52) := by timed impliesElim lean_s1305
have lean_s1307 : let834 := by R1 lean_s1303, lean_s1306, let835, [(- 1), (- 1)]
have lean_s1308 : (Or let52 (Or let790 let833)) := by permutateOr lean_s1307, [2, 1, 0], (- 1)
have lean_s1309 : let53 := by andElim lean_s983, 3
let lean_s1310 := by R1 lean_s1308, lean_s1309, let52, [(- 1), 0]
have lean_s1311 : let734 := by andElim lean_s1024, 4
have lean_s1312 : let833 := by R2 lean_s1310, lean_s1311, let734, [(- 1), 0]
let lean_s1313 := by R1 lean_s1302, lean_s1312, let535, [(- 1), 0]
have lean_s1314 : (Eq let773 let1162) := by timed flipCongrArg lean_r125 [Not]
have lean_s1315 : let1162 := by timed eqResolve lean_a426 lean_s1314
have lean_s1316 : (Or let17 (Or let1029 let845)) := by timed flipNotAnd lean_s1315 [let16, let417, let22]
have lean_s1317 : (Or let17 (Or let845 let1029)) := by permutateOr lean_s1316, [0, 2, 1], (- 1)
have lean_s1318 : (Or let23 (Or let126 (Or let996 (Or let543 (Or let530 (Or let581 (Or let543 let1161))))))) := by R1 lean_s1313, lean_s1317, let417, [(- 1), (- 1)]
have lean_s1319 : (Or let23 (Or let126 (Or let996 (Or let543 (Or let530 (Or let581 let1161)))))) := by factor lean_s1318, (- 1)
have lean_s1320 : (Eq let770 let964) := by timed flipCongrArg lean_r150 [Not]
have lean_s1321 : let964 := by timed eqResolve lean_a402 lean_s1320
have lean_s1322 : (Or let17 (Or let823 let963)) := by timed flipNotAnd lean_s1321 [let16, let543, let90]
have lean_s1323 : (Or let17 (Or let963 let823)) := by permutateOr lean_s1322, [0, 2, 1], (- 1)
have lean_s1324 : (Or let23 (Or let126 (Or let996 (Or let530 (Or let581 (Or let17 (Or let845 (Or let17 let963)))))))) := by R1 lean_s1319, lean_s1323, let543, [(- 1), (- 1)]
have lean_s1325 : (Or let23 (Or let126 (Or let996 (Or let530 (Or let581 (Or let17 (Or let845 let963))))))) := by factor lean_s1324, (- 1)
let lean_s1326 := by R2 lean_s1325, lean_s987, let16, [(- 1), (- 1)]
let lean_s1327 := by R1 lean_s1326, lean_s1090, let657, [(- 1), 0]
have lean_s1328 : (Or let993 (Or let103 let974)) := by timed cnfAndNeg [let102, let278]
have lean_s1329 : let992 :=
  (scope (fun lean_a484 : let102 =>
    (scope (fun lean_a485 : let278 =>
      have lean_s1329 : let899 := by timed rfl
      let lean_s1330 := by timed flipCongrArg lean_s1329 [Eq]
      have lean_s1331 : let285 := by timed Eq.symm lean_a485
      have lean_s1332 : (Eq let23 let32) := by timed congr lean_s1330 lean_s1331
      have lean_s1333 : (Eq let32 False) := by timed falseIntro lean_a484
      have lean_s1334 : (Eq let23 False) := by timed Eq.trans lean_s1332 lean_s1333
      have lean_s1335 : let989 := by timed falseElim lean_s1334
      show let989 from lean_s1335
  ))))
have lean_s1330 : (Implies let993 let989) := by liftOrNToImp lean_s1329, 2
have lean_s1331 : (Or (Not let993) let989) := by timed impliesElim lean_s1330
have lean_s1332 : let992 := by R1 lean_s1328, lean_s1331, let993, [(- 1), (- 1)]
have lean_s1333 : let785 := by timed rfl
have lean_s1334 : let106 := by timed rfl
let lean_s1335 := by timed flipCongrArg lean_s1334 [Eq]
have lean_s1336 : (Eq let104 let106) := by timed congr lean_s1335 lean_r33
have lean_s1337 : (Eq let104 True) := by timed Eq.trans lean_s1336 lean_r34
have lean_s1338 : (Eq let105 True) := by timed Eq.trans lean_r32 lean_s1337
have lean_s1339 : let105 := by timed trueElim lean_s1338
let lean_s1340 := by timed congr lean_s1333 lean_s1339
let lean_s1341 := by timed congr lean_s1333 lean_s1251
have lean_s1342 : (Eq let989 let989) := by timed rfl
let lean_s1343 := by timed congr lean_s1341 lean_s1342
have lean_s1344 : (Eq let992 let991) := by timed congr lean_s1340 lean_s1343
have lean_s1345 : let991 := by timed eqResolve lean_s1332 lean_s1344
have lean_s1346 : (Or let32 (Or let989 let974)) := by permutateOr lean_s1345, [0, 2, 1], (- 1)
let lean_s1347 := by R1 lean_s1327, lean_s1346, let23, [(- 1), (- 1)]
have lean_s1348 : (Or let126 (Or let996 (Or let530 (Or let581 (Or let845 (Or let963 (Or let32 (Or let46 (Or let522 let32))))))))) := by R2 lean_s1347, lean_s1274, let278, [(- 1), 0]
have lean_s1349 : (Or let126 (Or let996 (Or let530 (Or let581 (Or let845 (Or let963 let908)))))) := by factor lean_s1348, 9
have lean_s1350 : (Or let1000 (Or let95 (Or let102 let974))) := by timed cnfAndNeg [let94, let32, let278]
have lean_s1351 : let999 :=
  (scope (fun lean_a485 : let94 =>
    (scope (fun lean_a486 : let32 =>
      (scope (fun lean_a487 : let278 =>
        have lean_s1351 : let886 := by timed rfl
        let lean_s1352 := by timed flipCongrArg lean_s1351 [Eq]
        have lean_s1353 : let23 := by timed Eq.trans lean_a486 lean_a487
        have lean_s1354 : let269 := by timed Eq.symm lean_s1353
        have lean_s1355 : (Eq let8 let93) := by timed congr lean_s1352 lean_s1354
        have lean_s1356 : (Eq let93 False) := by timed falseIntro lean_a485
        have lean_s1357 : (Eq let8 False) := by timed Eq.trans lean_s1355 lean_s1356
        have lean_s1358 : let996 := by timed falseElim lean_s1357
        show let996 from lean_s1358
  ))))))
have lean_s1352 : (Implies let1000 let996) := by liftOrNToImp lean_s1351, 3
have lean_s1353 : (Or (Not let1000) let996) := by timed impliesElim lean_s1352
have lean_s1354 : let999 := by R1 lean_s1350, lean_s1353, let1000, [(- 1), (- 1)]
have lean_s1355 : let785 := by timed rfl
have lean_s1356 : let576 := by timed rfl
let lean_s1357 := by timed flipCongrArg lean_s1356 [Eq]
have lean_s1358 : (Eq let96 let576) := by timed congr lean_s1357 lean_r30
have lean_s1359 : (Eq let96 True) := by timed Eq.trans lean_s1358 lean_r184
have lean_s1360 : (Eq let97 True) := by timed Eq.trans lean_r29 lean_s1359
have lean_s1361 : let97 := by timed trueElim lean_s1360
let lean_s1362 := by timed congr lean_s1355 lean_s1361
have lean_s1363 : (Eq let102 let102) := by timed rfl
let lean_s1364 := by timed congr lean_s1355 lean_s1363
let lean_s1365 := by timed congr lean_s1355 lean_s1251
have lean_s1366 : (Eq let996 let996) := by timed rfl
let lean_s1367 := by timed congr lean_s1365 lean_s1366
let lean_s1368 := by timed congr lean_s1364 lean_s1367
have lean_s1369 : (Eq let999 let998) := by timed congr lean_s1362 lean_s1368
have lean_s1370 : let998 := by timed eqResolve lean_s1354 lean_s1369
have lean_s1371 : (Or let93 (Or let102 (Or let996 let974))) := by permutateOr lean_s1370, [0, 1, 3, 2], (- 1)
let lean_s1372 := by R1 lean_s1349, lean_s1371, let32, [(- 1), (- 1)]
let lean_s1373 := by R1 lean_s1372, lean_s984, let93, [(- 1), 0]
have lean_s1374 : (Or let126 (Or let996 (Or let530 (Or let581 (Or let845 (Or let963 (Or let46 (Or let522 let996)))))))) := by R2 lean_s1373, lean_s1274, let278, [(- 1), 0]
have lean_s1375 : (Or let126 (Or let996 (Or let530 (Or let581 (Or let845 (Or let963 let907)))))) := by factor lean_s1374, 8
have lean_s1376 : (Or let1155 let1158) := by timed cnfAndNeg [let30, let529]
have lean_s1377 : let1160 :=
  (scope (fun lean_a487 : let30 =>
    (scope (fun lean_a488 : let529 =>
      have lean_s1377 : let759 := by timed Eq.symm lean_a488
      have lean_s1378 : let529 := by timed Eq.symm lean_s1377
      have lean_s1379 : let885 := by timed rfl
      let lean_s1380 := by timed flipCongrArg lean_s1379 [op]
      have lean_s1381 : let353 := by timed Eq.symm lean_a487
      have lean_s1382 : let1157 := by timed congr lean_s1380 lean_s1381
      have lean_s1383 : let8 := by timed Eq.trans lean_s1378 lean_s1382
      show let8 from lean_s1383
  ))))
have lean_s1378 : (Implies let1155 let8) := by liftOrNToImp lean_s1377, 2
have lean_s1379 : (Or (Not let1155) let8) := by timed impliesElim lean_s1378
have lean_s1380 : let1160 := by R1 lean_s1376, lean_s1379, let1155, [(- 1), (- 1)]
have lean_s1381 : (Or let8 let1159) := by permutateOr lean_s1380, [2, 1, 0], (- 1)
let lean_s1382 := by R2 lean_s1375, lean_s1381, let8, [(- 1), (- 1)]
have lean_s1383 : (Or let1156 (Or let974 let1158)) := by timed cnfAndNeg [let278, let30, let529]
have lean_s1384 : let1154 :=
  (scope (fun lean_a487 : let278 =>
    (scope (fun lean_a488 : let30 =>
      (scope (fun lean_a489 : let529 =>
        have lean_s1384 : let759 := by timed Eq.symm lean_a489
        have lean_s1385 : let529 := by timed Eq.symm lean_s1384
        have lean_s1386 : let885 := by timed rfl
        let lean_s1387 := by timed flipCongrArg lean_s1386 [op]
        have lean_s1388 : let353 := by timed Eq.symm lean_a488
        have lean_s1389 : let1157 := by timed congr lean_s1387 lean_s1388
        let lean_s1390 := by timed Eq.trans lean_s1385 lean_s1389
        have lean_s1391 : let285 := by timed Eq.symm lean_a487
        have lean_s1392 : let90 := by timed Eq.trans lean_s1390 lean_s1391
        show let90 from lean_s1392
  ))))))
have lean_s1385 : (Implies let1156 let90) := by liftOrNToImp lean_s1384, 3
have lean_s1386 : (Or (Not let1156) let90) := by timed impliesElim lean_s1385
have lean_s1387 : let1154 := by R1 lean_s1383, lean_s1386, let1156, [(- 1), (- 1)]
have lean_s1388 : (Or let90 (Or let530 let1128)) := by permutateOr lean_s1387, [3, 2, 1, 0], (- 1)
let lean_s1389 := by R2 lean_s1382, lean_s1388, let90, [(- 1), (- 1)]
let lean_s1390 := by R2 lean_s1389, lean_s1274, let278, [(- 1), 0]
have lean_s1391 : (Or let1153 (Or let139 (Or let789 (Or let581 let975)))) := by timed cnfAndNeg [let138, let277, let30, let533]
have lean_s1392 : let1152 :=
  (scope (fun lean_a487 : let138 =>
    (scope (fun lean_a488 : let277 =>
      (scope (fun lean_a489 : let30 =>
        (scope (fun lean_a490 : let533 =>
          have lean_s1392 : let899 := by timed rfl
          let lean_s1393 := by timed flipCongrArg lean_s1392 [Eq]
          have lean_s1394 : let281 := by timed Eq.symm lean_a488
          have lean_s1395 : let365 := by timed Eq.symm lean_a490
          have lean_s1396 : let353 := by timed Eq.symm lean_a489
          have lean_s1397 : let30 := by timed Eq.symm lean_s1396
          let lean_s1398 := by timed Eq.trans lean_s1395 lean_s1397
          have lean_s1399 : (Eq let64 let21) := by timed Eq.trans lean_s1398 lean_s1394
          have lean_s1400 : (Eq let21 let64) := by timed Eq.symm lean_s1399
          have lean_s1401 : (Eq let29 let64) := by timed Eq.trans lean_s1394 lean_s1400
          have lean_s1402 : (Eq let64 let29) := by timed Eq.symm lean_s1401
          have lean_s1403 : (Eq let126 let86) := by timed congr lean_s1393 lean_s1402
          have lean_s1404 : let898 := by timed falseIntro lean_a487
          have lean_s1405 : (Eq let126 False) := by timed Eq.trans lean_s1403 lean_s1404
          have lean_s1406 : let1149 := by timed falseElim lean_s1405
          show let1149 from lean_s1406
  ))))))))
have lean_s1393 : (Implies let1153 let1149) := by liftOrNToImp lean_s1392, 4
have lean_s1394 : (Or (Not let1153) let1149) := by timed impliesElim lean_s1393
have lean_s1395 : let1152 := by R1 lean_s1391, lean_s1394, let1153, [(- 1), (- 1)]
have lean_s1396 : let785 := by timed rfl
let lean_s1397 := by timed congr lean_s1396 lean_s1108
let lean_s1398 := by timed congr lean_s1396 lean_s940
let lean_s1399 := by timed congr lean_s1396 lean_s1253
have lean_s1400 : (Eq let975 let975) := by timed rfl
let lean_s1401 := by timed congr lean_s1396 lean_s1400
have lean_s1402 : (Eq let1149 let1149) := by timed rfl
let lean_s1403 := by timed congr lean_s1401 lean_s1402
let lean_s1404 := by timed congr lean_s1399 lean_s1403
let lean_s1405 := by timed congr lean_s1398 lean_s1404
have lean_s1406 : (Eq let1152 let1151) := by timed congr lean_s1397 lean_s1405
have lean_s1407 : let1151 := by timed eqResolve lean_s1395 lean_s1406
have lean_s1408 : (Or let86 (Or let975 (Or let1149 let1124))) := by permutateOr lean_s1407, [0, 3, 4, 2, 1], (- 1)
let lean_s1409 := by R1 lean_s1390, lean_s1408, let126, [(- 1), (- 1)]
have lean_s1410 : let533 := by andElim lean_s1024, 2
let lean_s1411 := by R2 lean_s1409, lean_s1410, let533, [(- 1), 0]
have lean_s1412 : (Or let530 (Or let581 (Or let845 (Or let46 (Or let522 (Or let530 (Or let581 (Or let530 (Or let581 (Or let86 let581)))))))))) := by R2 lean_s1411, lean_s1117, let277, [(- 1), 0]
have lean_s1413 : (Or let530 (Or let581 (Or let845 (Or let46 let1122)))) := by factor lean_s1412, 10
have lean_s1414 : (Or let1148 (Or let18 let887)) := by timed cnfAndNeg [let17, let280]
have lean_s1415 : let1147 :=
  (scope (fun lean_a488 : let17 =>
    (scope (fun lean_a489 : let280 =>
      have lean_s1415 : let899 := by timed rfl
      let lean_s1416 := by timed flipCongrArg lean_s1415 [Eq]
      have lean_s1417 : let296 := by timed Eq.symm lean_a489
      have lean_s1418 : (Eq let108 let16) := by timed congr lean_s1416 lean_s1417
      have lean_s1419 : (Eq let16 False) := by timed falseIntro lean_a488
      have lean_s1420 : (Eq let108 False) := by timed Eq.trans lean_s1418 lean_s1419
      have lean_s1421 : let981 := by timed falseElim lean_s1420
      show let981 from lean_s1421
  ))))
have lean_s1416 : (Implies let1148 let981) := by liftOrNToImp lean_s1415, 2
have lean_s1417 : (Or (Not let1148) let981) := by timed impliesElim lean_s1416
have lean_s1418 : let1147 := by R1 lean_s1414, lean_s1417, let1148, [(- 1), (- 1)]
have lean_s1419 : let785 := by timed rfl
have lean_s1420 : let210 := by timed rfl
let lean_s1421 := by timed flipCongrArg lean_s1420 [Eq]
have lean_s1422 : (Eq let19 let210) := by timed congr lean_s1421 lean_r5
have lean_s1423 : (Eq let19 True) := by timed Eq.trans lean_s1422 lean_r67
have lean_s1424 : (Eq let20 True) := by timed Eq.trans lean_r4 lean_s1423
have lean_s1425 : let20 := by timed trueElim lean_s1424
let lean_s1426 := by timed congr lean_s1419 lean_s1425
have lean_s1427 : (Eq let887 let887) := by timed rfl
let lean_s1428 := by timed congr lean_s1419 lean_s1427
have lean_s1429 : (Eq let981 let981) := by timed rfl
let lean_s1430 := by timed congr lean_s1428 lean_s1429
have lean_s1431 : (Eq let1147 let1146) := by timed congr lean_s1426 lean_s1430
have lean_s1432 : let1146 := by timed eqResolve lean_s1418 lean_s1431
have lean_s1433 : (Or let16 (Or let981 let887)) := by permutateOr lean_s1432, [0, 2, 1], (- 1)
have lean_s1434 : let280 := by andElim lean_s1088, 3
let lean_s1435 := by R2 lean_s1433, lean_s1434, let280, [(- 1), 0]
have lean_s1436 : let918 := by andElim lean_s913, 42
have lean_s1437 : (Or let23 (Or let86 (Or let108 (Or let251 let522)))) := by permutateOr lean_s1436, [2, 3, 0, 1, 4], (- 1)
let lean_s1438 := by R2 lean_s1435, lean_s1437, let108, [(- 1), (- 1)]
have lean_s1439 : (Or let988 (Or let123 let781)) := by timed cnfAndNeg [let122, let551]
have lean_s1440 : let987 :=
  (scope (fun lean_a490 : let122 =>
    (scope (fun lean_a491 : let551 =>
      have lean_s1440 : let391 := by timed Eq.symm lean_a491
      have lean_s1441 : let551 := by timed Eq.symm lean_s1440
      let lean_s1442 := by timed flipCongrArg lean_s1441 [Eq]
      have lean_s1443 : (Eq let47 let47) := by timed rfl
      have lean_s1444 : (Eq let251 let121) := by timed congr lean_s1442 lean_s1443
      have lean_s1445 : let906 := by timed falseIntro lean_a490
      have lean_s1446 : (Eq let251 False) := by timed Eq.trans lean_s1444 lean_s1445
      have lean_s1447 : let984 := by timed falseElim lean_s1446
      show let984 from lean_s1447
  ))))
have lean_s1441 : (Implies let988 let984) := by liftOrNToImp lean_s1440, 2
have lean_s1442 : (Or (Not let988) let984) := by timed impliesElim lean_s1441
have lean_s1443 : let987 := by R1 lean_s1439, lean_s1442, let988, [(- 1), (- 1)]
have lean_s1444 : let785 := by timed rfl
let lean_s1445 := by timed congr lean_s1444 lean_s1000
let lean_s1446 := by timed congr lean_s1444 lean_s1004
have lean_s1447 : (Eq let984 let984) := by timed rfl
let lean_s1448 := by timed congr lean_s1446 lean_s1447
have lean_s1449 : (Eq let987 let986) := by timed congr lean_s1445 lean_s1448
have lean_s1450 : let986 := by timed eqResolve lean_s1443 lean_s1449
let lean_s1451 := by R1 lean_s1450, lean_s1012, let121, [(- 1), 0]
have lean_s1452 : let984 := by R2 lean_s1451, lean_s1025, let551, [(- 1), 0]
let lean_s1453 := by R1 lean_s1438, lean_s1452, let251, [(- 1), 0]
have lean_s1454 : (Eq let771 let1144) := by timed flipCongrArg lean_r6 [Not]
have lean_s1455 : let1144 := by timed eqResolve lean_a424 lean_s1454
have lean_s1456 : (Or let1009 (Or let989 let845)) := by timed flipNotAnd lean_s1455 [let25, let23, let22]
have lean_s1457 : (Or let1009 (Or let845 let989)) := by permutateOr lean_s1456, [0, 2, 1], (- 1)
let lean_s1458 := by R1 lean_s1453, lean_s1457, let23, [(- 1), (- 1)]
have lean_s1459 : let919 := by andElim lean_s913, 41
have lean_s1460 : (Or let49 (Or let99 (Or let25 (Or let699 let535)))) := by permutateOr lean_s1459, [2, 3, 1, 0, 4], (- 1)
let lean_s1461 := by R2 lean_s1458, lean_s1460, let25, [(- 1), (- 1)]
have lean_s1462 : (Or let1016 (Or let259 (Or let887 let1012))) := by timed cnfAndNeg [let258, let280, let558]
have lean_s1463 : let1015 :=
  (scope (fun lean_a490 : let258 =>
    (scope (fun lean_a491 : let280 =>
      (scope (fun lean_a492 : let558 =>
        have lean_s1463 : let182 := by timed Eq.symm lean_a492
        have lean_s1464 : let558 := by timed Eq.symm lean_s1463
        let lean_s1465 := by timed flipCongrArg lean_s1464 [Eq]
        have lean_s1466 : let296 := by timed Eq.symm lean_a491
        have lean_s1467 : let280 := by timed Eq.symm lean_s1466
        have lean_s1468 : (Eq let699 let257) := by timed congr lean_s1465 lean_s1467
        have lean_s1469 : let1017 := by timed falseIntro lean_a490
        have lean_s1470 : (Eq let699 False) := by timed Eq.trans lean_s1468 lean_s1469
        have lean_s1471 : let1011 := by timed falseElim lean_s1470
        show let1011 from lean_s1471
  ))))))
have lean_s1464 : (Implies let1016 let1011) := by liftOrNToImp lean_s1463, 3
have lean_s1465 : (Or (Not let1016) let1011) := by timed impliesElim lean_s1464
have lean_s1466 : let1015 := by R1 lean_s1462, lean_s1465, let1016, [(- 1), (- 1)]
have lean_s1467 : let785 := by timed rfl
let lean_s1468 := by timed congr lean_s1467 lean_s1292
let lean_s1469 := by timed congr lean_s1467 lean_s1427
let lean_s1470 := by timed congr lean_s1467 lean_s1211
have lean_s1471 : (Eq let1011 let1011) := by timed rfl
let lean_s1472 := by timed congr lean_s1470 lean_s1471
let lean_s1473 := by timed congr lean_s1469 lean_s1472
have lean_s1474 : (Eq let1015 let1014) := by timed congr lean_s1468 lean_s1473
have lean_s1475 : let1014 := by timed eqResolve lean_s1466 lean_s1474
have lean_s1476 : (Or let257 (Or let1012 (Or let1011 let887))) := by permutateOr lean_s1475, [0, 2, 3, 1], (- 1)
let lean_s1477 := by R1 lean_s1476, lean_s1299, let257, [(- 1), 0]
let lean_s1478 := by R2 lean_s1477, lean_s1221, let558, [(- 1), 0]
have lean_s1479 : let1011 := by R2 lean_s1478, lean_s1434, let280, [(- 1), 0]
let lean_s1480 := by R1 lean_s1461, lean_s1479, let699, [(- 1), 0]
have lean_s1481 : (Eq let769 let995) := by timed flipCongrArg lean_r31 [Not]
have lean_s1482 : let995 := by timed eqResolve lean_a401 lean_s1481
have lean_s1483 : (Or let814 (Or let994 let102)) := by timed flipNotAnd lean_s1482 [let99, let98, let32]
have lean_s1484 : (Or let102 (Or let814 let994)) := by permutateOr lean_s1483, [2, 0, 1], (- 1)
let lean_s1485 := by R1 lean_s1480, lean_s1484, let99, [(- 1), (- 1)]
let lean_s1486 := by R2 lean_s1485, lean_s987, let32, [(- 1), (- 1)]
have lean_s1487 : (Or let16 (Or let86 (Or let522 (Or let845 (Or let49 (Or let535 (Or let994 (Or let46 (Or let16 let522))))))))) := by R1 lean_s1486, lean_s1090, let657, [(- 1), 0]
have lean_s1488 : (Or let16 let1141) := by factor lean_s1487, 9
have lean_s1489 : (Eq let763 let1143) := by timed flipCongrArg lean_r74 [Not]
have lean_s1490 : let1143 := by timed eqResolve lean_a355 lean_s1489
have lean_s1491 : (Or let845 (Or let994 let17)) := by timed flipNotAnd lean_s1490 [let22, let98, let16]
have lean_s1492 : (Or let17 let1142) := by permutateOr lean_s1491, [2, 0, 1], (- 1)
have lean_s1493 : (Or let86 (Or let522 (Or let845 (Or let49 (Or let535 (Or let994 (Or let46 let1142))))))) := by R1 lean_s1488, lean_s1492, let16, [(- 1), (- 1)]
have lean_s1494 : let1141 := by factor lean_s1493, 8
have lean_s1495 : (Or let1140 let1002) := by timed cnfAndNeg [let279, let640]
have lean_s1496 : let1139 :=
  (scope (fun lean_a490 : let279 =>
    (scope (fun lean_a491 : let640 =>
      have lean_s1496 : let375 := by timed Eq.symm lean_a491
      have lean_s1497 : let640 := by timed Eq.symm lean_s1496
      have lean_s1498 : let290 := by timed Eq.symm lean_a490
      have lean_s1499 : let279 := by timed Eq.symm lean_s1498
      have lean_s1500 : let98 := by timed Eq.trans lean_s1497 lean_s1499
      show let98 from lean_s1500
  ))))
have lean_s1497 : (Implies let1140 let98) := by liftOrNToImp lean_s1496, 2
have lean_s1498 : (Or (Not let1140) let98) := by timed impliesElim lean_s1497
have lean_s1499 : let1139 := by R1 lean_s1495, lean_s1498, let1140, [(- 1), (- 1)]
have lean_s1500 : (Or let98 let1045) := by permutateOr lean_s1499, [2, 1, 0], (- 1)
let lean_s1501 := by R2 lean_s1494, lean_s1500, let98, [(- 1), (- 1)]
let lean_s1502 := by R2 lean_s1501, lean_s1089, let279, [(- 1), 0]
have lean_s1503 : (Eq let765 let1138) := by timed flipCongrArg lean_r230 [Not]
have lean_s1504 : let1138 := by timed eqResolve lean_a376 lean_s1503
have lean_s1505 : (Or let1018 (Or let581 let970)) := by timed flipNotAnd lean_s1504 [let49, let30, let640]
have lean_s1506 : (Or let970 (Or let1018 let581)) := by permutateOr lean_s1505, [2, 0, 1], (- 1)
have lean_s1507 : (Or let86 (Or let522 (Or let845 (Or let535 (Or let46 (Or let970 let1137)))))) := by R1 lean_s1502, lean_s1506, let49, [(- 1), (- 1)]
have lean_s1508 : (Or let86 (Or let522 (Or let845 (Or let535 (Or let46 let1137))))) := by factor lean_s1507, (- 1)
have lean_s1509 : let913 := by andElim lean_s913, 47
have lean_s1510 : (Or let640 (Or let90 (Or let28 let912))) := by permutateOr lean_s1509, [1, 2, 0, 3, 4], (- 1)
let lean_s1511 := by R2 lean_s1508, lean_s1510, let640, [(- 1), (- 1)]
have lean_s1512 : (Or let969 (Or let325 (Or let789 let795))) := by timed cnfAndNeg [let324, let277, let612]
have lean_s1513 : let968 :=
  (scope (fun lean_a491 : let324 =>
    (scope (fun lean_a492 : let277 =>
      (scope (fun lean_a493 : let612 =>
        have lean_s1513 : let195 := by timed Eq.symm lean_a493
        have lean_s1514 : let612 := by timed Eq.symm lean_s1513
        let lean_s1515 := by timed flipCongrArg lean_s1514 [Eq]
        have lean_s1516 : let281 := by timed Eq.symm lean_a492
        have lean_s1517 : let277 := by timed Eq.symm lean_s1516
        have lean_s1518 : (Eq let218 let323) := by timed congr lean_s1515 lean_s1517
        have lean_s1519 : let800 := by timed falseIntro lean_a491
        have lean_s1520 : (Eq let218 False) := by timed Eq.trans lean_s1518 lean_s1519
        have lean_s1521 : let965 := by timed falseElim lean_s1520
        show let965 from lean_s1521
  ))))))
have lean_s1514 : (Implies let969 let965) := by liftOrNToImp lean_s1513, 3
have lean_s1515 : (Or (Not let969) let965) := by timed impliesElim lean_s1514
have lean_s1516 : let968 := by R1 lean_s1512, lean_s1515, let969, [(- 1), (- 1)]
have lean_s1517 : let785 := by timed rfl
have lean_s1518 : let561 := by timed rfl
let lean_s1519 := by timed flipCongrArg lean_s1518 [Eq]
have lean_s1520 : (Eq let744 let561) := by timed congr lean_s1519 lean_r107
have lean_s1521 : (Eq let744 True) := by timed Eq.trans lean_s1520 lean_r166
have lean_s1522 : (Eq let326 True) := by timed Eq.trans lean_r310 lean_s1521
have lean_s1523 : let326 := by timed trueElim lean_s1522
let lean_s1524 := by timed congr lean_s1517 lean_s1523
let lean_s1525 := by timed congr lean_s1517 lean_s940
let lean_s1526 := by timed congr lean_s1517 lean_s1257
have lean_s1527 : (Eq let965 let965) := by timed rfl
let lean_s1528 := by timed congr lean_s1526 lean_s1527
let lean_s1529 := by timed congr lean_s1525 lean_s1528
have lean_s1530 : (Eq let968 let967) := by timed congr lean_s1524 lean_s1529
have lean_s1531 : let967 := by timed eqResolve lean_s1516 lean_s1530
have lean_s1532 : (Or let323 (Or let795 (Or let965 let789))) := by permutateOr lean_s1531, [0, 2, 3, 1], (- 1)
have lean_s1533 : let324 := by andElim lean_s922, 39
let lean_s1534 := by R1 lean_s1532, lean_s1533, let323, [(- 1), 0]
let lean_s1535 := by R2 lean_s1534, lean_s1272, let612, [(- 1), 0]
have lean_s1536 : let965 := by R2 lean_s1535, lean_s1117, let277, [(- 1), 0]
let lean_s1537 := by R1 lean_s1511, lean_s1536, let218, [(- 1), 0]
let lean_s1538 := by R1 lean_s1537, lean_s1129, let28, [(- 1), (- 1)]
let lean_s1539 := by R1 lean_s1538, lean_s1115, let46, [(- 1), (- 1)]
have lean_s1540 : (Or let86 (Or let522 (Or let845 (Or let535 (Or let581 (Or let90 (Or let356 (Or let522 let1123)))))))) := by R2 lean_s1539, lean_s1117, let277, [(- 1), 0]
have lean_s1541 : (Or let86 (Or let522 (Or let845 (Or let535 (Or let581 (Or let90 let356)))))) := by factor lean_s1540, 9
let lean_s1542 := by R1 lean_s1541, lean_s1124, let86, [(- 1), (- 1)]
let lean_s1543 := by R1 lean_s1542, lean_s1126, let540, [(- 1), 0]
have lean_s1544 : (Or let1132 (Or let531 let1128)) := by timed cnfAndNeg [let530, let30, let278]
have lean_s1545 : let1131 :=
  (scope (fun lean_a492 : let530 =>
    (scope (fun lean_a493 : let30 =>
      (scope (fun lean_a494 : let278 =>
        have lean_s1545 : let886 := by timed rfl
        let lean_s1546 := by timed flipCongrArg lean_s1545 [Eq]
        have lean_s1547 : let285 := by timed Eq.symm lean_a494
        have lean_s1548 : let278 := by timed Eq.symm lean_s1547
        have lean_s1549 : let885 := by timed rfl
        let lean_s1550 := by timed flipCongrArg lean_s1549 [op]
        have lean_s1551 : let353 := by timed Eq.symm lean_a493
        have lean_s1552 : let30 := by timed Eq.symm lean_s1551
        have lean_s1553 : (Eq let7 let528) := by timed congr lean_s1550 lean_s1552
        have lean_s1554 : (Eq let31 let528) := by timed Eq.trans lean_s1548 lean_s1553
        have lean_s1555 : (Eq let90 let529) := by timed congr lean_s1546 lean_s1554
        have lean_s1556 : let883 := by timed falseIntro lean_a492
        have lean_s1557 : (Eq let90 False) := by timed Eq.trans lean_s1555 lean_s1556
        have lean_s1558 : let963 := by timed falseElim lean_s1557
        show let963 from lean_s1558
  ))))))
have lean_s1546 : (Implies let1132 let963) := by liftOrNToImp lean_s1545, 3
have lean_s1547 : (Or (Not let1132) let963) := by timed impliesElim lean_s1546
have lean_s1548 : let1131 := by R1 lean_s1544, lean_s1547, let1132, [(- 1), (- 1)]
have lean_s1549 : let785 := by timed rfl
have lean_s1550 : let607 := by timed rfl
let lean_s1551 := by timed flipCongrArg lean_s1550 [Eq]
have lean_s1552 : (Eq let550 let607) := by timed congr lean_s1551 lean_r140
have lean_s1553 : (Eq let550 True) := by timed Eq.trans lean_s1552 lean_r215
have lean_s1554 : (Eq let532 True) := by timed Eq.trans lean_r155 lean_s1553
have lean_s1555 : let532 := by timed trueElim lean_s1554
let lean_s1556 := by timed congr lean_s1549 lean_s1555
let lean_s1557 := by timed congr lean_s1549 lean_s1253
let lean_s1558 := by timed congr lean_s1549 lean_s1251
have lean_s1559 : (Eq let963 let963) := by timed rfl
let lean_s1560 := by timed congr lean_s1558 lean_s1559
let lean_s1561 := by timed congr lean_s1557 lean_s1560
have lean_s1562 : (Eq let1131 let1130) := by timed congr lean_s1556 lean_s1561
have lean_s1563 : let1130 := by timed eqResolve lean_s1548 lean_s1562
have lean_s1564 : (Or let529 (Or let963 let1128)) := by permutateOr lean_s1563, [0, 3, 1, 2], (- 1)
let lean_s1565 := by R1 lean_s1543, lean_s1564, let90, [(- 1), (- 1)]
let lean_s1566 := by R2 lean_s1565, lean_s1274, let278, [(- 1), 0]
have lean_s1567 : (Or let1126 (Or let789 let581)) := by timed cnfAndNeg [let277, let30]
have lean_s1568 : let1125 :=
  (scope (fun lean_a493 : let277 =>
    (scope (fun lean_a494 : let30 =>
      have lean_s1568 : let353 := by timed Eq.symm lean_a494
      have lean_s1569 : let30 := by timed Eq.symm lean_s1568
      have lean_s1570 : let281 := by timed Eq.symm lean_a493
      have lean_s1571 : let22 := by timed Eq.trans lean_s1569 lean_s1570
      show let22 from lean_s1571
  ))))
have lean_s1569 : (Implies let1126 let22) := by liftOrNToImp lean_s1568, 2
have lean_s1570 : (Or (Not let1126) let22) := by timed impliesElim lean_s1569
have lean_s1571 : let1125 := by R1 lean_s1567, lean_s1570, let1126, [(- 1), (- 1)]
have lean_s1572 : (Or let22 let1124) := by permutateOr lean_s1571, [2, 1, 0], (- 1)
let lean_s1573 := by R2 lean_s1566, lean_s1572, let22, [(- 1), (- 1)]
have lean_s1574 : (Or let522 (Or let535 (Or let581 (Or let356 (Or let581 (Or let529 let1127)))))) := by R2 lean_s1573, lean_s1117, let277, [(- 1), 0]
have lean_s1575 : (Or let522 (Or let535 (Or let581 let842))) := by factor lean_s1574, 7
have lean_s1576 : (Or let535 (Or let522 (Or let356 (Or let529 let581)))) := by permutateOr lean_s1575, [1, 0, 3, 4, 2], (- 1)
let lean_s1577 := by R2 lean_s1413, lean_s1576, let529, [(- 1), (- 1)]
let lean_s1578 := by R1 lean_s1577, lean_s1312, let535, [(- 1), 0]
have lean_s1579 : (Or let841 (Or let839 let790)) := by timed cnfAndNeg [let356, let734]
have lean_s1580 : let840 :=
  (scope (fun lean_a493 : let356 =>
    (scope (fun lean_a494 : let734 =>
      have lean_s1580 : let203 := by timed Eq.symm lean_a494
      have lean_s1581 : let734 := by timed Eq.symm lean_s1580
      have lean_s1582 : let204 := by timed Eq.symm lean_a493
      have lean_s1583 : let58 := by timed Eq.trans lean_s1581 lean_s1582
      show let58 from lean_s1583
  ))))
have lean_s1581 : (Implies let841 let58) := by liftOrNToImp lean_s1580, 2
have lean_s1582 : (Or (Not let841) let58) := by timed impliesElim lean_s1581
have lean_s1583 : let840 := by R1 lean_s1579, lean_s1582, let841, [(- 1), (- 1)]
have lean_s1584 : (Or let58 (Or let790 let839)) := by permutateOr lean_s1583, [2, 1, 0], (- 1)
have lean_s1585 : let59 := by andElim lean_s983, 9
let lean_s1586 := by R1 lean_s1584, lean_s1585, let58, [(- 1), 0]
have lean_s1587 : let839 := by R2 lean_s1586, lean_s1311, let734, [(- 1), 0]
let lean_s1588 := by R1 lean_s1578, lean_s1587, let356, [(- 1), 0]
let lean_s1589 := by R2 lean_s1588, lean_s1572, let22, [(- 1), (- 1)]
let lean_s1590 := by R2 lean_s1589, lean_s1117, let277, [(- 1), 0]
let lean_s1591 := by R1 lean_s1590, lean_s1115, let46, [(- 1), (- 1)]
have lean_s1592 : (Or let581 (Or let522 (Or let86 (Or let522 (Or let581 let1123))))) := by R2 lean_s1591, lean_s1117, let277, [(- 1), 0]
have lean_s1593 : (Or let581 let1122) := by factor lean_s1592, (- 1)
have lean_s1594 : let915 := by andElim lean_s913, 46
have lean_s1595 : (Or let98 (Or let8 (Or let741 let914))) := by permutateOr lean_s1594, [1, 2, 0, 3, 4], (- 1)
let lean_s1596 := by R1 lean_s1595, lean_s1587, let356, [(- 1), 0]
have lean_s1597 : (Or let799 (Or let325 let795)) := by timed cnfAndNeg [let324, let612]
have lean_s1598 : let798 :=
  (scope (fun lean_a494 : let324 =>
    (scope (fun lean_a495 : let612 =>
      have lean_s1598 : let195 := by timed Eq.symm lean_a495
      have lean_s1599 : let612 := by timed Eq.symm lean_s1598
      let lean_s1600 := by timed flipCongrArg lean_s1599 [Eq]
      have lean_s1601 : (Eq let29 let29) := by timed rfl
      have lean_s1602 : (Eq let516 let323) := by timed congr lean_s1600 lean_s1601
      have lean_s1603 : let800 := by timed falseIntro lean_a494
      have lean_s1604 : (Eq let516 False) := by timed Eq.trans lean_s1602 lean_s1603
      have lean_s1605 : let794 := by timed falseElim lean_s1604
      show let794 from lean_s1605
  ))))
have lean_s1599 : (Implies let799 let794) := by liftOrNToImp lean_s1598, 2
have lean_s1600 : (Or (Not let799) let794) := by timed impliesElim lean_s1599
have lean_s1601 : let798 := by R1 lean_s1597, lean_s1600, let799, [(- 1), (- 1)]
have lean_s1602 : let785 := by timed rfl
let lean_s1603 := by timed congr lean_s1602 lean_s1523
let lean_s1604 := by timed congr lean_s1602 lean_s1257
have lean_s1605 : (Eq let794 let794) := by timed rfl
let lean_s1606 := by timed congr lean_s1604 lean_s1605
have lean_s1607 : (Eq let798 let797) := by timed congr lean_s1603 lean_s1606
have lean_s1608 : let797 := by timed eqResolve lean_s1601 lean_s1607
let lean_s1609 := by R1 lean_s1608, lean_s1533, let323, [(- 1), 0]
have lean_s1610 : let794 := by R2 lean_s1609, lean_s1272, let612, [(- 1), 0]
let lean_s1611 := by R1 lean_s1596, lean_s1610, let516, [(- 1), 0]
let lean_s1612 := by R1 lean_s1611, lean_s1371, let8, [(- 1), (- 1)]
let lean_s1613 := by R1 lean_s1612, lean_s984, let93, [(- 1), 0]
let lean_s1614 := by R2 lean_s1613, lean_s1274, let278, [(- 1), 0]
let lean_s1615 := by R1 lean_s1614, lean_s1484, let98, [(- 1), (- 1)]
have lean_s1616 : (Or let826 (Or let789 let823)) := by timed cnfAndNeg [let277, let543]
have lean_s1617 : let825 :=
  (scope (fun lean_a494 : let277 =>
    (scope (fun lean_a495 : let543 =>
      have lean_s1617 : let273 := by timed Eq.symm lean_a495
      have lean_s1618 : let543 := by timed Eq.symm lean_s1617
      have lean_s1619 : let281 := by timed Eq.symm lean_a494
      have lean_s1620 : let99 := by timed Eq.trans lean_s1618 lean_s1619
      show let99 from lean_s1620
  ))))
have lean_s1618 : (Implies let826 let99) := by liftOrNToImp lean_s1617, 2
have lean_s1619 : (Or (Not let826) let99) := by timed impliesElim lean_s1618
have lean_s1620 : let825 := by R1 lean_s1616, lean_s1619, let826, [(- 1), (- 1)]
have lean_s1621 : (Or let99 let824) := by permutateOr lean_s1620, [2, 1, 0], (- 1)
let lean_s1622 := by R2 lean_s1615, lean_s1621, let99, [(- 1), (- 1)]
have lean_s1623 : (Or let741 (Or let102 let1121)) := by R2 lean_s1622, lean_s1117, let277, [(- 1), 0]
have lean_s1624 : (Or let741 let1121) := by factor lean_s1623, (- 1)
let lean_s1625 := by R2 lean_s1346, lean_s1274, let278, [(- 1), 0]
let lean_s1626 := by R2 lean_s1625, lean_s1437, let23, [(- 1), (- 1)]
let lean_s1627 := by R1 lean_s1626, lean_s1452, let251, [(- 1), 0]
have lean_s1628 : (Eq let774 let983) := by timed flipCongrArg lean_r35 [Not]
have lean_s1629 : let983 := by timed eqResolve lean_a429 lean_s1628
have lean_s1630 : (Or let982 (Or let981 let814)) := by timed flipNotAnd lean_s1629 [let87, let108, let99]
have lean_s1631 : (Or let982 (Or let814 let981)) := by permutateOr lean_s1630, [0, 2, 1], (- 1)
let lean_s1632 := by R1 lean_s1627, lean_s1631, let108, [(- 1), (- 1)]
let lean_s1633 := by R2 lean_s1632, lean_s926, let87, [(- 1), (- 1)]
have lean_s1634 : (Or let979 (Or let113 (Or let974 let975))) := by timed cnfAndNeg [let112, let278, let533]
have lean_s1635 : let978 :=
  (scope (fun lean_a495 : let112 =>
    (scope (fun lean_a496 : let278 =>
      (scope (fun lean_a497 : let533 =>
        have lean_s1635 : let365 := by timed Eq.symm lean_a497
        have lean_s1636 : let533 := by timed Eq.symm lean_s1635
        let lean_s1637 := by timed flipCongrArg lean_s1636 [Eq]
        have lean_s1638 : let285 := by timed Eq.symm lean_a496
        have lean_s1639 : let278 := by timed Eq.symm lean_s1638
        have lean_s1640 : (Eq let148 let111) := by timed congr lean_s1637 lean_s1639
        have lean_s1641 : let980 := by timed falseIntro lean_a495
        have lean_s1642 : (Eq let148 False) := by timed Eq.trans lean_s1640 lean_s1641
        have lean_s1643 : let973 := by timed falseElim lean_s1642
        show let973 from lean_s1643
  ))))))
have lean_s1636 : (Implies let979 let973) := by liftOrNToImp lean_s1635, 3
have lean_s1637 : (Or (Not let979) let973) := by timed impliesElim lean_s1636
have lean_s1638 : let978 := by R1 lean_s1634, lean_s1637, let979, [(- 1), (- 1)]
have lean_s1639 : let785 := by timed rfl
have lean_s1640 : let593 := by timed rfl
let lean_s1641 := by timed flipCongrArg lean_s1640 [Eq]
have lean_s1642 : (Eq let114 let593) := by timed congr lean_s1641 lean_r135
have lean_s1643 : (Eq let114 True) := by timed Eq.trans lean_s1642 lean_r198
have lean_s1644 : (Eq let115 True) := by timed Eq.trans lean_r36 lean_s1643
have lean_s1645 : let115 := by timed trueElim lean_s1644
let lean_s1646 := by timed congr lean_s1639 lean_s1645
let lean_s1647 := by timed congr lean_s1639 lean_s1251
let lean_s1648 := by timed congr lean_s1639 lean_s1400
have lean_s1649 : (Eq let973 let973) := by timed rfl
let lean_s1650 := by timed congr lean_s1648 lean_s1649
let lean_s1651 := by timed congr lean_s1647 lean_s1650
have lean_s1652 : (Eq let978 let977) := by timed congr lean_s1646 lean_s1651
have lean_s1653 : let977 := by timed eqResolve lean_s1638 lean_s1652
have lean_s1654 : (Or let111 (Or let975 (Or let973 let974))) := by permutateOr lean_s1653, [0, 2, 3, 1], (- 1)
have lean_s1655 : let112 := by andElim lean_s922, 28
let lean_s1656 := by R1 lean_s1654, lean_s1655, let111, [(- 1), 0]
let lean_s1657 := by R2 lean_s1656, lean_s1410, let533, [(- 1), 0]
have lean_s1658 : let973 := by R2 lean_s1657, lean_s1274, let278, [(- 1), 0]
let lean_s1659 := by R1 lean_s1633, lean_s1658, let148, [(- 1), 0]
have lean_s1660 : (Eq let766 let972) := by timed flipCongrArg lean_r323 [Not]
have lean_s1661 : let972 := by timed eqResolve lean_a378 lean_s1660
have lean_s1662 : (Or let971 (Or let823 let970)) := by timed flipNotAnd lean_s1661 [let644, let543, let640]
have lean_s1663 : (Or let971 (Or let970 let823)) := by permutateOr lean_s1662, [0, 2, 1], (- 1)
let lean_s1664 := by R1 lean_s1659, lean_s1663, let644, [(- 1), (- 1)]
let lean_s1665 := by R2 lean_s1664, lean_s1510, let640, [(- 1), (- 1)]
let lean_s1666 := by R1 lean_s1665, lean_s1536, let218, [(- 1), 0]
let lean_s1667 := by R1 lean_s1666, lean_s1323, let90, [(- 1), (- 1)]
let lean_s1668 := by R2 lean_s1667, lean_s987, let16, [(- 1), (- 1)]
let lean_s1669 := by R1 lean_s1668, lean_s1090, let657, [(- 1), 0]
let lean_s1670 := by R1 lean_s1669, lean_s1115, let46, [(- 1), (- 1)]
have lean_s1671 : (Or let32 (Or let86 (Or let522 (Or let22 (Or let587 (Or let823 (Or let28 (Or let356 (Or let823 (Or let32 (Or let522 (Or let86 (Or let789 let824))))))))))))) := by R2 lean_s1670, lean_s1621, let99, [(- 1), (- 1)]
have lean_s1672 : (Or let32 (Or let86 (Or let522 (Or let22 (Or let587 (Or let823 (Or let28 (Or let356 let789)))))))) := by factor lean_s1671, (- 1)
have lean_s1673 : (Or let32 (Or let86 (Or let522 (Or let22 (Or let587 (Or let823 (Or let28 let356))))))) := by R2 lean_s1672, lean_s1117, let277, [(- 1), 0]
have lean_s1674 : (Or let32 (Or let22 (Or let86 (Or let28 (Or let522 (Or let587 (Or let356 let823))))))) := by permutateOr lean_s1673, [0, 3, 1, 6, 2, 4, 7, 5], (- 1)
let lean_s1675 := by R2 lean_s1624, lean_s1674, let32, [(- 1), (- 1)]
have lean_s1676 : (Or let838 (Or let836 let790)) := by timed cnfAndNeg [let587, let734]
have lean_s1677 : let837 :=
  (scope (fun lean_a496 : let587 =>
    (scope (fun lean_a497 : let734 =>
      have lean_s1677 : let203 := by timed Eq.symm lean_a497
      have lean_s1678 : let734 := by timed Eq.symm lean_s1677
      have lean_s1679 : let205 := by timed Eq.symm lean_a496
      have lean_s1680 : let669 := by timed Eq.trans lean_s1678 lean_s1679
      show let669 from lean_s1680
  ))))
have lean_s1678 : (Implies let838 let669) := by liftOrNToImp lean_s1677, 2
have lean_s1679 : (Or (Not let838) let669) := by timed impliesElim lean_s1678
have lean_s1680 : let837 := by R1 lean_s1676, lean_s1679, let838, [(- 1), (- 1)]
have lean_s1681 : (Or let669 (Or let790 let836)) := by permutateOr lean_s1680, [2, 1, 0], (- 1)
have lean_s1682 : let803 := by andElim lean_s983, 8
let lean_s1683 := by R1 lean_s1681, lean_s1682, let669, [(- 1), 0]
have lean_s1684 : let836 := by R2 lean_s1683, lean_s1311, let734, [(- 1), 0]
let lean_s1685 := by R1 lean_s1675, lean_s1684, let587, [(- 1), 0]
have lean_s1686 : (Or let741 (Or let823 (Or let22 (Or let86 (Or let28 (Or let522 let823)))))) := by R1 lean_s1685, lean_s1587, let356, [(- 1), 0]
have lean_s1687 : (Or let741 (Or let823 (Or let22 let1116))) := by factor lean_s1686, 6
have lean_s1688 : let851 := by andElim lean_s306, 23
have lean_s1689 : (Or let86 (Or let30 (Or let543 let850))) := by permutateOr lean_s1688, [1, 2, 0, 3, 4], (- 1)
let lean_s1690 := by R2 lean_s1687, lean_s1689, let543, [(- 1), (- 1)]
let lean_s1691 := by R1 lean_s1690, lean_s1610, let516, [(- 1), 0]
have lean_s1692 : (Or let793 let791) := by timed cnfAndNeg [let734, let645, let277]
have lean_s1693 : let792 :=
  (scope (fun lean_a497 : let734 =>
    (scope (fun lean_a498 : let645 =>
      (scope (fun lean_a499 : let277 =>
        have lean_s1693 : let281 := by timed Eq.symm lean_a499
        have lean_s1694 : let277 := by timed Eq.symm lean_s1693
        have lean_s1695 : let357 := by timed Eq.symm lean_a498
        let lean_s1696 := by timed Eq.trans lean_s1694 lean_s1695
        have lean_s1697 : let203 := by timed Eq.symm lean_a497
        have lean_s1698 : let734 := by timed Eq.symm lean_s1697
        have lean_s1699 : let337 := by timed Eq.trans lean_s1696 lean_s1698
        show let337 from lean_s1699
  ))))))
have lean_s1694 : (Implies let793 let337) := by liftOrNToImp lean_s1693, 3
have lean_s1695 : (Or (Not let793) let337) := by timed impliesElim lean_s1694
have lean_s1696 : let792 := by R1 lean_s1692, lean_s1695, let793, [(- 1), (- 1)]
have lean_s1697 : (Or let337 let791) := by permutateOr lean_s1696, [3, 0, 1, 2], (- 1)
have lean_s1698 : let338 := by andElim lean_s922, 49
let lean_s1699 := by R1 lean_s1697, lean_s1698, let337, [(- 1), 0]
let lean_s1700 := by R2 lean_s1699, lean_s1311, let734, [(- 1), 0]
have lean_s1701 : let788 := by R2 lean_s1700, lean_s1117, let277, [(- 1), 0]
let lean_s1702 := by R1 lean_s1691, lean_s1701, let645, [(- 1), 0]
let lean_s1703 := by R1 lean_s1702, lean_s946, let22, [(- 1), (- 1)]
let lean_s1704 := by R2 lean_s1703, lean_s1117, let277, [(- 1), 0]
have lean_s1705 : (Or let1120 (Or let36 let887)) := by timed cnfAndNeg [let35, let280]
have lean_s1706 : let1119 :=
  (scope (fun lean_a498 : let35 =>
    (scope (fun lean_a499 : let280 =>
      have lean_s1706 : let886 := by timed rfl
      let lean_s1707 := by timed flipCongrArg lean_s1706 [Eq]
      have lean_s1708 : let296 := by timed Eq.symm lean_a499
      have lean_s1709 : (Eq let741 let28) := by timed congr lean_s1707 lean_s1708
      have lean_s1710 : let893 := by timed falseIntro lean_a498
      have lean_s1711 : let882 := by timed Eq.trans lean_s1709 lean_s1710
      have lean_s1712 : let877 := by timed falseElim lean_s1711
      show let877 from lean_s1712
  ))))
have lean_s1707 : (Implies let1120 let877) := by liftOrNToImp lean_s1706, 2
have lean_s1708 : (Or (Not let1120) let877) := by timed impliesElim lean_s1707
have lean_s1709 : let1119 := by R1 lean_s1705, lean_s1708, let1120, [(- 1), (- 1)]
have lean_s1710 : let785 := by timed rfl
have lean_s1711 : let38 := by timed rfl
let lean_s1712 := by timed flipCongrArg lean_s1711 [Eq]
have lean_s1713 : (Eq let739 let38) := by timed congr lean_s1712 lean_r8
have lean_s1714 : (Eq let739 True) := by timed Eq.trans lean_s1713 lean_r9
have lean_s1715 : (Eq let37 True) := by timed Eq.trans lean_r305 lean_s1714
have lean_s1716 : let37 := by timed trueElim lean_s1715
let lean_s1717 := by timed congr lean_s1710 lean_s1716
let lean_s1718 := by timed congr lean_s1710 lean_s1427
have lean_s1719 : (Eq let877 let877) := by timed rfl
let lean_s1720 := by timed congr lean_s1718 lean_s1719
have lean_s1721 : (Eq let1119 let1118) := by timed congr lean_s1717 lean_s1720
have lean_s1722 : let1118 := by timed eqResolve lean_s1709 lean_s1721
have lean_s1723 : (Or let28 (Or let877 let887)) := by permutateOr lean_s1722, [0, 2, 1], (- 1)
let lean_s1724 := by R1 lean_s1704, lean_s1723, let741, [(- 1), (- 1)]
have lean_s1725 : (Or let86 (Or let28 (Or let522 (Or let86 (Or let30 (Or let30 let28)))))) := by R2 lean_s1724, lean_s1434, let280, [(- 1), 0]
have lean_s1726 : (Or let86 (Or let28 (Or let522 let30))) := by factor lean_s1725, 6
have lean_s1727 : (Or let86 (Or let30 let1115)) := by permutateOr lean_s1726, [0, 3, 1, 2], (- 1)
have lean_s1728 : (Or let522 (Or let86 let1116)) := by R2 lean_s1593, lean_s1727, let30, [(- 1), (- 1)]
have lean_s1729 : (Or let522 (Or let86 let28)) := by factor lean_s1728, 4
have lean_s1730 : let1116 := by permutateOr lean_s1729, [1, 2, 0], (- 1)
let lean_s1731 := by R2 lean_s1129, lean_s1730, let28, [(- 1), (- 1)]
have lean_s1732 : (Or let1114 (Or let530 (Or let43 (Or let901 (Or let138 (Or let795 let787)))))) := by timed cnfAndNeg [let529, let42, let279, let86, let612, let72]
have lean_s1733 : let1113 :=
  (scope (fun lean_a499 : let529 =>
    (scope (fun lean_a500 : let42 =>
      (scope (fun lean_a501 : let279 =>
        (scope (fun lean_a502 : let86 =>
          (scope (fun lean_a503 : let612 =>
            (scope (fun lean_a504 : let72 =>
              have lean_s1733 : let383 := by timed Eq.symm lean_a504
              have lean_s1734 : let72 := by timed Eq.symm lean_s1733
              let lean_s1735 := by timed flipCongrArg lean_s1734 [Eq]
              have lean_s1736 : let885 := by timed rfl
              let lean_s1737 := by timed flipCongrArg lean_s1736 [op]
              have lean_s1738 : let319 := by timed Eq.symm lean_a502
              have lean_s1739 : let86 := by timed Eq.symm lean_s1738
              have lean_s1740 : let1007 := by timed congr lean_s1737 lean_s1739
              have lean_s1741 : let759 := by timed Eq.symm lean_a499
              let lean_s1742 := by timed Eq.trans lean_s1740 lean_s1741
              have lean_s1743 : let195 := by timed Eq.symm lean_a503
              have lean_s1744 : let612 := by timed Eq.symm lean_s1743
              have lean_s1745 : let1041 := by timed Eq.trans lean_s1742 lean_s1744
              have lean_s1746 : let1042 := by timed Eq.symm lean_s1745
              have lean_s1747 : let290 := by timed Eq.symm lean_a501
              have lean_s1748 : let1043 := by timed Eq.trans lean_s1746 lean_s1747
              have lean_s1749 : let1044 := by timed Eq.symm lean_s1748
              have lean_s1750 : (Eq let25 let41) := by timed congr lean_s1735 lean_s1749
              have lean_s1751 : (Eq let41 False) := by timed falseIntro lean_a500
              have lean_s1752 : (Eq let25 False) := by timed Eq.trans lean_s1750 lean_s1751
              have lean_s1753 : let1009 := by timed falseElim lean_s1752
              show let1009 from lean_s1753
  ))))))))))))
have lean_s1734 : (Implies let1114 let1009) := by liftOrNToImp lean_s1733, 6
have lean_s1735 : (Or (Not let1114) let1009) := by timed impliesElim lean_s1734
have lean_s1736 : let1113 := by R1 lean_s1732, lean_s1735, let1114, [(- 1), (- 1)]
have lean_s1737 : let785 := by timed rfl
let lean_s1738 := by timed congr lean_s1737 lean_s1255
have lean_s1739 : let614 := by timed rfl
let lean_s1740 := by timed flipCongrArg lean_s1739 [Eq]
have lean_s1741 : (Eq let44 let614) := by timed congr lean_s1740 lean_r11
have lean_s1742 : (Eq let44 True) := by timed Eq.trans lean_s1741 lean_r220
have lean_s1743 : (Eq let45 True) := by timed Eq.trans lean_r10 lean_s1742
have lean_s1744 : let45 := by timed trueElim lean_s1743
let lean_s1745 := by timed congr lean_s1737 lean_s1744
let lean_s1746 := by timed congr lean_s1737 lean_s1002
have lean_s1747 : (Eq let138 let138) := by timed rfl
let lean_s1748 := by timed congr lean_s1737 lean_s1747
let lean_s1749 := by timed congr lean_s1737 lean_s1257
have lean_s1750 : (Eq let787 let787) := by timed rfl
let lean_s1751 := by timed congr lean_s1737 lean_s1750
have lean_s1752 : (Eq let1009 let1009) := by timed rfl
let lean_s1753 := by timed congr lean_s1751 lean_s1752
let lean_s1754 := by timed congr lean_s1749 lean_s1753
let lean_s1755 := by timed congr lean_s1748 lean_s1754
let lean_s1756 := by timed congr lean_s1746 lean_s1755
let lean_s1757 := by timed congr lean_s1745 lean_s1756
have lean_s1758 : (Eq let1113 let1112) := by timed congr lean_s1738 lean_s1757
have lean_s1759 : let1112 := by timed eqResolve lean_s1736 lean_s1758
have lean_s1760 : (Or let41 (Or let530 (Or let795 (Or let787 (Or let1009 let1001))))) := by permutateOr lean_s1759, [1, 0, 4, 5, 6, 3, 2], (- 1)
have lean_s1761 : let42 := by andElim lean_s922, 35
let lean_s1762 := by R1 lean_s1760, lean_s1761, let41, [(- 1), 0]
let lean_s1763 := by R2 lean_s1762, lean_s1272, let612, [(- 1), 0]
let lean_s1764 := by R2 lean_s1763, lean_s1089, let279, [(- 1), 0]
let lean_s1765 := by R2 lean_s1764, lean_s1460, let25, [(- 1), (- 1)]
let lean_s1766 := by R1 lean_s1765, lean_s1479, let699, [(- 1), 0]
let lean_s1767 := by R1 lean_s1766, lean_s1312, let535, [(- 1), 0]
have lean_s1768 : (Eq let772 let1110) := by timed flipCongrArg lean_r12 [Not]
have lean_s1769 : let1110 := by timed eqResolve lean_a425 lean_s1768
have lean_s1770 : (Or let1018 (Or let1109 let827)) := by timed flipNotAnd lean_s1769 [let49, let48, let46]
have lean_s1771 : (Or let1018 (Or let827 let1109)) := by permutateOr lean_s1770, [0, 2, 1], (- 1)
let lean_s1772 := by R1 lean_s1767, lean_s1771, let49, [(- 1), (- 1)]
have lean_s1773 : let917 := by andElim lean_s913, 44
have lean_s1774 : (Or let48 (Or let30 (Or let236 (Or let521 let587)))) := by permutateOr lean_s1773, [1, 3, 0, 2, 4], (- 1)
let lean_s1775 := by R2 lean_s1772, lean_s1774, let48, [(- 1), (- 1)]
have lean_s1776 : (Or let1108 (Or let113 let975)) := by timed cnfAndNeg [let112, let533]
have lean_s1777 : let1107 :=
  (scope (fun lean_a500 : let112 =>
    (scope (fun lean_a501 : let533 =>
      have lean_s1777 : let365 := by timed Eq.symm lean_a501
      have lean_s1778 : let533 := by timed Eq.symm lean_s1777
      let lean_s1779 := by timed flipCongrArg lean_s1778 [Eq]
      have lean_s1780 : let1034 := by timed rfl
      have lean_s1781 : (Eq let521 let111) := by timed congr lean_s1779 lean_s1780
      have lean_s1782 : let980 := by timed falseIntro lean_a500
      have lean_s1783 : (Eq let521 False) := by timed Eq.trans lean_s1781 lean_s1782
      have lean_s1784 : let1104 := by timed falseElim lean_s1783
      show let1104 from lean_s1784
  ))))
have lean_s1778 : (Implies let1108 let1104) := by liftOrNToImp lean_s1777, 2
have lean_s1779 : (Or (Not let1108) let1104) := by timed impliesElim lean_s1778
have lean_s1780 : let1107 := by R1 lean_s1776, lean_s1779, let1108, [(- 1), (- 1)]
have lean_s1781 : let785 := by timed rfl
let lean_s1782 := by timed congr lean_s1781 lean_s1645
let lean_s1783 := by timed congr lean_s1781 lean_s1400
have lean_s1784 : (Eq let1104 let1104) := by timed rfl
let lean_s1785 := by timed congr lean_s1783 lean_s1784
have lean_s1786 : (Eq let1107 let1106) := by timed congr lean_s1782 lean_s1785
have lean_s1787 : let1106 := by timed eqResolve lean_s1780 lean_s1786
let lean_s1788 := by R1 lean_s1787, lean_s1655, let111, [(- 1), 0]
have lean_s1789 : let1104 := by R2 lean_s1788, lean_s1410, let533, [(- 1), 0]
let lean_s1790 := by R1 lean_s1775, lean_s1789, let521, [(- 1), 0]
let lean_s1791 := by R1 lean_s1790, lean_s1684, let587, [(- 1), 0]
have lean_s1792 : (Or let1103 (Or let166 (Or let887 (Or let1097 (Or let970 let795))))) := by timed cnfAndNeg [let165, let280, let236, let640, let612]
have lean_s1793 : let1102 :=
  (scope (fun lean_a500 : let165 =>
    (scope (fun lean_a501 : let280 =>
      (scope (fun lean_a502 : let236 =>
        (scope (fun lean_a503 : let640 =>
          (scope (fun lean_a504 : let612 =>
            have lean_s1793 : let221 := by timed Eq.symm lean_a502
            have lean_s1794 : let236 := by timed Eq.symm lean_s1793
            have lean_s1795 : let296 := by timed Eq.symm lean_a501
            have lean_s1796 : let644 := by timed Eq.trans lean_s1794 lean_s1795
            let lean_s1797 := by timed flipCongrArg lean_s1796 [Eq]
            have lean_s1798 : let195 := by timed Eq.symm lean_a504
            have lean_s1799 : let375 := by timed Eq.symm lean_a503
            have lean_s1800 : let640 := by timed Eq.symm lean_s1799
            have lean_s1801 : let1043 := by timed Eq.trans lean_s1798 lean_s1800
            have lean_s1802 : (Eq let322 let164) := by timed congr lean_s1797 lean_s1801
            have lean_s1803 : (Eq let164 False) := by timed falseIntro lean_a500
            have lean_s1804 : (Eq let322 False) := by timed Eq.trans lean_s1802 lean_s1803
            have lean_s1805 : let1098 := by timed falseElim lean_s1804
            show let1098 from lean_s1805
  ))))))))))
have lean_s1794 : (Implies let1103 let1098) := by liftOrNToImp lean_s1793, 5
have lean_s1795 : (Or (Not let1103) let1098) := by timed impliesElim lean_s1794
have lean_s1796 : let1102 := by R1 lean_s1792, lean_s1795, let1103, [(- 1), (- 1)]
have lean_s1797 : let785 := by timed rfl
have lean_s1798 : let314 := by timed rfl
let lean_s1799 := by timed flipCongrArg lean_s1798 [Eq]
have lean_s1800 : (Eq let167 let314) := by timed congr lean_s1799 lean_r177
have lean_s1801 : (Eq let167 True) := by timed Eq.trans lean_s1800 lean_r99
have lean_s1802 : (Eq let168 True) := by timed Eq.trans lean_r59 lean_s1801
have lean_s1803 : let168 := by timed trueElim lean_s1802
let lean_s1804 := by timed congr lean_s1797 lean_s1803
let lean_s1805 := by timed congr lean_s1797 lean_s1427
have lean_s1806 : (Eq let1097 let1097) := by timed rfl
let lean_s1807 := by timed congr lean_s1797 lean_s1806
have lean_s1808 : (Eq let970 let970) := by timed rfl
let lean_s1809 := by timed congr lean_s1797 lean_s1808
let lean_s1810 := by timed congr lean_s1797 lean_s1257
have lean_s1811 : (Eq let1098 let1098) := by timed rfl
let lean_s1812 := by timed congr lean_s1810 lean_s1811
let lean_s1813 := by timed congr lean_s1809 lean_s1812
let lean_s1814 := by timed congr lean_s1807 lean_s1813
let lean_s1815 := by timed congr lean_s1805 lean_s1814
have lean_s1816 : (Eq let1102 let1101) := by timed congr lean_s1804 lean_s1815
have lean_s1817 : let1101 := by timed eqResolve lean_s1796 lean_s1816
have lean_s1818 : (Or let164 (Or let795 (Or let970 (Or let1098 (Or let1097 let887))))) := by permutateOr lean_s1817, [0, 4, 3, 5, 2, 1], (- 1)
let lean_s1819 := by R1 lean_s1791, lean_s1818, let236, [(- 1), (- 1)]
have lean_s1820 : let165 := by andElim lean_s922, 40
let lean_s1821 := by R1 lean_s1819, lean_s1820, let164, [(- 1), 0]
let lean_s1822 := by R2 lean_s1821, lean_s1272, let612, [(- 1), 0]
let lean_s1823 := by R2 lean_s1822, lean_s1434, let280, [(- 1), 0]
have lean_s1824 : (Or let1096 (Or let54 let787)) := by timed cnfAndNeg [let53, let72]
have lean_s1825 : let1095 :=
  (scope (fun lean_a502 : let53 =>
    (scope (fun lean_a503 : let72 =>
      have lean_s1825 : let885 := by timed rfl
      let lean_s1826 := by timed flipCongrArg lean_s1825 [Eq]
      have lean_s1827 : let383 := by timed Eq.symm lean_a503
      have lean_s1828 : (Eq let231 let52) := by timed congr lean_s1826 lean_s1827
      have lean_s1829 : (Eq let52 False) := by timed falseIntro lean_a502
      have lean_s1830 : (Eq let231 False) := by timed Eq.trans lean_s1828 lean_s1829
      have lean_s1831 : let1092 := by timed falseElim lean_s1830
      show let1092 from lean_s1831
  ))))
have lean_s1826 : (Implies let1096 let1092) := by liftOrNToImp lean_s1825, 2
have lean_s1827 : (Or (Not let1096) let1092) := by timed impliesElim lean_s1826
have lean_s1828 : let1095 := by R1 lean_s1824, lean_s1827, let1096, [(- 1), (- 1)]
have lean_s1829 : let785 := by timed rfl
have lean_s1830 : let57 := by timed rfl
let lean_s1831 := by timed flipCongrArg lean_s1830 [Eq]
have lean_s1832 : (Eq let55 let57) := by timed congr lean_s1831 lean_r14
have lean_s1833 : (Eq let55 True) := by timed Eq.trans lean_s1832 lean_r15
have lean_s1834 : (Eq let56 True) := by timed Eq.trans lean_r13 lean_s1833
have lean_s1835 : let56 := by timed trueElim lean_s1834
let lean_s1836 := by timed congr lean_s1829 lean_s1835
let lean_s1837 := by timed congr lean_s1829 lean_s1750
have lean_s1838 : (Eq let1092 let1092) := by timed rfl
let lean_s1839 := by timed congr lean_s1837 lean_s1838
have lean_s1840 : (Eq let1095 let1094) := by timed congr lean_s1836 lean_s1839
have lean_s1841 : let1094 := by timed eqResolve lean_s1828 lean_s1840
let lean_s1842 := by R1 lean_s1841, lean_s1309, let52, [(- 1), 0]
have lean_s1843 : let922 := by andElim lean_s913, 39
have lean_s1844 : (Or let231 (Or let71 (Or let253 let921))) := by permutateOr lean_s1843, [1, 2, 0, 3, 4], (- 1)
let lean_s1845 := by R2 lean_s1842, lean_s1844, let231, [(- 1), (- 1)]
have lean_s1846 : (Or let1091 (Or let60 let795)) := by timed cnfAndNeg [let59, let612]
have lean_s1847 : let1090 :=
  (scope (fun lean_a503 : let59 =>
    (scope (fun lean_a504 : let612 =>
      have lean_s1847 : let885 := by timed rfl
      let lean_s1848 := by timed flipCongrArg lean_s1847 [Eq]
      have lean_s1849 : let195 := by timed Eq.symm lean_a504
      have lean_s1850 : let612 := by timed Eq.symm lean_s1849
      have lean_s1851 : let195 := by timed Eq.symm lean_s1850
      have lean_s1852 : (Eq let560 let58) := by timed congr lean_s1848 lean_s1851
      have lean_s1853 : (Eq let58 False) := by timed falseIntro lean_a503
      have lean_s1854 : (Eq let560 False) := by timed Eq.trans lean_s1852 lean_s1853
      have lean_s1855 : let1087 := by timed falseElim lean_s1854
      show let1087 from lean_s1855
  ))))
have lean_s1848 : (Implies let1091 let1087) := by liftOrNToImp lean_s1847, 2
have lean_s1849 : (Or (Not let1091) let1087) := by timed impliesElim lean_s1848
have lean_s1850 : let1090 := by R1 lean_s1846, lean_s1849, let1091, [(- 1), (- 1)]
have lean_s1851 : let785 := by timed rfl
have lean_s1852 : let62 := by timed rfl
let lean_s1853 := by timed flipCongrArg lean_s1852 [Eq]
have lean_s1854 : (Eq let600 let62) := by timed congr lean_s1853 lean_r16
have lean_s1855 : (Eq let600 True) := by timed Eq.trans lean_s1854 lean_r17
have lean_s1856 : (Eq let61 True) := by timed Eq.trans lean_r209 lean_s1855
have lean_s1857 : let61 := by timed trueElim lean_s1856
let lean_s1858 := by timed congr lean_s1851 lean_s1857
let lean_s1859 := by timed congr lean_s1851 lean_s1257
have lean_s1860 : (Eq let1087 let1087) := by timed rfl
let lean_s1861 := by timed congr lean_s1859 lean_s1860
have lean_s1862 : (Eq let1090 let1089) := by timed congr lean_s1858 lean_s1861
have lean_s1863 : let1089 := by timed eqResolve lean_s1850 lean_s1862
let lean_s1864 := by R1 lean_s1863, lean_s1585, let58, [(- 1), 0]
have lean_s1865 : let1087 := by R2 lean_s1864, lean_s1272, let612, [(- 1), 0]
let lean_s1866 := by R1 lean_s1845, lean_s1865, let560, [(- 1), 0]
let lean_s1867 := by R1 lean_s1866, lean_s1701, let645, [(- 1), 0]
have lean_s1868 : (Eq let760 let1086) := by timed flipCongrArg lean_r83 [Not]
have lean_s1869 : let1086 := by timed eqResolve lean_a348 lean_s1868
have lean_s1870 : (Or let1084 (Or let827 let1085)) := by timed flipNotAnd lean_s1869 [let254, let46, let253]
have lean_s1871 : (Or let1085 (Or let1084 let827)) := by permutateOr lean_s1870, [2, 0, 1], (- 1)
let lean_s1872 := by R1 lean_s1867, lean_s1871, let253, [(- 1), (- 1)]
let lean_s1873 := by R2 lean_s1872, lean_s915, let254, [(- 1), (- 1)]
have lean_s1874 : (Or let1083 (Or let67 (Or let1028 let975))) := by timed cnfAndNeg [let66, let116, let533]
have lean_s1875 : let1082 :=
  (scope (fun lean_a504 : let66 =>
    (scope (fun lean_a505 : let116 =>
      (scope (fun lean_a506 : let533 =>
        have lean_s1875 : let365 := by timed Eq.symm lean_a506
        have lean_s1876 : let533 := by timed Eq.symm lean_s1875
        let lean_s1877 := by timed flipCongrArg lean_s1876 [Eq]
        have lean_s1878 : let117 := by timed Eq.symm lean_a505
        have lean_s1879 : let116 := by timed Eq.symm lean_s1878
        have lean_s1880 : (Eq let567 let65) := by timed congr lean_s1877 lean_s1879
        have lean_s1881 : (Eq let65 False) := by timed falseIntro lean_a504
        have lean_s1882 : (Eq let567 False) := by timed Eq.trans lean_s1880 lean_s1881
        have lean_s1883 : let1079 := by timed falseElim lean_s1882
        show let1079 from lean_s1883
  ))))))
have lean_s1876 : (Implies let1083 let1079) := by liftOrNToImp lean_s1875, 3
have lean_s1877 : (Or (Not let1083) let1079) := by timed impliesElim lean_s1876
have lean_s1878 : let1082 := by R1 lean_s1874, lean_s1877, let1083, [(- 1), (- 1)]
have lean_s1879 : let785 := by timed rfl
have lean_s1880 : let70 := by timed rfl
let lean_s1881 := by timed flipCongrArg lean_s1880 [Eq]
have lean_s1882 : (Eq let68 let70) := by timed congr lean_s1881 lean_r145
have lean_s1883 : (Eq let68 True) := by timed Eq.trans lean_s1882 lean_r19
have lean_s1884 : (Eq let69 True) := by timed Eq.trans lean_r18 lean_s1883
have lean_s1885 : let69 := by timed trueElim lean_s1884
let lean_s1886 := by timed congr lean_s1879 lean_s1885
let lean_s1887 := by timed congr lean_s1879 lean_s1145
let lean_s1888 := by timed congr lean_s1879 lean_s1400
have lean_s1889 : (Eq let1079 let1079) := by timed rfl
let lean_s1890 := by timed congr lean_s1888 lean_s1889
let lean_s1891 := by timed congr lean_s1887 lean_s1890
have lean_s1892 : (Eq let1082 let1081) := by timed congr lean_s1886 lean_s1891
have lean_s1893 : let1081 := by timed eqResolve lean_s1878 lean_s1892
have lean_s1894 : (Or let65 (Or let975 (Or let1079 let1028))) := by permutateOr lean_s1893, [0, 2, 3, 1], (- 1)
have lean_s1895 : let66 := by andElim lean_s922, 27
let lean_s1896 := by R1 lean_s1894, lean_s1895, let65, [(- 1), 0]
let lean_s1897 := by R2 lean_s1896, lean_s1410, let533, [(- 1), 0]
have lean_s1898 : let1079 := by R2 lean_s1897, lean_s1155, let116, [(- 1), 0]
let lean_s1899 := by R1 lean_s1873, lean_s1898, let567, [(- 1), 0]
have lean_s1900 : (Eq let776 let1078) := by timed flipCongrArg lean_r244 [Not]
have lean_s1901 : let1078 := by timed eqResolve lean_a452 lean_s1900
have lean_s1902 : (Or let1077 (Or (Not let549) let138)) := by timed flipNotAnd lean_s1901 [let233, let549, let86]
let lean_s1903 := by R1 lean_s1899, lean_s1902, let233, [(- 1), (- 1)]
have lean_s1904 : (Eq let767 let1076) := by timed flipCongrArg lean_r20 [Not]
have lean_s1905 : let1076 := by timed eqResolve lean_a394 lean_s1904
have lean_s1906 : (Or let787 (Or let827 let1075)) := by timed flipNotAnd lean_s1905 [let72, let46, let71]
have lean_s1907 : (Or let787 (Or let1075 let827)) := by permutateOr lean_s1906, [0, 2, 1], (- 1)
let lean_s1908 := by R1 lean_s1903, lean_s1907, let71, [(- 1), (- 1)]
have lean_s1909 : let931 := by andElim lean_s913, 30
have lean_s1910 : (Or let573 (Or let99 (Or let549 (Or let546 let201)))) := by permutateOr lean_s1909, [2, 4, 1, 0, 3], (- 1)
let lean_s1911 := by R2 lean_s1908, lean_s1910, let549, [(- 1), (- 1)]
have lean_s1912 : (Or let1074 (Or let343 let1012)) := by timed cnfAndNeg [let342, let558]
have lean_s1913 : let1073 :=
  (scope (fun lean_a505 : let342 =>
    (scope (fun lean_a506 : let558 =>
      have lean_s1913 : let182 := by timed Eq.symm lean_a506
      have lean_s1914 : let558 := by timed Eq.symm lean_s1913
      let lean_s1915 := by timed flipCongrArg lean_s1914 [Eq]
      have lean_s1916 : (Eq let150 let150) := by timed rfl
      have lean_s1917 : (Eq let546 let341) := by timed congr lean_s1915 lean_s1916
      have lean_s1918 : let1062 := by timed falseIntro lean_a505
      have lean_s1919 : (Eq let546 False) := by timed Eq.trans lean_s1917 lean_s1918
      have lean_s1920 : let1070 := by timed falseElim lean_s1919
      show let1070 from lean_s1920
  ))))
have lean_s1914 : (Implies let1074 let1070) := by liftOrNToImp lean_s1913, 2
have lean_s1915 : (Or (Not let1074) let1070) := by timed impliesElim lean_s1914
have lean_s1916 : let1073 := by R1 lean_s1912, lean_s1915, let1074, [(- 1), (- 1)]
have lean_s1917 : let785 := by timed rfl
let lean_s1918 := by timed congr lean_s1917 lean_s1207
let lean_s1919 := by timed congr lean_s1917 lean_s1211
have lean_s1920 : (Eq let1070 let1070) := by timed rfl
let lean_s1921 := by timed congr lean_s1919 lean_s1920
have lean_s1922 : (Eq let1073 let1072) := by timed congr lean_s1918 lean_s1921
have lean_s1923 : let1072 := by timed eqResolve lean_s1916 lean_s1922
let lean_s1924 := by R1 lean_s1923, lean_s1219, let341, [(- 1), 0]
have lean_s1925 : let1070 := by R2 lean_s1924, lean_s1221, let558, [(- 1), 0]
have lean_s1926 : (Or let787 (Or let827 (Or let30 (Or let322 (Or let138 (Or let787 (Or let827 let1069))))))) := by R1 lean_s1911, lean_s1925, let546, [(- 1), 0]
have lean_s1927 : (Or let787 (Or let827 (Or let30 (Or let322 (Or let138 let1069))))) := by factor lean_s1926, (- 1)
let lean_s1928 := by R2 lean_s1927, lean_s1194, let72, [(- 1), (- 1)]
let lean_s1929 := by R1 lean_s1928, lean_s1224, let726, [(- 1), 0]
have lean_s1930 : (Or let827 (Or let30 (Or let322 (Or let138 (Or let573 (Or let99 (Or let201 (Or let10 (Or let201 (Or let99 let789)))))))))) := by R1 lean_s1929, lean_s1621, let543, [(- 1), (- 1)]
have lean_s1931 : (Or let827 (Or let30 (Or let322 (Or let138 (Or let573 (Or let99 let1063)))))) := by factor lean_s1930, (- 1)
have lean_s1932 : (Or let817 (Or let814 let818)) := by timed cnfAndNeg [let99, let277, let86]
have lean_s1933 : let815 :=
  (scope (fun lean_a505 : let99 =>
    (scope (fun lean_a506 : let277 =>
      (scope (fun lean_a507 : let86 =>
        have lean_s1933 : let319 := by timed Eq.symm lean_a507
        have lean_s1934 : let86 := by timed Eq.symm lean_s1933
        have lean_s1935 : let281 := by timed Eq.symm lean_a506
        let lean_s1936 := by timed Eq.trans lean_s1934 lean_s1935
        have lean_s1937 : let215 := by timed Eq.symm lean_a505
        have lean_s1938 : let1 := by timed Eq.trans lean_s1936 lean_s1937
        show let1 from lean_s1938
  ))))))
have lean_s1934 : (Implies let817 let1) := by liftOrNToImp lean_s1933, 3
have lean_s1935 : (Or (Not let817) let1) := by timed impliesElim lean_s1934
have lean_s1936 : let815 := by R1 lean_s1932, lean_s1935, let817, [(- 1), (- 1)]
have lean_s1937 : (Or let1 (Or let814 let813)) := by permutateOr lean_s1936, [3, 0, 2, 1], (- 1)
let lean_s1938 := by R1 lean_s1931, lean_s1937, let99, [(- 1), (- 1)]
let lean_s1939 := by R1 lean_s1938, lean_s1153, let1, [(- 1), 0]
have lean_s1940 : (Or let1068 (Or let76 let1028)) := by timed cnfAndNeg [let75, let116]
have lean_s1941 : let1067 :=
  (scope (fun lean_a506 : let75 =>
    (scope (fun lean_a507 : let116 =>
      have lean_s1941 : (Eq e0 e0) := by timed rfl
      let lean_s1942 := by timed flipCongrArg lean_s1941 [Eq]
      have lean_s1943 : let117 := by timed Eq.symm lean_a507
      have lean_s1944 : (Eq let573 let10) := by timed congr lean_s1942 lean_s1943
      have lean_s1945 : (Eq let10 False) := by timed falseIntro lean_a506
      have lean_s1946 : (Eq let573 False) := by timed Eq.trans lean_s1944 lean_s1945
      have lean_s1947 : let1064 := by timed falseElim lean_s1946
      show let1064 from lean_s1947
  ))))
have lean_s1942 : (Implies let1068 let1064) := by liftOrNToImp lean_s1941, 2
have lean_s1943 : (Or (Not let1068) let1064) := by timed impliesElim lean_s1942
have lean_s1944 : let1067 := by R1 lean_s1940, lean_s1943, let1068, [(- 1), (- 1)]
have lean_s1945 : let785 := by timed rfl
have lean_s1946 : let79 := by timed rfl
let lean_s1947 := by timed flipCongrArg lean_s1946 [Eq]
have lean_s1948 : (Eq let77 let79) := by timed congr lean_s1947 lean_r22
have lean_s1949 : (Eq let77 True) := by timed Eq.trans lean_s1948 lean_r23
have lean_s1950 : (Eq let78 True) := by timed Eq.trans lean_r21 lean_s1949
have lean_s1951 : let78 := by timed trueElim lean_s1950
let lean_s1952 := by timed congr lean_s1945 lean_s1951
let lean_s1953 := by timed congr lean_s1945 lean_s1145
have lean_s1954 : (Eq let1064 let1064) := by timed rfl
let lean_s1955 := by timed congr lean_s1953 lean_s1954
have lean_s1956 : (Eq let1067 let1066) := by timed congr lean_s1952 lean_s1955
have lean_s1957 : let1066 := by timed eqResolve lean_s1944 lean_s1956
have lean_s1958 : (Or let10 (Or let1064 let1028)) := by permutateOr lean_s1957, [0, 2, 1], (- 1)
let lean_s1959 := by R1 lean_s1939, lean_s1958, let573, [(- 1), (- 1)]
let lean_s1960 := by R2 lean_s1959, lean_s1155, let116, [(- 1), 0]
let lean_s1961 := by R1 lean_s1960, lean_s1124, let30, [(- 1), (- 1)]
let lean_s1962 := by R1 lean_s1961, lean_s1126, let540, [(- 1), 0]
have lean_s1963 : (Or let816 let818) := by timed cnfAndNeg [let277, let86]
have lean_s1964 : let822 :=
  (scope (fun lean_a507 : let277 =>
    (scope (fun lean_a508 : let86 =>
      have lean_s1964 : let319 := by timed Eq.symm lean_a508
      have lean_s1965 : let86 := by timed Eq.symm lean_s1964
      have lean_s1966 : let281 := by timed Eq.symm lean_a507
      have lean_s1967 : let46 := by timed Eq.trans lean_s1965 lean_s1966
      show let46 from lean_s1967
  ))))
have lean_s1965 : (Implies let816 let46) := by liftOrNToImp lean_s1964, 2
have lean_s1966 : (Or (Not let816) let46) := by timed impliesElim lean_s1965
have lean_s1967 : let822 := by R1 lean_s1963, lean_s1966, let816, [(- 1), (- 1)]
have lean_s1968 : (Or let46 let813) := by permutateOr lean_s1967, [2, 1, 0], (- 1)
have lean_s1969 : (Or let322 (Or let138 (Or let201 (Or let10 (Or let789 (Or let138 (Or let789 (Or let10 (Or let138 let813))))))))) := by R2 lean_s1962, lean_s1968, let46, [(- 1), (- 1)]
have lean_s1970 : (Or let322 (Or let138 let1063)) := by factor lean_s1969, (- 1)
have lean_s1971 : (Or let322 (Or let138 (Or let201 let10))) := by R2 lean_s1970, lean_s1117, let277, [(- 1), 0]
have lean_s1972 : (Or let10 (Or let201 (Or let322 let138))) := by permutateOr lean_s1971, [3, 2, 0, 1], (- 1)
let lean_s1973 := by R2 lean_s1823, lean_s1972, let322, [(- 1), (- 1)]
have lean_s1974 : (Or let1055 (Or let1052 let795)) := by timed cnfAndNeg [let201, let612]
have lean_s1975 : let1054 :=
  (scope (fun lean_a507 : let201 =>
    (scope (fun lean_a508 : let612 =>
      have lean_s1975 : let195 := by timed Eq.symm lean_a508
      have lean_s1976 : let612 := by timed Eq.symm lean_s1975
      have lean_s1977 : let198 := by timed Eq.symm lean_a507
      have lean_s1978 : let603 := by timed Eq.trans lean_s1976 lean_s1977
      show let603 from lean_s1978
  ))))
have lean_s1976 : (Implies let1055 let603) := by liftOrNToImp lean_s1975, 2
have lean_s1977 : (Or (Not let1055) let603) := by timed impliesElim lean_s1976
have lean_s1978 : let1054 := by R1 lean_s1974, lean_s1977, let1055, [(- 1), (- 1)]
have lean_s1979 : (Or let603 let1053) := by permutateOr lean_s1978, [2, 1, 0], (- 1)
have lean_s1980 : let806 := by andElim lean_s983, 2
let lean_s1981 := by R1 lean_s1979, lean_s1980, let603, [(- 1), 0]
have lean_s1982 : let1052 := by R2 lean_s1981, lean_s1272, let612, [(- 1), 0]
let lean_s1983 := by R1 lean_s1973, lean_s1982, let201, [(- 1), 0]
let lean_s1984 := by R2 lean_s1983, lean_s1194, let72, [(- 1), (- 1)]
let lean_s1985 := by R1 lean_s1984, lean_s1224, let726, [(- 1), 0]
have lean_s1986 : (Or let530 (Or let138 (Or let99 (Or let827 (Or let30 (Or let970 (Or let10 (Or let138 let1051)))))))) := by R1 lean_s1985, lean_s1982, let201, [(- 1), 0]
have lean_s1987 : (Or let530 (Or let138 (Or let99 (Or let827 (Or let30 (Or let970 let1051)))))) := by factor lean_s1986, (- 1)
let lean_s1988 := by R1 lean_s1279, lean_s1301, let264, [(- 1), 0]
let lean_s1989 := by R1 lean_s1988, lean_s1312, let535, [(- 1), 0]
have lean_s1990 : (Or let1040 (Or let585 (Or let75 (Or let795 let1045)))) := by timed cnfAndNeg [let483, let10, let612, let640, let279]
have lean_s1991 : let1039 :=
  (scope (fun lean_a508 : let483 =>
    (scope (fun lean_a509 : let10 =>
      (scope (fun lean_a510 : let612 =>
        (scope (fun lean_a511 : let640 =>
          (scope (fun lean_a512 : let279 =>
            have lean_s1991 : let311 := by timed Eq.symm lean_a509
            have lean_s1992 : let10 := by timed Eq.symm lean_s1991
            let lean_s1993 := by timed flipCongrArg lean_s1992 [Eq]
            have lean_s1994 : let375 := by timed Eq.symm lean_a511
            have lean_s1995 : let195 := by timed Eq.symm lean_a510
            have lean_s1996 : let612 := by timed Eq.symm lean_s1995
            have lean_s1997 : let1044 := by timed Eq.trans lean_s1994 lean_s1996
            have lean_s1998 : let1043 := by timed Eq.symm lean_s1997
            have lean_s1999 : let1042 := by timed Eq.trans lean_s1998 lean_a512
            have lean_s2000 : let1041 := by timed Eq.symm lean_s1999
            have lean_s2001 : (Eq let239 let482) := by timed congr lean_s1993 lean_s2000
            have lean_s2002 : (Eq let482 False) := by timed falseIntro lean_a508
            have lean_s2003 : (Eq let239 False) := by timed Eq.trans lean_s2001 lean_s2002
            have lean_s2004 : let1035 := by timed falseElim lean_s2003
            show let1035 from lean_s2004
  ))))))))))
have lean_s1992 : (Implies let1040 let1035) := by liftOrNToImp lean_s1991, 5
have lean_s1993 : (Or (Not let1040) let1035) := by timed impliesElim lean_s1992
have lean_s1994 : let1039 := by R1 lean_s1990, lean_s1993, let1040, [(- 1), (- 1)]
have lean_s1995 : let785 := by timed rfl
have lean_s1996 : let643 := by timed rfl
let lean_s1997 := by timed flipCongrArg lean_s1996 [Eq]
have lean_s1998 : (Eq let696 let643) := by timed congr lean_s1997 lean_r191
have lean_s1999 : (Eq let696 True) := by timed Eq.trans lean_s1998 lean_r232
have lean_s2000 : (Eq let586 True) := by timed Eq.trans lean_r281 lean_s1999
have lean_s2001 : let586 := by timed trueElim lean_s2000
let lean_s2002 := by timed congr lean_s1995 lean_s2001
let lean_s2003 := by timed congr lean_s1995 lean_s1143
let lean_s2004 := by timed congr lean_s1995 lean_s1257
let lean_s2005 := by timed congr lean_s1995 lean_s1808
let lean_s2006 := by timed congr lean_s1995 lean_s1002
let lean_s2007 := by timed congr lean_s2006 lean_s1249
let lean_s2008 := by timed congr lean_s2005 lean_s2007
let lean_s2009 := by timed congr lean_s2004 lean_s2008
let lean_s2010 := by timed congr lean_s2003 lean_s2009
have lean_s2011 : (Eq let1039 let1038) := by timed congr lean_s2002 lean_s2010
have lean_s2012 : let1038 := by timed eqResolve lean_s1994 lean_s2011
have lean_s2013 : (Or let482 (Or let795 (Or let970 (Or let75 let1036)))) := by permutateOr lean_s2012, [0, 2, 3, 1, 5, 4], (- 1)
let lean_s2014 := by R1 lean_s1989, lean_s2013, let239, [(- 1), (- 1)]
have lean_s2015 : let483 := by andElim lean_s922, 37
let lean_s2016 := by R1 lean_s2014, lean_s2015, let482, [(- 1), 0]
let lean_s2017 := by R2 lean_s2016, lean_s1272, let612, [(- 1), 0]
let lean_s2018 := by R2 lean_s2017, lean_s1089, let279, [(- 1), 0]
have lean_s2019 : (Or let1033 (Or let82 (Or let1028 let75))) := by timed cnfAndNeg [let81, let116, let10]
have lean_s2020 : let1032 :=
  (scope (fun lean_a509 : let81 =>
    (scope (fun lean_a510 : let116 =>
      (scope (fun lean_a511 : let10 =>
        have lean_s2020 : let117 := by timed Eq.symm lean_a510
        have lean_s2021 : let311 := by timed Eq.symm lean_a511
        have lean_s2022 : let173 := by timed Eq.trans lean_s2020 lean_s2021
        have lean_s2023 : let573 := by timed Eq.symm lean_s2022
        let lean_s2024 := by timed flipCongrArg lean_s2023 [Eq]
        have lean_s2025 : let1034 := by timed rfl
        have lean_s2026 : (Eq let417 let80) := by timed congr lean_s2024 lean_s2025
        have lean_s2027 : (Eq let80 False) := by timed falseIntro lean_a509
        have lean_s2028 : (Eq let417 False) := by timed Eq.trans lean_s2026 lean_s2027
        have lean_s2029 : let1029 := by timed falseElim lean_s2028
        show let1029 from lean_s2029
  ))))))
have lean_s2021 : (Implies let1033 let1029) := by liftOrNToImp lean_s2020, 3
have lean_s2022 : (Or (Not let1033) let1029) := by timed impliesElim lean_s2021
have lean_s2023 : let1032 := by R1 lean_s2019, lean_s2022, let1033, [(- 1), (- 1)]
have lean_s2024 : let785 := by timed rfl
have lean_s2025 : let85 := by timed rfl
let lean_s2026 := by timed flipCongrArg lean_s2025 [Eq]
have lean_s2027 : (Eq let83 let85) := by timed congr lean_s2026 lean_r25
have lean_s2028 : (Eq let83 True) := by timed Eq.trans lean_s2027 lean_r26
have lean_s2029 : (Eq let84 True) := by timed Eq.trans lean_r24 lean_s2028
have lean_s2030 : let84 := by timed trueElim lean_s2029
let lean_s2031 := by timed congr lean_s2024 lean_s2030
let lean_s2032 := by timed congr lean_s2024 lean_s1145
let lean_s2033 := by timed congr lean_s2024 lean_s1143
have lean_s2034 : (Eq let1029 let1029) := by timed rfl
let lean_s2035 := by timed congr lean_s2033 lean_s2034
let lean_s2036 := by timed congr lean_s2032 lean_s2035
have lean_s2037 : (Eq let1032 let1031) := by timed congr lean_s2031 lean_s2036
have lean_s2038 : let1031 := by timed eqResolve lean_s2023 lean_s2037
have lean_s2039 : (Or let80 (Or let75 (Or let1029 let1028))) := by permutateOr lean_s2038, [0, 2, 3, 1], (- 1)
let lean_s2040 := by R1 lean_s2018, lean_s2039, let417, [(- 1), (- 1)]
have lean_s2041 : let81 := by andElim lean_s922, 29
let lean_s2042 := by R1 lean_s2040, lean_s2041, let80, [(- 1), 0]
have lean_s2043 : (Or let543 (Or let970 (Or let75 let75))) := by R2 lean_s2042, lean_s1155, let116, [(- 1), 0]
have lean_s2044 : (Or let543 (Or let970 let75)) := by factor lean_s2043, (- 1)
have lean_s2045 : (Or let530 (Or let138 (Or let99 (Or let827 (Or let30 (Or let970 (Or let543 (Or let543 let970)))))))) := by R1 lean_s1987, lean_s2044, let10, [(- 1), (- 1)]
have lean_s2046 : (Or let530 (Or let138 (Or let99 (Or let827 (Or let30 (Or let970 let543)))))) := by factor lean_s2045, 8
have lean_s2047 : (Or let1027 (Or let901 (Or let138 let530))) := by timed cnfAndNeg [let279, let86, let529]
have lean_s2048 : let1026 :=
  (scope (fun lean_a510 : let279 =>
    (scope (fun lean_a511 : let86 =>
      (scope (fun lean_a512 : let529 =>
        have lean_s2048 : let759 := by timed Eq.symm lean_a512
        have lean_s2049 : let529 := by timed Eq.symm lean_s2048
        have lean_s2050 : let885 := by timed rfl
        let lean_s2051 := by timed flipCongrArg lean_s2050 [op]
        have lean_s2052 : let319 := by timed Eq.symm lean_a511
        have lean_s2053 : let86 := by timed Eq.symm lean_s2052
        have lean_s2054 : let319 := by timed Eq.symm lean_s2053
        have lean_s2055 : (Eq let528 let47) := by timed congr lean_s2051 lean_s2054
        let lean_s2056 := by timed Eq.trans lean_s2049 lean_s2055
        have lean_s2057 : let290 := by timed Eq.symm lean_a510
        have lean_s2058 : let279 := by timed Eq.symm lean_s2057
        have lean_s2059 : let290 := by timed Eq.symm lean_s2058
        have lean_s2060 : let640 := by timed Eq.trans lean_s2056 lean_s2059
        show let640 from lean_s2060
  ))))))
have lean_s2049 : (Implies let1027 let640) := by liftOrNToImp lean_s2048, 3
have lean_s2050 : (Or (Not let1027) let640) := by timed impliesElim lean_s2049
have lean_s2051 : let1026 := by R1 lean_s2047, lean_s2050, let1027, [(- 1), (- 1)]
have lean_s2052 : (Or let640 (Or let530 let1001)) := by permutateOr lean_s2051, [3, 2, 1, 0], (- 1)
let lean_s2053 := by R2 lean_s2046, lean_s2052, let640, [(- 1), (- 1)]
have lean_s2054 : (Or let530 (Or let138 (Or let99 (Or let827 (Or let30 (Or let543 (Or let530 let138))))))) := by R2 lean_s2053, lean_s1089, let279, [(- 1), 0]
have lean_s2055 : (Or let530 let828) := by factor lean_s2054, 7
have lean_s2056 : (Or let1025 let1023) := by timed cnfAndNeg [let644, let28]
have lean_s2057 : let1024 :=
  (scope (fun lean_a510 : let644 =>
    (scope (fun lean_a511 : let28 =>
      have lean_s2057 : let331 := by timed Eq.symm lean_a511
      have lean_s2058 : let28 := by timed Eq.symm lean_s2057
      have lean_s2059 : let332 := by timed Eq.symm lean_a510
      have lean_s2060 : let721 := by timed Eq.trans lean_s2058 lean_s2059
      show let721 from lean_s2060
  ))))
have lean_s2058 : (Implies let1025 let721) := by liftOrNToImp lean_s2057, 2
have lean_s2059 : (Or (Not let1025) let721) := by timed impliesElim lean_s2058
have lean_s2060 : let1024 := by R1 lean_s2056, lean_s2059, let1025, [(- 1), (- 1)]
have lean_s2061 : (Or let721 let1023) := by permutateOr lean_s2060, [2, 0, 1], (- 1)
have lean_s2062 : let804 := by andElim lean_s983, 7
let lean_s2063 := by R1 lean_s2061, lean_s2062, let721, [(- 1), 0]
let lean_s2064 := by R2 lean_s2063, lean_s926, let644, [(- 1), (- 1)]
let lean_s2065 := by R1 lean_s2064, lean_s1658, let148, [(- 1), 0]
have lean_s2066 : (Eq let762 let1022) := by timed flipCongrArg lean_r27 [Not]
have lean_s2067 : let1022 := by timed eqResolve lean_a354 lean_s2066
have lean_s2068 : (Or let982 (Or let138 let35)) := by timed flipNotAnd lean_s2067 [let87, let86, let28]
have lean_s2069 : (Or let35 (Or let982 let138)) := by permutateOr lean_s2068, [2, 0, 1], (- 1)
have lean_s2070 : (Or let35 (Or let22 (Or let587 (Or let35 let138)))) := by R1 lean_s2065, lean_s2069, let87, [(- 1), (- 1)]
have lean_s2071 : (Or let35 (Or let22 (Or let587 let138))) := by factor lean_s2070, (- 1)
let lean_s2072 := by R2 lean_s2071, lean_s1510, let28, [(- 1), (- 1)]
let lean_s2073 := by R1 lean_s2072, lean_s1536, let218, [(- 1), 0]
have lean_s2074 : (Or let1021 let1019) := by timed cnfAndNeg [let49, let90]
have lean_s2075 : let1020 :=
  (scope (fun lean_a511 : let49 =>
    (scope (fun lean_a512 : let90 =>
      have lean_s2075 : let142 := by timed Eq.symm lean_a512
      have lean_s2076 : let90 := by timed Eq.symm lean_s2075
      have lean_s2077 : let145 := by timed Eq.symm lean_a511
      have lean_s2078 : let603 := by timed Eq.trans lean_s2076 lean_s2077
      show let603 from lean_s2078
  ))))
have lean_s2076 : (Implies let1021 let603) := by liftOrNToImp lean_s2075, 2
have lean_s2077 : (Or (Not let1021) let603) := by timed impliesElim lean_s2076
have lean_s2078 : let1020 := by R1 lean_s2074, lean_s2077, let1021, [(- 1), (- 1)]
have lean_s2079 : (Or let603 let1019) := by permutateOr lean_s2078, [2, 0, 1], (- 1)
let lean_s2080 := by R1 lean_s2079, lean_s1980, let603, [(- 1), 0]
let lean_s2081 := by R2 lean_s2080, lean_s1460, let49, [(- 1), (- 1)]
let lean_s2082 := by R1 lean_s2081, lean_s1479, let699, [(- 1), 0]
have lean_s2083 : (Eq let768 let1010) := by timed flipCongrArg lean_r28 [Not]
have lean_s2084 : let1010 := by timed eqResolve lean_a400 lean_s2083
have lean_s2085 : (Or let1009 (Or let138 let963)) := by timed flipNotAnd lean_s2084 [let25, let86, let90]
have lean_s2086 : (Or let1009 let1008) := by permutateOr lean_s2085, [0, 2, 1], (- 1)
let lean_s2087 := by R1 lean_s2082, lean_s2086, let25, [(- 1), (- 1)]
let lean_s2088 := by R1 lean_s2087, lean_s1937, let99, [(- 1), (- 1)]
let lean_s2089 := by R2 lean_s2088, lean_s1117, let277, [(- 1), 0]
have lean_s2090 : (Or let963 (Or let535 (Or let963 let812))) := by R1 lean_s2089, lean_s1153, let1, [(- 1), 0]
have lean_s2091 : (Or let963 (Or let535 let138)) := by factor lean_s2090, (- 1)
have lean_s2092 : (Or let535 let1008) := by permutateOr lean_s2091, [1, 0, 2], (- 1)
let lean_s2093 := by R1 lean_s2073, lean_s2092, let90, [(- 1), (- 1)]
have lean_s2094 : (Or let1006 (Or let531 let1001)) := by timed cnfAndNeg [let530, let86, let279]
have lean_s2095 : let1005 :=
  (scope (fun lean_a513 : let530 =>
    (scope (fun lean_a514 : let86 =>
      (scope (fun lean_a515 : let279 =>
        have lean_s2095 : let886 := by timed rfl
        let lean_s2096 := by timed flipCongrArg lean_s2095 [Eq]
        have lean_s2097 : let290 := by timed Eq.symm lean_a515
        have lean_s2098 : let279 := by timed Eq.symm lean_s2097
        have lean_s2099 : let885 := by timed rfl
        let lean_s2100 := by timed flipCongrArg lean_s2099 [op]
        have lean_s2101 : let319 := by timed Eq.symm lean_a514
        have lean_s2102 : let86 := by timed Eq.symm lean_s2101
        have lean_s2103 : let1007 := by timed congr lean_s2100 lean_s2102
        have lean_s2104 : (Eq let24 let528) := by timed Eq.trans lean_s2098 lean_s2103
        have lean_s2105 : (Eq let640 let529) := by timed congr lean_s2096 lean_s2104
        have lean_s2106 : let883 := by timed falseIntro lean_a513
        have lean_s2107 : (Eq let640 False) := by timed Eq.trans lean_s2105 lean_s2106
        have lean_s2108 : let970 := by timed falseElim lean_s2107
        show let970 from lean_s2108
  ))))))
have lean_s2096 : (Implies let1006 let970) := by liftOrNToImp lean_s2095, 3
have lean_s2097 : (Or (Not let1006) let970) := by timed impliesElim lean_s2096
have lean_s2098 : let1005 := by R1 lean_s2094, lean_s2097, let1006, [(- 1), (- 1)]
have lean_s2099 : let785 := by timed rfl
let lean_s2100 := by timed congr lean_s2099 lean_s1555
let lean_s2101 := by timed congr lean_s2099 lean_s1747
let lean_s2102 := by timed congr lean_s2099 lean_s1002
let lean_s2103 := by timed congr lean_s2102 lean_s1808
let lean_s2104 := by timed congr lean_s2101 lean_s2103
have lean_s2105 : (Eq let1005 let1004) := by timed congr lean_s2100 lean_s2104
have lean_s2106 : let1004 := by timed eqResolve lean_s2098 lean_s2105
have lean_s2107 : (Or let529 (Or let970 let1001)) := by permutateOr lean_s2106, [0, 3, 1, 2], (- 1)
let lean_s2108 := by R1 lean_s2093, lean_s2107, let640, [(- 1), (- 1)]
let lean_s2109 := by R2 lean_s2108, lean_s1089, let279, [(- 1), 0]
let lean_s2110 := by R1 lean_s2109, lean_s946, let22, [(- 1), (- 1)]
have lean_s2111 : (Or let587 (Or let138 (Or let356 (Or let535 (Or let138 (Or let529 (Or let138 let30))))))) := by R2 lean_s2110, lean_s1117, let277, [(- 1), 0]
have lean_s2112 : (Or let587 (Or let138 (Or let356 (Or let535 (Or let529 let30))))) := by factor lean_s2111, (- 1)
let lean_s2113 := by R1 lean_s1371, lean_s984, let93, [(- 1), 0]
let lean_s2114 := by R2 lean_s2113, lean_s1274, let278, [(- 1), 0]
let lean_s2115 := by R2 lean_s2114, lean_s1595, let8, [(- 1), (- 1)]
let lean_s2116 := by R1 lean_s2115, lean_s1610, let516, [(- 1), 0]
have lean_s2117 : (Or let102 (Or let741 (Or let356 (Or let102 let814)))) := by R1 lean_s2116, lean_s1484, let98, [(- 1), (- 1)]
have lean_s2118 : (Or let102 (Or let741 (Or let356 let814))) := by factor lean_s2117, (- 1)
let lean_s2119 := by R2 lean_s2118, lean_s1674, let32, [(- 1), (- 1)]
have lean_s2120 : (Or let892 (Or let531 let888)) := by timed cnfAndNeg [let530, let543, let280]
have lean_s2121 : let891 :=
  (scope (fun lean_a513 : let530 =>
    (scope (fun lean_a514 : let543 =>
      (scope (fun lean_a515 : let280 =>
        have lean_s2121 : let886 := by timed rfl
        let lean_s2122 := by timed flipCongrArg lean_s2121 [Eq]
        have lean_s2123 : let296 := by timed Eq.symm lean_a515
        have lean_s2124 : let280 := by timed Eq.symm lean_s2123
        have lean_s2125 : let885 := by timed rfl
        let lean_s2126 := by timed flipCongrArg lean_s2125 [op]
        have lean_s2127 : let273 := by timed Eq.symm lean_a514
        have lean_s2128 : let543 := by timed Eq.symm lean_s2127
        have lean_s2129 : let884 := by timed congr lean_s2126 lean_s2128
        have lean_s2130 : (Eq let15 let528) := by timed Eq.trans lean_s2124 lean_s2129
        have lean_s2131 : (Eq let28 let529) := by timed congr lean_s2122 lean_s2130
        have lean_s2132 : let883 := by timed falseIntro lean_a513
        have lean_s2133 : let893 := by timed Eq.trans lean_s2131 lean_s2132
        have lean_s2134 : let35 := by timed falseElim lean_s2133
        show let35 from lean_s2134
  ))))))
have lean_s2122 : (Implies let892 let35) := by liftOrNToImp lean_s2121, 3
have lean_s2123 : (Or (Not let892) let35) := by timed impliesElim lean_s2122
have lean_s2124 : let891 := by R1 lean_s2120, lean_s2123, let892, [(- 1), (- 1)]
have lean_s2125 : let785 := by timed rfl
let lean_s2126 := by timed congr lean_s2125 lean_s1555
have lean_s2127 : (Eq let823 let823) := by timed rfl
let lean_s2128 := by timed congr lean_s2125 lean_s2127
let lean_s2129 := by timed congr lean_s2125 lean_s1427
have lean_s2130 : (Eq let35 let35) := by timed rfl
let lean_s2131 := by timed congr lean_s2129 lean_s2130
let lean_s2132 := by timed congr lean_s2128 lean_s2131
have lean_s2133 : (Eq let891 let890) := by timed congr lean_s2126 lean_s2132
have lean_s2134 : let890 := by timed eqResolve lean_s2124 lean_s2133
have lean_s2135 : (Or let529 (Or let35 let888)) := by permutateOr lean_s2134, [0, 3, 1, 2], (- 1)
let lean_s2136 := by R1 lean_s2119, lean_s2135, let28, [(- 1), (- 1)]
let lean_s2137 := by R2 lean_s2136, lean_s1434, let280, [(- 1), 0]
have lean_s2138 : (Or let881 (Or let531 let823)) := by timed cnfAndNeg [let530, let543]
have lean_s2139 : let880 :=
  (scope (fun lean_a513 : let530 =>
    (scope (fun lean_a514 : let543 =>
      have lean_s2139 : let886 := by timed rfl
      let lean_s2140 := by timed flipCongrArg lean_s2139 [Eq]
      have lean_s2141 : let885 := by timed rfl
      let lean_s2142 := by timed flipCongrArg lean_s2141 [op]
      have lean_s2143 : let273 := by timed Eq.symm lean_a514
      have lean_s2144 : let543 := by timed Eq.symm lean_s2143
      have lean_s2145 : let884 := by timed congr lean_s2142 lean_s2144
      have lean_s2146 : (Eq let741 let529) := by timed congr lean_s2140 lean_s2145
      have lean_s2147 : let883 := by timed falseIntro lean_a513
      have lean_s2148 : let882 := by timed Eq.trans lean_s2146 lean_s2147
      have lean_s2149 : let877 := by timed falseElim lean_s2148
      show let877 from lean_s2149
  ))))
have lean_s2140 : (Implies let881 let877) := by liftOrNToImp lean_s2139, 2
have lean_s2141 : (Or (Not let881) let877) := by timed impliesElim lean_s2140
have lean_s2142 : let880 := by R1 lean_s2138, lean_s2141, let881, [(- 1), (- 1)]
have lean_s2143 : let785 := by timed rfl
let lean_s2144 := by timed congr lean_s2143 lean_s1555
let lean_s2145 := by timed congr lean_s2143 lean_s2127
let lean_s2146 := by timed congr lean_s2145 lean_s1719
have lean_s2147 : (Eq let880 let879) := by timed congr lean_s2144 lean_s2146
have lean_s2148 : let879 := by timed eqResolve lean_s2142 lean_s2147
have lean_s2149 : (Or let529 (Or let877 let823)) := by permutateOr lean_s2148, [0, 2, 1], (- 1)
let lean_s2150 := by R1 lean_s2137, lean_s2149, let741, [(- 1), (- 1)]
let lean_s2151 := by R2 lean_s2150, lean_s1621, let99, [(- 1), (- 1)]
have lean_s2152 : (Or let356 (Or let22 (Or let86 (Or let522 (Or let587 (Or let356 (Or let823 (Or let529 (Or let823 (Or let529 (Or let823 let823))))))))))) := by R2 lean_s2151, lean_s1117, let277, [(- 1), 0]
have lean_s2153 : (Or let356 (Or let22 (Or let86 (Or let522 (Or let587 (Or let823 let529)))))) := by factor lean_s2152, 11
let lean_s2154 := by R2 lean_s2153, lean_s1689, let543, [(- 1), (- 1)]
let lean_s2155 := by R1 lean_s2154, lean_s1610, let516, [(- 1), 0]
let lean_s2156 := by R1 lean_s2155, lean_s946, let22, [(- 1), (- 1)]
have lean_s2157 : (Or let356 (Or let86 (Or let522 (Or let587 (Or let529 (Or let86 (Or let30 (Or let645 let30)))))))) := by R2 lean_s2156, lean_s1117, let277, [(- 1), 0]
have lean_s2158 : (Or let356 (Or let86 (Or let522 (Or let587 (Or let529 (Or let30 let645)))))) := by factor lean_s2157, 8
have lean_s2159 : (Or let86 let844) := by permutateOr lean_s2158, [1, 5, 6, 2, 3, 0, 4], (- 1)
have lean_s2160 : (Or let587 (Or let356 (Or let535 (Or let529 (Or let30 let844))))) := by R2 lean_s2112, lean_s2159, let86, [(- 1), (- 1)]
have lean_s2161 : (Or let587 (Or let356 (Or let535 (Or let529 (Or let30 (Or let645 let522)))))) := by factor lean_s2160, 10
have lean_s2162 : (Or let30 (Or let645 (Or let535 let843))) := by permutateOr lean_s2161, [4, 5, 2, 6, 0, 1, 3], (- 1)
let lean_s2163 := by R2 lean_s2055, lean_s2162, let529, [(- 1), (- 1)]
let lean_s2164 := by R1 lean_s2163, lean_s1701, let645, [(- 1), 0]
let lean_s2165 := by R1 lean_s2164, lean_s1587, let356, [(- 1), 0]
let lean_s2166 := by R1 lean_s2165, lean_s1684, let587, [(- 1), 0]
let lean_s2167 := by R1 lean_s2166, lean_s1312, let535, [(- 1), 0]
have lean_s2168 : (Or let832 (Or let339 let818)) := by timed cnfAndNeg [let338, let277, let86]
have lean_s2169 : let831 :=
  (scope (fun lean_a513 : let338 =>
    (scope (fun lean_a514 : let277 =>
      (scope (fun lean_a515 : let86 =>
        have lean_s2169 : let319 := by timed Eq.symm lean_a515
        have lean_s2170 : let86 := by timed Eq.symm lean_s2169
        have lean_s2171 : let281 := by timed Eq.symm lean_a514
        have lean_s2172 : let46 := by timed Eq.trans lean_s2170 lean_s2171
        let lean_s2173 := by timed flipCongrArg lean_s2172 [Eq]
        have lean_s2174 : let276 := by timed rfl
        have lean_s2175 : (Eq let522 let337) := by timed congr lean_s2173 lean_s2174
        have lean_s2176 : (Eq let337 False) := by timed falseIntro lean_a513
        have lean_s2177 : (Eq let522 False) := by timed Eq.trans lean_s2175 lean_s2176
        have lean_s2178 : let801 := by timed falseElim lean_s2177
        show let801 from lean_s2178
  ))))))
have lean_s2170 : (Implies let832 let801) := by liftOrNToImp lean_s2169, 3
have lean_s2171 : (Or (Not let832) let801) := by timed impliesElim lean_s2170
have lean_s2172 : let831 := by R1 lean_s2168, lean_s2171, let832, [(- 1), (- 1)]
have lean_s2173 : let785 := by timed rfl
have lean_s2174 : let629 := by timed rfl
let lean_s2175 := by timed flipCongrArg lean_s2174 [Eq]
have lean_s2176 : (Eq let588 let629) := by timed congr lean_s2175 lean_r112
have lean_s2177 : (Eq let588 True) := by timed Eq.trans lean_s2176 lean_r222
have lean_s2178 : (Eq let340 True) := by timed Eq.trans lean_r194 lean_s2177
have lean_s2179 : let340 := by timed trueElim lean_s2178
let lean_s2180 := by timed congr lean_s2173 lean_s2179
let lean_s2181 := by timed congr lean_s2173 lean_s940
let lean_s2182 := by timed congr lean_s2173 lean_s1747
have lean_s2183 : (Eq let801 let801) := by timed rfl
let lean_s2184 := by timed congr lean_s2182 lean_s2183
let lean_s2185 := by timed congr lean_s2181 lean_s2184
have lean_s2186 : (Eq let831 let830) := by timed congr lean_s2180 lean_s2185
have lean_s2187 : let830 := by timed eqResolve lean_s2172 lean_s2186
have lean_s2188 : (Or let337 (Or let138 (Or let801 let789))) := by permutateOr lean_s2187, [0, 2, 3, 1], (- 1)
let lean_s2189 := by R1 lean_s2167, lean_s2188, let522, [(- 1), (- 1)]
let lean_s2190 := by R1 lean_s2189, lean_s1698, let337, [(- 1), 0]
have lean_s2191 : (Or let138 (Or let99 (Or let827 (Or let30 (Or let543 (Or let30 let138)))))) := by R2 lean_s2190, lean_s1117, let277, [(- 1), 0]
have lean_s2192 : let828 := by factor lean_s2191, 6
let lean_s2193 := by R1 lean_s2192, lean_s1621, let543, [(- 1), (- 1)]
let lean_s2194 := by R2 lean_s2193, lean_s1117, let277, [(- 1), 0]
let lean_s2195 := by R2 lean_s2194, lean_s1968, let46, [(- 1), (- 1)]
have lean_s2196 : (Or let138 (Or let99 (Or let30 (Or let99 let138)))) := by R2 lean_s2195, lean_s1117, let277, [(- 1), 0]
have lean_s2197 : (Or let138 (Or let99 let30)) := by factor lean_s2196, 4
let lean_s2198 := by R1 lean_s2197, lean_s1124, let30, [(- 1), (- 1)]
let lean_s2199 := by R1 lean_s2198, lean_s1126, let540, [(- 1), 0]
let lean_s2200 := by R1 lean_s2199, lean_s1937, let99, [(- 1), (- 1)]
let lean_s2201 := by R1 lean_s2200, lean_s1153, let1, [(- 1), 0]
have lean_s2202 : (Or let138 let812) := by R2 lean_s2201, lean_s1117, let277, [(- 1), 0]
have lean_s2203 : let138 := by factor lean_s2202, 2
have lean_s2204 : (Or let522 (Or let581 let522)) := by R1 lean_s1731, lean_s2203, let86, [(- 1), 0]
have lean_s2205 : let811 := by factor lean_s2204, 2
have lean_s2206 : (Or let810 (Or let801 let790)) := by timed cnfAndNeg [let522, let734]
have lean_s2207 : let809 :=
  (scope (fun lean_a514 : let522 =>
    (scope (fun lean_a515 : let734 =>
      have lean_s2207 : let203 := by timed Eq.symm lean_a515
      have lean_s2208 : let734 := by timed Eq.symm lean_s2207
      have lean_s2209 : let206 := by timed Eq.symm lean_a514
      have lean_s2210 : let579 := by timed Eq.trans lean_s2208 lean_s2209
      show let579 from lean_s2210
  ))))
have lean_s2208 : (Implies let810 let579) := by liftOrNToImp lean_s2207, 2
have lean_s2209 : (Or (Not let810) let579) := by timed impliesElim lean_s2208
have lean_s2210 : let809 := by R1 lean_s2206, lean_s2209, let810, [(- 1), (- 1)]
have lean_s2211 : (Or let579 (Or let790 let801)) := by permutateOr lean_s2210, [2, 1, 0], (- 1)
have lean_s2212 : let802 := by andElim lean_s983, 6
let lean_s2213 := by R1 lean_s2211, lean_s2212, let579, [(- 1), 0]
have lean_s2214 : let801 := by R2 lean_s2213, lean_s1311, let734, [(- 1), 0]
have lean_s2215 : let581 := by R1 lean_s2205, lean_s2214, let522, [(- 1), 0]
let lean_s2216 := by R1 lean_s946, lean_s2215, let30, [(- 1), 0]
have lean_s2217 : let845 := by R2 lean_s2216, lean_s1117, let277, [(- 1), 0]
let lean_s2218 := by R1 lean_s926, lean_s2217, let22, [(- 1), 0]
let lean_s2219 := by R1 lean_s2061, lean_s2062, let721, [(- 1), 0]
let lean_s2220 := by R1 lean_s1730, lean_s2203, let86, [(- 1), 0]
have lean_s2221 : let28 := by R1 lean_s2220, lean_s2214, let522, [(- 1), 0]
have lean_s2222 : let971 := by R2 lean_s2219, lean_s2221, let28, [(- 1), 0]
let lean_s2223 := by R1 lean_s2218, lean_s2222, let644, [(- 1), 0]
let lean_s2224 := by R1 lean_s2223, lean_s1658, let148, [(- 1), 0]
have lean_s2225 : let87 := by R1 lean_s2224, lean_s1684, let587, [(- 1), 0]
have lean_s2226 : let1084 := by R2 lean_s924, lean_s2225, let87, [(- 1), 0]
let lean_s2227 := by R1 lean_s915, lean_s2226, let254, [(- 1), 0]
let lean_s2228 := by R1 lean_s2227, lean_s2215, let30, [(- 1), 0]
let lean_s2229 := by R1 lean_s2228, lean_s1898, let567, [(- 1), 0]
have lean_s2230 : (Or let1187 (Or let1098 let795)) := by timed cnfAndNeg [let322, let612]
have lean_s2231 : let1186 :=
  (scope (fun lean_a515 : let322 =>
    (scope (fun lean_a516 : let612 =>
      have lean_s2231 : let195 := by timed Eq.symm lean_a516
      have lean_s2232 : let612 := by timed Eq.symm lean_s2231
      have lean_s2233 : let196 := by timed Eq.symm lean_a515
      have lean_s2234 : let721 := by timed Eq.trans lean_s2232 lean_s2233
      show let721 from lean_s2234
  ))))
have lean_s2232 : (Implies let1187 let721) := by liftOrNToImp lean_s2231, 2
have lean_s2233 : (Or (Not let1187) let721) := by timed impliesElim lean_s2232
have lean_s2234 : let1186 := by R1 lean_s2230, lean_s2233, let1187, [(- 1), (- 1)]
have lean_s2235 : (Or let721 let1099) := by permutateOr lean_s2234, [2, 1, 0], (- 1)
let lean_s2236 := by R1 lean_s2235, lean_s2062, let721, [(- 1), 0]
have lean_s2237 : let1098 := by R2 lean_s2236, lean_s1272, let612, [(- 1), 0]
have lean_s2238 : let233 := by R1 lean_s2229, lean_s2237, let322, [(- 1), 0]
let lean_s2239 := by R2 lean_s312, lean_s2238, let233, [(- 1), 0]
let lean_s2240 := by R1 lean_s1689, lean_s2203, let86, [(- 1), 0]
let lean_s2241 := by R1 lean_s2240, lean_s2215, let30, [(- 1), 0]
let lean_s2242 := by R1 lean_s2241, lean_s1610, let516, [(- 1), 0]
have lean_s2243 : let543 := by R1 lean_s2242, lean_s1701, let645, [(- 1), 0]
let lean_s2244 := by R2 lean_s1621, lean_s2243, let543, [(- 1), 0]
have lean_s2245 : let99 := by R2 lean_s2244, lean_s1117, let277, [(- 1), 0]
have lean_s2246 : let1092 := by R2 lean_s2239, lean_s2245, let99, [(- 1), 0]
let lean_s2247 := by R1 lean_s308, lean_s2246, let231, [(- 1), 0]
let lean_s2248 := by R1 lean_s2247, lean_s2226, let254, [(- 1), 0]
have lean_s2249 : (Or let1183 (Or let823 let787)) := by timed cnfAndNeg [let543, let72]
have lean_s2250 : let1182 :=
  (scope (fun lean_a516 : let543 =>
    (scope (fun lean_a517 : let72 =>
      have lean_s2250 : let383 := by timed Eq.symm lean_a517
      have lean_s2251 : let273 := by timed Eq.symm lean_a516
      have lean_s2252 : let543 := by timed Eq.symm lean_s2251
      have lean_s2253 : let484 := by timed Eq.trans lean_s2250 lean_s2252
      show let484 from lean_s2253
  ))))
have lean_s2251 : (Implies let1183 let484) := by liftOrNToImp lean_s2250, 2
have lean_s2252 : (Or (Not let1183) let484) := by timed impliesElim lean_s2251
have lean_s2253 : let1182 := by R1 lean_s2249, lean_s2252, let1183, [(- 1), (- 1)]
have lean_s2254 : (Or let484 (Or let787 let823)) := by permutateOr lean_s2253, [2, 1, 0], (- 1)
have lean_s2255 : let485 := by andElim lean_s922, 36
let lean_s2256 := by R1 lean_s2254, lean_s2255, let484, [(- 1), 0]
have lean_s2257 : let787 := by R2 lean_s2256, lean_s2243, let543, [(- 1), 0]
let lean_s2258 := by R1 lean_s2248, lean_s2257, let72, [(- 1), 0]
have lean_s2259 : (Or let786 (Or let243 (Or let780 let781))) := by timed cnfAndNeg [let242, let283, let551]
have lean_s2260 : let784 :=
  (scope (fun lean_a516 : let242 =>
    (scope (fun lean_a517 : let283 =>
      (scope (fun lean_a518 : let551 =>
        have lean_s2260 : let391 := by timed Eq.symm lean_a518
        have lean_s2261 : let551 := by timed Eq.symm lean_s2260
        let lean_s2262 := by timed flipCongrArg lean_s2261 [Eq]
        have lean_s2263 : let291 := by timed Eq.symm lean_a517
        have lean_s2264 : let283 := by timed Eq.symm lean_s2263
        have lean_s2265 : (Eq let664 let241) := by timed congr lean_s2262 lean_s2264
        have lean_s2266 : (Eq let241 False) := by timed falseIntro lean_a516
        have lean_s2267 : (Eq let664 False) := by timed Eq.trans lean_s2265 lean_s2266
        have lean_s2268 : let779 := by timed falseElim lean_s2267
        show let779 from lean_s2268
  ))))))
have lean_s2261 : (Implies let786 let779) := by liftOrNToImp lean_s2260, 3
have lean_s2262 : (Or (Not let786) let779) := by timed impliesElim lean_s2261
have lean_s2263 : let784 := by R1 lean_s2259, lean_s2262, let786, [(- 1), (- 1)]
have lean_s2264 : let785 := by timed rfl
have lean_s2265 : let265 := by timed rfl
let lean_s2266 := by timed flipCongrArg lean_s2265 [Eq]
have lean_s2267 : (Eq let244 let265) := by timed congr lean_s2266 lean_r84
have lean_s2268 : (Eq let244 True) := by timed Eq.trans lean_s2267 lean_r90
have lean_s2269 : (Eq let245 True) := by timed Eq.trans lean_r80 lean_s2268
have lean_s2270 : let245 := by timed trueElim lean_s2269
let lean_s2271 := by timed congr lean_s2264 lean_s2270
have lean_s2272 : (Eq let780 let780) := by timed rfl
let lean_s2273 := by timed congr lean_s2264 lean_s2272
let lean_s2274 := by timed congr lean_s2264 lean_s1004
have lean_s2275 : (Eq let779 let779) := by timed rfl
let lean_s2276 := by timed congr lean_s2274 lean_s2275
let lean_s2277 := by timed congr lean_s2273 lean_s2276
have lean_s2278 : (Eq let784 let783) := by timed congr lean_s2271 lean_s2277
have lean_s2279 : let783 := by timed eqResolve lean_s2263 lean_s2278
have lean_s2280 : (Or let241 (Or let781 (Or let779 let780))) := by permutateOr lean_s2279, [0, 2, 3, 1], (- 1)
have lean_s2281 : let242 := by andElim lean_s922, 15
let lean_s2282 := by R1 lean_s2280, lean_s2281, let241, [(- 1), 0]
let lean_s2283 := by R2 lean_s2282, lean_s1025, let551, [(- 1), 0]
have lean_s2284 : let283 := by andElim lean_s1088, 5
have lean_s2285 : let779 := by R2 lean_s2283, lean_s2284, let283, [(- 1), 0]
have lean_s2286 : let661 := by R1 lean_s2258, lean_s2285, let664, [(- 1), 0]
let lean_s2287 := by R2 lean_s5, lean_s2286, let661, [(- 1), 0]
let lean_s2288 := by R1 lean_s2287, lean_s1761, let41, [(- 1), 0]
exact (show False from by R2 lean_s2288, lean_s1272, let612, [0, 0])


