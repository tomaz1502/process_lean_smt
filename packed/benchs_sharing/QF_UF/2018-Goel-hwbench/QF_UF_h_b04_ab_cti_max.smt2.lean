open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000


universe u
variable {uttx2431 : Type u} [Nonempty uttx2431]
variable {uttx248 : Type u} [Nonempty uttx248]
variable {uttx2432 : Type u} [Nonempty uttx2432]
variable {yx24wx242x5fop : uttx2432}
variable {yx24wx244x5fop : uttx2432}
variable {yx24n0s8 : uttx248}
variable {yx24DATAx5fOUT : uttx248}
variable {yx24DATAx5fOUTx24next : uttx248}
variable {yx24DATAx5fOUTx24nextx5frhsx5fop : uttx248}
variable {yx24statox24next : Prop}
variable {yx24statox24nextx5frhsx5fop : Prop}
variable {yx24RMAXx24nextx5frhsx5fop : uttx248}
variable {yx24DATAx5fIN : uttx248}
variable {yx24RMIN : uttx248}
variable {yx24RMINx24nextx5frhsx5fop : uttx248}
variable {yx2413 : Prop}
variable {yx2419 : Prop}
variable {yx2424 : Prop}
variable {yx2428 : Prop}
variable {yx24RMAXx24next : uttx248}
variable {yx2455 : Prop}
variable {yx24wx242x24nextx5fop : uttx2432}
variable {yx24RMAXx24nextx5frhsx5fop : uttx248}
variable {yx24DATAx5fIN : uttx248}
variable {yx24n1s32 : uttx2432}
variable {yx24RMINx24nextx5frhsx5fop : uttx248}
variable {yx24RMINx24next : uttx248}
variable {yx24stato : Prop}
variable {yx24wx242x24nextx5fop : uttx2432}
variable {yx2424 : Prop}
variable {yx24RMAXx24next : uttx248}
variable {yx2455 : Prop}
variable {yx2428 : Prop}
variable {yx2464 : Prop}
variable {yx2419 : Prop}
variable {yx24wx242x5fop : uttx2432}
variable {Extractx5f1x5f7x5f7x5f8 : (uttx248 -> Prop)}
variable {yx24RMINx24next : uttx248}
variable {Concatx5f32x5f1x5f31 : (Prop -> uttx2431 -> uttx2432)}
variable {yx24stato : Prop}
variable {yx2470 : Prop}
variable {yx2440 : Prop}
variable {yx24RMIN : uttx248}
variable {yx24wx244x24nextx5fop : uttx2432}
variable {yx2431 : Prop}
variable {yx2460 : Prop}
variable {yx24prop : Prop}
variable {yx2429 : Prop}
variable {yx24n0s31 : uttx2431}
variable {yx2464 : Prop}
variable {yx24prop0x24nextx5fop : Prop}
variable {yx2460 : Prop}
variable {yx24propx24next : Prop}
variable {yx24prop0x5fop : Prop}
variable {yx24prop0x24nextx5fop : Prop}
variable {yx2444 : Prop}
variable {yx24n1s32 : uttx2432}
variable {yx2459 : Prop}
variable {yx24n0s31 : uttx2431}
variable {yx24RMAX : uttx248}
variable {yx2439 : Prop}
variable {yx24DATAx5fOUTx24nextx5frhsx5fop : uttx248}
variable {yx24DATAx5fOUTx24next : uttx248}
variable {yx24DATAx5fOUT : uttx248}
variable {yx24n0s8 : uttx248}
variable {yx24prop0x5fop : Prop}
variable {yx24RMAX : uttx248}
variable {yx2444 : Prop}
variable {yx2413 : Prop}
variable {yx24wx244x24nextx5fop : uttx2432}
variable {yx2439 : Prop}
variable {yx24wx244x5fop : uttx2432}
variable {yx2440 : Prop}
variable {yx2470 : Prop}
variable {yx2454 : Prop}
variable {yx2431 : Prop}
variable {yx2454 : Prop}
variable {yx2467 : Prop}
variable {yx2429 : Prop}
variable {yx24statox24nextx5frhsx5fop : Prop}
variable {yx2447 : Prop}
variable {yx24statox24next : Prop}
variable {yx24prop : Prop}
variable {Extractx5f1x5f7x5f7x5f8 : (uttx248 -> Prop)}
variable {yx2447 : Prop}
variable {yx24propx24next : Prop}
variable {yx2459 : Prop}
variable {yx2467 : Prop}
variable {Concatx5f32x5f1x5f31 : (Prop -> uttx2431 -> uttx2432)}

theorem th0 :
  let let1 := (Extractx5f1x5f7x5f7x5f8 yx24RMIN)
  let let2 := (Not let1)
  let let3 := (Not let2)
  let let4 := (Eq let1 let3)
  let let5 := (Eq let3 let1)
  let let6 := (Extractx5f1x5f7x5f7x5f8 yx24RMAX)
  let let7 := (Not let6)
  let let8 := (Not let7)
  let let9 := (Eq let6 let8)
  let let10 := (Eq let8 let6)
  let let11 := (smtIte yx24statox24nextx5frhsx5fop yx24RMIN yx24DATAx5fIN uttx248)
  let let12 := (Extractx5f1x5f7x5f7x5f8 let11)
  let let13 := (Not let12)
  let let14 := (Not let13)
  let let15 := (Eq let12 let14)
  let let16 := (Eq let14 let12)
  let let17 := (smtIte yx24statox24nextx5frhsx5fop yx24RMAX yx24DATAx5fIN uttx248)
  let let18 := (Extractx5f1x5f7x5f7x5f8 let17)
  let let19 := (Not let18)
  let let20 := (Not let19)
  let let21 := (Eq let20 let18)
  let let22 := (Eq let18 let18)
  let let23 := (Eq let22 let22)
  let let24 := (Eq yx24RMAX let17)
  let let25 := (Eq let17 yx24RMAX)
  let let26 := (Eq yx24DATAx5fIN let17)
  let let27 := (Eq let17 yx24DATAx5fIN)
  let let28 := (Eq yx24DATAx5fIN let11)
  let let29 := (Eq let11 yx24DATAx5fIN)
  let let30 := (Eq yx2454 True)
  let let31 := (Eq let6 let6)
  let let32 := (Eq let31 True)
  let let33 := (Eq let11 let11)
  let let34 := (Eq let33 True)
  let let35 := (Eq let12 let12)
  let let36 := (Eq let35 let35)
  let let37 := (Concatx5f32x5f1x5f31 let18 yx24n0s31)
  let let38 := (Eq let37 let37)
  let let39 := (Not True)
  let let40 := (Not yx24statox24nextx5frhsx5fop)
  let let41 := (smtIte let40 yx24DATAx5fIN yx24RMIN uttx248)
  let let42 := (Concatx5f32x5f1x5f31 let12 yx24n0s31)
  let let43 := (Eq let42 let37)
  let let44 := (Not let43)
  let let45 := (Eq False let43)
  let let46 := (Eq let1 let1)
  let let47 := (Eq let46 True)
  let let48 := (Or False let43)
  let let49 := (Eq yx24n1s32 yx24wx242x5fop)
  let let50 := (Eq yx24wx242x5fop yx24n1s32)
  let let51 := (Concatx5f32x5f1x5f31 let1 yx24n0s31)
  let let52 := (Eq let37 let51)
  let let53 := (Eq let51 let37)
  let let54 := (Eq let53 let52)
  let let55 := (Eq yx24RMIN let11)
  let let56 := (Eq let11 yx24RMIN)
  let let57 := (Eq let37 let42)
  let let58 := (Concatx5f32x5f1x5f31 let6 yx24n0s31)
  let let59 := (Eq let58 let37)
  let let60 := (Eq let37 let58)
  let let61 := (Eq yx24prop True)
  let let62 := (Eq let18 let20)
  let let63 := (Eq yx24n1s32 let37)
  let let64 := (Not let63)
  let let65 := (Not let64)
  let let66 := (Eq let22 True)
  let let67 := (Eq let35 True)
  let let68 := (Eq let17 let17)
  let let69 := (Eq let68 True)
  let let70 := (Not let59)
  let let71 := (Or let70 let53)
  let let72 := (And let71 let44)
  let let73 := (And let71 (And True (And True (And True (And True let44)))))
  let let74 := (Eq yx24statox24nextx5frhsx5fop yx24statox24nextx5frhsx5fop)
  let let75 := (smtIte yx24statox24nextx5frhsx5fop yx24DATAx5fOUT yx24n0s8 uttx248)
  let let76 := (Eq let75 let75)
  let let77 := (Eq let43 let57)
  let let78 := (smtIte let40 yx24DATAx5fIN yx24RMAX uttx248)
  let let79 := (Not let60)
  let let80 := (Or let79 let52)
  let let81 := (Eq True let80)
  let let82 := (Eq let59 let60)
  let let83 := (Not let38)
  let let84 := (Or let83 let57)
  let let85 := (Eq let39 let84)
  let let86 := (And let81 (And let76 (And let74 (And let68 (And let33 let85)))))
  let let87 := (And True (And let81 (And let76 (And let74 (And let68 (And let33 (And let85 True)))))))
  let let88 := (smtIte let40 yx24n0s8 yx24DATAx5fOUT uttx248)
  let let89 := (Extractx5f1x5f7x5f7x5f8 yx24RMINx24next)
  let let90 := (Concatx5f32x5f1x5f31 let89 yx24n0s31)
  let let91 := (Eq yx24n1s32 let90)
  let let92 := (Extractx5f1x5f7x5f7x5f8 yx24RMAXx24next)
  let let93 := (Concatx5f32x5f1x5f31 let92 yx24n0s31)
  let let94 := (Eq yx24n1s32 let93)
  let let95 := (Not let94)
  let let96 := (Or let95 let91)
  let let97 := (Not yx2454)
  let let98 := (Eq let97 let96)
  let let99 := (And let98 yx2454)
  let let100 := (Eq yx24RMINx24next let11)
  let let101 := (Eq yx24RMAXx24next let17)
  let let102 := (Eq yx24statox24next yx24statox24nextx5frhsx5fop)
  let let103 := (Eq yx24DATAx5fOUTx24next let75)
  let let104 := (Eq yx24n1s32 let51)
  let let105 := (Eq yx24n1s32 let58)
  let let106 := (Not let105)
  let let107 := (Or let106 let104)
  let let108 := (Eq yx24prop let107)
  let let109 := (And yx24prop (And let108 (And let103 (And let102 (And let101 (And let100 let99))))))
  let let110 := (And let102 (And let101 let100))
  let let111 := (And let103 let110)
  let let112 := (And yx24prop (And let108 (And let111 let99)))
  let let113 := (Eq yx2431 let6)
  let let114 := (Concatx5f32x5f1x5f31 yx2431 yx24n0s31)
  let let115 := (Eq yx24wx242x5fop let114)
  let let116 := (Not let50)
  let let117 := (Eq yx2439 let116)
  let let118 := (Eq yx2440 let1)
  let let119 := (Concatx5f32x5f1x5f31 yx2440 yx24n0s31)
  let let120 := (Eq yx24wx244x5fop let119)
  let let121 := (Eq yx24n1s32 yx24wx244x5fop)
  let let122 := (Eq yx2444 let121)
  let let123 := (Or yx2439 yx2444)
  let let124 := (Eq yx24prop0x5fop let123)
  let let125 := (Eq yx24prop yx24prop0x5fop)
  let let126 := (Eq yx2447 let125)
  let let127 := (smtIte yx24stato yx24n0s8 yx24DATAx5fOUT uttx248)
  let let128 := (Eq yx24DATAx5fOUTx24nextx5frhsx5fop let127)
  let let129 := (Eq yx24DATAx5fOUTx24next yx24DATAx5fOUTx24nextx5frhsx5fop)
  let let130 := (Eq yx2413 let129)
  let let131 := (Eq yx24stato let40)
  let let132 := (Eq yx2419 let102)
  let let133 := (smtIte yx24stato yx24DATAx5fIN yx24RMAX uttx248)
  let let134 := (Eq yx24RMAXx24nextx5frhsx5fop let133)
  let let135 := (Eq yx24RMAXx24next yx24RMAXx24nextx5frhsx5fop)
  let let136 := (Eq yx2424 let135)
  let let137 := (smtIte yx24stato yx24DATAx5fIN yx24RMIN uttx248)
  let let138 := (Eq yx24RMINx24nextx5frhsx5fop let137)
  let let139 := (Eq yx24RMINx24next yx24RMINx24nextx5frhsx5fop)
  let let140 := (Eq yx2428 let139)
  let let141 := (And yx2413 (And yx2419 (And yx2424 yx2428)))
  let let142 := (Eq yx2429 let141)
  let let143 := (Eq yx2455 let92)
  let let144 := (Concatx5f32x5f1x5f31 yx2455 yx24n0s31)
  let let145 := (Eq yx24wx242x24nextx5fop let144)
  let let146 := (Eq yx24n1s32 yx24wx242x24nextx5fop)
  let let147 := (Not let146)
  let let148 := (Eq yx2459 let147)
  let let149 := (Eq yx2460 let89)
  let let150 := (Concatx5f32x5f1x5f31 yx2460 yx24n0s31)
  let let151 := (Eq yx24wx244x24nextx5fop let150)
  let let152 := (Eq yx24n1s32 yx24wx244x24nextx5fop)
  let let153 := (Eq yx2464 let152)
  let let154 := (Or yx2459 yx2464)
  let let155 := (Eq yx24prop0x24nextx5fop let154)
  let let156 := (Eq yx24propx24next yx24prop0x24nextx5fop)
  let let157 := (Eq yx2467 let156)
  let let158 := (Eq yx24propx24next let97)
  let let159 := (And yx24prop (And yx2447 (And yx2429 (And yx2467 yx2454))))
  let let160 := (Eq yx2470 let159)
  let let161 := (Not let57)
  let let162 := (And let80 let161)
  let let163 := (Eq yx24n0s31 yx24n0s31)
  let let164 := (Eq let51 let51)
  let let165 := (Eq let46 let46)
  let let166 := (Eq let58 let58)
  let let167 := (Eq let31 let31)
  let let168 := (Eq And And)
  let let169 := (Eq yx24wx242x5fop let58)
  let let170 := (And let169 let113)
  let let171 := (Eq yx2439 let106)
  let let172 := (And let118 (And let171 let170))
  let let173 := (Eq yx24wx244x5fop let51)
  let let174 := (And let173 let172)
  let let175 := (Eq yx2444 let104)
  let let176 := (And let175 let174)
  let let177 := (Eq yx24prop0x5fop let107)
  let let178 := (And let177 let176)
  let let179 := (Eq yx2447 let108)
  let let180 := (And let128 (And let179 let178))
  let let181 := (Eq yx24DATAx5fOUTx24next let127)
  let let182 := (Eq yx2413 let181)
  let let183 := (And let132 (And let131 (And let182 let180)))
  let let184 := (Eq yx24RMAXx24nextx5frhsx5fop let17)
  let let185 := (And let184 let183)
  let let186 := (Eq yx2424 let101)
  let let187 := (And let186 let185)
  let let188 := (Eq yx24RMINx24nextx5frhsx5fop let11)
  let let189 := (And let188 let187)
  let let190 := (Eq yx2428 let100)
  let let191 := (And let190 let189)
  let let192 := (Eq yx2429 let111)
  let let193 := (And let143 (And let192 let191))
  let let194 := (Eq yx24wx242x24nextx5fop let93)
  let let195 := (And let194 let193)
  let let196 := (Eq yx2459 let95)
  let let197 := (And let149 (And let196 let195))
  let let198 := (Eq yx24wx244x24nextx5fop let90)
  let let199 := (And let198 let197)
  let let200 := (Eq yx2464 let91)
  let let201 := (And let200 let199)
  let let202 := (Eq yx24prop0x24nextx5fop let96)
  let let203 := (And let202 let201)
  let let204 := (Eq yx24propx24next let96)
  let let205 := (Eq yx2467 let204)
  let let206 := (And let158 (And let205 let203))
  let let207 := (Eq yx2470 let109)
  let let208 := (And let30 (And let61 (And let207 let206)))
  let let209 := (And let100 (And let101 (And let102 (And let103 let208))))
  let let210 := (Not let49)
  let let211 := (Eq yx2439 let210)
  let let212 := (Eq yx24n1s32 yx24n1s32)
  let let213 := (Eq yx2439 yx2439)
  let let214 := (Eq yx24prop yx24prop)
  let let215 := (Eq yx24DATAx5fOUTx24next yx24DATAx5fOUTx24next)
  let let216 := (Eq yx24RMAXx24nextx5frhsx5fop let78)
  let let217 := (Eq yx24RMAXx24nextx5frhsx5fop yx24RMAXx24nextx5frhsx5fop)
  let let218 := (Eq yx24RMAX yx24RMAX)
  let let219 := (Eq yx24DATAx5fIN yx24DATAx5fIN)
  let let220 := (Eq yx24RMINx24nextx5frhsx5fop let41)
  let let221 := (Eq yx24RMINx24nextx5frhsx5fop yx24RMINx24nextx5frhsx5fop)
  let let222 := (Eq yx24RMIN yx24RMIN)
  let let223 := (Eq yx24DATAx5fOUTx24next let88)
  let let224 := (And let223 let110)
  let let225 := (Eq yx2429 let224)
  let let226 := (Eq yx2429 yx2429)
  let let227 := (Eq yx2413 let223)
  let let228 := (Eq let181 let223)
  let let229 := (Eq let127 let88)
  let let230 := (Eq yx24DATAx5fOUT yx24DATAx5fOUT)
  let let231 := (Eq yx24n0s8 yx24n0s8)
  let let232 := (Eq yx2470 let112)
  let let233 := (Eq yx2470 yx2470)
  let let234 := (Not yx2459)
  let let235 := (Eq let93 let37)
  let let236 := (Eq let92 let18)
  let let237 := (Not let154)
  let let238 := (Not yx24prop0x24nextx5fop)
  let let239 := (Not yx24propx24next)
  let let240 := (smtIte yx24statox24nextx5frhsx5fop let55 let28 Prop)
  let let241 := (smtIte yx24statox24nextx5frhsx5fop let56 let29 Prop)
  let let242 := (Eq let33 let33)
  let let243 := (smtIte yx24statox24nextx5frhsx5fop let24 let26 Prop)
  let let244 := (smtIte yx24statox24nextx5frhsx5fop let25 let27 Prop)
  let let245 := (Eq let68 let68)
  let let246 := (Not let28)
  let let247 := (Not let26)
  let let248 := (Or let247 let246)
  let let249 := (Or let19 let248)
  let let250 := (Or let18 let19)
  let let251 := (Or let19 (Or let247 (Or let246 let12)))
  let let252 := (And let26 let28)
  let let253 := (And let18 let252)
  let let254 := (Eq let12 True)
  let let255 := (Eq let18 True)
  let let256 := (Eq let12 let18)
  let let257 := (Eq let11 let17)
  let let258 := (Or let12 let13)
  let let259 := (Or let13 (Or let19 let57))
  let let260 := (And let12 let18)
  let let261 := (Eq let18 let12)
  let let262 := (Eq True let12)
  let let263 := (Or let247 (Or let246 let13))
  let let264 := (Or let18 let263)
  let let265 := (Or let20 let263)
  let let266 := (Eq Or Or)
  let let267 := (Eq let21 True)
  let let268 := (Eq let62 True)
  let let269 := (Eq let62 let22)
  let let270 := (And let19 let252)
  let let271 := (Eq let12 False)
  let let272 := (Eq let18 False)
  let let273 := (Or let12 (Or let18 let57))
  let let274 := (Or let14 (Or let20 let57))
  let let275 := (Eq let16 True)
  let let276 := (Eq let15 True)
  let let277 := (Eq let15 let35)
  let let278 := (And let13 let19)
  let let279 := (Eq False let12)
  let let280 := (Not let24)
  let let281 := (Or let60 let280)
  let let282 := (Or let6 let7)
  let let283 := (Or let280 let19)
  let let284 := (Or let6 let283)
  let let285 := (Or let8 let283)
  let let286 := (Eq let10 True)
  let let287 := (Eq let9 True)
  let let288 := (Eq let9 let31)
  let let289 := (And let7 let24)
  let let290 := (Eq let6 False)
  let let291 := (Eq let18 let6)
  let let292 := (Or let6 (Or let18 let60))
  let let293 := (Or let8 (Or let20 let60))
  let let294 := (And let7 let19)
  let let295 := (Or let7 let280)
  let let296 := (Or let7 (Or let280 let18))
  let let297 := (And let6 let24)
  let let298 := (Eq let6 True)
  let let299 := (Or let7 (Or let19 let60))
  let let300 := (And let6 let18)
  let let301 := (Not let55)
  let let302 := (Or let13 let301)
  let let303 := (Or let13 (Or let301 let1))
  let let304 := (And let12 let55)
  let let305 := (Eq let1 True)
  let let306 := (Eq let1 let12)
  let let307 := (Or let1 let2)
  let let308 := (Not let52)
  let let309 := (Or let308 let57)
  let let310 := (Or let13 (Or let2 let309))
  let let311 := (And let12 (And let1 let52))
  let let312 := (Eq let51 let42)
  let let313 := (Or let301 let2)
  let let314 := (Or let12 let313)
  let let315 := (Or let14 let313)
  let let316 := (And let13 let55)
  let let317 := (Eq let1 False)
  let let318 := (Or let12 (Or let1 let309))
  let let319 := (Or let14 (Or let3 let309))
  let let320 := (And let13 (And let2 let52))
(Eq let5 let4) → let5 → (Eq let10 let9) → (Eq let16 let15) → let16 → let21 → let23 → (Eq let25 let24) → (Eq let27 let26) → (Eq let29 let28) → (Eq let30 yx2454) → let32 → let34 → let36 → (Eq let38 True) → (Eq let39 False) → (Eq let41 let11) → (Eq let45 let44) → let47 → (Eq let48 let43) → (Eq let50 let49) → let54 → (Eq let56 let55) → (Eq let57 let43) → (Eq let60 let59) → (Eq let61 yx24prop) → (Eq let21 let62) → (Eq let65 let63) → let66 → let67 → let69 → (Eq let73 let72) → (Eq let74 True) → (Eq let76 True) → let77 → (Eq let78 let17) → (Eq let81 let80) → let10 → let82 → (Eq let87 let86) → (Eq let88 let75) → (Eq let52 let53) → (Eq let112 let109) → let113 → let115 → let117 → let118 → let120 → let122 → let124 → let126 → let128 → let130 → let131 → let132 → let134 → let136 → let138 → let140 → let142 → let143 → let145 → let148 → let149 → let151 → let153 → let155 → let157 → let158 → let160 → yx2470 → False :=
  let let1 := (Extractx5f1x5f7x5f7x5f8 yx24RMIN)
  let let2 := (Not let1)
  let let3 := (Not let2)
  let let4 := (Eq let1 let3)
  let let5 := (Eq let3 let1)
  let let6 := (Extractx5f1x5f7x5f7x5f8 yx24RMAX)
  let let7 := (Not let6)
  let let8 := (Not let7)
  let let9 := (Eq let6 let8)
  let let10 := (Eq let8 let6)
  let let11 := (smtIte yx24statox24nextx5frhsx5fop yx24RMIN yx24DATAx5fIN uttx248)
  let let12 := (Extractx5f1x5f7x5f7x5f8 let11)
  let let13 := (Not let12)
  let let14 := (Not let13)
  let let15 := (Eq let12 let14)
  let let16 := (Eq let14 let12)
  let let17 := (smtIte yx24statox24nextx5frhsx5fop yx24RMAX yx24DATAx5fIN uttx248)
  let let18 := (Extractx5f1x5f7x5f7x5f8 let17)
  let let19 := (Not let18)
  let let20 := (Not let19)
  let let21 := (Eq let20 let18)
  let let22 := (Eq let18 let18)
  let let23 := (Eq let22 let22)
  let let24 := (Eq yx24RMAX let17)
  let let25 := (Eq let17 yx24RMAX)
  let let26 := (Eq yx24DATAx5fIN let17)
  let let27 := (Eq let17 yx24DATAx5fIN)
  let let28 := (Eq yx24DATAx5fIN let11)
  let let29 := (Eq let11 yx24DATAx5fIN)
  let let30 := (Eq yx2454 True)
  let let31 := (Eq let6 let6)
  let let32 := (Eq let31 True)
  let let33 := (Eq let11 let11)
  let let34 := (Eq let33 True)
  let let35 := (Eq let12 let12)
  let let36 := (Eq let35 let35)
  let let37 := (Concatx5f32x5f1x5f31 let18 yx24n0s31)
  let let38 := (Eq let37 let37)
  let let39 := (Not True)
  let let40 := (Not yx24statox24nextx5frhsx5fop)
  let let41 := (smtIte let40 yx24DATAx5fIN yx24RMIN uttx248)
  let let42 := (Concatx5f32x5f1x5f31 let12 yx24n0s31)
  let let43 := (Eq let42 let37)
  let let44 := (Not let43)
  let let45 := (Eq False let43)
  let let46 := (Eq let1 let1)
  let let47 := (Eq let46 True)
  let let48 := (Or False let43)
  let let49 := (Eq yx24n1s32 yx24wx242x5fop)
  let let50 := (Eq yx24wx242x5fop yx24n1s32)
  let let51 := (Concatx5f32x5f1x5f31 let1 yx24n0s31)
  let let52 := (Eq let37 let51)
  let let53 := (Eq let51 let37)
  let let54 := (Eq let53 let52)
  let let55 := (Eq yx24RMIN let11)
  let let56 := (Eq let11 yx24RMIN)
  let let57 := (Eq let37 let42)
  let let58 := (Concatx5f32x5f1x5f31 let6 yx24n0s31)
  let let59 := (Eq let58 let37)
  let let60 := (Eq let37 let58)
  let let61 := (Eq yx24prop True)
  let let62 := (Eq let18 let20)
  let let63 := (Eq yx24n1s32 let37)
  let let64 := (Not let63)
  let let65 := (Not let64)
  let let66 := (Eq let22 True)
  let let67 := (Eq let35 True)
  let let68 := (Eq let17 let17)
  let let69 := (Eq let68 True)
  let let70 := (Not let59)
  let let71 := (Or let70 let53)
  let let72 := (And let71 let44)
  let let73 := (And let71 (And True (And True (And True (And True let44)))))
  let let74 := (Eq yx24statox24nextx5frhsx5fop yx24statox24nextx5frhsx5fop)
  let let75 := (smtIte yx24statox24nextx5frhsx5fop yx24DATAx5fOUT yx24n0s8 uttx248)
  let let76 := (Eq let75 let75)
  let let77 := (Eq let43 let57)
  let let78 := (smtIte let40 yx24DATAx5fIN yx24RMAX uttx248)
  let let79 := (Not let60)
  let let80 := (Or let79 let52)
  let let81 := (Eq True let80)
  let let82 := (Eq let59 let60)
  let let83 := (Not let38)
  let let84 := (Or let83 let57)
  let let85 := (Eq let39 let84)
  let let86 := (And let81 (And let76 (And let74 (And let68 (And let33 let85)))))
  let let87 := (And True (And let81 (And let76 (And let74 (And let68 (And let33 (And let85 True)))))))
  let let88 := (smtIte let40 yx24n0s8 yx24DATAx5fOUT uttx248)
  let let89 := (Extractx5f1x5f7x5f7x5f8 yx24RMINx24next)
  let let90 := (Concatx5f32x5f1x5f31 let89 yx24n0s31)
  let let91 := (Eq yx24n1s32 let90)
  let let92 := (Extractx5f1x5f7x5f7x5f8 yx24RMAXx24next)
  let let93 := (Concatx5f32x5f1x5f31 let92 yx24n0s31)
  let let94 := (Eq yx24n1s32 let93)
  let let95 := (Not let94)
  let let96 := (Or let95 let91)
  let let97 := (Not yx2454)
  let let98 := (Eq let97 let96)
  let let99 := (And let98 yx2454)
  let let100 := (Eq yx24RMINx24next let11)
  let let101 := (Eq yx24RMAXx24next let17)
  let let102 := (Eq yx24statox24next yx24statox24nextx5frhsx5fop)
  let let103 := (Eq yx24DATAx5fOUTx24next let75)
  let let104 := (Eq yx24n1s32 let51)
  let let105 := (Eq yx24n1s32 let58)
  let let106 := (Not let105)
  let let107 := (Or let106 let104)
  let let108 := (Eq yx24prop let107)
  let let109 := (And yx24prop (And let108 (And let103 (And let102 (And let101 (And let100 let99))))))
  let let110 := (And let102 (And let101 let100))
  let let111 := (And let103 let110)
  let let112 := (And yx24prop (And let108 (And let111 let99)))
  let let113 := (Eq yx2431 let6)
  let let114 := (Concatx5f32x5f1x5f31 yx2431 yx24n0s31)
  let let115 := (Eq yx24wx242x5fop let114)
  let let116 := (Not let50)
  let let117 := (Eq yx2439 let116)
  let let118 := (Eq yx2440 let1)
  let let119 := (Concatx5f32x5f1x5f31 yx2440 yx24n0s31)
  let let120 := (Eq yx24wx244x5fop let119)
  let let121 := (Eq yx24n1s32 yx24wx244x5fop)
  let let122 := (Eq yx2444 let121)
  let let123 := (Or yx2439 yx2444)
  let let124 := (Eq yx24prop0x5fop let123)
  let let125 := (Eq yx24prop yx24prop0x5fop)
  let let126 := (Eq yx2447 let125)
  let let127 := (smtIte yx24stato yx24n0s8 yx24DATAx5fOUT uttx248)
  let let128 := (Eq yx24DATAx5fOUTx24nextx5frhsx5fop let127)
  let let129 := (Eq yx24DATAx5fOUTx24next yx24DATAx5fOUTx24nextx5frhsx5fop)
  let let130 := (Eq yx2413 let129)
  let let131 := (Eq yx24stato let40)
  let let132 := (Eq yx2419 let102)
  let let133 := (smtIte yx24stato yx24DATAx5fIN yx24RMAX uttx248)
  let let134 := (Eq yx24RMAXx24nextx5frhsx5fop let133)
  let let135 := (Eq yx24RMAXx24next yx24RMAXx24nextx5frhsx5fop)
  let let136 := (Eq yx2424 let135)
  let let137 := (smtIte yx24stato yx24DATAx5fIN yx24RMIN uttx248)
  let let138 := (Eq yx24RMINx24nextx5frhsx5fop let137)
  let let139 := (Eq yx24RMINx24next yx24RMINx24nextx5frhsx5fop)
  let let140 := (Eq yx2428 let139)
  let let141 := (And yx2413 (And yx2419 (And yx2424 yx2428)))
  let let142 := (Eq yx2429 let141)
  let let143 := (Eq yx2455 let92)
  let let144 := (Concatx5f32x5f1x5f31 yx2455 yx24n0s31)
  let let145 := (Eq yx24wx242x24nextx5fop let144)
  let let146 := (Eq yx24n1s32 yx24wx242x24nextx5fop)
  let let147 := (Not let146)
  let let148 := (Eq yx2459 let147)
  let let149 := (Eq yx2460 let89)
  let let150 := (Concatx5f32x5f1x5f31 yx2460 yx24n0s31)
  let let151 := (Eq yx24wx244x24nextx5fop let150)
  let let152 := (Eq yx24n1s32 yx24wx244x24nextx5fop)
  let let153 := (Eq yx2464 let152)
  let let154 := (Or yx2459 yx2464)
  let let155 := (Eq yx24prop0x24nextx5fop let154)
  let let156 := (Eq yx24propx24next yx24prop0x24nextx5fop)
  let let157 := (Eq yx2467 let156)
  let let158 := (Eq yx24propx24next let97)
  let let159 := (And yx24prop (And yx2447 (And yx2429 (And yx2467 yx2454))))
  let let160 := (Eq yx2470 let159)
  let let161 := (Not let57)
  let let162 := (And let80 let161)
  let let163 := (Eq yx24n0s31 yx24n0s31)
  let let164 := (Eq let51 let51)
  let let165 := (Eq let46 let46)
  let let166 := (Eq let58 let58)
  let let167 := (Eq let31 let31)
  let let168 := (Eq And And)
  let let169 := (Eq yx24wx242x5fop let58)
  let let170 := (And let169 let113)
  let let171 := (Eq yx2439 let106)
  let let172 := (And let118 (And let171 let170))
  let let173 := (Eq yx24wx244x5fop let51)
  let let174 := (And let173 let172)
  let let175 := (Eq yx2444 let104)
  let let176 := (And let175 let174)
  let let177 := (Eq yx24prop0x5fop let107)
  let let178 := (And let177 let176)
  let let179 := (Eq yx2447 let108)
  let let180 := (And let128 (And let179 let178))
  let let181 := (Eq yx24DATAx5fOUTx24next let127)
  let let182 := (Eq yx2413 let181)
  let let183 := (And let132 (And let131 (And let182 let180)))
  let let184 := (Eq yx24RMAXx24nextx5frhsx5fop let17)
  let let185 := (And let184 let183)
  let let186 := (Eq yx2424 let101)
  let let187 := (And let186 let185)
  let let188 := (Eq yx24RMINx24nextx5frhsx5fop let11)
  let let189 := (And let188 let187)
  let let190 := (Eq yx2428 let100)
  let let191 := (And let190 let189)
  let let192 := (Eq yx2429 let111)
  let let193 := (And let143 (And let192 let191))
  let let194 := (Eq yx24wx242x24nextx5fop let93)
  let let195 := (And let194 let193)
  let let196 := (Eq yx2459 let95)
  let let197 := (And let149 (And let196 let195))
  let let198 := (Eq yx24wx244x24nextx5fop let90)
  let let199 := (And let198 let197)
  let let200 := (Eq yx2464 let91)
  let let201 := (And let200 let199)
  let let202 := (Eq yx24prop0x24nextx5fop let96)
  let let203 := (And let202 let201)
  let let204 := (Eq yx24propx24next let96)
  let let205 := (Eq yx2467 let204)
  let let206 := (And let158 (And let205 let203))
  let let207 := (Eq yx2470 let109)
  let let208 := (And let30 (And let61 (And let207 let206)))
  let let209 := (And let100 (And let101 (And let102 (And let103 let208))))
  let let210 := (Not let49)
  let let211 := (Eq yx2439 let210)
  let let212 := (Eq yx24n1s32 yx24n1s32)
  let let213 := (Eq yx2439 yx2439)
  let let214 := (Eq yx24prop yx24prop)
  let let215 := (Eq yx24DATAx5fOUTx24next yx24DATAx5fOUTx24next)
  let let216 := (Eq yx24RMAXx24nextx5frhsx5fop let78)
  let let217 := (Eq yx24RMAXx24nextx5frhsx5fop yx24RMAXx24nextx5frhsx5fop)
  let let218 := (Eq yx24RMAX yx24RMAX)
  let let219 := (Eq yx24DATAx5fIN yx24DATAx5fIN)
  let let220 := (Eq yx24RMINx24nextx5frhsx5fop let41)
  let let221 := (Eq yx24RMINx24nextx5frhsx5fop yx24RMINx24nextx5frhsx5fop)
  let let222 := (Eq yx24RMIN yx24RMIN)
  let let223 := (Eq yx24DATAx5fOUTx24next let88)
  let let224 := (And let223 let110)
  let let225 := (Eq yx2429 let224)
  let let226 := (Eq yx2429 yx2429)
  let let227 := (Eq yx2413 let223)
  let let228 := (Eq let181 let223)
  let let229 := (Eq let127 let88)
  let let230 := (Eq yx24DATAx5fOUT yx24DATAx5fOUT)
  let let231 := (Eq yx24n0s8 yx24n0s8)
  let let232 := (Eq yx2470 let112)
  let let233 := (Eq yx2470 yx2470)
  let let234 := (Not yx2459)
  let let235 := (Eq let93 let37)
  let let236 := (Eq let92 let18)
  let let237 := (Not let154)
  let let238 := (Not yx24prop0x24nextx5fop)
  let let239 := (Not yx24propx24next)
  let let240 := (smtIte yx24statox24nextx5frhsx5fop let55 let28 Prop)
  let let241 := (smtIte yx24statox24nextx5frhsx5fop let56 let29 Prop)
  let let242 := (Eq let33 let33)
  let let243 := (smtIte yx24statox24nextx5frhsx5fop let24 let26 Prop)
  let let244 := (smtIte yx24statox24nextx5frhsx5fop let25 let27 Prop)
  let let245 := (Eq let68 let68)
  let let246 := (Not let28)
  let let247 := (Not let26)
  let let248 := (Or let247 let246)
  let let249 := (Or let19 let248)
  let let250 := (Or let18 let19)
  let let251 := (Or let19 (Or let247 (Or let246 let12)))
  let let252 := (And let26 let28)
  let let253 := (And let18 let252)
  let let254 := (Eq let12 True)
  let let255 := (Eq let18 True)
  let let256 := (Eq let12 let18)
  let let257 := (Eq let11 let17)
  let let258 := (Or let12 let13)
  let let259 := (Or let13 (Or let19 let57))
  let let260 := (And let12 let18)
  let let261 := (Eq let18 let12)
  let let262 := (Eq True let12)
  let let263 := (Or let247 (Or let246 let13))
  let let264 := (Or let18 let263)
  let let265 := (Or let20 let263)
  let let266 := (Eq Or Or)
  let let267 := (Eq let21 True)
  let let268 := (Eq let62 True)
  let let269 := (Eq let62 let22)
  let let270 := (And let19 let252)
  let let271 := (Eq let12 False)
  let let272 := (Eq let18 False)
  let let273 := (Or let12 (Or let18 let57))
  let let274 := (Or let14 (Or let20 let57))
  let let275 := (Eq let16 True)
  let let276 := (Eq let15 True)
  let let277 := (Eq let15 let35)
  let let278 := (And let13 let19)
  let let279 := (Eq False let12)
  let let280 := (Not let24)
  let let281 := (Or let60 let280)
  let let282 := (Or let6 let7)
  let let283 := (Or let280 let19)
  let let284 := (Or let6 let283)
  let let285 := (Or let8 let283)
  let let286 := (Eq let10 True)
  let let287 := (Eq let9 True)
  let let288 := (Eq let9 let31)
  let let289 := (And let7 let24)
  let let290 := (Eq let6 False)
  let let291 := (Eq let18 let6)
  let let292 := (Or let6 (Or let18 let60))
  let let293 := (Or let8 (Or let20 let60))
  let let294 := (And let7 let19)
  let let295 := (Or let7 let280)
  let let296 := (Or let7 (Or let280 let18))
  let let297 := (And let6 let24)
  let let298 := (Eq let6 True)
  let let299 := (Or let7 (Or let19 let60))
  let let300 := (And let6 let18)
  let let301 := (Not let55)
  let let302 := (Or let13 let301)
  let let303 := (Or let13 (Or let301 let1))
  let let304 := (And let12 let55)
  let let305 := (Eq let1 True)
  let let306 := (Eq let1 let12)
  let let307 := (Or let1 let2)
  let let308 := (Not let52)
  let let309 := (Or let308 let57)
  let let310 := (Or let13 (Or let2 let309))
  let let311 := (And let12 (And let1 let52))
  let let312 := (Eq let51 let42)
  let let313 := (Or let301 let2)
  let let314 := (Or let12 let313)
  let let315 := (Or let14 let313)
  let let316 := (And let13 let55)
  let let317 := (Eq let1 False)
  let let318 := (Or let12 (Or let1 let309))
  let let319 := (Or let14 (Or let3 let309))
  let let320 := (And let13 (And let2 let52))
fun lean_r0 : (Eq let5 let4) => -- THEORY_REWRITE_BOOL
fun lean_r1 : let5 => -- THEORY_REWRITE_BOOL
fun lean_r2 : (Eq let10 let9) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq let16 let15) => -- THEORY_REWRITE_BOOL
fun lean_r4 : let16 => -- THEORY_REWRITE_BOOL
fun lean_r5 : let21 => -- THEORY_REWRITE_BOOL
fun lean_r6 : let23 => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq let25 let24) => -- THEORY_REWRITE_UF
fun lean_r8 : (Eq let27 let26) => -- THEORY_REWRITE_UF
fun lean_r9 : (Eq let29 let28) => -- THEORY_REWRITE_UF
fun lean_r10 : (Eq let30 yx2454) => -- THEORY_REWRITE_BOOL
fun lean_r11 : let32 => -- THEORY_REWRITE_BOOL
fun lean_r12 : let34 => -- THEORY_REWRITE_UF
fun lean_r13 : let36 => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let38 True) => -- THEORY_REWRITE_UF
fun lean_r15 : (Eq let39 False) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq let41 let11) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let45 let44) => -- THEORY_REWRITE_BOOL
fun lean_r18 : let47 => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let48 let43) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq let50 let49) => -- THEORY_REWRITE_UF
fun lean_r21 : let54 => -- THEORY_REWRITE_UF
fun lean_r22 : (Eq let56 let55) => -- THEORY_REWRITE_UF
fun lean_r23 : (Eq let57 let43) => -- THEORY_REWRITE_UF
fun lean_r24 : (Eq let60 let59) => -- THEORY_REWRITE_UF
fun lean_r25 : (Eq let61 yx24prop) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq let21 let62) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq let65 let63) => -- THEORY_REWRITE_BOOL
fun lean_r28 : let66 => -- THEORY_REWRITE_BOOL
fun lean_r29 : let67 => -- THEORY_REWRITE_BOOL
fun lean_r30 : let69 => -- THEORY_REWRITE_UF
fun lean_r31 : (Eq let73 let72) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let74 True) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq let76 True) => -- THEORY_REWRITE_UF
fun lean_r34 : let77 => -- THEORY_REWRITE_UF
fun lean_r35 : (Eq let78 let17) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let81 let80) => -- THEORY_REWRITE_BOOL
fun lean_r37 : let10 => -- THEORY_REWRITE_BOOL
fun lean_r38 : let82 => -- THEORY_REWRITE_UF
fun lean_r39 : (Eq let87 let86) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let88 let75) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let52 let53) => -- THEORY_REWRITE_UF
fun lean_r42 : (Eq let112 let109) => -- THEORY_REWRITE_BOOL
fun lean_a43 : let113 =>
fun lean_a44 : let115 =>
fun lean_a45 : let117 =>
fun lean_a46 : let118 =>
fun lean_a47 : let120 =>
fun lean_a48 : let122 =>
fun lean_a49 : let124 =>
fun lean_a50 : let126 =>
fun lean_a51 : let128 =>
fun lean_a52 : let130 =>
fun lean_a53 : let131 =>
fun lean_a54 : let132 =>
fun lean_a55 : let134 =>
fun lean_a56 : let136 =>
fun lean_a57 : let138 =>
fun lean_a58 : let140 =>
fun lean_a59 : let142 =>
fun lean_a60 : let143 =>
fun lean_a61 : let145 =>
fun lean_a62 : let148 =>
fun lean_a63 : let149 =>
fun lean_a64 : let151 =>
fun lean_a65 : let153 =>
fun lean_a66 : let155 =>
fun lean_a67 : let157 =>
fun lean_a68 : let158 =>
fun lean_a69 : let160 =>
fun lean_a70 : yx2470 => by
have lean_s0 : (Or let320 (Or let14 (Or let3 let308))) := by timed cnfAndNeg [let13, let2, let52]
have lean_s1 : let319 :=
  (scope (fun lean_a71 : let13 =>
    (scope (fun lean_a72 : let2 =>
      (scope (fun lean_a73 : let52 =>
        have lean_s1 : let53 := by timed Eq.symm lean_a73
        have lean_s2 : let52 := by timed Eq.symm lean_s1
        have lean_s3 : let317 := by timed falseIntro lean_a72
        have lean_s4 : let271 := by timed falseIntro lean_a71
        have lean_s5 : let279 := by timed Eq.symm lean_s4
        have lean_s6 : let306 := by timed Eq.trans lean_s3 lean_s5
        let lean_s7 := by timed flipCongrArg lean_s6 [Concatx5f32x5f1x5f31]
        have lean_s8 : let163 := by timed rfl
        have lean_s9 : let312 := by timed congr lean_s7 lean_s8
        have lean_s10 : let57 := by timed Eq.trans lean_s2 lean_s9
        show let57 from lean_s10
  ))))))
have lean_s2 : (Implies let320 let57) := by liftOrNToImp lean_s1, 3
have lean_s3 : (Or (Not let320) let57) := by timed impliesElim lean_s2
have lean_s4 : let319 := by R1 lean_s0, lean_s3, let320, [(- 1), (- 1)]
have lean_s5 : let266 := by timed rfl
have lean_s6 : let35 := by timed rfl
let lean_s7 := by timed flipCongrArg lean_s6 [Eq]
have lean_s8 : let277 := by timed congr lean_s7 lean_r4
have lean_s9 : let276 := by timed Eq.trans lean_s8 lean_r29
have lean_s10 : let275 := by timed Eq.trans lean_r3 lean_s9
have lean_s11 : let16 := by timed trueElim lean_s10
let lean_s12 := by timed congr lean_s5 lean_s11
have lean_s13 : let46 := by timed rfl
let lean_s14 := by timed flipCongrArg lean_s13 [Eq]
have lean_s15 : (Eq let4 let46) := by timed congr lean_s14 lean_r1
have lean_s16 : (Eq let4 True) := by timed Eq.trans lean_s15 lean_r18
have lean_s17 : (Eq let5 True) := by timed Eq.trans lean_r0 lean_s16
have lean_s18 : let5 := by timed trueElim lean_s17
let lean_s19 := by timed congr lean_s5 lean_s18
have lean_s20 : (Eq let308 let308) := by timed rfl
let lean_s21 := by timed congr lean_s5 lean_s20
have lean_s22 : (Eq let57 let57) := by timed rfl
let lean_s23 := by timed congr lean_s21 lean_s22
let lean_s24 := by timed congr lean_s19 lean_s23
have lean_s25 : (Eq let319 let318) := by timed congr lean_s12 lean_s24
have lean_s26 : let318 := by timed eqResolve lean_s4 lean_s25
have lean_s27 : (Or let12 (Or let57 (Or let1 let308))) := by permutateOr lean_s26, [0, 3, 1, 2], (- 1)
have lean_s28 : let165 := by timed rfl
have lean_s29 : let46 := by timed rfl
let lean_s30 := by timed flipCongrArg lean_s29 [Eq]
have lean_s31 : let46 := by timed rfl
have lean_s32 : let165 := by timed congr lean_s30 lean_s31
let lean_s33 := by timed Eq.trans lean_s28 lean_s32
have lean_s34 : let47 := by timed Eq.trans lean_s33 lean_r18
have lean_s35 : let46 := by timed trueElim lean_s34
have lean_s36 : let307 := by timed equivElim2 lean_s35
have lean_s37 : (Or let316 (Or let14 let301)) := by timed cnfAndNeg [let13, let55]
have lean_s38 : let315 :=
  (scope (fun lean_a74 : let13 =>
    (scope (fun lean_a75 : let55 =>
      have lean_s38 : let56 := by timed Eq.symm lean_a75
      have lean_s39 : let55 := by timed Eq.symm lean_s38
      have lean_s40 : let306 := by timed flipCongrArg lean_s39 [Extractx5f1x5f7x5f7x5f8]
      have lean_s41 : let271 := by timed falseIntro lean_a74
      have lean_s42 : let317 := by timed Eq.trans lean_s40 lean_s41
      have lean_s43 : let2 := by timed falseElim lean_s42
      show let2 from lean_s43
  ))))
have lean_s39 : (Implies let316 let2) := by liftOrNToImp lean_s38, 2
have lean_s40 : (Or (Not let316) let2) := by timed impliesElim lean_s39
have lean_s41 : let315 := by R1 lean_s37, lean_s40, let316, [(- 1), (- 1)]
have lean_s42 : let266 := by timed rfl
have lean_s43 : let35 := by timed rfl
let lean_s44 := by timed flipCongrArg lean_s43 [Eq]
have lean_s45 : let277 := by timed congr lean_s44 lean_r4
have lean_s46 : let276 := by timed Eq.trans lean_s45 lean_r29
have lean_s47 : let275 := by timed Eq.trans lean_r3 lean_s46
have lean_s48 : let16 := by timed trueElim lean_s47
let lean_s49 := by timed congr lean_s42 lean_s48
have lean_s50 : (Eq let301 let301) := by timed rfl
let lean_s51 := by timed congr lean_s42 lean_s50
have lean_s52 : (Eq let2 let2) := by timed rfl
let lean_s53 := by timed congr lean_s51 lean_s52
have lean_s54 : (Eq let315 let314) := by timed congr lean_s49 lean_s53
have lean_s55 : let314 := by timed eqResolve lean_s41 lean_s54
have lean_s56 : (Or let12 (Or let2 let301)) := by permutateOr lean_s55, [0, 2, 1], (- 1)
have lean_s57 : let35 := by timed rfl
have lean_s58 : let242 := by timed rfl
have lean_s59 : let33 := by timed rfl
let lean_s60 := by timed flipCongrArg lean_s59 [Eq]
have lean_s61 : let33 := by timed rfl
have lean_s62 : let242 := by timed congr lean_s60 lean_s61
let lean_s63 := by timed Eq.trans lean_s58 lean_s62
have lean_s64 : let34 := by timed Eq.trans lean_s63 lean_r12
have lean_s65 : let33 := by timed trueElim lean_s64
have lean_s66 : let35 := by timed flipCongrArg lean_s65 [Extractx5f1x5f7x5f7x5f8]
let lean_s67 := by timed flipCongrArg lean_s66 [Eq]
have lean_s68 : let35 := by timed rfl
have lean_s69 : let36 := by timed congr lean_s67 lean_s68
have lean_s70 : let36 := by timed Eq.trans lean_s69 lean_r13
have lean_s71 : let36 := by timed Eq.trans lean_r13 lean_s70
have lean_s72 : let35 := by timed eqResolve lean_s57 lean_s71
have lean_s73 : let258 := by timed equivElim2 lean_s72
have lean_s74 : (Or let311 (Or let13 (Or let2 let308))) := by timed cnfAndNeg [let12, let1, let52]
have lean_s75 : let310 :=
  (scope (fun lean_a75 : let12 =>
    (scope (fun lean_a76 : let1 =>
      (scope (fun lean_a77 : let52 =>
        have lean_s75 : let53 := by timed Eq.symm lean_a77
        have lean_s76 : let52 := by timed Eq.symm lean_s75
        have lean_s77 : let305 := by timed trueIntro lean_a76
        have lean_s78 : let254 := by timed trueIntro lean_a75
        have lean_s79 : let262 := by timed Eq.symm lean_s78
        have lean_s80 : let306 := by timed Eq.trans lean_s77 lean_s79
        let lean_s81 := by timed flipCongrArg lean_s80 [Concatx5f32x5f1x5f31]
        have lean_s82 : let163 := by timed rfl
        have lean_s83 : let312 := by timed congr lean_s81 lean_s82
        have lean_s84 : let57 := by timed Eq.trans lean_s76 lean_s83
        show let57 from lean_s84
  ))))))
have lean_s76 : (Implies let311 let57) := by liftOrNToImp lean_s75, 3
have lean_s77 : (Or (Not let311) let57) := by timed impliesElim lean_s76
have lean_s78 : let310 := by R1 lean_s74, lean_s77, let311, [(- 1), (- 1)]
have lean_s79 : (Or let57 (Or let308 (Or let13 let2))) := by permutateOr lean_s78, [3, 2, 0, 1], (- 1)
have lean_s80 : (Or yx24prop0x24nextx5fop let237) := by timed equivElim2 lean_a66
have lean_s81 : let159 := by timed eqResolve lean_a70 lean_a69
have lean_s82 : yx2467 := by andElim lean_s81, 3
have lean_s83 : let156 := by timed eqResolve lean_s82 lean_a67
have lean_s84 : (Or yx24propx24next let238) := by timed equivElim2 lean_s83
have lean_s85 : (Or let239 let97) := by timed equivElim1 lean_a68
have lean_s86 : let159 := by timed eqResolve lean_a70 lean_a69
have lean_s87 : yx2454 := by andElim lean_s86, 4
have lean_s88 : let239 := by R2 lean_s85, lean_s87, yx2454, [(- 1), 0]
have lean_s89 : let238 := by R1 lean_s84, lean_s88, yx24propx24next, [(- 1), 0]
have lean_s90 : let237 := by R1 lean_s80, lean_s89, yx24prop0x24nextx5fop, [(- 1), 0]
have lean_s91 : let234 := by notOrElim lean_s90, 0
have lean_s92 : let159 := by timed eqResolve lean_a70 lean_a69
have lean_s93 : yx2429 := by andElim lean_s92, 2
have lean_s94 : let141 := by timed eqResolve lean_s93 lean_a59
have lean_s95 : yx2428 := by andElim lean_s94, 3
have lean_s96 : (Eq yx2428 yx2428) := by timed rfl
let lean_s97 := by timed flipCongrArg lean_s96 [Eq]
have lean_s98 : (Eq yx24RMINx24next yx24RMINx24next) := by timed rfl
let lean_s99 := by timed flipCongrArg lean_s98 [Eq]
have lean_s100 : let221 := by timed rfl
let lean_s101 := by timed flipCongrArg lean_s100 [Eq]
have lean_s102 : (Eq yx2424 yx2424) := by timed rfl
let lean_s103 := by timed flipCongrArg lean_s102 [Eq]
have lean_s104 : (Eq yx24RMAXx24next yx24RMAXx24next) := by timed rfl
let lean_s105 := by timed flipCongrArg lean_s104 [Eq]
have lean_s106 : let217 := by timed rfl
let lean_s107 := by timed flipCongrArg lean_s106 [Eq]
have lean_s108 : (Eq yx2413 yx2413) := by timed rfl
let lean_s109 := by timed flipCongrArg lean_s108 [Eq]
have lean_s110 : let215 := by timed rfl
let lean_s111 := by timed flipCongrArg lean_s110 [Eq]
have lean_s112 : (Eq yx2447 yx2447) := by timed rfl
let lean_s113 := by timed flipCongrArg lean_s112 [Eq]
have lean_s114 : let214 := by timed rfl
let lean_s115 := by timed flipCongrArg lean_s114 [Eq]
have lean_s116 : (Eq yx24prop0x5fop yx24prop0x5fop) := by timed rfl
let lean_s117 := by timed flipCongrArg lean_s116 [Eq]
have lean_s118 : (Eq yx2444 yx2444) := by timed rfl
let lean_s119 := by timed flipCongrArg lean_s118 [Eq]
have lean_s120 : let212 := by timed rfl
let lean_s121 := by timed flipCongrArg lean_s120 [Eq]
have lean_s122 : (Eq yx24wx244x5fop yx24wx244x5fop) := by timed rfl
let lean_s123 := by timed flipCongrArg lean_s122 [Eq]
have lean_s124 : let213 := by timed rfl
let lean_s125 := by timed flipCongrArg lean_s124 [Eq]
have lean_s126 : (Eq let116 let210) := by timed flipCongrArg lean_r20 [Not]
have lean_s127 : (Eq let117 let211) := by timed congr lean_s125 lean_s126
have lean_s128 : let211 := by timed eqResolve lean_a45 lean_s127
have lean_s129 : let213 := by timed rfl
let lean_s130 := by timed flipCongrArg lean_s129 [Eq]
have lean_s131 : let212 := by timed rfl
let lean_s132 := by timed flipCongrArg lean_s131 [Eq]
have lean_s133 : (Eq yx24wx242x5fop yx24wx242x5fop) := by timed rfl
let lean_s134 := by timed flipCongrArg lean_s133 [Eq]
let lean_s135 := by timed flipCongrArg lean_a43 [Concatx5f32x5f1x5f31]
have lean_s136 : let163 := by timed rfl
have lean_s137 : (Eq let114 let58) := by timed congr lean_s135 lean_s136
have lean_s138 : (Eq let115 let169) := by timed congr lean_s134 lean_s137
have lean_s139 : let169 := by timed eqResolve lean_a44 lean_s138
have lean_s140 : let170 := by timed And.intro lean_s139 lean_a43
have lean_s141 : let169 := by andElim lean_s140, 0
have lean_s142 : (Eq let49 let105) := by timed congr lean_s132 lean_s141
have lean_s143 : (Eq let210 let106) := by timed flipCongrArg lean_s142 [Not]
have lean_s144 : (Eq let211 let171) := by timed congr lean_s130 lean_s143
have lean_s145 : let171 := by timed eqResolve lean_s128 lean_s144
let lean_s146 := by timed And.intro lean_s139 lean_a43
let lean_s147 := by timed And.intro lean_s145 lean_s146
have lean_s148 : let172 := by timed And.intro lean_a46 lean_s147
have lean_s149 : let118 := by andElim lean_s148, 0
let lean_s150 := by timed flipCongrArg lean_s149 [Concatx5f32x5f1x5f31]
have lean_s151 : let163 := by timed rfl
have lean_s152 : (Eq let119 let51) := by timed congr lean_s150 lean_s151
have lean_s153 : (Eq let120 let173) := by timed congr lean_s123 lean_s152
have lean_s154 : let173 := by timed eqResolve lean_a47 lean_s153
let lean_s155 := by timed And.intro lean_s139 lean_a43
let lean_s156 := by timed And.intro lean_s145 lean_s155
let lean_s157 := by timed And.intro lean_a46 lean_s156
have lean_s158 : let174 := by timed And.intro lean_s154 lean_s157
have lean_s159 : let173 := by andElim lean_s158, 0
have lean_s160 : (Eq let121 let104) := by timed congr lean_s121 lean_s159
have lean_s161 : (Eq let122 let175) := by timed congr lean_s119 lean_s160
have lean_s162 : let175 := by timed eqResolve lean_a48 lean_s161
let lean_s163 := by timed And.intro lean_s139 lean_a43
let lean_s164 := by timed And.intro lean_s145 lean_s163
let lean_s165 := by timed And.intro lean_a46 lean_s164
let lean_s166 := by timed And.intro lean_s154 lean_s165
have lean_s167 : let176 := by timed And.intro lean_s162 lean_s166
have lean_s168 : let171 := by andElim lean_s167, 3
let lean_s169 := by timed flipCongrArg lean_s168 [Or]
have lean_s170 : let175 := by andElim lean_s167, 0
have lean_s171 : (Eq let123 let107) := by timed congr lean_s169 lean_s170
have lean_s172 : (Eq let124 let177) := by timed congr lean_s117 lean_s171
have lean_s173 : let177 := by timed eqResolve lean_a49 lean_s172
let lean_s174 := by timed And.intro lean_s139 lean_a43
let lean_s175 := by timed And.intro lean_s145 lean_s174
let lean_s176 := by timed And.intro lean_a46 lean_s175
let lean_s177 := by timed And.intro lean_s154 lean_s176
let lean_s178 := by timed And.intro lean_s162 lean_s177
have lean_s179 : let178 := by timed And.intro lean_s173 lean_s178
have lean_s180 : let177 := by andElim lean_s179, 0
have lean_s181 : (Eq let125 let108) := by timed congr lean_s115 lean_s180
have lean_s182 : (Eq let126 let179) := by timed congr lean_s113 lean_s181
have lean_s183 : let179 := by timed eqResolve lean_a50 lean_s182
let lean_s184 := by timed And.intro lean_s139 lean_a43
let lean_s185 := by timed And.intro lean_s145 lean_s184
let lean_s186 := by timed And.intro lean_a46 lean_s185
let lean_s187 := by timed And.intro lean_s154 lean_s186
let lean_s188 := by timed And.intro lean_s162 lean_s187
let lean_s189 := by timed And.intro lean_s173 lean_s188
let lean_s190 := by timed And.intro lean_s183 lean_s189
have lean_s191 : let180 := by timed And.intro lean_a51 lean_s190
have lean_s192 : let128 := by andElim lean_s191, 0
have lean_s193 : (Eq let129 let181) := by timed congr lean_s111 lean_s192
have lean_s194 : (Eq let130 let182) := by timed congr lean_s109 lean_s193
have lean_s195 : let182 := by timed eqResolve lean_a52 lean_s194
let lean_s196 := by timed And.intro lean_s139 lean_a43
let lean_s197 := by timed And.intro lean_s145 lean_s196
let lean_s198 := by timed And.intro lean_a46 lean_s197
let lean_s199 := by timed And.intro lean_s154 lean_s198
let lean_s200 := by timed And.intro lean_s162 lean_s199
let lean_s201 := by timed And.intro lean_s173 lean_s200
let lean_s202 := by timed And.intro lean_s183 lean_s201
let lean_s203 := by timed And.intro lean_a51 lean_s202
let lean_s204 := by timed And.intro lean_s195 lean_s203
let lean_s205 := by timed And.intro lean_a53 lean_s204
have lean_s206 : let183 := by timed And.intro lean_a54 lean_s205
have lean_s207 : let131 := by andElim lean_s206, 1
have lean_s208 : let219 := by timed rfl
have lean_s209 : let218 := by timed rfl
have lean_s210 : (Eq let133 let78) := by timed congrIte lean_s207 lean_s208 lean_s209
have lean_s211 : (Eq let134 let216) := by timed congr lean_s107 lean_s210
have lean_s212 : let217 := by timed rfl
let lean_s213 := by timed flipCongrArg lean_s212 [Eq]
have lean_s214 : (Eq let216 let184) := by timed congr lean_s213 lean_r35
have lean_s215 : (Eq let134 let184) := by timed Eq.trans lean_s211 lean_s214
have lean_s216 : let184 := by timed eqResolve lean_a55 lean_s215
let lean_s217 := by timed And.intro lean_s139 lean_a43
let lean_s218 := by timed And.intro lean_s145 lean_s217
let lean_s219 := by timed And.intro lean_a46 lean_s218
let lean_s220 := by timed And.intro lean_s154 lean_s219
let lean_s221 := by timed And.intro lean_s162 lean_s220
let lean_s222 := by timed And.intro lean_s173 lean_s221
let lean_s223 := by timed And.intro lean_s183 lean_s222
let lean_s224 := by timed And.intro lean_a51 lean_s223
let lean_s225 := by timed And.intro lean_s195 lean_s224
let lean_s226 := by timed And.intro lean_a53 lean_s225
let lean_s227 := by timed And.intro lean_a54 lean_s226
have lean_s228 : let185 := by timed And.intro lean_s216 lean_s227
have lean_s229 : let184 := by andElim lean_s228, 0
have lean_s230 : (Eq let135 let101) := by timed congr lean_s105 lean_s229
have lean_s231 : (Eq let136 let186) := by timed congr lean_s103 lean_s230
have lean_s232 : let186 := by timed eqResolve lean_a56 lean_s231
let lean_s233 := by timed And.intro lean_s139 lean_a43
let lean_s234 := by timed And.intro lean_s145 lean_s233
let lean_s235 := by timed And.intro lean_a46 lean_s234
let lean_s236 := by timed And.intro lean_s154 lean_s235
let lean_s237 := by timed And.intro lean_s162 lean_s236
let lean_s238 := by timed And.intro lean_s173 lean_s237
let lean_s239 := by timed And.intro lean_s183 lean_s238
let lean_s240 := by timed And.intro lean_a51 lean_s239
let lean_s241 := by timed And.intro lean_s195 lean_s240
let lean_s242 := by timed And.intro lean_a53 lean_s241
let lean_s243 := by timed And.intro lean_a54 lean_s242
let lean_s244 := by timed And.intro lean_s216 lean_s243
have lean_s245 : let187 := by timed And.intro lean_s232 lean_s244
have lean_s246 : let131 := by andElim lean_s245, 3
have lean_s247 : let219 := by timed rfl
have lean_s248 : let222 := by timed rfl
have lean_s249 : (Eq let137 let41) := by timed congrIte lean_s246 lean_s247 lean_s248
have lean_s250 : (Eq let138 let220) := by timed congr lean_s101 lean_s249
have lean_s251 : let221 := by timed rfl
let lean_s252 := by timed flipCongrArg lean_s251 [Eq]
have lean_s253 : (Eq let220 let188) := by timed congr lean_s252 lean_r16
have lean_s254 : (Eq let138 let188) := by timed Eq.trans lean_s250 lean_s253
have lean_s255 : let188 := by timed eqResolve lean_a57 lean_s254
let lean_s256 := by timed And.intro lean_s139 lean_a43
let lean_s257 := by timed And.intro lean_s145 lean_s256
let lean_s258 := by timed And.intro lean_a46 lean_s257
let lean_s259 := by timed And.intro lean_s154 lean_s258
let lean_s260 := by timed And.intro lean_s162 lean_s259
let lean_s261 := by timed And.intro lean_s173 lean_s260
let lean_s262 := by timed And.intro lean_s183 lean_s261
let lean_s263 := by timed And.intro lean_a51 lean_s262
let lean_s264 := by timed And.intro lean_s195 lean_s263
let lean_s265 := by timed And.intro lean_a53 lean_s264
let lean_s266 := by timed And.intro lean_a54 lean_s265
let lean_s267 := by timed And.intro lean_s216 lean_s266
let lean_s268 := by timed And.intro lean_s232 lean_s267
have lean_s269 : let189 := by timed And.intro lean_s255 lean_s268
have lean_s270 : let188 := by andElim lean_s269, 0
have lean_s271 : (Eq let139 let100) := by timed congr lean_s99 lean_s270
have lean_s272 : (Eq let140 let190) := by timed congr lean_s97 lean_s271
have lean_s273 : let190 := by timed eqResolve lean_a58 lean_s272
have lean_s274 : let100 := by timed eqResolve lean_s95 lean_s273
have lean_s275 : let141 := by timed eqResolve lean_s93 lean_a59
have lean_s276 : yx2424 := by andElim lean_s275, 2
have lean_s277 : let101 := by timed eqResolve lean_s276 lean_s232
have lean_s278 : let141 := by timed eqResolve lean_s93 lean_a59
have lean_s279 : yx2419 := by andElim lean_s278, 1
have lean_s280 : let102 := by timed eqResolve lean_s279 lean_a54
have lean_s281 : let141 := by timed eqResolve lean_s93 lean_a59
have lean_s282 : yx2413 := by andElim lean_s281, 0
have lean_s283 : yx2454 := by andElim lean_s86, 4
have lean_s284 : (Eq yx2454 let30) := by timed Eq.symm lean_r10
have lean_s285 : let30 := by timed eqResolve lean_s283 lean_s284
have lean_s286 : let159 := by timed eqResolve lean_a70 lean_a69
have lean_s287 : yx24prop := by andElim lean_s286, 0
have lean_s288 : (Eq yx24prop let61) := by timed Eq.symm lean_r25
have lean_s289 : let61 := by timed eqResolve lean_s287 lean_s288
have lean_s290 : let233 := by timed rfl
let lean_s291 := by timed flipCongrArg lean_s290 [Eq]
have lean_s292 : let168 := by timed rfl
have lean_s293 : let214 := by timed rfl
let lean_s294 := by timed congr lean_s292 lean_s293
have lean_s295 : (Eq yx2467 yx2467) := by timed rfl
let lean_s296 := by timed flipCongrArg lean_s295 [Eq]
have lean_s297 : (Eq yx24propx24next yx24propx24next) := by timed rfl
let lean_s298 := by timed flipCongrArg lean_s297 [Eq]
have lean_s299 : (Eq yx24prop0x24nextx5fop yx24prop0x24nextx5fop) := by timed rfl
let lean_s300 := by timed flipCongrArg lean_s299 [Eq]
have lean_s301 : (Eq yx2464 yx2464) := by timed rfl
let lean_s302 := by timed flipCongrArg lean_s301 [Eq]
have lean_s303 : let212 := by timed rfl
let lean_s304 := by timed flipCongrArg lean_s303 [Eq]
have lean_s305 : (Eq yx24wx244x24nextx5fop yx24wx244x24nextx5fop) := by timed rfl
let lean_s306 := by timed flipCongrArg lean_s305 [Eq]
have lean_s307 : (Eq yx2459 yx2459) := by timed rfl
let lean_s308 := by timed flipCongrArg lean_s307 [Eq]
have lean_s309 : let212 := by timed rfl
let lean_s310 := by timed flipCongrArg lean_s309 [Eq]
have lean_s311 : (Eq yx24wx242x24nextx5fop yx24wx242x24nextx5fop) := by timed rfl
let lean_s312 := by timed flipCongrArg lean_s311 [Eq]
have lean_s313 : let226 := by timed rfl
let lean_s314 := by timed flipCongrArg lean_s313 [Eq]
have lean_s315 : let168 := by timed rfl
let lean_s316 := by timed And.intro lean_s139 lean_a43
let lean_s317 := by timed And.intro lean_s145 lean_s316
let lean_s318 := by timed And.intro lean_a46 lean_s317
let lean_s319 := by timed And.intro lean_s154 lean_s318
let lean_s320 := by timed And.intro lean_s162 lean_s319
let lean_s321 := by timed And.intro lean_s173 lean_s320
let lean_s322 := by timed And.intro lean_s183 lean_s321
let lean_s323 := by timed And.intro lean_a51 lean_s322
let lean_s324 := by timed And.intro lean_s195 lean_s323
let lean_s325 := by timed And.intro lean_a53 lean_s324
let lean_s326 := by timed And.intro lean_a54 lean_s325
let lean_s327 := by timed And.intro lean_s216 lean_s326
let lean_s328 := by timed And.intro lean_s232 lean_s327
let lean_s329 := by timed And.intro lean_s255 lean_s328
have lean_s330 : let191 := by timed And.intro lean_s273 lean_s329
have lean_s331 : let182 := by andElim lean_s330, 6
have lean_s332 : let215 := by timed rfl
let lean_s333 := by timed flipCongrArg lean_s332 [Eq]
have lean_s334 : let131 := by andElim lean_s330, 5
have lean_s335 : let231 := by timed rfl
have lean_s336 : let230 := by timed rfl
have lean_s337 : let229 := by timed congrIte lean_s334 lean_s335 lean_s336
have lean_s338 : let228 := by timed congr lean_s333 lean_s337
have lean_s339 : let227 := by timed Eq.trans lean_s331 lean_s338
let lean_s340 := by timed congr lean_s315 lean_s339
have lean_s341 : let132 := by andElim lean_s330, 4
let lean_s342 := by timed congr lean_s315 lean_s341
have lean_s343 : let186 := by andElim lean_s330, 2
let lean_s344 := by timed congr lean_s315 lean_s343
have lean_s345 : let190 := by andElim lean_s330, 0
let lean_s346 := by timed congr lean_s344 lean_s345
let lean_s347 := by timed congr lean_s342 lean_s346
have lean_s348 : (Eq let141 let224) := by timed congr lean_s340 lean_s347
have lean_s349 : (Eq let142 let225) := by timed congr lean_s314 lean_s348
have lean_s350 : let226 := by timed rfl
let lean_s351 := by timed flipCongrArg lean_s350 [Eq]
have lean_s352 : let168 := by timed rfl
have lean_s353 : let215 := by timed rfl
let lean_s354 := by timed flipCongrArg lean_s353 [Eq]
have lean_s355 : (Eq let223 let103) := by timed congr lean_s354 lean_r40
let lean_s356 := by timed congr lean_s352 lean_s355
have lean_s357 : (Eq let102 let102) := by timed rfl
let lean_s358 := by timed congr lean_s352 lean_s357
have lean_s359 : (Eq let101 let101) := by timed rfl
let lean_s360 := by timed congr lean_s352 lean_s359
have lean_s361 : (Eq let100 let100) := by timed rfl
let lean_s362 := by timed congr lean_s360 lean_s361
let lean_s363 := by timed congr lean_s358 lean_s362
have lean_s364 : (Eq let224 let111) := by timed congr lean_s356 lean_s363
have lean_s365 : (Eq let225 let192) := by timed congr lean_s351 lean_s364
have lean_s366 : (Eq let142 let192) := by timed Eq.trans lean_s349 lean_s365
have lean_s367 : let192 := by timed eqResolve lean_a59 lean_s366
let lean_s368 := by timed And.intro lean_s139 lean_a43
let lean_s369 := by timed And.intro lean_s145 lean_s368
let lean_s370 := by timed And.intro lean_a46 lean_s369
let lean_s371 := by timed And.intro lean_s154 lean_s370
let lean_s372 := by timed And.intro lean_s162 lean_s371
let lean_s373 := by timed And.intro lean_s173 lean_s372
let lean_s374 := by timed And.intro lean_s183 lean_s373
let lean_s375 := by timed And.intro lean_a51 lean_s374
let lean_s376 := by timed And.intro lean_s195 lean_s375
let lean_s377 := by timed And.intro lean_a53 lean_s376
let lean_s378 := by timed And.intro lean_a54 lean_s377
let lean_s379 := by timed And.intro lean_s216 lean_s378
let lean_s380 := by timed And.intro lean_s232 lean_s379
let lean_s381 := by timed And.intro lean_s255 lean_s380
let lean_s382 := by timed And.intro lean_s273 lean_s381
let lean_s383 := by timed And.intro lean_s367 lean_s382
have lean_s384 : let193 := by timed And.intro lean_a60 lean_s383
have lean_s385 : let143 := by andElim lean_s384, 0
let lean_s386 := by timed flipCongrArg lean_s385 [Concatx5f32x5f1x5f31]
have lean_s387 : let163 := by timed rfl
have lean_s388 : (Eq let144 let93) := by timed congr lean_s386 lean_s387
have lean_s389 : (Eq let145 let194) := by timed congr lean_s312 lean_s388
have lean_s390 : let194 := by timed eqResolve lean_a61 lean_s389
let lean_s391 := by timed And.intro lean_s139 lean_a43
let lean_s392 := by timed And.intro lean_s145 lean_s391
let lean_s393 := by timed And.intro lean_a46 lean_s392
let lean_s394 := by timed And.intro lean_s154 lean_s393
let lean_s395 := by timed And.intro lean_s162 lean_s394
let lean_s396 := by timed And.intro lean_s173 lean_s395
let lean_s397 := by timed And.intro lean_s183 lean_s396
let lean_s398 := by timed And.intro lean_a51 lean_s397
let lean_s399 := by timed And.intro lean_s195 lean_s398
let lean_s400 := by timed And.intro lean_a53 lean_s399
let lean_s401 := by timed And.intro lean_a54 lean_s400
let lean_s402 := by timed And.intro lean_s216 lean_s401
let lean_s403 := by timed And.intro lean_s232 lean_s402
let lean_s404 := by timed And.intro lean_s255 lean_s403
let lean_s405 := by timed And.intro lean_s273 lean_s404
let lean_s406 := by timed And.intro lean_s367 lean_s405
let lean_s407 := by timed And.intro lean_a60 lean_s406
have lean_s408 : let195 := by timed And.intro lean_s390 lean_s407
have lean_s409 : let194 := by andElim lean_s408, 0
have lean_s410 : (Eq let146 let94) := by timed congr lean_s310 lean_s409
have lean_s411 : (Eq let147 let95) := by timed flipCongrArg lean_s410 [Not]
have lean_s412 : (Eq let148 let196) := by timed congr lean_s308 lean_s411
have lean_s413 : let196 := by timed eqResolve lean_a62 lean_s412
let lean_s414 := by timed And.intro lean_s139 lean_a43
let lean_s415 := by timed And.intro lean_s145 lean_s414
let lean_s416 := by timed And.intro lean_a46 lean_s415
let lean_s417 := by timed And.intro lean_s154 lean_s416
let lean_s418 := by timed And.intro lean_s162 lean_s417
let lean_s419 := by timed And.intro lean_s173 lean_s418
let lean_s420 := by timed And.intro lean_s183 lean_s419
let lean_s421 := by timed And.intro lean_a51 lean_s420
let lean_s422 := by timed And.intro lean_s195 lean_s421
let lean_s423 := by timed And.intro lean_a53 lean_s422
let lean_s424 := by timed And.intro lean_a54 lean_s423
let lean_s425 := by timed And.intro lean_s216 lean_s424
let lean_s426 := by timed And.intro lean_s232 lean_s425
let lean_s427 := by timed And.intro lean_s255 lean_s426
let lean_s428 := by timed And.intro lean_s273 lean_s427
let lean_s429 := by timed And.intro lean_s367 lean_s428
let lean_s430 := by timed And.intro lean_a60 lean_s429
let lean_s431 := by timed And.intro lean_s390 lean_s430
let lean_s432 := by timed And.intro lean_s413 lean_s431
have lean_s433 : let197 := by timed And.intro lean_a63 lean_s432
have lean_s434 : let149 := by andElim lean_s433, 0
let lean_s435 := by timed flipCongrArg lean_s434 [Concatx5f32x5f1x5f31]
have lean_s436 : let163 := by timed rfl
have lean_s437 : (Eq let150 let90) := by timed congr lean_s435 lean_s436
have lean_s438 : (Eq let151 let198) := by timed congr lean_s306 lean_s437
have lean_s439 : let198 := by timed eqResolve lean_a64 lean_s438
let lean_s440 := by timed And.intro lean_s139 lean_a43
let lean_s441 := by timed And.intro lean_s145 lean_s440
let lean_s442 := by timed And.intro lean_a46 lean_s441
let lean_s443 := by timed And.intro lean_s154 lean_s442
let lean_s444 := by timed And.intro lean_s162 lean_s443
let lean_s445 := by timed And.intro lean_s173 lean_s444
let lean_s446 := by timed And.intro lean_s183 lean_s445
let lean_s447 := by timed And.intro lean_a51 lean_s446
let lean_s448 := by timed And.intro lean_s195 lean_s447
let lean_s449 := by timed And.intro lean_a53 lean_s448
let lean_s450 := by timed And.intro lean_a54 lean_s449
let lean_s451 := by timed And.intro lean_s216 lean_s450
let lean_s452 := by timed And.intro lean_s232 lean_s451
let lean_s453 := by timed And.intro lean_s255 lean_s452
let lean_s454 := by timed And.intro lean_s273 lean_s453
let lean_s455 := by timed And.intro lean_s367 lean_s454
let lean_s456 := by timed And.intro lean_a60 lean_s455
let lean_s457 := by timed And.intro lean_s390 lean_s456
let lean_s458 := by timed And.intro lean_s413 lean_s457
let lean_s459 := by timed And.intro lean_a63 lean_s458
have lean_s460 : let199 := by timed And.intro lean_s439 lean_s459
have lean_s461 : let198 := by andElim lean_s460, 0
have lean_s462 : (Eq let152 let91) := by timed congr lean_s304 lean_s461
have lean_s463 : (Eq let153 let200) := by timed congr lean_s302 lean_s462
have lean_s464 : let200 := by timed eqResolve lean_a65 lean_s463
let lean_s465 := by timed And.intro lean_s139 lean_a43
let lean_s466 := by timed And.intro lean_s145 lean_s465
let lean_s467 := by timed And.intro lean_a46 lean_s466
let lean_s468 := by timed And.intro lean_s154 lean_s467
let lean_s469 := by timed And.intro lean_s162 lean_s468
let lean_s470 := by timed And.intro lean_s173 lean_s469
let lean_s471 := by timed And.intro lean_s183 lean_s470
let lean_s472 := by timed And.intro lean_a51 lean_s471
let lean_s473 := by timed And.intro lean_s195 lean_s472
let lean_s474 := by timed And.intro lean_a53 lean_s473
let lean_s475 := by timed And.intro lean_a54 lean_s474
let lean_s476 := by timed And.intro lean_s216 lean_s475
let lean_s477 := by timed And.intro lean_s232 lean_s476
let lean_s478 := by timed And.intro lean_s255 lean_s477
let lean_s479 := by timed And.intro lean_s273 lean_s478
let lean_s480 := by timed And.intro lean_s367 lean_s479
let lean_s481 := by timed And.intro lean_a60 lean_s480
let lean_s482 := by timed And.intro lean_s390 lean_s481
let lean_s483 := by timed And.intro lean_s413 lean_s482
let lean_s484 := by timed And.intro lean_a63 lean_s483
let lean_s485 := by timed And.intro lean_s439 lean_s484
have lean_s486 : let201 := by timed And.intro lean_s464 lean_s485
have lean_s487 : let196 := by andElim lean_s486, 3
let lean_s488 := by timed flipCongrArg lean_s487 [Or]
have lean_s489 : let200 := by andElim lean_s486, 0
have lean_s490 : (Eq let154 let96) := by timed congr lean_s488 lean_s489
have lean_s491 : (Eq let155 let202) := by timed congr lean_s300 lean_s490
have lean_s492 : let202 := by timed eqResolve lean_a66 lean_s491
let lean_s493 := by timed And.intro lean_s139 lean_a43
let lean_s494 := by timed And.intro lean_s145 lean_s493
let lean_s495 := by timed And.intro lean_a46 lean_s494
let lean_s496 := by timed And.intro lean_s154 lean_s495
let lean_s497 := by timed And.intro lean_s162 lean_s496
let lean_s498 := by timed And.intro lean_s173 lean_s497
let lean_s499 := by timed And.intro lean_s183 lean_s498
let lean_s500 := by timed And.intro lean_a51 lean_s499
let lean_s501 := by timed And.intro lean_s195 lean_s500
let lean_s502 := by timed And.intro lean_a53 lean_s501
let lean_s503 := by timed And.intro lean_a54 lean_s502
let lean_s504 := by timed And.intro lean_s216 lean_s503
let lean_s505 := by timed And.intro lean_s232 lean_s504
let lean_s506 := by timed And.intro lean_s255 lean_s505
let lean_s507 := by timed And.intro lean_s273 lean_s506
let lean_s508 := by timed And.intro lean_s367 lean_s507
let lean_s509 := by timed And.intro lean_a60 lean_s508
let lean_s510 := by timed And.intro lean_s390 lean_s509
let lean_s511 := by timed And.intro lean_s413 lean_s510
let lean_s512 := by timed And.intro lean_a63 lean_s511
let lean_s513 := by timed And.intro lean_s439 lean_s512
let lean_s514 := by timed And.intro lean_s464 lean_s513
have lean_s515 : let203 := by timed And.intro lean_s492 lean_s514
have lean_s516 : let202 := by andElim lean_s515, 0
have lean_s517 : (Eq let156 let204) := by timed congr lean_s298 lean_s516
have lean_s518 : (Eq let157 let205) := by timed congr lean_s296 lean_s517
have lean_s519 : let205 := by timed eqResolve lean_a67 lean_s518
let lean_s520 := by timed And.intro lean_s139 lean_a43
let lean_s521 := by timed And.intro lean_s145 lean_s520
let lean_s522 := by timed And.intro lean_a46 lean_s521
let lean_s523 := by timed And.intro lean_s154 lean_s522
let lean_s524 := by timed And.intro lean_s162 lean_s523
let lean_s525 := by timed And.intro lean_s173 lean_s524
let lean_s526 := by timed And.intro lean_s183 lean_s525
let lean_s527 := by timed And.intro lean_a51 lean_s526
let lean_s528 := by timed And.intro lean_s195 lean_s527
let lean_s529 := by timed And.intro lean_a53 lean_s528
let lean_s530 := by timed And.intro lean_a54 lean_s529
let lean_s531 := by timed And.intro lean_s216 lean_s530
let lean_s532 := by timed And.intro lean_s232 lean_s531
let lean_s533 := by timed And.intro lean_s255 lean_s532
let lean_s534 := by timed And.intro lean_s273 lean_s533
let lean_s535 := by timed And.intro lean_s367 lean_s534
let lean_s536 := by timed And.intro lean_a60 lean_s535
let lean_s537 := by timed And.intro lean_s390 lean_s536
let lean_s538 := by timed And.intro lean_s413 lean_s537
let lean_s539 := by timed And.intro lean_a63 lean_s538
let lean_s540 := by timed And.intro lean_s439 lean_s539
let lean_s541 := by timed And.intro lean_s464 lean_s540
let lean_s542 := by timed And.intro lean_s492 lean_s541
let lean_s543 := by timed And.intro lean_s519 lean_s542
have lean_s544 : let206 := by timed And.intro lean_a68 lean_s543
have lean_s545 : let179 := by andElim lean_s544, 18
let lean_s546 := by timed congr lean_s292 lean_s545
have lean_s547 : let192 := by andElim lean_s544, 9
let lean_s548 := by timed congr lean_s292 lean_s547
have lean_s549 : let205 := by andElim lean_s544, 1
have lean_s550 : let158 := by andElim lean_s544, 0
let lean_s551 := by timed flipCongrArg lean_s550 [Eq]
have lean_s552 : (Eq let96 let96) := by timed rfl
have lean_s553 : (Eq let204 let98) := by timed congr lean_s551 lean_s552
have lean_s554 : (Eq yx2467 let98) := by timed Eq.trans lean_s549 lean_s553
let lean_s555 := by timed congr lean_s292 lean_s554
have lean_s556 : (Eq yx2454 yx2454) := by timed rfl
let lean_s557 := by timed congr lean_s555 lean_s556
let lean_s558 := by timed congr lean_s548 lean_s557
let lean_s559 := by timed congr lean_s546 lean_s558
have lean_s560 : (Eq let159 let112) := by timed congr lean_s294 lean_s559
have lean_s561 : (Eq let160 let232) := by timed congr lean_s291 lean_s560
have lean_s562 : let233 := by timed rfl
let lean_s563 := by timed flipCongrArg lean_s562 [Eq]
have lean_s564 : (Eq let232 let207) := by timed congr lean_s563 lean_r42
have lean_s565 : (Eq let160 let207) := by timed Eq.trans lean_s561 lean_s564
have lean_s566 : let207 := by timed eqResolve lean_a69 lean_s565
let lean_s567 := by timed And.intro lean_s139 lean_a43
let lean_s568 := by timed And.intro lean_s145 lean_s567
let lean_s569 := by timed And.intro lean_a46 lean_s568
let lean_s570 := by timed And.intro lean_s154 lean_s569
let lean_s571 := by timed And.intro lean_s162 lean_s570
let lean_s572 := by timed And.intro lean_s173 lean_s571
let lean_s573 := by timed And.intro lean_s183 lean_s572
let lean_s574 := by timed And.intro lean_a51 lean_s573
let lean_s575 := by timed And.intro lean_s195 lean_s574
let lean_s576 := by timed And.intro lean_a53 lean_s575
let lean_s577 := by timed And.intro lean_a54 lean_s576
let lean_s578 := by timed And.intro lean_s216 lean_s577
let lean_s579 := by timed And.intro lean_s232 lean_s578
let lean_s580 := by timed And.intro lean_s255 lean_s579
let lean_s581 := by timed And.intro lean_s273 lean_s580
let lean_s582 := by timed And.intro lean_s367 lean_s581
let lean_s583 := by timed And.intro lean_a60 lean_s582
let lean_s584 := by timed And.intro lean_s390 lean_s583
let lean_s585 := by timed And.intro lean_s413 lean_s584
let lean_s586 := by timed And.intro lean_a63 lean_s585
let lean_s587 := by timed And.intro lean_s439 lean_s586
let lean_s588 := by timed And.intro lean_s464 lean_s587
let lean_s589 := by timed And.intro lean_s492 lean_s588
let lean_s590 := by timed And.intro lean_s519 lean_s589
let lean_s591 := by timed And.intro lean_a68 lean_s590
let lean_s592 := by timed And.intro lean_s566 lean_s591
let lean_s593 := by timed And.intro lean_s289 lean_s592
have lean_s594 : let208 := by timed And.intro lean_s285 lean_s593
have lean_s595 : let182 := by andElim lean_s594, 19
have lean_s596 : let215 := by timed rfl
let lean_s597 := by timed flipCongrArg lean_s596 [Eq]
have lean_s598 : let131 := by andElim lean_s594, 18
have lean_s599 : let231 := by timed rfl
have lean_s600 : let230 := by timed rfl
have lean_s601 : let229 := by timed congrIte lean_s598 lean_s599 lean_s600
have lean_s602 : let228 := by timed congr lean_s597 lean_s601
have lean_s603 : let227 := by timed Eq.trans lean_s595 lean_s602
have lean_s604 : (Eq yx2413 let103) := by timed Eq.trans lean_s603 lean_s355
have lean_s605 : let103 := by timed eqResolve lean_s282 lean_s604
let lean_s606 := by timed And.intro lean_s139 lean_a43
let lean_s607 := by timed And.intro lean_s145 lean_s606
let lean_s608 := by timed And.intro lean_a46 lean_s607
let lean_s609 := by timed And.intro lean_s154 lean_s608
let lean_s610 := by timed And.intro lean_s162 lean_s609
let lean_s611 := by timed And.intro lean_s173 lean_s610
let lean_s612 := by timed And.intro lean_s183 lean_s611
let lean_s613 := by timed And.intro lean_a51 lean_s612
let lean_s614 := by timed And.intro lean_s195 lean_s613
let lean_s615 := by timed And.intro lean_a53 lean_s614
let lean_s616 := by timed And.intro lean_a54 lean_s615
let lean_s617 := by timed And.intro lean_s216 lean_s616
let lean_s618 := by timed And.intro lean_s232 lean_s617
let lean_s619 := by timed And.intro lean_s255 lean_s618
let lean_s620 := by timed And.intro lean_s273 lean_s619
let lean_s621 := by timed And.intro lean_s367 lean_s620
let lean_s622 := by timed And.intro lean_a60 lean_s621
let lean_s623 := by timed And.intro lean_s390 lean_s622
let lean_s624 := by timed And.intro lean_s413 lean_s623
let lean_s625 := by timed And.intro lean_a63 lean_s624
let lean_s626 := by timed And.intro lean_s439 lean_s625
let lean_s627 := by timed And.intro lean_s464 lean_s626
let lean_s628 := by timed And.intro lean_s492 lean_s627
let lean_s629 := by timed And.intro lean_s519 lean_s628
let lean_s630 := by timed And.intro lean_a68 lean_s629
let lean_s631 := by timed And.intro lean_s566 lean_s630
let lean_s632 := by timed And.intro lean_s289 lean_s631
let lean_s633 := by timed And.intro lean_s285 lean_s632
let lean_s634 := by timed And.intro lean_s605 lean_s633
let lean_s635 := by timed And.intro lean_s280 lean_s634
let lean_s636 := by timed And.intro lean_s277 lean_s635
have lean_s637 : let209 := by timed And.intro lean_s274 lean_s636
have lean_s638 : let196 := by andElim lean_s637, 13
have lean_s639 : let212 := by timed rfl
let lean_s640 := by timed flipCongrArg lean_s639 [Eq]
have lean_s641 : let101 := by andElim lean_s637, 1
have lean_s642 : let236 := by timed flipCongrArg lean_s641 [Extractx5f1x5f7x5f7x5f8]
let lean_s643 := by timed flipCongrArg lean_s642 [Concatx5f32x5f1x5f31]
have lean_s644 : let163 := by timed rfl
have lean_s645 : let235 := by timed congr lean_s643 lean_s644
have lean_s646 : (Eq let94 let63) := by timed congr lean_s640 lean_s645
have lean_s647 : (Eq let95 let64) := by timed flipCongrArg lean_s646 [Not]
have lean_s648 : (Eq yx2459 let64) := by timed Eq.trans lean_s638 lean_s647
have lean_s649 : (Eq let234 let65) := by timed flipCongrArg lean_s648 [Not]
have lean_s650 : (Eq let234 let63) := by timed Eq.trans lean_s649 lean_r27
have lean_s651 : let63 := by timed eqResolve lean_s91 lean_s650
let lean_s652 := by timed And.intro lean_s139 lean_a43
let lean_s653 := by timed And.intro lean_s145 lean_s652
let lean_s654 := by timed And.intro lean_a46 lean_s653
let lean_s655 := by timed And.intro lean_s154 lean_s654
let lean_s656 := by timed And.intro lean_s162 lean_s655
let lean_s657 := by timed And.intro lean_s173 lean_s656
let lean_s658 := by timed And.intro lean_s183 lean_s657
let lean_s659 := by timed And.intro lean_a51 lean_s658
let lean_s660 := by timed And.intro lean_s195 lean_s659
let lean_s661 := by timed And.intro lean_a53 lean_s660
let lean_s662 := by timed And.intro lean_a54 lean_s661
let lean_s663 := by timed And.intro lean_s216 lean_s662
let lean_s664 := by timed And.intro lean_s232 lean_s663
let lean_s665 := by timed And.intro lean_s255 lean_s664
let lean_s666 := by timed And.intro lean_s273 lean_s665
let lean_s667 := by timed And.intro lean_s367 lean_s666
let lean_s668 := by timed And.intro lean_a60 lean_s667
let lean_s669 := by timed And.intro lean_s390 lean_s668
let lean_s670 := by timed And.intro lean_s413 lean_s669
let lean_s671 := by timed And.intro lean_a63 lean_s670
let lean_s672 := by timed And.intro lean_s439 lean_s671
let lean_s673 := by timed And.intro lean_s464 lean_s672
let lean_s674 := by timed And.intro lean_s492 lean_s673
let lean_s675 := by timed And.intro lean_s519 lean_s674
let lean_s676 := by timed And.intro lean_a68 lean_s675
let lean_s677 := by timed And.intro lean_s566 lean_s676
let lean_s678 := by timed And.intro lean_s289 lean_s677
let lean_s679 := by timed And.intro lean_s285 lean_s678
let lean_s680 := by timed And.intro lean_s605 lean_s679
let lean_s681 := by timed And.intro lean_s280 lean_s680
let lean_s682 := by timed And.intro lean_s277 lean_s681
let lean_s683 := by timed And.intro lean_s274 lean_s682
have lean_s684 : (And let63 let209) := by timed And.intro lean_s651 lean_s683
have lean_s685 : let207 := by andElim lean_s684, 7
have lean_s686 : let168 := by timed rfl
have lean_s687 : let61 := by andElim lean_s684, 6
let lean_s688 := by timed congr lean_s686 lean_s687
let lean_s689 := by timed flipCongrArg lean_s687 [Eq]
have lean_s690 : let63 := by andElim lean_s684, 0
let lean_s691 := by timed flipCongrArg lean_s690 [Eq]
have lean_s692 : let166 := by timed rfl
have lean_s693 : (Eq let105 let60) := by timed congr lean_s691 lean_s692
have lean_s694 : (Eq let106 let79) := by timed flipCongrArg lean_s693 [Not]
let lean_s695 := by timed flipCongrArg lean_s694 [Or]
let lean_s696 := by timed flipCongrArg lean_s690 [Eq]
have lean_s697 : let164 := by timed rfl
have lean_s698 : (Eq let104 let52) := by timed congr lean_s696 lean_s697
have lean_s699 : (Eq let107 let80) := by timed congr lean_s695 lean_s698
have lean_s700 : (Eq let108 let81) := by timed congr lean_s689 lean_s699
let lean_s701 := by timed congr lean_s686 lean_s700
have lean_s702 : let103 := by andElim lean_s684, 4
let lean_s703 := by timed flipCongrArg lean_s702 [Eq]
have lean_s704 : let76 := by timed rfl
have lean_s705 : (Eq let103 let76) := by timed congr lean_s703 lean_s704
let lean_s706 := by timed congr lean_s686 lean_s705
have lean_s707 : let102 := by andElim lean_s684, 3
let lean_s708 := by timed flipCongrArg lean_s707 [Eq]
have lean_s709 : let74 := by timed rfl
have lean_s710 : (Eq let102 let74) := by timed congr lean_s708 lean_s709
let lean_s711 := by timed congr lean_s686 lean_s710
have lean_s712 : let101 := by andElim lean_s684, 2
let lean_s713 := by timed flipCongrArg lean_s712 [Eq]
have lean_s714 : let68 := by timed rfl
have lean_s715 : (Eq let101 let68) := by timed congr lean_s713 lean_s714
let lean_s716 := by timed congr lean_s686 lean_s715
have lean_s717 : let100 := by andElim lean_s684, 1
let lean_s718 := by timed flipCongrArg lean_s717 [Eq]
have lean_s719 : let33 := by timed rfl
have lean_s720 : (Eq let100 let33) := by timed congr lean_s718 lean_s719
let lean_s721 := by timed congr lean_s686 lean_s720
have lean_s722 : let30 := by andElim lean_s684, 5
have lean_s723 : (Eq let97 let39) := by timed flipCongrArg lean_s722 [Not]
let lean_s724 := by timed flipCongrArg lean_s723 [Eq]
let lean_s725 := by timed flipCongrArg lean_s690 [Eq]
have lean_s726 : let236 := by timed flipCongrArg lean_s712 [Extractx5f1x5f7x5f7x5f8]
let lean_s727 := by timed flipCongrArg lean_s726 [Concatx5f32x5f1x5f31]
have lean_s728 : let163 := by timed rfl
have lean_s729 : let235 := by timed congr lean_s727 lean_s728
have lean_s730 : (Eq let94 let38) := by timed congr lean_s725 lean_s729
have lean_s731 : (Eq let95 let83) := by timed flipCongrArg lean_s730 [Not]
let lean_s732 := by timed flipCongrArg lean_s731 [Or]
let lean_s733 := by timed flipCongrArg lean_s690 [Eq]
have lean_s734 : (Eq let89 let12) := by timed flipCongrArg lean_s717 [Extractx5f1x5f7x5f7x5f8]
let lean_s735 := by timed flipCongrArg lean_s734 [Concatx5f32x5f1x5f31]
have lean_s736 : (Eq let90 let42) := by timed congr lean_s735 lean_s728
have lean_s737 : (Eq let91 let57) := by timed congr lean_s733 lean_s736
have lean_s738 : (Eq let96 let84) := by timed congr lean_s732 lean_s737
have lean_s739 : (Eq let98 let85) := by timed congr lean_s724 lean_s738
let lean_s740 := by timed congr lean_s686 lean_s739
let lean_s741 := by timed congr lean_s740 lean_s722
let lean_s742 := by timed congr lean_s721 lean_s741
let lean_s743 := by timed congr lean_s716 lean_s742
let lean_s744 := by timed congr lean_s711 lean_s743
let lean_s745 := by timed congr lean_s706 lean_s744
let lean_s746 := by timed congr lean_s701 lean_s745
have lean_s747 : (Eq let109 let87) := by timed congr lean_s688 lean_s746
have lean_s748 : (Eq yx2470 let87) := by timed Eq.trans lean_s685 lean_s747
have lean_s749 : let168 := by timed rfl
have lean_s750 : (Eq let79 let70) := by timed flipCongrArg lean_r24 [Not]
let lean_s751 := by timed flipCongrArg lean_s750 [Or]
have lean_s752 : (Eq let80 let71) := by timed congr lean_s751 lean_r41
have lean_s753 : (Eq let81 let71) := by timed Eq.trans lean_r36 lean_s752
let lean_s754 := by timed congr lean_s749 lean_s753
let lean_s755 := by timed congr lean_s749 lean_r33
let lean_s756 := by timed congr lean_s749 lean_r32
let lean_s757 := by timed congr lean_s749 lean_r30
let lean_s758 := by timed congr lean_s749 lean_r12
let lean_s759 := by timed flipCongrArg lean_r15 [Eq]
have lean_s760 : (Eq let83 let39) := by timed flipCongrArg lean_r14 [Not]
have lean_s761 : (Eq let83 False) := by timed Eq.trans lean_s760 lean_r15
let lean_s762 := by timed flipCongrArg lean_s761 [Or]
have lean_s763 : (Eq let84 let48) := by timed congr lean_s762 lean_r23
have lean_s764 : (Eq let84 let43) := by timed Eq.trans lean_s763 lean_r19
have lean_s765 : (Eq let85 let45) := by timed congr lean_s759 lean_s764
have lean_s766 : (Eq let85 let44) := by timed Eq.trans lean_s765 lean_r17
let lean_s767 := by timed congr lean_s758 lean_s766
let lean_s768 := by timed congr lean_s757 lean_s767
let lean_s769 := by timed congr lean_s756 lean_s768
let lean_s770 := by timed congr lean_s755 lean_s769
have lean_s771 : (Eq let86 let73) := by timed congr lean_s754 lean_s770
have lean_s772 : (Eq let86 let72) := by timed Eq.trans lean_s771 lean_r31
have lean_s773 : (Eq let87 let72) := by timed Eq.trans lean_r39 lean_s772
have lean_s774 : (Eq yx2470 let72) := by timed Eq.trans lean_s748 lean_s773
have lean_s775 : let167 := by timed rfl
have lean_s776 : let31 := by timed rfl
let lean_s777 := by timed flipCongrArg lean_s776 [Eq]
have lean_s778 : let31 := by timed rfl
have lean_s779 : let167 := by timed congr lean_s777 lean_s778
let lean_s780 := by timed Eq.trans lean_s775 lean_s779
have lean_s781 : let32 := by timed Eq.trans lean_s780 lean_r11
have lean_s782 : let31 := by timed trueElim lean_s781
let lean_s783 := by timed flipCongrArg lean_s782 [Concatx5f32x5f1x5f31]
have lean_s784 : let163 := by timed rfl
have lean_s785 : let166 := by timed congr lean_s783 lean_s784
let lean_s786 := by timed flipCongrArg lean_s785 [Eq]
have lean_s787 : let23 := by timed rfl
have lean_s788 : let22 := by timed rfl
let lean_s789 := by timed flipCongrArg lean_s788 [Eq]
have lean_s790 : let22 := by timed rfl
have lean_s791 : let23 := by timed congr lean_s789 lean_s790
let lean_s792 := by timed Eq.trans lean_s787 lean_s791
have lean_s793 : let66 := by timed Eq.trans lean_s792 lean_r28
have lean_s794 : let22 := by timed trueElim lean_s793
let lean_s795 := by timed flipCongrArg lean_s794 [Concatx5f32x5f1x5f31]
have lean_s796 : let38 := by timed congr lean_s795 lean_s784
have lean_s797 : (Eq let59 let59) := by timed congr lean_s786 lean_s796
have lean_s798 : let82 := by timed Eq.trans lean_s797 lean_r38
have lean_s799 : (Eq let70 let79) := by timed flipCongrArg lean_s798 [Not]
let lean_s800 := by timed flipCongrArg lean_s799 [Or]
have lean_s801 : let46 := by timed trueElim lean_s34
let lean_s802 := by timed flipCongrArg lean_s801 [Concatx5f32x5f1x5f31]
have lean_s803 : let164 := by timed congr lean_s802 lean_s784
let lean_s804 := by timed flipCongrArg lean_s803 [Eq]
have lean_s805 : (Eq let53 let53) := by timed congr lean_s804 lean_s796
have lean_s806 : let54 := by timed Eq.trans lean_s805 lean_r21
have lean_s807 : (Eq let71 let80) := by timed congr lean_s800 lean_s806
let lean_s808 := by timed flipCongrArg lean_s807 [And]
have lean_s809 : let36 := by timed rfl
have lean_s810 : let35 := by timed rfl
let lean_s811 := by timed flipCongrArg lean_s810 [Eq]
have lean_s812 : let35 := by timed rfl
have lean_s813 : let36 := by timed congr lean_s811 lean_s812
let lean_s814 := by timed Eq.trans lean_s809 lean_s813
have lean_s815 : let67 := by timed Eq.trans lean_s814 lean_r29
have lean_s816 : let35 := by timed trueElim lean_s815
let lean_s817 := by timed flipCongrArg lean_s816 [Concatx5f32x5f1x5f31]
have lean_s818 : (Eq let42 let42) := by timed congr lean_s817 lean_s784
let lean_s819 := by timed flipCongrArg lean_s818 [Eq]
have lean_s820 : (Eq let43 let43) := by timed congr lean_s819 lean_s796
have lean_s821 : let77 := by timed Eq.trans lean_s820 lean_r34
have lean_s822 : (Eq let44 let161) := by timed flipCongrArg lean_s821 [Not]
have lean_s823 : (Eq let72 let162) := by timed congr lean_s808 lean_s822
have lean_s824 : (Eq yx2470 let162) := by timed Eq.trans lean_s774 lean_s823
have lean_s825 : let162 := by timed eqResolve lean_a70 lean_s824
have lean_s826 : let80 := by andElim lean_s825, 0
have lean_s827 : (Or let52 let79) := by permutateOr lean_s826, [1, 0], (- 1)
have lean_s828 : (Or let300 (Or let7 let19)) := by timed cnfAndNeg [let6, let18]
have lean_s829 : let299 :=
  (scope (fun lean_a77 : let6 =>
    (scope (fun lean_a78 : let18 =>
      have lean_s829 : let255 := by timed trueIntro lean_a78
      have lean_s830 : let298 := by timed trueIntro lean_a77
      have lean_s831 : (Eq True let6) := by timed Eq.symm lean_s830
      have lean_s832 : let291 := by timed Eq.trans lean_s829 lean_s831
      let lean_s833 := by timed flipCongrArg lean_s832 [Concatx5f32x5f1x5f31]
      have lean_s834 : let163 := by timed rfl
      have lean_s835 : let60 := by timed congr lean_s833 lean_s834
      show let60 from lean_s835
  ))))
have lean_s830 : (Implies let300 let60) := by liftOrNToImp lean_s829, 2
have lean_s831 : (Or (Not let300) let60) := by timed impliesElim lean_s830
have lean_s832 : let299 := by R1 lean_s828, lean_s831, let300, [(- 1), (- 1)]
have lean_s833 : (Or let60 (Or let19 let7)) := by permutateOr lean_s832, [2, 1, 0], (- 1)
have lean_s834 : let22 := by timed rfl
have lean_s835 : let245 := by timed rfl
have lean_s836 : let68 := by timed rfl
let lean_s837 := by timed flipCongrArg lean_s836 [Eq]
have lean_s838 : let68 := by timed rfl
have lean_s839 : let245 := by timed congr lean_s837 lean_s838
let lean_s840 := by timed Eq.trans lean_s835 lean_s839
have lean_s841 : let69 := by timed Eq.trans lean_s840 lean_r30
have lean_s842 : let68 := by timed trueElim lean_s841
have lean_s843 : let22 := by timed flipCongrArg lean_s842 [Extractx5f1x5f7x5f7x5f8]
let lean_s844 := by timed flipCongrArg lean_s843 [Eq]
have lean_s845 : let22 := by timed rfl
have lean_s846 : let23 := by timed congr lean_s844 lean_s845
have lean_s847 : let23 := by timed Eq.trans lean_s846 lean_r6
have lean_s848 : let23 := by timed Eq.trans lean_r6 lean_s847
have lean_s849 : let22 := by timed eqResolve lean_s834 lean_s848
have lean_s850 : let250 := by timed equivElim2 lean_s849
let lean_s851 := by R2 lean_s833, lean_s850, let18, [(- 1), (- 1)]
have lean_s852 : (Or let297 let295) := by timed cnfAndNeg [let6, let24]
have lean_s853 : let296 :=
  (scope (fun lean_a79 : let6 =>
    (scope (fun lean_a80 : let24 =>
      have lean_s853 : let25 := by timed Eq.symm lean_a80
      have lean_s854 : let291 := by timed flipCongrArg lean_s853 [Extractx5f1x5f7x5f7x5f8]
      have lean_s855 : let298 := by timed trueIntro lean_a79
      have lean_s856 : let255 := by timed Eq.trans lean_s854 lean_s855
      have lean_s857 : let18 := by timed trueElim lean_s856
      show let18 from lean_s857
  ))))
have lean_s854 : (Implies let297 let18) := by liftOrNToImp lean_s853, 2
have lean_s855 : (Or (Not let297) let18) := by timed impliesElim lean_s854
have lean_s856 : let296 := by R1 lean_s852, lean_s855, let297, [(- 1), (- 1)]
have lean_s857 : (Or let18 let295) := by permutateOr lean_s856, [2, 0, 1], (- 1)
let lean_s858 := by R2 lean_s851, lean_s857, let18, [(- 1), (- 1)]
have lean_s859 : let31 := by timed trueElim lean_s781
have lean_s860 : let282 := by timed equivElim2 lean_s859
have lean_s861 : (Or let60 (Or let7 (Or let280 let7))) := by R2 lean_s858, lean_s860, let6, [(- 1), (- 1)]
have lean_s862 : (Or let60 let295) := by factor lean_s861, 3
have lean_s863 : (Or let294 (Or let8 let20)) := by timed cnfAndNeg [let7, let19]
have lean_s864 : let293 :=
  (scope (fun lean_a80 : let7 =>
    (scope (fun lean_a81 : let19 =>
      have lean_s864 : let272 := by timed falseIntro lean_a81
      have lean_s865 : let290 := by timed falseIntro lean_a80
      have lean_s866 : (Eq False let6) := by timed Eq.symm lean_s865
      have lean_s867 : let291 := by timed Eq.trans lean_s864 lean_s866
      let lean_s868 := by timed flipCongrArg lean_s867 [Concatx5f32x5f1x5f31]
      have lean_s869 : let163 := by timed rfl
      have lean_s870 : let60 := by timed congr lean_s868 lean_s869
      show let60 from lean_s870
  ))))
have lean_s865 : (Implies let294 let60) := by liftOrNToImp lean_s864, 2
have lean_s866 : (Or (Not let294) let60) := by timed impliesElim lean_s865
have lean_s867 : let293 := by R1 lean_s863, lean_s866, let294, [(- 1), (- 1)]
have lean_s868 : let266 := by timed rfl
have lean_s869 : let31 := by timed rfl
let lean_s870 := by timed flipCongrArg lean_s869 [Eq]
have lean_s871 : let288 := by timed congr lean_s870 lean_r37
have lean_s872 : let287 := by timed Eq.trans lean_s871 lean_r11
have lean_s873 : let286 := by timed Eq.trans lean_r2 lean_s872
have lean_s874 : let10 := by timed trueElim lean_s873
let lean_s875 := by timed congr lean_s868 lean_s874
have lean_s876 : let22 := by timed rfl
let lean_s877 := by timed flipCongrArg lean_s876 [Eq]
have lean_s878 : let269 := by timed congr lean_s877 lean_r5
have lean_s879 : let268 := by timed Eq.trans lean_s878 lean_r28
have lean_s880 : let267 := by timed Eq.trans lean_r26 lean_s879
have lean_s881 : let21 := by timed trueElim lean_s880
let lean_s882 := by timed congr lean_s868 lean_s881
have lean_s883 : (Eq let60 let60) := by timed rfl
let lean_s884 := by timed congr lean_s882 lean_s883
have lean_s885 : (Eq let293 let292) := by timed congr lean_s875 lean_s884
have lean_s886 : let292 := by timed eqResolve lean_s867 lean_s885
have lean_s887 : (Or let18 (Or let6 let60)) := by permutateOr lean_s886, [1, 0, 2], (- 1)
have lean_s888 : (Or let19 let18) := by timed equivElim1 lean_s849
have lean_s889 : let250 := by permutateOr lean_s888, [1, 0], (- 1)
let lean_s890 := by R1 lean_s887, lean_s889, let18, [(- 1), (- 1)]
have lean_s891 : (Or let289 (Or let8 let280)) := by timed cnfAndNeg [let7, let24]
have lean_s892 : let285 :=
  (scope (fun lean_a82 : let7 =>
    (scope (fun lean_a83 : let24 =>
      have lean_s892 : let25 := by timed Eq.symm lean_a83
      have lean_s893 : let291 := by timed flipCongrArg lean_s892 [Extractx5f1x5f7x5f7x5f8]
      have lean_s894 : let290 := by timed falseIntro lean_a82
      have lean_s895 : let272 := by timed Eq.trans lean_s893 lean_s894
      have lean_s896 : let19 := by timed falseElim lean_s895
      show let19 from lean_s896
  ))))
have lean_s893 : (Implies let289 let19) := by liftOrNToImp lean_s892, 2
have lean_s894 : (Or (Not let289) let19) := by timed impliesElim lean_s893
have lean_s895 : let285 := by R1 lean_s891, lean_s894, let289, [(- 1), (- 1)]
have lean_s896 : let266 := by timed rfl
have lean_s897 : let31 := by timed rfl
let lean_s898 := by timed flipCongrArg lean_s897 [Eq]
have lean_s899 : let288 := by timed congr lean_s898 lean_r37
have lean_s900 : let287 := by timed Eq.trans lean_s899 lean_r11
have lean_s901 : let286 := by timed Eq.trans lean_r2 lean_s900
have lean_s902 : let10 := by timed trueElim lean_s901
let lean_s903 := by timed congr lean_s896 lean_s902
have lean_s904 : (Eq let280 let280) := by timed rfl
let lean_s905 := by timed congr lean_s896 lean_s904
have lean_s906 : (Eq let19 let19) := by timed rfl
let lean_s907 := by timed congr lean_s905 lean_s906
have lean_s908 : (Eq let285 let284) := by timed congr lean_s903 lean_s907
have lean_s909 : let284 := by timed eqResolve lean_s895 lean_s908
have lean_s910 : (Or let6 (Or let19 let280)) := by permutateOr lean_s909, [0, 2, 1], (- 1)
let lean_s911 := by R1 lean_s890, lean_s910, let18, [(- 1), (- 1)]
have lean_s912 : (Or let7 let6) := by timed equivElim1 lean_s859
have lean_s913 : let282 := by permutateOr lean_s912, [1, 0], (- 1)
have lean_s914 : (Or let6 (Or let60 (Or let280 let6))) := by R1 lean_s911, lean_s913, let6, [(- 1), (- 1)]
have lean_s915 : (Or let6 let281) := by factor lean_s914, 3
have lean_s916 : (Or let60 (Or let280 let281)) := by R2 lean_s862, lean_s915, let6, [(- 1), (- 1)]
have lean_s917 : let281 := by factor lean_s916, (- 1)
have lean_s918 : let244 := by timed iteIntro
have lean_s919 : let74 := by timed rfl
have lean_s920 : let68 := by timed trueElim lean_s841
let lean_s921 := by timed flipCongrArg lean_s920 [Eq]
have lean_s922 : let218 := by timed rfl
have lean_s923 : (Eq let25 let25) := by timed congr lean_s921 lean_s922
let lean_s924 := by timed flipCongrArg lean_s920 [Eq]
have lean_s925 : let219 := by timed rfl
have lean_s926 : (Eq let27 let27) := by timed congr lean_s924 lean_s925
have lean_s927 : (Eq let244 let244) := by timed congrIte lean_s919 lean_s923 lean_s926
have lean_s928 : let244 := by timed eqResolve lean_s918 lean_s927
have lean_s929 : let74 := by timed rfl
have lean_s930 : (Eq let244 let243) := by timed congrIte lean_s929 lean_r7 lean_r8
have lean_s931 : let243 := by timed eqResolve lean_s928 lean_s930
have lean_s932 : (Or let40 let24) := by timed iteElim1 lean_s931
have lean_s933 : (Or let278 (Or let14 let20)) := by timed cnfAndNeg [let13, let19]
have lean_s934 : let274 :=
  (scope (fun lean_a82 : let13 =>
    (scope (fun lean_a83 : let19 =>
      have lean_s934 : let272 := by timed falseIntro lean_a83
      have lean_s935 : let271 := by timed falseIntro lean_a82
      have lean_s936 : let279 := by timed Eq.symm lean_s935
      have lean_s937 : let261 := by timed Eq.trans lean_s934 lean_s936
      let lean_s938 := by timed flipCongrArg lean_s937 [Concatx5f32x5f1x5f31]
      have lean_s939 : let163 := by timed rfl
      have lean_s940 : let57 := by timed congr lean_s938 lean_s939
      show let57 from lean_s940
  ))))
have lean_s935 : (Implies let278 let57) := by liftOrNToImp lean_s934, 2
have lean_s936 : (Or (Not let278) let57) := by timed impliesElim lean_s935
have lean_s937 : let274 := by R1 lean_s933, lean_s936, let278, [(- 1), (- 1)]
have lean_s938 : let266 := by timed rfl
let lean_s939 := by timed congr lean_s938 lean_s11
let lean_s940 := by timed congr lean_s938 lean_s881
let lean_s941 := by timed congr lean_s940 lean_s22
have lean_s942 : (Eq let274 let273) := by timed congr lean_s939 lean_s941
have lean_s943 : let273 := by timed eqResolve lean_s937 lean_s942
have lean_s944 : (Or let18 (Or let12 let57)) := by permutateOr lean_s943, [1, 0, 2], (- 1)
have lean_s945 : let161 := by andElim lean_s825, 1
let lean_s946 := by R1 lean_s944, lean_s945, let57, [(- 1), 0]
have lean_s947 : (Or let13 let12) := by timed equivElim1 lean_s72
have lean_s948 : let258 := by permutateOr lean_s947, [1, 0], (- 1)
let lean_s949 := by R1 lean_s946, lean_s948, let12, [(- 1), (- 1)]
have lean_s950 : (Or let270 (Or let20 let248)) := by timed cnfAndNeg [let19, let26, let28]
have lean_s951 : let265 :=
  (scope (fun lean_a82 : let19 =>
    (scope (fun lean_a83 : let26 =>
      (scope (fun lean_a84 : let28 =>
        have lean_s951 : let29 := by timed Eq.symm lean_a84
        have lean_s952 : let27 := by timed Eq.symm lean_a83
        have lean_s953 : let26 := by timed Eq.symm lean_s952
        have lean_s954 : let257 := by timed Eq.trans lean_s951 lean_s953
        have lean_s955 : let256 := by timed flipCongrArg lean_s954 [Extractx5f1x5f7x5f7x5f8]
        have lean_s956 : let272 := by timed falseIntro lean_a82
        have lean_s957 : let271 := by timed Eq.trans lean_s955 lean_s956
        have lean_s958 : let13 := by timed falseElim lean_s957
        show let13 from lean_s958
  ))))))
have lean_s952 : (Implies let270 let13) := by liftOrNToImp lean_s951, 3
have lean_s953 : (Or (Not let270) let13) := by timed impliesElim lean_s952
have lean_s954 : let265 := by R1 lean_s950, lean_s953, let270, [(- 1), (- 1)]
have lean_s955 : let266 := by timed rfl
have lean_s956 : let22 := by timed rfl
let lean_s957 := by timed flipCongrArg lean_s956 [Eq]
have lean_s958 : let269 := by timed congr lean_s957 lean_r5
have lean_s959 : let268 := by timed Eq.trans lean_s958 lean_r28
have lean_s960 : let267 := by timed Eq.trans lean_r26 lean_s959
have lean_s961 : let21 := by timed trueElim lean_s960
let lean_s962 := by timed congr lean_s955 lean_s961
have lean_s963 : (Eq let247 let247) := by timed rfl
let lean_s964 := by timed congr lean_s955 lean_s963
have lean_s965 : (Eq let246 let246) := by timed rfl
let lean_s966 := by timed congr lean_s955 lean_s965
have lean_s967 : (Eq let13 let13) := by timed rfl
let lean_s968 := by timed congr lean_s966 lean_s967
let lean_s969 := by timed congr lean_s964 lean_s968
have lean_s970 : (Eq let265 let264) := by timed congr lean_s962 lean_s969
have lean_s971 : let264 := by timed eqResolve lean_s954 lean_s970
have lean_s972 : (Or let18 (Or let13 let248)) := by permutateOr lean_s971, [0, 3, 1, 2], (- 1)
let lean_s973 := by R1 lean_s949, lean_s972, let12, [(- 1), (- 1)]
have lean_s974 : (Or let18 (Or let247 (Or let246 let18))) := by R1 lean_s973, lean_s850, let18, [(- 1), (- 1)]
have lean_s975 : (Or let18 let248) := by factor lean_s974, 3
have lean_s976 : (Or let260 (Or let13 let19)) := by timed cnfAndNeg [let12, let18]
have lean_s977 : let259 :=
  (scope (fun lean_a84 : let12 =>
    (scope (fun lean_a85 : let18 =>
      have lean_s977 : let255 := by timed trueIntro lean_a85
      have lean_s978 : let254 := by timed trueIntro lean_a84
      have lean_s979 : let262 := by timed Eq.symm lean_s978
      have lean_s980 : let261 := by timed Eq.trans lean_s977 lean_s979
      let lean_s981 := by timed flipCongrArg lean_s980 [Concatx5f32x5f1x5f31]
      have lean_s982 : let163 := by timed rfl
      have lean_s983 : let57 := by timed congr lean_s981 lean_s982
      show let57 from lean_s983
  ))))
have lean_s978 : (Implies let260 let57) := by liftOrNToImp lean_s977, 2
have lean_s979 : (Or (Not let260) let57) := by timed impliesElim lean_s978
have lean_s980 : let259 := by R1 lean_s976, lean_s979, let260, [(- 1), (- 1)]
have lean_s981 : (Or let57 (Or let19 let13)) := by permutateOr lean_s980, [2, 1, 0], (- 1)
let lean_s982 := by R1 lean_s981, lean_s945, let57, [(- 1), 0]
let lean_s983 := by R2 lean_s982, lean_s73, let12, [(- 1), (- 1)]
have lean_s984 : (Or let253 let249) := by timed cnfAndNeg [let18, let26, let28]
have lean_s985 : let251 :=
  (scope (fun lean_a84 : let18 =>
    (scope (fun lean_a85 : let26 =>
      (scope (fun lean_a86 : let28 =>
        have lean_s985 : let29 := by timed Eq.symm lean_a86
        have lean_s986 : let27 := by timed Eq.symm lean_a85
        have lean_s987 : let26 := by timed Eq.symm lean_s986
        have lean_s988 : let257 := by timed Eq.trans lean_s985 lean_s987
        have lean_s989 : let256 := by timed flipCongrArg lean_s988 [Extractx5f1x5f7x5f7x5f8]
        have lean_s990 : let255 := by timed trueIntro lean_a84
        have lean_s991 : let254 := by timed Eq.trans lean_s989 lean_s990
        have lean_s992 : let12 := by timed trueElim lean_s991
        show let12 from lean_s992
  ))))))
have lean_s986 : (Implies let253 let12) := by liftOrNToImp lean_s985, 3
have lean_s987 : (Or (Not let253) let12) := by timed impliesElim lean_s986
have lean_s988 : let251 := by R1 lean_s984, lean_s987, let253, [(- 1), (- 1)]
have lean_s989 : (Or let12 let249) := by permutateOr lean_s988, [3, 0, 1, 2], (- 1)
let lean_s990 := by R2 lean_s983, lean_s989, let12, [(- 1), (- 1)]
have lean_s991 : (Or let19 (Or let247 (Or let246 let19))) := by R2 lean_s990, lean_s889, let18, [(- 1), (- 1)]
have lean_s992 : let249 := by factor lean_s991, 3
have lean_s993 : (Or let247 (Or let246 let248)) := by R1 lean_s975, lean_s992, let18, [(- 1), (- 1)]
have lean_s994 : let248 := by factor lean_s993, (- 1)
have lean_s995 : (Or yx24statox24nextx5frhsx5fop let26) := by timed iteElim2 lean_s931
let lean_s996 := by R2 lean_s994, lean_s995, let26, [(- 1), (- 1)]
have lean_s997 : let241 := by timed iteIntro
have lean_s998 : let74 := by timed rfl
have lean_s999 : let33 := by timed trueElim lean_s64
let lean_s1000 := by timed flipCongrArg lean_s999 [Eq]
have lean_s1001 : let222 := by timed rfl
have lean_s1002 : (Eq let56 let56) := by timed congr lean_s1000 lean_s1001
let lean_s1003 := by timed flipCongrArg lean_s999 [Eq]
have lean_s1004 : let219 := by timed rfl
have lean_s1005 : (Eq let29 let29) := by timed congr lean_s1003 lean_s1004
have lean_s1006 : (Eq let241 let241) := by timed congrIte lean_s998 lean_s1002 lean_s1005
have lean_s1007 : let241 := by timed eqResolve lean_s997 lean_s1006
have lean_s1008 : (Eq let241 let240) := by timed congrIte lean_s929 lean_r22 lean_r9
have lean_s1009 : let240 := by timed eqResolve lean_s1007 lean_s1008
have lean_s1010 : (Or yx24statox24nextx5frhsx5fop let28) := by timed iteElim2 lean_s1009
have lean_s1011 : (Or yx24statox24nextx5frhsx5fop yx24statox24nextx5frhsx5fop) := by R2 lean_s996, lean_s1010, let28, [(- 1), (- 1)]
have lean_s1012 : yx24statox24nextx5frhsx5fop := by factor lean_s1011, 1
have lean_s1013 : let24 := by R2 lean_s932, lean_s1012, yx24statox24nextx5frhsx5fop, [(- 1), 0]
have lean_s1014 : let60 := by R2 lean_s917, lean_s1013, let24, [(- 1), 0]
have lean_s1015 : let52 := by R2 lean_s827, lean_s1014, let60, [(- 1), 0]
let lean_s1016 := by R2 lean_s79, lean_s1015, let52, [(- 1), 0]
let lean_s1017 := by R1 lean_s1016, lean_s945, let57, [(- 1), 0]
have lean_s1018 : (Or let2 let1) := by timed equivElim1 lean_s35
have lean_s1019 : let307 := by permutateOr lean_s1018, [1, 0], (- 1)
let lean_s1020 := by R2 lean_s1017, lean_s1019, let1, [(- 1), (- 1)]
have lean_s1021 : (Or let304 let302) := by timed cnfAndNeg [let12, let55]
have lean_s1022 : let303 :=
  (scope (fun lean_a84 : let12 =>
    (scope (fun lean_a85 : let55 =>
      have lean_s1022 : let56 := by timed Eq.symm lean_a85
      have lean_s1023 : let55 := by timed Eq.symm lean_s1022
      have lean_s1024 : let306 := by timed flipCongrArg lean_s1023 [Extractx5f1x5f7x5f7x5f8]
      have lean_s1025 : let254 := by timed trueIntro lean_a84
      have lean_s1026 : let305 := by timed Eq.trans lean_s1024 lean_s1025
      have lean_s1027 : let1 := by timed trueElim lean_s1026
      show let1 from lean_s1027
  ))))
have lean_s1023 : (Implies let304 let1) := by liftOrNToImp lean_s1022, 2
have lean_s1024 : (Or (Not let304) let1) := by timed impliesElim lean_s1023
have lean_s1025 : let303 := by R1 lean_s1021, lean_s1024, let304, [(- 1), (- 1)]
have lean_s1026 : (Or let1 let302) := by permutateOr lean_s1025, [2, 0, 1], (- 1)
let lean_s1027 := by R2 lean_s1020, lean_s1026, let1, [(- 1), (- 1)]
have lean_s1028 : (Or let40 let55) := by timed iteElim1 lean_s1009
have lean_s1029 : let55 := by R2 lean_s1028, lean_s1012, yx24statox24nextx5frhsx5fop, [(- 1), 0]
let lean_s1030 := by R2 lean_s1027, lean_s1029, let55, [(- 1), 0]
have lean_s1031 : (Or let13 let13) := by R2 lean_s1030, lean_s948, let12, [(- 1), (- 1)]
have lean_s1032 : let13 := by factor lean_s1031, 1
have lean_s1033 : let13 := by R1 lean_s73, lean_s1032, let12, [(- 1), 0]
let lean_s1034 := by R1 lean_s56, lean_s1033, let12, [(- 1), 0]
have lean_s1035 : let2 := by R2 lean_s1034, lean_s1029, let55, [(- 1), 0]
have lean_s1036 : let2 := by R1 lean_s36, lean_s1035, let1, [(- 1), 0]
let lean_s1037 := by R1 lean_s27, lean_s1036, let1, [(- 1), 0]
let lean_s1038 := by R1 lean_s1037, lean_s1032, let12, [(- 1), 0]
let lean_s1039 := by R2 lean_s1038, lean_s1015, let52, [(- 1), 0]
exact (show False from by R1 lean_s1039, lean_s945, let57, [0, 0])


